<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="a60da6ae1477278e788b56dd12901cf6a9b5b818" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; to the value returned by &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; if you want random integers instead of random fractional numbers. For example,</source>
          <target state="translated">Aplique &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; al valor devuelto por &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; si desea n&amp;uacute;meros enteros aleatorios en lugar de n&amp;uacute;meros fraccionarios aleatorios. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="974cf6b03d0010e4742b565eeb776443fe41243e" translate="yes" xml:space="preserve">
          <source>Apply Perl-specific heuristics to find the correct PODs. This includes stripping Perl-like extensions, omitting subdirectories that are numeric but do</source>
          <target state="translated">Aplica la heurística específica de Perl para encontrar los PODs correctos.Esto incluye la eliminación de las extensiones similares a Perl,omitiendo los subdirectorios que son numéricos pero que</target>
        </trans-unit>
        <trans-unit id="baaa234761c2eef7e15c7c661df9bd832e32f420" translate="yes" xml:space="preserve">
          <source>Apply a list of switch options to the state, updating the internal object state as a result. Nothing is returned.</source>
          <target state="translated">Aplicar una lista de opciones de conmutación al estado,actualizando el estado del objeto interno como resultado.No se devuelve nada.</target>
        </trans-unit>
        <trans-unit id="c72c1cee8e4b08228a22dc9c5e025abf27a61b14" translate="yes" xml:space="preserve">
          <source>Applying &lt;code&gt;autodie&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; causes the exotic forms &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; { $cmd } @args &lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; { $cmd } @args&lt;/code&gt; to be considered a syntax error until the end of the lexical scope. If you really need to use the exotic form, you can call &lt;code&gt;CORE::system&lt;/code&gt; or &lt;code&gt;CORE::exec&lt;/code&gt; instead, or use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; autodie qw(system exec)&lt;/code&gt; before calling the exotic form.</source>
          <target state="translated">Aplicar &lt;code&gt;autodie&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; hace que el &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; { $cmd } @args &lt;/code&gt; formas ex&amp;oacute;ticas {$ cmd} @args o &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; { $cmd } @args&lt;/code&gt; se considere un error de sintaxis hasta el final del &amp;aacute;mbito l&amp;eacute;xico. Si realmente necesita usar la forma ex&amp;oacute;tica, puede llamar a &lt;code&gt;CORE::system&lt;/code&gt; o &lt;code&gt;CORE::exec&lt;/code&gt; lugar, o usar &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; autodie qw(system exec)&lt;/code&gt; antes de llamar a la forma ex&amp;oacute;tica.</target>
        </trans-unit>
        <trans-unit id="7b6bbaf0846e0f6542bb5b50d36df38212d67922" translate="yes" xml:space="preserve">
          <source>Approximate Perl equivalent: &lt;code&gt;$myarray[$key] = $val;&lt;/code&gt; .</source>
          <target state="translated">Equivalente aproximado de Perl: &lt;code&gt;$myarray[$key] = $val;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="255706027acb3bbb6c23a2beab5baa7da2561792" translate="yes" xml:space="preserve">
          <source>Approximate Perl equivalent: &lt;code&gt;&amp;amp;{&quot;$sub_name&quot;}(@$argv)&lt;/code&gt; .</source>
          <target state="translated">Equivalente aproximado de Perl: &lt;code&gt;&amp;amp;{&quot;$sub_name&quot;}(@$argv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b7d5efdfeaa09de6b4d853375871c9207032b5a" translate="yes" xml:space="preserve">
          <source>April 04-07th, 1997: by Jarkko Hietaniemi, added the run-for-some-time functionality.</source>
          <target state="translated">Abril 04-07,1997:por Jarkko Hietaniemi,añadió la funcionalidad de correr por un tiempo.</target>
        </trans-unit>
        <trans-unit id="5383ba59b7a51b492dcc518df7e4190d4cdf46a1" translate="yes" xml:space="preserve">
          <source>Arbitrary big rational numbers</source>
          <target state="translated">Grandes números racionales arbitrarios</target>
        </trans-unit>
        <trans-unit id="d355876ea51e167fe43014294b56e66adbafd342" translate="yes" xml:space="preserve">
          <source>Arbitrary size floating point math package</source>
          <target state="translated">Paquete matemático de punto flotante de tamaño arbitrario</target>
        </trans-unit>
        <trans-unit id="94977ff2a6f2fcf0486458c46c172275ed7d1a6e" translate="yes" xml:space="preserve">
          <source>Arbitrary size integer/float math package</source>
          <target state="translated">Paquete matemático de tamaño arbitrario de entero/flotación</target>
        </trans-unit>
        <trans-unit id="f96ddf323d8050458b6f5da00e7d15254e6e51f7" translate="yes" xml:space="preserve">
          <source>Arch</source>
          <target state="translated">Arch</target>
        </trans-unit>
        <trans-unit id="ba6c5bbd1305838d356b1a16f613e5175253fc77" translate="yes" xml:space="preserve">
          <source>Archive::Tar</source>
          <target state="translated">Archive::Tar</target>
        </trans-unit>
        <trans-unit id="57cc32f42ad2d2bee580d99c3d374961c6559947" translate="yes" xml:space="preserve">
          <source>Archive::Tar - module for manipulations of tar archives</source>
          <target state="translated">Archivo::Alquitrán-módulo para manipular archivos de alquitrán</target>
        </trans-unit>
        <trans-unit id="987b760cdf9eb8e8f22f82c621b2dbe3ee552aeb" translate="yes" xml:space="preserve">
          <source>Archive::Tar provides an object oriented mechanism for handling tar files. It provides class methods for quick and easy files handling while also allowing for the creation of tar file objects for custom manipulation. If you have the IO::Zlib module installed, Archive::Tar will also support compressed or gzipped tar files.</source>
          <target state="translated">Archive::Tar proporciona un mecanismo orientado a objetos para manejar archivos de tar.Proporciona métodos de clase para el manejo rápido y fácil de los archivos,mientras que también permite la creación de objetos de archivos tar para la manipulación personalizada.Si tiene instalado el módulo IO::Zlib,Archive::Tar también soportará archivos tar comprimidos o comprimidos en gzip.</target>
        </trans-unit>
        <trans-unit id="7c0d8b6a96eeaeee2b14e15f99110273c20f8435" translate="yes" xml:space="preserve">
          <source>Archive::Tar will warn if you try to pass a bzip2 compressed file and the IO::Zlib / IO::Uncompress::Bunzip2 modules are not available and simply return.</source>
          <target state="translated">Archive::Tar avisará si intentas pasar un archivo comprimido en bzip2 y los módulos IO::Zlib/IO::Uncompress::Bunzip2 no están disponibles y simplemente vuelve.</target>
        </trans-unit>
        <trans-unit id="ccbf19882dacfbec62ca802f4c207f93b26aac20" translate="yes" xml:space="preserve">
          <source>Archive::Tar-&amp;gt;can_handle_compressed_files</source>
          <target state="translated">Archive::Tar-&amp;gt;can_handle_compressed_files</target>
        </trans-unit>
        <trans-unit id="3b7da738f6421ea5f244ab2a75337cb19a765083" translate="yes" xml:space="preserve">
          <source>Archive::Tar-&amp;gt;create_archive($file, $compressed, @filelist)</source>
          <target state="translated">Archivo :: Tar-&amp;gt; create_archive ($ archivo, $ comprimido, @filelist)</target>
        </trans-unit>
        <trans-unit id="1dcbd289acf336b4bc9986937face374b8265d16" translate="yes" xml:space="preserve">
          <source>Archive::Tar-&amp;gt;extract_archive($file, $compressed)</source>
          <target state="translated">Archivo :: Tar-&amp;gt; extract_archive ($ archivo, $ comprimido)</target>
        </trans-unit>
        <trans-unit id="8336b53d325ea70cb860e4292e999b5eb8ccc20b" translate="yes" xml:space="preserve">
          <source>Archive::Tar-&amp;gt;iter( $filename, [ $compressed, {opt =&amp;gt; $val} ] )</source>
          <target state="translated">Archivo :: Tar-&amp;gt; iter ($ nombre de archivo, [$ comprimido, {opt =&amp;gt; $ val}])</target>
        </trans-unit>
        <trans-unit id="7b5db2965e54185ceb8a82cfef6b3bcf83d67256" translate="yes" xml:space="preserve">
          <source>Archive::Tar-&amp;gt;list_archive($file, $compressed, [\@properties])</source>
          <target state="translated">Archivo :: Tar-&amp;gt; list_archive ($ archivo, $ comprimido, [\ @properties])</target>
        </trans-unit>
        <trans-unit id="2b89433003c5207f03c7ec11ee01b11e8497bdb8" translate="yes" xml:space="preserve">
          <source>Archive::Tar-&amp;gt;new( [$file, $compressed] )</source>
          <target state="translated">Archivo :: Tar-&amp;gt; nuevo ([$ archivo, $ comprimido])</target>
        </trans-unit>
        <trans-unit id="3fdd79ccbef7cb27b73af9645a51c4748537632a" translate="yes" xml:space="preserve">
          <source>Archive::Tar::File</source>
          <target state="translated">Archive::Tar::File</target>
        </trans-unit>
        <trans-unit id="e4450126317363219e2891fd96c92d67bb8fdb14" translate="yes" xml:space="preserve">
          <source>Archive::Tar::File - a subclass for in-memory extracted file from Archive::Tar</source>
          <target state="translated">Archivo::Tar::Archivo-una subclase para el archivo extraído en memoria del Archivo::Tar</target>
        </trans-unit>
        <trans-unit id="9bb643189669555fb8fc9a5ad660a12af02d7c6a" translate="yes" xml:space="preserve">
          <source>Archive::Tar::File-&amp;gt;new( chunk =&amp;gt; $chunk )</source>
          <target state="translated">Archivo :: Tar :: Archivo-&amp;gt; nuevo (fragmento =&amp;gt; $ fragmento)</target>
        </trans-unit>
        <trans-unit id="ba9618dfc7889be15218e3ccacc09c8bf242756f" translate="yes" xml:space="preserve">
          <source>Archive::Tar::File-&amp;gt;new( data =&amp;gt; $path, $data, $opt )</source>
          <target state="translated">Archivo :: Tar :: Archivo-&amp;gt; nuevo (datos =&amp;gt; $ ruta, $ datos, $ opt)</target>
        </trans-unit>
        <trans-unit id="a50e4ac8ad32b339e1eb6dee5ec96a58d21300c3" translate="yes" xml:space="preserve">
          <source>Archive::Tar::File-&amp;gt;new( file =&amp;gt; $path )</source>
          <target state="translated">Archivo :: Tar :: Archivo-&amp;gt; nuevo (archivo =&amp;gt; $ ruta)</target>
        </trans-unit>
        <trans-unit id="752ab891c175e9890243ad0568d1b63da7b75555" translate="yes" xml:space="preserve">
          <source>Archive::Tar::Files provides a neat little object layer for in-memory extracted files. It's mostly used internally in Archive::Tar to tidy up the code, but there's no reason users shouldn't use this API as well.</source>
          <target state="translated">Archivo::Tar::Archivos proporciona una pequeña capa de objetos para los archivos extraídos en la memoria.Se usa principalmente internamente en Archive::Tar para ordenar el código,pero no hay razón para que los usuarios no usen también esta API.</target>
        </trans-unit>
        <trans-unit id="2fa2e509f071fa28e01ed08cd42d1e6a982c1c93" translate="yes" xml:space="preserve">
          <source>Archiving and Compression</source>
          <target state="translated">Archivo y compresión</target>
        </trans-unit>
        <trans-unit id="470ed7908583fc807812b6f6f1c733d168001e41" translate="yes" xml:space="preserve">
          <source>Are Perl regexes DFAs or NFAs? Are they POSIX compliant?</source>
          <target state="translated">¿Son los regexes de Perl DFAs o NFAs? ¿Son compatibles con POSIX?</target>
        </trans-unit>
        <trans-unit id="eb00fa046e6f0e29e318d2fe47833f95b6115931" translate="yes" xml:space="preserve">
          <source>Are These Threads The Same?</source>
          <target state="translated">¿Son estos hilos lo mismo?</target>
        </trans-unit>
        <trans-unit id="4b1b74d280a485e3d6be58ac5945ac8cbddc5958" translate="yes" xml:space="preserve">
          <source>Are not yet implemented.</source>
          <target state="translated">Aún no se han implementado.</target>
        </trans-unit>
        <trans-unit id="1c7b6fd019a3db8f66c106580e36cbc2e27fdf91" translate="yes" xml:space="preserve">
          <source>Are you running Windows, and did you write</source>
          <target state="translated">¿Estás usando Windows,y escribiste</target>
        </trans-unit>
        <trans-unit id="9835fff08898bf6d47cdf47b75c3d5a32e54abb7" translate="yes" xml:space="preserve">
          <source>Are you using a really old version of Perl?</source>
          <target state="translated">¿Estás usando una versión muy antigua de Perl?</target>
        </trans-unit>
        <trans-unit id="6fa0e4cab9d0443ef8c9e6c56e4240cbc1230cdb" translate="yes" xml:space="preserve">
          <source>Arguably, these are the only routines you'll ever need to execute snippets of Perl code from within your C program. Your code can be as long as you wish; it can contain multiple statements; it can employ &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;, &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;, and &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; to include external Perl files.</source>
          <target state="translated">Podr&amp;iacute;a decirse que estas son las &amp;uacute;nicas rutinas que necesitar&amp;aacute; para ejecutar fragmentos de c&amp;oacute;digo Perl desde su programa C. Su c&amp;oacute;digo puede ser tan largo como desee; puede contener m&amp;uacute;ltiples declaraciones; puede emplear &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; , &lt;a href=&quot;functions/require&quot;&gt;requiera&lt;/a&gt; y &lt;a href=&quot;functions/do&quot;&gt;haga&lt;/a&gt; para incluir archivos Perl externos.</target>
        </trans-unit>
        <trans-unit id="068c4f93ca844add9151394d87be6f0eff5098cb" translate="yes" xml:space="preserve">
          <source>Argument callback</source>
          <target state="translated">Argumento de devolución de llamada</target>
        </trans-unit>
        <trans-unit id="becc16f3f9567f706b791b0867003075aa38f700" translate="yes" xml:space="preserve">
          <source>Argument stack</source>
          <target state="translated">La pila de argumentos</target>
        </trans-unit>
        <trans-unit id="9acc1ee24f849a6b6943c3856e23bafeb8ea115e" translate="yes" xml:space="preserve">
          <source>Argument stack manipulation in the core is exactly the same as it is in XSUBs - see &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; and &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; for a longer description of the macros used in stack manipulation.</source>
          <target state="translated">La manipulaci&amp;oacute;n de la pila de argumentos en el n&amp;uacute;cleo es exactamente la misma que en los XSUB; consulte &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; , &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; y &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; para obtener una descripci&amp;oacute;n m&amp;aacute;s detallada de las macros utilizadas en la manipulaci&amp;oacute;n de la pila.</target>
        </trans-unit>
        <trans-unit id="1e682d21a155016274d4c0edada169602cf2db63" translate="yes" xml:space="preserve">
          <source>Arguments are case insensitive.</source>
          <target state="translated">Los argumentos son insensibles a las mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="f350823ca978137e84ceb658074c062e77adbc5a" translate="yes" xml:space="preserve">
          <source>Arguments are forced into the integer format if not strings.</source>
          <target state="translated">Los argumentos son forzados en el formato de números enteros,si no en el de cuerdas.</target>
        </trans-unit>
        <trans-unit id="e574a112087c49e835619f8e2053ef81199f3165" translate="yes" xml:space="preserve">
          <source>Arguments are passed to PP code and returned from PP code using the argument stack, &lt;code&gt;ST&lt;/code&gt; . The typical way to handle arguments is to pop them off the stack, deal with them how you wish, and then push the result back onto the stack. This is how, for instance, the cosine operator works:</source>
          <target state="translated">Los argumentos se pasan al c&amp;oacute;digo PP y se devuelven desde el c&amp;oacute;digo PP utilizando la pila de argumentos, &lt;code&gt;ST&lt;/code&gt; . La forma t&amp;iacute;pica de manejar los argumentos es sacarlos de la pila, tratarlos como desee y luego devolver el resultado a la pila. As&amp;iacute; es como funciona, por ejemplo, el operador coseno:</target>
        </trans-unit>
        <trans-unit id="5fccb02bffe9af13a6b48fc881c2035657ec7bff" translate="yes" xml:space="preserve">
          <source>Arguments are usually formatted to be only as wide as required to display the given value. You can override the width by putting a number here, or get the width from the next argument (with &lt;code&gt;*&lt;/code&gt; ) or from a specified argument (e.g., with &lt;code&gt;*2$&lt;/code&gt;):</source>
          <target state="translated">Los argumentos generalmente se formatean para que sean tan anchos como sea necesario para mostrar el valor dado. Puede anular el ancho poniendo un n&amp;uacute;mero aqu&amp;iacute;, u obtener el ancho del siguiente argumento (con &lt;code&gt;*&lt;/code&gt; ) o de un argumento especificado (por ejemplo, con &lt;code&gt;*2$&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="4fb3861e253aa9c040fd66d90deafd1a6d71292f" translate="yes" xml:space="preserve">
          <source>Arguments of the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; directive are (key, value) pairs. For the full set of legal keys, see &lt;a href=&quot;#Overloadable-Operations&quot;&gt;Overloadable Operations&lt;/a&gt; below.</source>
          <target state="translated">Los argumentos de la directiva de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; son pares (clave, valor). Para obtener el conjunto completo de claves legales, consulte &lt;a href=&quot;#Overloadable-Operations&quot;&gt;Operaciones para sobrecargar a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5141dae339b17f35a7a4380f8f719ce252ef43f8" translate="yes" xml:space="preserve">
          <source>Arguments that don't start with a hyphen are taken to be the names of subroutines or formats to render; if no such functions are specified, the main body of the program (outside any subroutines, and not including use'd or require'd files) is rendered. Passing &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , or &lt;code&gt;END&lt;/code&gt; will cause all of the corresponding special blocks to be printed. Arguments must follow options.</source>
          <target state="translated">Los argumentos que no comienzan con un gui&amp;oacute;n se toman como nombres de subrutinas o formatos a representar; si no se especifican tales funciones, se representa el cuerpo principal del programa (fuera de las subrutinas, y sin incluir los archivos usados ​​o requeridos). Pasar &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; o &lt;code&gt;END&lt;/code&gt; har&amp;aacute; que se impriman todos los bloques especiales correspondientes. Los argumentos deben seguir las opciones.</target>
        </trans-unit>
        <trans-unit id="ce73d1bc99ee20ea72fd21908b3617e55e0813cc" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; are &lt;b&gt;not&lt;/b&gt; checked for taintedness.</source>
          <target state="translated">Los argumentos para &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; &lt;b&gt; no se&lt;/b&gt; comprueban para ver si est&amp;aacute;n contaminados.</target>
        </trans-unit>
        <trans-unit id="5b24aafc030974a768212046c7dad5ef0c74d247" translate="yes" xml:space="preserve">
          <source>Arguments to Tests</source>
          <target state="translated">Argumentos para las pruebas</target>
        </trans-unit>
        <trans-unit id="253657f116857073367b6474bc4203deb4236cb2" translate="yes" xml:space="preserve">
          <source>Arguments to be added to the command line</source>
          <target state="translated">Los argumentos que se añadirán a la línea de mando</target>
        </trans-unit>
        <trans-unit id="ef74aa3554ce37f3e92c7ca867fc499504f0b195" translate="yes" xml:space="preserve">
          <source>Arguments to these commands are either strings exactly matching the identification string of an object, or regular expressions matched case-insensitively against various attributes of the objects. The parser only recognizes a regular expression when you enclose it with slashes.</source>
          <target state="translated">Los argumentos de estos comandos son o bien cadenas que coinciden exactamente con la cadena de identificación de un objeto,o bien expresiones regulares que coinciden de manera insensible a los casos contra varios atributos de los objetos.El analizador sólo reconoce una expresión regular cuando la encierra con barras.</target>
        </trans-unit>
        <trans-unit id="a0478ca5f4c068ca3ac12f9474f6a15865ce9053" translate="yes" xml:space="preserve">
          <source>Arguments:</source>
          <target state="translated">Arguments:</target>
        </trans-unit>
        <trans-unit id="2007b9d426cd74d2705e9cb985a4b287291d5413" translate="yes" xml:space="preserve">
          <source>Arguments: COUNT is the number of times to run the loop, and CODE is the code to run. CODE may be either a code reference or a string to be eval'd; either way it will be run in the caller's package.</source>
          <target state="translated">Argumentos:COUNT es el número de veces que se ejecuta el bucle,y CODE es el código a ejecutar.CODIGO puede ser un código de referencia o una cadena a evaluar;de cualquier manera se ejecutará en el paquete del llamante.</target>
        </trans-unit>
        <trans-unit id="504073c25d9741031e514c8e9e91bef33965e548" translate="yes" xml:space="preserve">
          <source>Arguments: TIME is the minimum length of time to run CODE for, and CODE is the code to run. CODE may be either a code reference or a string to be eval'd; either way it will be run in the caller's package.</source>
          <target state="translated">Argumentos:El TIEMPO es el tiempo mínimo para ejecutar el CÓDIGO,y el CÓDIGO es el código a ejecutar.CODIGO puede ser un código de referencia o una cadena a evaluar;de cualquier manera se ejecutará en el paquete del llamante.</target>
        </trans-unit>
        <trans-unit id="2dd1feda95af0eae16b44852b3e991a7320b9877" translate="yes" xml:space="preserve">
          <source>Arnold, Ken and James Gosling. The Java Programming Language, 2nd ed. Addison-Wesley, 1998, ISBN 0-201-31006-6.</source>
          <target state="translated">Arnold,Ken y James Gosling.El lenguaje de programación Java,2ª edición.Addison-Wesley,1998,ISBN 0-201-31006-6.</target>
        </trans-unit>
        <trans-unit id="41b85d47773b3148f4f3a1e9d404f9d2d3175fa5" translate="yes" xml:space="preserve">
          <source>Arranges for FILEHANDLE to be read or written in &quot;binary&quot; or &quot;text&quot; mode on systems where the run-time libraries distinguish between binary and text files. If FILEHANDLE is an expression, the value is taken as the name of the filehandle. Returns true on success, otherwise it returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; (errno).</source>
          <target state="translated">Hace los arreglos para que FILEHANDLE se lea o escriba en modo &quot;binario&quot; o &quot;texto&quot; en sistemas donde las bibliotecas de tiempo de ejecuci&amp;oacute;n distinguen entre archivos binarios y de texto. Si FILEHANDLE es una expresi&amp;oacute;n, el valor se toma como el nombre del identificador de archivo. Devuelve verdadero en caso de &amp;eacute;xito, de lo contrario, devuelve &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; y establece &lt;code&gt;$!&lt;/code&gt; (errno).</target>
        </trans-unit>
        <trans-unit id="1ffbadba9c3dce1044ad3f375a7830b9eb0ed44f" translate="yes" xml:space="preserve">
          <source>Arranges for FILEHANDLE to be read or written in &quot;binary&quot; or &quot;text&quot; mode on systems where the run-time libraries distinguish between binary and text files. If FILEHANDLE is an expression, the value is taken as the name of the filehandle. Returns true on success, otherwise it returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; (errno).</source>
          <target state="translated">Hace los arreglos para que FILEHANDLE se lea o escriba en modo &quot;binario&quot; o &quot;texto&quot; en sistemas donde las bibliotecas de tiempo de ejecuci&amp;oacute;n distinguen entre archivos binarios y de texto. Si FILEHANDLE es una expresi&amp;oacute;n, el valor se toma como el nombre del identificador de archivo. Devuelve verdadero en caso de &amp;eacute;xito, de lo contrario, devuelve &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; y establece &lt;code&gt;$!&lt;/code&gt; (errno).</target>
        </trans-unit>
        <trans-unit id="343c9f92b2508f5809b499c36c6237ee53dad8e9" translate="yes" xml:space="preserve">
          <source>Arranges for a mutual exclusion lock to be obtained on sv if a suitable module has been loaded.</source>
          <target state="translated">Dispone que se obtenga un bloqueo de exclusión mutua en el sv si se ha cargado un módulo adecuado.</target>
        </trans-unit>
        <trans-unit id="a5173bbe458c53871d9b1f27fa09a96bfb62b86e" translate="yes" xml:space="preserve">
          <source>Arranges for sv to be shared between threads if a suitable module has been loaded.</source>
          <target state="translated">Hace que el sv se comparta entre los hilos si se ha cargado un módulo adecuado.</target>
        </trans-unit>
        <trans-unit id="5e55b4fcd8dbc2fd2ba6c045d961bacb9e292142" translate="yes" xml:space="preserve">
          <source>Arranges to have a SIGALRM delivered to this process after the specified number of wallclock seconds has elapsed. If SECONDS is not specified, the value stored in &lt;code&gt;$_&lt;/code&gt; is used. (On some machines, unfortunately, the elapsed time may be up to one second less or more than you specified because of how seconds are counted, and process scheduling may delay the delivery of the signal even further.)</source>
          <target state="translated">Organiza que se env&amp;iacute;e un SIGALRM a este proceso despu&amp;eacute;s de que haya transcurrido el n&amp;uacute;mero especificado de segundos del reloj de pared. Si no se especifica SECONDS, se utiliza el valor almacenado en &lt;code&gt;$_&lt;/code&gt; . (En algunas m&amp;aacute;quinas, desafortunadamente, el tiempo transcurrido puede ser hasta un segundo menos o m&amp;aacute;s de lo que especific&amp;oacute; debido a c&amp;oacute;mo se cuentan los segundos, y la programaci&amp;oacute;n del proceso puede retrasar a&amp;uacute;n m&amp;aacute;s la entrega de la se&amp;ntilde;al).</target>
        </trans-unit>
        <trans-unit id="fc39e6a09e8f437b433c2957e8745936c343df43" translate="yes" xml:space="preserve">
          <source>Array Interpolation</source>
          <target state="translated">Interpolación de matrices</target>
        </trans-unit>
        <trans-unit id="946f892404632d1e1ef312d460522dbcef0e5ca6" translate="yes" xml:space="preserve">
          <source>Array Manipulation Functions</source>
          <target state="translated">Funciones de manipulación de arreglos</target>
        </trans-unit>
        <trans-unit id="e55ce1c88c52594e868f7dcd4b7c1bf4e8ab55e6" translate="yes" xml:space="preserve">
          <source>Array of extension names to be included when doing a static build. MakeMaker will normally build with all of the installed extensions when doing a static build, and that is usually the desired behavior. If INCLUDE_EXT is present then MakeMaker will build only with those extensions which are explicitly mentioned. (e.g. [ qw( Socket POSIX ) ])</source>
          <target state="translated">Conjunto de nombres de extensiones que se incluirán cuando se haga una construcción estática.MakeMaker normalmente construirá con todas las extensiones instaladas cuando haga una construcción estática,y ese es normalmente el comportamiento deseado.Si INCLUDE_EXT está presente,MakeMaker sólo construirá con las extensiones que se mencionan explícitamente.(por ejemplo[qw(Socket POSIX)])</target>
        </trans-unit>
        <trans-unit id="1a8fc45517962d9406be17b19c25fe3aa87b4fd8" translate="yes" xml:space="preserve">
          <source>Array of extension names to exclude when doing a static build. This is ignored if INCLUDE_EXT is present. Consult INCLUDE_EXT for more details. (e.g. [ qw( Socket POSIX ) ] )</source>
          <target state="translated">Matriz de nombres de extensiones para excluir cuando se hace una construcción estática.Esto es ignorado si INCLUDE_EXT está presente.Consulte INCLUDE_EXT para más detalles.(por ejemplo[qw(Socket POSIX)])</target>
        </trans-unit>
        <trans-unit id="ab0eedcb736c58c9e1bf3d9da5ea7d522b690f73" translate="yes" xml:space="preserve">
          <source>Array of strings containing name (and email address) of package author(s). Is used in CPAN Meta files (META.yml or META.json) and PPD (Perl Package Description) files for PPM (Perl Package Manager).</source>
          <target state="translated">Conjunto de cadenas que contienen el nombre (y la dirección de correo electrónico)del autor o autores del paquete.Se utiliza en los archivos CPAN Meta (META.yml o META.json)y en los archivos PPD (Perl Package Description)para PPM (Perl Package Manager).</target>
        </trans-unit>
        <trans-unit id="c57f3a7023d5d1d3793f2eb3d27a157609936e28" translate="yes" xml:space="preserve">
          <source>Array of symbol names for variables to be made available as universal symbols. Used only under AIX, OS/2, VMS and Win32 at present. Defaults to []. (e.g. [ qw(Foo_version Foo_numstreams Foo_tree ) ])</source>
          <target state="translated">Matriz de nombres de símbolos para las variables que se pondrán a disposición como símbolos universales.Actualmente se utiliza sólo en AIX,OS/2,VMS y Win32.Por defecto es [].(e.g.[qw(Foo_version Foo_numstreams Foo_tree)])</target>
        </trans-unit>
        <trans-unit id="9ab44c94b1ea31feff632108e9870b5e1654c616" translate="yes" xml:space="preserve">
          <source>Array operations, which change the scalars, rearrange them, or add or subtract some scalars, only work on arrays. These can't work on a list, which is fixed. Array operations include &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Las operaciones de matriz, que cambian los escalares, los reorganizan o suman o restan algunos escalares, solo funcionan en matrices. Estos no pueden funcionar en una lista, que est&amp;aacute; arreglada. Las operaciones de la matriz incluyen &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70c97244599437a3af8dc620ee670c18edb6906b" translate="yes" xml:space="preserve">
          <source>Array size can be obtained by doing:</source>
          <target state="translated">El tamaño de la matriz se puede obtener haciendo:</target>
        </trans-unit>
        <trans-unit id="4958f544bd9596999a8c5e79c668a1a1962b374e" translate="yes" xml:space="preserve">
          <source>Array, indexed by opcode, of functions that will be called for the &quot;check&quot; phase of optree building during compilation of Perl code. For most (but not all) types of op, once the op has been initially built and populated with child ops it will be filtered through the check function referenced by the appropriate element of this array. The new op is passed in as the sole argument to the check function, and the check function returns the completed op. The check function may (as the name suggests) check the op for validity and signal errors. It may also initialise or modify parts of the ops, or perform more radical surgery such as adding or removing child ops, or even throw the op away and return a different op in its place.</source>
          <target state="translated">Conjunto,indexado por opcode,de funciones que se llamarán para la fase de &quot;comprobación&quot; de la construcción de optree durante la compilación del código Perl.En el caso de la mayoría de los tipos de operaciones (pero no todos),una vez que la operación se ha construido inicialmente y se ha poblado con operaciones infantiles,se filtrará a través de la función de verificación referida por el elemento apropiado de esta matriz.La nueva operación se pasa como único argumento a la función de comprobación,y la función de comprobación devuelve la operación completada.La función de comprobación puede (como su nombre indica)comprobar la validez de la operación y señalar errores.También puede inicializar o modificar partes de las operaciones,o realizar una cirugía más radical como añadir o eliminar operaciones infantiles,o incluso tirar la operación y devolver una operación diferente en su lugar.</target>
        </trans-unit>
        <trans-unit id="7622ad2f459420f8cf1278b446072cfedac9e366" translate="yes" xml:space="preserve">
          <source>Arrayref. E.g. [qw(archname manext)] defines ARCHNAME &amp;amp; MANEXT from config.sh. MakeMaker will add to CONFIG the following values anyway: ar cc cccdlflags ccdlflags dlext dlsrc ld lddlflags ldflags libc lib_ext obj_ext ranlib sitelibexp sitearchexp so</source>
          <target state="translated">Arrayref. Por ejemplo, [qw (archname manext)] define ARCHNAME &amp;amp; MANEXT desde config.sh. MakeMaker agregar&amp;aacute; a CONFIG los siguientes valores de todos modos: ar cc cccdlflags ccdlflags dlext dlsrc ld lddlflags ldflags libc lib_ext obj_ext ranlib sitelibexp sitearchexp so</target>
        </trans-unit>
        <trans-unit id="ac3c8cf1aba574321bc1f66afd6baee7d74ccdb5" translate="yes" xml:space="preserve">
          <source>Arrayref. E.g. [qw(name1 name2)] skip (do not write) sections of the Makefile. Caution! Do not use the SKIP attribute for the negligible speedup. It may seriously damage the resulting Makefile. Only use it if you really need it.</source>
          <target state="translated">Arrayref.Por ejemplo,[qw(nombre1 nombre2)]salta (no escribe)secciones del Makefile.Atención! No use el atributo SKIP para la aceleración insignificante.Puede dañar seriamente el Makefile resultante.Sólo úsenlo si realmente lo necesitan.</target>
        </trans-unit>
        <trans-unit id="065b62648ae15e66467cb649a0f78784ebc20d69" translate="yes" xml:space="preserve">
          <source>Arrays and slices are interpolated into double-quoted strings by joining the elements with the delimiter specified in the &lt;code&gt;$&quot;&lt;/code&gt; variable (&lt;code&gt;$LIST_SEPARATOR&lt;/code&gt; if &quot;use English;&quot; is specified), space by default. The following are equivalent:</source>
          <target state="translated">Las matrices y los segmentos se interpolan en cadenas entre comillas dobles uniendo los elementos con el delimitador especificado en la variable &lt;code&gt;$&quot;&lt;/code&gt; (se &lt;code&gt;$LIST_SEPARATOR&lt;/code&gt; si se especifica&quot; use English; &quot;), espacio por defecto. Los siguientes son equivalentes:</target>
        </trans-unit>
        <trans-unit id="015aea03d19c4f5404b14d2e291f0bb807a559b3" translate="yes" xml:space="preserve">
          <source>Arrays are zero-indexed. Here's how you get at elements in an array:</source>
          <target state="translated">Los arreglos están indexados a cero.Así es como se llega a los elementos de un arreglo:</target>
        </trans-unit>
        <trans-unit id="62a56f74931523c8c6be523e0f4189cd13f83348" translate="yes" xml:space="preserve">
          <source>Arrays index from 0. Likewise string positions in substr() and index().</source>
          <target state="translated">Matriz de índice desde 0.Así como las posiciones de las cadenas en substr()e índice().</target>
        </trans-unit>
        <trans-unit id="c6d4028b66a4b9402be627f34603725a671721e9" translate="yes" xml:space="preserve">
          <source>Arrays:</source>
          <target state="translated">Arrays:</target>
        </trans-unit>
        <trans-unit id="d88829ea9618170c7e2c7635ccc9b881ef3d9e85" translate="yes" xml:space="preserve">
          <source>Arrow Rule</source>
          <target state="translated">Regla de la flecha</target>
        </trans-unit>
        <trans-unit id="59f3e01c7f1fff089e4fc72d78498e369ebc8aba" translate="yes" xml:space="preserve">
          <source>Article about software localization</source>
          <target state="translated">Artículo sobre localización de software</target>
        </trans-unit>
        <trans-unit id="7c422841b7e3951946583038790545c4ed38481b" translate="yes" xml:space="preserve">
          <source>Articles</source>
          <target state="translated">Articles</target>
        </trans-unit>
        <trans-unit id="c2be5dffac8f664ad6e121cb0e6596d1cc2f8c20" translate="yes" xml:space="preserve">
          <source>Articles that are either about &lt;b&gt;DB_File&lt;/b&gt; or make use of it.</source>
          <target state="translated">Art&amp;iacute;culos que tratan sobre &lt;b&gt;DB_File&lt;/b&gt; o hacen uso de &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="5ec201db4d2d3c7be7bb34f8e626f24de679e0d7" translate="yes" xml:space="preserve">
          <source>Artur Bergman &amp;lt;sky AT crucially DOT net&amp;gt;</source>
          <target state="translated">Artur Bergman &amp;lt;cielo AT crucialmente red DOT&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8abf83e588a6f8dbd23df54124d573a8d6e50b02" translate="yes" xml:space="preserve">
          <source>Artur Bergman, &quot;Where Wizards Fear To Tread&quot;, June 11, 2002, &lt;a href=&quot;http://www.perl.com/pub/a/2002/06/11/threads.html&quot;&gt;http://www.perl.com/pub/a/2002/06/11/threads.html&lt;/a&gt;</source>
          <target state="translated">Artur Bergman, &quot;Where Wizards Fear To Tread&quot;, 11 de junio de 2002, &lt;a href=&quot;http://www.perl.com/pub/a/2002/06/11/threads.html&quot;&gt;http://www.perl.com/pub/a/2002/06/11/threads.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d31985fda87b26d6554bcfbfe7dbc398b51917e" translate="yes" xml:space="preserve">
          <source>As</source>
          <target state="translated">As</target>
        </trans-unit>
        <trans-unit id="47c29ec0c3f7f05bae80de5283a0b030f441a291" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt; or &lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt; but with the access/modify/change file timestamps in subsecond resolution, if the operating system and the filesystem both support such timestamps. To override the standard stat():</source>
          <target state="translated">Como &lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt; o &lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt; pero con las marcas de tiempo de acceso / modificaci&amp;oacute;n / cambio de archivos en una resoluci&amp;oacute;n de subsegundos, si el sistema operativo y el sistema de archivos admiten dichas marcas de tiempo. Para anular la estad&amp;iacute;stica est&amp;aacute;ndar ():</target>
        </trans-unit>
        <trans-unit id="02b2b57eecbbd649395f996ef53060747f75fc9c" translate="yes" xml:space="preserve">
          <source>As &lt;b&gt;-nok&lt;/b&gt; except it will report on older systems.</source>
          <target state="translated">Como &lt;b&gt;-nok&lt;/b&gt; excepto que informar&amp;aacute; sobre sistemas m&amp;aacute;s antiguos.</target>
        </trans-unit>
        <trans-unit id="4859922e8f70272693e823f3867ed24a92199eaa" translate="yes" xml:space="preserve">
          <source>As &lt;b&gt;-ok&lt;/b&gt; except it will report on older systems.</source>
          <target state="translated">Como &lt;b&gt;-ok&lt;/b&gt; excepto que informar&amp;aacute; sobre sistemas m&amp;aacute;s antiguos.</target>
        </trans-unit>
        <trans-unit id="11468a3ea9b3583c1d2e6860cce82a44a9b04f63" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;$form_name&lt;/code&gt; , one of the following names must be given.</source>
          <target state="translated">Como &lt;code&gt;$form_name&lt;/code&gt; , se debe dar uno de los siguientes nombres.</target>
        </trans-unit>
        <trans-unit id="2779b0caf565b7a913bad43d8e6bc994f2a3b086" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;-Dm&lt;/code&gt; is using the PerlIO layer for output, it will by itself allocate quite a bunch of SVs, which are hidden to avoid recursion. You can bypass the PerlIO layer if you use the SV logging provided by &lt;code&gt;-DPERL_MEM_LOG&lt;/code&gt; instead.</source>
          <target state="translated">Como &lt;code&gt;-Dm&lt;/code&gt; est&amp;aacute; usando la capa PerlIO para la salida, por s&amp;iacute; mismo asignar&amp;aacute; un mont&amp;oacute;n de SV, que est&amp;aacute;n ocultos para evitar la recursividad. Puede omitir la capa PerlIO si usa el registro SV proporcionado por &lt;code&gt;-DPERL_MEM_LOG&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="67afac02f586f9bebcefbfe5f3e2ccc5758a2739" translate="yes" xml:space="preserve">
          <source>As Perl is developed by a global team of volunteers, our documentation often contains spellings which look funny to</source>
          <target state="translated">Como Perl es desarrollado por un equipo global de voluntarios,nuestra documentación a menudo contiene ortografías que parecen divertidas para</target>
        </trans-unit>
        <trans-unit id="56f06af6196a2958b2b24cc234e03f482b95a8e2" translate="yes" xml:space="preserve">
          <source>As Storable neither knows nor cares about character sets (although it does know that characters may be more than eight bits wide), any difference in the interpretation of character codes between a host and a target system is your problem. In particular, if host and target use different code points to represent the characters used in the text representation of floating-point numbers, you will not be able be able to exchange floating-point data, even with nstore().</source>
          <target state="translated">Como Storable no conoce ni se preocupa por los conjuntos de caracteres (aunque sí sabe que los caracteres pueden tener más de ocho bits de ancho),cualquier diferencia en la interpretación de los códigos de caracteres entre un sistema anfitrión y uno de destino es su problema.En particular,si el anfitrión y el objetivo utilizan puntos de código diferentes para representar los caracteres utilizados en la representación de texto de los números de punto flotante,no podrá intercambiar datos de punto flotante,ni siquiera con nstore().</target>
        </trans-unit>
        <trans-unit id="4eb26264176ff313034cbea4b1e32ac9ca4ff4be" translate="yes" xml:space="preserve">
          <source>As a beginning Perl programmer, your most common use of OO Perl will be in using third-party modules, which are documented below.</source>
          <target state="translated">Como programador principiante de Perl,su uso más común de OO Perl será en el uso de módulos de terceros,que se documentan a continuación.</target>
        </trans-unit>
        <trans-unit id="c668c33e20c8d7992e509e03d3adf2ab76f6474b" translate="yes" xml:space="preserve">
          <source>As a consequence of the fact that &lt;code&gt;:raw&lt;/code&gt; normally pops layers, it usually only makes sense to have it as the only or first element in a layer specification. When used as the first element it provides a known base on which to build e.g.</source>
          <target state="translated">Como consecuencia del hecho de que &lt;code&gt;:raw&lt;/code&gt; normalmente hace aparecer capas, generalmente solo tiene sentido tenerlo como el &amp;uacute;nico o el primer elemento en una especificaci&amp;oacute;n de capa. Cuando se utiliza como primer elemento, proporciona una base conocida sobre la que construir, por ejemplo</target>
        </trans-unit>
        <trans-unit id="85a48b10d40e66cd4a8aedc3b80bf9f3898c7f18" translate="yes" xml:space="preserve">
          <source>As a consequence, &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ignores any number or &lt;code&gt;*&lt;/code&gt; after &lt;code&gt;P&lt;/code&gt; .</source>
          <target state="translated">Como consecuencia, &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; pasa por alto cualquier n&amp;uacute;mero o &lt;code&gt;*&lt;/code&gt; despu&amp;eacute;s de &lt;code&gt;P&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af58dfe35e68f1702e8805a513e543501b556b2f" translate="yes" xml:space="preserve">
          <source>As a consequence, the behavior of the operator % agrees with the behavior of Perl's built-in % operator (as documented in the perlop manpage), and the equation</source>
          <target state="translated">Como consecuencia,el comportamiento del operador % está de acuerdo con el comportamiento del operador % incorporado de Perl (como se documenta en la página web de perlop),y la ecuación</target>
        </trans-unit>
        <trans-unit id="8ed20c41e94e838dcaa1f2e890809ac53aaadc11" translate="yes" xml:space="preserve">
          <source>As a convenience, &lt;a href=&quot;io/socket&quot;&gt;IO::Socket&lt;/a&gt;'s setsockopt() method will convert a number into a packed byte buffer, and getsockopt() will unpack a byte buffer of the correct size back into a number.</source>
          <target state="translated">Para su comodidad, el m&amp;eacute;todo setsockopt () de &lt;a href=&quot;io/socket&quot;&gt;IO :: Socket&lt;/a&gt; convertir&amp;aacute; un n&amp;uacute;mero en un b&amp;uacute;fer de bytes empaquetado, y getsockopt () descomprimir&amp;aacute; un b&amp;uacute;fer de bytes del tama&amp;ntilde;o correcto en un n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="39dd3ca26236e47c7f0b84b7220b02b39c4ce6f1" translate="yes" xml:space="preserve">
          <source>As a convenience, if only one argument is passed then this argument is assumed to be the name of the test (as in the above examples.)</source>
          <target state="translated">Por comodidad,si sólo se pasa un argumento,se supone que este argumento es el nombre de la prueba (como en los ejemplos anteriores).</target>
        </trans-unit>
        <trans-unit id="1cb03824a7a51fc71299760a7d72ef70c9f7d1d1" translate="yes" xml:space="preserve">
          <source>As a debugging aid, you can force Carp to treat a croak as a confess and a carp as a cluck across</source>
          <target state="translated">Como ayuda a la depuración,puedes obligar a Carpa a tratar un graznido como una confesión y a una carpa como un cloqueo a través de</target>
        </trans-unit>
        <trans-unit id="5de9c4f1738c3fbc65c8014410d9308c0bceec73" translate="yes" xml:space="preserve">
          <source>As a derived class from Pod::Parser, Pod::PlainText supports the same methods and interfaces. See &lt;a href=&quot;parser&quot;&gt;Pod::Parser&lt;/a&gt; for all the details; briefly, one creates a new parser with &lt;code&gt;Pod::PlainText-&amp;gt;new()&lt;/code&gt; and then calls either parse_from_filehandle() or parse_from_file().</source>
          <target state="translated">Como clase derivada de Pod :: Parser, Pod :: PlainText admite los mismos m&amp;eacute;todos e interfaces. Consulte &lt;a href=&quot;parser&quot;&gt;Pod :: Parser&lt;/a&gt; para obtener todos los detalles; brevemente, uno crea un nuevo analizador con &lt;code&gt;Pod::PlainText-&amp;gt;new()&lt;/code&gt; y luego llama a parse_from_filehandle () o parse_from_file ().</target>
        </trans-unit>
        <trans-unit id="f6ec952fc34afc28085390c8d52daf19e0a80643" translate="yes" xml:space="preserve">
          <source>As a derived class from Pod::Simple, Pod::Man supports the same methods and interfaces. See &lt;a href=&quot;simple&quot;&gt;Pod::Simple&lt;/a&gt; for all the details.</source>
          <target state="translated">Como clase derivada de Pod :: Simple, Pod :: Man admite los mismos m&amp;eacute;todos e interfaces. Consulte &lt;a href=&quot;simple&quot;&gt;Pod :: Simple&lt;/a&gt; para obtener todos los detalles.</target>
        </trans-unit>
        <trans-unit id="3e4fc5bdbe388e6ddf3cda0d8bc20220f607ea7d" translate="yes" xml:space="preserve">
          <source>As a derived class from Pod::Simple, Pod::Text supports the same methods and interfaces. See &lt;a href=&quot;simple&quot;&gt;Pod::Simple&lt;/a&gt; for all the details; briefly, one creates a new parser with &lt;code&gt;Pod::Text-&amp;gt;new()&lt;/code&gt; and then normally calls parse_file().</source>
          <target state="translated">Como clase derivada de Pod :: Simple, Pod :: Text admite los mismos m&amp;eacute;todos e interfaces. Vea &lt;a href=&quot;simple&quot;&gt;Pod :: Simple&lt;/a&gt; para todos los detalles; brevemente, uno crea un nuevo analizador con &lt;code&gt;Pod::Text-&amp;gt;new()&lt;/code&gt; y luego normalmente llama a parse_file ().</target>
        </trans-unit>
        <trans-unit id="b23f74daa8f57475a4ba46fd4485f5b745823a7e" translate="yes" xml:space="preserve">
          <source>As a final remark, note that one can fill %subr by</source>
          <target state="translated">Como comentario final,note que uno puede llenar el %subr por</target>
        </trans-unit>
        <trans-unit id="4cc64b626e2a5166499114ddf2d5328e019929e3" translate="yes" xml:space="preserve">
          <source>As a final thought, remember that it's not (at the time of writing) possible to produce a useful program which will run in zero or negative time and this basic principle can be written as:</source>
          <target state="translated">Como reflexión final,recuerde que no es posible (en el momento de escribir esto)producir un programa útil que se ejecute en tiempo cero o negativo y este principio básico puede escribirse como:</target>
        </trans-unit>
        <trans-unit id="c76d7d0ab08773eceae9495e1336acd5bdc1e071" translate="yes" xml:space="preserve">
          <source>As a further example, this means that if you wanted to put these bits of code in &lt;code&gt;C&lt;/code&gt; (code) style:</source>
          <target state="translated">Como ejemplo adicional, esto significa que si quisiera poner estos bits de c&amp;oacute;digo en estilo &lt;code&gt;C&lt;/code&gt; (c&amp;oacute;digo):</target>
        </trans-unit>
        <trans-unit id="a5d5c5dbed3ae73f59f4d512802a9cfe627521f0" translate="yes" xml:space="preserve">
          <source>As a further example: At time of writing, no &quot;biblio&quot; identifier is supported, but suppose some processor were written to recognize it as a way of (say) denoting a bibliographic reference (necessarily containing formatting codes in ordinary paragraphs). The fact that &quot;biblio&quot; paragraphs were meant for ordinary processing would be indicated by prefacing each &quot;biblio&quot; identifier with a colon:</source>
          <target state="translated">Como otro ejemplo:En el momento de redactar el presente documento no se admite ningún identificador &quot;biblio&quot;,pero supongamos que algún procesador se escribió para reconocerlo como una forma de (digamos)denotar una referencia bibliográfica (que contiene necesariamente códigos de formato en párrafos ordinarios).El hecho de que los párrafos &quot;biblio&quot; estuvieran destinados a un procesamiento ordinario se indicaría precediendo cada identificador &quot;biblio&quot; con dos puntos:</target>
        </trans-unit>
        <trans-unit id="32e712936b7f11c5ab2eb3ed80fcfadcc776b710" translate="yes" xml:space="preserve">
          <source>As a further optimisation, on exit from the eval block in the &lt;code&gt;FETCH&lt;/code&gt; , execution of the code following the block is still carried on in the inner loop. When an exception is raised, &lt;code&gt;docatch&lt;/code&gt; compares the &lt;code&gt;JMPENV&lt;/code&gt; level of the &lt;code&gt;CxEVAL&lt;/code&gt; with &lt;code&gt;PL_top_env&lt;/code&gt; and if they differ, just re-throws the exception. In this way any inner loops get popped.</source>
          <target state="translated">Como optimizaci&amp;oacute;n adicional, al salir del bloque eval en el &lt;code&gt;FETCH&lt;/code&gt; , la ejecuci&amp;oacute;n del c&amp;oacute;digo que sigue al bloque a&amp;uacute;n se lleva a cabo en el bucle interno. Cuando se &lt;code&gt;docatch&lt;/code&gt; una excepci&amp;oacute;n, docatch compara el nivel &lt;code&gt;JMPENV&lt;/code&gt; de &lt;code&gt;CxEVAL&lt;/code&gt; con &lt;code&gt;PL_top_env&lt;/code&gt; y, si difieren, simplemente vuelve a lanzar la excepci&amp;oacute;n. De esta manera se abren los bucles internos.</target>
        </trans-unit>
        <trans-unit id="23702715810537d7f01f041b430e67e396dff672" translate="yes" xml:space="preserve">
          <source>As a general rule of thumb, your commit message should help a programmer who knows the Perl core quickly understand what you were trying to do, how you were trying to do it, and why the change matters to Perl.</source>
          <target state="translated">Como regla general,su mensaje de confirmación debería ayudar a un programador que conoce el núcleo de Perl a comprender rápidamente lo que intentaba hacer,cómo lo intentaba y por qué el cambio es importante para Perl.</target>
        </trans-unit>
        <trans-unit id="4e47a1601663426f056fd202a23442a94b37a934" translate="yes" xml:space="preserve">
          <source>As a general rule you should</source>
          <target state="translated">Como regla general debería</target>
        </trans-unit>
        <trans-unit id="f1a7ae8ef2fbb4b6cb7127db887caa429f079e93" translate="yes" xml:space="preserve">
          <source>As a general rule, if the module is trying to be object oriented then export nothing. If it's just a collection of functions then &lt;code&gt;@EXPORT_OK&lt;/code&gt; anything but use &lt;code&gt;@EXPORT&lt;/code&gt; with caution. For function and method names use barewords in preference to names prefixed with ampersands for the export lists.</source>
          <target state="translated">Como regla general, si el m&amp;oacute;dulo intenta estar orientado a objetos, no exporte nada. Si es solo una colecci&amp;oacute;n de funciones, &lt;code&gt;@EXPORT_OK&lt;/code&gt; cualquier cosa menos use &lt;code&gt;@EXPORT&lt;/code&gt; con precauci&amp;oacute;n. Para los nombres de funciones y m&amp;eacute;todos, utilice palabras simples en lugar de los nombres con el prefijo y el s&amp;iacute;mbolo para las listas de exportaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e17549d186f2cd9b2973080585cd98536cba2f89" translate="yes" xml:space="preserve">
          <source>As a general rule, if the module is trying to be object oriented then export nothing. If it's just a collection of functions then @EXPORT_OK anything but use @EXPORT with caution.</source>
          <target state="translated">Como regla general,si el módulo trata de ser orientado a objetos,entonces no exportar nada.Si es sólo una colección de funciones entonces @EXPORT_OK cualquier cosa menos usar @EXPORT con precaución.</target>
        </trans-unit>
        <trans-unit id="433c99eba76250876af9c971ad06d88a2549474f" translate="yes" xml:space="preserve">
          <source>As a general rule, if the module is trying to be object-oriented then don't export anything. If it's just a collection of functions and variables, then you can export them via another array, called &lt;code&gt;@EXPORT_OK&lt;/code&gt; . This array does not automatically place its subroutine and variable names into the namespace unless the user specifically requests that this be done.</source>
          <target state="translated">Como regla general, si el m&amp;oacute;dulo intenta estar orientado a objetos, no exporte nada. Si es solo una colecci&amp;oacute;n de funciones y variables, entonces puede exportarlas a trav&amp;eacute;s de otra matriz, llamada &lt;code&gt;@EXPORT_OK&lt;/code&gt; . Esta matriz no coloca autom&amp;aacute;ticamente sus nombres de subrutina y variable en el espacio de nombres a menos que el usuario solicite espec&amp;iacute;ficamente que se haga esto.</target>
        </trans-unit>
        <trans-unit id="a207991a7d026174ee51a8481f0b776cbc48b6ea" translate="yes" xml:space="preserve">
          <source>As a last resort, however:</source>
          <target state="translated">Como último recurso,sin embargo:</target>
        </trans-unit>
        <trans-unit id="3ab2161dda92a73d5893b103484d832131038b70" translate="yes" xml:space="preserve">
          <source>As a last resort, you can use the perl one-liner:</source>
          <target state="translated">Como último recurso,puedes usar el perl de una línea:</target>
        </trans-unit>
        <trans-unit id="9a117b27b5618d5856aaaf26d908e957a310a377" translate="yes" xml:space="preserve">
          <source>As a last resort, you could also use &lt;code&gt;PERL5DB&lt;/code&gt; to customize the debugger by directly setting internal variables or calling debugger functions.</source>
          <target state="translated">Como &amp;uacute;ltimo recurso, tambi&amp;eacute;n puede usar &lt;code&gt;PERL5DB&lt;/code&gt; para personalizar el depurador configurando directamente las variables internas o llamando a las funciones del depurador.</target>
        </trans-unit>
        <trans-unit id="46efdbcc9fcabaefc1ffd7ba61888d42081d0818" translate="yes" xml:space="preserve">
          <source>As a noun, a piece of syntax made up of smaller pieces. As a transitive verb, to create an &lt;b&gt;object&lt;/b&gt; using a &lt;b&gt;constructor&lt;/b&gt;.</source>
          <target state="translated">Como sustantivo, una pieza de sintaxis compuesta de piezas m&amp;aacute;s peque&amp;ntilde;as. Como verbo transitivo, crear un &lt;b&gt;objeto&lt;/b&gt; usando un &lt;b&gt;constructor&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="3f0cb7718076aa901719a5347944ab158c02cce2" translate="yes" xml:space="preserve">
          <source>As a result of these problems, starting in v5.20, what Perl does is to treat non-Unicode code points as just typical unassigned Unicode characters, and matches accordingly. (Note: Unicode has atypical unassigned code points. For example, it has noncharacter code points, and ones that, when they do get assigned, are destined to be written Right-to-left, as Arabic and Hebrew are. Perl assumes that no non-Unicode code point has any atypical properties.)</source>
          <target state="translated">Como resultado de estos problemas,a partir de la v5.20,lo que hace Perl es tratar los puntos de código no Unicode como los típicos caracteres Unicode no asignados,y los empareja en consecuencia.(Nota:Unicode tiene puntos de código no asignados atípicos.Por ejemplo,tiene puntos de código sin caracteres,y los que,cuando se asignan,están destinados a ser escritos de derecha a izquierda,como el árabe y el hebreo.Perl asume que ningún punto de código no Unicode tiene propiedades atípicas).</target>
        </trans-unit>
        <trans-unit id="dd723ff09f0dfd75022fcfe75451c37784da18b7" translate="yes" xml:space="preserve">
          <source>As a result, &lt;code&gt;$?&lt;/code&gt; will always be zero if the subprocess's exit status indicated successful completion, and non-zero if a warning or error occurred or a program compliant with encoding _POSIX_EXIT values was run and set a status.</source>
          <target state="translated">Como resultado, &lt;code&gt;$?&lt;/code&gt; siempre ser&amp;aacute; cero si el estado de salida del subproceso indic&amp;oacute; una finalizaci&amp;oacute;n exitosa, y distinto de cero si ocurri&amp;oacute; una advertencia o error o si se ejecut&amp;oacute; un programa compatible con la codificaci&amp;oacute;n de valores _POSIX_EXIT y se estableci&amp;oacute; un estado.</target>
        </trans-unit>
        <trans-unit id="c26b5ebaa65b4ac15b7d233c58e1a9bb61162748" translate="yes" xml:space="preserve">
          <source>As a scalar operator:</source>
          <target state="translated">Como un operador escalar:</target>
        </trans-unit>
        <trans-unit id="8274ec69a734737beb00f3f5313b731efea1dc76" translate="yes" xml:space="preserve">
          <source>As a shortcut &lt;code&gt;(*MARK:NAME)&lt;/code&gt; can be written &lt;code&gt;(*:NAME)&lt;/code&gt;.</source>
          <target state="translated">Como atajo &lt;code&gt;(*MARK:NAME)&lt;/code&gt; se puede escribir &lt;code&gt;(*:NAME)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b9a135b5dd5e3840c9d7b2126bd8f1513618105" translate="yes" xml:space="preserve">
          <source>As a shortcut a one-argument call takes the filename from the global scalar variable of the same name as the filehandle:</source>
          <target state="translated">Como un atajo,una llamada de un solo argumento toma el nombre del archivo de la variable escalar global del mismo nombre que el filehandle:</target>
        </trans-unit>
        <trans-unit id="9baecd622ad6ae8ccb368a1f47c6a9f4ae3fac55" translate="yes" xml:space="preserve">
          <source>As a shortcut, you can use the module &lt;a href=&quot;../bignum&quot;&gt;bignum&lt;/a&gt;:</source>
          <target state="translated">Como atajo, puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;../bignum&quot;&gt;bignum&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5b3e1134bf3b8109ecb5762080e2eff8e1996cc6" translate="yes" xml:space="preserve">
          <source>As a side effect, as &lt;code&gt;_&lt;/code&gt; doesn't work, stacked filetest operators (&lt;code&gt;-f -w $file&lt;/code&gt; ) won't work either.</source>
          <target state="translated">Como efecto secundario, como &lt;code&gt;_&lt;/code&gt; no funciona, los operadores de prueba de archivos apilados ( &lt;code&gt;-f -w $file&lt;/code&gt; ) tampoco funcionar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="e67c2575fdaa4cadca39640f540c5c1c25ff2b7b" translate="yes" xml:space="preserve">
          <source>As a side effect, calling keys() resets the internal iterator of the HASH or ARRAY (see &lt;a href=&quot;#each&quot;&gt;each&lt;/a&gt;). In particular, calling keys() in void context resets the iterator with no other overhead.</source>
          <target state="translated">Como efecto secundario, llamar a keys () restablece el iterador interno de HASH o ARRAY (ver &lt;a href=&quot;#each&quot;&gt;cada uno&lt;/a&gt; ). En particular, llamar a keys () en un contexto vac&amp;iacute;o restablece el iterador sin otra sobrecarga.</target>
        </trans-unit>
        <trans-unit id="c7b3fa9f58a42d510ccd961956edd3b53e1d0c57" translate="yes" xml:space="preserve">
          <source>As a side effect, calling keys() resets the internal iterator of the HASH or ARRAY (see &lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;). In particular, calling keys() in void context resets the iterator with no other overhead.</source>
          <target state="translated">Como efecto secundario, llamar a keys () restablece el iterador interno de HASH o ARRAY (ver &lt;a href=&quot;each&quot;&gt;cada uno&lt;/a&gt; ). En particular, llamar a keys () en un contexto vac&amp;iacute;o restablece el iterador sin otra sobrecarga.</target>
        </trans-unit>
        <trans-unit id="aa184b78eeef36fa29a1577f9bf8458234354229" translate="yes" xml:space="preserve">
          <source>As a side effect, calling values() resets the HASH or ARRAY's internal iterator, see &lt;a href=&quot;#each&quot;&gt;each&lt;/a&gt;. (In particular, calling values() in void context resets the iterator with no other overhead. Apart from resetting the iterator, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; in list context is the same as plain &lt;code&gt;@array&lt;/code&gt; . (We recommend that you use void context &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; @array&lt;/code&gt; for this, but reasoned that taking &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; out would require more documentation than leaving it in.)</source>
          <target state="translated">Como efecto secundario, llamar a values ​​() restablece el iterador interno HASH o ARRAY, vea &lt;a href=&quot;#each&quot;&gt;cada uno&lt;/a&gt; . (En particular, llamar a values ​​() en contexto void restablece el iterador sin otra sobrecarga. Aparte de restablecer el iterador, los &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; en el contexto de lista son los mismos que &lt;code&gt;@array&lt;/code&gt; simple . (Recomendamos que use &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; @array&lt;/code&gt; contexto void @array para esto, pero razon&amp;oacute; que eliminar los &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; requerir&amp;iacute;a m&amp;aacute;s documentaci&amp;oacute;n que dejarlos adentro).</target>
        </trans-unit>
        <trans-unit id="a91a0923e5abea890fdc2bd22bb84126ade104fe" translate="yes" xml:space="preserve">
          <source>As a side effect, calling values() resets the HASH or ARRAY's internal iterator, see &lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;. (In particular, calling values() in void context resets the iterator with no other overhead. Apart from resetting the iterator, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; in list context is the same as plain &lt;code&gt;@array&lt;/code&gt; . (We recommend that you use void context &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt; @array&lt;/code&gt; for this, but reasoned that taking &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; out would require more documentation than leaving it in.)</source>
          <target state="translated">Como efecto secundario, llamar a values ​​() restablece el iterador interno HASH o ARRAY, vea &lt;a href=&quot;each&quot;&gt;cada uno&lt;/a&gt; . (En particular, llamar a values ​​() en contexto void restablece el iterador sin otra sobrecarga. Aparte de restablecer el iterador, los &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; en el contexto de lista son los mismos que &lt;code&gt;@array&lt;/code&gt; simple . (Recomendamos que use &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt; @array&lt;/code&gt; contexto void @array para esto, pero razon&amp;oacute; que eliminar los &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt; @array&lt;/code&gt; requerir&amp;iacute;a m&amp;aacute;s documentaci&amp;oacute;n que dejarlos adentro).</target>
        </trans-unit>
        <trans-unit id="e8e57a1c04bdc517b9206bb149b8d52cd1b60750" translate="yes" xml:space="preserve">
          <source>As a special case</source>
          <target state="translated">Como un caso especial</target>
        </trans-unit>
        <trans-unit id="17ea6c6f4727b11c2b48648599d60dd30f72b5e8" translate="yes" xml:space="preserve">
          <source>As a special case for &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, the empty pattern given in &lt;a href=&quot;perlop#m%2fPATTERN%2fmsixpodualngc&quot;&gt;match operator&lt;/a&gt; syntax (&lt;code&gt;//&lt;/code&gt; ) specifically matches the empty string, which is contrary to its usual interpretation as the last successful match.</source>
          <target state="translated">Como caso especial de &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , el patr&amp;oacute;n vac&amp;iacute;o dado en la sintaxis del &lt;a href=&quot;perlop#m%2fPATTERN%2fmsixpodualngc&quot;&gt;operador de coincidencia&lt;/a&gt; ( &lt;code&gt;//&lt;/code&gt; ) coincide espec&amp;iacute;ficamente con la cadena vac&amp;iacute;a, lo que es contrario a su interpretaci&amp;oacute;n habitual como &amp;uacute;ltima coincidencia exitosa.</target>
        </trans-unit>
        <trans-unit id="59db895ceb1feffbf61c972fbfef8ae7b61e3fff" translate="yes" xml:space="preserve">
          <source>As a special case for &lt;code&gt;&lt;a href=&quot;split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, the empty pattern given in &lt;a href=&quot;../perlop#m%2fPATTERN%2fmsixpodualngc&quot;&gt;match operator&lt;/a&gt; syntax (&lt;code&gt;//&lt;/code&gt; ) specifically matches the empty string, which is contrary to its usual interpretation as the last successful match.</source>
          <target state="translated">Como caso especial de &lt;code&gt;&lt;a href=&quot;split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , el patr&amp;oacute;n vac&amp;iacute;o dado en la sintaxis del &lt;a href=&quot;../perlop#m%2fPATTERN%2fmsixpodualngc&quot;&gt;operador de coincidencia&lt;/a&gt; ( &lt;code&gt;//&lt;/code&gt; ) coincide espec&amp;iacute;ficamente con la cadena vac&amp;iacute;a, lo que es contrario a su interpretaci&amp;oacute;n habitual como &amp;uacute;ltima coincidencia exitosa.</target>
        </trans-unit>
        <trans-unit id="527a25823c5b741d3ca1303c6cacef3dfa61f467" translate="yes" xml:space="preserve">
          <source>As a special case if the overload returns the object itself then it will be used directly. An overloaded conversion returning the object is probably a bug, because you're likely to get something that looks like &lt;code&gt;YourPackage=HASH(0x8172b34)&lt;/code&gt; .</source>
          <target state="translated">Como caso especial, si la sobrecarga devuelve el objeto en s&amp;iacute;, se utilizar&amp;aacute; directamente. Una conversi&amp;oacute;n sobrecargada que devuelve el objeto probablemente sea un error, porque es probable que obtenga algo similar a &lt;code&gt;YourPackage=HASH(0x8172b34)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="898fa8e40ea8bbaf82f7657e12c724a39a6b933a" translate="yes" xml:space="preserve">
          <source>As a special case the three-argument form with a read/write mode and the third argument being &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Como caso especial, la forma de tres argumentos con un modo de lectura / escritura y el tercer argumento es &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bfe8944e96951a5268014155bb5ff3707aad862a" translate="yes" xml:space="preserve">
          <source>As a special case the three-argument form with a read/write mode and the third argument being &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Como caso especial, la forma de tres argumentos con un modo de lectura / escritura y el tercer argumento es &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="39d0f95cc62f9b7d251ca80f498d915dd0b1187f" translate="yes" xml:space="preserve">
          <source>As a special case, &lt;code&gt;\(@foo)&lt;/code&gt; returns a list of references to the contents of &lt;code&gt;@foo&lt;/code&gt; , not a reference to &lt;code&gt;@foo&lt;/code&gt; itself. Likewise for &lt;code&gt;%foo&lt;/code&gt; , except that the key references are to copies (since the keys are just strings rather than full-fledged scalars).</source>
          <target state="translated">Como caso especial, &lt;code&gt;\(@foo)&lt;/code&gt; devuelve una lista de referencias al contenido de &lt;code&gt;@foo&lt;/code&gt; , no una referencia a &lt;code&gt;@foo&lt;/code&gt; en s&amp;iacute;. Lo mismo &lt;code&gt;%foo&lt;/code&gt; , excepto que las referencias clave son a copias (dado que las claves son solo cadenas en lugar de escalares completos).</target>
        </trans-unit>
        <trans-unit id="9d3b4ecbd7d509c41643f820908fd45c356bb919" translate="yes" xml:space="preserve">
          <source>As a special case, if the test in the &lt;code&gt;for&lt;/code&gt; loop (or the corresponding &lt;code&gt;while&lt;/code&gt; loop) is empty, it is treated as true. That is, both</source>
          <target state="translated">Como caso especial, si la prueba en el ciclo &lt;code&gt;for&lt;/code&gt; (o el ciclo &lt;code&gt;while&lt;/code&gt; correspondiente ) est&amp;aacute; vac&amp;iacute;a, se trata como verdadera. Es decir, ambos</target>
        </trans-unit>
        <trans-unit id="07d1fa15ef1af04fe7ac16e1712ceb861430b28a" translate="yes" xml:space="preserve">
          <source>As a special case, if the value of this variable is space-separated, the tail might be used to disable the ornaments by setting the tail to be &lt;code&gt;o=0&lt;/code&gt; or &lt;code&gt;ornaments=0&lt;/code&gt; . The head should be as described above, say</source>
          <target state="translated">Como caso especial, si el valor de esta variable est&amp;aacute; separado por espacios, la cola puede usarse para desactivar los adornos estableciendo la cola en &lt;code&gt;o=0&lt;/code&gt; o &lt;code&gt;ornaments=0&lt;/code&gt; . La cabeza debe ser como se describe arriba, digamos</target>
        </trans-unit>
        <trans-unit id="0fde23ad411d5b9ebf1966fbf214f46640cb22f9" translate="yes" xml:space="preserve">
          <source>As a special case, if you specify the module name &lt;code&gt;Unicode&lt;/code&gt; , you'll get the version number of the Unicode Character Database bundled with the requested perl versions.</source>
          <target state="translated">Como caso especial, si especifica el nombre del m&amp;oacute;dulo &lt;code&gt;Unicode&lt;/code&gt; , obtendr&amp;aacute; el n&amp;uacute;mero de versi&amp;oacute;n de la base de datos de caracteres Unicode incluida con las versiones de Perl solicitadas.</target>
        </trans-unit>
        <trans-unit id="03f58faea796a1077f97500a4e213c983487f04c" translate="yes" xml:space="preserve">
          <source>As a special case, when the accessor is called with a hash reference as the sole argument, this causes an assignment of the whole hash element. The object reference is returned.</source>
          <target state="translated">Como caso especial,cuando se llama al accesorio con una referencia de hachís como único argumento,esto provoca una asignación de todo el elemento de hachís.La referencia del objeto es devuelta.</target>
        </trans-unit>
        <trans-unit id="d80964d39654d27c73a60223b4ebc15d6e6b2f91" translate="yes" xml:space="preserve">
          <source>As a special case, when the accessor is called with an array reference as the sole argument, this causes an assignment of the whole array element. The object reference is returned.</source>
          <target state="translated">Como caso especial,cuando se llama al accesorio con una referencia de matriz como único argumento,esto provoca una asignación de todo el elemento de la matriz.La referencia del objeto es devuelta.</target>
        </trans-unit>
        <trans-unit id="261536d85ff532107bd0e6c855c28c78277c6b3c" translate="yes" xml:space="preserve">
          <source>As a special exception, when you slice a list (but not an array or a hash), if the list evaluates to empty, then taking a slice of that empty list will always yield the empty list in turn. Thus:</source>
          <target state="translated">Como excepción especial,cuando se corta una lista (pero no una matriz o un hash),si la lista evalúa que está vacía,entonces tomar un trozo de esa lista vacía siempre dará como resultado la lista vacía a su vez.Por lo tanto:</target>
        </trans-unit>
        <trans-unit id="267a52b216bf364239047183b439e3e80275f9ef" translate="yes" xml:space="preserve">
          <source>As a vendor, you may have a requirement to backport security fixes beyond our 3 year support commitment. We can provide limited support and advice to you as you do so and, where possible will try to apply those patches to the relevant -maint branches in git, though we may or may not choose to make numbered releases or &quot;official&quot; patches available. Contact us at &amp;lt;perl5-security-report@perl.org&amp;gt; to begin that process.</source>
          <target state="translated">Como proveedor, es posible que tenga el requisito de respaldar las correcciones de seguridad m&amp;aacute;s all&amp;aacute; de nuestro compromiso de soporte de 3 a&amp;ntilde;os. Podemos brindarle asistencia y asesoramiento limitados mientras lo hace y, cuando sea posible, intentaremos aplicar esos parches a las ramas -maint relevantes en git, aunque podemos o no optar por hacer disponibles versiones numeradas o parches &quot;oficiales&quot;. Cont&amp;aacute;ctenos en &amp;lt;perl5-security-report@perl.org&amp;gt; para comenzar ese proceso.</target>
        </trans-unit>
        <trans-unit id="6b767e1ab5bdc22f58c69583808a39ce8aa5393a" translate="yes" xml:space="preserve">
          <source>As a volunteer organization, the commitments we make are heavily dependent on the goodwill and hard work of individuals who have no obligation to contribute to Perl.</source>
          <target state="translated">Como organización de voluntarios,los compromisos que asumimos dependen en gran medida de la buena voluntad y el trabajo duro de las personas que no tienen la obligación de contribuir a Perl.</target>
        </trans-unit>
        <trans-unit id="b55a4625fdc844badd446c13482f0c20c8caa1b5" translate="yes" xml:space="preserve">
          <source>As above, but the destination node text of the link.</source>
          <target state="translated">Como arriba,pero el texto del nodo de destino del enlace.</target>
        </trans-unit>
        <trans-unit id="07731660b460e18f03465884e08d802967534966" translate="yes" xml:space="preserve">
          <source>As all values evaluate to true, a simple &lt;code&gt;if&lt;/code&gt; test is good enough to determine whether an extension is present.</source>
          <target state="translated">Como todos los valores se eval&amp;uacute;an como verdaderos, una simple prueba &lt;code&gt;if&lt;/code&gt; es suficientemente buena para determinar si una extensi&amp;oacute;n est&amp;aacute; presente.</target>
        </trans-unit>
        <trans-unit id="049e8d249c3ad3a2a8b180055568baa12252b047" translate="yes" xml:space="preserve">
          <source>As alluded to earlier you can also declare inlined subs dynamically at BEGIN time if their body consists of a lexically-scoped scalar which has no other references. Only the first example here will be inlined:</source>
          <target state="translated">Como se mencionó anteriormente,también se pueden declarar dinámicamente los subconjuntos alineados en el momento del inicio si su cuerpo consiste en un escalar léxico que no tiene otras referencias.Sólo el primer ejemplo aquí estará alineado:</target>
        </trans-unit>
        <trans-unit id="40622c1595c0e7b33c82f810ddadd26599013393" translate="yes" xml:space="preserve">
          <source>As alternatives to &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; when used for control flow, Perl provides the &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; operators (see below). The short-circuit behavior is identical. The precedence of &lt;code&gt;&quot;and&quot;&lt;/code&gt; and &lt;code&gt;&quot;or&quot;&lt;/code&gt; is much lower, however, so that you can safely use them after a list operator without the need for parentheses:</source>
          <target state="translated">Como alternativas a &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; cuando se usa para el flujo de control, Perl proporciona la &lt;code&gt;and&lt;/code&gt; y &lt;code&gt;or&lt;/code&gt; operadores (ver abajo). El comportamiento de cortocircuito es id&amp;eacute;ntico. Sin embargo, la precedencia de &lt;code&gt;&quot;and&quot;&lt;/code&gt; y &lt;code&gt;&quot;or&quot;&lt;/code&gt; es mucho menor, por lo que puede usarlos de manera segura despu&amp;eacute;s de un operador de lista sin necesidad de par&amp;eacute;ntesis:</target>
        </trans-unit>
        <trans-unit id="c44b3a4add0c470afd83290fbaea5d47d3bf3bcb" translate="yes" xml:space="preserve">
          <source>As always with Perl there is more than one way to do it. Below are a few examples of approaches to making common conversions between number representations. This is intended to be representational rather than exhaustive.</source>
          <target state="translated">Como siempre con Perl hay más de una manera de hacerlo.A continuación se presentan algunos ejemplos de enfoques para hacer conversiones comunes entre representaciones numéricas.Esto pretende ser representativo más que exhaustivo.</target>
        </trans-unit>
        <trans-unit id="a27e8bc51d6a9b14b4e2235fdc7ebedf28d134bc" translate="yes" xml:space="preserve">
          <source>As always, if any of these are ever officially declared as bugs, they'll be fixed and removed.</source>
          <target state="translated">Como siempre,si alguna vez se declaran oficialmente como bichos,serán arreglados y eliminados.</target>
        </trans-unit>
        <trans-unit id="43d8cae7f79fc634e42b4fbb6869d40983003e1e" translate="yes" xml:space="preserve">
          <source>As always, setting up a server is little bit more involved than running a client. The model is that the server creates a special kind of socket that does nothing but listen on a particular port for incoming connections. It does this by calling the &lt;code&gt;IO::Socket::INET-&amp;gt;new()&lt;/code&gt; method with slightly different arguments than the client did.</source>
          <target state="translated">Como siempre, configurar un servidor es un poco m&amp;aacute;s complicado que ejecutar un cliente. El modelo es que el servidor crea un tipo especial de socket que no hace m&amp;aacute;s que escuchar en un puerto particular las conexiones entrantes. Lo hace llamando al m&amp;eacute;todo &lt;code&gt;IO::Socket::INET-&amp;gt;new()&lt;/code&gt; con argumentos ligeramente diferentes a los del cliente.</target>
        </trans-unit>
        <trans-unit id="90ed318055b1f6119d9ba187aa6944aea5c29dbe" translate="yes" xml:space="preserve">
          <source>As an added convenience, the Digest::SHA module offers routines to calculate keyed hashes using the HMAC-SHA-1/224/256/384/512 algorithms. These services exist in functional form only, and mimic the style and behavior of the</source>
          <target state="translated">Como una conveniencia adicional,el módulo Digest::SHA ofrece rutinas para calcular hashes clave usando los algoritmos HMAC-SHA-1/224/256/384/512.Estos servicios existen sólo en forma funcional,e imitan el estilo y el comportamiento del</target>
        </trans-unit>
        <trans-unit id="d0e4684ebfef4659c7147a264548f0d1e61303df" translate="yes" xml:space="preserve">
          <source>As an aid in resetting colors, colored() takes a scalar as the first argument and any number of attribute strings as the second argument and returns the scalar wrapped in escape codes so that the attributes will be set as requested before the string and reset to normal after the string. Alternately, you can pass a reference to an array as the first argument, and then the contents of that array will be taken as attributes and color codes and the remainder of the arguments as text to colorize.</source>
          <target state="translated">Como ayuda para restablecer los colores,colored()toma un escalar como primer argumento y cualquier número de cadenas de atributos como segundo argumento y devuelve el escalar envuelto en códigos de escape para que los atributos se establezcan como se solicitó antes de la cadena y se restablezcan a la normalidad después de la cadena.Alternativamente,puedes pasar una referencia a una matriz como primer argumento,y entonces el contenido de esa matriz se tomará como atributos y códigos de color y el resto de los argumentos como texto a colorear.</target>
        </trans-unit>
        <trans-unit id="9c1670ab0bb7042a354367f8f6979cab460d9b35" translate="yes" xml:space="preserve">
          <source>As an alternative to the above, you may prefer to throw exceptions using the Error module.</source>
          <target state="translated">Como alternativa a lo anterior,puede que prefiera lanzar excepciones usando el módulo de error.</target>
        </trans-unit>
        <trans-unit id="782eb5f652231f0fff9e780cbf2fef47e3527def" translate="yes" xml:space="preserve">
          <source>As an alternative, overloaded constants (see &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;) provide a simple way to extend the functionality of the RE engine, by substituting one pattern for another.</source>
          <target state="translated">Como alternativa, las constantes sobrecargadas (ver &lt;a href=&quot;overload&quot;&gt;sobrecarga&lt;/a&gt; ) proporcionan una forma sencilla de ampliar la funcionalidad del motor RE, sustituyendo un patr&amp;oacute;n por otro.</target>
        </trans-unit>
        <trans-unit id="18772395363d0e88e55df307a43fbfe2be745eba" translate="yes" xml:space="preserve">
          <source>As an alternative, specify a number instead of list of letters (e.g., &lt;b&gt;-D14&lt;/b&gt; is equivalent to &lt;b&gt;-Dtls&lt;/b&gt;):</source>
          <target state="translated">Como alternativa, especifique un n&amp;uacute;mero en lugar de una lista de letras (por ejemplo, &lt;b&gt;-D14&lt;/b&gt; es equivalente a &lt;b&gt;-Dtls&lt;/b&gt; ):</target>
        </trans-unit>
        <trans-unit id="8f4ba5d9ceee180216d44c33a248904b28bf93a4" translate="yes" xml:space="preserve">
          <source>As an alternative, to keep the case of the replacement word if it is longer than the original, you can use this code, by Jeff Pinyan:</source>
          <target state="translated">Como alternativa,para mantener el caso de la palabra de reemplazo si es más larga que la original,puedes usar este código,de Jeff Pinyan:</target>
        </trans-unit>
        <trans-unit id="edc86b424441622df9f0c07df7eb59f80cab5da3" translate="yes" xml:space="preserve">
          <source>As an example of something that is caught under &lt;code&gt;&quot;strict'&lt;/code&gt; , but not otherwise, is the pattern</source>
          <target state="translated">Como ejemplo de algo que est&amp;aacute; atrapado bajo &lt;code&gt;&quot;strict'&lt;/code&gt; , pero no de otra manera, es el patr&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="52b1b17f0c5a778dad149ae64ff9d232a5d6120e" translate="yes" xml:space="preserve">
          <source>As an example of this case, this code prints the message &quot;Perl exited with active threads: 2 running and unjoined&quot;:</source>
          <target state="translated">Como ejemplo de este caso,este código imprime el mensaje &quot;Perl salió con hilos activos&quot;:2 corriendo y sin unir&quot;:</target>
        </trans-unit>
        <trans-unit id="fd8cd6983452bdbcd828fbbb431f9c0eaf4c793d" translate="yes" xml:space="preserve">
          <source>As an example where a possessive quantifier is suitable we consider matching a quoted string, as it appears in several programming languages. The backslash is used as an escape character that indicates that the next character is to be taken literally, as another character for the string. Therefore, after the opening quote, we expect a (possibly empty) sequence of alternatives: either some character except an unescaped quote or backslash or an escaped character.</source>
          <target state="translated">Como ejemplo de que un cuantificador posesivo es adecuado,consideramos la posibilidad de hacer coincidir una cadena citada,tal como aparece en varios lenguajes de programación.La barra invertida se utiliza como un carácter de escape que indica que el siguiente carácter debe ser tomado literalmente,como otro carácter para la cadena.Por lo tanto,después de la cita inicial,esperamos una secuencia (posiblemente vacía)de alternativas:algún carácter excepto una cita no escapada o una barra invertida o un carácter escapado.</target>
        </trans-unit>
        <trans-unit id="82731324b346859b9bccf9603560116021199d53" translate="yes" xml:space="preserve">
          <source>As an example, when Perl sees &lt;code&gt;$x = &lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;(400)&lt;/code&gt; , it encodes the character in UTF-8 and stores it in $x. Then it is marked as character data, so, for instance, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt; $x&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt; . However, in the scope of the &lt;code&gt;bytes&lt;/code&gt; pragma, $x is treated as a series of bytes - the bytes that make up the UTF8 encoding - and &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt; $x&lt;/code&gt; returns &lt;code&gt;2&lt;/code&gt; :</source>
          <target state="translated">Por ejemplo, cuando Perl ve &lt;code&gt;$x = &lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;(400)&lt;/code&gt; , codifica el car&amp;aacute;cter en UTF-8 y lo almacena en $ x. Luego se marca como datos de caracteres, por lo que, por ejemplo, la &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt; $x&lt;/code&gt; devuelve &lt;code&gt;1&lt;/code&gt; . Sin embargo, en el &amp;aacute;mbito del pragma de &lt;code&gt;bytes&lt;/code&gt; , $ x se trata como una serie de bytes, los bytes que componen la codificaci&amp;oacute;n UTF8, y la &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt; $x&lt;/code&gt; devuelve &lt;code&gt;2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c313609d4ce2bde8a8cf3d1a920bc018f88eebaa" translate="yes" xml:space="preserve">
          <source>As an interim measure, you may either change the #! line of your scripts to specifically refer to the old perl version, e.g. on Solaris 9 use #!/usr/perl5/5.00503/bin/perl to use the perl version that was the default for Solaris 8, or if you have a large number of scripts it may be more convenient to make the old version of perl the default on your system. You can do this by changing the appropriate symlinks under /usr/perl5 as follows (example for Solaris 9):</source>
          <target state="translated">Como medida provisional,puede cambiar la línea #! de sus scripts para referirse específicamente a la antigua versión de perl,por ejemplo,en Solaris 9 use #!/usr/perl5/5.00503/bin/perl para usar la versión de perl que era la predeterminada para Solaris 8,o si tiene un gran número de scripts puede ser más conveniente hacer que la antigua versión de perl sea la predeterminada en su sistema.Puede hacerlo cambiando los enlaces simbólicos apropiados en /usr/perl5 de la siguiente manera (ejemplo para Solaris 9):</target>
        </trans-unit>
        <trans-unit id="373576f861e30b7c81e25bff74bee6e23c15298c" translate="yes" xml:space="preserve">
          <source>As an optimization, may not call the command shell specified in &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;(1, @args)&lt;/code&gt; spawns an external process and immediately returns its process designator, without waiting for it to terminate. Return value may be used subsequently in &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;. Failure to &lt;code&gt;spawn()&lt;/code&gt; a subprocess is indicated by setting &lt;code&gt;$?&lt;/code&gt; to &lt;code&gt;&quot;255 &amp;lt;&amp;lt; 8&quot;&lt;/code&gt; . &lt;code&gt;$?&lt;/code&gt; is set in a way compatible with Unix (i.e. the exitstatus of the subprocess is obtained by &lt;code&gt;&quot;$?&lt;/code&gt; 8&quot;&amp;gt;&amp;gt;, as described in the documentation). (Win32)</source>
          <target state="translated">Como optimizaci&amp;oacute;n, no se puede llamar al shell de comandos especificado en &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;(1, @args)&lt;/code&gt; genera un proceso externo e inmediatamente devuelve su designador de proceso, sin esperar a que termine. El valor de retorno se puede utilizar posteriormente en &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt; . La falla al &lt;code&gt;spawn()&lt;/code&gt; un subproceso se indica configurando &lt;code&gt;$?&lt;/code&gt; a &lt;code&gt;&quot;255 &amp;lt;&amp;lt; 8&quot;&lt;/code&gt; . &lt;code&gt;$?&lt;/code&gt; est&amp;aacute; configurado de una manera compatible con Unix (es decir, el estado de salida del subproceso se obtiene mediante &lt;code&gt;&quot;$?&lt;/code&gt; 8&quot; &amp;gt;&amp;gt;, como se describe en la documentaci&amp;oacute;n). (Win32)</target>
        </trans-unit>
        <trans-unit id="38474bdd192558dcfa688dfaf6e45817a6f595ea" translate="yes" xml:space="preserve">
          <source>As another special case, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; emulates the default behavior of the command line tool &lt;b&gt;awk&lt;/b&gt; when the PATTERN is either omitted or a</source>
          <target state="translated">Como otro caso especial, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; emula el comportamiento predeterminado de la herramienta de l&amp;iacute;nea de comando &lt;b&gt;awk&lt;/b&gt; cuando el PATR&amp;Oacute;N se omite o</target>
        </trans-unit>
        <trans-unit id="aab9f2eadc04a37e669ffc31217a1ec91df2a94d" translate="yes" xml:space="preserve">
          <source>As another special case, &lt;code&gt;&lt;a href=&quot;split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; emulates the default behavior of the command line tool &lt;b&gt;awk&lt;/b&gt; when the PATTERN is either omitted or a</source>
          <target state="translated">Como otro caso especial, &lt;code&gt;&lt;a href=&quot;split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; emula el comportamiento predeterminado de la herramienta de l&amp;iacute;nea de comando &lt;b&gt;awk&lt;/b&gt; cuando el PATR&amp;Oacute;N se omite o</target>
        </trans-unit>
        <trans-unit id="46ab5c6135652ee2c4d494e00004b3edd1c35481" translate="yes" xml:space="preserve">
          <source>As another workaround for this problem, Perl 5.10.0 introduced &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; , which are equivalent to &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; and &lt;code&gt;$'&lt;/code&gt; , &lt;b&gt;except&lt;/b&gt; that they are only guaranteed to be defined after a successful match that was executed with the &lt;code&gt;/p&lt;/code&gt; (preserve) modifier. The use of these variables incurs no global performance penalty, unlike their punctuation char equivalents, however at the trade-off that you have to tell perl when you want to use them. As of Perl 5.20, these three variables are equivalent to &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; and &lt;code&gt;$'&lt;/code&gt; , and &lt;code&gt;/p&lt;/code&gt; is ignored.</source>
          <target state="translated">Como otra soluci&amp;oacute;n para este problema, Perl 5.10.0 introdujo &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; y &lt;code&gt;${^POSTMATCH}&lt;/code&gt; , que son equivalentes a &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; y &lt;code&gt;$'&lt;/code&gt; , &lt;b&gt;excepto&lt;/b&gt; que solo se garantiza que definirse despu&amp;eacute;s de una coincidencia exitosa que se ejecut&amp;oacute; con el modificador &lt;code&gt;/p&lt;/code&gt; (preserve). El uso de estas variables no incurre en una penalizaci&amp;oacute;n de rendimiento global, a diferencia de sus equivalentes de caracteres de puntuaci&amp;oacute;n, sin embargo, hay que decirle a Perl cu&amp;aacute;ndo desea usarlas. A partir de Perl 5.20, estas tres variables son equivalentes a &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$&amp;amp;&lt;/code&gt; y &lt;code&gt;$'&lt;/code&gt; , y &lt;code&gt;/p&lt;/code&gt; se ignora.</target>
        </trans-unit>
        <trans-unit id="faf1880e6e4e5e1670571e23b070295ae744c1fc" translate="yes" xml:space="preserve">
          <source>As described &lt;a href=&quot;#Calling-Conventions-and-Magic-Autogeneration&quot;&gt;above&lt;/a&gt;, Perl may call methods for operators like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; in the course of implementing missing operations like &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , and &lt;code&gt;&amp;amp;=&lt;/code&gt; . While these methods may detect this usage by testing the definedness of the third argument, they should in all cases avoid changing their operands. This is because Perl does not call the copy constructor before invoking these methods.</source>
          <target state="translated">Como se describi&amp;oacute; &lt;a href=&quot;#Calling-Conventions-and-Magic-Autogeneration&quot;&gt;anteriormente&lt;/a&gt; , Perl puede llamar a m&amp;eacute;todos para operadores como &lt;code&gt;+&lt;/code&gt; y &lt;code&gt;&amp;amp;&lt;/code&gt; en el curso de la implementaci&amp;oacute;n de operaciones faltantes como &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; y &lt;code&gt;&amp;amp;=&lt;/code&gt; . Si bien estos m&amp;eacute;todos pueden detectar este uso probando la definici&amp;oacute;n del tercer argumento, en todos los casos deben evitar cambiar sus operandos. Esto se debe a que Perl no llama al constructor de copia antes de invocar estos m&amp;eacute;todos.</target>
        </trans-unit>
        <trans-unit id="6ff132deadaac51720c9e117548f044618ad0a39" translate="yes" xml:space="preserve">
          <source>As discussed elsewhere, Perl has one foot (two hooves?) planted in each of two worlds: the old world of ASCII and single-byte locales, and the new world of Unicode, upgrading when necessary. If your legacy code does not explicitly use Unicode, no automatic switch-over to Unicode should happen.</source>
          <target state="translated">Como ya se ha dicho,Perl tiene un pie (¿dos pezuñas?)plantado en cada uno de los dos mundos:el viejo mundo del ASCII y los locales de un solo byte,y el nuevo mundo del Unicode,que se actualiza cuando es necesario.Si su código heredado no utiliza explícitamente Unicode,no debería producirse un cambio automático a Unicode.</target>
        </trans-unit>
        <trans-unit id="3a28f6e945d7b1d8cd9440551fcd17f03dc59837" translate="yes" xml:space="preserve">
          <source>As explained above, an anonymous function with access to the lexical variables visible when that function was compiled, creates a closure. It retains access to those variables even though it doesn't get run until later, such as in a signal handler or a Tk callback.</source>
          <target state="translated">Como se ha explicado anteriormente,una función anónima con acceso a las variables léxicas visibles cuando se compiló esa función,crea un cierre.Mantiene el acceso a esas variables aunque no se ejecute hasta más tarde,como en un manejador de señales o una llamada Tk.</target>
        </trans-unit>
        <trans-unit id="de6278f8e877d258b1f62760a70228a073ba24fd" translate="yes" xml:space="preserve">
          <source>As explained in &lt;a href=&quot;#ASCII-Rules-versus-Unicode-Rules&quot;&gt;ASCII Rules versus Unicode Rules&lt;/a&gt;, under ASCII rules, they are considered to be unassigned characters.</source>
          <target state="translated">Como se explica en &lt;a href=&quot;#ASCII-Rules-versus-Unicode-Rules&quot;&gt;Reglas ASCII frente a Reglas Unicode&lt;/a&gt; , seg&amp;uacute;n las reglas ASCII, se consideran caracteres no asignados.</target>
        </trans-unit>
        <trans-unit id="8ffaa22d40c8f644f2c59a68a07b28bdf08a1f8a" translate="yes" xml:space="preserve">
          <source>As explained in &lt;a href=&quot;#prop_invlist()&quot;&gt;prop_invlist()&lt;/a&gt;, whether a code point is in the list or not depends on if the index is even (in) or odd (not in). And as explained in &lt;a href=&quot;#prop_invmap()&quot;&gt;prop_invmap()&lt;/a&gt;, the index is used with the returned parallel array to find the mapping.</source>
          <target state="translated">Como se explica en &lt;a href=&quot;#prop_invlist()&quot;&gt;prop_invlist ()&lt;/a&gt; , si un punto de c&amp;oacute;digo est&amp;aacute; en la lista o no depende de si el &amp;iacute;ndice es par (en) o impar (no en). Y como se explica en &lt;a href=&quot;#prop_invmap()&quot;&gt;prop_invmap ()&lt;/a&gt; , el &amp;iacute;ndice se usa con la matriz paralela devuelta para encontrar el mapeo.</target>
        </trans-unit>
        <trans-unit id="c53e475afb32fdd8296f1c9a917ef2e75b376078" translate="yes" xml:space="preserve">
          <source>As for other operations, the subroutine implementing '=' is passed three arguments, though the last two are always &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;''&lt;/code&gt; .</source>
          <target state="translated">En cuanto a otras operaciones, a la subrutina que implementa '=' se le pasan tres argumentos, aunque los dos &amp;uacute;ltimos son siempre &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;''&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f54bd3297d1b4b8911e3de6ffd9e1ee35795e3c" translate="yes" xml:space="preserve">
          <source>As if all those classes weren't enough, Perl also defines POSIX-style character classes. These have the form &lt;code&gt;[:name:]&lt;/code&gt;, with &lt;code&gt;name&lt;/code&gt; the name of the POSIX class. The POSIX classes are &lt;code&gt;alpha&lt;/code&gt; , &lt;code&gt;alnum&lt;/code&gt; , &lt;code&gt;ascii&lt;/code&gt; , &lt;code&gt;cntrl&lt;/code&gt; , &lt;code&gt;digit&lt;/code&gt; , &lt;code&gt;graph&lt;/code&gt; , &lt;code&gt;lower&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;punct&lt;/code&gt; , &lt;code&gt;space&lt;/code&gt; , &lt;code&gt;upper&lt;/code&gt; , and &lt;code&gt;xdigit&lt;/code&gt; , and two extensions, &lt;code&gt;word&lt;/code&gt; (a Perl extension to match &lt;code&gt;\w&lt;/code&gt; ), and &lt;code&gt;blank&lt;/code&gt; (a GNU extension). The &lt;code&gt;//a&lt;/code&gt; modifier restricts these to matching just in the ASCII range; otherwise they can match the same as their corresponding Perl Unicode classes: &lt;code&gt;[:upper:]&lt;/code&gt; is the same as &lt;code&gt;\p{IsUpper}&lt;/code&gt; , etc. (There are some exceptions and gotchas with this; see &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt; for a full discussion.) The &lt;code&gt;[:digit:]&lt;/code&gt;, &lt;code&gt;[:word:]&lt;/code&gt;, and &lt;code&gt;[:space:]&lt;/code&gt; correspond to the familiar &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; , and &lt;code&gt;\s&lt;/code&gt; character classes. To negate a POSIX class, put a &lt;code&gt;^&lt;/code&gt; in front of the name, so that, e.g., &lt;code&gt;[:^digit:]&lt;/code&gt; corresponds to &lt;code&gt;\D&lt;/code&gt; and, under Unicode, &lt;code&gt;\P{IsDigit}&lt;/code&gt; . The Unicode and POSIX character classes can be used just like &lt;code&gt;\d&lt;/code&gt; , with the exception that POSIX character classes can only be used inside of a character class:</source>
          <target state="translated">Como si todas esas clases no fueran suficientes, Perl tambi&amp;eacute;n define clases de caracteres al estilo POSIX. Estos tienen la forma &lt;code&gt;[:name:]&lt;/code&gt; , con &lt;code&gt;name&lt;/code&gt; el nombre de la clase POSIX. Las clases POSIX son &lt;code&gt;alpha&lt;/code&gt; , &lt;code&gt;alnum&lt;/code&gt; , &lt;code&gt;ascii&lt;/code&gt; , &lt;code&gt;cntrl&lt;/code&gt; , &lt;code&gt;digit&lt;/code&gt; , &lt;code&gt;graph&lt;/code&gt; , &lt;code&gt;lower&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;punct&lt;/code&gt; , &lt;code&gt;space&lt;/code&gt; , &lt;code&gt;upper&lt;/code&gt; y &lt;code&gt;xdigit&lt;/code&gt; , y dos extensiones, &lt;code&gt;word&lt;/code&gt; (una extensi&amp;oacute;n Perl para coincidir con &lt;code&gt;\w&lt;/code&gt; ) y en &lt;code&gt;blank&lt;/code&gt; (una extensi&amp;oacute;n GNU ). El &lt;code&gt;//a&lt;/code&gt; El modificador los restringe para que coincidan solo en el rango ASCII; de lo contrario se pueden igualar los mismos que sus correspondientes clases Perl Unicode: &lt;code&gt;[:upper:]&lt;/code&gt; es lo mismo que &lt;code&gt;\p{IsUpper}&lt;/code&gt; , etc. (Hay algunas excepciones y trampas con este; ver &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt; para una discusi&amp;oacute;n completa.) El &lt;code&gt;[:digit:]&lt;/code&gt; , &lt;code&gt;[:word:]&lt;/code&gt; y &lt;code&gt;[:space:]&lt;/code&gt; corresponden a lo familiar &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; y &lt;code&gt;\s&lt;/code&gt; clases de personajes. Para negar una clase POSIX, coloque &lt;code&gt;^&lt;/code&gt; delante del nombre, de modo que, por ejemplo, &lt;code&gt;[:^digit:]&lt;/code&gt; corresponda a &lt;code&gt;\D&lt;/code&gt; y, en Unicode, &lt;code&gt;\P{IsDigit}&lt;/code&gt; . Las clases de caracteres Unicode y POSIX se pueden usar como &lt;code&gt;\d&lt;/code&gt; , con la excepci&amp;oacute;n de que las clases de caracteres POSIX solo se pueden usar dentro de una clase de caracteres:</target>
        </trans-unit>
        <trans-unit id="460ff6781c9a7b0d42e2f096c304dc01b5296e55" translate="yes" xml:space="preserve">
          <source>As implied above, the environment accessed through &lt;code&gt;%ENV&lt;/code&gt; is global, and the convention is that program specific environment variables are of the form &lt;code&gt;Program$Name&lt;/code&gt; . Each filesystem maintains a current directory, and the current filesystem's current directory is the &lt;b&gt;global&lt;/b&gt; current directory. Consequently, sociable programs don't change the current directory but rely on full pathnames, and programs (and Makefiles) cannot assume that they can spawn a child process which can change the current directory without affecting its parent (and everyone else for that matter).</source>
          <target state="translated">Como se indic&amp;oacute; anteriormente, el entorno al que se accede a trav&amp;eacute;s de &lt;code&gt;%ENV&lt;/code&gt; es global, y la convenci&amp;oacute;n es que las variables de entorno espec&amp;iacute;ficas del programa tienen el formato &lt;code&gt;Program$Name&lt;/code&gt; . Cada sistema de archivos mantiene un directorio actual, y el directorio actual del sistema de archivos actual es el directorio actual &lt;b&gt;global&lt;/b&gt; . En consecuencia, los programas sociables no cambian el directorio actual, sino que se basan en nombres de ruta completos, y los programas (y Makefiles) no pueden asumir que pueden generar un proceso hijo que puede cambiar el directorio actual sin afectar a su padre (y a todos los dem&amp;aacute;s) .</target>
        </trans-unit>
        <trans-unit id="9cfe8ec9bce67c19def3a159ea6c0eb1d6dbe31c" translate="yes" xml:space="preserve">
          <source>As in some shells, you can enclose the variable name in braces to disambiguate it from following alphanumerics (and underscores). You must also do this when interpolating a variable into a string to separate the variable name from a following double-colon or an apostrophe, since these would be otherwise treated as a package separator:</source>
          <target state="translated">Como en algunas conchas,puedes encerrar el nombre de la variable entre corchetes para desambiguarla de seguir los alfanuméricos (y los subrayados).También se debe hacer esto cuando se interpola una variable en una cadena para separar el nombre de la variable de un doble punto o un apóstrofe que le sigue,ya que de otro modo se trataría como un separador de paquetes:</target>
        </trans-unit>
        <trans-unit id="f260d12b5b1b7a497f5733dde8f966ff0dea7a60" translate="yes" xml:space="preserve">
          <source>As it stands it predates version.pm but has the same goal: make version strings visible and comparable.</source>
          <target state="translated">En su estado actual es anterior a version.pm pero tiene el mismo objetivo:hacer visibles y comparables las cadenas de la versión.</target>
        </trans-unit>
        <trans-unit id="e22bdaf7af0b55a0257fbf249cc6b2acfdfc9220" translate="yes" xml:space="preserve">
          <source>As its name suggests, if your code tripped a mandatory warning, you would get a warning whether you wanted it or not. For example, the code below would always produce an &lt;code&gt;&quot;isn't numeric&quot;&lt;/code&gt; warning about the &quot;2:&quot;.</source>
          <target state="translated">Como sugiere su nombre, si su c&amp;oacute;digo activ&amp;oacute; una advertencia obligatoria, recibir&amp;iacute;a una advertencia tanto si la deseaba como si no. Por ejemplo, el c&amp;oacute;digo siguiente siempre producir&amp;iacute;a una advertencia &lt;code&gt;&quot;isn't numeric&quot;&lt;/code&gt; sobre el &quot;2:&quot;.</target>
        </trans-unit>
        <trans-unit id="299f8da88c7d33c41fa9b9da7b25493959ed6b3c" translate="yes" xml:space="preserve">
          <source>As just mentioned, all variables are, by default, thread local. To use shared variables, you need to also load &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt;:</source>
          <target state="translated">Como se acaba de mencionar, todas las variables son, por defecto, locales de hilo. Para usar variables compartidas, tambi&amp;eacute;n debe cargar &lt;a href=&quot;threads/shared&quot;&gt;hilos :: shared&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1b2545d2ff62a227583262bedb22954e6e8e3fc3" translate="yes" xml:space="preserve">
          <source>As locks are advisory, they do not prevent data access or modification by another thread that does not itself attempt to obtain a lock on the variable.</source>
          <target state="translated">Como los bloqueos son de carácter consultivo,no impiden el acceso a los datos o la modificación por parte de otro hilo que no intente por sí mismo obtener un bloqueo de la variable.</target>
        </trans-unit>
        <trans-unit id="81ff74ffe73c98f024294d6b4b3ccdb104adb917" translate="yes" xml:space="preserve">
          <source>As long as all documents processed result in some output, even if that output includes errata (a &lt;code&gt;POD ERRORS&lt;/code&gt; section generated with &lt;code&gt;--errors=pod&lt;/code&gt; ), &lt;b&gt;pod2man&lt;/b&gt; will exit with status 0. If any of the documents being processed do not result in an output document, &lt;b&gt;pod2man&lt;/b&gt; will exit with status 1. If there are syntax errors in a POD document being processed and the error handling style is set to the default of &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;b&gt;pod2man&lt;/b&gt; will abort immediately with exit status 255.</source>
          <target state="translated">Siempre que todos los documentos procesados &lt;code&gt;--errors=pod&lt;/code&gt; como resultado alg&amp;uacute;n resultado, incluso si ese resultado incluye erratas (una secci&amp;oacute;n &lt;code&gt;POD ERRORS&lt;/code&gt; ERRORS generada con --errors = pod ), &lt;b&gt;pod2man&lt;/b&gt; saldr&amp;aacute; con el estado 0. Si alguno de los documentos que se est&amp;aacute;n procesando no da como resultado un documento de salida, &lt;b&gt;pod2man&lt;/b&gt; saldr&amp;aacute; con el estado 1. Si hay errores de sintaxis en un documento POD que se est&amp;aacute; procesando y el estilo de manejo de errores se establece en el valor predeterminado de &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;b&gt;pod2man abortar&amp;aacute;&lt;/b&gt; inmediatamente con el estado de salida 255.</target>
        </trans-unit>
        <trans-unit id="00a3a680bcee6a61521d2a5ef5058ff99a76856b" translate="yes" xml:space="preserve">
          <source>As long as all documents processed result in some output, even if that output includes errata (a &lt;code&gt;POD ERRORS&lt;/code&gt; section generated with &lt;code&gt;--errors=pod&lt;/code&gt; ), &lt;b&gt;pod2text&lt;/b&gt; will exit with status 0. If any of the documents being processed do not result in an output document, &lt;b&gt;pod2text&lt;/b&gt; will exit with status 1. If there are syntax errors in a POD document being processed and the error handling style is set to the default of &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;b&gt;pod2text&lt;/b&gt; will abort immediately with exit status 255.</source>
          <target state="translated">Siempre que todos los documentos procesados &lt;code&gt;--errors=pod&lt;/code&gt; como resultado alg&amp;uacute;n resultado, incluso si ese resultado incluye erratas (una secci&amp;oacute;n de &lt;code&gt;POD ERRORS&lt;/code&gt; generada con --errors = pod ), &lt;b&gt;pod2text&lt;/b&gt; saldr&amp;aacute; con el estado 0. Si alguno de los documentos que se est&amp;aacute;n procesando no da como resultado un documento de salida, &lt;b&gt;pod2text&lt;/b&gt; saldr&amp;aacute; con el estado 1. Si hay errores de sintaxis en un documento POD que se est&amp;aacute; procesando y el estilo de manejo de errores se establece en el valor predeterminado de &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;b&gt;pod2text&lt;/b&gt; se cancelar&amp;aacute; inmediatamente con el estado de salida 255.</target>
        </trans-unit>
        <trans-unit id="95c1aea5304f4de3806c6769617146a8ffc159e5" translate="yes" xml:space="preserve">
          <source>As long as the reference is never returned by any function within the module, no outside module can see the subroutine, because its name is not in any package's symbol table. Remember that it's not</source>
          <target state="translated">Mientras la referencia nunca sea devuelta por ninguna función dentro del módulo,ningún módulo externo puede ver la subrutina,porque su nombre no está en la tabla de símbolos de ningún paquete.Recuerde que no es</target>
        </trans-unit>
        <trans-unit id="958bb5f65d2f4962aaa4f5dd2b31857927db841a" translate="yes" xml:space="preserve">
          <source>As mentioned &lt;a href=&quot;#Mathemagic%2c-Mutators%2c-and-Copy-Constructors&quot;&gt;above&lt;/a&gt;, this operation is called when a mutator is applied to a reference that shares its object with some other reference. For example, if &lt;code&gt;$b&lt;/code&gt; is mathemagical, and &lt;code&gt;'++'&lt;/code&gt; is overloaded with &lt;code&gt;'incr'&lt;/code&gt; , and &lt;code&gt;'='&lt;/code&gt; is overloaded with &lt;code&gt;'clone'&lt;/code&gt; , then the code</source>
          <target state="translated">Como se mencion&amp;oacute; &lt;a href=&quot;#Mathemagic%2c-Mutators%2c-and-Copy-Constructors&quot;&gt;anteriormente&lt;/a&gt; , esta operaci&amp;oacute;n se llama cuando se aplica un mutador a una referencia que comparte su objeto con alguna otra referencia. Por ejemplo, si &lt;code&gt;$b&lt;/code&gt; es matem&amp;aacute;tico, y &lt;code&gt;'++'&lt;/code&gt; est&amp;aacute; sobrecargado con &lt;code&gt;'incr'&lt;/code&gt; , y &lt;code&gt;'='&lt;/code&gt; est&amp;aacute; sobrecargado con &lt;code&gt;'clone'&lt;/code&gt; , entonces el c&amp;oacute;digo</target>
        </trans-unit>
        <trans-unit id="6db309618dd0587d20027a36c5759130977518d4" translate="yes" xml:space="preserve">
          <source>As mentioned above under &lt;a href=&quot;#ALIASES&quot;&gt;ALIASES&lt;/a&gt;, Unicode 6.1 defines extra names (synonyms or aliases) for some code points, most of which were already available as Perl extensions. All these are accepted by &lt;code&gt;\N{...}&lt;/code&gt; and the other functions in this module, but &lt;code&gt;viacode&lt;/code&gt; has to choose which one name to return for a given input code point, so it returns the &quot;best&quot; name. To understand how this works, it is helpful to know more about the Unicode name properties. All code points actually have only a single name, which (starting in Unicode 2.0) can never change once a character has been assigned to the code point. But mistakes have been made in assigning names, for example sometimes a clerical error was made during the publishing of the Standard which caused words to be misspelled, and there was no way to correct those. The Name_Alias property was eventually created to handle these situations. If a name was wrong, a corrected synonym would be published for it, using Name_Alias. &lt;code&gt;viacode&lt;/code&gt; will return that corrected synonym as the &quot;best&quot; name for a code point. (It is even possible, though it hasn't happened yet, that the correction itself will need to be corrected, and so another Name_Alias can be created for that code point; &lt;code&gt;viacode&lt;/code&gt; will return the most recent correction.)</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente en &lt;a href=&quot;#ALIASES&quot;&gt;ALIAS&lt;/a&gt; , Unicode 6.1 define nombres adicionales (sin&amp;oacute;nimos o alias) para algunos puntos de c&amp;oacute;digo, la mayor&amp;iacute;a de los cuales ya estaban disponibles como extensiones Perl. Todos estos son aceptados por &lt;code&gt;\N{...}&lt;/code&gt; y las otras funciones en este m&amp;oacute;dulo, pero &lt;code&gt;viacode&lt;/code&gt; tiene que elegir qu&amp;eacute; nombre devolver para un punto de c&amp;oacute;digo de entrada dado, por lo que devuelve el &quot;mejor&quot; nombre. Para comprender c&amp;oacute;mo funciona esto, es &amp;uacute;til saber m&amp;aacute;s sobre las propiedades de los nombres Unicode. Todos los puntos de c&amp;oacute;digo en realidad tienen un solo nombre, que (a partir de Unicode 2.0) nunca puede cambiar una vez que se ha asignado un car&amp;aacute;cter al punto de c&amp;oacute;digo. Pero se han cometido errores al asignar nombres, por ejemplo, a veces se cometi&amp;oacute; un error administrativo durante la publicaci&amp;oacute;n de la Norma que provoc&amp;oacute; que las palabras se escribieran mal, y no hab&amp;iacute;a forma de corregirlas. La propiedad Name_Alias ​​finalmente se cre&amp;oacute; para manejar estas situaciones. Si un nombre era incorrecto, se publicar&amp;iacute;a un sin&amp;oacute;nimo corregido para &amp;eacute;l, utilizando Name_Alias. &lt;code&gt;viacode&lt;/code&gt; devolver&amp;aacute; ese sin&amp;oacute;nimo corregido como el &quot;mejor&quot; nombre para un punto de c&amp;oacute;digo. (Incluso es posible, aunque a&amp;uacute;n no ha sucedido, que la correcci&amp;oacute;n en s&amp;iacute; deba corregirse y, por lo tanto, se puede crear otro Name_Alias ​​para ese punto de c&amp;oacute;digo; &lt;code&gt;viacode&lt;/code&gt; devolver&amp;aacute; la correcci&amp;oacute;n m&amp;aacute;s reciente).</target>
        </trans-unit>
        <trans-unit id="aa5ef151af9bb6073935edbcfff85b0147b33678" translate="yes" xml:space="preserve">
          <source>As mentioned above, UTF-8 uses a variable number of bytes to store a character. Characters with values 0...127 are stored in one byte, just like good ol' ASCII. Character 128 is stored as &lt;code&gt;v194.128&lt;/code&gt; ; this continues up to character 191, which is &lt;code&gt;v194.191&lt;/code&gt; . Now we've run out of bits (191 is binary &lt;code&gt;10111111&lt;/code&gt; ) so we move on; character 192 is &lt;code&gt;v195.128&lt;/code&gt; . And so it goes on, moving to three bytes at character 2048. &lt;a href=&quot;perlunicode#Unicode-Encodings&quot;&gt;Unicode Encodings in perlunicode&lt;/a&gt; has pictures of how this works.</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, UTF-8 usa un n&amp;uacute;mero variable de bytes para almacenar un car&amp;aacute;cter. Los caracteres con valores 0 ... 127 se almacenan en un byte, como el buen ASCII. El car&amp;aacute;cter 128 se almacena como &lt;code&gt;v194.128&lt;/code&gt; ; esto contin&amp;uacute;a hasta el car&amp;aacute;cter 191, que es &lt;code&gt;v194.191&lt;/code&gt; . Ahora nos hemos quedado sin bits (191 es el binario &lt;code&gt;10111111&lt;/code&gt; ), as&amp;iacute; que seguimos adelante; el car&amp;aacute;cter 192 es &lt;code&gt;v195.128&lt;/code&gt; . Y as&amp;iacute; contin&amp;uacute;a, movi&amp;eacute;ndose a tres bytes en el car&amp;aacute;cter 2048. &lt;a href=&quot;perlunicode#Unicode-Encodings&quot;&gt;Codificaciones Unicode en perlunicode&lt;/a&gt; tiene im&amp;aacute;genes de c&amp;oacute;mo funciona esto.</target>
        </trans-unit>
        <trans-unit id="b80f86706a5e778489f2084a741a86389a8e67cd" translate="yes" xml:space="preserve">
          <source>As mentioned above, you can determine the context of the currently executing subroutine in Perl with</source>
          <target state="translated">Como se ha mencionado anteriormente,se puede determinar el contexto de la subrutina que se está ejecutando actualmente en Perl con</target>
        </trans-unit>
        <trans-unit id="00501a67a82ec0513abc29055abfbad02a55f669" translate="yes" xml:space="preserve">
          <source>As mentioned at the top of this document, if you are having problems with these example extensions, you might see if any of these help you.</source>
          <target state="translated">Como se mencionó en la parte superior de este documento,si tienes problemas con estas extensiones de ejemplo,puedes ver si alguna de ellas te ayuda.</target>
        </trans-unit>
        <trans-unit id="2746f2e141da00d82feca97a110b834cca59fd6d" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, Perl can store a number in any one of three formats, but most operators typically understand only one of those formats. When a numeric value is passed as an argument to such an operator, it will be converted to the format understood by the operator.</source>
          <target state="translated">Como se mencionó anteriormente,Perl puede almacenar un número en cualquiera de los tres formatos,pero la mayoría de los operadores normalmente sólo entienden uno de esos formatos.Cuando se pasa un valor numérico como argumento a un operador de ese tipo,se convertirá al formato que entiende el operador.</target>
        </trans-unit>
        <trans-unit id="77154bb24a38474664192f3ea13c3d83da99f57f" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, a &quot;callback&quot; key may be added to the &lt;code&gt;TAP::Parser&lt;/code&gt; constructor. If present, each callback corresponding to a given result type will be called with the result as the argument if the &lt;code&gt;run&lt;/code&gt; method is used. The callback is expected to be a subroutine reference (or anonymous subroutine) which is invoked with the parser result as its argument.</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, se puede agregar una clave de &quot;devoluci&amp;oacute;n de llamada&quot; al constructor &lt;code&gt;TAP::Parser&lt;/code&gt; . Si est&amp;aacute; presente, cada devoluci&amp;oacute;n de llamada correspondiente a un tipo de resultado dado se llamar&amp;aacute; con el resultado como argumento si se utiliza el m&amp;eacute;todo de &lt;code&gt;run&lt;/code&gt; . Se espera que la devoluci&amp;oacute;n de llamada sea una referencia de subrutina (o subrutina an&amp;oacute;nima) que se invoca con el resultado del analizador como argumento.</target>
        </trans-unit>
        <trans-unit id="4ebe40c302b03d332e451ead97b5b34c4f2894b9" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, in the case of the default engines, the &lt;code&gt;pprivate&lt;/code&gt; will be a pointer to a regexp_internal structure which holds the compiled program and any additional data that is private to the regex engine implementation.</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, en el caso de los motores predeterminados, &lt;code&gt;pprivate&lt;/code&gt; ser&amp;aacute; un puntero a una estructura regexp_internal que contiene el programa compilado y cualquier dato adicional que sea privado para la implementaci&amp;oacute;n del motor regex.</target>
        </trans-unit>
        <trans-unit id="05bef95fb25bb75da2eac006c647172d0c563725" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;../encode&quot;&gt;Encode&lt;/a&gt;, encodings are (in the current implementation at least) defined as objects. The mapping of encoding name to object is via the &lt;code&gt;%Encode::Encoding&lt;/code&gt; hash. Though you can directly manipulate this hash, it is strongly encouraged to use this base class module and add encode() and decode() methods.</source>
          <target state="translated">Como se menciona en &lt;a href=&quot;../encode&quot;&gt;Encode&lt;/a&gt; , las codificaciones se definen (al menos en la implementaci&amp;oacute;n actual) como objetos. La asignaci&amp;oacute;n del nombre de codificaci&amp;oacute;n al objeto se realiza mediante el hash &lt;code&gt;%Encode::Encoding&lt;/code&gt; . Aunque puede manipular directamente este hash, se recomienda encarecidamente utilizar este m&amp;oacute;dulo de clase base y agregar los m&amp;eacute;todos encode () y decode ().</target>
        </trans-unit>
        <trans-unit id="83fbfdaddc2272e65e0714e5d0f69ab35b42f974" translate="yes" xml:space="preserve">
          <source>As mentioned in the previous item, this still doesn't work when using socket I/O between Unix and Macintosh. You'll need to hard code your line terminators, in that case.</source>
          <target state="translated">Como se mencionó en el punto anterior,esto todavía no funciona cuando se usa el socket I/O entre Unix y Macintosh.Necesitarás codificar tus terminadores de línea,en ese caso.</target>
        </trans-unit>
        <trans-unit id="ed52abb82f45ac71a451aad1bb7530a654fe2ad3" translate="yes" xml:space="preserve">
          <source>As mentioned previously, dynamic loading isn't currently available nor is MakeMaker. Both are high-priority items.</source>
          <target state="translated">Como se mencionó anteriormente,la carga dinámica no está disponible actualmente ni tampoco MakeMaker.Ambos son elementos de alta prioridad.</target>
        </trans-unit>
        <trans-unit id="9fbc47f4ab04b1b192086c459c88acf77887350f" translate="yes" xml:space="preserve">
          <source>As mentioned, the function returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no name is known for the code point. In Unicode the proper name for these is the empty string, which &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; stringifies to. (If you ask for a code point past the legal Unicode maximum of U+10FFFF that you haven't assigned an alias to, you get &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; plus a warning.)</source>
          <target state="translated">Como se mencion&amp;oacute;, la funci&amp;oacute;n devuelve &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si no se conoce ning&amp;uacute;n nombre para el punto de c&amp;oacute;digo. En Unicode, el nombre correcto para estos es la cadena vac&amp;iacute;a, que &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; cadena a. (Si solicita un punto de c&amp;oacute;digo m&amp;aacute;s all&amp;aacute; del m&amp;aacute;ximo legal de Unicode de U + 10FFFF al que no ha asignado un alias, obtendr&amp;aacute; &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s una advertencia).</target>
        </trans-unit>
        <trans-unit id="651eca43c6e2d73bc740fcae1016d17e36d82316" translate="yes" xml:space="preserve">
          <source>As most of the remaining expected output to the error stream will be created by &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;'s &lt;code&gt;diag&lt;/code&gt; function, &lt;a href=&quot;tester&quot;&gt;Test::Builder::Tester&lt;/a&gt; provides a convenience function &lt;code&gt;test_diag&lt;/code&gt; that you can use instead of &lt;code&gt;test_err&lt;/code&gt; .</source>
          <target state="translated">Como la mayor parte del resto de la producci&amp;oacute;n se espera que el flujo de error ser&amp;aacute; creado por &lt;a href=&quot;../builder&quot;&gt;Test :: Constructor&lt;/a&gt; 's &lt;code&gt;diag&lt;/code&gt; funci&amp;oacute;n, &lt;a href=&quot;tester&quot;&gt;Test :: :: Constructor Tester&lt;/a&gt; proporciona una funci&amp;oacute;n de conveniencia &lt;code&gt;test_diag&lt;/code&gt; que se puede utilizar en lugar de &lt;code&gt;test_err&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3938aef953ff6d9fa864efd013ef275f9aaeca4" translate="yes" xml:space="preserve">
          <source>As noted above, if the file does not already exist, then the append-mode open will create it for you. But if the file does already exist, its contents are safe from harm because you will be adding your new text past the end of the old text.</source>
          <target state="translated">Como se ha señalado anteriormente,si el archivo no existe ya,entonces el modo de apéndice abierto lo creará para usted.Pero si el archivo ya existe,su contenido está a salvo de cualquier daño,ya que añadirá su nuevo texto más allá del final del texto antiguo.</target>
        </trans-unit>
        <trans-unit id="aa50c7a75f631655fc7d60c7b218e502c8aba3fb" translate="yes" xml:space="preserve">
          <source>As noted earlier in this document, the scalar sense of list assignment is the number of elements on the right-hand side of the assignment. The null list contains no elements, so when the password file is exhausted, the result is 0, not 2.</source>
          <target state="translated">Como se ha señalado anteriormente en el presente documento,el sentido escalar de la asignación de listas es el número de elementos que se encuentran a la derecha de la asignación.La lista nula no contiene ningún elemento,por lo que cuando se agota el archivo de contraseñas,el resultado es 0,no 2.</target>
        </trans-unit>
        <trans-unit id="c32dd8a34a2658e1d2e1869aeb4cec0307b6493f" translate="yes" xml:space="preserve">
          <source>As noted in &lt;a href=&quot;#USING-LOCALES&quot;&gt;USING LOCALES&lt;/a&gt;, &lt;code&gt;cmp&lt;/code&gt; compares according to the current collation locale when &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect, but falls back to a char-by-char comparison for strings that the locale says are equal. You can use &lt;code&gt;POSIX::strcoll()&lt;/code&gt; if you don't want this fall-back:</source>
          <target state="translated">Como se indica en &lt;a href=&quot;#USING-LOCALES&quot;&gt;UTILIZAR LOCALES&lt;/a&gt; , &lt;code&gt;cmp&lt;/code&gt; se compara de acuerdo con la configuraci&amp;oacute;n regional de clasificaci&amp;oacute;n actual cuando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; est&amp;aacute; en vigor, pero recurre a una comparaci&amp;oacute;n de caracteres por caracteres para las cadenas que la configuraci&amp;oacute;n regional dice que son iguales. Puede usar &lt;code&gt;POSIX::strcoll()&lt;/code&gt; si no desea esta alternativa :</target>
        </trans-unit>
        <trans-unit id="eda06429df1073940e96ea523060e042021aeec8" translate="yes" xml:space="preserve">
          <source>As noted in &lt;a href=&quot;perlhack#TESTING&quot;&gt;TESTING in perlhack&lt;/a&gt;, when writing test scripts, the file</source>
          <target state="translated">Como se indica en &lt;a href=&quot;perlhack#TESTING&quot;&gt;PRUEBAS en perlhack&lt;/a&gt; , al escribir scripts de prueba, el archivo</target>
        </trans-unit>
        <trans-unit id="716cc3d3aff35fc6629ccc256677b64774af14df" translate="yes" xml:space="preserve">
          <source>As of 1.37_02 install() supports the use of a list of patterns to filter out files that shouldn't be installed. If $skip is omitted or undefined then install will try to read the list from INSTALL.SKIP in the CWD. This file is a list of regular expressions and is just like the MANIFEST.SKIP file used by &lt;a href=&quot;manifest&quot;&gt;ExtUtils::Manifest&lt;/a&gt;.</source>
          <target state="translated">A partir de 1.37_02 install () admite el uso de una lista de patrones para filtrar los archivos que no deber&amp;iacute;an instalarse. Si $ skip se omite o no est&amp;aacute; definido, install intentar&amp;aacute; leer la lista de INSTALL.SKIP en el CWD. Este archivo es una lista de expresiones regulares y es como el archivo MANIFEST.SKIP utilizado por &lt;a href=&quot;manifest&quot;&gt;ExtUtils :: Manifest&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f828a6d861469c7d75db52b836c69689c1760b7" translate="yes" xml:space="preserve">
          <source>As of 3.10, the internal data for all types of codes can be modified.</source>
          <target state="translated">A partir del 3.10,los datos internos de todos los tipos de códigos pueden ser modificados.</target>
        </trans-unit>
        <trans-unit id="1d399ef50aa4f86fbc538d8e5d435b672ada57b9" translate="yes" xml:space="preserve">
          <source>As of 5.14, none of these raises an exception if they are not supported on your platform. However, if warnings are enabled, a warning of the &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; warning class is issued on an unsupported conversion flag. Should you instead prefer an exception, do this:</source>
          <target state="translated">A partir de la versi&amp;oacute;n 5.14, ninguno de estos genera una excepci&amp;oacute;n si no son compatibles con su plataforma. Sin embargo, si las advertencias est&amp;aacute;n habilitadas, se emite una advertencia de la clase de advertencia &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; en un indicador de conversi&amp;oacute;n no admitido. Si en cambio prefiere una excepci&amp;oacute;n, haga esto:</target>
        </trans-unit>
        <trans-unit id="fd9213ca43980debccb984d13f9caaa2e79748be" translate="yes" xml:space="preserve">
          <source>As of 5.14, none of these raises an exception if they are not supported on your platform. However, if warnings are enabled, a warning of the &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; warning class is issued on an unsupported conversion flag. Should you instead prefer an exception, do this:</source>
          <target state="translated">A partir de la versi&amp;oacute;n 5.14, ninguno de estos genera una excepci&amp;oacute;n si no son compatibles con su plataforma. Sin embargo, si las advertencias est&amp;aacute;n habilitadas, se emite una advertencia de la clase de advertencia &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; en un indicador de conversi&amp;oacute;n no admitido. Si en cambio prefiere una excepci&amp;oacute;n, haga esto:</target>
        </trans-unit>
        <trans-unit id="6791199e3f80fe4bbb43c0eaff9608d527ada74b" translate="yes" xml:space="preserve">
          <source>As of 5.14, that can also be written this way:</source>
          <target state="translated">A partir del 5.14,eso también puede ser escrito de esta manera:</target>
        </trans-unit>
        <trans-unit id="b37d45aa3fafa285df8c8611054589c583244ea5" translate="yes" xml:space="preserve">
          <source>As of 5.19.9 setting &lt;code&gt;$/&lt;/code&gt; to any other form of reference will throw a fatal exception. This is in preparation for supporting new ways to set &lt;code&gt;$/&lt;/code&gt; in the future.</source>
          <target state="translated">A partir de 5.19.9, configurar &lt;code&gt;$/&lt;/code&gt; en cualquier otra forma de referencia arrojar&amp;aacute; una excepci&amp;oacute;n fatal. Esto es una preparaci&amp;oacute;n para admitir nuevas formas de establecer &lt;code&gt;$/&lt;/code&gt; en el futuro.</target>
        </trans-unit>
        <trans-unit id="5090edb4c78c4b281b3a889d093a1c4d0aac43d2" translate="yes" xml:space="preserve">
          <source>As of 5.8.1, long doubles are working if you use the Sun compilers (needed for additional math routines not included in libm).</source>
          <target state="translated">A partir de 5.8.1,los dobles largos funcionan si se utilizan los compiladores Sun (necesarios para rutinas matemáticas adicionales no incluidas en la libm).</target>
        </trans-unit>
        <trans-unit id="f508ee41697726e1567be3f0dd308006b0a11bbd" translate="yes" xml:space="preserve">
          <source>As of 5.8.1, the &lt;b&gt;-C&lt;/b&gt; can be followed either by a number or a list of option letters. The letters, their numeric values, and effects are as follows; listing the letters is equal to summing the numbers.</source>
          <target state="translated">A partir de 5.8.1, la &lt;b&gt;-C&lt;/b&gt; puede ir seguida de un n&amp;uacute;mero o una lista de letras de opci&amp;oacute;n. Las letras, sus valores num&amp;eacute;ricos y efectos son los siguientes; enumerar las letras es igual a sumar los n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="45cfda1b1b7f6423e5dd7ec6647effcbf0d30173" translate="yes" xml:space="preserve">
          <source>As of 5.9.5 the directive &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; and its equivalents are lexically scoped, as are the other directives. However they have both compile-time and run-time effects.</source>
          <target state="translated">A partir de 5.9.5, la directiva &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; y sus equivalentes tienen un alcance l&amp;eacute;xico, al igual que las otras directivas. Sin embargo, tienen efectos tanto en tiempo de compilaci&amp;oacute;n como en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d51f5d10f6eede269e073b2d28e8411b4b049f81" translate="yes" xml:space="preserve">
          <source>As of 5.9.5 the directive &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; and its equivalents are lexically scoped, as the other directives are. However they have both compile-time and run-time effects.</source>
          <target state="translated">A partir de 5.9.5, la directiva &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; y sus equivalentes tienen un alcance l&amp;eacute;xico, al igual que las otras directivas. Sin embargo, tienen efectos tanto en tiempo de compilaci&amp;oacute;n como en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8b5a3958e4abf52ef71b991a4f025f997262e7e8" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;Encode&lt;/code&gt; 2.12, &lt;code&gt;CHECK&lt;/code&gt; can also be a code reference which takes the ordinal value of the unmapped character as an argument and returns octets that represent the fallback character. For instance:</source>
          <target state="translated">A partir de &lt;code&gt;Encode&lt;/code&gt; 2.12, &lt;code&gt;CHECK&lt;/code&gt; tambi&amp;eacute;n puede ser una referencia de c&amp;oacute;digo que toma el valor ordinal del car&amp;aacute;cter no mapeado como argumento y devuelve octetos que representan el car&amp;aacute;cter de reserva. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b411b3efc2bae2399e243c4103628c18af471dad" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;Encode&lt;/code&gt; version 2.21, a new method &lt;code&gt;mime_name()&lt;/code&gt; is therefore added.</source>
          <target state="translated">A partir de la versi&amp;oacute;n 2.21 de &lt;code&gt;Encode&lt;/code&gt; , se &lt;code&gt;mime_name()&lt;/code&gt; un nuevo m&amp;eacute;todo mime_name () .</target>
        </trans-unit>
        <trans-unit id="703e152d6b7fb820f5c3dbc21f352bf9bc7a9e95" translate="yes" xml:space="preserve">
          <source>As of CPAN 1.9463, if you do not have permission to write the default perl library directories, CPAN's configuration process will ask you whether you want to bootstrap &amp;lt;local::lib&amp;gt;, which makes keeping a personal perl library directory easy.</source>
          <target state="translated">A partir de CPAN 1.9463, si no tiene permiso para escribir los directorios predeterminados de la biblioteca de Perl, el proceso de configuraci&amp;oacute;n de CPAN le preguntar&amp;aacute; si desea iniciar &amp;lt;local :: lib&amp;gt;, lo que facilita el mantenimiento de un directorio personal de la biblioteca de Perl.</target>
        </trans-unit>
        <trans-unit id="07aaeb2f2c75fecbde3c90f6c2e907a83c502842" translate="yes" xml:space="preserve">
          <source>As of Encode 1.87, the older form</source>
          <target state="translated">A partir del código 1.87,la forma más antigua</target>
        </trans-unit>
        <trans-unit id="b09ae12c2db054fb655cbb26f548a82db4c390c0" translate="yes" xml:space="preserve">
          <source>As of July 2002 (the Perl release 5.8.0), the following platforms were able to build Perl from the standard source code distribution available at &lt;a href=&quot;http://www.cpan.org/src/&quot;&gt;http://www.cpan.org/src/&lt;/a&gt;</source>
          <target state="translated">En julio de 2002 (la versi&amp;oacute;n 5.8.0 de Perl), las siguientes plataformas pudieron compilar Perl a partir de la distribuci&amp;oacute;n de c&amp;oacute;digo fuente est&amp;aacute;ndar disponible en &lt;a href=&quot;http://www.cpan.org/src/&quot;&gt;http://www.cpan.org/src/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcab0673d5c88e7554da234165f977684b228be3" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10, the &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; variables may be used. These are only set if the &lt;code&gt;/p&lt;/code&gt; modifier is present. Consequently they do not penalize the rest of the program. In Perl 5.20, &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; are available whether the &lt;code&gt;/p&lt;/code&gt; has been used or not (the modifier is ignored), and &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$'&lt;/code&gt; and &lt;code&gt;$&amp;amp;&lt;/code&gt; do not cause any speed difference.</source>
          <target state="translated">A partir de Perl 5.10, se pueden usar las variables &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; y &lt;code&gt;${^POSTMATCH}&lt;/code&gt; . Estos solo se establecen si el modificador &lt;code&gt;/p&lt;/code&gt; est&amp;aacute; presente. En consecuencia, no penalizan el resto del programa. En Perl 5.20, &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; y &lt;code&gt;${^POSTMATCH}&lt;/code&gt; est&amp;aacute;n disponibles tanto si se ha utilizado &lt;code&gt;/p&lt;/code&gt; como si no (el modificador se ignora), y &lt;code&gt;$`&lt;/code&gt; , &lt;code&gt;$'&lt;/code&gt; y &lt;code&gt;$&amp;amp;&lt;/code&gt; no causar cualquier diferencia de velocidad.</target>
        </trans-unit>
        <trans-unit id="eafa84154e8f8c3596803a7b5e3904a497adc460" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10, this pragma is lexically scoped and takes effect at compile time. In earlier versions its effect was global and took effect at run-time; the documentation suggested using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; to change the behaviour:</source>
          <target state="translated">A partir de Perl 5.10, este pragma tiene un &amp;aacute;mbito l&amp;eacute;xico y entra en vigor en tiempo de compilaci&amp;oacute;n. En versiones anteriores, su efecto era global y ten&amp;iacute;a efecto en tiempo de ejecuci&amp;oacute;n; la documentaci&amp;oacute;n sugiri&amp;oacute; usar &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; para cambiar el comportamiento:</target>
        </trans-unit>
        <trans-unit id="86d4d0145ccce27050aa6a59ab5275c8b3a0cdb0" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10, you can match balanced text with regular expressions using recursive patterns. Before Perl 5.10, you had to resort to various tricks such as using Perl code in &lt;code&gt;(??{})&lt;/code&gt; sequences.</source>
          <target state="translated">A partir de Perl 5.10, puede hacer coincidir texto equilibrado con expresiones regulares utilizando patrones recursivos. Antes de Perl 5.10, ten&amp;iacute;a que recurrir a varios trucos, como usar c&amp;oacute;digo Perl en secuencias &lt;code&gt;(??{})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eea5149372feb11e1db38e07d50576f276a6c743" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10.0, Perl supports several Python/PCRE-specific extensions to the regex syntax. While Perl programmers are encouraged to use the Perl-specific syntax, the following are also accepted:</source>
          <target state="translated">A partir de Perl 5.10.0,Perl soporta varias extensiones específicas de Python/PCRE para la sintaxis regex.Aunque se anima a los programadores de Perl a utilizar la sintaxis específica de Perl,también se aceptan las siguientes:</target>
        </trans-unit>
        <trans-unit id="793e424fe5bef6967b0c0b6751f2a3b12bcf501f" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10.0, as a form of purely syntactic sugar, you can stack file test operators, in a way that &lt;code&gt;-f -w -x $file&lt;/code&gt; is equivalent to &lt;code&gt;-x $file &amp;amp;&amp;amp; -w _ &amp;amp;&amp;amp; -f _&lt;/code&gt; . (This is only fancy syntax: if you use the return value of &lt;code&gt;-f $file&lt;/code&gt; as an argument to another filetest operator, no special magic will happen.)</source>
          <target state="translated">A partir de Perl 5.10.0, como una forma de az&amp;uacute;car puramente sint&amp;aacute;ctica, puede apilar operadores de prueba de archivos, de manera que &lt;code&gt;-f -w -x $file&lt;/code&gt; sea ​​equivalente a &lt;code&gt;-x $file &amp;amp;&amp;amp; -w _ &amp;amp;&amp;amp; -f _&lt;/code&gt; . (Esta es solo una sintaxis elegante: si usa el valor de retorno de &lt;code&gt;-f $file&lt;/code&gt; como argumento para otro operador de prueba de archivos, no ocurrir&amp;aacute; ninguna magia especial).</target>
        </trans-unit>
        <trans-unit id="4eb7e07d934fae953d19f8161458d55420e41446" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10.0, one can create custom regular expression engines. This is not for the faint of heart, as they have to plug in at the C level. See &lt;a href=&quot;perlreapi&quot;&gt;perlreapi&lt;/a&gt; for more details.</source>
          <target state="translated">A partir de Perl 5.10.0, se pueden crear motores de expresiones regulares personalizados. Esto no es para los d&amp;eacute;biles de coraz&amp;oacute;n, ya que tienen que conectarse al nivel C. Consulte &lt;a href=&quot;perlreapi&quot;&gt;perlreapi&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="0c7a09399a8f27b12757a6f71f279fa17b42fdfd" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10.0, you can also use the &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; modifiers to force big- or little-endian byte-order. This is useful if you want to store signed integers or 64-bit integers, for example.</source>
          <target state="translated">A partir de Perl 5.10.0, tambi&amp;eacute;n puede usar los modificadores &lt;code&gt;&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;&lt;/code&gt; para forzar el orden de bytes de endian grande o peque&amp;ntilde;o. Esto es &amp;uacute;til si desea almacenar enteros con signo o enteros de 64 bits, por ejemplo.</target>
        </trans-unit>
        <trans-unit id="835734cf27f076a5a1e9340fb76782ceeb1a149b" translate="yes" xml:space="preserve">
          <source>As of Perl 5.10.1 there is a new interface for plugging and using method resolution orders other than the default (linear depth first search). The C3 method resolution order added in 5.10.0 has been re-implemented as a plugin, without changing its Perl-space interface.</source>
          <target state="translated">A partir de Perl 5.10.1 hay una nueva interfaz para conectar y utilizar órdenes de resolución de métodos distintos a los predeterminados (búsqueda de profundidad lineal primero).El orden de resolución de métodos C3 añadido en 5.10.0 ha sido reimplementado como un plugin,sin cambiar su interfaz de Perl-espacio.</target>
        </trans-unit>
        <trans-unit id="4ca2607d4b8da91c9aab14d61ac0b65b288bfff7" translate="yes" xml:space="preserve">
          <source>As of Perl 5.12 you can use a bare &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; in a &lt;code&gt;while&lt;/code&gt; loop, which will set &lt;code&gt;$_&lt;/code&gt; on every iteration.</source>
          <target state="translated">A partir de Perl 5.12 se puede utilizar un desnudo &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; en un &lt;code&gt;while&lt;/code&gt; de bucle, que establecer&amp;aacute; &lt;code&gt;$_&lt;/code&gt; en cada iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7ef4b7baf6bbb1a8636644643a30ec84c9a4f514" translate="yes" xml:space="preserve">
          <source>As of Perl 5.12 you can use a bare &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; in a &lt;code&gt;while&lt;/code&gt; loop, which will set &lt;code&gt;$_&lt;/code&gt; on every iteration.</source>
          <target state="translated">A partir de Perl 5.12 se puede utilizar un desnudo &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; en un &lt;code&gt;while&lt;/code&gt; de bucle, que establecer&amp;aacute; &lt;code&gt;$_&lt;/code&gt; en cada iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9aad368f35112b0ebb60af7e4b6035d03ee10832" translate="yes" xml:space="preserve">
          <source>As of Perl 5.12, deprecated features and modules warn the user as they're used. When a module is deprecated, it will also be made available on CPAN. Installing it from CPAN will silence deprecation warnings for that module.</source>
          <target state="translated">A partir de Perl 5.12,las características y módulos obsoletos advierten al usuario cuando se utilizan.Cuando un módulo está desaprobado,también estará disponible en el CPAN.Al instalarlo desde el CPAN se silenciarán las advertencias de depreciación de ese módulo.</target>
        </trans-unit>
        <trans-unit id="7bc75da6cf8214f9a49a145ca7f1ff6dd1976a38" translate="yes" xml:space="preserve">
          <source>As of Perl 5.18 every hash has its own hash traversal order, and this order changes every time a new element is inserted into the hash. This functionality is provided by maintaining an unsigned integer mask (U32) which is xor'ed with the actual bucket id during a traversal of the hash buckets using keys(), values() or each().</source>
          <target state="translated">A partir de Perl 5.18 cada hachís tiene su propio orden transversal de hachís,y este orden cambia cada vez que se inserta un nuevo elemento en el hachís.Esta funcionalidad se proporciona manteniendo una máscara de entero sin signo (U32)que se xorifica con la identificación real del cubo durante una travesía de los cubos de hash usando keys(),values()o each().</target>
        </trans-unit>
        <trans-unit id="a8b875400d906734f1b4f9f29eb27503d8a35f16" translate="yes" xml:space="preserve">
          <source>As of Perl 5.18 you can use a bare &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; in a &lt;code&gt;while&lt;/code&gt; loop, which will set &lt;code&gt;$_&lt;/code&gt; on every iteration.</source>
          <target state="translated">A partir de Perl 5.18 se puede utilizar una dio a luz &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; en un &lt;code&gt;while&lt;/code&gt; de bucle, que establecer&amp;aacute; &lt;code&gt;$_&lt;/code&gt; en cada iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="211e0f721f82a57a3e303b9bd4a37e7c878adb86" translate="yes" xml:space="preserve">
          <source>As of Perl 5.18 you can use a bare &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; in a &lt;code&gt;while&lt;/code&gt; loop, which will set &lt;code&gt;$_&lt;/code&gt; on every iteration.</source>
          <target state="translated">A partir de Perl 5.18 se puede utilizar una dio a luz &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; en un &lt;code&gt;while&lt;/code&gt; de bucle, que establecer&amp;aacute; &lt;code&gt;$_&lt;/code&gt; en cada iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c33c32e4c4b133822c39af8f8540bc2360a9b3e1" translate="yes" xml:space="preserve">
          <source>As of Perl 5.20, instead of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings FATAL =&amp;gt; 'all';&lt;/code&gt; you can use:</source>
          <target state="translated">A partir de Perl 5.20, en lugar de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings FATAL =&amp;gt; 'all';&lt;/code&gt; puedes usar:</target>
        </trans-unit>
        <trans-unit id="c35a63f8082ff3fbb7b2bded313d23f6fdc3cfd9" translate="yes" xml:space="preserve">
          <source>As of Perl 5.22, there is an experimental variant of this loop that accepts a variable preceded by a backslash for VAR, in which case the items in the LIST must be references. The backslashed variable will become an alias to each referenced item in the LIST, which must be of the correct type. The variable needn't be a scalar in this case, and the backslash may be followed by &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;. To use this form, you must enable the &lt;code&gt;refaliasing&lt;/code&gt; feature via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature&lt;/code&gt; . (See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. See also &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Assigning to References in perlref&lt;/a&gt;.)</source>
          <target state="translated">A partir de Perl 5.22, existe una variante experimental de este bucle que acepta una variable precedida por una barra invertida para VAR, en cuyo caso los elementos de LIST deben ser referencias. La variable con barra invertida se convertir&amp;aacute; en un alias para cada elemento referenciado en la LISTA, que debe ser del tipo correcto. La variable no necesita ser un escalar en este caso, y la barra invertida puede ir seguida de &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; . Para utilizar este formulario, debe habilitar la funci&amp;oacute;n de &lt;code&gt;refaliasing&lt;/code&gt; mediante la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; . (Ver &lt;a href=&quot;feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; . Ver tambi&amp;eacute;n &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Asignaci&amp;oacute;n a referencias en perlref&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="df42579e1cb5e3f110d0c1cf4c3bbc08eda67128" translate="yes" xml:space="preserve">
          <source>As of Perl 5.22, this buggy behavior, while preserved for backward compatibility, is detected and emits a deprecation warning. If you want the subroutine to be inlined (with no warning), make sure the variable is not used in a context where it could be modified aside from where it is declared.</source>
          <target state="translated">A partir de Perl 5.22,este comportamiento de los bichos,aunque preservado para la compatibilidad con el pasado,se detecta y emite una advertencia de depreciación.Si quiere que la subrutina esté en línea (sin advertencia),asegúrese de que la variable no se utilice en un contexto en el que pueda ser modificada aparte de donde se declara.</target>
        </trans-unit>
        <trans-unit id="b18e8f64ae6fd8a43ee4372bec94f73e67d74058" translate="yes" xml:space="preserve">
          <source>As of Perl 5.22, you can also use &lt;code&gt;(&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;)x2&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;, &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . (You can also do &lt;code&gt;($x) x 2&lt;/code&gt; , which is less useful, because it assigns to the same variable twice, clobbering the first value assigned.)</source>
          <target state="translated">A partir de Perl 5.22, tambi&amp;eacute;n puede usar &lt;code&gt;(&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;)x2&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;, &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . (Tambi&amp;eacute;n puede hacer &lt;code&gt;($x) x 2&lt;/code&gt; , que es menos &amp;uacute;til, porque asigna a la misma variable dos veces, superando el primer valor asignado).</target>
        </trans-unit>
        <trans-unit id="6f3aa7e1697ed4bbe63edb4cde5bc634c7d4943e" translate="yes" xml:space="preserve">
          <source>As of Perl 5.6, you can represent filehandles with scalar variables which you treat as any other scalar.</source>
          <target state="translated">A partir de Perl 5.6,puedes representar mangos de archivos con variables escalares que tratas como cualquier otro escalar.</target>
        </trans-unit>
        <trans-unit id="90e7536680dcd18ada661ef157609a74a6cebee3" translate="yes" xml:space="preserve">
          <source>As of Perl 5.8.0 after using this module you cannot use the implicit &lt;code&gt;$_&lt;/code&gt; or the special filehandle &lt;code&gt;_&lt;/code&gt; with stat() or lstat(), trying to do so leads into strange errors. The workaround is for &lt;code&gt;$_&lt;/code&gt; to be explicit</source>
          <target state="translated">A partir de Perl 5.8.0, despu&amp;eacute;s de usar este m&amp;oacute;dulo, no puede usar el &lt;code&gt;$_&lt;/code&gt; impl&amp;iacute;cito o el identificador de archivo especial &lt;code&gt;_&lt;/code&gt; con stat () o lstat (), intentar hacerlo conduce a errores extra&amp;ntilde;os. La soluci&amp;oacute;n alternativa es que &lt;code&gt;$_&lt;/code&gt; sea ​​expl&amp;iacute;cito</target>
        </trans-unit>
        <trans-unit id="5fd0a9a99a09c2a713ff60adbdf886450b68308c" translate="yes" xml:space="preserve">
          <source>As of Perl 5.8.0, the &quot;Full&quot; case-folding of</source>
          <target state="translated">A partir de Perl 5.8.0,el caso &quot;completo&quot; de</target>
        </trans-unit>
        <trans-unit id="444326d8d5a5982dc22e2a52147d982ac07eb8e8" translate="yes" xml:space="preserve">
          <source>As of Perl 5.8.0, you can use &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; with multiple arguments. Just like the list forms of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;, no shell escapes happen.</source>
          <target state="translated">A partir de Perl 5.8.0, puede usar &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; con m&amp;uacute;ltiples argumentos. Al igual que las formas de lista de &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; , no se producen escapes de shell.</target>
        </trans-unit>
        <trans-unit id="a68a3c591a49e26bfd6e1872f3f7a653d522ef71" translate="yes" xml:space="preserve">
          <source>As of Perl 5.8.1 the dynamic loading of libraries (DynaLoader, XSLoader) also seems to have become broken in in SunOS 4.x. Therefore the default is to build Perl statically.</source>
          <target state="translated">A partir de Perl 5.8.1 la carga dinámica de las librerías (DynaLoader,XSLoader)también parece haberse roto en SunOS 4.x.Por lo tanto,el valor por defecto es construir Perl estáticamente.</target>
        </trans-unit>
        <trans-unit id="ef5cb6c37e267f59227533f0250c84c8718b7076" translate="yes" xml:space="preserve">
          <source>As of Perl 5.8.1, &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; also has the &lt;code&gt;utf8::is_utf8&lt;/code&gt; function.</source>
          <target state="translated">A partir de Perl 5.8.1, &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; tambi&amp;eacute;n tiene la funci&amp;oacute;n &lt;code&gt;utf8::is_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab205322181f94cdf41d5eaaf572850bb63def33" translate="yes" xml:space="preserve">
          <source>As of Perl 5.9.5 there is a new interface for plugging and using regular expression engines other than the default one.</source>
          <target state="translated">A partir de Perl 5.9.5 hay una nueva interfaz para enchufar y usar motores de expresión regular distintos del predeterminado.</target>
        </trans-unit>
        <trans-unit id="02c3c3ae5c3a1698c2091dbb44ff1c48ff7a71dd" translate="yes" xml:space="preserve">
          <source>As of Perl Symbian port version 0.4.1 any part of Perl's standard regression test suite has not been run on a real Symbian device using the ported Perl, so innumerable bugs may lie in wait. Therefore there is absolutely no warranty.</source>
          <target state="translated">A partir de la versión 0.4.1 del puerto Perl Symbian,cualquier parte del conjunto de pruebas de regresión estándar de Perl no se ha ejecutado en un dispositivo Symbian real utilizando el Perl portado,por lo que pueden existir innumerables errores.Por lo tanto,no hay ninguna garantía.</target>
        </trans-unit>
        <trans-unit id="2a7301a461e47b0be61be125749323ecdfc5a92a" translate="yes" xml:space="preserve">
          <source>As of Perl v5.16.0, it is implemented by the &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; module. See &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; for more details on its behaviour.</source>
          <target state="translated">A partir de Perl v5.16.0, est&amp;aacute; implementado por el m&amp;oacute;dulo &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; . Consulte &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre su comportamiento.</target>
        </trans-unit>
        <trans-unit id="9f7c19e511eae81348e03d06d3194e0d82d15184" translate="yes" xml:space="preserve">
          <source>As of R2.5 of USS for OS/390 and Version 2.3 of VM/ESA these Unix sub-systems do not support the &lt;code&gt;#!&lt;/code&gt; shebang trick for script invocation. Hence, on OS/390 and VM/ESA Perl scripts can be executed with a header similar to the following simple script:</source>
          <target state="translated">A partir de R2.5 de USS para OS / 390 y la versi&amp;oacute;n 2.3 de VM / ESA, estos subsistemas Unix no admiten el c&amp;oacute;digo &lt;code&gt;#!&lt;/code&gt; truco shebang para invocaci&amp;oacute;n de script. Por lo tanto, en OS / 390 y VM / ESA, los scripts Perl se pueden ejecutar con un encabezado similar al siguiente script simple:</target>
        </trans-unit>
        <trans-unit id="4e29546f04e5cfe2122e46676161bb58e8a9f171" translate="yes" xml:space="preserve">
          <source>As of Unicode 6.0, this is always empty.</source>
          <target state="translated">A partir de Unicode 6.0,esto siempre está vacío.</target>
        </trans-unit>
        <trans-unit id="6be62dadd6bbd6b8a9fe9bd5f460bd2ea3dfc014" translate="yes" xml:space="preserve">
          <source>As of VERSION 1.18 all IO::Socket objects have autoflush turned on by default. This was not the case with earlier releases.</source>
          <target state="translated">A partir de la versión 1.18 todos los objetos IO::Socket tienen activado el autoflush por defecto.Este no era el caso con las versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="9b18b6d1424b74e3d0360d9f0334585a766708d3" translate="yes" xml:space="preserve">
          <source>As of db-4.2.x it is no longer needed to do this by hand. Sleepycat has changed the configuration process to add +z on HP-UX automatically.</source>
          <target state="translated">A partir de db-4.2.x ya no es necesario hacerlo a mano.Sleepycat ha cambiado el proceso de configuración para añadir +z en el HP-UX automáticamente.</target>
        </trans-unit>
        <trans-unit id="ddb5b154eee158ecabd0abbac4ff1eab5e92e45f" translate="yes" xml:space="preserve">
          <source>As of perl 5.14 it is possible to hook into the compile-time lexical scope mechanism using &lt;code&gt;Perl_blockhook_register&lt;/code&gt; . This is used like this:</source>
          <target state="translated">A partir de perl 5.14 es posible conectarse al mecanismo de alcance l&amp;eacute;xico en tiempo de compilaci&amp;oacute;n usando &lt;code&gt;Perl_blockhook_register&lt;/code&gt; . Esto se usa as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="283446be77b5c5650a7aade52dfb5d3e56c4e299" translate="yes" xml:space="preserve">
          <source>As of perl 5.9.5 're' debug contains a number of utility functions that may be optionally exported into the caller's namespace. They are listed below.</source>
          <target state="translated">A partir de perl 5.9.5 're' debug contiene una serie de funciones de utilidad que pueden exportarse opcionalmente al espacio de nombres del llamante.Se enumeran a continuación.</target>
        </trans-unit>
        <trans-unit id="5916c6705e19aa4737c1eaecb1fdda26e7395e63" translate="yes" xml:space="preserve">
          <source>As of perl5.6, open() autovivifies file and directory handles as references if you pass it an uninitialized scalar variable. You can then pass these references just like any other scalar, and use them in the place of named handles.</source>
          <target state="translated">A partir de perl5.6,open()autovivenifica los archivos y manejos de directorios como referencias si le pasas una variable escalar no inicializada.Puedes entonces pasar estas referencias como cualquier otro escalar,y usarlas en lugar de los &quot;handles&quot; nombrados.</target>
        </trans-unit>
        <trans-unit id="0d06e02fdc69f862d76b045e6be72fc487c78e0b" translate="yes" xml:space="preserve">
          <source>As of perl5.7.2 all tests pass under:</source>
          <target state="translated">A partir del perl5.7.2 todas las pruebas pasan por debajo:</target>
        </trans-unit>
        <trans-unit id="e7ebc726132cf88aa72c90598602d1b0ee48a664" translate="yes" xml:space="preserve">
          <source>As of perl5.8.1 there is at least one test still failing.</source>
          <target state="translated">A partir del perl5.8.1 hay al menos una prueba que sigue fallando.</target>
        </trans-unit>
        <trans-unit id="1b82fd373dbd0883f99d276e806ca9d5f0a6e144" translate="yes" xml:space="preserve">
          <source>As of release 5 of Perl, assignment to &lt;code&gt;$[&lt;/code&gt; is treated as a compiler directive, and cannot influence the behavior of any other file. (That's why you can only assign compile-time constants to it.) Its use is highly discouraged.</source>
          <target state="translated">A partir de la versi&amp;oacute;n 5 de Perl, la asignaci&amp;oacute;n a &lt;code&gt;$[&lt;/code&gt; se trata como una directiva del compilador y no puede influir en el comportamiento de ning&amp;uacute;n otro archivo. (Es por eso que solo puede asignarle constantes en tiempo de compilaci&amp;oacute;n). Se desaconseja su uso.</target>
        </trans-unit>
        <trans-unit id="1e2bbc98f0506e501d121cbf3463e0bb77e718b4" translate="yes" xml:space="preserve">
          <source>As of release 5.003_01 perl is linked to multithreaded C RTL DLL. If perl itself is not compiled multithread-enabled, so will not be perl's malloc(). However, extensions may use multiple thread on their own risk.</source>
          <target state="translated">A partir de la versión 5.003_01 el perl está vinculado a la DLL RTL multihilo C.Si el propio perl no está compilado con multihilo,no será el malloc()de perl.Sin embargo,las extensiones pueden usar múltiples hilos por su cuenta y riesgo.</target>
        </trans-unit>
        <trans-unit id="5dbdb753a9581b45c8e16e8caa7ad1fc9cd73184" translate="yes" xml:space="preserve">
          <source>As of right now, this returns 2 if the path is absolute with a volume, 1 if it's absolute with no volume, 0 otherwise.</source>
          <target state="translated">A partir de ahora,esto devuelve 2 si el camino es absoluto con un volumen,1 si es absoluto sin volumen,0 en caso contrario.</target>
        </trans-unit>
        <trans-unit id="cedde28f0889c00006609cd1f4e0ab992b6b315c" translate="yes" xml:space="preserve">
          <source>As of the date of this document's last update, the following systems contain PA-RISC 2.0 chips:</source>
          <target state="translated">A la fecha de la última actualización de este documento,los siguientes sistemas contienen chips PA-RISC 2.0:</target>
        </trans-unit>
        <trans-unit id="361f300829fa013b44d60226e2c65866392ff21f" translate="yes" xml:space="preserve">
          <source>As of the date of this document, Perl is fully 64-bit compliant on HP-UX 11.00 and up for both cc- and gcc builds. If you are about to build a 64-bit perl with GNU gcc, please read the gcc section carefully.</source>
          <target state="translated">A partir de la fecha de este documento,Perl es totalmente compatible con los 64 bits en HP-UX 11.00 y más para las versiones cc y gcc.Si está a punto de construir un perl de 64 bits con GNU gcc,por favor lea la sección de gcc cuidadosamente.</target>
        </trans-unit>
        <trans-unit id="6087654ae9665e2974920201f81ba084c4838564" translate="yes" xml:space="preserve">
          <source>As of the time this document was last revised, the following Perl functions were implemented in the VMS port of Perl (functions marked with * are discussed in more detail below):</source>
          <target state="translated">En el momento en que se revisó este documento por última vez,se implementaron las siguientes funciones Perl en el puerto VMS de Perl (las funciones marcadas con*se examinan con más detalle a continuación):</target>
        </trans-unit>
        <trans-unit id="2f434753b82171852395258695f5260796bd3e54" translate="yes" xml:space="preserve">
          <source>As of v5.14, Perl distinguishes three subclasses of UTF‑8 warnings.</source>
          <target state="translated">A partir del v5.14,Perl distingue tres subclases de advertencias UTF-8.</target>
        </trans-unit>
        <trans-unit id="3687eac7ed0d3e9a3819b6d8b59ffbbce6f96ce7" translate="yes" xml:space="preserve">
          <source>As of v5.18.0, both keys and values stored in &lt;code&gt;%ENV&lt;/code&gt; are stringified.</source>
          <target state="translated">A partir de la versi&amp;oacute;n 5.18.0, tanto las claves como los valores almacenados en &lt;code&gt;%ENV&lt;/code&gt; est&amp;aacute;n clasificados.</target>
        </trans-unit>
        <trans-unit id="068ae70c04574cc37cc34db842b7ac8d0c145fb6" translate="yes" xml:space="preserve">
          <source>As of version 1.01 of the AutoSplit module it is possible to have multiple packages within a single file. Both of the following cases are supported:</source>
          <target state="translated">A partir de la versión 1.01 del módulo AutoSplit es posible tener varios paquetes en un solo archivo.Se admiten los dos casos siguientes:</target>
        </trans-unit>
        <trans-unit id="4d09237d697a620472d98ca9564ba252e7440a3a" translate="yes" xml:space="preserve">
          <source>As of version 1.02 (provided with perl 5.12) the object provides &lt;code&gt;&quot;-X&quot;&lt;/code&gt; overloading, so you can call filetest operators (&lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , and so on) on it. It also provides a &lt;code&gt;-&amp;gt;cando&lt;/code&gt; method, called like</source>
          <target state="translated">A partir de la versi&amp;oacute;n 1.02 (proporcionada con perl 5.12), el objeto proporciona una sobrecarga &lt;code&gt;&quot;-X&quot;&lt;/code&gt; , por lo que puede llamar a los operadores de prueba de archivos ( &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , etc.) en &amp;eacute;l. Tambi&amp;eacute;n proporciona un m&amp;eacute;todo &lt;code&gt;-&amp;gt;cando&lt;/code&gt; , llamado like</target>
        </trans-unit>
        <trans-unit id="39c91a8aec6b3b91e09f6a8bd53c1515a32cc61b" translate="yes" xml:space="preserve">
          <source>As of version 1.04 (Perl 5.10), strict verifies that it is used as &quot;strict&quot; to avoid the dreaded Strict trap on case insensitive file systems.</source>
          <target state="translated">A partir de la versión 1.04 (Perl 5.10),Strict verifica que se utiliza como &quot;strict&quot; para evitar la temida trampa de Strict en sistemas de archivos que no distinguen entre mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="5750d09d680a68ca093b8cb502caecf523fc46de" translate="yes" xml:space="preserve">
          <source>As of version 1.32 of this module, constants can be defined in packages other than the caller, by including the package name in the name of the constant:</source>
          <target state="translated">A partir de la versión 1.32 de este módulo,las constantes pueden definirse en paquetes distintos del llamador,incluyendo el nombre del paquete en el nombre de la constante:</target>
        </trans-unit>
        <trans-unit id="a9966baeb16dc71d9782450ad1960be303770497" translate="yes" xml:space="preserve">
          <source>As of version 1.47 the following additions were made to the install interface. Note that the new argument style and use of the %result hash is recommended.</source>
          <target state="translated">A partir de la versión 1.47 se hicieron las siguientes adiciones a la interfaz de instalación.Nótese que se recomienda el nuevo estilo de argumento y el uso del hash %resultado.</target>
        </trans-unit>
        <trans-unit id="e47319fd89f8639b4c6dc3d1dee645f4e3217716" translate="yes" xml:space="preserve">
          <source>As of version 2.12, &lt;code&gt;Encode&lt;/code&gt; supports coderef values for &lt;code&gt;CHECK&lt;/code&gt; ; see below.</source>
          <target state="translated">A partir de la versi&amp;oacute;n 2.12, &lt;code&gt;Encode&lt;/code&gt; admite valores de referencia de c&amp;oacute;digo para &lt;code&gt;CHECK&lt;/code&gt; ; vea abajo.</target>
        </trans-unit>
        <trans-unit id="feaefe7da5a3f173789e3bc38d1cc052b48f0697" translate="yes" xml:space="preserve">
          <source>As of version 2.32 Getopt::Long provides auto-help, a quick and easy way to add the options --help and -? to your program, and handle them.</source>
          <target state="translated">A partir de la versión 2.32 Getopt::Long proporciona auto-ayuda,una forma rápida y fácil de añadir las opciones -ayuda y -? a su programa,y manejarlas.</target>
        </trans-unit>
        <trans-unit id="4961ac95a03fe72cd95305ebd10cd56767e6cd2e" translate="yes" xml:space="preserve">
          <source>As of version 5.00305, OS/2 perl binary distribution comes split into 11 components. Unfortunately, to enable configurable binary installation, the file paths in the zip files are not absolute, but relative to some directory.</source>
          <target state="translated">A partir de la versión 5.00305,la distribución binaria de OS/2 perl viene dividida en 11 componentes.Desafortunadamente,para permitir una instalación binaria configurable,las rutas de los archivos zip no son absolutas,sino relativas a algún directorio.</target>
        </trans-unit>
        <trans-unit id="c5ef8d96f6d787f0f3cc3fb69a33144b75f432e6" translate="yes" xml:space="preserve">
          <source>As of version 5.12.0, perl has stopped using the underlying time library of the operating system it's running on and has its own implementation of those routines with a safe range of at least +/ 2**52 (about 142 million years).</source>
          <target state="translated">A partir de la versión 5.12.0,perl ha dejado de utilizar la biblioteca de tiempo subyacente del sistema operativo en el que se ejecuta y tiene su propia implementación de esas rutinas con un rango seguro de al menos +/2**52 (unos 142 millones de años).</target>
        </trans-unit>
        <trans-unit id="ede48005eab24777f4cf1c1c51404cc14a546bbe" translate="yes" xml:space="preserve">
          <source>As of writing (2010-09) only the</source>
          <target state="translated">Hasta la fecha (2010-09)sólo el</target>
        </trans-unit>
        <trans-unit id="53d68ae04ea90208ac09617d93481673c81dae0c" translate="yes" xml:space="preserve">
          <source>As per &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;, in scalar context it should return the next line, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for no more data. In list context it should return all remaining lines, or an empty list for no more data. The strings returned should include the input record separator &lt;code&gt;$/&lt;/code&gt; (see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;), unless it is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (which means &quot;slurp&quot; mode).</source>
          <target state="translated">Seg&amp;uacute;n &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; , en contexto escalar deber&amp;iacute;a devolver la siguiente l&amp;iacute;nea, o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; para no tener m&amp;aacute;s datos. En el contexto de la lista, deber&amp;iacute;a devolver todas las l&amp;iacute;neas restantes o una lista vac&amp;iacute;a para no tener m&amp;aacute;s datos. Las cadenas devueltas deben incluir el separador de registros de entrada &lt;code&gt;$/&lt;/code&gt; (ver &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; ), a menos que sea &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (que significa modo &quot;slurp&quot;).</target>
        </trans-unit>
        <trans-unit id="35db6e6083bf8853a0d7a773700bfc53f4f3833e" translate="yes" xml:space="preserve">
          <source>As per get(), but returns a tied filehandle. Reading from this filehandle returns the requested message. The filehandle will return EOF at the end of the message and should not be reused.</source>
          <target state="translated">Como get(),pero devuelve un filehandle atado.La lectura de este filehandle devuelve el mensaje solicitado.El filehandle devolverá EOF al final del mensaje y no debe ser reutilizado.</target>
        </trans-unit>
        <trans-unit id="f8d3cabb86865ec30b2f81b742c043bb4dfa0006" translate="yes" xml:space="preserve">
          <source>As perl does not use it, it is not well tested.</source>
          <target state="translated">Como Perl no lo usa,no está bien probado.</target>
        </trans-unit>
        <trans-unit id="04f2eace94f5ec9fb309f7ef275b1f53f5b18652" translate="yes" xml:space="preserve">
          <source>As pragmata are implemented as modules, like any other module, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; myint;&lt;/code&gt; becomes</source>
          <target state="translated">Como pragmata se implementa como m&amp;oacute;dulos, como cualquier otro m&amp;oacute;dulo, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; myint;&lt;/code&gt; se convierte en</target>
        </trans-unit>
        <trans-unit id="6ff69505257da499d009f94993a8c36d403bc517" translate="yes" xml:space="preserve">
          <source>As previously mentioned, the &quot;switch&quot; feature is considered highly experimental; it is subject to change with little notice. In particular, &lt;code&gt;when&lt;/code&gt; has tricky behaviours that are expected to change to become less tricky in the future. Do not rely upon its current (mis)implementation. Before Perl 5.18, &lt;code&gt;given&lt;/code&gt; also had tricky behaviours that you should still beware of if your code must run on older versions of Perl.</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, la funci&amp;oacute;n &quot;cambiar&quot; se considera altamente experimental; est&amp;aacute; sujeto a cambios sin previo aviso. En particular, &lt;code&gt;when&lt;/code&gt; tiene comportamientos complicados que se espera que cambien para ser menos complicados en el futuro. No conf&amp;iacute;e en su (mala) implementaci&amp;oacute;n actual. Antes de Perl 5.18, &lt;code&gt;given&lt;/code&gt; tambi&amp;eacute;n ten&amp;iacute;a comportamientos complicados de los que a&amp;uacute;n debe tener cuidado si su c&amp;oacute;digo debe ejecutarse en versiones anteriores de Perl.</target>
        </trans-unit>
        <trans-unit id="d4ddd43c6028587c10020a05414bb6d70c1790ee" translate="yes" xml:space="preserve">
          <source>As previously noted, individual entries (as opposed to the whole hash) are settable. Perl only cares about Boolean true here, although the values used by</source>
          <target state="translated">Como se ha señalado anteriormente,las entradas individuales (en contraposición a todo el hachís)se pueden establecer.Perl sólo se preocupa por el verdadero Booleano aquí,aunque los valores utilizados por</target>
        </trans-unit>
        <trans-unit id="40863db850a5e2446412cc32d982d2e85c0c2a70" translate="yes" xml:space="preserve">
          <source>As setup, consider this (admittedly rather contrived) example of a tie; all it does is use a file to keep a log of the values assigned to a scalar.</source>
          <target state="translated">Como configuración,consideremos este ejemplo (ciertamente bastante artificioso)de corbata;todo lo que hace es utilizar un archivo para llevar un registro de los valores asignados a un escalar.</target>
        </trans-unit>
        <trans-unit id="d5e7901b05cd99e70f1eb4d22405e5ec5c43c73a" translate="yes" xml:space="preserve">
          <source>As shipped, the only command-line history supplied is a simplistic one that checks for leading exclamation points. However, if you install the Term::ReadKey and Term::ReadLine modules from CPAN (such as Term::ReadLine::Gnu, Term::ReadLine::Perl, ...) you will have full editing capabilities much like those GNU</source>
          <target state="translated">Tal y como se envió,el único historial de la línea de mando suministrado es uno simplista que comprueba los principales signos de exclamación.Sin embargo,si instalas los módulos Term::ReadKey y Term::ReadLine de CPAN (como Term::ReadLine::Gnu,Term::ReadLine::Perl,...)tendrás capacidades completas de edición como las de GNU</target>
        </trans-unit>
        <trans-unit id="3c7b29c9acaba84b5dfa9d94a08362e636c880e4" translate="yes" xml:space="preserve">
          <source>As shown above, Perl creates the backup file whether or not any output is actually changed. So this is just a fancy way to copy files:</source>
          <target state="translated">Como se muestra arriba,Perl crea el archivo de respaldo,ya sea que se cambie o no cualquier salida.Así que esta es sólo una forma elegante de copiar archivos:</target>
        </trans-unit>
        <trans-unit id="cf827d39576175b49dc1a1c39fee2ddfa72908f4" translate="yes" xml:space="preserve">
          <source>As shown in this example, &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; is exempt from the &quot;looks like a function&quot; rule. A pair of parentheses following it does not (necessarily) delimit its argument. &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto(&quot;NE&quot;).&quot;XT&quot;&lt;/a&gt;&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; NEXT&lt;/code&gt; . Also, unlike most named operators, this has the same precedence as assignment.</source>
          <target state="translated">Como se muestra en este ejemplo, &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; est&amp;aacute; exento de la regla &quot;parece una funci&amp;oacute;n&quot;. Un par de par&amp;eacute;ntesis a continuaci&amp;oacute;n no delimita (necesariamente) su argumento. &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto(&quot;NE&quot;).&quot;XT&quot;&lt;/a&gt;&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; NEXT&lt;/code&gt; . Adem&amp;aacute;s, a diferencia de la mayor&amp;iacute;a de los operadores con nombre, tiene la misma prioridad que la asignaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a246c967f8c44d960de455229b31b368ecdb7f4c" translate="yes" xml:space="preserve">
          <source>As shown in this example, &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; is exempt from the &quot;looks like a function&quot; rule. A pair of parentheses following it does not (necessarily) delimit its argument. &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto(&quot;NE&quot;).&quot;XT&quot;&lt;/a&gt;&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; NEXT&lt;/code&gt; . Also, unlike most named operators, this has the same precedence as assignment.</source>
          <target state="translated">Como se muestra en este ejemplo, &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; est&amp;aacute; exento de la regla &quot;parece una funci&amp;oacute;n&quot;. Un par de par&amp;eacute;ntesis a continuaci&amp;oacute;n no delimita (necesariamente) su argumento. &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto(&quot;NE&quot;).&quot;XT&quot;&lt;/a&gt;&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; NEXT&lt;/code&gt; . Adem&amp;aacute;s, a diferencia de la mayor&amp;iacute;a de los operadores con nombre, tiene la misma prioridad que la asignaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6d2e840402d6fc0f9fee1fa99ab3b3ed1f5042e9" translate="yes" xml:space="preserve">
          <source>As such, signals that would normally not be appropriate to use in the &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; command (e.g., &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', $$)&lt;/code&gt; ) are okay to use with the &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; method (again, as illustrated above).</source>
          <target state="translated">Como tal, las se&amp;ntilde;ales que normalmente no ser&amp;iacute;an apropiadas para usar en el comando &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; (por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', $$)&lt;/code&gt; ) se pueden usar con el m&amp;eacute;todo &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; (nuevamente, como se ilustra arriba) .</target>
        </trans-unit>
        <trans-unit id="a44ff5fd296684850a7eea8453ca8654e5ea2769" translate="yes" xml:space="preserve">
          <source>As system libraries (most notably glibc) are also triggering errors, valgrind allows to suppress such errors using suppression files. The default suppression file that comes with valgrind already catches a lot of them. Some additional suppressions are defined in</source>
          <target state="translated">Como las bibliotecas de sistema (sobre todo glibc)también están provocando errores,valgrind permite suprimir esos errores utilizando archivos de supresión.El archivo de supresión por defecto que viene con valgrind ya captura muchos de ellos.Algunas supresiones adicionales están definidas en</target>
        </trans-unit>
        <trans-unit id="e1a99808d733ec0659b941748add22eaba940233" translate="yes" xml:space="preserve">
          <source>As that is multiple C statements it is quite common so see this idiom instead:</source>
          <target state="translated">Como se trata de múltiples declaraciones de la C,es bastante común,así que vea este modismo en su lugar:</target>
        </trans-unit>
        <trans-unit id="ac882702a8c758004edc0489caa0c38829169f81" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;'IGNORE'&lt;/code&gt; hook is not supported by &lt;code&gt;__WARN__&lt;/code&gt; , you can disable warnings using the empty subroutine:</source>
          <target state="translated">Como el gancho &lt;code&gt;'IGNORE'&lt;/code&gt; no es compatible con &lt;code&gt;__WARN__&lt;/code&gt; , puede desactivar las advertencias usando la subrutina vac&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="481d1ba67f45c383e883a88846da2edc2a1775aa" translate="yes" xml:space="preserve">
          <source>As the Perl interpreter looks at signal flags only when it is about to execute a new opcode, a signal that arrives during a long-running opcode (e.g. a regular expression operation on a very large string) will not be seen until the current opcode completes.</source>
          <target state="translated">Como el intérprete de Perl mira las banderas de señales sólo cuando está a punto de ejecutar un nuevo opcode,una señal que llega durante un opcode de larga duración (por ejemplo,una operación de expresión regular en una cadena muy grande)no se verá hasta que el opcode actual se complete.</target>
        </trans-unit>
        <trans-unit id="f849d9355eec2f51b5cef2814ee106c18c309122" translate="yes" xml:space="preserve">
          <source>As the PerlIO layer uses raw IO (bytes) internally, all this totally ignores things like the type of your filesystem (ASCII or EBCDIC).</source>
          <target state="translated">Como la capa de PerlIO utiliza internamente IO (bytes)sin procesar,todo esto ignora totalmente cosas como el tipo de su sistema de archivos (ASCII o EBCDIC).</target>
        </trans-unit>
        <trans-unit id="ef5f3ccf5711fff6ab130d18e6106225adf61f56" translate="yes" xml:space="preserve">
          <source>As the PerlIO layer uses raw IO internally, all this totally ignores the type of your filesystem (ASCII or EBCDIC) and the IO_CONVERSION environment variable. If you want to get the old behavior, that the BS2000 IO functions determine conversion depending on the filesystem PerlIO still is your friend. You use IO_CONVERSION as usual and tell Perl, that it should use the native IO layer:</source>
          <target state="translated">Como la capa PerlIO usa IO en bruto internamente,todo esto ignora totalmente el tipo de su sistema de archivos (ASCII o EBCDIC)y la variable de entorno IO_CONVERSION.Si quieres conseguir el viejo comportamiento,que las funciones IO de BS2000 determinen la conversión dependiendo del sistema de archivos PerlIO sigue siendo tu amigo.Utiliza IO_CONVERSION como de costumbre y dile a Perl,que debe utilizar la capa IO nativa:</target>
        </trans-unit>
        <trans-unit id="20b8fc20101f3d438a32270dc2621c0dd14971b3" translate="yes" xml:space="preserve">
          <source>As the comment says, this is not a good way to implement accessors. It's slow and too clever by far. However, you may see this as a way to provide accessors in older Perl code. See &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; for recommendations on OO coding in Perl.</source>
          <target state="translated">Como dice el comentario, esta no es una buena forma de implementar accesos. Es lento y demasiado inteligente de lejos. Sin embargo, puede ver esto como una forma de proporcionar accesos en c&amp;oacute;digo Perl m&amp;aacute;s antiguo. Consulte &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; para obtener recomendaciones sobre la codificaci&amp;oacute;n OO en Perl.</target>
        </trans-unit>
        <trans-unit id="4fca5f01eab824b22bb6b1905a8d483f37ad2ed6" translate="yes" xml:space="preserve">
          <source>As the example shows, if the second argument is an empty string, the category's locale is returned to the default specified by the corresponding environment variables. Generally, this results in a return to the default that was in force when Perl started up: changes to the environment made by the application after startup may or may not be noticed, depending on your system's C library.</source>
          <target state="translated">Como muestra el ejemplo,si el segundo argumento es una cadena vacía,la localización de la categoría se devuelve al valor por defecto especificado por las variables de entorno correspondientes.Generalmente,esto da como resultado un retorno al valor por defecto que estaba vigente cuando se inició Perl:los cambios en el entorno realizados por la aplicación después del inicio pueden o no ser notados,dependiendo de la biblioteca C de su sistema.</target>
        </trans-unit>
        <trans-unit id="0a3da7dd18a3b2da7c7f36441b50e2eab858828a" translate="yes" xml:space="preserve">
          <source>As the final two examples above show, you can achieve portablity to non-ASCII platforms by using the &lt;code&gt;\N{...}&lt;/code&gt; form for the range endpoints. These indicate that the specified range is to be interpreted using Unicode values, so &lt;code&gt;[\N{U+27}-\N{U+3F}]&lt;/code&gt; means to match &lt;code&gt;\N{U+27}&lt;/code&gt; , &lt;code&gt;\N{U+28}&lt;/code&gt; , &lt;code&gt;\N{U+29}&lt;/code&gt; , ..., &lt;code&gt;\N{U+3D}&lt;/code&gt; , &lt;code&gt;\N{U+3E}&lt;/code&gt; , and &lt;code&gt;\N{U+3F}&lt;/code&gt; , whatever the native code point versions for those are. These are called &quot;Unicode&quot; ranges. If either end is of the &lt;code&gt;\N{...}&lt;/code&gt; form, the range is considered Unicode. A &lt;code&gt;regexp&lt;/code&gt; warning is raised under &lt;code&gt;&quot;use re 'strict'&quot;&lt;/code&gt; if the other endpoint is specified non-portably:</source>
          <target state="translated">Como muestran los dos ejemplos finales anteriores, puede lograr la portabilidad a plataformas que no sean ASCII utilizando el formulario &lt;code&gt;\N{...}&lt;/code&gt; para los puntos finales del rango. Estos indican que el rango especificado se interpretar&amp;aacute; utilizando valores Unicode, por lo que &lt;code&gt;[\N{U+27}-\N{U+3F}]&lt;/code&gt; significa coincidir con &lt;code&gt;\N{U+27}&lt;/code&gt; , &lt;code&gt;\N{U+28}&lt;/code&gt; , &lt;code&gt;\N{U+29}&lt;/code&gt; , ..., &lt;code&gt;\N{U+3D}&lt;/code&gt; , &lt;code&gt;\N{U+3E}&lt;/code&gt; y &lt;code&gt;\N{U+3F}&lt;/code&gt; , cualesquiera que sean las versiones nativas del punto de c&amp;oacute;digo. Estos se denominan rangos &quot;Unicode&quot;. Si cualquiera de los extremos tiene el formato &lt;code&gt;\N{...}&lt;/code&gt; , el rango se considera Unicode. Se &lt;code&gt;regexp&lt;/code&gt; advertencia de expresi&amp;oacute;n regular en &lt;code&gt;&quot;use re 'strict'&quot;&lt;/code&gt; si el otro punto final se especifica de forma no port&amp;aacute;til:</target>
        </trans-unit>
        <trans-unit id="17c70cf277254845a8ce88c971a047564a105d87" translate="yes" xml:space="preserve">
          <source>As the last character of a prototype, or just before a semicolon, a &lt;code&gt;@&lt;/code&gt; or a &lt;code&gt;%&lt;/code&gt; , you can use &lt;code&gt;_&lt;/code&gt; in place of &lt;code&gt;$&lt;/code&gt; : if this argument is not provided, &lt;code&gt;$_&lt;/code&gt; will be used instead.</source>
          <target state="translated">Como &amp;uacute;ltimo car&amp;aacute;cter de un prototipo, o justo antes de un punto y coma, un &lt;code&gt;@&lt;/code&gt; o un &lt;code&gt;%&lt;/code&gt; , puede usar &lt;code&gt;_&lt;/code&gt; en lugar de &lt;code&gt;$&lt;/code&gt; : si no se proporciona este argumento, se usar&amp;aacute; &lt;code&gt;$_&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="4b123b1845e08fc58170e4c4c4ab5952b56ae816" translate="yes" xml:space="preserve">
          <source>As the last example indicates, a handler may be set up to be (re)called in two or more phases. The phase name is passed as the handler's final argument.</source>
          <target state="translated">Como se indica en el último ejemplo,un manipulador puede estar configurado para ser (re)llamado en dos o más fases.El nombre de la fase se pasa como argumento final del manejador.</target>
        </trans-unit>
        <trans-unit id="776d16ae4f440b015655f81050641c0ec6c3a0f2" translate="yes" xml:space="preserve">
          <source>As the parser reads the second and subsequent lines from the source stream, it feeds those lines through the &lt;code&gt;cpp&lt;/code&gt; source filter before processing them. The &lt;code&gt;cpp&lt;/code&gt; filter simply passes each line through the real C preprocessor. The output from the C preprocessor is then inserted back into the source stream by the filter.</source>
          <target state="translated">A medida que el analizador lee la segunda l&amp;iacute;nea y las siguientes del flujo de origen, alimenta esas l&amp;iacute;neas a trav&amp;eacute;s del filtro de origen &lt;code&gt;cpp&lt;/code&gt; antes de procesarlas. El filtro &lt;code&gt;cpp&lt;/code&gt; simplemente pasa cada l&amp;iacute;nea a trav&amp;eacute;s del preprocesador C real. A continuaci&amp;oacute;n, el filtro vuelve a insertar la salida del preprocesador de C en el flujo de origen.</target>
        </trans-unit>
        <trans-unit id="b29477c3662cd388380e5f2f7edde392d4aa47d3" translate="yes" xml:space="preserve">
          <source>As the parser understands a Perl program, it builds up a tree of operations for the interpreter to perform during execution. The routines which construct and link together the various operations are to be found in</source>
          <target state="translated">A medida que el analizador entiende un programa de Perl,construye un árbol de operaciones para que el intérprete las realice durante la ejecución.Las rutinas que construyen y enlazan las distintas operaciones se encuentran en</target>
        </trans-unit>
        <trans-unit id="059620d29d96cd6f5eb8cd327a9137c1f47169b5" translate="yes" xml:space="preserve">
          <source>As there are various Make programs with incompatible syntax, which use operating system shells, again with incompatible syntax, it is important for users of this module to know which flavour of Make a Makefile has been written for so they'll use the correct one and won't have to face the possibly bewildering errors resulting from using the wrong one.</source>
          <target state="translated">Como hay varios programas Make con sintaxis incompatible,que usan shells de sistemas operativos,de nuevo con sintaxis incompatible,es importante que los usuarios de este módulo sepan para qué sabor de Make un Makefile se ha escrito,de modo que usen el correcto y no tengan que enfrentarse a los posibles errores desconcertantes que resultan de usar el equivocado.</target>
        </trans-unit>
        <trans-unit id="036fd1e2507560ce47135587c83032ff17f1287e" translate="yes" xml:space="preserve">
          <source>As there is an overlap between the error numbers used by</source>
          <target state="translated">Como hay una superposición entre los números de error utilizados por</target>
        </trans-unit>
        <trans-unit id="c2c40011ac031fbcf62ae0096c0f70fe3f04f6d4" translate="yes" xml:space="preserve">
          <source>As told above, Perl 5.6.1 was still good in AmigaOS, as was 5.7.2. After Perl 5.7.2 (change #11423, see the Changes file, and the file pod/perlhack.pod for how to get the individual changes) Perl dropped its internal support for vfork(), and that was very probably the step that broke AmigaOS (since the ixemul library has only vfork). The build finally fails when the ext/DynaLoader is being built, and PERL ends up as &quot;0&quot; in the produced Makefile, trying to run &quot;0&quot; does not quite work. Also, executing miniperl in backticks seems to generate nothing: very probably related to the (v)fork problems. &lt;b&gt;Fixing the breakage requires someone quite familiar with the ixemul library, and how one is supposed to run external commands in AmigaOS without fork().&lt;/b&gt;</source>
          <target state="translated">Como se dijo anteriormente, Perl 5.6.1 todav&amp;iacute;a era bueno en AmigaOS, al igual que 5.7.2. Despu&amp;eacute;s de Perl 5.7.2 (cambio # 11423, vea el archivo de Cambios y el archivo pod / perlhack.pod para saber c&amp;oacute;mo obtener los cambios individuales), Perl elimin&amp;oacute; su soporte interno para vfork (), y ese fue muy probablemente el paso que se rompi&amp;oacute; AmigaOS (ya que la biblioteca ixemul solo tiene vfork). La compilaci&amp;oacute;n finalmente falla cuando se est&amp;aacute; compilando el ext / DynaLoader y PERL termina como &quot;0&quot; en el Makefile producido, intentar ejecutar &quot;0&quot; no funciona del todo. Adem&amp;aacute;s, la ejecuci&amp;oacute;n de miniperl en comillas inversas parece no generar nada: muy probablemente relacionado con los problemas de la bifurcaci&amp;oacute;n (v). &lt;b&gt;Arreglar la rotura requiere alguien bastante familiarizado con la biblioteca ixemul, y c&amp;oacute;mo se supone que uno debe ejecutar comandos externos en AmigaOS sin fork ().&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7df201bc839d821d3a7ec829e521380838b10cef" translate="yes" xml:space="preserve">
          <source>As usual, &lt;code&gt;PL_restartop&lt;/code&gt; is extracted from the &lt;code&gt;CxEVAL&lt;/code&gt; , and a &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; done, which pops the C stack back to the docatch:</source>
          <target state="translated">Como de costumbre, &lt;code&gt;PL_restartop&lt;/code&gt; se extrae de &lt;code&gt;CxEVAL&lt;/code&gt; y se realiza un &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; , que hace que la pila de C vuelva a aparecer en docatch:</target>
        </trans-unit>
        <trans-unit id="43f8dfff8ebd277fcb05688b6c5164a9ecb709ab" translate="yes" xml:space="preserve">
          <source>As usual, run</source>
          <target state="translated">Como siempre,corre</target>
        </trans-unit>
        <trans-unit id="6a12281792622fa54248b5b0512161ae986d73ec" translate="yes" xml:space="preserve">
          <source>As we have seen above, Principle 0 overrides the others. The regexp will be matched as early as possible, with the other principles determining how the regexp matches at that earliest character position.</source>
          <target state="translated">Como hemos visto arriba,el Principio 0 anula los otros.El regexp se emparejará lo antes posible,y los otros principios determinarán cómo se empareja el regexp en esa posición de caracteres más temprana.</target>
        </trans-unit>
        <trans-unit id="f24d0557480129d0bec98f1d07b3bc35225e11b2" translate="yes" xml:space="preserve">
          <source>As we mentioned before, Perl's built-in OO system is very minimal, but also quite flexible. Over the years, many people have developed systems which build on top of Perl's built-in system to provide more features and convenience.</source>
          <target state="translated">Como mencionamos antes,el sistema de OO incorporado de Perl es muy mínimo,pero también bastante flexible.A lo largo de los años,mucha gente ha desarrollado sistemas que se construyen sobre el sistema incorporado de Perl para proporcionar más características y conveniencia.</target>
        </trans-unit>
        <trans-unit id="09f78df2a986a05b74a05b4840bd77f0745f303d" translate="yes" xml:space="preserve">
          <source>As we mentioned before, roles provide an alternative to inheritance, but Perl does not have any built-in role support. If you choose to use Moose, it comes with a full-fledged role implementation. However, if you use one of our other recommended OO modules, you can still use roles with &lt;a href=&quot;http://search.cpan.org/perldoc/Role::Tiny&quot;&gt;Role::Tiny&lt;/a&gt;</source>
          <target state="translated">Como mencionamos antes, los roles proporcionan una alternativa a la herencia, pero Perl no tiene ning&amp;uacute;n soporte de rol incorporado. Si elige usar Moose, viene con una implementaci&amp;oacute;n de rol completa. Sin embargo, si usa uno de nuestros otros m&amp;oacute;dulos OO recomendados, a&amp;uacute;n puede usar roles con &lt;a href=&quot;http://search.cpan.org/perldoc/Role::Tiny&quot;&gt;Role :: Tiny&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f8a13dd0293aebd2b1466f31d349be90b2e062e" translate="yes" xml:space="preserve">
          <source>As we mentioned earlier, Perl provides no special constructor syntax. This means that a class must implement its own constructor. A constructor is simply a class method that returns a reference to a new object.</source>
          <target state="translated">Como mencionamos antes,Perl no tiene una sintaxis constructiva especial.Esto significa que una clase debe implementar su propio constructor.Un constructor es simplemente un método de clase que devuelve una referencia a un nuevo objeto.</target>
        </trans-unit>
        <trans-unit id="34cb600e9a3f6e5e075e857de4110b1ef2b3324a" translate="yes" xml:space="preserve">
          <source>As we return an empty list, everything is fine.</source>
          <target state="translated">Al devolver una lista vacía,todo está bien.</target>
        </trans-unit>
        <trans-unit id="1bc0081962e83c9753eb5550755ad42af088433e" translate="yes" xml:space="preserve">
          <source>As we said before, Perl's minimal OO system has led to a profusion of OO systems on CPAN. While you can still drop down to the bare metal and write your classes by hand, there's really no reason to do that with modern Perl.</source>
          <target state="translated">Como dijimos antes,el mínimo sistema de OO de Perl ha llevado a una profusión de sistemas de OO en el CPAN.Mientras que todavía puedes bajar al metal desnudo y escribir tus clases a mano,no hay realmente ninguna razón para hacer eso con el Perl moderno.</target>
        </trans-unit>
        <trans-unit id="7867c988c2c06b2c05fdddd86e23a3f47b3a2862" translate="yes" xml:space="preserve">
          <source>As we said earlier, most Perl objects are hashes, but an object can be an instance of any Perl data type (scalar, array, etc.). Turning a plain data structure into an object is done by &lt;b&gt;blessing&lt;/b&gt; that data structure using Perl's &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Como dijimos anteriormente, la mayor&amp;iacute;a de los objetos Perl son hashes, pero un objeto puede ser una instancia de cualquier tipo de datos Perl (escalar, matriz, etc.). La conversi&amp;oacute;n de una estructura de datos simple en un objeto se realiza mediante la &lt;b&gt;bendici&amp;oacute;n de&lt;/b&gt; esa estructura de datos mediante la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; de Perl .</target>
        </trans-unit>
        <trans-unit id="504d4df94aa612d7624624e4944523fc3497d648" translate="yes" xml:space="preserve">
          <source>As we saw earlier, an object is simply a data structure that has been blessed into a class via the &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; function. The &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; function can take either one or two arguments:</source>
          <target state="translated">Como vimos anteriormente, un objeto es simplemente una estructura de datos que ha sido bendecida en una clase a trav&amp;eacute;s de la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; puede tomar uno o dos argumentos:</target>
        </trans-unit>
        <trans-unit id="a1d3a4a5afeb3f9e63b11e0b6c656dbcfa8f18b8" translate="yes" xml:space="preserve">
          <source>As we've already shown, &lt;code&gt;call_sv&lt;/code&gt; can be used to invoke an anonymous subroutine. However, our example showed a Perl script invoking an XSUB to perform this operation. Let's see how it can be done inside our C code:</source>
          <target state="translated">Como ya hemos mostrado, &lt;code&gt;call_sv&lt;/code&gt; se puede utilizar para invocar una subrutina an&amp;oacute;nima. Sin embargo, nuestro ejemplo mostr&amp;oacute; un script de Perl que invoca un XSUB para realizar esta operaci&amp;oacute;n. Veamos c&amp;oacute;mo se puede hacer dentro de nuestro c&amp;oacute;digo C:</target>
        </trans-unit>
        <trans-unit id="96d58f32e93788e5dbef34c03d0df80dbd089dab" translate="yes" xml:space="preserve">
          <source>As well as accessing Berkeley DB using a tied hash or array, it is also possible to make direct use of most of the API functions defined in the Berkeley DB documentation.</source>
          <target state="translated">Además de acceder a la Berkeley DB usando un hash atado o un array,también es posible hacer uso directo de la mayoría de las funciones de la API definidas en la documentación de la Berkeley DB.</target>
        </trans-unit>
        <trans-unit id="749b97b56149a492eb18a4cb65f04d306a596132" translate="yes" xml:space="preserve">
          <source>As well as freeing all the elements of the hash (like hv_clear()), this also frees any auxiliary data and storage associated with the hash.</source>
          <target state="translated">Además de liberar todos los elementos del hash (como hv_clear()),también libera cualquier dato y almacenamiento auxiliar asociado al hash.</target>
        </trans-unit>
        <trans-unit id="2e0710bbe12c8de0ee3e47fce586245cf49652f2" translate="yes" xml:space="preserve">
          <source>As well as grouping, parentheses serve a second purpose. They can be used to capture the results of parts of the regexp match for later use. The results end up in &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; and so on.</source>
          <target state="translated">Adem&amp;aacute;s de la agrupaci&amp;oacute;n, los par&amp;eacute;ntesis tienen un segundo prop&amp;oacute;sito. Se pueden utilizar para capturar los resultados de partes de la coincidencia de expresiones regulares para su uso posterior. Los resultados terminan en &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="7365f5053276b5ccb78d102d8d65d8a7cbb5a47c" translate="yes" xml:space="preserve">
          <source>As well as these two, there is another converter:</source>
          <target state="translated">Además de estos dos,hay otro convertidor:</target>
        </trans-unit>
        <trans-unit id="5f09c013a494b22fb2c5704b9b33f8690cdb78ae" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; aliasing &lt;code&gt;$_&lt;/code&gt; to list elements, &lt;code&gt;pairfirst&lt;/code&gt; aliases &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; to elements of the given list. Any modifications of it by the code block will be visible to the caller.</source>
          <target state="translated">Al igual que con &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; aliasing &lt;code&gt;$_&lt;/code&gt; a los elementos de la lista, &lt;code&gt;pairfirst&lt;/code&gt; alias &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; de los elementos de la lista dada. Cualquier modificaci&amp;oacute;n del mismo por el bloque de c&amp;oacute;digo ser&amp;aacute; visible para la persona que llama.</target>
        </trans-unit>
        <trans-unit id="6ccb264713980d688f5b35e3f78e5d8bcc1b34f2" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; aliasing &lt;code&gt;$_&lt;/code&gt; to list elements, &lt;code&gt;pairgrep&lt;/code&gt; aliases &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; to elements of the given list. Any modifications of it by the code block will be visible to the caller.</source>
          <target state="translated">Al igual que con &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; aliasing &lt;code&gt;$_&lt;/code&gt; a los elementos de la lista, &lt;code&gt;pairgrep&lt;/code&gt; alias &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; de los elementos de la lista dada. Cualquier modificaci&amp;oacute;n del mismo por el bloque de c&amp;oacute;digo ser&amp;aacute; visible para la persona que llama.</target>
        </trans-unit>
        <trans-unit id="0e0ea04c8e6030abec75f8b13970784d2a0b7c8f" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; aliasing &lt;code&gt;$_&lt;/code&gt; to list elements, &lt;code&gt;pairmap&lt;/code&gt; aliases &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; to elements of the given list. Any modifications of it by the code block will be visible to the caller.</source>
          <target state="translated">Al igual que con &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; a aliasing &lt;code&gt;$_&lt;/code&gt; a los elementos de la lista, &lt;code&gt;pairmap&lt;/code&gt; alias &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; de los elementos de la lista dada. Cualquier modificaci&amp;oacute;n del mismo por el bloque de c&amp;oacute;digo ser&amp;aacute; visible para la persona que llama.</target>
        </trans-unit>
        <trans-unit id="852273f60001fb5cfcfc3f59c366b8a418d217ac" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;gzerror()&lt;/code&gt; it returns an error number in numeric context and an error message in string context. Unlike &lt;code&gt;gzerror()&lt;/code&gt; though, the error message will correspond to the</source>
          <target state="translated">Al igual que con &lt;code&gt;gzerror()&lt;/code&gt; , devuelve un n&amp;uacute;mero de error en contexto num&amp;eacute;rico y un mensaje de error en contexto de cadena. &lt;code&gt;gzerror()&lt;/code&gt; embargo, a diferencia de gzerror () , el mensaje de error corresponder&amp;aacute; al</target>
        </trans-unit>
        <trans-unit id="89fce7a719c0828fb9010451c52ebed3b12f2d8d" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;mro::get_linear_isa&lt;/code&gt; above, &lt;code&gt;UNIVERSAL&lt;/code&gt; is special. &lt;code&gt;UNIVERSAL&lt;/code&gt; (and parents') isarev lists do not include every class in existence, even though all classes are effectively descendants for method inheritance purposes.</source>
          <target state="translated">Al igual que con &lt;code&gt;mro::get_linear_isa&lt;/code&gt; anterior, &lt;code&gt;UNIVERSAL&lt;/code&gt; es especial. Las listas isarev &lt;code&gt;UNIVERSAL&lt;/code&gt; (y las de los padres) no incluyen todas las clases existentes, aunque todas las clases son efectivamente descendientes para prop&amp;oacute;sitos de herencia de m&amp;eacute;todos.</target>
        </trans-unit>
        <trans-unit id="1bfc8628cde1b50356023884cf039103db9706d2" translate="yes" xml:space="preserve">
          <source>As with G_SCALAR, this flag has 2 effects:</source>
          <target state="translated">Al igual que con G_SCALAR,esta bandera tiene 2 efectos:</target>
        </trans-unit>
        <trans-unit id="56fcac1f27b0d72bf38ecab8e2bf923c1135ad6d" translate="yes" xml:space="preserve">
          <source>As with GetOptionsFromArray, a first argument hash reference now becomes the second argument.</source>
          <target state="translated">Como en GetOptionsFromArray,una referencia de hash del primer argumento se convierte ahora en el segundo argumento.</target>
        </trans-unit>
        <trans-unit id="f5b2adb567968a40150b99a2b38e37687da34625" translate="yes" xml:space="preserve">
          <source>As with all &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; directives, defining a constant happens at compile time. Thus, it's probably not correct to put a constant declaration inside of a conditional statement (like &lt;code&gt;if ($foo)
{ &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; constant ... }&lt;/code&gt; ).</source>
          <target state="translated">Como ocurre con todas las directivas de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , la definici&amp;oacute;n de una constante ocurre en tiempo de compilaci&amp;oacute;n. Por lo tanto, probablemente no sea correcto poner una declaraci&amp;oacute;n constante dentro de una declaraci&amp;oacute;n condicional (como &lt;code&gt;if ($foo) { &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; constant ... }&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a9e166bc9c2d17d86e12b7d5456a5dc29e6460a0" translate="yes" xml:space="preserve">
          <source>As with all compiler backend options, these must follow directly after the '-MO=Deparse', separated by a comma but not any white space.</source>
          <target state="translated">Como con todas las opciones de fondo del compilador,éstas deben seguir directamente después del &quot;-MO=Deparse&quot;,separadas por una coma pero sin ningún espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="dec6818f5ac3b2a14f0cdaa20965c7cdeed80414" translate="yes" xml:space="preserve">
          <source>As with all standard commands, a single-character switch may be clustered with the following switch, if any.</source>
          <target state="translated">Como con todos los comandos estándar,un interruptor de un solo carácter puede agruparse con el siguiente interruptor,si lo hay.</target>
        </trans-unit>
        <trans-unit id="3f95467f687ea8e2cde45cd2aae56d762c10d52a" translate="yes" xml:space="preserve">
          <source>As with all things in Perl,</source>
          <target state="translated">Como todas las cosas en Perl,</target>
        </trans-unit>
        <trans-unit id="d4bf4ba0005710853f921b26431dc8a4fd4165e9" translate="yes" xml:space="preserve">
          <source>As with any advisory locking scheme, the protection only works if you systematically use &lt;code&gt;lock_store&lt;/code&gt; and &lt;code&gt;lock_retrieve&lt;/code&gt; . If one side of your application uses &lt;code&gt;store&lt;/code&gt; whilst the other uses &lt;code&gt;lock_retrieve&lt;/code&gt; , you will get no protection at all.</source>
          <target state="translated">Al igual que con cualquier esquema de bloqueo de advertencia, la protecci&amp;oacute;n solo funciona si usa sistem&amp;aacute;ticamente &lt;code&gt;lock_store&lt;/code&gt; y &lt;code&gt;lock_retrieve&lt;/code&gt; . Si un lado de su aplicaci&amp;oacute;n usa &lt;code&gt;store&lt;/code&gt; mientras que el otro usa &lt;code&gt;lock_retrieve&lt;/code&gt; , no obtendr&amp;aacute; ninguna protecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dfdecc72a46325c982361e944a60a5cc48397fb3" translate="yes" xml:space="preserve">
          <source>As with constructors, Perl provides no special accessor declaration syntax, so classes must provide explicitly written accessor methods. There are two common types of accessors, read-only and read-write.</source>
          <target state="translated">Como en el caso de los constructores,Perl no proporciona una sintaxis especial de declaración de accesorios,por lo que las clases deben proporcionar métodos de acceso explícitamente escritos.Hay dos tipos comunes de accesos,de sólo lectura y de lectura-escritura.</target>
        </trans-unit>
        <trans-unit id="5d06ccd4ce0505718d0adf18033c22a5ca1bc63e" translate="yes" xml:space="preserve">
          <source>As with many unix ports, this one depends on a few &quot;standard&quot; unix utilities which are not necessarily standard for QNX4.</source>
          <target state="translated">Como con muchos puertos unix,éste depende de unas pocas utilidades unix &quot;estándar&quot; que no son necesariamente estándar para QNX4.</target>
        </trans-unit>
        <trans-unit id="522d69b5bf4a752ac2eed134a3a3d90b973940bc" translate="yes" xml:space="preserve">
          <source>As with normal Perl arrays, a RECNO array can be accessed using negative indexes. The index -1 refers to the last element of the array, -2 the second last, and so on. Attempting to access an element before the start of the array will raise a fatal run-time error.</source>
          <target state="translated">Como con los arreglos de Perl normales,se puede acceder a un arreglo de RECNO usando índices negativos.El índice -1 se refiere al último elemento de la matriz,-2 al último segundo,y así sucesivamente.Intentar acceder a un elemento antes del comienzo del array provocará un error fatal en el tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="4f5b532a80f5e05a1cc6284ddbfce49edaec9bba" translate="yes" xml:space="preserve">
          <source>As with postfix array, postfix value slice dereferencing</source>
          <target state="translated">Al igual que con la matriz de postfix,el valor de postfix rebanada dereferenciando</target>
        </trans-unit>
        <trans-unit id="5f2a0ee0b6d450a60b564dbded3394cc767489a2" translate="yes" xml:space="preserve">
          <source>As with subroutines, the type of value returned from a thread's entry point function may be determined by the thread's</source>
          <target state="translated">Al igual que en las subrutinas,el tipo de valor devuelto por la función del punto de entrada de un hilo puede estar determinado por la</target>
        </trans-unit>
        <trans-unit id="b1cab3e1a5ac11251ae5d77c854023eac88d9ffb" translate="yes" xml:space="preserve">
          <source>As with the</source>
          <target state="translated">Como en el caso de la</target>
        </trans-unit>
        <trans-unit id="cd7300c50635cef829928b369e4af967b57015fd" translate="yes" xml:space="preserve">
          <source>As with the DB_HASH format, it is possible to provide a user defined Perl routine to perform the comparison of keys. By default, though, the keys are stored in lexical order.</source>
          <target state="translated">Al igual que con el formato DB_HASH,es posible proporcionar una rutina Perl definida por el usuario para realizar la comparación de claves.Sin embargo,por defecto,las claves se almacenan en orden léxico.</target>
        </trans-unit>
        <trans-unit id="69ca9bf5a86e0011eab25710aa599ffe7224ff94" translate="yes" xml:space="preserve">
          <source>As with the append mode, when you open a file in write-only mode, you can now write to that filehandle using any of &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Al igual que con el modo de adici&amp;oacute;n, cuando abre un archivo en modo de solo escritura, ahora puede escribir en ese identificador de archivo usando cualquiera de los siguientes &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; o syswrite .</target>
        </trans-unit>
        <trans-unit id="2a73b99d56aa400ec87ca02454010bfda953deea" translate="yes" xml:space="preserve">
          <source>As with the match &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; operator, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; can use other delimiters, such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}{}&lt;/a&gt;&lt;/code&gt;, and even &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}//&lt;/a&gt;&lt;/code&gt;. If single quotes are used &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s'''&lt;/a&gt;&lt;/code&gt;, then the regexp and replacement are treated as single-quoted strings and there are no variable substitutions. &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; in list context returns the same thing as in scalar context, i.e., the number of matches.</source>
          <target state="translated">Al igual que con el operador match &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; puede usar otros delimitadores, como &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}{}&lt;/a&gt;&lt;/code&gt; , e incluso &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}//&lt;/a&gt;&lt;/code&gt; . Si se usan comillas simples &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s'''&lt;/a&gt;&lt;/code&gt; , entonces la expresi&amp;oacute;n regular y el reemplazo se tratan como cadenas entre comillas simples y no hay sustituciones de variables. &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; en el contexto de lista devuelve lo mismo que en el contexto escalar, es decir, el n&amp;uacute;mero de coincidencias.</target>
        </trans-unit>
        <trans-unit id="9cd8fd98a0003315162b3999969a156676702a25" translate="yes" xml:space="preserve">
          <source>As with the matching operator, the regexp quote can use different delimiters, e.g., &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr!!&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr{}&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr~~&lt;/a&gt;&lt;/code&gt;. Apostrophes as delimiters (&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr''&lt;/a&gt;&lt;/code&gt;) inhibit any interpolation.</source>
          <target state="translated">Al igual que con el operador de coincidencia, la cita de expresiones regulares puede usar diferentes delimitadores, por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr!!&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr{}&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr~~&lt;/a&gt;&lt;/code&gt; . Los ap&amp;oacute;strofos como delimitadores ( &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr''&lt;/a&gt;&lt;/code&gt; ) inhiben cualquier interpolaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e11bb01f2bd8c076a80300f6980985d85bb41c1a" translate="yes" xml:space="preserve">
          <source>As with the other types of ties, this method will be called when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; happens. It may be appropriate to &quot;auto CLOSE&quot; when this occurs. See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below.</source>
          <target state="translated">Al igual que con los otros tipos de ataduras, este m&amp;eacute;todo se llamar&amp;aacute; cuando se &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; . Puede ser apropiado &quot;CERRAR autom&amp;aacute;ticamente&quot; cuando esto ocurra. Vea &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The Untie Gotcha a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4d1c8cd71dac7105bd6440effb2807ea501bbea1" translate="yes" xml:space="preserve">
          <source>As with the other types of ties, this method will be called when the tied handle is about to be destroyed. This is useful for debugging and possibly cleaning up.</source>
          <target state="translated">Al igual que con los otros tipos de ataduras,este método se llamará cuando el asa atada esté a punto de ser destruida.Esto es útil para depurar y posiblemente limpiar.</target>
        </trans-unit>
        <trans-unit id="c8628e08c07475c8f2b1e6b9f5f0e7ba611079bf" translate="yes" xml:space="preserve">
          <source>As with the return stack, it would be possible (and a small performance win) to pre-extend the return array before pushing data into it, since we know how many elements we will return:</source>
          <target state="translated">Al igual que con la pila de retorno,sería posible (y una pequeña ganancia de rendimiento)pre-extender la matriz de retorno antes de introducir los datos en ella,ya que sabemos cuántos elementos devolveremos:</target>
        </trans-unit>
        <trans-unit id="3d4c99ea11e7c5fcd5dc736377914de3be4bac49" translate="yes" xml:space="preserve">
          <source>As with the shell, in Perl the &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; is used to open the file in read-only mode. If it succeeds, Perl allocates a brand new filehandle for you and fills in your previously undefined &lt;code&gt;$handle&lt;/code&gt; argument with a reference to that handle.</source>
          <target state="translated">Al igual que con el shell, en Perl se usa &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; para abrir el archivo en modo de s&amp;oacute;lo lectura. Si tiene &amp;eacute;xito, Perl le asigna un nuevo identificador de archivo y completa su argumento &lt;code&gt;$handle&lt;/code&gt; previamente indefinido con una referencia a ese identificador.</target>
        </trans-unit>
        <trans-unit id="7fd1e1a58893cf268ad48b11d78449c12dc31c5c" translate="yes" xml:space="preserve">
          <source>As you can see 3 records have been successfully created with key &lt;code&gt;Wall&lt;/code&gt; - the only thing is, when they are retrieved from the database they</source>
          <target state="translated">Como puede ver, se han creado 3 registros con &amp;eacute;xito con key &lt;code&gt;Wall&lt;/code&gt; ; lo &amp;uacute;nico es que cuando se recuperan de la base de datos,</target>
        </trans-unit>
        <trans-unit id="07a24c035647250238dd385e01e0859319d79ee5" translate="yes" xml:space="preserve">
          <source>As you can see both modules have a broadly similar structure. They both make use of the &lt;code&gt;Filter::Util::Call&lt;/code&gt; module and both have an &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; method. The difference between them is that the</source>
          <target state="translated">Como puede ver, ambos m&amp;oacute;dulos tienen una estructura muy similar. Ambos hacen uso del m&amp;oacute;dulo &lt;code&gt;Filter::Util::Call&lt;/code&gt; y ambos tienen un m&amp;eacute;todo de &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n . La diferencia entre ellos es que el</target>
        </trans-unit>
        <trans-unit id="8f994dc63d7341f367ad1cc1ffc63c6ff1af1973" translate="yes" xml:space="preserve">
          <source>As you can see in the synopsis, based on your template, the arguments provided will be validated.</source>
          <target state="translated">Como puede ver en la sinopsis,basado en su plantilla,los argumentos proporcionados serán validados.</target>
        </trans-unit>
        <trans-unit id="fc43df7357cab99ebecef48bb020a483deb5469e" translate="yes" xml:space="preserve">
          <source>As you can see,</source>
          <target state="translated">Como puede ver,</target>
        </trans-unit>
        <trans-unit id="ba5fcb84fa73471a91e0f59090740d9676a886a8" translate="yes" xml:space="preserve">
          <source>As you can see, a new stream has been created for reading the source from &lt;code&gt;Fred.pm&lt;/code&gt; . This stream will remain active until all of &lt;code&gt;Fred.pm&lt;/code&gt; has been parsed. The source stream for &lt;code&gt;cpp_test&lt;/code&gt; will still exist, but is inactive. Once the parser has finished reading Fred.pm, the source stream associated with it will be destroyed. The source stream for &lt;code&gt;cpp_test&lt;/code&gt; then becomes active again and the parser reads line 4 and subsequent lines from &lt;code&gt;cpp_test&lt;/code&gt; .</source>
          <target state="translated">Como se puede ver, una nueva corriente ha sido creado para la lectura de la fuente de la &lt;code&gt;Fred.pm&lt;/code&gt; . Esta transmisi&amp;oacute;n permanecer&amp;aacute; activa hasta que se haya analizado todo &lt;code&gt;Fred.pm&lt;/code&gt; . El flujo de origen de &lt;code&gt;cpp_test&lt;/code&gt; seguir&amp;aacute; existiendo, pero estar&amp;aacute; inactivo. Una vez que el analizador ha terminado de leer Fred.pm, se destruir&amp;aacute; el flujo de origen asociado a &amp;eacute;l. El flujo de origen para &lt;code&gt;cpp_test&lt;/code&gt; vuelve a activarse y el analizador lee la l&amp;iacute;nea 4 y las l&amp;iacute;neas siguientes de &lt;code&gt;cpp_test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="413492c2aba459a109ff8cf8bd650d35b867bf30" translate="yes" xml:space="preserve">
          <source>As you can see, even though we parsed out a branch and a piece, it was ultimately only an atom. The final program shows us how things work. We have an &lt;code&gt;EXACT&lt;/code&gt; regop, followed by an &lt;code&gt;END&lt;/code&gt; regop. The number in parens indicates where the &lt;code&gt;regnext&lt;/code&gt; of the node goes. The &lt;code&gt;regnext&lt;/code&gt; of an &lt;code&gt;END&lt;/code&gt; regop is unused, as &lt;code&gt;END&lt;/code&gt; regops mean we have successfully matched. The number on the left indicates the position of the regop in the regnode array.</source>
          <target state="translated">Como puede ver, a pesar de que analizamos una rama y una pieza, en &amp;uacute;ltima instancia era solo un &amp;aacute;tomo. El programa final nos muestra c&amp;oacute;mo funcionan las cosas. Tenemos un regop &lt;code&gt;EXACT&lt;/code&gt; O , seguido de un regop &lt;code&gt;END&lt;/code&gt; . El n&amp;uacute;mero entre parens indica d&amp;oacute;nde va el &lt;code&gt;regnext&lt;/code&gt; del nodo. El &lt;code&gt;regnext&lt;/code&gt; de una repetici&amp;oacute;n &lt;code&gt;END&lt;/code&gt; no se utiliza, ya que las repeticiones &lt;code&gt;END&lt;/code&gt; significan que hemos coincidido con &amp;eacute;xito. El n&amp;uacute;mero de la izquierda indica la posici&amp;oacute;n de la regop en la matriz regnode.</target>
        </trans-unit>
        <trans-unit id="a413e2eb7d932038f9ab1ac09695763b902b4d80" translate="yes" xml:space="preserve">
          <source>As you can see, it's getting a bit complicated. That's why sometimes is easier to take a temporary on your way through:</source>
          <target state="translated">Como puedes ver,se está complicando un poco.Por eso,a veces es más fácil tomar una decisión temporal en tu camino:</target>
        </trans-unit>
        <trans-unit id="3fa1293b0c00ad3a76c1e01bf182a9e2122f9fdc" translate="yes" xml:space="preserve">
          <source>As you can see, the &quot;big end&quot; of the arrow touches the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, which is a nice way to remember that &lt;code&gt;&amp;gt;&lt;/code&gt; is the big-endian modifier. The same obviously works for &lt;code&gt;&amp;lt;&lt;/code&gt; , where the &quot;little end&quot; touches the code.</source>
          <target state="translated">Como puede ver, el &quot;extremo grande&quot; de la flecha toca la &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , lo cual es una buena forma de recordar que &lt;code&gt;&amp;gt;&lt;/code&gt; es el modificador big-endian. Obviamente, lo mismo funciona para &lt;code&gt;&amp;lt;&lt;/code&gt; , donde el &quot;peque&amp;ntilde;o final&quot; toca el c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="8d3da9040412695027bfa4b6fb728646046f3571" translate="yes" xml:space="preserve">
          <source>As you can see, the continuation bytes all begin with &lt;code&gt;&quot;10&quot;&lt;/code&gt; , and the leading bits of the start byte tell how many bytes there are in the encoded character.</source>
          <target state="translated">Como puede ver, todos los bytes de continuaci&amp;oacute;n comienzan con &lt;code&gt;&quot;10&quot;&lt;/code&gt; , y los bits iniciales del byte de inicio indican cu&amp;aacute;ntos bytes hay en el car&amp;aacute;cter codificado.</target>
        </trans-unit>
        <trans-unit id="3abefb49e57cec4dd056d885964fc7e8cddbabc0" translate="yes" xml:space="preserve">
          <source>As you can see, we've stored the path and file data in the object itself. Remember, under the hood, this object is still just a hash. Later, we'll write accessors to manipulate this data.</source>
          <target state="translated">Como pueden ver,hemos almacenado la ruta y los datos de los archivos en el propio objeto.Recuerden,bajo el capó,este objeto sigue siendo sólo un hachís.Más tarde,escribiremos accesos para manipular estos datos.</target>
        </trans-unit>
        <trans-unit id="5a6344bf7b33dbff5320cfc2c10a629a29808655" translate="yes" xml:space="preserve">
          <source>As you can tell from a glance at &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;, the L&amp;lt;...&amp;gt; code is the most complex of the Pod formatting codes. The points below will hopefully clarify what it means and how processors should deal with it.</source>
          <target state="translated">Como puede ver de un vistazo a &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; , el c&amp;oacute;digo L &amp;lt;...&amp;gt; es el m&amp;aacute;s complejo de los c&amp;oacute;digos de formato de Pod. Es de esperar que los puntos a continuaci&amp;oacute;n aclaren lo que significa y c&amp;oacute;mo los procesadores deben manejarlo.</target>
        </trans-unit>
        <trans-unit id="9261097e2916c2cc0f66dd44d4a942cdcbac0f6d" translate="yes" xml:space="preserve">
          <source>As you craft each patch you intend to submit to the Perl core, it's important to write a good commit message. This is especially important if your submission will consist of a series of commits.</source>
          <target state="translated">Mientras elaboras cada parche que pretendes enviar al núcleo de Perl,es importante escribir un buen mensaje de compromiso.Esto es especialmente importante si su envío consistirá en una serie de compromisos.</target>
        </trans-unit>
        <trans-unit id="585d50527e778d78ffa867804e8d6039ce87d004" translate="yes" xml:space="preserve">
          <source>As you may have inferred from the above documentation and examples, &lt;code&gt;ok&lt;/code&gt; 's prototype is &lt;code&gt;($;$$)&lt;/code&gt; (and, incidentally, &lt;code&gt;skip&lt;/code&gt; 's is &lt;code&gt;($;$$$)&lt;/code&gt;). This means, for example, that you can do &lt;code&gt;ok @foo, @bar&lt;/code&gt; to compare the</source>
          <target state="translated">Como puede haber inferido de la documentaci&amp;oacute;n y los ejemplos anteriores, el prototipo de &lt;code&gt;ok&lt;/code&gt; es &lt;code&gt;($;$$)&lt;/code&gt; (y, dicho sea de paso, el de &lt;code&gt;skip&lt;/code&gt; es &lt;code&gt;($;$$$)&lt;/code&gt; ). Esto significa, por ejemplo, que puede hacer &lt;code&gt;ok @foo, @bar&lt;/code&gt; para comparar el</target>
        </trans-unit>
        <trans-unit id="d3a79c79e4e5a9fafc42ddaaf88736c1e2cc7621" translate="yes" xml:space="preserve">
          <source>As you may have noticed, the name of the FETCH method (et al.) is the same for all accesses, even though the constructors differ in names (TIESCALAR vs TIEARRAY). While in theory you could have the same class servicing several tied types, in practice this becomes cumbersome, and it's easiest to keep them at simply one tie type per class.</source>
          <target state="translated">Como habrán notado,el nombre del método FETCH (et al.)es el mismo para todos los accesos,aunque los constructores difieren en los nombres (TIESCALAR vs TIEARRAY).Mientras que en teoría se podría tener la misma clase atendiendo a varios tipos de ataduras,en la práctica esto se vuelve engorroso,y es más fácil mantenerlos simplemente en un tipo de atadura por clase.</target>
        </trans-unit>
        <trans-unit id="e80271d1fdc3feb0460f1e3a1704fc272e31f101" translate="yes" xml:space="preserve">
          <source>As you might know this calls the &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; function of &lt;code&gt;attributes&lt;/code&gt; at compile time with these parameters: 'attributes', the caller's package name, the reference to the code and 'method'.</source>
          <target state="translated">Como sabr&amp;aacute;, esto llama a la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n de &lt;code&gt;attributes&lt;/code&gt; en tiempo de compilaci&amp;oacute;n con estos par&amp;aacute;metros: 'atributos', el nombre del paquete de la persona que llama, la referencia al c&amp;oacute;digo y el 'm&amp;eacute;todo'.</target>
        </trans-unit>
        <trans-unit id="0f14d6a62a3d5dfc412b082b83700a2aa2b31479" translate="yes" xml:space="preserve">
          <source>As you see from those examples, &lt;code&gt;STDOUT&lt;/code&gt; and &lt;code&gt;STDERR&lt;/code&gt; are output handles, and &lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;ARGV&lt;/code&gt; are input handles. They are in all capital letters because they are reserved to Perl, much like the &lt;code&gt;@ARGV&lt;/code&gt; array and the &lt;code&gt;%ENV&lt;/code&gt; hash are. Their external associations were set up by your shell.</source>
          <target state="translated">Como puede ver en esos ejemplos, &lt;code&gt;STDOUT&lt;/code&gt; y &lt;code&gt;STDERR&lt;/code&gt; son identificadores de salida, y &lt;code&gt;STDIN&lt;/code&gt; y &lt;code&gt;ARGV&lt;/code&gt; son identificadores de entrada. Est&amp;aacute;n en may&amp;uacute;sculas porque est&amp;aacute;n reservados para Perl, al igual que la matriz &lt;code&gt;@ARGV&lt;/code&gt; y el hash &lt;code&gt;%ENV&lt;/code&gt; . Sus asociaciones externas fueron establecidas por su caparaz&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e27f616d9e27793d35d5e898cb0fead7ca633114" translate="yes" xml:space="preserve">
          <source>As you see, it's quite easy to become confused. While some small portion of the blame for this can be attributed to the reference-based implementation, it's really more due to a lack of existing documentation with examples designed for the beginner.</source>
          <target state="translated">Como ves,es bastante fácil confundirse.Si bien una pequeña parte de la culpa de esto se puede atribuir a la aplicación basada en referencias,en realidad se debe más a la falta de documentación existente con ejemplos diseñados para el principiante.</target>
        </trans-unit>
        <trans-unit id="512c5953fca52adf9fe503c69215e4eb2353e34b" translate="yes" xml:space="preserve">
          <source>As you see, it's remarkably similar to the Internet domain TCP server, so much so, in fact, that we've omitted several duplicate functions--spawn(), logmsg(), ctime(), and REAPER()--which are the same as in the other server.</source>
          <target state="translated">Como ves,es notablemente similar al servidor TCP del dominio de Internet,tanto que,de hecho,hemos omitido varias funciones duplicadas-spawn(),logmsg(),ctime(),y REAPER()-que son las mismas que en el otro servidor.</target>
        </trans-unit>
        <trans-unit id="ea8178cd8e63a3e66a311fade3362af15d43aa5f" translate="yes" xml:space="preserve">
          <source>As you see, the name of the package is the name of the structure. Regular fields are just their own names. Plus the following accessor functions are provided for your convenience:</source>
          <target state="translated">Como ves,el nombre del paquete es el nombre de la estructura.Los campos regulares son sólo sus propios nombres.Además,se proporcionan las siguientes funciones accesorias para su conveniencia:</target>
        </trans-unit>
        <trans-unit id="b457b60332a38dcdc3bc2fb765fda15f087f9402" translate="yes" xml:space="preserve">
          <source>As you see, there is one exception: in ASCII. That way you can assume Goal #1. And with &lt;code&gt;Encode&lt;/code&gt; , Goal #2 is assumed but you still have to be careful in the cases mentioned in the &lt;b&gt;CAVEAT&lt;/b&gt; paragraphs above.</source>
          <target state="translated">Como ve, hay una excepci&amp;oacute;n: en ASCII. De esa manera, puede asumir el Objetivo # 1. Y con &lt;code&gt;Encode&lt;/code&gt; , se asume el Objetivo # 2, pero a&amp;uacute;n debe tener cuidado en los casos mencionados en los p&amp;aacute;rrafos &lt;b&gt;CAVEAT&lt;/b&gt; anteriores.</target>
        </trans-unit>
        <trans-unit id="7cc089f777993943781491fc9a72f85a9a2f245b" translate="yes" xml:space="preserve">
          <source>As you see, this can be a bit tricky. It's important to realize that a regular expression is merely a set of assertions that gives a definition of success. There may be 0, 1, or several different ways that the definition might succeed against a particular string. And if there are multiple ways it might succeed, you need to understand backtracking to know which variety of success you will achieve.</source>
          <target state="translated">Como ves,esto puede ser un poco difícil.Es importante darse cuenta de que una expresión regular es simplemente un conjunto de afirmaciones que da una definición de éxito.Puede haber 0,1,o varias formas diferentes en que la definición puede tener éxito contra una cadena en particular.Y si hay múltiples maneras en que podría tener éxito,necesitas entender el retroceso para saber qué variedad de éxito lograrás.</target>
        </trans-unit>
        <trans-unit id="f1ce088efa2db68e2d881f71961d1904be5d37ad" translate="yes" xml:space="preserve">
          <source>As you would expect, this modifier causes, for example, &lt;code&gt;\D&lt;/code&gt; to mean the same thing as &lt;code&gt;[^0-9]&lt;/code&gt; ; in fact, all non-ASCII characters match &lt;code&gt;\D&lt;/code&gt; , &lt;code&gt;\S&lt;/code&gt; , and &lt;code&gt;\W&lt;/code&gt; . &lt;code&gt;\b&lt;/code&gt; still means to match at the boundary between &lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\W&lt;/code&gt; , using the &lt;code&gt;/a&lt;/code&gt; definitions of them (similarly for &lt;code&gt;\B&lt;/code&gt; ).</source>
          <target state="translated">Como era de esperar, este modificador hace que, por ejemplo, &lt;code&gt;\D&lt;/code&gt; signifique lo mismo que &lt;code&gt;[^0-9]&lt;/code&gt; ; de hecho, todos los caracteres no ASCII coinciden &lt;code&gt;\D&lt;/code&gt; , &lt;code&gt;\S&lt;/code&gt; , y &lt;code&gt;\W&lt;/code&gt; . &lt;code&gt;\b&lt;/code&gt; todav&amp;iacute;a significa coincidir en el l&amp;iacute;mite entre &lt;code&gt;\w&lt;/code&gt; y &lt;code&gt;\W&lt;/code&gt; , usando las definiciones &lt;code&gt;/a&lt;/code&gt; de ellos (de manera similar para &lt;code&gt;\B&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="26154301b1350500c1d0c8c752bea63ea6529192" translate="yes" xml:space="preserve">
          <source>As you're writing an application, you decide as you go what messages you need to emit. Normally you'd go to write this:</source>
          <target state="translated">Mientras escribes una solicitud,decides sobre la marcha qué mensajes debes emitir.Normalmente irías a escribir esto:</target>
        </trans-unit>
        <trans-unit id="94a73ad4a31e87483d1616b8954f4b6c0ff428df" translate="yes" xml:space="preserve">
          <source>As you've seen, you can force &lt;code&gt;catdir()&lt;/code&gt; to create an absolute path by passing either an empty string or a path that begins with a volume name as the first argument. However, you are strongly encouraged not to do so, since this is done only for backward compatibility. Newer versions of File::Spec come with a method called &lt;code&gt;catpath()&lt;/code&gt; (see below), that is designed to offer a portable solution for the creation of absolute paths. It takes volume, directory and file portions and returns an entire path. While &lt;code&gt;catdir()&lt;/code&gt; is still suitable for the concatenation of</source>
          <target state="translated">Como ha visto, puede obligar a &lt;code&gt;catdir()&lt;/code&gt; a crear una ruta absoluta pasando una cadena vac&amp;iacute;a o una ruta que comience con un nombre de volumen como primer argumento. Sin embargo, se le recomienda encarecidamente que no lo haga, ya que esto se hace solo por compatibilidad con versiones anteriores. Las versiones m&amp;aacute;s nuevas de File :: Spec vienen con un m&amp;eacute;todo llamado &lt;code&gt;catpath()&lt;/code&gt; (ver m&amp;aacute;s abajo), que est&amp;aacute; dise&amp;ntilde;ado para ofrecer una soluci&amp;oacute;n port&amp;aacute;til para la creaci&amp;oacute;n de rutas absolutas. Toma porciones de volumen, directorio y archivo y devuelve una ruta completa. Si bien &lt;code&gt;catdir()&lt;/code&gt; sigue siendo adecuado para la concatenaci&amp;oacute;n de</target>
        </trans-unit>
        <trans-unit id="a173e725607d0f98c78ebac0b31138d8d136aa84" translate="yes" xml:space="preserve">
          <source>Asia</source>
          <target state="translated">Asia</target>
        </trans-unit>
        <trans-unit id="f22fac8ac4e191689a82159394064af8e931487a" translate="yes" xml:space="preserve">
          <source>Aside from an experimental facility (see &lt;a href=&quot;#Signatures&quot;&gt;Signatures&lt;/a&gt; below), Perl does not have named formal parameters. In practice all you do is assign to a &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; list of these. Variables that aren't declared to be private are global variables. For gory details on creating private variables, see &lt;a href=&quot;#Private-Variables-via-my()&quot;&gt;Private Variables via my()&lt;/a&gt; and &lt;a href=&quot;#Temporary-Values-via-local()&quot;&gt;Temporary Values via local()&lt;/a&gt;. To create protected environments for a set of functions in a separate package (and probably a separate file), see &lt;a href=&quot;perlmod#Packages&quot;&gt;Packages in perlmod&lt;/a&gt;.</source>
          <target state="translated">Aparte de una instalaci&amp;oacute;n experimental (ver &lt;a href=&quot;#Signatures&quot;&gt;Firmas a&lt;/a&gt; continuaci&amp;oacute;n), Perl no tiene par&amp;aacute;metros formales con nombre. En la pr&amp;aacute;ctica, todo lo que hace es asignar a una lista &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; de estos. Las variables que no se declaran privadas son variables globales. Para obtener detalles sangrientos sobre la creaci&amp;oacute;n de variables privadas, consulte &lt;a href=&quot;#Private-Variables-via-my()&quot;&gt;Variables privadas a trav&amp;eacute;s de my ()&lt;/a&gt; y &lt;a href=&quot;#Temporary-Values-via-local()&quot;&gt;Valores temporales a trav&amp;eacute;s de local ()&lt;/a&gt; . Para crear entornos protegidos para un conjunto de funciones en un paquete separado (y probablemente un archivo separado), consulte &lt;a href=&quot;perlmod#Packages&quot;&gt;Paquetes en perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0befd0a8afa8c19a870d175a4fdb840002143042" translate="yes" xml:space="preserve">
          <source>Ask it to create new Perl executable:</source>
          <target state="translated">Pídele que cree un nuevo ejecutable de Perl:</target>
        </trans-unit>
        <trans-unit id="06d5ff26b7db3df6b27e4da48afc0d8940af7b07" translate="yes" xml:space="preserve">
          <source>Ask the current maintainer to make you a co-maintainer or transfer the module to you.</source>
          <target state="translated">Pídele al actual mantenedor que te haga co-mantenedor o que te transfiera el módulo.</target>
        </trans-unit>
        <trans-unit id="640918b79c5c24d060028d2fd27fecdba24558af" translate="yes" xml:space="preserve">
          <source>Ask the server for &quot;helpful information&quot; (that's what the RFC says) on the commands it accepts.</source>
          <target state="translated">Pide al servidor &quot;información útil&quot; (eso es lo que dice el RFC)sobre los comandos que acepta.</target>
        </trans-unit>
        <trans-unit id="29957267ee0cac223134add5f2b52ea620705c23" translate="yes" xml:space="preserve">
          <source>Ask them for it. There are so many email providers available that it's unlikely the local system has any idea how to determine a user's email address.</source>
          <target state="translated">Pídeselo.Hay tantos proveedores de correo electrónico disponibles que es poco probable que el sistema local tenga alguna idea de cómo determinar la dirección de correo electrónico de un usuario.</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="00331b7ae6edef1dff40c7175d1e39fd7f33aa69" translate="yes" xml:space="preserve">
          <source>Assertions are conditions that have to be true; they don't actually match parts of the substring. There are six assertions that are written as backslash sequences.</source>
          <target state="translated">Las afirmaciones son condiciones que tienen que ser verdaderas;en realidad no coinciden con partes de la subcadena.Hay seis afirmaciones que están escritas como secuencias de barra invertida.</target>
        </trans-unit>
        <trans-unit id="bc266cdcbb6ece4821fb3ad4912b26e12d68bda4" translate="yes" xml:space="preserve">
          <source>Assigning Magic</source>
          <target state="translated">Asignar la magia</target>
        </trans-unit>
        <trans-unit id="5758c53717d47b26aecb2f1e95a4e608692a5e69" translate="yes" xml:space="preserve">
          <source>Assigning and Dereferencing Variables.</source>
          <target state="translated">Asignación y derivación de variables.</target>
        </trans-unit>
        <trans-unit id="d524a6069dcf850237db76c5b77de165e1b358ee" translate="yes" xml:space="preserve">
          <source>Assigning to References</source>
          <target state="translated">Asignación a las referencias</target>
        </trans-unit>
        <trans-unit id="c279a061dbc31dc7bee97d46022b90f62667a4ac" translate="yes" xml:space="preserve">
          <source>Assigning to a list of private variables to name your arguments:</source>
          <target state="translated">Asignando a una lista de variables privadas para nombrar sus argumentos:</target>
        </trans-unit>
        <trans-unit id="5095fe9fb68e9a62edc8c9686322a7856091bd87" translate="yes" xml:space="preserve">
          <source>Assigning to an entry in the hash will cause the time stamps of the file to be modified. If the file does not exist then it will be created. Assigning a single integer to a hash element will cause both the access and modification times to be changed to that value. Alternatively a reference to an array of two values can be passed. The first array element will be used to set the access time and the second element will be used to set the modification time.</source>
          <target state="translated">Asignar a una entrada en el hash hará que se modifiquen las marcas de tiempo del archivo.Si el archivo no existe,entonces será creado.Asignar un solo entero a un elemento del hash hará que tanto las horas de acceso como las de modificación se cambien a ese valor.Alternativamente,se puede pasar una referencia a una matriz de dos valores.El primer elemento de la matriz se utilizará para establecer el tiempo de acceso y el segundo elemento se utilizará para establecer el tiempo de modificación.</target>
        </trans-unit>
        <trans-unit id="7ca1018fbacf1aa9c5974935df5ed892f5691b8b" translate="yes" xml:space="preserve">
          <source>Assigning to the special variable $[</source>
          <target state="translated">Asignando a la variable especial $[</target>
        </trans-unit>
        <trans-unit id="7bec00ae67953bf63f8b1b3f8ddf8f9255f79d82" translate="yes" xml:space="preserve">
          <source>Assignment Operators</source>
          <target state="translated">Operadores de asignación</target>
        </trans-unit>
        <trans-unit id="91becff514df4bb52422a8c72ad2fa7e138a09c4" translate="yes" xml:space="preserve">
          <source>Assignment is a little bit special in that it uses its left argument to determine the context for the right argument. Assignment to a scalar evaluates the right-hand side in scalar context, while assignment to an array or hash evaluates the righthand side in list context. Assignment to a list (or slice, which is just a list anyway) also evaluates the right-hand side in list context.</source>
          <target state="translated">La asignación es un poco especial en el sentido de que utiliza su argumento izquierdo para determinar el contexto del argumento derecho.La asignación a un escalar evalúa el lado derecho en el contexto del escalar,mientras que la asignación a una matriz o hash evalúa el lado derecho en el contexto de la lista.La asignación a una lista (o trozo,que de todos modos es sólo una lista)también evalúa el lado derecho en el contexto de la lista.</target>
        </trans-unit>
        <trans-unit id="eeb7b7ef33aeb4c3b9e41b0d3c8c37efe141de32" translate="yes" xml:space="preserve">
          <source>Assignment operators work as in C. That is,</source>
          <target state="translated">Los operadores de asignación trabajan como en C.Es decir,</target>
        </trans-unit>
        <trans-unit id="e44ee3c1149f2c21100b91bdf4ef60fbcf7575f3" translate="yes" xml:space="preserve">
          <source>Assignment to a typeglob performs an aliasing operation, i.e.,</source>
          <target state="translated">La asignación a una tipografía realiza una operación de alias,es decir,</target>
        </trans-unit>
        <trans-unit id="101d3fe15227197bfb043f8902c240196099b710" translate="yes" xml:space="preserve">
          <source>Assignment to references and non-references may be combined in lists and conditional ternary expressions, as long as the values on the right-hand side are the right type for each element on the left, though this may make for obfuscated code:</source>
          <target state="translated">La asignación de referencias y no referencias puede combinarse en listas y expresiones ternarias condicionales,siempre y cuando los valores de la parte derecha sean del tipo correcto para cada elemento de la izquierda,aunque esto puede suponer un código ofuscado:</target>
        </trans-unit>
        <trans-unit id="38be444e6e51033245feebeecd19c780a4190e4e" translate="yes" xml:space="preserve">
          <source>Associated with the matching variables &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... are the &lt;b&gt;backreferences&lt;/b&gt;&lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; , ... Backreferences are matching variables that can be used</source>
          <target state="translated">Asociadas con las variables coincidentes &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... est&amp;aacute;n las &lt;b&gt;referencias inversas &lt;/b&gt; &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; , ... Las referencias inversas son variables coincidentes que se pueden utilizar</target>
        </trans-unit>
        <trans-unit id="6addecb62c84d829e48e459ba05882e03a175023" translate="yes" xml:space="preserve">
          <source>Assume &lt;b&gt;anything&lt;/b&gt; about structs (especially the ones you don't control, like the ones coming from the system headers)</source>
          <target state="translated">Asuma &lt;b&gt;cualquier cosa&lt;/b&gt; sobre estructuras (especialmente las que no controla, como las que provienen de los encabezados del sistema)</target>
        </trans-unit>
        <trans-unit id="9e766ffb9a2f9804774162774bb465b7a888d65a" translate="yes" xml:space="preserve">
          <source>Assume each sentence ends with two spaces and try to preserve that spacing. Without this option, all consecutive whitespace in non-verbatim paragraphs is compressed into a single space.</source>
          <target state="translated">Supongamos que cada frase termina con dos espacios e intentemos preservar ese espacio.Sin esta opción,todos los espacios en blanco consecutivos en los párrafos no verbales se comprimen en un solo espacio.</target>
        </trans-unit>
        <trans-unit id="eb29cb4a3a64a3e55d8f8b66fc5429f33cc90a54" translate="yes" xml:space="preserve">
          <source>Assume four classes, A,B,C &amp;amp; D.</source>
          <target state="translated">Suponga cuatro clases, A, B, C y D.</target>
        </trans-unit>
        <trans-unit id="900f642b83bb773e589683695c3e83ec1e64d87c" translate="yes" xml:space="preserve">
          <source>Assume nothing about numerical values (&lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;) of characters. Do not use explicit code point ranges (like &lt;code&gt;\xHH-\xHH)&lt;/code&gt; . However, starting in Perl v5.22, regular expression pattern bracketed character class ranges specified like &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[\N{U+HH}-\N{U+HH}]/&lt;/a&gt;&lt;/code&gt; are portable. You can portably use symbolic character classes like &lt;code&gt;[:print:]&lt;/code&gt;.</source>
          <target state="translated">No asuma nada sobre los valores num&amp;eacute;ricos ( &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; ) de los caracteres. No utilice rangos de puntos de c&amp;oacute;digo expl&amp;iacute;citos (como &lt;code&gt;\xHH-\xHH)&lt;/code&gt; . Sin embargo, a partir de Perl v5.22, los rangos de clases de caracteres entre corchetes de patrones de expresi&amp;oacute;n regular especificados como &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[\N{U+HH}-\N{U+HH}]/&lt;/a&gt;&lt;/code&gt; son port&amp;aacute;tiles. Puede utilizar de forma port&amp;aacute;til clases de caracteres simb&amp;oacute;licos como &lt;code&gt;[:print:]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d225542d9c39b42f29197a0ce47f62fa7382a5c0" translate="yes" xml:space="preserve">
          <source>Assume that an integer cannot take less than 20 bytes of memory, a float cannot take less than 24 bytes, a string cannot take less than 32 bytes (all these examples assume 32-bit architectures, the result are quite a bit worse on 64-bit architectures). If a variable is accessed in two of three different ways (which require an integer, a float, or a string), the memory footprint may increase yet another 20 bytes. A sloppy malloc(3) implementation can inflate these numbers dramatically.</source>
          <target state="translated">Supongamos que un entero no puede tomar menos de 20 bytes de memoria,un flotador no puede tomar menos de 24 bytes,una cadena no puede tomar menos de 32 bytes (todos estos ejemplos asumen arquitecturas de 32 bits,el resultado es bastante peor en arquitecturas de 64 bits).Si se accede a una variable de dos o tres maneras diferentes (que requieren un número entero,un flotador o una cadena),la huella de la memoria puede aumentar otros 20 bytes.Una implementación descuidada de malloc(3)puede inflar estos números dramáticamente.</target>
        </trans-unit>
        <trans-unit id="5cf62705d74f3464ae65764bb487f8249da94d46" translate="yes" xml:space="preserve">
          <source>Assume that the old DLL is named</source>
          <target state="translated">Supongamos que el viejo DLL se llama</target>
        </trans-unit>
        <trans-unit id="2605c8584b04c7bf0a2b7cc3badf48edb3bf06d0" translate="yes" xml:space="preserve">
          <source>Assume that you are a seasoned porter, so are sure that all the necessary tools are already present on your system, and you know how to get the Perl source distribution. Untar it, change to the extract directory, and</source>
          <target state="translated">Suponga que es un porteador experimentado,así que esté seguro de que todas las herramientas necesarias ya están presentes en su sistema,y que sabe cómo obtener la distribución de la fuente de Perl.Desátalo,cambia al directorio de extracción,y</target>
        </trans-unit>
        <trans-unit id="aa1c680a74a55225e27707c2ac5fffa720c70f93" translate="yes" xml:space="preserve">
          <source>Assume this TAP version for &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt; instead of default TAP version 12.</source>
          <target state="translated">Asuma esta versi&amp;oacute;n de &lt;a href=&quot;parser&quot;&gt;TAP&lt;/a&gt; para TAP :: Parser en lugar de la versi&amp;oacute;n 12 de TAP predeterminada.</target>
        </trans-unit>
        <trans-unit id="7fc8664d84c1446907ca24dadecd0bd664e1d82d" translate="yes" xml:space="preserve">
          <source>Assume very little about character sets.</source>
          <target state="translated">Asumir muy poco sobre los conjuntos de personajes.</target>
        </trans-unit>
        <trans-unit id="2b3c42e666c3f46061cf3e08ae5f736db9c6b58e" translate="yes" xml:space="preserve">
          <source>Assumes that PL_op is the op that originally triggered the error, and that PL_comppad/PL_curpad points to the currently executing pad.</source>
          <target state="translated">Asume que PL_op es la operación que originalmente disparó el error,y que PL_comppad/PL_curpad apunta a la plataforma de ejecución actual.</target>
        </trans-unit>
        <trans-unit id="85a92465c7801a7593ae125acb124d7a78d00d62" translate="yes" xml:space="preserve">
          <source>Assuming one can dereference any type of pointer for any type of data</source>
          <target state="translated">Asumiendo que se puede derivar cualquier tipo de puntero para cualquier tipo de datos</target>
        </trans-unit>
        <trans-unit id="3eba801518ac20c3e71b66588e69e8412d142226" translate="yes" xml:space="preserve">
          <source>Assuming sizeof(int) == sizeof(long)</source>
          <target state="translated">Asumiendo tamaño(int)==tamaño(largo)</target>
        </trans-unit>
        <trans-unit id="3b4336515b2aaf87ea7abdf5569d5fbbc17ae08d" translate="yes" xml:space="preserve">
          <source>Assuming that the &lt;code&gt;man&lt;/code&gt; -files were put on an appropriate location, this completes the installation of minimal Perl system. (The binary distribution contains also a lot of additional modules, and the documentation in INF format.)</source>
          <target state="translated">Suponiendo que los archivos &lt;code&gt;man&lt;/code&gt; se colocaron en una ubicaci&amp;oacute;n adecuada, esto completa la instalaci&amp;oacute;n del sistema Perl m&amp;iacute;nimo. (La distribuci&amp;oacute;n binaria tambi&amp;eacute;n contiene muchos m&amp;oacute;dulos adicionales y la documentaci&amp;oacute;n en formato INF).</target>
        </trans-unit>
        <trans-unit id="1b3d48dcc2393b6165f22e974c8fe37cb11cfa92" translate="yes" xml:space="preserve">
          <source>Assuming that we have to match calendar dates which may be given in one of the three formats yyyy-mm-dd, mm/dd/yyyy or dd.mm.yyyy, we can write three suitable patterns where we use 'd', 'm' and 'y' respectively as the names of the groups capturing the pertaining components of a date. The matching operation combines the three patterns as alternatives:</source>
          <target state="translated">Suponiendo que tenemos que hacer coincidir las fechas del calendario que pueden darse en uno de los tres formatos yyyy-mm-dd,mm/dd/yyyy o dd.mm.yyyy,podemos escribir tres patrones adecuados en los que usamos &quot;d&quot;,&quot;m&quot; e &quot;y&quot; respectivamente como los nombres de los grupos que capturan los componentes correspondientes de una fecha.La operación de emparejamiento combina los tres patrones como alternativas:</target>
        </trans-unit>
        <trans-unit id="0518d034f096809ab863fb80241126fe45a3c2bb" translate="yes" xml:space="preserve">
          <source>Assuming that you don't care about IEEE notations like &quot;NaN&quot; or &quot;Infinity&quot;, you probably just want to use a regular expression:</source>
          <target state="translated">Asumiendo que no te importan las notaciones del IEEE como &quot;NaN&quot; o &quot;Infinito&quot;,probablemente sólo quieras usar una expresión regular:</target>
        </trans-unit>
        <trans-unit id="c5c2ab31ddb2d4e68552f61633bf186e98613579" translate="yes" xml:space="preserve">
          <source>Assuming the character set is ASCIIish</source>
          <target state="translated">Asumiendo que el conjunto de caracteres es ASCIIish</target>
        </trans-unit>
        <trans-unit id="657e33b27d387873c824a6e9282e0d4e22ed782e" translate="yes" xml:space="preserve">
          <source>Assuming the character set is just ASCII</source>
          <target state="translated">Asumiendo que el conjunto de caracteres es sólo ASCII</target>
        </trans-unit>
        <trans-unit id="7e0c2159a115b592c79f24b1d84f43c005948de3" translate="yes" xml:space="preserve">
          <source>Assuming the contents of static memory pointed to by the return values of Perl wrappers for C library functions doesn't change. Many C library functions return pointers to static storage that can be overwritten by subsequent calls to the same or related functions. Perl has light-weight wrappers for some of these functions, and which don't make copies of the static memory. A good example is the interface to the environment variables that are in effect for the program. Perl has &lt;code&gt;PerlEnv_getenv&lt;/code&gt; to get values from the environment. But the return is a pointer to static memory in the C library. If you are using the value to immediately test for something, that's fine, but if you save the value and expect it to be unchanged by later processing, you would be wrong, but perhaps you wouldn't know it because different C library implementations behave differently, and the one on the platform you're testing on might work for your situation. But on some platforms, a subsequent call to &lt;code&gt;PerlEnv_getenv&lt;/code&gt; or related function WILL overwrite the memory that your first call points to. This has led to some hard-to-debug problems. Do a &lt;a href=&quot;perlapi#savepv&quot;&gt;savepv in perlapi&lt;/a&gt; to make a copy, thus avoiding these problems. You will have to free the copy when you're done to avoid memory leaks. If you don't have control over when it gets freed, you'll need to make the copy in a mortal scalar, like so:</source>
          <target state="translated">Suponiendo que el contenido de la memoria est&amp;aacute;tica apuntado por los valores de retorno de los contenedores de Perl para las funciones de la biblioteca C no cambia. Muchas funciones de la biblioteca de C devuelven punteros al almacenamiento est&amp;aacute;tico que pueden sobrescribirse mediante llamadas posteriores a la misma funci&amp;oacute;n o funciones relacionadas. Perl tiene envoltorios livianos para algunas de estas funciones y no hacen copias de la memoria est&amp;aacute;tica. Un buen ejemplo es la interfaz de las variables de entorno que est&amp;aacute;n vigentes para el programa. Perl tiene &lt;code&gt;PerlEnv_getenv&lt;/code&gt; para obtener valores del medio ambiente. Pero el retorno es un puntero a la memoria est&amp;aacute;tica en la biblioteca C. Si est&amp;aacute; utilizando el valor para probar inmediatamente algo, est&amp;aacute; bien, pero si guarda el valor y espera que no se modifique en el procesamiento posterior, estar&amp;iacute;a equivocado, pero quiz&amp;aacute;s no lo sepa porque se comportan diferentes implementaciones de la biblioteca C de manera diferente, y el de la plataforma en la que est&amp;aacute; probando podr&amp;iacute;a funcionar para su situaci&amp;oacute;n. Pero en algunas plataformas, una llamada posterior a &lt;code&gt;PerlEnv_getenv&lt;/code&gt; o una funci&amp;oacute;n relacionada sobrescribir&amp;aacute; la memoria a la que apunta su primera llamada. Esto ha provocado algunos problemas dif&amp;iacute;ciles de depurar. Haz un &lt;a href=&quot;perlapi#savepv&quot;&gt;savepv en perlapi&lt;/a&gt;hacer una copia, evitando as&amp;iacute; estos problemas. Tendr&amp;aacute; que liberar la copia cuando haya terminado para evitar p&amp;eacute;rdidas de memoria. Si no tiene control sobre cu&amp;aacute;ndo se libera, deber&amp;aacute; hacer la copia en un escalar mortal, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="3368b5431ec704ea21f8185fe92770b3b042af71" translate="yes" xml:space="preserve">
          <source>Assuming the database from the previous example:</source>
          <target state="translated">Suponiendo la base de datos del ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="37f2465394b9cbdd91947c6e4e077a7d4b7dde8a" translate="yes" xml:space="preserve">
          <source>Assuming they are to behave analogously to Perl's &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; , overloaded implementations of these operators are required to mutate their operands.</source>
          <target state="translated">Suponiendo que se comporten de forma an&amp;aacute;loga a &lt;code&gt;++&lt;/code&gt; y &lt;code&gt;--&lt;/code&gt; Perl, se requieren implementaciones sobrecargadas de estos operadores para mutar sus operandos.</target>
        </trans-unit>
        <trans-unit id="23383c34471c75b25927cfad7162ad1979bea49b" translate="yes" xml:space="preserve">
          <source>Assuming you call your class Projname::L10N, create a class consisting minimally of:</source>
          <target state="translated">Suponiendo que llames a tu clase Projname::L10N,crea una clase que consista mínimamente en:</target>
        </trans-unit>
        <trans-unit id="a8c3ccec4be1ea177d36a955790696ae747518f7" translate="yes" xml:space="preserve">
          <source>Assuming you have good test coverage, your tests should fail with missing dependencies informing the user more strongly that something is wrong. You can write a</source>
          <target state="translated">Asumiendo que tiene una buena cobertura de pruebas,sus pruebas deberían fallar con las dependencias faltantes informando al usuario con más fuerza que algo está mal.Puedes escribir un</target>
        </trans-unit>
        <trans-unit id="562091b17215c5d2dabd5a6d27106f5a063623cd" translate="yes" xml:space="preserve">
          <source>Assuming you know you're dealing with a UTF-8 string, you can find out how long the first character in it is with the &lt;code&gt;UTF8SKIP&lt;/code&gt; macro:</source>
          <target state="translated">Suponiendo que sabe que est&amp;aacute; tratando con una cadena UTF-8, puede averiguar cu&amp;aacute;nto tiempo tiene el primer car&amp;aacute;cter con la macro &lt;code&gt;UTF8SKIP&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9da798a9d5da7f2f9d9ef9e1b52ebf21c8c17dc7" translate="yes" xml:space="preserve">
          <source>Assuming you're running under sufficient permissions, you should be able to set the system-wide date and time by running the &lt;code&gt;date(1)&lt;/code&gt; program. (There is no way to set the time and date on a per-process basis.) This mechanism will work for Unix, MS-DOS, Windows, and NT; the VMS equivalent is &lt;code&gt;set &lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">Suponiendo que est&amp;aacute; ejecutando con permisos suficientes, deber&amp;iacute;a poder establecer la fecha y la hora en todo el sistema ejecutando el programa &lt;code&gt;date(1)&lt;/code&gt; . (No hay forma de establecer la hora y la fecha por proceso). Este mecanismo funcionar&amp;aacute; para Unix, MS-DOS, Windows y NT; el equivalente de VMS es el &lt;code&gt;set &lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; establecido .</target>
        </trans-unit>
        <trans-unit id="a50f834fa5c7b73ada293aca740d6156afc09752" translate="yes" xml:space="preserve">
          <source>Assuming your system supports such things, just send an appropriate signal to the process (see &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;). It's common to first send a TERM signal, wait a little bit, and then send a KILL signal to finish it off.</source>
          <target state="translated">Suponiendo que su sistema admita tales cosas, simplemente env&amp;iacute;e una se&amp;ntilde;al apropiada al proceso (vea &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; ). Es com&amp;uacute;n enviar primero una se&amp;ntilde;al TERM, esperar un poco y luego enviar una se&amp;ntilde;al KILL para terminar.</target>
        </trans-unit>
        <trans-unit id="a34c6deba477e26d8810a3f5cd4114d33aa1e300" translate="yes" xml:space="preserve">
          <source>At 10:23, this function generates the 10th line of a data file; at 3:45 PM it generates the 15th line instead. By default, &lt;code&gt;Memoize&lt;/code&gt; will only see the $problem_type argument. To fix this, include the current hour in the normalizer:</source>
          <target state="translated">A las 10:23, esta funci&amp;oacute;n genera la d&amp;eacute;cima l&amp;iacute;nea de un archivo de datos; a las 3:45 pm genera la l&amp;iacute;nea 15 en su lugar. De forma predeterminada, &lt;code&gt;Memoize&lt;/code&gt; solo ver&amp;aacute; el argumento $ problem_type. Para solucionar este problema, incluya la hora actual en el normalizador:</target>
        </trans-unit>
        <trans-unit id="0d3035d43f34a8f68a2af535ff4afe837cc1bf23" translate="yes" xml:space="preserve">
          <source>At a given character position, the first alternative that allows the regex match to succeed will be the one that matches. Here, all the alternatives match at the first string position, so the first matches.</source>
          <target state="translated">En la posición de un personaje determinado,la primera alternativa que permite que la coincidencia de regex tenga éxito será la que coincida.Aquí,todas las alternativas coinciden en la posición de la primera cuerda,por lo que las primeras coincidencias.</target>
        </trans-unit>
        <trans-unit id="fa1efd2d4349c6ea79b9b9fc2089c111f8b1ca40" translate="yes" xml:space="preserve">
          <source>At any given time, exactly one of these modifiers is in effect. Their existence allows Perl to keep the originally compiled behavior of a regular expression, regardless of what rules are in effect when it is actually executed. And if it is interpolated into a larger regex, the original's rules continue to apply to it, and only it.</source>
          <target state="translated">En cualquier momento,exactamente uno de estos modificadores está en efecto.Su existencia permite a Perl mantener el comportamiento originalmente compilado de una expresión regular,independientemente de las reglas que están en efecto cuando se ejecuta realmente.Y si se interpola en un regex más grande,las reglas del original continúan aplicándose a él,y sólo a él.</target>
        </trans-unit>
        <trans-unit id="7593f9fb00e51f006212d276b2834d5cb1e7bd4c" translate="yes" xml:space="preserve">
          <source>At any rate, the very use of &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; is questionable when it comes to unicode characters since you have to consider such things as character width (i.e. double-width for ideographs) and directions (i.e. BIDI for Arabic and Hebrew).</source>
          <target state="translated">En cualquier caso, el uso del &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o es cuestionable cuando se trata de caracteres Unicode, ya que hay que considerar aspectos como el ancho de los caracteres (es decir, el doble de ancho para ideogramas) y las direcciones (es decir, BIDI para &amp;aacute;rabe y hebreo).</target>
        </trans-unit>
        <trans-unit id="40530b4cf9ab5b3f6391788f6f588ae031f72498" translate="yes" xml:space="preserve">
          <source>At deserialization time, you will be given back the same LIST, but all the extra references will be pointing into the deserialized structure.</source>
          <target state="translated">En el momento de la deserialización,se le devolverá la misma LISTA,pero todas las referencias extra estarán apuntando a la estructura deserializada.</target>
        </trans-unit>
        <trans-unit id="2359fa76d13a340de35eda7f896e38293fc5d5aa" translate="yes" xml:space="preserve">
          <source>At each stack level, the subroutine's name is displayed along with its parameters. For simple scalars, this is sufficient. For complex data types, such as objects and other references, this can simply display &lt;code&gt;'HASH(0x1ab36d8)'&lt;/code&gt; .</source>
          <target state="translated">En cada nivel de pila, se muestra el nombre de la subrutina junto con sus par&amp;aacute;metros. Para escalares simples, esto es suficiente. Para tipos de datos complejos, como objetos y otras referencias, esto simplemente puede mostrar &lt;code&gt;'HASH(0x1ab36d8)'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="396433f01b9bc30bd1dc987a608f2db8a7b54ded" translate="yes" xml:space="preserve">
          <source>At entry points to perl, such as &lt;code&gt;perl_parse()&lt;/code&gt; , &lt;code&gt;perl_run()&lt;/code&gt; and &lt;code&gt;call_sv(cv, G_EVAL)&lt;/code&gt; each does a &lt;code&gt;JMPENV_PUSH&lt;/code&gt; , then enter a runops loop or whatever, and handle possible exception returns. For a 2 return, final cleanup is performed, such as popping stacks and calling &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt; blocks. Amongst other things, this is how scope cleanup still occurs during an &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">En los puntos de entrada a perl, como &lt;code&gt;perl_parse()&lt;/code&gt; , &lt;code&gt;perl_run()&lt;/code&gt; y &lt;code&gt;call_sv(cv, G_EVAL)&lt;/code&gt; cada uno hace un &lt;code&gt;JMPENV_PUSH&lt;/code&gt; , luego ingresa un bucle de runops o lo que sea, y maneja posibles devoluciones de excepci&amp;oacute;n. Para un retorno 2, se realiza una limpieza final, como hacer estallar las pilas y llamar a los bloques &lt;code&gt;CHECK&lt;/code&gt; o &lt;code&gt;END&lt;/code&gt; . Entre otras cosas, as&amp;iacute; es como se sigue realizando la limpieza del alcance durante una &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b52a6611c3d532a492a587178e19cf7d8fea481" translate="yes" xml:space="preserve">
          <source>At first glance, you'd think that it shouldn't print, because obviously the &lt;code&gt;ddd&lt;/code&gt; isn't going to match the target string. But look at this example:</source>
          <target state="translated">A primera vista, pensar&amp;iacute;a que no deber&amp;iacute;a imprimirse, porque obviamente el &lt;code&gt;ddd&lt;/code&gt; no va a coincidir con la cadena de destino. Pero mira este ejemplo:</target>
        </trans-unit>
        <trans-unit id="a20d2e5d0ab73a1c97b3463749bc6385228a9028" translate="yes" xml:space="preserve">
          <source>At least for consistency with WinNT, you should keep the recommended value.</source>
          <target state="translated">Al menos para la consistencia con el WinNT,deberías mantener el valor recomendado.</target>
        </trans-unit>
        <trans-unit id="27bd45d9389cf551091228f338420922ea6613d9" translate="yes" xml:space="preserve">
          <source>At least in Unix you may be able to get past this by increasing your process datasize limits: in csh/tcsh use &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;limit datasize n&lt;/code&gt; (where &lt;code&gt;n&lt;/code&gt; is the number of kilobytes) to check the current limits and change them, and in ksh/bash/zsh use &lt;code&gt;ulimit -a&lt;/code&gt; and &lt;code&gt;ulimit -d n&lt;/code&gt; , respectively.</source>
          <target state="translated">Al menos en Unix puede superar esto aumentando los l&amp;iacute;mites de tama&amp;ntilde;o de datos de su proceso: en csh / tcsh use &lt;code&gt;limit&lt;/code&gt; y &lt;code&gt;limit datasize n&lt;/code&gt; (donde &lt;code&gt;n&lt;/code&gt; es el n&amp;uacute;mero de kilobytes) para verificar los l&amp;iacute;mites actuales y cambiarlos, y en ksh / bash / zsh usa &lt;code&gt;ulimit -a&lt;/code&gt; y &lt;code&gt;ulimit -d n&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="be275e2a07874324b642ea6224748e1cc7c92b91" translate="yes" xml:space="preserve">
          <source>At least it's backwards compatible in not doing much.</source>
          <target state="translated">Al menos es compatible al revés en no hacer mucho.</target>
        </trans-unit>
        <trans-unit id="9e14e0bb06602e8d806ecd5603df3d1331d55d06" translate="yes" xml:space="preserve">
          <source>At least one of &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt; must have a goal (at least one of &lt;code&gt;l1&lt;/code&gt; and &lt;code&gt;l2&lt;/code&gt; must be non-zero), and if both do, both have to be reached for a successful match. Also, if the fold of a character is multiple characters, all of them must be matched (see tr21 reference below for 'folding').</source>
          <target state="translated">Al menos uno de &lt;code&gt;s1&lt;/code&gt; y &lt;code&gt;s2&lt;/code&gt; debe tener un objetivo (al menos uno de &lt;code&gt;l1&lt;/code&gt; y &lt;code&gt;l2&lt;/code&gt; debe ser distinto de cero), y si ambos lo tienen, ambos deben alcanzarse para una coincidencia exitosa. Adem&amp;aacute;s, si el pliegue de un personaje es de varios caracteres, todos deben coincidir (consulte la referencia de tr21 a continuaci&amp;oacute;n para ver &quot;plegado&quot;).</target>
        </trans-unit>
        <trans-unit id="9972c1cfc00f54bc3d4bf6854c0d9453527f2493" translate="yes" xml:space="preserve">
          <source>At least the three builtin functions &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined(...)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists(...)&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(...)&lt;/a&gt;&lt;/code&gt;. We might someday add more of these later if we think of them.</source>
          <target state="translated">Al menos las tres funciones integradas &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined(...)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists(...)&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(...)&lt;/a&gt;&lt;/code&gt; . Alg&amp;uacute;n d&amp;iacute;a podr&amp;iacute;amos agregar m&amp;aacute;s de estos m&amp;aacute;s adelante si pensamos en ellos.</target>
        </trans-unit>
        <trans-unit id="dc8bf4c3c86adf3ceb8a466491ba399fbc2b4c86" translate="yes" xml:space="preserve">
          <source>At line number 4 is a helpful pointer, that tells you where you are now. To see more code, type 'v' again:</source>
          <target state="translated">En la línea 4 hay un útil puntero,que te dice dónde estás ahora.Para ver más código,teclea 'v' de nuevo:</target>
        </trans-unit>
        <trans-unit id="3706bce960e08579e2a93b26085ef7458b3bba0d" translate="yes" xml:space="preserve">
          <source>At present that list is: weaken, isweak, dualvar, isvstring, set_prototype</source>
          <target state="translated">Actualmente esa lista es:weak,isweak,dualvar,isvstring,set_prototype</target>
        </trans-unit>
        <trans-unit id="a9a7ccc891020b1abe97ef7e238b5077a99ae99b" translate="yes" xml:space="preserve">
          <source>At present three compression methods are supported by IO::Compress::Zip, namely Store (no compression at all), Deflate, Bzip2 and LZMA.</source>
          <target state="translated">Actualmente hay tres métodos de compresión soportados por IO::Compress::Zip,a saber:Store (sin compresión),Deflate,Bzip2 y LZMA.</target>
        </trans-unit>
        <trans-unit id="c6f3b56326d807044d12f7fa90b19c7ea2469f7b" translate="yes" xml:space="preserve">
          <source>At present, the first time you iterate over %ENV using &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, you will incur a time penalty as all logical names are read, in order to fully populate %ENV. Subsequent iterations will not reread logical names, so they won't be as slow, but they also won't reflect any changes to logical name tables caused by other programs.</source>
          <target state="translated">En la actualidad, la primera vez que itera sobre% ENV utilizando &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; , incurrir&amp;aacute; en una penalizaci&amp;oacute;n de tiempo ya que se leen todos los nombres l&amp;oacute;gicos, para completar% ENV. Las iteraciones posteriores no volver&amp;aacute;n a leer los nombres l&amp;oacute;gicos, por lo que no ser&amp;aacute;n tan lentos, pero tampoco reflejar&amp;aacute;n ning&amp;uacute;n cambio en las tablas de nombres l&amp;oacute;gicos causado por otros programas.</target>
        </trans-unit>
        <trans-unit id="25d8707372413087d65e69b61d9a6dc703b71cf2" translate="yes" xml:space="preserve">
          <source>At run time, each listed plugin is instantiated as a singleton object by running the equivalent of this pseudo code:</source>
          <target state="translated">En tiempo de ejecución,cada plugin listado es instanciado como un objeto de un solo botón ejecutando el equivalente de este pseudo código:</target>
        </trans-unit>
        <trans-unit id="0346a8b0d676351a6882db32e2f71fe2cd6612af" translate="yes" xml:space="preserve">
          <source>At run-time you can use:</source>
          <target state="translated">En tiempo de ejecución puedes usar:</target>
        </trans-unit>
        <trans-unit id="14c311a97bb302da658b5d5c146d94913481c6a7" translate="yes" xml:space="preserve">
          <source>At some moment the built may die, reporting a</source>
          <target state="translated">En algún momento el construido puede morir,reportando un</target>
        </trans-unit>
        <trans-unit id="8f94eca0c2d56d19683ad85c3b3f54fed0ab0893" translate="yes" xml:space="preserve">
          <source>At the 2008 QA Hackathon in Oslo, Perl module toolchain maintainers agrees to use the CPAN Meta format to communicate post-configuration requirements between toolchain components. These files,</source>
          <target state="translated">En el QA Hackathon de 2008 en Oslo,los mantenedores de la cadena de herramientas del módulo Perl acuerdan utilizar el formato CPAN Meta para comunicar los requisitos de postconfiguración entre los componentes de la cadena de herramientas.Estos archivos,</target>
        </trans-unit>
        <trans-unit id="86950d72bad1114392fd499fea36a75e7faf16d6" translate="yes" xml:space="preserve">
          <source>At the cost of a slight header overhead, you may store to an already opened file descriptor using the &lt;code&gt;store_fd&lt;/code&gt; routine, and retrieve from a file via &lt;code&gt;fd_retrieve&lt;/code&gt; . Those names aren't imported by default, so you will have to do that explicitly if you need those routines. The file descriptor you supply must be already opened, for read if you're going to retrieve and for write if you wish to store.</source>
          <target state="translated">A costa de una ligera sobrecarga de encabezado, puede almacenar en un descriptor de archivo ya abierto utilizando la rutina &lt;code&gt;store_fd&lt;/code&gt; y recuperar de un archivo a trav&amp;eacute;s de &lt;code&gt;fd_retrieve&lt;/code&gt; . Esos nombres no se importan de forma predeterminada, por lo que tendr&amp;aacute; que hacerlo expl&amp;iacute;citamente si necesita esas rutinas. El descriptor de archivo que proporcione debe estar ya abierto, para leerlo si lo va a recuperar y para escribir si desea almacenarlo.</target>
        </trans-unit>
        <trans-unit id="5655f269f9dae667811a30ef2f8f926fc9530ad6" translate="yes" xml:space="preserve">
          <source>At the end of</source>
          <target state="translated">Al final de</target>
        </trans-unit>
        <trans-unit id="9572ac86c1b1da5c7ab83dd35ce00912ee7e613d" translate="yes" xml:space="preserve">
          <source>At the end of all &lt;code&gt;when&lt;/code&gt; blocks, there is an implicit &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;. You can override that with an explicit &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; if you're interested in only the first match alone.</source>
          <target state="translated">Al final de todos los bloques &lt;code&gt;when&lt;/code&gt; , hay un &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; impl&amp;iacute;cito . Puede anular eso con un &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;cito si est&amp;aacute; interesado solo en la primera coincidencia.</target>
        </trans-unit>
        <trans-unit id="ca6a702d6cdcdadecdbaeb43444eca515cc146c7" translate="yes" xml:space="preserve">
          <source>At the end of the parse, call &lt;code&gt;$parser-&amp;gt;root&lt;/code&gt; to get the tree's top node.</source>
          <target state="translated">Al final del an&amp;aacute;lisis, llame a &lt;code&gt;$parser-&amp;gt;root&lt;/code&gt; para obtener el nodo superior del &amp;aacute;rbol.</target>
        </trans-unit>
        <trans-unit id="07a9cc69765068861817ec41e4a7228bd113195b" translate="yes" xml:space="preserve">
          <source>At the lowest level, the macros new_SV() and del_SV() grab and free an SV head. (If debugging with -DD, del_SV() calls the function S_del_sv() to return the SV to the free list with error checking.) new_SV() calls more_sv() / sv_add_arena() to add an extra arena if the free list is empty. SVs in the free list have their SvTYPE field set to all ones.</source>
          <target state="translated">En el nivel más bajo,las macros new_SV()y del_SV()agarran y liberan una cabeza SV.(Si se depura con -DD,del_SV()llama a la función S_del_sv()para devolver el SV a la lista libre con comprobación de errores).new_SV()llama a more_sv()/sv_add_arena()para añadir un campo extra si la lista libre está vacía.Los SV de la lista libre tienen su campo SvTYPE establecido en todos.</target>
        </trans-unit>
        <trans-unit id="6089cbc08fb43732445842a261366b161cee7872" translate="yes" xml:space="preserve">
          <source>At the moment of writing, AIX supports two different native C compilers, for which you have to pay: &lt;b&gt;xlC&lt;/b&gt; and &lt;b&gt;vac&lt;/b&gt;. If you decide to use either of these two (which is quite a lot easier than using gcc), be sure to upgrade to the latest available patch level. Currently:</source>
          <target state="translated">En el momento de escribir este art&amp;iacute;culo, AIX admite dos compiladores nativos de C diferentes, por los que debe pagar: &lt;b&gt;xlC&lt;/b&gt; y &lt;b&gt;vac&lt;/b&gt; . Si decide usar cualquiera de estos dos (que es mucho m&amp;aacute;s f&amp;aacute;cil que usar gcc), aseg&amp;uacute;rese de actualizar al &amp;uacute;ltimo nivel de parche disponible. Actualmente:</target>
        </trans-unit>
        <trans-unit id="af7b9b33fafaf83f9420acb89bb16618e9123d52" translate="yes" xml:space="preserve">
          <source>At the risk of stating the obvious, modules are intended to be modular. A Perl developer should be able to use modules to put together the building blocks of their application. However, it's important that the blocks are the right shape, and that the developer shouldn't have to use a big block when all they need is a small one.</source>
          <target state="translated">A riesgo de afirmar lo obvio,los módulos están pensados para ser modulares.Un desarrollador de Perl debe ser capaz de utilizar los módulos para armar los bloques de construcción de su aplicación.Sin embargo,es importante que los bloques tengan la forma correcta,y que el desarrollador no tenga que usar un bloque grande cuando todo lo que necesita es uno pequeño.</target>
        </trans-unit>
        <trans-unit id="d2c548d72452435d78a5e713661472ad87fa3347" translate="yes" xml:space="preserve">
          <source>At the time of this writing (2009-03) there are three YAML implementations working: YAML, YAML::Syck, and YAML::XS. The latter two are faster but need a C compiler installed on your system. There may be more alternative YAML conforming modules. When I tried two other players, YAML::Tiny and YAML::Perl, they seemed not powerful enough to work with CPAN.pm. This may have changed in the meantime.</source>
          <target state="translated">En el momento de escribir este informe (2009-03)hay tres implementaciones de YAML funcionando:YAML,YAML::Syck,y YAML::XS.Las dos últimas son más rápidas pero necesitan un compilador C instalado en su sistema.Puede haber más módulos alternativos conformes a YAML.Cuando probé otros dos reproductores,YAML::Tiny y YAML::Perl,no parecían ser lo suficientemente potentes para trabajar con CPAN.pm.Esto puede haber cambiado mientras tanto.</target>
        </trans-unit>
        <trans-unit id="7ea634c02baa48b31e81ed3a00831f7dcbb2e678" translate="yes" xml:space="preserve">
          <source>At the time of this writing (June 2002), there is a known bug in the Tru64 libc printing of long doubles when not using &quot;e&quot; notation. The values are correct and usable, but you only get a limited number of digits displayed unless you force the issue by using &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;
&quot;%.33e&quot;,$num&lt;/code&gt; or the like. For Tru64 versions V5.0A through V5.1A, a patch is expected sometime after perl 5.8.0 is released. If your libc has not yet been patched, you'll get a warning from Configure when selecting long doubles.</source>
          <target state="translated">En el momento de escribir este art&amp;iacute;culo (junio de 2002), existe un error conocido en la impresi&amp;oacute;n de la libc Tru64 de dobles largos cuando no se usa la notaci&amp;oacute;n &quot;e&quot;. Los valores son correctos y utilizables, pero solo se muestra un n&amp;uacute;mero limitado de d&amp;iacute;gitos a menos que fuerce el problema usando &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%.33e&quot;,$num&lt;/code&gt; o similar. Para las versiones de Tru64 V5.0A a V5.1A, se espera un parche en alg&amp;uacute;n momento despu&amp;eacute;s del lanzamiento de perl 5.8.0. Si su libc a&amp;uacute;n no ha sido parcheada, recibir&amp;aacute; una advertencia de Configurar cuando seleccione dobles largos.</target>
        </trans-unit>
        <trans-unit id="1867a801fe6f9af5a7aceadb824f2be69014eb61" translate="yes" xml:space="preserve">
          <source>At the time of this writing, Perl 5.18.0 is considered to be well-hardened against algorithmic complexity attacks on its hash implementation. This is largely owed to the following measures mitigate attacks:</source>
          <target state="translated">En el momento de redactar el presente documento,se considera que Perl 5.18.0 está bien endurecido contra los ataques de complejidad algorítmica en su implementación de hachís.Esto se debe en gran medida a las siguientes medidas para mitigar los ataques:</target>
        </trans-unit>
        <trans-unit id="8a33c676d1f79e763827316ea86000a157f0da7a" translate="yes" xml:space="preserve">
          <source>At the time of very final cleanup, sv_free_arenas() is called from perl_destruct() to physically free all the arenas allocated since the start of the interpreter.</source>
          <target state="translated">En el momento de la limpieza final,se llama a sv_free_arenas()desde perl_destruct()para liberar físicamente todas las arenas asignadas desde el inicio del intérprete.</target>
        </trans-unit>
        <trans-unit id="4ad7685293e30733157e0b0115df9c2bbc818321" translate="yes" xml:space="preserve">
          <source>At the time that f is created, it can't capture the current &quot;a&quot; sub, since the anonymous subroutine hasn't been created yet. Conversely, the following won't give a warning since the anonymous subroutine has by now been created and is live:</source>
          <target state="translated">En el momento en que se crea f,no puede capturar la actual subrutina &quot;a&quot;,ya que la subrutina anónima aún no ha sido creada.Por el contrario,lo siguiente no dará una advertencia ya que la subrutina anónima ya ha sido creada y está en vivo:</target>
        </trans-unit>
        <trans-unit id="c7f753fb79bacf696f44e6edc3ce403746b9d93b" translate="yes" xml:space="preserve">
          <source>At the time that f is created, it can't capture the current value of $a, since the anonymous subroutine hasn't been created yet. Conversely, the following won't give a warning since the anonymous subroutine has by now been created and is live:</source>
          <target state="translated">En el momento en que se crea f,no puede capturar el valor actual de $a,ya que la subrutina anónima aún no ha sido creada.Por el contrario,lo siguiente no dará una advertencia ya que la subrutina anónima ya ha sido creada y está activa:</target>
        </trans-unit>
        <trans-unit id="9d72f28fef349b76a0adf7f5f7156e5e3f38d89f" translate="yes" xml:space="preserve">
          <source>At the time this document was last updated, Cygwin 1.7.16 was current.</source>
          <target state="translated">En el momento de la última actualización de este documento,Cygwin 1.7.16 estaba vigente.</target>
        </trans-unit>
        <trans-unit id="568132008f8ee29811084c20ba8f801b1aedb463" translate="yes" xml:space="preserve">
          <source>At the very least, this is useful to see what the SelfLoader thinks are stubs - in order to ensure future versions of the SelfStubber remain in step with the SelfLoader, the SelfStubber actually uses the SelfLoader to determine which stubs are needed.</source>
          <target state="translated">Al menos,esto es útil para ver lo que el autocargador piensa que son los talones-para asegurar que las futuras versiones del autocargador se mantengan en sintonía con el autocargador,el autocargador utiliza realmente el autocargador para determinar qué talones se necesitan.</target>
        </trans-unit>
        <trans-unit id="4c88d3fd177dc36a169a0f390f88ed358e376c27" translate="yes" xml:space="preserve">
          <source>At the very minimum, any subclass will need to provide its own &lt;code&gt;new()&lt;/code&gt; and can store additional hash keys in the object. There are also some package globals that must be defined, e.g.:</source>
          <target state="translated">Como m&amp;iacute;nimo, cualquier subclase deber&amp;aacute; proporcionar su propio &lt;code&gt;new()&lt;/code&gt; y puede almacenar claves hash adicionales en el objeto. Tambi&amp;eacute;n hay algunos paquetes globales que deben definirse, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="edcf8fa241edee8ba6be389a9320a43680a858f9" translate="yes" xml:space="preserve">
          <source>At this point, if you're using the</source>
          <target state="translated">En este punto,si estás usando el</target>
        </trans-unit>
        <trans-unit id="5a6511c6f50957ea6c619917499bccc60b76c492" translate="yes" xml:space="preserve">
          <source>At this point, we have all the basic regexp concepts covered, so let's give a more involved example of a regular expression. We will build a regexp that matches numbers.</source>
          <target state="translated">En este punto,tenemos todos los conceptos básicos de regexp cubiertos,por lo que vamos a dar un ejemplo más involucrado de una expresión regular.Construiremos un regexp que coincida con los números.</target>
        </trans-unit>
        <trans-unit id="370a5cf660692a42903691231af5dc8e0071bc25" translate="yes" xml:space="preserve">
          <source>At this point, xsubpp is doing very little work - the differences between Mytest.xs and Mytest.c are minimal.</source>
          <target state="translated">En este momento,xsubpp está haciendo muy poco trabajo-las diferencias entre Mytest.xs y Mytest.c son mínimas.</target>
        </trans-unit>
        <trans-unit id="6e93ae94dda2105286d8d2c3c0189888d8aa45b7" translate="yes" xml:space="preserve">
          <source>At time of writing, &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; values are of two types: either the name of a Pod page like &lt;code&gt;L&amp;lt;Foo::Bar&amp;gt;&lt;/code&gt; (which might be a real Perl module or program in an @INC / PATH directory, or a .pod file in those places); or the name of a Unix man page, like &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt; . In theory, &lt;code&gt;L&amp;lt;chmod&amp;gt;&lt;/code&gt; in ambiguous between a Pod page called &quot;chmod&quot;, or the Unix man page &quot;chmod&quot; (in whatever man-section). However, the presence of a string in parens, as in &quot;crontab(5)&quot;, is sufficient to signal that what is being discussed is not a Pod page, and so is presumably a Unix man page. The distinction is of no importance to many Pod processors, but some processors that render to hypertext formats may need to distinguish them in order to know how to render a given &lt;code&gt;L&amp;lt;foo&amp;gt;&lt;/code&gt; code.</source>
          <target state="translated">En el momento de escribir este art&amp;iacute;culo, los valores de &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; son de dos tipos: el nombre de una p&amp;aacute;gina Pod como &lt;code&gt;L&amp;lt;Foo::Bar&amp;gt;&lt;/code&gt; (que puede ser un m&amp;oacute;dulo o programa Perl real en un directorio @INC / PATH, o un archivo .pod en esos lugares); o el nombre de una p&amp;aacute;gina de manual de Unix, como &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt; . En teor&amp;iacute;a, &lt;code&gt;L&amp;lt;chmod&amp;gt;&lt;/code&gt; ambiguo entre una p&amp;aacute;gina Pod llamada &quot;chmod&quot; o la p&amp;aacute;gina man de Unix &quot;chmod&quot; (en cualquier secci&amp;oacute;n man). Sin embargo, la presencia de una cadena en parens, como en &quot;crontab (5)&quot;, es suficiente para se&amp;ntilde;alar que lo que se est&amp;aacute; discutiendo no es una p&amp;aacute;gina Pod, y por tanto, presumiblemente es una p&amp;aacute;gina man de Unix. La distinci&amp;oacute;n no tiene importancia para muchos procesadores Pod,pero algunos procesadores que renderizan en formatos de hipertexto pueden necesitar distinguirlos para saber c&amp;oacute;mo renderizar un determinado &lt;code&gt;L&amp;lt;foo&amp;gt;&lt;/code&gt; C&amp;oacute;digo L &amp;lt;foo&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="d759da54d18d185bb5ccfc037b889a6ccc296532" translate="yes" xml:space="preserve">
          <source>Attach the shared memory segment identified by ID to the address space of the calling process. See &lt;a href=&quot;http://search.cpan.org/perldoc/shmat&quot;&gt;shmat&lt;/a&gt;.</source>
          <target state="translated">Adjunte el segmento de memoria compartida identificado por ID al espacio de direcciones del proceso de llamada. Ver &lt;a href=&quot;http://search.cpan.org/perldoc/shmat&quot;&gt;shmat&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="225d31a7a030cd02427cb0b7456aa1f815b2914d" translate="yes" xml:space="preserve">
          <source>Attaching &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; to arrays is permissible but has no effect.</source>
          <target state="translated">Se &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; adjuntar PERL_MAGIC_uvar a matrices, pero no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="d423c0cfec188bd6ee98e700b49e9beb58a1ac55" translate="yes" xml:space="preserve">
          <source>Attempt SASL authentication.</source>
          <target state="translated">Intenta la autentificación del SASL.</target>
        </trans-unit>
        <trans-unit id="a57d83a2b0e335a567209ea75d9a6f7c18c72eb5" translate="yes" xml:space="preserve">
          <source>Attempt SASL authentication. Requires Authen::SASL module.</source>
          <target state="translated">Intenta la autentificación del SASL.Requiere Authen::Módulo SASL.</target>
        </trans-unit>
        <trans-unit id="0bfa31d2d4671313bd0af54f4bb1d33e8b3d1352" translate="yes" xml:space="preserve">
          <source>Attempt to change directory to the directory given in &lt;code&gt;$dir&lt;/code&gt; . If &lt;code&gt;$dir&lt;/code&gt; is &lt;code&gt;&quot;..&quot;&lt;/code&gt; , the FTP &lt;code&gt;CDUP&lt;/code&gt; command is used to attempt to move up one directory. If no directory is given then an attempt is made to change the directory to the root directory.</source>
          <target state="translated">Intente cambiar el directorio al directorio dado en &lt;code&gt;$dir&lt;/code&gt; . Si &lt;code&gt;$dir&lt;/code&gt; es &lt;code&gt;&quot;..&quot;&lt;/code&gt; , el comando FTP &lt;code&gt;CDUP&lt;/code&gt; se utiliza para intentar subir un directorio. Si no se proporciona ning&amp;uacute;n directorio, se intentar&amp;aacute; cambiar el directorio al directorio ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="f1a553fb01152c680db2f1ac04b66addb3e1a32b" translate="yes" xml:space="preserve">
          <source>Attempt to convert an absolute file specification to a relative specification.</source>
          <target state="translated">Intenta convertir una especificación de archivo absoluta en una especificación relativa.</target>
        </trans-unit>
        <trans-unit id="c6a6104d31483a82798cc43a56c3040f5b0e5915" translate="yes" xml:space="preserve">
          <source>Attempt to destroy all objects not yet freed.</source>
          <target state="translated">Intenta destruir todos los objetos que aún no han sido liberados.</target>
        </trans-unit>
        <trans-unit id="fe99a6ee8775c38ae61fdc7b8491eb15dc3ce181" translate="yes" xml:space="preserve">
          <source>Attempt to evaluate the current host's internet name and domain</source>
          <target state="translated">Intentar evaluar el nombre y el dominio de Internet del actual anfitrión</target>
        </trans-unit>
        <trans-unit id="078cb982d4d92298b47355c08e74e2f224c181c7" translate="yes" xml:space="preserve">
          <source>Attempt to print summary information if run is interrupted by SIGINT (Ctrl-C).</source>
          <target state="translated">Intente imprimir información resumida si la ejecución es interrumpida por el SIGINT (Ctrl-C).</target>
        </trans-unit>
        <trans-unit id="b914600bb82ac0ae87b3e9ab97d2d1c2f3efb3a8" translate="yes" xml:space="preserve">
          <source>Attempt to produce color output.</source>
          <target state="translated">Intenta producir una salida de color.</target>
        </trans-unit>
        <trans-unit id="efb3613b13587fe1f93cf60bf899f24390374124" translate="yes" xml:space="preserve">
          <source>Attempt to read &lt;code&gt;$length&lt;/code&gt; bytes of uncompressed data into &lt;code&gt;$buffer&lt;/code&gt; .</source>
          <target state="translated">Intente leer bytes de &lt;code&gt;$length&lt;/code&gt; de datos sin comprimir en &lt;code&gt;$buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b92f951c7fd86ee7f7ec9db2ae7b702bd512a11" translate="yes" xml:space="preserve">
          <source>Attempting to inherit from yourself generates a warning.</source>
          <target state="translated">Intentar heredar de ti mismo genera una advertencia.</target>
        </trans-unit>
        <trans-unit id="940068c4484917346e58cd849ab63ab658a04374" translate="yes" xml:space="preserve">
          <source>Attempting to pack the special floating point values &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; (infinity, also in negative, and not-a-number) into packed integer values (like &lt;code&gt;&quot;L&quot;&lt;/code&gt; ) is a fatal error. The reason for this is that there simply isn't any sensible mapping for these special values into integers.</source>
          <target state="translated">Intentar empaquetar los valores especiales de coma flotante &lt;code&gt;Inf&lt;/code&gt; y &lt;code&gt;NaN&lt;/code&gt; (infinito, tambi&amp;eacute;n en negativo, y no un n&amp;uacute;mero) en valores enteros empaquetados (como &lt;code&gt;&quot;L&quot;&lt;/code&gt; ) es un error fatal. La raz&amp;oacute;n de esto es que simplemente no hay ning&amp;uacute;n mapeo sensato para estos valores especiales en enteros.</target>
        </trans-unit>
        <trans-unit id="6015d4f519177c33ba06ab08404701540b4f2048" translate="yes" xml:space="preserve">
          <source>Attempting to reopen a database without closing it.</source>
          <target state="translated">Intentando reabrir una base de datos sin cerrarla.</target>
        </trans-unit>
        <trans-unit id="0bedf74043c203b86c1b5363d305f57a4b0c5fcb" translate="yes" xml:space="preserve">
          <source>Attempts several methods of getting the system hostname and then caches the result. It tries the first available of the C library's gethostname(), &lt;code&gt;`$Config{aphostname}`&lt;/code&gt; , uname(2), &lt;code&gt;&lt;a href=&quot;../functions/syscall&quot;&gt;syscall(SYS_gethostname)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;`hostname`&lt;/code&gt; , &lt;code&gt;`uname -n`&lt;/code&gt; , and the file</source>
          <target state="translated">Intenta varios m&amp;eacute;todos para obtener el nombre de host del sistema y luego almacena en cach&amp;eacute; el resultado. Prueba el primero disponible de la biblioteca C gethostname (), &lt;code&gt;`$Config{aphostname}`&lt;/code&gt; , uname (2), &lt;code&gt;&lt;a href=&quot;../functions/syscall&quot;&gt;syscall(SYS_gethostname)&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;`hostname`&lt;/code&gt; , &lt;code&gt;`uname -n`&lt;/code&gt; , y el archivo</target>
        </trans-unit>
        <trans-unit id="f998d3cd38777ee213006cd15fb0e0f6d2ddc7f7" translate="yes" xml:space="preserve">
          <source>Attempts to connect to a remote socket, just like connect(2). Returns true if it succeeded, false otherwise. NAME should be a packed address of the appropriate type for the socket. See the examples in &lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">Intenta conectarse a un enchufe remoto, como connect (2). Devuelve verdadero si tuvo &amp;eacute;xito, falso en caso contrario. NAME debe ser una direcci&amp;oacute;n empaquetada del tipo apropiado para el socket. Consulte los ejemplos en &lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: comunicaci&amp;oacute;n cliente / servidor en perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64769a075153327a39fd4f2723d3853f980fe471" translate="yes" xml:space="preserve">
          <source>Attempts to connect to a remote socket, just like connect(2). Returns true if it succeeded, false otherwise. NAME should be a packed address of the appropriate type for the socket. See the examples in &lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">Intenta conectarse a un enchufe remoto, como connect (2). Devuelve verdadero si tuvo &amp;eacute;xito, falso en caso contrario. NAME debe ser una direcci&amp;oacute;n empaquetada del tipo apropiado para el socket. Consulte los ejemplos en &lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: comunicaci&amp;oacute;n cliente / servidor en perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a0ddb935c0376b494edd76deb21d2e9aa4a1612" translate="yes" xml:space="preserve">
          <source>Attempts to convert in-place the octet sequence encoded as</source>
          <target state="translated">Intenta convertir en el lugar la secuencia de octetos codificada como</target>
        </trans-unit>
        <trans-unit id="bd9b4f39078d108026008c73a3d153cb14bae4bd" translate="yes" xml:space="preserve">
          <source>Attempts to convert the PV of an SV from characters to bytes. If the PV contains a character that cannot fit in a byte, this conversion will fail; in this case, either returns false or, if &lt;code&gt;fail_ok&lt;/code&gt; is not true, croaks.</source>
          <target state="translated">Intenta convertir el PV de un SV de caracteres a bytes. Si el PV contiene un car&amp;aacute;cter que no cabe en un byte, esta conversi&amp;oacute;n fallar&amp;aacute;; en este caso, devuelve falso o, si &lt;code&gt;fail_ok&lt;/code&gt; no es verdadero, croa.</target>
        </trans-unit>
        <trans-unit id="64d7ec66819a9007136707554fdc8dbbef9567aa" translate="yes" xml:space="preserve">
          <source>Attempts to determine if a given host is outside your firewall. Possible return values are.</source>
          <target state="translated">Intenta determinar si un determinado anfitrión está fuera de su cortafuegos.Los posibles valores de retorno son.</target>
        </trans-unit>
        <trans-unit id="015e99d4e0b5f5661a89b0c851595de01de6cc85" translate="yes" xml:space="preserve">
          <source>Attempts to read LENGTH</source>
          <target state="translated">Intenta leer LONGITUD</target>
        </trans-unit>
        <trans-unit id="623d8fbf82dc2fdc9694f6bbe91f1257bb25f69a" translate="yes" xml:space="preserve">
          <source>Attempts to read LENGTH bytes of data into variable SCALAR from the specified FILEHANDLE, using the read(2). It bypasses buffered IO, so mixing this with other kinds of reads, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; can cause confusion because the perlio or stdio layers usually buffers data. Returns the number of bytes actually read, &lt;code&gt;0&lt;/code&gt; at end of file, or undef if there was an error (in the latter case &lt;code&gt;$!&lt;/code&gt; is also set). SCALAR will be grown or shrunk so that the last byte actually read is the last byte of the scalar after the read.</source>
          <target state="translated">Intenta leer LENGTH bytes de datos en la variable SCALAR del FILEHANDLE especificado, utilizando read (2). Que no pasa por tamponada IO, por lo que esta mezcla con otros tipos de lecturas, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; , o &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; puede causar confusi&amp;oacute;n porque el perlio o capas stdio generalmente b&amp;uacute;fer de datos. Devuelve el n&amp;uacute;mero de bytes realmente le&amp;iacute;dos, &lt;code&gt;0&lt;/code&gt; al final del archivo o indef si hubo un error (en el &amp;uacute;ltimo caso, &lt;code&gt;$!&lt;/code&gt; Tambi&amp;eacute;n est&amp;aacute; configurado). SCALAR aumentar&amp;aacute; o reducir&amp;aacute; de modo que el &amp;uacute;ltimo byte realmente le&amp;iacute;do sea el &amp;uacute;ltimo byte del escalar despu&amp;eacute;s de la lectura.</target>
        </trans-unit>
        <trans-unit id="321c64867646f812228d15e7d459f8fc1a5c1183" translate="yes" xml:space="preserve">
          <source>Attempts to read LENGTH bytes of data into variable SCALAR from the specified FILEHANDLE, using the read(2). It bypasses buffered IO, so mixing this with other kinds of reads, &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; can cause confusion because the perlio or stdio layers usually buffers data. Returns the number of bytes actually read, &lt;code&gt;0&lt;/code&gt; at end of file, or undef if there was an error (in the latter case &lt;code&gt;$!&lt;/code&gt; is also set). SCALAR will be grown or shrunk so that the last byte actually read is the last byte of the scalar after the read.</source>
          <target state="translated">Intenta leer LENGTH bytes de datos en la variable SCALAR del FILEHANDLE especificado, utilizando read (2). Que no pasa por tamponada IO, por lo que esta mezcla con otros tipos de lecturas, &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; , o &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; puede causar confusi&amp;oacute;n porque el perlio o capas stdio generalmente b&amp;uacute;fer de datos. Devuelve el n&amp;uacute;mero de bytes realmente le&amp;iacute;dos, &lt;code&gt;0&lt;/code&gt; al final del archivo o indef si hubo un error (en el &amp;uacute;ltimo caso, &lt;code&gt;$!&lt;/code&gt; Tambi&amp;eacute;n est&amp;aacute; configurado). SCALAR aumentar&amp;aacute; o reducir&amp;aacute; de modo que el &amp;uacute;ltimo byte realmente le&amp;iacute;do sea el &amp;uacute;ltimo byte del escalar despu&amp;eacute;s de la lectura.</target>
        </trans-unit>
        <trans-unit id="056c7c4b49d09bfb10b608aa560ae7f329c94639" translate="yes" xml:space="preserve">
          <source>Attempts to write LENGTH bytes of data from variable SCALAR to the specified FILEHANDLE, using write(2). If LENGTH is not specified, writes whole SCALAR. It bypasses buffered IO, so mixing this with reads (other than &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread())&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; may cause confusion because the perlio and stdio layers usually buffer data. Returns the number of bytes actually written, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if there was an error (in this case the errno variable &lt;code&gt;$!&lt;/code&gt; is also set). If the LENGTH is greater than the data available in the SCALAR after the OFFSET, only as much data as is available will be written.</source>
          <target state="translated">Intenta escribir LENGTH bytes de datos de la variable ESCALAR al FILEHANDLE especificado, utilizando write (2). Si no se especifica LENGTH, escribe SCALAR completo. Omite IO almacenado en b&amp;uacute;fer, por lo que mezclar esto con lecturas (que no sean &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread())&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; puede causar confusi&amp;oacute;n porque las capas perlio y stdio generalmente almacenan datos en b&amp;uacute;fer. Devuelve el n&amp;uacute;mero de bytes realmente escritos, o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si hubo un error (en este caso, tambi&amp;eacute;n se establece la variable errno &lt;code&gt;$!&lt;/code&gt; ). Si LENGTH es mayor que los datos disponibles en el ESCALAR despu&amp;eacute;s del OFFSET, solo se escribir&amp;aacute;n los datos disponibles.</target>
        </trans-unit>
        <trans-unit id="bf935c85345c3169ffc0b395c956f17c45a9fe82" translate="yes" xml:space="preserve">
          <source>Attempts to write LENGTH bytes of data from variable SCALAR to the specified FILEHANDLE, using write(2). If LENGTH is not specified, writes whole SCALAR. It bypasses buffered IO, so mixing this with reads (other than &lt;code&gt;&lt;a href=&quot;sysread&quot;&gt;sysread())&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; may cause confusion because the perlio and stdio layers usually buffer data. Returns the number of bytes actually written, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if there was an error (in this case the errno variable &lt;code&gt;$!&lt;/code&gt; is also set). If the LENGTH is greater than the data available in the SCALAR after the OFFSET, only as much data as is available will be written.</source>
          <target state="translated">Intenta escribir LENGTH bytes de datos de la variable ESCALAR al FILEHANDLE especificado, utilizando write (2). Si no se especifica LENGTH, escribe SCALAR completo. Omite IO almacenado en b&amp;uacute;fer, por lo que mezclar esto con lecturas (que no sean &lt;code&gt;&lt;a href=&quot;sysread&quot;&gt;sysread())&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; puede causar confusi&amp;oacute;n porque las capas perlio y stdio generalmente almacenan datos en b&amp;uacute;fer. Devuelve el n&amp;uacute;mero de bytes realmente escritos, o &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si hubo un error (en este caso, tambi&amp;eacute;n se establece la variable errno &lt;code&gt;$!&lt;/code&gt; ). Si LENGTH es mayor que los datos disponibles en el ESCALAR despu&amp;eacute;s del OFFSET, solo se escribir&amp;aacute;n los datos disponibles.</target>
        </trans-unit>
        <trans-unit id="cf2ad2263d9deded93137fc6e93270ce22633fb0" translate="yes" xml:space="preserve">
          <source>Attempts word completion. Cannot be changed.</source>
          <target state="translated">Intenta completar la palabra.No se puede cambiar.</target>
        </trans-unit>
        <trans-unit id="402319da749127eab7373ce69945d35452ea82aa" translate="yes" xml:space="preserve">
          <source>Attribute::Handlers</source>
          <target state="translated">Attribute::Handlers</target>
        </trans-unit>
        <trans-unit id="ab429cb97f17abf9bda7af427a4ab75a270a8eee" translate="yes" xml:space="preserve">
          <source>Attribute::Handlers - Simpler definition of attribute handlers</source>
          <target state="translated">Atributo::Manejadores-Definición más simple de los manejadores de atributos</target>
        </trans-unit>
        <trans-unit id="1c8c525e5ee86dfc71e9832b4cad7c5124dad809" translate="yes" xml:space="preserve">
          <source>Attribute::Handlers makes strenuous efforts to convert the data argument (&lt;code&gt;$_[4]&lt;/code&gt; ) to a usable form before passing it to the handler (but see &lt;a href=&quot;#Non-interpretive-attribute-handlers&quot;&gt;Non-interpretive attribute handlers&lt;/a&gt;). If those efforts succeed, the interpreted data is passed in an array reference; if they fail, the raw data is passed as a string. For example, all of these:</source>
          <target state="translated">Attribute :: Handlers realiza grandes esfuerzos para convertir el argumento de datos ( &lt;code&gt;$_[4]&lt;/code&gt; ) a una forma utilizable antes de pasarlo al controlador (pero consulte &lt;a href=&quot;#Non-interpretive-attribute-handlers&quot;&gt;Controladores de atributos no interpretativos&lt;/a&gt; ). Si esos esfuerzos tienen &amp;eacute;xito, los datos interpretados se pasan en una referencia de matriz; si fallan, los datos brutos se pasan como una cadena. Por ejemplo, todos estos:</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="7096373d5156eb6bd0032a6f3f3f6f2306181c31" translate="yes" xml:space="preserve">
          <source>Attributes are often stored in the object itself. For example, if the object is an anonymous hash, we can store the attribute values in the hash using the attribute name as the key.</source>
          <target state="translated">Los atributos se almacenan a menudo en el propio objeto.Por ejemplo,si el objeto es un hash anónimo,podemos almacenar los valores de los atributos en el hash utilizando el nombre del atributo como clave.</target>
        </trans-unit>
        <trans-unit id="1ec0e5f9458a3d0b7666b49e580f1e144a9409de" translate="yes" xml:space="preserve">
          <source>Attributes are typically defined as read-only or read-write. Read-only attributes can only be set when the object is first created, while read-write attributes can be altered at any time.</source>
          <target state="translated">Los atributos se definen típicamente como de sólo lectura o de lectura-escritura.Los atributos de sólo lectura sólo pueden establecerse cuando se crea el objeto por primera vez,mientras que los atributos de lectura-escritura pueden ser alterados en cualquier momento.</target>
        </trans-unit>
        <trans-unit id="e7c79e72c9cbf686713260fcf1aae8a2f9a1a49e" translate="yes" xml:space="preserve">
          <source>Attributes as &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; interfaces</source>
          <target state="translated">Atributos como interfaces de &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e1c2a2200f4dc51bc987e61b1d0f256256aa8d5" translate="yes" xml:space="preserve">
          <source>Attributes as tie interfaces</source>
          <target state="translated">Atributos como interfaces de enlace</target>
        </trans-unit>
        <trans-unit id="5d582f3d2d463609c927f60d4eb884597e89efea" translate="yes" xml:space="preserve">
          <source>Attributes make an excellent and intuitive interface through which to tie variables. For example:</source>
          <target state="translated">Los atributos constituyen una excelente e intuitiva interfaz a través de la cual se vinculan las variables.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="508a5aa4d3d540c30ef29d403ada44bf44ff7142" translate="yes" xml:space="preserve">
          <source>Attributes, once set, last until they are unset (by printing the attribute &lt;code&gt;clear&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt;). Be careful to do this, or otherwise your attribute will last after your script is done running, and people get very annoyed at having their prompt and typing changed to weird colors.</source>
          <target state="translated">Los atributos, una vez establecidos, duran hasta que se desarman (imprimiendo el atributo &lt;code&gt;clear&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; ). Tenga cuidado al hacer esto, o de lo contrario su atributo perdurar&amp;aacute; despu&amp;eacute;s de que su script termine de ejecutarse, y la gente se molesta mucho al ver que su mensaje y escritura cambian a colores extra&amp;ntilde;os.</target>
        </trans-unit>
        <trans-unit id="1874e0336adde0a00ba3a60dae1dc775409600bd" translate="yes" xml:space="preserve">
          <source>Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;</source>
          <target state="translated">Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="21c24cd01488e77938199d2e43d1c1e07248317d" translate="yes" xml:space="preserve">
          <source>Authenticate with the server identifying as &lt;code&gt;USER&lt;/code&gt; with password &lt;code&gt;PASS&lt;/code&gt; . Similar to &lt;a href=&quot;#login&quot;&gt;login&lt;/a&gt;, but the password is not sent in clear text.</source>
          <target state="translated">Autenticarse con el servidor identific&amp;aacute;ndose como &lt;code&gt;USER&lt;/code&gt; con contrase&amp;ntilde;a &lt;code&gt;PASS&lt;/code&gt; . Similar al &lt;a href=&quot;#login&quot;&gt;inicio&lt;/a&gt; de sesi&amp;oacute;n , pero la contrase&amp;ntilde;a no se env&amp;iacute;a en texto sin cifrar.</target>
        </trans-unit>
        <trans-unit id="507f24ee32e393058ec2717e7ff642ddf8b1dd65" translate="yes" xml:space="preserve">
          <source>Authenticates to the server (using the original AUTHINFO USER / AUTHINFO PASS form, defined in RFC2980) using the supplied username and password. Please note that the password is sent in clear text to the server. This command should not be used with valuable passwords unless the connection to the server is somehow protected.</source>
          <target state="translated">Se autentica en el servidor (usando el formulario original AUTHINFO USER/AUTHINFO PASS,definido en RFC2980)usando el nombre de usuario y la contraseña suministrados.Tenga en cuenta que la contraseña se envía en texto claro al servidor.Este comando no debe ser usado con contraseñas valiosas a menos que la conexión con el servidor esté protegida de alguna manera.</target>
        </trans-unit>
        <trans-unit id="6f9130bcae1a2dee757ab825f2972f22149b8d0e" translate="yes" xml:space="preserve">
          <source>Authenticates to the server (using the proposed NNTP V2 AUTHINFO SIMPLE form, defined and deprecated in RFC2980) using the supplied username and password. As with &lt;a href=&quot;#authinfo&quot;&gt;authinfo&lt;/a&gt; the password is sent in clear text.</source>
          <target state="translated">Se autentica en el servidor (utilizando el formulario NNTP V2 AUTHINFO SIMPLE propuesto, definido y obsoleto en RFC2980) utilizando el nombre de usuario y la contrase&amp;ntilde;a proporcionados. Al igual que con &lt;a href=&quot;#authinfo&quot;&gt;authinfo,&lt;/a&gt; la contrase&amp;ntilde;a se env&amp;iacute;a en texto sin cifrar .</target>
        </trans-unit>
        <trans-unit id="561e59b47284192d792d6315e83a8df1bb4623e9" translate="yes" xml:space="preserve">
          <source>Authentication, Security, and Encryption</source>
          <target state="translated">Autenticación,Seguridad y Cifrado</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Author</target>
        </trans-unit>
        <trans-unit id="fd140dad60fa77aa1adfbcd64d1e9ea4bc89ff62" translate="yes" xml:space="preserve">
          <source>Author and Maintainer: The Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</source>
          <target state="translated">Autor y encargado: The Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e41e820954a6b297983a7b6986adfdc7c083ed60" translate="yes" xml:space="preserve">
          <source>Author and Modification History</source>
          <target state="translated">Autor e historial de modificaciones</target>
        </trans-unit>
        <trans-unit id="dc4e711f40af1fee4327bcbd34d91d11e1b38a81" translate="yes" xml:space="preserve">
          <source>Author of this software makes no claim whatsoever about suitability, reliability, edability, editability or usability of this product, and should not be kept liable for any damage resulting from the use of it. If you can use it, you are in luck, if not, I should not be kept responsible. Keep a handy copy of your backup tape at hand.</source>
          <target state="translated">El autor de este software no hace ninguna reclamación sobre la idoneidad,fiabilidad,capacidad de edición o uso de este producto,y no debe ser considerado responsable de ningún daño resultante del uso del mismo.Si puede usarlo,está de suerte,si no,no debería ser responsable.Tenga a mano una copia de su cinta de seguridad.</target>
        </trans-unit>
        <trans-unit id="75a1f723a2c00ab3f9e540ebe5e3b630e531e2c3" translate="yes" xml:space="preserve">
          <source>Author: Mark Jason Dominus, Plover Systems (&lt;code&gt;mjd-perl-&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;+@plover.com&lt;/code&gt; )</source>
          <target state="translated">Autor: Mark Jason Dominus, Plover Systems ( &lt;code&gt;mjd-perl-&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;+@plover.com&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">Authors</target>
        </trans-unit>
        <trans-unit id="4e4bc3d81e572248f45b55f87eb6a695cc5d7e17" translate="yes" xml:space="preserve">
          <source>Authors must not nest L&amp;lt;...&amp;gt; codes. For example, &quot;L&amp;lt;The L&amp;lt;Foo::Bar&amp;gt; man page&amp;gt;&quot; should be treated as an error.</source>
          <target state="translated">Los autores no deben anidar c&amp;oacute;digos L &amp;lt;...&amp;gt;. Por ejemplo, &quot;L &amp;lt;The L &amp;lt;Foo :: Bar&amp;gt; p&amp;aacute;gina man&amp;gt;&quot; debe tratarse como un error.</target>
        </trans-unit>
        <trans-unit id="9a1f2888146e0b82120ccf28bf4584779813130b" translate="yes" xml:space="preserve">
          <source>Authors of Pod formatters are reminded that &quot;=over&quot; ... &quot;=back&quot; may map to several different constructs in your output format. For example, in converting Pod to (X)HTML, it can map to any of &amp;lt;ul&amp;gt;...&amp;lt;/ul&amp;gt;, &amp;lt;ol&amp;gt;...&amp;lt;/ol&amp;gt;, &amp;lt;dl&amp;gt;...&amp;lt;/dl&amp;gt;, or &amp;lt;blockquote&amp;gt;...&amp;lt;/blockquote&amp;gt;. Similarly, &quot;=item&quot; can map to &amp;lt;li&amp;gt; or &amp;lt;dt&amp;gt;.</source>
          <target state="translated">Se recuerda a los autores de formateadores de pods que &quot;= over&quot; ... &quot;= back&quot; se puede asignar a varias construcciones diferentes en su formato de salida. Por ejemplo, al convertir Pod a (X) HTML, se puede asignar a cualquiera de &amp;lt;ul&amp;gt; ... &amp;lt;/ul&amp;gt;, &amp;lt;ol&amp;gt; ... &amp;lt;/ol&amp;gt;, &amp;lt;dl&amp;gt; ... &amp;lt;/dl&amp;gt; , o &amp;lt;blockquote&amp;gt; ... &amp;lt;/blockquote&amp;gt;. De manera similar, &quot;= item&quot; se puede asignar a &amp;lt;li&amp;gt; o &amp;lt;dt&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="80bad0a974c0d7ed8e69ae0a2451cf949509d806" translate="yes" xml:space="preserve">
          <source>Authors of Pod formatters should note that this construct:</source>
          <target state="translated">Los autores de los formateadores de Pod deben tener en cuenta que esta construcción:</target>
        </trans-unit>
        <trans-unit id="0772af8ca884a475bc6c000e8a2e7ecd3771d821" translate="yes" xml:space="preserve">
          <source>Authors of Pod formatters/processors should make every effort to avoid writing their own Pod parser. There are already several in CPAN, with a wide range of interface styles -- and one of them, Pod::Parser, comes with modern versions of Perl.</source>
          <target state="translated">Los autores de los formateadores/procesadores de Pod deben hacer todo lo posible para evitar escribir su propio analizador de Pod.Ya hay varios en el CPAN,con una amplia gama de estilos de interfaz --y uno de ellos,Pod::Parser,viene con versiones modernas de Perl.</target>
        </trans-unit>
        <trans-unit id="5f5a6b2c86d1c842fb78879cb9847a9b86de0e1d" translate="yes" xml:space="preserve">
          <source>Authors of formatter subclasses might find these methods useful to call on a parser object that you haven't started pulling tokens from yet:</source>
          <target state="translated">Los autores de subclases de formateo podrían encontrar estos métodos útiles para llamar a un objeto analizador del que aún no se han empezado a sacar fichas:</target>
        </trans-unit>
        <trans-unit id="ba749f31a8ceaa34419e1f1f52af7da1b1065181" translate="yes" xml:space="preserve">
          <source>Auto-decrement of the value in the SV, doing string to numeric conversion if necessary. Handles 'get' magic and operator overloading.</source>
          <target state="translated">Auto-decrecimiento del valor en el SV,haciendo conversión de cadena a numérica si es necesario.Maneja la magia y la sobrecarga del operador.</target>
        </trans-unit>
        <trans-unit id="cabef034701dc195b619657e11c47b3b4c7ed2cb" translate="yes" xml:space="preserve">
          <source>Auto-decrement of the value in the SV, doing string to numeric conversion if necessary. Handles operator overloading. Skips handling 'get' magic.</source>
          <target state="translated">Auto-decrecimiento del valor en el SV,haciendo conversión de cadena a numérica si es necesario.Maneja la sobrecarga del operador.Se salta el manejo de la magia 'get'.</target>
        </trans-unit>
        <trans-unit id="f8df54de50b8630f73dd7c3210d2ed53c7051734" translate="yes" xml:space="preserve">
          <source>Auto-increment and Auto-decrement</source>
          <target state="translated">Auto-incremento y auto-decrecimiento</target>
        </trans-unit>
        <trans-unit id="9c2549c4f8e7b5156ddcd16c47fe624753b70037" translate="yes" xml:space="preserve">
          <source>Auto-increment of the value in the SV, doing string to numeric conversion if necessary. Handles 'get' magic and operator overloading.</source>
          <target state="translated">Autoincremento del valor en el SV,haciendo conversión de cadena a numérica si es necesario.Maneja la magia y la sobrecarga del operador.</target>
        </trans-unit>
        <trans-unit id="11123412c221a7c2bf77f34ba93ea1498be1bd77" translate="yes" xml:space="preserve">
          <source>Auto-increment of the value in the SV, doing string to numeric conversion if necessary. Handles operator overloading. Skips handling 'get' magic.</source>
          <target state="translated">Autoincremento del valor en el SV,haciendo conversión de cadena a numérica si es necesario.Maneja la sobrecarga del operador.Se salta el manejo de la magia de 'get'.</target>
        </trans-unit>
        <trans-unit id="95b64723d9f40505396f5971cbc44d69372e59a7" translate="yes" xml:space="preserve">
          <source>Auto-upgrade</source>
          <target state="translated">Auto-upgrade</target>
        </trans-unit>
        <trans-unit id="57a4f42cae4d12771bda9f458a5b76498da8ce37" translate="yes" xml:space="preserve">
          <source>AutoLoader</source>
          <target state="translated">AutoLoader</target>
        </trans-unit>
        <trans-unit id="4bbd7ae289ef059e5890696f9cb149721a7b8e69" translate="yes" xml:space="preserve">
          <source>AutoLoader - load subroutines only on demand</source>
          <target state="translated">Autocargador-carga las subrutinas sólo a petición</target>
        </trans-unit>
        <trans-unit id="6851ab5ce9e022d9cc5797875048cf4a3f08af3e" translate="yes" xml:space="preserve">
          <source>AutoLoader may fail to find the autosplit files (or even find the wrong ones) in cases where &lt;code&gt;@INC&lt;/code&gt; contains relative paths, &lt;b&gt;and&lt;/b&gt; the program does &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Autocargador puede fallar al encontrar los archivos de divisi&amp;oacute;n autom&amp;aacute;tica (o incluso encontrar los incorrectos) en los casos en que &lt;code&gt;@INC&lt;/code&gt; contiene rutas relativas &lt;b&gt;y&lt;/b&gt; el programa hace &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a635037412af6ace383fa21d0d50db8f0393e57" translate="yes" xml:space="preserve">
          <source>AutoLoaders prior to Perl 5.002 had a slightly different interface. Any old modules which use &lt;b&gt;AutoLoader&lt;/b&gt; should be changed to the new calling style. Typically this just means changing a require to a use, adding the explicit &lt;code&gt;'AUTOLOAD'&lt;/code&gt; import if needed, and removing &lt;b&gt;AutoLoader&lt;/b&gt; from &lt;code&gt;@ISA&lt;/code&gt; .</source>
          <target state="translated">Los Autocargadores anteriores a Perl 5.002 ten&amp;iacute;an una interfaz ligeramente diferente. Cualquier m&amp;oacute;dulo antiguo que use &lt;b&gt;Autocargador&lt;/b&gt; debe cambiarse al nuevo estilo de llamada. Por lo general, esto solo significa cambiar un requisito por un uso, agregar la importaci&amp;oacute;n expl&amp;iacute;cita &lt;code&gt;'AUTOLOAD'&lt;/code&gt; si es necesario y eliminar el &lt;b&gt;Autocargador&lt;/b&gt; de &lt;code&gt;@ISA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56be52307d7f516628d0435d04dbf15ef2be8e1c" translate="yes" xml:space="preserve">
          <source>AutoSplit</source>
          <target state="translated">AutoSplit</target>
        </trans-unit>
        <trans-unit id="141ac9ea73e406af3a95ffd453d7845aea91bee3" translate="yes" xml:space="preserve">
          <source>AutoSplit - split a package for autoloading</source>
          <target state="translated">AutoSplit-dividir un paquete para autocargarlo</target>
        </trans-unit>
        <trans-unit id="68a652cb711d8eb8f8b2dadb0dc16bdffbba498d" translate="yes" xml:space="preserve">
          <source>Autocreating constants</source>
          <target state="translated">Constantes de autocreación</target>
        </trans-unit>
        <trans-unit id="52fe0335e51acfb62f3dfd3073b3227b5b8c4846" translate="yes" xml:space="preserve">
          <source>Autodeferring</source>
          <target state="translated">Autodeferring</target>
        </trans-unit>
        <trans-unit id="f3589c4e74b1463fb3c579cd588ce9598fdbe87e" translate="yes" xml:space="preserve">
          <source>Autodie uses a simple set of categories to group together similar built-ins. Requesting a category type (starting with a colon) will enable autodie for all built-ins beneath that category. For example, requesting &lt;code&gt;:file&lt;/code&gt; will enable autodie for &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Autodie utiliza un conjunto simple de categor&amp;iacute;as para agrupar elementos integrados similares. Solicitar un tipo de categor&amp;iacute;a (comenzando con dos puntos) habilitar&amp;aacute; el autodie para todos los elementos integrados debajo de esa categor&amp;iacute;a. Por ejemplo, al solicitar &lt;code&gt;:file&lt;/code&gt; habilitar&amp;aacute; autodie para &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f410fe9b046b8c8a478048e83efc2672d42d3c9c" translate="yes" xml:space="preserve">
          <source>Autodying &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; will generate an exception if &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; returns false with any other error.</source>
          <target state="translated">Autodying &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; generar&amp;aacute; una excepci&amp;oacute;n si &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; devuelve falso con cualquier otro error.</target>
        </trans-unit>
        <trans-unit id="3fa81ba949fafdad4688aed6d9380f82976ca9d7" translate="yes" xml:space="preserve">
          <source>Autoloading</source>
          <target state="translated">Autoloading</target>
        </trans-unit>
        <trans-unit id="a71f8461a563c747e56f2cb5fb124e64328506d5" translate="yes" xml:space="preserve">
          <source>Autoloading and package lexicals</source>
          <target state="translated">Autocargamento y léxicos de paquetes</target>
        </trans-unit>
        <trans-unit id="24023d5e4bccdad4a40c403d058e7c856f75ea71" translate="yes" xml:space="preserve">
          <source>Autoloading with XSUBs</source>
          <target state="translated">Autocargado con XSUBs</target>
        </trans-unit>
        <trans-unit id="ea5735f59ad896a38c6b806f8d8b02abba9762e7" translate="yes" xml:space="preserve">
          <source>Automatic binary installation</source>
          <target state="translated">Instalación binaria automática</target>
        </trans-unit>
        <trans-unit id="b890d9b67b4f885e928a5dbcadc3dec7cd34f3ad" translate="yes" xml:space="preserve">
          <source>Automatically generate XSUBs basing on function declarations in the header file. The package &lt;code&gt;C::Scan&lt;/code&gt; should be installed. If this option is specified, the name of the header file may look like &lt;code&gt;NAME1,NAME2&lt;/code&gt; . In this case NAME1 is used instead of the specified string, but XSUBs are emitted only for the declarations included from file NAME2.</source>
          <target state="translated">Genere autom&amp;aacute;ticamente XSUB bas&amp;aacute;ndose en declaraciones de funciones en el archivo de encabezado. Se debe instalar el paquete &lt;code&gt;C::Scan&lt;/code&gt; . Si se especifica esta opci&amp;oacute;n, el nombre del archivo de encabezado puede verse como &lt;code&gt;NAME1,NAME2&lt;/code&gt; . En este caso, se usa NAME1 en lugar de la cadena especificada, pero los XSUB se emiten solo para las declaraciones incluidas en el archivo NAME2.</target>
        </trans-unit>
        <trans-unit id="974a6c8e46a4b4db1ad3a13139d3950f13a09a91" translate="yes" xml:space="preserve">
          <source>Automatically provide support for the &lt;b&gt;--help&lt;/b&gt; and &lt;b&gt;-?&lt;/b&gt; options if the application did not specify a handler for this option itself.</source>
          <target state="translated">Proporcionar soporte autom&amp;aacute;ticamente para &lt;b&gt;--help&lt;/b&gt; y &lt;b&gt;-? &lt;/b&gt;opciones si la aplicaci&amp;oacute;n no especific&amp;oacute; un controlador para esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="909a15529b11dbad33480554d0c112bc56821029" translate="yes" xml:space="preserve">
          <source>Automatically provide support for the &lt;b&gt;--version&lt;/b&gt; option if the application did not specify a handler for this option itself.</source>
          <target state="translated">Proporcione autom&amp;aacute;ticamente soporte para la opci&amp;oacute;n &lt;b&gt;--version&lt;/b&gt; si la aplicaci&amp;oacute;n no especific&amp;oacute; un controlador para esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="859ddcc1d54c8f56f6fc79d681322ff6800ab918" translate="yes" xml:space="preserve">
          <source>Autoties are most commonly used in the module to which they actually tie, and need to export their attributes to any module that calls them. To facilitate this, Attribute::Handlers recognizes a special &quot;pseudo-class&quot; -- &lt;code&gt;__CALLER__&lt;/code&gt; , which may be specified as the qualifier of an attribute:</source>
          <target state="translated">Los autoties se utilizan con mayor frecuencia en el m&amp;oacute;dulo al que realmente se vinculan y necesitan exportar sus atributos a cualquier m&amp;oacute;dulo que los llame. Para facilitar esto, Attribute :: Handlers reconoce una &quot; &lt;code&gt;__CALLER__&lt;/code&gt; &quot; especial - __CALLER__ , que puede especificarse como el calificador de un atributo:</target>
        </trans-unit>
        <trans-unit id="c275699a9fcc5b1df221a4afe6ee0192241a51b8" translate="yes" xml:space="preserve">
          <source>Available Plugins</source>
          <target state="translated">Plugins disponibles</target>
        </trans-unit>
        <trans-unit id="a1689bbab8d96444cb240ecc94b27e3bd6e1fa9d" translate="yes" xml:space="preserve">
          <source>Available Subroutines</source>
          <target state="translated">Subrutinas disponibles</target>
        </trans-unit>
        <trans-unit id="f8f5117038c185bf68b0bd33b349f9405e133955" translate="yes" xml:space="preserve">
          <source>Available exports</source>
          <target state="translated">Exportaciones disponibles</target>
        </trans-unit>
        <trans-unit id="00239624abff2fe9a2fd406296f776638259fff8" translate="yes" xml:space="preserve">
          <source>Available in Perls 5.8.1 and later. If set to &lt;code&gt;&quot;unsafe&quot;&lt;/code&gt; , the pre-Perl-5.8.0 signal behaviour (which is immediate but unsafe) is restored. If set to &lt;code&gt;safe&lt;/code&gt; , then safe (but deferred) signals are used. See &lt;a href=&quot;perlipc#Deferred-Signals-(Safe-Signals)&quot;&gt;Deferred Signals (Safe Signals) in perlipc&lt;/a&gt;.</source>
          <target state="translated">Disponible en Perls 5.8.1 y posteriores. Si se establece en &lt;code&gt;&quot;unsafe&quot;&lt;/code&gt; , se restaura el comportamiento de la se&amp;ntilde;al anterior a Perl-5.8.0 (que es inmediato pero inseguro). Si se establece en &lt;code&gt;safe&lt;/code&gt; , se utilizan se&amp;ntilde;ales seguras (pero diferidas). Consulte &lt;a href=&quot;perlipc#Deferred-Signals-(Safe-Signals)&quot;&gt;Se&amp;ntilde;ales diferidas (se&amp;ntilde;ales seguras) en perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06d7ad8e1c503f30109967f01a5055e60c428ad2" translate="yes" xml:space="preserve">
          <source>Available in version 2.22 and above.</source>
          <target state="translated">Disponible en la versión 2.22 y superior.</target>
        </trans-unit>
        <trans-unit id="ca47c0994a656fab74100d8043c17430984bfc08" translate="yes" xml:space="preserve">
          <source>Available in version 2.32 and above</source>
          <target state="translated">Disponible en la versión 2.32 y superior</target>
        </trans-unit>
        <trans-unit id="6a2ef8d70aa0a54d8ffae1859cac80b4b3ca0c60" translate="yes" xml:space="preserve">
          <source>Available in version 2.66 and above.</source>
          <target state="translated">Disponible en la versión 2.66 y superior.</target>
        </trans-unit>
        <trans-unit id="46f1e6d4a99c839646d86f37c67e8ce5c790c2f7" translate="yes" xml:space="preserve">
          <source>Available in version 2.77 and above.</source>
          <target state="translated">Disponible en la versión 2.77 y superior.</target>
        </trans-unit>
        <trans-unit id="1ee0ed3a84dce710c7a16f8db82978050c4d2850" translate="yes" xml:space="preserve">
          <source>Available in version 2.99 and above.</source>
          <target state="translated">Disponible en la versión 2.99 y superior.</target>
        </trans-unit>
        <trans-unit id="d74a27e4b35b5f01b8ce5c3169c1b5a135f15fe4" translate="yes" xml:space="preserve">
          <source>Available in version 3.00 and above.</source>
          <target state="translated">Disponible en la versión 3.00 y superior.</target>
        </trans-unit>
        <trans-unit id="eb07b303f6d617426c6371968300dfb4f3ae0614" translate="yes" xml:space="preserve">
          <source>Available in version 6.31 and above.</source>
          <target state="translated">Disponible en la versión 6.31 y superior.</target>
        </trans-unit>
        <trans-unit id="e2eb2ee2a8a2421e0f16491afdee27929c55a640" translate="yes" xml:space="preserve">
          <source>Available in version 6.46 and above.</source>
          <target state="translated">Disponible en la versión 6.46 y superior.</target>
        </trans-unit>
        <trans-unit id="7b80e477803719c627e591ee3d93e9c48ad902d2" translate="yes" xml:space="preserve">
          <source>Available in version 6.48 and above.</source>
          <target state="translated">Disponible en la versión 6.48 y superior.</target>
        </trans-unit>
        <trans-unit id="aec275cec443caa644465799fc156b88fcadd8ce" translate="yes" xml:space="preserve">
          <source>Available in version 6.52 and above.</source>
          <target state="translated">Disponible en la versión 6.52 y superior.</target>
        </trans-unit>
        <trans-unit id="4c5736820a885b4b84bf41953dc520dbc9201d97" translate="yes" xml:space="preserve">
          <source>Available in version 6.5503 and above.</source>
          <target state="translated">Disponible en la versión 6.5503 y superior.</target>
        </trans-unit>
        <trans-unit id="608b36cf2b4b343801fc146cfc4244281c6223d0" translate="yes" xml:space="preserve">
          <source>Available in version 6.64 and above.</source>
          <target state="translated">Disponible en la versión 6.64 y superior.</target>
        </trans-unit>
        <trans-unit id="0d6ce3bbbc75b8e9071a24da666baed09d9b758d" translate="yes" xml:space="preserve">
          <source>Available on 64 bit OpenVMS 8.2 and later. (VMS)</source>
          <target state="translated">Disponible en el OpenVMS 8.2 de 64 bits y posterior.(VMS)</target>
        </trans-unit>
        <trans-unit id="61cd670e85d7eb394067cdccaf9865a921e8dfe4" translate="yes" xml:space="preserve">
          <source>Available only for socket handles, and it does what the &lt;code&gt;ioctlsocket()&lt;/code&gt; call in the Winsock API does. (Win32)</source>
          <target state="translated">Disponible solo para identificadores de socket, y hace lo que hace la llamada &lt;code&gt;ioctlsocket()&lt;/code&gt; en la API de Winsock. (Win32)</target>
        </trans-unit>
        <trans-unit id="7ff7a29d7d279f81c65111e3969b0de8be5b1d10" translate="yes" xml:space="preserve">
          <source>Available only for socket handles. (RISC OS)</source>
          <target state="translated">Disponible sólo para las manijas de los enchufes.(RISC OS)</target>
        </trans-unit>
        <trans-unit id="9f1e3ff1138fe80a24c7ddf73407362168941db0" translate="yes" xml:space="preserve">
          <source>Available only under threaded builds, this function allocates an entry in &lt;code&gt;PL_stashpad&lt;/code&gt; for the stash passed to it.</source>
          <target state="translated">Disponible solo en compilaciones con subprocesos, esta funci&amp;oacute;n asigna una entrada en &lt;code&gt;PL_stashpad&lt;/code&gt; para el alijo que se le pasa.</target>
        </trans-unit>
        <trans-unit id="e829311778d72727fd390df6d086e72d016b6e9b" translate="yes" xml:space="preserve">
          <source>Avoid /usr/ucb/cc.</source>
          <target state="translated">Evitar /usr/ucb/cc.</target>
        </trans-unit>
        <trans-unit id="20382d66f57ab5b9e0eec4292fa20991e9ee50cf" translate="yes" xml:space="preserve">
          <source>Avoid &lt;code&gt;$r-&amp;gt;Class::func()&lt;/code&gt; where using &lt;code&gt;@ISA=qw(... Class ...)&lt;/code&gt; and &lt;code&gt;$r-&amp;gt;func()&lt;/code&gt; would work.</source>
          <target state="translated">Evite &lt;code&gt;$r-&amp;gt;Class::func()&lt;/code&gt; donde usar &lt;code&gt;@ISA=qw(... Class ...)&lt;/code&gt; y &lt;code&gt;$r-&amp;gt;func()&lt;/code&gt; funcionar&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="653557f5998e677614fe1c110b44a8530b1a3295" translate="yes" xml:space="preserve">
          <source>Avoid assignments in conditionals, but if they're unavoidable, use extra paren, e.g. &quot;if (a &amp;amp;&amp;amp; (b = c)) ...&quot;</source>
          <target state="translated">Evite las asignaciones en condicionales, pero si son inevitables, use par&amp;eacute;n adicionales, por ejemplo, &quot;if (a &amp;amp;&amp;amp; (b = c)) ...&quot;</target>
        </trans-unit>
        <trans-unit id="12cd7881c58cc2ba233002bb3f616c6a3c8332a8" translate="yes" xml:space="preserve">
          <source>Avoid barewords if you can, especially all lowercase ones. You can't tell by just looking at it whether a bareword is a function or a string. By using quotes on strings and parentheses on function calls, you won't ever get them confused.</source>
          <target state="translated">Evite las palabras de barras si puede,especialmente todas las minúsculas.No se puede saber con sólo mirarlo si una palabra clave es una función o una cadena.Usando comillas en las cadenas y paréntesis en las llamadas a funciones,nunca se confundirán.</target>
        </trans-unit>
        <trans-unit id="a2c60caa765bc1191575d1eafdff1bfe2d3195d5" translate="yes" xml:space="preserve">
          <source>Avoid class name tests like: &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; &quot;Invalid&quot; unless &lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt; $ref eq 'FOO'&lt;/code&gt; . Generally you can delete the &lt;code&gt;eq 'FOO'&lt;/code&gt; part with no harm at all. Let the objects look after themselves! Generally, avoid hard-wired class names as far as possible.</source>
          <target state="translated">Evite las pruebas de nombres de clases como: &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; &quot;Invalid&quot; unless &lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt; $ref eq 'FOO'&lt;/code&gt; . Generalmente puede eliminar la parte &lt;code&gt;eq 'FOO'&lt;/code&gt; sin ning&amp;uacute;n da&amp;ntilde;o. &amp;iexcl;Deje que los objetos se cuiden solos! En general, evite los nombres de clases cableados en la medida de lo posible.</target>
        </trans-unit>
        <trans-unit id="98206b093bcf40d6e074eb698543fd4b6a25d539" translate="yes" xml:space="preserve">
          <source>Avoid keeping any state information in your packages. It makes it difficult for multiple other packages to use yours. Keep state information in objects.</source>
          <target state="translated">Evita guardar cualquier información de estado en tus paquetes.Esto dificulta el uso de los otros paquetes.Mantenga la información de estado en los objetos.</target>
        </trans-unit>
        <trans-unit id="b40cce256d04ce45459ded87307f5f3e8ae2760b" translate="yes" xml:space="preserve">
          <source>Avoid libucb.</source>
          <target state="translated">Evita la libucación.</target>
        </trans-unit>
        <trans-unit id="b3ba9403766f60fa8e210155287efa18e1a9e739" translate="yes" xml:space="preserve">
          <source>Avoid starting a new top-level hierarchy, especially if a suitable hierarchy already exists under which you could place your module.</source>
          <target state="translated">Evite iniciar una nueva jerarquía de alto nivel,especialmente si ya existe una jerarquía adecuada bajo la cual pueda colocar su módulo.</target>
        </trans-unit>
        <trans-unit id="fd4b693367a701b3345901dbd6d82b5f0d6ce929" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt;) or `backticks` in a void context, that is, when you just throw away their return values. Those functions all have return values, so use them. Otherwise use a &lt;code&gt;foreach()&lt;/code&gt; loop or the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; function instead.</source>
          <target state="translated">Evite el uso de &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; (o &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; ) o `backticks` en un contexto vac&amp;iacute;o, es decir, cuando simplemente desecha sus valores de retorno. Todas esas funciones tienen valores de retorno, as&amp;iacute; que &amp;uacute;selas. De lo contrario, utilice un bucle &lt;code&gt;foreach()&lt;/code&gt; o la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="342c7154cb2c0ee3ba1afbccab12770600c98259" translate="yes" xml:space="preserve">
          <source>Avoid using hardcoded test numbers whenever possible (the EXPECTED/GOT found in t/op/tie.t is much more maintainable, and gives better failure reports).</source>
          <target state="translated">Evitar el uso de números de prueba codificados siempre que sea posible (el EXPECTED/GOT que se encuentra en t/op/tie.t es mucho más mantenible,y da mejores informes de fallos).</target>
        </trans-unit>
        <trans-unit id="67de3787b457172bffd90b9f3faae7435e0dae2f" translate="yes" xml:space="preserve">
          <source>Avoid using qx// and system() unless you are testing for them. If you do use them, make sure that you cover _all_ perl platforms.</source>
          <target state="translated">Evite usar qx//y system()a menos que esté haciendo pruebas para ellos.Si los usa,asegúrese de cubrir todas las plataformas de Perl.</target>
        </trans-unit>
        <trans-unit id="0e92b74d5a979c26e7eb18be8603b8359a1d07fd" translate="yes" xml:space="preserve">
          <source>Avoiding Pipe Deadlocks</source>
          <target state="translated">Evitar los callejones sin salida de las tuberías</target>
        </trans-unit>
        <trans-unit id="6e3313e507db79bbbaea78fb241509ccc328aba1" translate="yes" xml:space="preserve">
          <source>Avoiding repetitions</source>
          <target state="translated">Evitar las repeticiones</target>
        </trans-unit>
        <trans-unit id="3721e8be2f4b8bf2c63f63312cdfa53888d8430d" translate="yes" xml:space="preserve">
          <source>Awk Traps</source>
          <target state="translated">Trampas Awk</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="bd2b125cd8de6e0701cdac6ee17fd331ce4a27c2" translate="yes" xml:space="preserve">
          <source>B - The Perl Compiler Backend</source>
          <target state="translated">B-La base de datos del compilador de Perl</target>
        </trans-unit>
        <trans-unit id="b918b0aa2af36ef03dc69f56d877870ae5fd0aee" translate="yes" xml:space="preserve">
          <source>B-regex</source>
          <target state="translated">B-regex</target>
        </trans-unit>
        <trans-unit id="4995b54293f85c5bb7976c9e655accd8fbd573ea" translate="yes" xml:space="preserve">
          <source>B. UNPACK</source>
          <target state="translated">B.UNPACK</target>
        </trans-unit>
        <trans-unit id="52b9020e3a04e67bbf5d1e8e1b850a5ce003849b" translate="yes" xml:space="preserve">
          <source>B::AV Methods</source>
          <target state="translated">B::AV Métodos</target>
        </trans-unit>
        <trans-unit id="dc2dfb25dd4ed2146470cd57ee95edac91f0306b" translate="yes" xml:space="preserve">
          <source>B::BINOP Method</source>
          <target state="translated">B::Método BINOP</target>
        </trans-unit>
        <trans-unit id="d151bd0866d55b4bfc156b14f486f63bf8d29ea8" translate="yes" xml:space="preserve">
          <source>B::BM Methods</source>
          <target state="translated">B::BM Métodos</target>
        </trans-unit>
        <trans-unit id="9055e894e201b212c293a29798f1091ff6d20491" translate="yes" xml:space="preserve">
          <source>B::COP Methods</source>
          <target state="translated">B::Métodos COP</target>
        </trans-unit>
        <trans-unit id="ad1f22ba3c95252a59969a1a218e1111bb139542" translate="yes" xml:space="preserve">
          <source>B::CV Methods</source>
          <target state="translated">B::CV Métodos</target>
        </trans-unit>
        <trans-unit id="c5987daa2aa6d7fac584555a51956a3b445f0843" translate="yes" xml:space="preserve">
          <source>B::Concise</source>
          <target state="translated">B::Concise</target>
        </trans-unit>
        <trans-unit id="0e99aa1c3be052d8105291584d6f4ee6b16f397c" translate="yes" xml:space="preserve">
          <source>B::Concise - Walk Perl syntax tree, printing concise info about ops</source>
          <target state="translated">B::Conciso-Caminar el árbol de sintaxis de Perl,imprimiendo información concisa sobre las operaciones</target>
        </trans-unit>
        <trans-unit id="d98d2c8e235d9494074cb2fd60569e8b9c12b5d6" translate="yes" xml:space="preserve">
          <source>B::Concise::reset_sequence()</source>
          <target state="translated">B::Concise::reset_sequence()</target>
        </trans-unit>
        <trans-unit id="553185e97d716b58f74fa982526081cbc642ddf4" translate="yes" xml:space="preserve">
          <source>B::Debug</source>
          <target state="translated">B::Debug</target>
        </trans-unit>
        <trans-unit id="7b2b543f6bc70176bf812e6ac813955a4e8d32ab" translate="yes" xml:space="preserve">
          <source>B::Debug - Walk Perl syntax tree, printing debug info about ops</source>
          <target state="translated">B::Debug-Caminar el árbol de sintaxis de Perl,imprimir la información de depuración de operaciones</target>
        </trans-unit>
        <trans-unit id="b2fba5e2c554e2a4492f4d6c8ba33e2e0b6a2475" translate="yes" xml:space="preserve">
          <source>B::Deparse</source>
          <target state="translated">B::Deparse</target>
        </trans-unit>
        <trans-unit id="45e0d250a6312bd5838511c6a45d0f47e7a90193" translate="yes" xml:space="preserve">
          <source>B::Deparse - Perl compiler backend to produce perl code</source>
          <target state="translated">B::Deparse-Backend del compilador de Perl para producir el código perl</target>
        </trans-unit>
        <trans-unit id="ef79da6fd85d8fa02ee778f0544d6ba33e8b3b18" translate="yes" xml:space="preserve">
          <source>B::Deparse can also be used on a sub-by-sub basis from other perl programs.</source>
          <target state="translated">B::Deparse también puede ser utilizado en una base de sub-sub de otros programas de perl.</target>
        </trans-unit>
        <trans-unit id="187ec0fb4a4a04196e808c398a93708ba9275615" translate="yes" xml:space="preserve">
          <source>B::Deparse is a backend module for the Perl compiler that generates perl source code, based on the internal compiled structure that perl itself creates after parsing a program. The output of B::Deparse won't be exactly the same as the original source, since perl doesn't keep track of comments or whitespace, and there isn't a one-to-one correspondence between perl's syntactical constructions and their compiled form, but it will often be close. When you use the &lt;b&gt;-p&lt;/b&gt; option, the output also includes parentheses even when they are not required by precedence, which can make it easy to see if perl is parsing your expressions the way you intended.</source>
          <target state="translated">B :: Deparse es un m&amp;oacute;dulo de backend para el compilador de Perl que genera c&amp;oacute;digo fuente de Perl, basado en la estructura compilada interna que el propio Perl crea despu&amp;eacute;s de analizar un programa. La salida de B :: Deparse no ser&amp;aacute; exactamente la misma que la fuente original, ya que perl no realiza un seguimiento de los comentarios o los espacios en blanco, y no existe una correspondencia uno a uno entre las construcciones sint&amp;aacute;cticas de perl y sus compilaciones. forma, pero a menudo estar&amp;aacute; cerca. Cuando usa la opci&amp;oacute;n &lt;b&gt;-p&lt;/b&gt; , la salida tambi&amp;eacute;n incluye par&amp;eacute;ntesis incluso cuando no son requeridos por la precedencia, lo que puede hacer que sea f&amp;aacute;cil ver si perl est&amp;aacute; analizando sus expresiones de la manera deseada.</target>
        </trans-unit>
        <trans-unit id="fc31dbbc2ee8c07aa355011d5f82b2d63c5b6c00" translate="yes" xml:space="preserve">
          <source>B::GV Methods</source>
          <target state="translated">B::GV Métodos</target>
        </trans-unit>
        <trans-unit id="f507161ede02e20a9575d2189eb0e0194566355a" translate="yes" xml:space="preserve">
          <source>B::HV Methods</source>
          <target state="translated">B::HV Métodos</target>
        </trans-unit>
        <trans-unit id="e300bd8b4c95a3624e2aa219bf974f0118cef860" translate="yes" xml:space="preserve">
          <source>B::IO Methods</source>
          <target state="translated">B::IO Métodos</target>
        </trans-unit>
        <trans-unit id="35a3e95640c426b65cf8d850194a4f17b3215f07" translate="yes" xml:space="preserve">
          <source>B::IO objects derive from IO objects and you will get more information from the IO object itself.</source>
          <target state="translated">B::Los objetos IO derivan de los objetos IO y obtendrás más información del propio objeto IO.</target>
        </trans-unit>
        <trans-unit id="9329448ffaface57d41ef2b007c24eb18197a68b" translate="yes" xml:space="preserve">
          <source>B::IV Methods</source>
          <target state="translated">B::IV Métodos</target>
        </trans-unit>
        <trans-unit id="41ae1a755811beebf8ac2f49c8c1656753f2209c" translate="yes" xml:space="preserve">
          <source>B::IV, B::NV, B::RV, B::PV, B::PVIV, B::PVNV, B::PVMG, B::BM (5.9.5 and earlier), B::PVLV, B::AV, B::HV, B::CV, B::GV, B::FM, B::IO. These classes correspond in the obvious way to the underlying C structures of similar names. The inheritance hierarchy mimics the underlying C &quot;inheritance&quot;. For the 5.10.x branch, (</source>
          <target state="translated">B::IV,B::NV,B::RV,B::PV,B::PVIV,B::PVNV,B::PVMG,B::BM (5.9.5 y anterior),B::PVLV,B::AV,B::HV,B::CV,B::GV,B::FM,B::IO.Estas clases corresponden de manera obvia a las estructuras C subyacentes de nombres similares.La jerarquía de herencia imita la &quot;herencia&quot; C subyacente.Para la rama 5.10.x,(</target>
        </trans-unit>
        <trans-unit id="47e3586b1ed7a7d56d8afab1073b55905757ce29" translate="yes" xml:space="preserve">
          <source>B::LISTOP Method</source>
          <target state="translated">B::Método LISTOP</target>
        </trans-unit>
        <trans-unit id="04688acb0cbf70d25c11e0314b06463ce4bde512" translate="yes" xml:space="preserve">
          <source>B::LOGOP Method</source>
          <target state="translated">B::Método LOGOP</target>
        </trans-unit>
        <trans-unit id="7263ed2af022568be1b85d473eacf000486dd697" translate="yes" xml:space="preserve">
          <source>B::LOOP Methods</source>
          <target state="translated">B::Métodos LOOP</target>
        </trans-unit>
        <trans-unit id="83ceb8c6feb2e3fc2f3bf822a42dbcd07ff89ff2" translate="yes" xml:space="preserve">
          <source>B::MAGIC Methods</source>
          <target state="translated">B::Métodos MÁGICOS</target>
        </trans-unit>
        <trans-unit id="69a559c9b6f1bb1dde02c8b48310f4be42a91370" translate="yes" xml:space="preserve">
          <source>B::METHOP Methods (Since Perl 5.22)</source>
          <target state="translated">B::Métodos METHOP (Desde Perl 5.22)</target>
        </trans-unit>
        <trans-unit id="ce0314b7717adf8f5e71d17e31bd593c95324507" translate="yes" xml:space="preserve">
          <source>B::NV Methods</source>
          <target state="translated">B::NV Métodos</target>
        </trans-unit>
        <trans-unit id="c0b4baaa7ca50074884462d7620fd16447077eec" translate="yes" xml:space="preserve">
          <source>B::OP Methods</source>
          <target state="translated">B::OP Métodos</target>
        </trans-unit>
        <trans-unit id="5409024a3cb7db3e3ab0625fc65de3e420057bb4" translate="yes" xml:space="preserve">
          <source>B::PADLIST Methods</source>
          <target state="translated">B::Métodos de PADLIST</target>
        </trans-unit>
        <trans-unit id="7aa1d371fde2d45d24f6903c528b83b6becc77cd" translate="yes" xml:space="preserve">
          <source>B::PADNAME Methods</source>
          <target state="translated">B::Métodos de PADNAME</target>
        </trans-unit>
        <trans-unit id="f042ef0bca656a3a3db2a47dca50963fab567b10" translate="yes" xml:space="preserve">
          <source>B::PADNAMELIST Methods</source>
          <target state="translated">B::PADNAMELISTA Métodos</target>
        </trans-unit>
        <trans-unit id="7fc794e6266342d3b9c5605f5dd3acf7f99c4eaf" translate="yes" xml:space="preserve">
          <source>B::PADOP Method</source>
          <target state="translated">B::Método PADOP</target>
        </trans-unit>
        <trans-unit id="3cfe6d3792643bf75e3768c357ceb15d1fcc2896" translate="yes" xml:space="preserve">
          <source>B::PMOP Methods</source>
          <target state="translated">B::Métodos PMOP</target>
        </trans-unit>
        <trans-unit id="935c8ee8b93bca030ffae3839fe2dd9b63ef8ee4" translate="yes" xml:space="preserve">
          <source>B::PV Methods</source>
          <target state="translated">B::PV Métodos</target>
        </trans-unit>
        <trans-unit id="2ae17602fe4096f70c3f88f15eb8e459f9c75ea9" translate="yes" xml:space="preserve">
          <source>B::PVLV Methods</source>
          <target state="translated">B::Métodos PVLV</target>
        </trans-unit>
        <trans-unit id="974a328507349d20edd58996d04366d5388a2f7c" translate="yes" xml:space="preserve">
          <source>B::PVMG Methods</source>
          <target state="translated">B::Métodos PVMG</target>
        </trans-unit>
        <trans-unit id="7210fef12d9bb7c60c3dee3ae3350db4f7b9f9ab" translate="yes" xml:space="preserve">
          <source>B::PVOP Method</source>
          <target state="translated">B::Método PVOP</target>
        </trans-unit>
        <trans-unit id="6455c3fb933990f5652e2d49c591cb379eb4bf8a" translate="yes" xml:space="preserve">
          <source>B::REGEXP Methods</source>
          <target state="translated">B::Métodos REGEXP</target>
        </trans-unit>
        <trans-unit id="5fb9902660751871b51829ac2f4124c1e0f71d1f" translate="yes" xml:space="preserve">
          <source>B::RV Methods</source>
          <target state="translated">B::Métodos RV</target>
        </trans-unit>
        <trans-unit id="1bc231286052c317542f678d841b72c83eca59c7" translate="yes" xml:space="preserve">
          <source>B::SV Methods</source>
          <target state="translated">B::SV Métodos</target>
        </trans-unit>
        <trans-unit id="ba72f1a9a3b75ef02445cdb3be5e5dfd9e626d0a" translate="yes" xml:space="preserve">
          <source>B::SVOP Methods</source>
          <target state="translated">B::Métodos SVOP</target>
        </trans-unit>
        <trans-unit id="6d49788efca655ce69693e7fc4afeb14e70c0677" translate="yes" xml:space="preserve">
          <source>B::Showlex</source>
          <target state="translated">B::Showlex</target>
        </trans-unit>
        <trans-unit id="950f98354a0be3d4d89c912c00828150ec365f96" translate="yes" xml:space="preserve">
          <source>B::Showlex - Show lexical variables used in functions or files</source>
          <target state="translated">B::Showlex-Muestra las variables léxicas utilizadas en funciones o archivos</target>
        </trans-unit>
        <trans-unit id="fdd28b59d6f44b83715e2f882acc2a2a5588e605" translate="yes" xml:space="preserve">
          <source>B::Terse</source>
          <target state="translated">B::Terse</target>
        </trans-unit>
        <trans-unit id="c493225f0157e4f61a98bb3974699f2af44cb46f" translate="yes" xml:space="preserve">
          <source>B::Terse - Walk Perl syntax tree, printing terse info about ops</source>
          <target state="translated">B::Terse-Caminar el árbol de sintaxis de Perl,imprimiendo información concisa sobre operaciones</target>
        </trans-unit>
        <trans-unit id="9f6685ca28bcfea09300907f0826a8f9a2c91850" translate="yes" xml:space="preserve">
          <source>B::UNOP Method</source>
          <target state="translated">B::Método UNOP</target>
        </trans-unit>
        <trans-unit id="69effd3b7e8802f540cc9b9e50328608e6736463" translate="yes" xml:space="preserve">
          <source>B::UNOP_AUX Methods (since 5.22)</source>
          <target state="translated">B::Métodos UNOP_AUX (desde 5.22)</target>
        </trans-unit>
        <trans-unit id="c85e7a03e5bbe49c04256621164986ed11cb37ba" translate="yes" xml:space="preserve">
          <source>B::Xref</source>
          <target state="translated">B::Xref</target>
        </trans-unit>
        <trans-unit id="651c8208adb3fd49f31423f94f8ac43c0733aa36" translate="yes" xml:space="preserve">
          <source>B::Xref - Generates cross reference reports for Perl programs</source>
          <target state="translated">B::Xref-Genera informes de referencia cruzada para los programas Perl</target>
        </trans-unit>
        <trans-unit id="a61d2719382da67e2a1a2dbd76dd400accca9187" translate="yes" xml:space="preserve">
          <source>BACKWARD COMPATIBILITY AND DEPRECATION</source>
          <target state="translated">COMPATIBILIDAD RETROACTIVA Y DEPRECIACIÓN</target>
        </trans-unit>
        <trans-unit id="e5b45b4fc983ac2702f9e777eee2ac1b1e5f0f20" translate="yes" xml:space="preserve">
          <source>BACKWARDS COMPATIBILITY</source>
          <target state="translated">COMPATIBILIDAD CON EL PASADO</target>
        </trans-unit>
        <trans-unit id="bef6eec96c16ae54f978beec72807557ca3a9eaf" translate="yes" xml:space="preserve">
          <source>BASIC METHODS</source>
          <target state="translated">MÉTODOS BÁSICOS</target>
        </trans-unit>
        <trans-unit id="8cf5cb57c99d3bbd6c48033a11d198c341ee5329" translate="yes" xml:space="preserve">
          <source>BEFORE YOU START WRITING A MODULE</source>
          <target state="translated">ANTES DE EMPEZAR A ESCRIBIR UN MÓDULO</target>
        </trans-unit>
        <trans-unit id="3598517c826f1480a241800ce73f781ae2b1cd6a" translate="yes" xml:space="preserve">
          <source>BEGIN</source>
          <target state="translated">BEGIN</target>
        </trans-unit>
        <trans-unit id="ed0ab3055b45605d8d3bfeee9675e3115e25dd63" translate="yes" xml:space="preserve">
          <source>BEGIN, UNITCHECK, CHECK, INIT and END</source>
          <target state="translated">COMIENZO,CHEQUEO,COMPROBACIÓN,INICIO y FINAL</target>
        </trans-unit>
        <trans-unit id="82587c5990d27962027bcd8f44009a394aa03c6d" translate="yes" xml:space="preserve">
          <source>BENCHMARKS</source>
          <target state="translated">BENCHMARKS</target>
        </trans-unit>
        <trans-unit id="3eb8dc2707d319cff39e903c8f9e907ffde6faaa" translate="yes" xml:space="preserve">
          <source>BEST PRACTICE</source>
          <target state="translated">MEJORES PRÁCTICAS</target>
        </trans-unit>
        <trans-unit id="d6b920160b07e6d8ef62aeb966afe0559c1c4da6" translate="yes" xml:space="preserve">
          <source>BINMODE</source>
          <target state="translated">BINMODE</target>
        </trans-unit>
        <trans-unit id="9afa89ba4b3340d7bc1c3e18c656cfc5abf6d9a7" translate="yes" xml:space="preserve">
          <source>BOOLEAN = less-&amp;gt;of( FEATURE )</source>
          <target state="translated">BOOLEAN = menos-&amp;gt; de (FUNCI&amp;Oacute;N)</target>
        </trans-unit>
        <trans-unit id="247befebedd2ed6823933439f49eb30a07d09dca" translate="yes" xml:space="preserve">
          <source>BRACKET NOTATION</source>
          <target state="translated">NOTACIÓN DE PARÉNTESIS</target>
        </trans-unit>
        <trans-unit id="e7772b5b926c191f6bd98767963948f3ffc93baa" translate="yes" xml:space="preserve">
          <source>BS2000 POSIX doesn't support the shebang notation (&lt;code&gt;#!/usr/local/bin/perl&lt;/code&gt; ), so you have to use the following lines instead:</source>
          <target state="translated">BS2000 POSIX no admite la notaci&amp;oacute;n shebang ( &lt;code&gt;#!/usr/local/bin/perl&lt;/code&gt; ), por lo que debe usar las siguientes l&amp;iacute;neas:</target>
        </trans-unit>
        <trans-unit id="664c8d2ddb2e4dc2ea085ed16d6df4504ec03ee2" translate="yes" xml:space="preserve">
          <source>BSD::Resource on Solaris</source>
          <target state="translated">BSD::Recurso en Solaris</target>
        </trans-unit>
        <trans-unit id="df51adc50ecdca424b6145ec6164f8c39197a14c" translate="yes" xml:space="preserve">
          <source>BSD::Resource versions earlier than 1.09 do not compile on Solaris with perl 5.6.0 and higher, for the same reasons as Proc::ProcessTable. BSD::Resource versions starting from 1.09 have a workaround for the problem.</source>
          <target state="translated">BSD::Las versiones de recursos anteriores a la 1.09 no compilan en Solaris con perl 5.6.0 y superior,por las mismas razones que Proc::ProcessTable.BSD::Las versiones de recursos a partir de la 1.09 tienen una solución para el problema.</target>
        </trans-unit>
        <trans-unit id="d7fe8d7ec43bafda1404b3733deb73b25528fcbd" translate="yes" xml:space="preserve">
          <source>BSLOADLIBS</source>
          <target state="translated">BSLOADLIBS</target>
        </trans-unit>
        <trans-unit id="502dbddd3b35610af6911c0fbc9ca3be4bfe6d63" translate="yes" xml:space="preserve">
          <source>BTW. Beware too of pressure from managers who see you speed a program up by 50% of the runtime once, only to get a request one month later to do the same again (true story) - you'll just have to point out you're only human, even if you are a Perl programmer, and you'll see what you can do...</source>
          <target state="translated">POR CIERTO.Ten cuidado con la presión de los gerentes que te ven acelerar un programa en un 50% del tiempo de ejecución una vez,sólo para obtener una solicitud un mes después para hacer lo mismo de nuevo (historia real)-sólo tendrás que señalar que eres sólo un humano,incluso si eres un programador de Perl,y verás lo que puedes hacer...</target>
        </trans-unit>
        <trans-unit id="8b9146b4f38600ca0e41fb96135f743cfdb11eec" translate="yes" xml:space="preserve">
          <source>BUG REPORTING</source>
          <target state="translated">REPORTE DE BUGS</target>
        </trans-unit>
        <trans-unit id="664f572fef857b1dfc7d6e286d22026a2508e1e5" translate="yes" xml:space="preserve">
          <source>BUG REPORTS</source>
          <target state="translated">INFORMES DE INSECTOS</target>
        </trans-unit>
        <trans-unit id="5dda8c520f4fbfda1830a8a497556d722a3fd113" translate="yes" xml:space="preserve">
          <source>BUGS</source>
          <target state="translated">BUGS</target>
        </trans-unit>
        <trans-unit id="9f989473548a594a947b969757db7fc06ca6a262" translate="yes" xml:space="preserve">
          <source>BUGS AND CAVEATS</source>
          <target state="translated">BICHOS Y ADVERTENCIAS</target>
        </trans-unit>
        <trans-unit id="fe771929835192040a55c6b146d4bbdcf0038546" translate="yes" xml:space="preserve">
          <source>BUGS AND IRRITATIONS</source>
          <target state="translated">BICHOS E IRRITACIONES</target>
        </trans-unit>
        <trans-unit id="affef23bcfe821a649489c10e4d45ae3607b1ccb" translate="yes" xml:space="preserve">
          <source>BUGS AND LIMITATIONS</source>
          <target state="translated">ERRORES Y LIMITACIONES</target>
        </trans-unit>
        <trans-unit id="118a34d613c11c790c196c946968113aa8bc32aa" translate="yes" xml:space="preserve">
          <source>BUGS AND PITFALLS</source>
          <target state="translated">BICHOS Y TRAMPAS</target>
        </trans-unit>
        <trans-unit id="a16fd7f9de623a809defab1d94048e0eded9677b" translate="yes" xml:space="preserve">
          <source>BUGS AND WARNINGS</source>
          <target state="translated">BICHOS Y ADVERTENCIAS</target>
        </trans-unit>
        <trans-unit id="2f8e6e225c82badf6f8a92aed6ef242d4dc4d03b" translate="yes" xml:space="preserve">
          <source>BUGS ON CYGWIN</source>
          <target state="translated">BUGS EN CYGWIN</target>
        </trans-unit>
        <trans-unit id="11f69a17d772a3f0d39aa116f097397dc1dac971" translate="yes" xml:space="preserve">
          <source>BUGS and CAVEATS</source>
          <target state="translated">BUGS y CUEVAS</target>
        </trans-unit>
        <trans-unit id="ccf8d27dca59cf8914b7de42279bcf54b381c80d" translate="yes" xml:space="preserve">
          <source>BUGS is an email or url to post bug reports. For modules with UPSTREAM =&amp;gt; 'blead', use perl5-porters@perl.org. rt.cpan.org appears to automatically provide a URL for CPAN modules; any value given here overrides the default: &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=&quot;&gt;http://rt.cpan.org/Public/Dist/Display.html?Name=&lt;/a&gt;$ModuleName</source>
          <target state="translated">BUGS es un correo electr&amp;oacute;nico o URL para publicar informes de errores. Para m&amp;oacute;dulos con UPSTREAM =&amp;gt; 'blead', use perl5-porters@perl.org. rt.cpan.org parece proporcionar autom&amp;aacute;ticamente una URL para los m&amp;oacute;dulos CPAN; cualquier valor dado aqu&amp;iacute; anula el predeterminado: &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=&quot;&gt;http://rt.cpan.org/Public/Dist/Display.html?Name=&lt;/a&gt; $ ModuleName</target>
        </trans-unit>
        <trans-unit id="4fa4a173033ffa9b27f16cd2d7b309c255617591" translate="yes" xml:space="preserve">
          <source>BUGS/CAVEATS/etc</source>
          <target state="translated">BUGS/CAVEATS/etc</target>
        </trans-unit>
        <trans-unit id="9b8dfdff736c5b1dbf956b89d8a9d4fd925dacd2" translate="yes" xml:space="preserve">
          <source>BUILD</source>
          <target state="translated">BUILD</target>
        </trans-unit>
        <trans-unit id="0e162e98df920882beaaa37c9fd3fd9860be2bff" translate="yes" xml:space="preserve">
          <source>BUILD AND INSTALL</source>
          <target state="translated">CONSTRUIR E INSTALAR</target>
        </trans-unit>
        <trans-unit id="80ef3501d89bb441f42a9aac769a351966bde435" translate="yes" xml:space="preserve">
          <source>BUILD NEW EXTENSIONS</source>
          <target state="translated">CONSTRUIR NUEVAS EXTENSIONES</target>
        </trans-unit>
        <trans-unit id="a5d9fc029fc161e583884fa605ea5dd4bf5b0226" translate="yes" xml:space="preserve">
          <source>BUILDING AND INSTALLING MODULES ON DOS</source>
          <target state="translated">CONSTRUYENDO E INSTALANDO MÓDULOS EN DOS</target>
        </trans-unit>
        <trans-unit id="68c9d11aacf08e68cf9222616220471f55a4230e" translate="yes" xml:space="preserve">
          <source>BUILDING PERL FOR OPENVOS</source>
          <target state="translated">CONSTRUYENDO PERL PARA OPENVOS</target>
        </trans-unit>
        <trans-unit id="b603dd0f789cea0b71cf17b9cadf6a885369ee6d" translate="yes" xml:space="preserve">
          <source>BUILDING PERL ON AMIGAOS</source>
          <target state="translated">CONSTRUYENDO PERL EN AMIGAOS</target>
        </trans-unit>
        <trans-unit id="d5bdc31108d4219c97e8c1b7e29e0629da746aa9" translate="yes" xml:space="preserve">
          <source>BUNDLES</source>
          <target state="translated">BUNDLES</target>
        </trans-unit>
        <trans-unit id="92b48cc3d13ac12b362038111cf08e5cf8b03696" translate="yes" xml:space="preserve">
          <source>Back before Perl had the XS system for connecting with C libraries, programmers used to get library constants by reading through the C header files. You may still see &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; 'syscall.ph'&lt;/code&gt; or similar around - the</source>
          <target state="translated">Antes de que Perl tuviera el sistema XS para conectarse con bibliotecas C, los programadores sol&amp;iacute;an obtener constantes de biblioteca leyendo los archivos de encabezado C. Es posible que todav&amp;iacute;a vea &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; 'syscall.ph'&lt;/code&gt; o similar alrededor - el</target>
        </trans-unit>
        <trans-unit id="4a3e95e64a0aa298ba1dcd060974643f7be2839b" translate="yes" xml:space="preserve">
          <source>Back then, the range 0xD800-0xDFFF was not allocated. Let's split that range in half and use the first half to represent the &lt;code&gt;upper
half of a character&lt;/code&gt; and the second half to represent the &lt;code&gt;lower
half of a character&lt;/code&gt; . That way, you can represent 1024 * 1024 = 1048576 more characters. Now we can store character ranges up to \x{10ffff} even with 16-bit encodings. This pair of half-character is now called a</source>
          <target state="translated">En aquel entonces, no se asign&amp;oacute; el rango 0xD800-0xDFFF. Dividamos ese rango por la mitad y usemos la primera mitad para representar la &lt;code&gt;upper half of a character&lt;/code&gt; y la segunda mitad para representar la &lt;code&gt;lower half of a character&lt;/code&gt; . De esa forma, puede representar 1024 * 1024 = 1048576 caracteres m&amp;aacute;s. Ahora podemos almacenar rangos de caracteres hasta \ x {10ffff} incluso con codificaciones de 16 bits. Este par de medio car&amp;aacute;cter ahora se llama</target>
        </trans-unit>
        <trans-unit id="1f9a2a8bbfa8f04b97f0739e8cee87c19e9a7b1a" translate="yes" xml:space="preserve">
          <source>Back to converting data. If you have (or want) data in your system's native 8-bit encoding (e.g. Latin-1, EBCDIC, etc.), you can use pack/unpack to convert to/from Unicode.</source>
          <target state="translated">Volvamos a la conversión de datos.Si tienes (o quieres)datos en la codificación nativa de 8 bits de tu sistema (por ejemplo,Latin-1,EBCDIC,etc.),puedes usar pack/despack para convertir a/desde Unicode.</target>
        </trans-unit>
        <trans-unit id="917eb438525299e66d70b4deb11770f40a27eeaa" translate="yes" xml:space="preserve">
          <source>Backend for building test libraries</source>
          <target state="translated">Backend para la construcción de bibliotecas de prueba</target>
        </trans-unit>
        <trans-unit id="60865a55d575470308929e5970d44edcbdb31366" translate="yes" xml:space="preserve">
          <source>Background Processes</source>
          <target state="translated">Procesos de fondo</target>
        </trans-unit>
        <trans-unit id="777d367a0813af1945dd6a57f416558fa99c5a72" translate="yes" xml:space="preserve">
          <source>Background and PERL_IMPLICIT_CONTEXT</source>
          <target state="translated">Antecedentes y PERL_IMPLICIT_CONTEXT</target>
        </trans-unit>
        <trans-unit id="82139f465e7bfd51be69bcd2ba2252de65152f38" translate="yes" xml:space="preserve">
          <source>Background yourself like this:</source>
          <target state="translated">Ponte en el fondo así:</target>
        </trans-unit>
        <trans-unit id="1c7bd776caf410341796f267d0b5a33a3e4a0364" translate="yes" xml:space="preserve">
          <source>Backreference to a named capture group. Equivalent to &lt;code&gt;\g{NAME}&lt;/code&gt; .</source>
          <target state="translated">Referencia inversa a un grupo de captura con nombre. Equivalente a &lt;code&gt;\g{NAME}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b67830d6a194880657acd61864c65e3027fb02e" translate="yes" xml:space="preserve">
          <source>Backreferences</source>
          <target state="translated">Backreferences</target>
        </trans-unit>
        <trans-unit id="89d9017aad56d057f4819297fea6ec35a3d1c796" translate="yes" xml:space="preserve">
          <source>Backreferences in substitutions use &quot;$&quot; rather than &quot;\&quot;.</source>
          <target state="translated">Las referencias en las sustituciones usan &quot;$&quot; en lugar de &quot;\&quot;.</target>
        </trans-unit>
        <trans-unit id="c5cf510bfb36856574ecae34fa00822be8b9c589" translate="yes" xml:space="preserve">
          <source>Backslash Sequences</source>
          <target state="translated">Secuencias de barra invertida</target>
        </trans-unit>
        <trans-unit id="db35629fab3798cdd79f1bf42fa413127bebc425" translate="yes" xml:space="preserve">
          <source>Backslash is used, as usual, to escape the next character.</source>
          <target state="translated">La barra invertida se utiliza,como de costumbre,para escapar del siguiente personaje.</target>
        </trans-unit>
        <trans-unit id="046c786ef212957156a16429eb6f369b2064b79d" translate="yes" xml:space="preserve">
          <source>Backslash sequence character classes cannot form one of the endpoints of a range. Thus, you can't say:</source>
          <target state="translated">Las clases de caracteres de secuencia de barra invertida no pueden formar uno de los puntos finales de un rango.Por lo tanto,no se puede decir:</target>
        </trans-unit>
        <trans-unit id="9900e3acb0e0a2eba6b592f80668e5cc6828f6c1" translate="yes" xml:space="preserve">
          <source>Backslash sequences</source>
          <target state="translated">Secuencias de retroceso</target>
        </trans-unit>
        <trans-unit id="c61c0b16c1836e4070c1986f40a121b830a65cf5" translate="yes" xml:space="preserve">
          <source>Backslashed characters are either replaced with corresponding literal strings (as with &lt;code&gt;\{&lt;/code&gt;), or else they generate special nodes in the finite automaton (as with &lt;code&gt;\b&lt;/code&gt; ). Characters special to the RE engine (such as &lt;code&gt;|&lt;/code&gt;) generate corresponding nodes or groups of nodes. &lt;code&gt;(?#...)&lt;/code&gt; comments are ignored. All the rest is either converted to literal strings to match, or else is ignored (as is whitespace and &lt;code&gt;#&lt;/code&gt; -style comments if &lt;code&gt;/x&lt;/code&gt; is present).</source>
          <target state="translated">Los caracteres con barra invertida se reemplazan con cadenas literales correspondientes (como con &lt;code&gt;\{&lt;/code&gt; ), o bien generan nodos especiales en el aut&amp;oacute;mata finito (como con &lt;code&gt;\b&lt;/code&gt; ). Los caracteres especiales del motor RE (como &lt;code&gt;|&lt;/code&gt; ) generan los nodos o grupos de nodos correspondientes. &lt;code&gt;(?#...)&lt;/code&gt; los comentarios se ignoran. Todo el resto se convierte en cadenas literales para que coincidan, o bien se ignora (al igual que los espacios en blanco y los comentarios de estilo &lt;code&gt;#&lt;/code&gt; si &lt;code&gt;/x&lt;/code&gt; est&amp;aacute; presente).</target>
        </trans-unit>
        <trans-unit id="396b0c95d21c97a92647624c67163f81645740c9" translate="yes" xml:space="preserve">
          <source>Backslashed metacharacters in Perl are alphanumeric, such as &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\n&lt;/code&gt; . Unlike some other regular expression languages, there are no backslashed symbols that aren't alphanumeric. So anything that looks like \\, \(, \), \[, \], \{, or \} is always interpreted as a literal character, not a metacharacter. This was once used in a common idiom to disable or quote the special meanings of regular expression metacharacters in a string that you want to use for a pattern. Simply quote all non-&quot;word&quot; characters:</source>
          <target state="translated">Los metacaracteres con barra invertida en Perl son alfanum&amp;eacute;ricos, como &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\n&lt;/code&gt; . A diferencia de otros lenguajes de expresi&amp;oacute;n regular, no hay s&amp;iacute;mbolos con barra invertida que no sean alfanum&amp;eacute;ricos. Entonces, cualquier cosa que se parezca a \\, \ (, \), \ [, \], \ {o \} siempre se interpreta como un car&amp;aacute;cter literal, no como un metacar&amp;aacute;cter. Esto se us&amp;oacute; una vez en un idioma com&amp;uacute;n para deshabilitar o citar los significados especiales de los metacaracteres de expresi&amp;oacute;n regular en una cadena que desea usar para un patr&amp;oacute;n. Simplemente cite todos los caracteres que no sean &quot;palabras&quot;:</target>
        </trans-unit>
        <trans-unit id="5ad3bd6856b2f78166ba432a9cdf4da8413a4090" translate="yes" xml:space="preserve">
          <source>Backslashes parentheses &lt;code&gt;()&lt;/code&gt; in command line arguments. Doesn't handle recursive Makefile &lt;code&gt;$(...)&lt;/code&gt; constructs, but handles simple ones.</source>
          <target state="translated">Barra invertida entre par&amp;eacute;ntesis &lt;code&gt;()&lt;/code&gt; en los argumentos de la l&amp;iacute;nea de comandos. No maneja construcciones recursivas Makefile &lt;code&gt;$(...)&lt;/code&gt; , pero maneja construcciones simples.</target>
        </trans-unit>
        <trans-unit id="8ef1c0d1318e1460dedacce3731d309fc7ffbb8a" translate="yes" xml:space="preserve">
          <source>Backticks &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;) with the command which contains redirection or shell meta-characters;</source>
          <target state="translated">Backticks &lt;code&gt;``&lt;/code&gt; (ver &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;Operadores de E / S en perlop&lt;/a&gt; ) con el comando que contiene metacaracteres de redirecci&amp;oacute;n o shell;</target>
        </trans-unit>
        <trans-unit id="6e2b605f65ba36a3d929c62881915b96a794f8f1" translate="yes" xml:space="preserve">
          <source>Backticks create a subprocess, and pass the enclosed string to it for execution as a DCL command. Since the subprocess is created directly via &lt;code&gt;lib$spawn()&lt;/code&gt; , any valid DCL command string may be specified.</source>
          <target state="translated">Las comillas invertidas crean un subproceso y le pasan la cadena adjunta para que se ejecute como un comando DCL. Dado que el subproceso se crea directamente a trav&amp;eacute;s de &lt;code&gt;lib$spawn()&lt;/code&gt; , se puede especificar cualquier cadena de comando DCL v&amp;aacute;lida.</target>
        </trans-unit>
        <trans-unit id="34532d18ad2d0f70e2d7b957fabc96ee06bc62fe" translate="yes" xml:space="preserve">
          <source>Backtracking</source>
          <target state="translated">Backtracking</target>
        </trans-unit>
        <trans-unit id="6e522c194b60635ece31d387544d1195051e629c" translate="yes" xml:space="preserve">
          <source>Backtracking control verbs</source>
          <target state="translated">Retroceder los verbos de control</target>
        </trans-unit>
        <trans-unit id="14496432005368ea983df3ea81b1252443b8ee8b" translate="yes" xml:space="preserve">
          <source>Backtracking during the relentless search for a match may be a waste of time, particularly when the match is bound to fail. Consider the simple pattern</source>
          <target state="translated">Retroceder durante la búsqueda implacable de una coincidencia puede ser una pérdida de tiempo,especialmente cuando la coincidencia está destinada a fallar.Considere el simple patrón</target>
        </trans-unit>
        <trans-unit id="0bce7971052281b2bb5edb4f3a21f79dd6904b31" translate="yes" xml:space="preserve">
          <source>Backtracking is more efficient than repeated tries with different regular expressions. If there are several regular expressions and a match with any of them is acceptable, then it is possible to combine them into a set of alternatives. If the individual expressions are input data, this can be done by programming a join operation. We'll exploit this idea in an improved version of the &lt;code&gt;simple_grep&lt;/code&gt; program: a program that matches multiple patterns:</source>
          <target state="translated">El retroceso es m&amp;aacute;s eficiente que los intentos repetidos con diferentes expresiones regulares. Si hay varias expresiones regulares y una coincidencia con alguna de ellas es aceptable, entonces es posible combinarlas en un conjunto de alternativas. Si las expresiones individuales son datos de entrada, esto se puede hacer programando una operaci&amp;oacute;n de combinaci&amp;oacute;n. Aprovecharemos esta idea en una versi&amp;oacute;n mejorada del programa &lt;code&gt;simple_grep&lt;/code&gt; : un programa que coincide con m&amp;uacute;ltiples patrones:</target>
        </trans-unit>
        <trans-unit id="fd4a1f65749d89056abcaeac3722a7b7a8fe75a1" translate="yes" xml:space="preserve">
          <source>Backward Compatibility</source>
          <target state="translated">Compatibilidad con el pasado</target>
        </trans-unit>
        <trans-unit id="23a7808b48afc84b0dceb9136590ca7bfdbb9b77" translate="yes" xml:space="preserve">
          <source>Backward compatibility</source>
          <target state="translated">Compatibilidad inversa</target>
        </trans-unit>
        <trans-unit id="ec09211f4889a2c8a77bac08067eb8783a4cd974" translate="yes" xml:space="preserve">
          <source>Backward compatible boilerplate</source>
          <target state="translated">Placa de calderas compatible con el pasado</target>
        </trans-unit>
        <trans-unit id="8fd78925dba59eef91afba0cdabe923520e5ee69" translate="yes" xml:space="preserve">
          <source>Backwards compatibility</source>
          <target state="translated">Rétrocompatibilité</target>
        </trans-unit>
        <trans-unit id="9cec2366e742bda57450610acf903181d2989bf8" translate="yes" xml:space="preserve">
          <source>Bad example:</source>
          <target state="translated">Mal ejemplo:</target>
        </trans-unit>
        <trans-unit id="55cc23ba5301ba2564daa62213188ebb8c917e57" translate="yes" xml:space="preserve">
          <source>Bailout result token.</source>
          <target state="translated">Un resultado de rescate simbólico.</target>
        </trans-unit>
        <trans-unit id="c9c7caaefe38d5bc0e42cffe87236c93a6e055ee" translate="yes" xml:space="preserve">
          <source>Bal&amp;aacute;zs Szab&amp;oacute; (dLux), dlux@kapu.hu</source>
          <target state="translated">Bal&amp;aacute;zs Szab&amp;oacute; (dLux), dlux@kapu.hu</target>
        </trans-unit>
        <trans-unit id="528dadc6eada08b37b8564a84bbd615fedfa3a6d" translate="yes" xml:space="preserve">
          <source>Bar.pm</source>
          <target state="translated">Bar.pm</target>
        </trans-unit>
        <trans-unit id="991cc000e0ed51287d06994419ec5b5150b2fbbf" translate="yes" xml:space="preserve">
          <source>Bar.xs</source>
          <target state="translated">Bar.xs</target>
        </trans-unit>
        <trans-unit id="4d1ae41c7e90ad9133f0cec4b012d051f81574f4" translate="yes" xml:space="preserve">
          <source>Barewords</source>
          <target state="translated">Barewords</target>
        </trans-unit>
        <trans-unit id="6be542a3a79d103a3744357ed20ec40db010c97c" translate="yes" xml:space="preserve">
          <source>Barewords are not covered by overloaded string constants.</source>
          <target state="translated">Las palabras clave no están cubiertas por constantes de cadena sobrecargadas.</target>
        </trans-unit>
        <trans-unit id="a58b8ede3c3c15995119146605014af774c7bcd7" translate="yes" xml:space="preserve">
          <source>Base Class for IO::Compress modules</source>
          <target state="translated">Clase base para IO::Módulos de compresión</target>
        </trans-unit>
        <trans-unit id="1aecc52f6145193c99cc41e745488c8d94f4db0b" translate="yes" xml:space="preserve">
          <source>Base Class for IO::Uncompress modules</source>
          <target state="translated">Clase base para IO::Módulos de descompresión</target>
        </trans-unit>
        <trans-unit id="9410f6a2867439548603d6c52d5c59ef4562fa7b" translate="yes" xml:space="preserve">
          <source>Base Structures</source>
          <target state="translated">Estructuras de base</target>
        </trans-unit>
        <trans-unit id="082fae7b28f65e5cb911e0f3f3f15b07bb66cbb1" translate="yes" xml:space="preserve">
          <source>Base class definitions for tied handles</source>
          <target state="translated">Definiciones de clase base para asas atadas</target>
        </trans-unit>
        <trans-unit id="007ee9121a8b9e57fcd866ceebd36b23a00f0fde" translate="yes" xml:space="preserve">
          <source>Base class definitions for tied hashes</source>
          <target state="translated">Definiciones de clase base para los hashes atados</target>
        </trans-unit>
        <trans-unit id="b6b455ad8f579493b53af2265bc184f2ba6c6cbb" translate="yes" xml:space="preserve">
          <source>Base class definitions for tied scalars</source>
          <target state="translated">Definiciones de clase base para los escalares atados</target>
        </trans-unit>
        <trans-unit id="9cae4a150d12d8ffc0b3fa77692959a6c4bfb799" translate="yes" xml:space="preserve">
          <source>Base class for ALL classes (blessed references)</source>
          <target state="translated">Clase base para TODAS las clases (benditas referencias)</target>
        </trans-unit>
        <trans-unit id="35cd310da77bd29a53a2d4932d2eb92ae62a2b7e" translate="yes" xml:space="preserve">
          <source>Base class for CPAN shell extensions</source>
          <target state="translated">Clase de base para las extensiones de los proyectiles CPAN</target>
        </trans-unit>
        <trans-unit id="c3e0f91a5e302404f6913115b1263f4db4575024" translate="yes" xml:space="preserve">
          <source>Base class for ExtUtils::Constant objects</source>
          <target state="translated">Clase base para las Extintas::Objetos constantes</target>
        </trans-unit>
        <trans-unit id="5ce69fa0ba6f632f7e9c5c2e2e7602e063a7c7a9" translate="yes" xml:space="preserve">
          <source>Base class for TAP source iterators</source>
          <target state="translated">Clase base para los iteradores de la fuente TAP</target>
        </trans-unit>
        <trans-unit id="37eb343993cd16220ab0f185a716f5c376429394" translate="yes" xml:space="preserve">
          <source>Base class for TAP::Parser output objects</source>
          <target state="translated">Clase base para TAP::Objetos de salida del analizador</target>
        </trans-unit>
        <trans-unit id="b8befc5059605409ade42b4d099e397b207c906b" translate="yes" xml:space="preserve">
          <source>Base class for creating POD filters and translators</source>
          <target state="translated">Clase base para crear filtros y traductores POD</target>
        </trans-unit>
        <trans-unit id="78eefd2e412b4d4df740ff4fbfcce92bad174022" translate="yes" xml:space="preserve">
          <source>Base class for different TAP source handlers</source>
          <target state="translated">Clase base para diferentes manejadores de fuentes TAP</target>
        </trans-unit>
        <trans-unit id="e4dfc8dbeda31aa613f1ab98bcf6af5cdb80223d" translate="yes" xml:space="preserve">
          <source>Base class for harness output delegates</source>
          <target state="translated">Clase base para los delegados de salida del arnés</target>
        </trans-unit>
        <trans-unit id="7a74e67740b1a1d00bee0be3088f31fbc10821ea" translate="yes" xml:space="preserve">
          <source>Base class for test modules</source>
          <target state="translated">Clase base para los módulos de prueba</target>
        </trans-unit>
        <trans-unit id="78996d2c61d5e3e13d981dd6371495a7dc1b0695" translate="yes" xml:space="preserve">
          <source>Base class for tied arrays</source>
          <target state="translated">Clase base para matrices atadas</target>
        </trans-unit>
        <trans-unit id="8811ba419e75aa7afad3c58a4392ff34e2f70b65" translate="yes" xml:space="preserve">
          <source>Base class that provides common functionality to &lt;a href=&quot;tap/parser&quot;&gt;TAP::Parser&lt;/a&gt;</source>
          <target state="translated">Clase base que proporciona una funcionalidad com&amp;uacute;n a &lt;a href=&quot;tap/parser&quot;&gt;TAP :: Parser&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0808d28ca43c79c7220c0b66b8832ca8877ecfdc" translate="yes" xml:space="preserve">
          <source>Base class that provides common functionality to all &lt;code&gt;TAP::*&lt;/code&gt; modules</source>
          <target state="translated">Clase base que proporciona una funcionalidad com&amp;uacute;n a todos los m&amp;oacute;dulos &lt;code&gt;TAP::*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a76be2c1588f2035fb74a3a61c2be909fdefa70" translate="yes" xml:space="preserve">
          <source>Base for Pod::Perldoc formatters</source>
          <target state="translated">Base para el Pod::Formateadores de Perldoc</target>
        </trans-unit>
        <trans-unit id="2291e71c9ac6320d0a4640a773f789651e805f6a" translate="yes" xml:space="preserve">
          <source>Based on Stevan Little's &lt;a href=&quot;http://search.cpan.org/perldoc/Class::C3&quot;&gt;Class::C3&lt;/a&gt;</source>
          <target state="translated">Basado en la &lt;a href=&quot;http://search.cpan.org/perldoc/Class::C3&quot;&gt;clase de&lt;/a&gt; Stevan Little : C3</target>
        </trans-unit>
        <trans-unit id="560c120ffa51ce8d2dc3b95d35311dd465a3c278" translate="yes" xml:space="preserve">
          <source>Based on code for &lt;b&gt;Pod::Text::pod2text()&lt;/b&gt; written by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</source>
          <target state="translated">Basado en el c&amp;oacute;digo de &lt;b&gt;Pod :: Text :: pod2text ()&lt;/b&gt; escrito por Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="25b805dbff71baab76550b6af4db1656526ccb89" translate="yes" xml:space="preserve">
          <source>Based on code for &lt;b&gt;Pod::Text::pod2text(1)&lt;/b&gt; written by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</source>
          <target state="translated">Basado en el c&amp;oacute;digo de &lt;b&gt;Pod :: Text :: pod2text (1)&lt;/b&gt; escrito por Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b781efd9c14a9bf17ea0a940b2c65ad0a21bc5c6" translate="yes" xml:space="preserve">
          <source>Based on code for &lt;b&gt;Pod::Text&lt;/b&gt; written by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</source>
          <target state="translated">Basado en el c&amp;oacute;digo de &lt;b&gt;Pod :: Texto&lt;/b&gt; escrito por Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d91768d646bf2b1ba37683cf7ff89c9b306d5b4f" translate="yes" xml:space="preserve">
          <source>Based on code for &lt;b&gt;pod2text(1)&lt;/b&gt; written by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</source>
          <target state="translated">Basado en el c&amp;oacute;digo para &lt;b&gt;pod2text (1)&lt;/b&gt; escrito por Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e809a71bc55e573d735398064fa73868c841b25e" translate="yes" xml:space="preserve">
          <source>Based on code for &lt;b&gt;pod2text&lt;/b&gt; written by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</source>
          <target state="translated">Basado en c&amp;oacute;digo para &lt;b&gt;pod2text&lt;/b&gt; escrito por Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="23082a2ee1ef553f8b8e9cc56e439b97636f01bf" translate="yes" xml:space="preserve">
          <source>Based on code written by Shigio Yamaguchi.</source>
          <target state="translated">Basado en el código escrito por Shigio Yamaguchi.</target>
        </trans-unit>
        <trans-unit id="8e0d5bb83e47c2192346afc47fe774052eb51e39" translate="yes" xml:space="preserve">
          <source>Based on example that was initially added to MIME::QuotedPrint.pm for the 5.8.0 distribution of Perl.</source>
          <target state="translated">Basado en el ejemplo que se añadió inicialmente a MIME::QuotedPrint.pm para la distribución 5.8.0 de Perl.</target>
        </trans-unit>
        <trans-unit id="a800ab4559098c87aba7a8e90188704683d129b8" translate="yes" xml:space="preserve">
          <source>Based on ideas from Tim Bunce &amp;lt;&lt;code&gt;Tim.Bunce@ig.co.uk&lt;/code&gt; &amp;gt; and</source>
          <target state="translated">Basado en ideas de Tim Bunce &amp;lt; &lt;code&gt;Tim.Bunce@ig.co.uk&lt;/code&gt; &amp;gt; y</target>
        </trans-unit>
        <trans-unit id="ef4b57022699f0d3f5da98a8d57cddc66db361df" translate="yes" xml:space="preserve">
          <source>Based on the &lt;code&gt;:perlio&lt;/code&gt; layer.</source>
          <target state="translated">Basado en la capa &lt;code&gt;:perlio&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6189eca4d6c06b60af97bb9ce0c1f1fc615c134d" translate="yes" xml:space="preserve">
          <source>Based on the &lt;code&gt;ExtUtils::xsubpp&lt;/code&gt; code by Larry Wall and the Perl 5 Porters, which was released under the same license terms.</source>
          <target state="translated">Basado en el c&amp;oacute;digo &lt;code&gt;ExtUtils::xsubpp&lt;/code&gt; de Larry Wall y Perl 5 Porters, que fue lanzado bajo los mismos t&amp;eacute;rminos de licencia.</target>
        </trans-unit>
        <trans-unit id="da8636da22477810e470724d83ddc721d3335da8" translate="yes" xml:space="preserve">
          <source>Based on the Glossary of</source>
          <target state="translated">Basado en el Glosario de</target>
        </trans-unit>
        <trans-unit id="f28c9a8ac3d744f82801c7cfbb9de24801e7c563" translate="yes" xml:space="preserve">
          <source>Based on xsubpp code, written by Larry Wall.</source>
          <target state="translated">Basado en el código xsubpp,escrito por Larry Wall.</target>
        </trans-unit>
        <trans-unit id="02905231fdcd4472df63f80b291fb153344c31cd" translate="yes" xml:space="preserve">
          <source>Basic BLOCKs</source>
          <target state="translated">BLOQUES BÁSICOS</target>
        </trans-unit>
        <trans-unit id="901e56ace2d31ac4485efe2aa588116787957443" translate="yes" xml:space="preserve">
          <source>Basic IO operations</source>
          <target state="translated">Operaciones IO básicas</target>
        </trans-unit>
        <trans-unit id="8422cb1795fcef709d3e089320f56308fec39046" translate="yes" xml:space="preserve">
          <source>Basic Multilingual Plane</source>
          <target state="translated">Plano básico multilingüe</target>
        </trans-unit>
        <trans-unit id="ccecd116866361404babdb87c039096fbb71e99c" translate="yes" xml:space="preserve">
          <source>Basic Structure</source>
          <target state="translated">Estructura básica</target>
        </trans-unit>
        <trans-unit id="39bbc4bee9f4a75c10797a6d328f733ea1124880" translate="yes" xml:space="preserve">
          <source>Basic Thread Support</source>
          <target state="translated">Soporte de hilo básico</target>
        </trans-unit>
        <trans-unit id="17f89c170a632afd0c0b0383dacf728c05a89851" translate="yes" xml:space="preserve">
          <source>Basic Utilities for Programmers</source>
          <target state="translated">Utilidades básicas para los programadores</target>
        </trans-unit>
        <trans-unit id="148d2121cd077901af2d5cbf9aa363677304a06b" translate="yes" xml:space="preserve">
          <source>Basic commands:</source>
          <target state="translated">Comandos básicos:</target>
        </trans-unit>
        <trans-unit id="7308cb8418c068204c128968b5967fdf3606cc09" translate="yes" xml:space="preserve">
          <source>Basic methods</source>
          <target state="translated">Métodos básicos</target>
        </trans-unit>
        <trans-unit id="874d9df75ebdafc19870b90059bb69c04cb1fce7" translate="yes" xml:space="preserve">
          <source>Basic read operation.</source>
          <target state="translated">Operación de lectura básica.</target>
        </trans-unit>
        <trans-unit id="c4901220ad10be08f037f204182ab7f0bb55ef8b" translate="yes" xml:space="preserve">
          <source>Basic semaphores</source>
          <target state="translated">Semáforos básicos</target>
        </trans-unit>
        <trans-unit id="cf61d93532db2a473529a2856c70f230829513f8" translate="yes" xml:space="preserve">
          <source>Basic syntax overview</source>
          <target state="translated">Resumen de la sintaxis básica</target>
        </trans-unit>
        <trans-unit id="ce7944aa05e48b110f9c5b8903d70aed90358355" translate="yes" xml:space="preserve">
          <source>Basic utilities for writing tests.</source>
          <target state="translated">Utilidades básicas para los exámenes de escritura.</target>
        </trans-unit>
        <trans-unit id="62b9ac85afbcfa7bd7a8e867b1f51756e30ca7d7" translate="yes" xml:space="preserve">
          <source>Basic write operation.</source>
          <target state="translated">Operación de escritura básica.</target>
        </trans-unit>
        <trans-unit id="04e2b1373d1c985716d261c139c35de4bc421d62" translate="yes" xml:space="preserve">
          <source>Basically, Intel and VAX CPUs are little-endian, while everybody else, including Motorola m68k/88k, PPC, Sparc, HP PA, Power, and Cray, are big-endian. Alpha and MIPS can be either: Digital/Compaq uses (well, used) them in little-endian mode, but SGI/Cray uses them in big-endian mode.</source>
          <target state="translated">Básicamente,las CPUs Intel y VAX son little-endian,mientras que todas las demás,incluyendo las Motorola m68k/88k,PPC,Sparc,HP PA,Power y Cray,son big-endian.Alfa y MIPS pueden ser cualquiera de ellas:Digital/Compaq los usa (bueno,los usa)en modo little-endian,pero SGI/Cray los usa en modo big-endian.</target>
        </trans-unit>
        <trans-unit id="1f10fe5797c3d1f7733a7eb604c9de17cf9d91ac" translate="yes" xml:space="preserve">
          <source>Basically, you fetch individual results from the TAP. The six types, with examples of each, are as follows:</source>
          <target state="translated">Básicamente,se obtienen resultados individuales del TAP.Los seis tipos,con ejemplos de cada uno,son los siguientes:</target>
        </trans-unit>
        <trans-unit id="3764ce6b277261088796ef6723dbaafdda0e32f0" translate="yes" xml:space="preserve">
          <source>Be aware of two important points:</source>
          <target state="translated">Tenga en cuenta dos puntos importantes:</target>
        </trans-unit>
        <trans-unit id="e4436a305cd04dc72f8078b037e6c2a662f1fa1d" translate="yes" xml:space="preserve">
          <source>Be aware that all filenames returned from File::Glob are tainted.</source>
          <target state="translated">Tengan en cuenta que todos los nombres de archivo devueltos de File::Glob están contaminados.</target>
        </trans-unit>
        <trans-unit id="60f217633ac67f75e40713203caa69acc0ee5347" translate="yes" xml:space="preserve">
          <source>Be aware that setting &lt;code&gt;@DB::args&lt;/code&gt; is</source>
          <target state="translated">Tenga en cuenta que la configuraci&amp;oacute;n de &lt;code&gt;@DB::args&lt;/code&gt; es</target>
        </trans-unit>
        <trans-unit id="667b9a553537bba23ef30dd15f8a2bf40c9a72d6" translate="yes" xml:space="preserve">
          <source>Be aware that the digest routines silently convert UTF-8 input into its equivalent byte sequence in the native encoding (cf. utf8::downgrade). This side effect influences only the way Perl stores the data internally, but otherwise leaves the actual value of the data intact.</source>
          <target state="translated">Tenga en cuenta que las rutinas de digestión convierten silenciosamente la entrada UTF-8 en su secuencia de bytes equivalente en la codificación nativa (cf.utf8::downgrade).Este efecto secundario sólo influye en la forma en que Perl almacena los datos internamente,pero por lo demás deja intacto el valor real de los datos.</target>
        </trans-unit>
        <trans-unit id="167d28f752fc336f0724d4becf42fb8c17cf60ad" translate="yes" xml:space="preserve">
          <source>Be aware that the file's type/creator and resource fork will be lost, which is usually what you want in cross-platform archives.</source>
          <target state="translated">Tenga en cuenta que el tipo/creador del archivo y la horquilla de recursos se perderán,que suele ser lo que se quiere en los archivos multiplataforma.</target>
        </trans-unit>
        <trans-unit id="2a627d6aeb5bb9832269cd11d71094ebccabe8d0" translate="yes" xml:space="preserve">
          <source>Be aware that the main value of this module is its simplicity. Note that there are already more ambitious modules out there, such as &lt;a href=&quot;test/more&quot;&gt;Test::More&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Unit&quot;&gt;Test::Unit&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que el principal valor de este m&amp;oacute;dulo es su simplicidad. Tenga en cuenta que ya existen m&amp;oacute;dulos m&amp;aacute;s ambiciosos, como &lt;a href=&quot;test/more&quot;&gt;Test :: More&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Unit&quot;&gt;Test :: Unit&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31de5d87ee0c0608b86806f39ac15e28011be167" translate="yes" xml:space="preserve">
          <source>Be aware that the optimizer might have optimized call frames away before &lt;code&gt;&lt;a href=&quot;caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; had a chance to get the information. That means that &lt;code&gt;&lt;a href=&quot;caller&quot;&gt;caller(N)&lt;/a&gt;&lt;/code&gt; might not return information about the call frame you expect it to, for &lt;code&gt;N &amp;gt; 1&lt;/code&gt; . In particular, &lt;code&gt;@DB::args&lt;/code&gt; might have information from the previous time &lt;code&gt;&lt;a href=&quot;caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; was called.</source>
          <target state="translated">Tenga en cuenta que el optimizador podr&amp;iacute;a haber optimizado los marcos de &lt;code&gt;&lt;a href=&quot;caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; antes de que la persona que llama tuviera la oportunidad de obtener la informaci&amp;oacute;n. Eso significa que es posible que la &lt;code&gt;&lt;a href=&quot;caller&quot;&gt;caller(N)&lt;/a&gt;&lt;/code&gt; que llama (N) no devuelva informaci&amp;oacute;n sobre el marco de llamada que espera, para &lt;code&gt;N &amp;gt; 1&lt;/code&gt; . En particular, &lt;code&gt;@DB::args&lt;/code&gt; puede tener informaci&amp;oacute;n de la &amp;uacute;ltima vez que se llam&amp;oacute; al &lt;code&gt;&lt;a href=&quot;caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="956f008e111339a547685e28f223bd6fbcba83d9" translate="yes" xml:space="preserve">
          <source>Be aware that the optimizer might have optimized call frames away before &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; had a chance to get the information. That means that &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller(N)&lt;/a&gt;&lt;/code&gt; might not return information about the call frame you expect it to, for &lt;code&gt;N &amp;gt; 1&lt;/code&gt; . In particular, &lt;code&gt;@DB::args&lt;/code&gt; might have information from the previous time &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; was called.</source>
          <target state="translated">Tenga en cuenta que el optimizador podr&amp;iacute;a haber optimizado los marcos de &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; antes de que la persona que llama tuviera la oportunidad de obtener la informaci&amp;oacute;n. Eso significa que es posible que la &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller(N)&lt;/a&gt;&lt;/code&gt; que llama (N) no devuelva informaci&amp;oacute;n sobre el marco de llamada que espera, para &lt;code&gt;N &amp;gt; 1&lt;/code&gt; . En particular, &lt;code&gt;@DB::args&lt;/code&gt; puede tener informaci&amp;oacute;n de la &amp;uacute;ltima vez que se llam&amp;oacute; al &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd6d74606bcc17d1eb7f4b9d0cbb233b2fce04be" translate="yes" xml:space="preserve">
          <source>Be aware that the option to follow symbolic links can be dangerous. Depending on the structure of the directory tree (including symbolic links to directories) you might traverse a given (physical) directory more than once (only if &lt;code&gt;follow_fast&lt;/code&gt; is in effect). Furthermore, deleting or changing files in a symbolically linked directory might cause very unpleasant surprises, since you delete or change files in an unknown directory.</source>
          <target state="translated">Tenga en cuenta que la opci&amp;oacute;n de seguir enlaces simb&amp;oacute;licos puede ser peligrosa. Dependiendo de la estructura del &amp;aacute;rbol de directorios (incluidos los enlaces simb&amp;oacute;licos a directorios), puede atravesar un directorio (f&amp;iacute;sico) determinado m&amp;aacute;s de una vez (solo si &lt;code&gt;follow_fast&lt;/code&gt; est&amp;aacute; en vigor). Adem&amp;aacute;s, eliminar o cambiar archivos en un directorio vinculado simb&amp;oacute;licamente puede causar sorpresas muy desagradables, ya que elimina o cambia archivos en un directorio desconocido.</target>
        </trans-unit>
        <trans-unit id="b81ba14d3ce3de8180275845ca38e42a572b2c9a" translate="yes" xml:space="preserve">
          <source>Be aware that these operations are full Unix forks, which means they may not be correctly implemented on all alien systems.</source>
          <target state="translated">Tenga en cuenta que estas operaciones son bifurcaciones completas de Unix,lo que significa que pueden no estar correctamente implementadas en todos los sistemas alienígenas.</target>
        </trans-unit>
        <trans-unit id="6dac6d64c1feff1fddea48f799c315f06283805b" translate="yes" xml:space="preserve">
          <source>Be aware that, when using this option, the input encoding of your POD source must be properly declared unless it is US-ASCII or Latin-1. POD input without an &lt;code&gt;=encoding&lt;/code&gt; command will be assumed to be in Latin-1, and if it's actually in UTF-8, the output will be double-encoded. See</source>
          <target state="translated">Tenga en cuenta que, al usar esta opci&amp;oacute;n, la codificaci&amp;oacute;n de entrada de su fuente POD debe declararse correctamente a menos que sea US-ASCII o Latin-1. Se supondr&amp;aacute; que la entrada de POD sin un comando de &lt;code&gt;=encoding&lt;/code&gt; est&amp;aacute; en Latin-1, y si realmente est&amp;aacute; en UTF-8, la salida tendr&amp;aacute; doble codificaci&amp;oacute;n. Ver</target>
        </trans-unit>
        <trans-unit id="8e54fdab18656cd50e15f88c4bd2cd505cbcafa9" translate="yes" xml:space="preserve">
          <source>Be aware, moreover, that even among Unix-ish systems there are variations.</source>
          <target state="translated">Tenga en cuenta,además,que incluso entre los sistemas de tipo Unix hay variaciones.</target>
        </trans-unit>
        <trans-unit id="56eaa37568b649078a87e40ea7bc8697501ac281" translate="yes" xml:space="preserve">
          <source>Be careful about the syntax,</source>
          <target state="translated">Tengan cuidado con la sintaxis,</target>
        </trans-unit>
        <trans-unit id="b3f347eeb5e9dd5ad6442952b1aeb5c318d4fa11" translate="yes" xml:space="preserve">
          <source>Be careful if you put double quotes around the picture, because an &lt;code&gt;@&lt;/code&gt; character may be taken to mean the beginning of an array name. &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; always returns true. See &lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt; for other examples.</source>
          <target state="translated">Tenga cuidado si coloca comillas dobles alrededor de la imagen, porque un car&amp;aacute;cter &lt;code&gt;@&lt;/code&gt; puede interpretarse como el comienzo de un nombre de matriz. &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; siempre devuelve verdadero. Vea &lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt; para otros ejemplos.</target>
        </trans-unit>
        <trans-unit id="6906a7867a27a79ea2a227d91624d262e203f04e" translate="yes" xml:space="preserve">
          <source>Be careful if you put double quotes around the picture, because an &lt;code&gt;@&lt;/code&gt; character may be taken to mean the beginning of an array name. &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; always returns true. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; for other examples.</source>
          <target state="translated">Tenga cuidado si coloca comillas dobles alrededor de la imagen, porque un car&amp;aacute;cter &lt;code&gt;@&lt;/code&gt; puede interpretarse como el comienzo de un nombre de matriz. &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; siempre devuelve verdadero. Vea &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; para otros ejemplos.</target>
        </trans-unit>
        <trans-unit id="a9293d7623c3a63a2528c6144b0e2f16fd9c21b7" translate="yes" xml:space="preserve">
          <source>Be careful in the tests you supply with your module or programs. Module code may be fully portable, but its tests might not be. This often happens when tests spawn off other processes or call external programs to aid in the testing, or when (as noted above) the tests assume certain things about the filesystem and paths. Be careful not to depend on a specific output style for errors, such as when checking &lt;code&gt;$!&lt;/code&gt; after a failed system call. Using &lt;code&gt;$!&lt;/code&gt; for anything else than displaying it as output is doubtful (though see the &lt;code&gt;Errno&lt;/code&gt; module for testing reasonably portably for error value). Some platforms expect a certain output format, and Perl on those platforms may have been adjusted accordingly. Most specifically, don't anchor a regex when testing an error value.</source>
          <target state="translated">Tenga cuidado en las pruebas que proporciona con su m&amp;oacute;dulo o programas. El c&amp;oacute;digo del m&amp;oacute;dulo puede ser completamente port&amp;aacute;til, pero sus pruebas pueden no serlo. Esto sucede a menudo cuando las pruebas generan otros procesos o llaman a programas externos para ayudar en las pruebas, o cuando (como se indic&amp;oacute; anteriormente) las pruebas asumen ciertas cosas sobre el sistema de archivos y las rutas. Tenga cuidado de no depender de un estilo de salida espec&amp;iacute;fico para errores, como cuando se comprueba &lt;code&gt;$!&lt;/code&gt; despu&amp;eacute;s de una llamada al sistema fallida. Usando &lt;code&gt;$!&lt;/code&gt; para cualquier otra cosa que no sea mostrarlo como salida es dudoso (aunque vea el m&amp;oacute;dulo &lt;code&gt;Errno&lt;/code&gt; para probar razonablemente el valor de error). Algunas plataformas esperan un determinado formato de salida y es posible que Perl en esas plataformas se haya ajustado en consecuencia. M&amp;aacute;s espec&amp;iacute;ficamente, no ancle una expresi&amp;oacute;n regular al probar un valor de error.</target>
        </trans-unit>
        <trans-unit id="ae93e14e0d1be510a7665d0a55ac6aa4f668df14" translate="yes" xml:space="preserve">
          <source>Be careful to check that what you pass to chdir() is defined and not blank, else you might find yourself in your home directory.</source>
          <target state="translated">Ten cuidado de comprobar que lo que pasas a chdir()está definido y no en blanco,de lo contrario podrías encontrarte en tu directorio de inicio.</target>
        </trans-unit>
        <trans-unit id="c85ebb348de7431489e7e78b8e62158b4eaa9740" translate="yes" xml:space="preserve">
          <source>Be careful to check the return values from both open() and close(). If you're</source>
          <target state="translated">Ten cuidado de comprobar los valores de retorno tanto de open()como de close().Si usted está</target>
        </trans-unit>
        <trans-unit id="aee2df458bcc4bef02091d782f8436bc138473c7" translate="yes" xml:space="preserve">
          <source>Be careful to repeat this procedure every time you recompile an extension, unless you are sure the AFS installation directories are still valid.</source>
          <target state="translated">Tenga cuidado de repetir este procedimiento cada vez que recompile una extensión,a menos que esté seguro de que los directorios de instalación del AFS siguen siendo válidos.</target>
        </trans-unit>
        <trans-unit id="fe76e94f1a35b852ed4a509f3683ff3f6a306181" translate="yes" xml:space="preserve">
          <source>Be careful when using the branch reset pattern in combination with named captures. Named captures are implemented as being aliases to numbered groups holding the captures, and that interferes with the implementation of the branch reset pattern. If you are using named captures in a branch reset pattern, it's best to use the same names, in the same order, in each of the alternations:</source>
          <target state="translated">Tengan cuidado cuando usen el patrón de restablecimiento de rama en combinación con las capturas con nombre.Las capturas con nombre se implementan como alias a grupos numerados que mantienen las capturas,y eso interfiere con la implementación del patrón de restablecimiento de ramas.Si utiliza capturas con nombre en un patrón de restablecimiento de ramas,es mejor utilizar los mismos nombres,en el mismo orden,en cada una de las alternancias:</target>
        </trans-unit>
        <trans-unit id="8f8df673aaa9f753cd8e9cf23c8cbbd3b2574c49" translate="yes" xml:space="preserve">
          <source>Be careful, though, to never combine text strings with binary strings. If you need text in a binary stream, encode your text strings first using the appropriate encoding, then join them with binary strings. See also: &quot;What if I don't encode?&quot;.</source>
          <target state="translated">Pero ten cuidado de no combinar nunca cadenas de texto con cadenas binarias.Si necesitas texto en un flujo binario,codifica tus cadenas de texto primero usando la codificación apropiada,y luego únelas con cadenas binarias.Ver también:&quot;¿Qué pasa si no codifico?&quot;.</target>
        </trans-unit>
        <trans-unit id="cef4ef62c32e58e84f80436ec819bfd5a7afa02c" translate="yes" xml:space="preserve">
          <source>Be careful: qx(), system(), and some modules for calling external commands do a fork(), then wait() for the result. Thus, your signal handler will be called. Because wait() was already called by system() or qx(), the wait() in the signal handler will see no more zombies and will therefore block.</source>
          <target state="translated">Tengan cuidado:qx(),system(),y algunos módulos para llamar a comandos externos hacen un fork(),y luego esperan()por el resultado.De esta manera,su manejador de señales será llamado.Debido a que wait()ya fue llamado por system()o qx(),el wait()en el manejador de señales no verá más zombis y por lo tanto se bloqueará.</target>
        </trans-unit>
        <trans-unit id="02350f9e1a884f10cacbddf6be8d623a44b68fcb" translate="yes" xml:space="preserve">
          <source>Be consistent with existing modules.</source>
          <target state="translated">Sea coherente con los módulos existentes.</target>
        </trans-unit>
        <trans-unit id="8f9f60dfc3f60d9409a16936419f8f9c34030221" translate="yes" xml:space="preserve">
          <source>Be consistent.</source>
          <target state="translated">Sé consecuente.</target>
        </trans-unit>
        <trans-unit id="0657b8fedf171a48206a6318d37358a77e53c6fb" translate="yes" xml:space="preserve">
          <source>Be descriptive (i.e. accurately describes the purpose of the module).</source>
          <target state="translated">Ser descriptivo (es decir,describir con precisión el propósito del módulo).</target>
        </trans-unit>
        <trans-unit id="4866ce84e5913e3bbf14d1ef419eb24f1d72a52e" translate="yes" xml:space="preserve">
          <source>Be it &lt;code&gt;Compress::Zlib&lt;/code&gt; , &lt;code&gt;Apache::Request&lt;/code&gt; or any extension that has no mention of Unicode in the manpage, you need to make sure that the UTF8 flag is stripped off. Note that at the time of this writing (January 2012) the mentioned modules are not UTF-8-aware. Please check the documentation to verify if this is still true.</source>
          <target state="translated">Ya sea &lt;code&gt;Compress::Zlib&lt;/code&gt; , &lt;code&gt;Apache::Request&lt;/code&gt; o cualquier extensi&amp;oacute;n que no mencione Unicode en la p&amp;aacute;gina de manual, debe asegurarse de que el indicador UTF8 est&amp;eacute; eliminado. Tenga en cuenta que al momento de escribir este art&amp;iacute;culo (enero de 2012), los m&amp;oacute;dulos mencionados no son compatibles con UTF-8. Consulte la documentaci&amp;oacute;n para verificar si esto sigue siendo cierto.</target>
        </trans-unit>
        <trans-unit id="fec8bd9db93426cc5f677cbbc44d58f990b4ce4f" translate="yes" xml:space="preserve">
          <source>Be nice.</source>
          <target state="translated">Sé amable.</target>
        </trans-unit>
        <trans-unit id="455d700825e4b9a7601c1ce54b47786ce81ebe18" translate="yes" xml:space="preserve">
          <source>Be sure not to use a bareword as the name of a signal handler, lest you inadvertently call it.</source>
          <target state="translated">Asegúrate de no usar una palabra clave como nombre de un manejador de señales,no sea que lo llames inadvertidamente.</target>
        </trans-unit>
        <trans-unit id="adcfe790c3214b8902aa2d9bdbc7f166d3aa2497" translate="yes" xml:space="preserve">
          <source>Be sure that your yacc installation is in place including any necessary parser template files. If you have not already done so then be sure to:</source>
          <target state="translated">Asegúrate de que la instalación de tu yacc esté en su sitio incluyendo cualquier archivo de plantilla de análisis necesario.Si aún no lo ha hecho,entonces asegúrese de hacerlo:</target>
        </trans-unit>
        <trans-unit id="7a2fea634f3d3c3b87d0ddfbb5348eeeda046aad" translate="yes" xml:space="preserve">
          <source>Be sure to adequately comment your code. While commenting every line is unnecessary, anything that takes advantage of side effects of operators, that creates changes that will be felt outside of the function being patched, or that others may find confusing should be documented. If you are going to err, it is better to err on the side of adding too many comments than too few.</source>
          <target state="translated">Asegúrate de comentar adecuadamente tu código.Si bien es innecesario comentar cada línea,debe documentarse todo lo que aproveche los efectos secundarios de los operadores,que cree cambios que se sentirán fuera de la función que se está parcheando,o que otros puedan encontrar confuso.Si vas a equivocarte,es mejor equivocarse por el lado de añadir demasiados comentarios que por el de pocos.</target>
        </trans-unit>
        <trans-unit id="df103353e12184ad2bab2c528d00c711c155c484" translate="yes" xml:space="preserve">
          <source>Be sure to include the &lt;b&gt;exact&lt;/b&gt; error messages, if any. &quot;Perl gave an error&quot; is not an exact error message.</source>
          <target state="translated">Aseg&amp;uacute;rese de incluir los mensajes de error &lt;b&gt;exactos&lt;/b&gt; , si los hay. &quot;Perl dio un error&quot; no es un mensaje de error exacto.</target>
        </trans-unit>
        <trans-unit id="b5cbd612657dfbf7a92d6606e16853c43b77addf" translate="yes" xml:space="preserve">
          <source>Be sure to read &lt;a href=&quot;#ENCODING&quot;&gt;ENCODING&lt;/a&gt; if your Pod contains non-ASCII characters.</source>
          <target state="translated">Aseg&amp;uacute;rese de leer &lt;a href=&quot;#ENCODING&quot;&gt;CODIFICACI&amp;Oacute;N&lt;/a&gt; si su Pod contiene caracteres que no son ASCII.</target>
        </trans-unit>
        <trans-unit id="2984603dd54138b13d352a1e3fd61b6408be6b9f" translate="yes" xml:space="preserve">
          <source>Be sure to read the instructions near the top of the makefiles carefully.</source>
          <target state="translated">Asegúrese de leer cuidadosamente las instrucciones que se encuentran en la parte superior de los archivos.</target>
        </trans-unit>
        <trans-unit id="7f00ff2068b10342c9156aa44f6e62fb9656c3bb" translate="yes" xml:space="preserve">
          <source>Be sure to specify Perl version requirements both in Makefile.PL or Build.PL and with &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; 5.6.1&lt;/code&gt; or similar. See the section on &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; of &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; for details.</source>
          <target state="translated">Aseg&amp;uacute;rese de especificar los requisitos de la versi&amp;oacute;n de Perl en Makefile.PL o Build.PL y con &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; 5.6.1&lt;/code&gt; o similar. Consulte la secci&amp;oacute;n sobre la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; de &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; de &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="c733e8a30868a3838b1dfa41af03cf511ee097ca" translate="yes" xml:space="preserve">
          <source>Be sure to use a tar program compiled under Solaris (not SunOS 4.x) to extract the perl-5.x.x.tar.gz file. Do not use GNU tar compiled for SunOS4 on Solaris. (GNU tar compiled for Solaris should be fine.) When you run SunOS4 binaries on Solaris, the run-time system magically alters pathnames matching m#lib/locale# so that when tar tries to create lib/locale.pm, a file named lib/oldlocale.pm gets created instead. If you found this advice too late and used a SunOS4-compiled tar anyway, you must find the incorrectly renamed file and move it back to lib/locale.pm.</source>
          <target state="translated">Asegúrese de usar un programa de alquitrán compilado bajo Solaris (no SunOS 4.x)para extraer el archivo perl-5.x.x.tar.gz.No use el tar GNU compilado para SunOS4 en Solaris.(GNU tar compilado para Solaris debería estar bien.)Cuando ejecutas binarios de SunOS4 en Solaris,el sistema en tiempo de ejecución altera mágicamente las rutas que coinciden con m#lib/locale#de modo que cuando tar intenta crear lib/locale.pm,en su lugar se crea un archivo llamado lib/oldlocale.pm.Si encontraste este consejo demasiado tarde y usaste un tar compilado por SunOS4 de todos modos,debes encontrar el archivo renombrado incorrectamente y moverlo de vuelta a lib/locale.pm.</target>
        </trans-unit>
        <trans-unit id="5d818ab86968387d2a89aaa4ecb39ab429064672" translate="yes" xml:space="preserve">
          <source>Be sure to use the libraries and modules shipped with the version being tested, not those that were already installed.</source>
          <target state="translated">Asegúrese de usar las bibliotecas y módulos que se envían con la versión que se está probando,no los que ya están instalados.</target>
        </trans-unit>
        <trans-unit id="e3d356b4e65052f33c752664cb97b29222d4870b" translate="yes" xml:space="preserve">
          <source>Be very careful with Perl operations that change the value of the variable. Appending something to the variable, for instance, might require reallocation of its storage, leaving you with a pointer into no-man's land.</source>
          <target state="translated">Tenga mucho cuidado con las operaciones Perl que cambian el valor de la variable.Añadir algo a la variable,por ejemplo,podría requerir la reasignación de su almacenamiento,dejándote con un puntero en tierra de nadie.</target>
        </trans-unit>
        <trans-unit id="a9df705eca9ff235f56efac76a8ae2aff600e09f" translate="yes" xml:space="preserve">
          <source>Be warned that neither creation nor deletion of files is guaranteed to be an atomic operation over NFS. That is, two processes might both successfully create or unlink the same file! Therefore O_EXCL isn't as exclusive as you might wish.</source>
          <target state="translated">Se advierte que no se garantiza que la creación o eliminación de archivos sea una operación atómica sobre NFS.Es decir,¡dos procesos pueden crear o desvincular con éxito el mismo archivo! Por lo tanto,O_EXCL no es tan exclusivo como podría desearse.</target>
        </trans-unit>
        <trans-unit id="7184ad30ab6a73d32aaec035835bc55ad15b3389" translate="yes" xml:space="preserve">
          <source>Be warned that some formatters cannot reliably render characters outside 32-126; and many are able to handle 32-126 and 160-255, but nothing above 255.</source>
          <target state="translated">Se advierte que algunos formateadores no pueden renderizar de forma fiable los caracteres fuera de 32-126;y muchos son capaces de manejar 32-126 y 160-255,pero nada por encima de 255.</target>
        </trans-unit>
        <trans-unit id="8235118c9cdc1cd037bd4ff9c8b6234c4eceb334" translate="yes" xml:space="preserve">
          <source>Be warned that this feature is considered experimental, and may be changed without notice.</source>
          <target state="translated">Se advierte que esta característica se considera experimental,y puede ser cambiada sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="f60dd616afaa8860904852bce46c16c4c9385db0" translate="yes" xml:space="preserve">
          <source>Be warned, though, that unlike regular expressions, if the &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; template doesn't match the incoming data, Perl will scream and die.</source>
          <target state="translated">Sin embargo, tenga en cuenta que, a diferencia de las expresiones regulares, si la plantilla de &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; no coincide con los datos entrantes, Perl gritar&amp;aacute; y morir&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="f34bea745032a10b52d62f12a9de185a88d00d76" translate="yes" xml:space="preserve">
          <source>Be warned: just as the C-preprocessor doesn't know C, the Debug filter doesn't know Perl. It can be fooled quite easily:</source>
          <target state="translated">Atención:así como el preprocesador C no conoce el C,el filtro Debug no conoce el Perl.Puede ser engañado muy fácilmente:</target>
        </trans-unit>
        <trans-unit id="29bff63d2a655090d41ce27755886c450bf1e989" translate="yes" xml:space="preserve">
          <source>BeOS is BeOS.</source>
          <target state="translated">BeOS es BeOS.</target>
        </trans-unit>
        <trans-unit id="7127634cd20ce1300143c5a508c993ef4fdbd8f4" translate="yes" xml:space="preserve">
          <source>Because &quot;perlio.h&quot; is a thin layer (for efficiency) the semantics of these functions are somewhat dependent on the underlying implementation. Where these variations are understood they are noted below.</source>
          <target state="translated">Dado que &quot;perlio.h&quot; es una capa delgada (por eficiencia)la semántica de estas funciones depende en cierta medida de la aplicación subyacente.Cuando se entienden estas variaciones,se señalan a continuación.</target>
        </trans-unit>
        <trans-unit id="b63ce495f650d704c02d64d23b111efdfe40cd61" translate="yes" xml:space="preserve">
          <source>Because &lt;b&gt;perldoc&lt;/b&gt; does not run properly tainted, and is known to have security issues, when run as the superuser it will attempt to drop privileges by setting the effective and real IDs to nobody's or nouser's account, or -2 if unavailable. If it cannot relinquish its privileges, it will not run.</source>
          <target state="translated">Debido a que &lt;b&gt;perldoc&lt;/b&gt; no se ejecuta correctamente contaminado y se sabe que tiene problemas de seguridad, cuando se ejecuta como superusuario, intentar&amp;aacute; eliminar los privilegios configurando las ID efectivas y reales en la cuenta de nadie o de ning&amp;uacute;n usuario, o -2 si no est&amp;aacute; disponible. Si no puede renunciar a sus privilegios, no se ejecutar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="400d81a8582d02a7d364c167bb3655c111853cb4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;@&lt;/code&gt; trigger interpolation, you'll need to use something like &lt;code&gt;/\Quser\E\@\Qhost/&lt;/code&gt; to match them literally.</source>
          <target state="translated">Debido a que &lt;code&gt;$&lt;/code&gt; o &lt;code&gt;@&lt;/code&gt; activan la interpolaci&amp;oacute;n, necesitar&amp;aacute; usar algo como &lt;code&gt;/\Quser\E\@\Qhost/&lt;/code&gt; para hacer coincidirlos literalmente.</target>
        </trans-unit>
        <trans-unit id="b667c475fa92312c7083687d2886a12150dc73b8" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;$sv&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when the &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; operator is applied to it, the transliteration won't actually execute and the program won't &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;. This is different to how 5.8 and earlier versions behaved since the capture variables were READONLY variables then; now they'll just die when assigned to in the default engine.</source>
          <target state="translated">Debido a que &lt;code&gt;$sv&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; cuando se le aplica el operador &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; , la transliteraci&amp;oacute;n no se ejecutar&amp;aacute; realmente y el programa no &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; . Esto es diferente a c&amp;oacute;mo se comportaron 5.8 y versiones anteriores, ya que las variables de captura eran variables READONLY entonces; ahora simplemente morir&amp;aacute;n cuando se les asigne en el motor predeterminado.</target>
        </trans-unit>
        <trans-unit id="5addc5234910932f591ed79ef1118cfac8717e21" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when either operand is &lt;code&gt;NaN&lt;/code&gt; (not-a-number), be careful when sorting with a comparison function like &lt;code&gt;$a &amp;lt;=&amp;gt; $b&lt;/code&gt; any lists that might contain a &lt;code&gt;NaN&lt;/code&gt; . The following example takes advantage that &lt;code&gt;NaN != NaN&lt;/code&gt; to eliminate any &lt;code&gt;NaN&lt;/code&gt; s from the input list.</source>
          <target state="translated">Debido a que &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; cuando cualquiera de los operandos es &lt;code&gt;NaN&lt;/code&gt; (no un n&amp;uacute;mero), tenga cuidado al ordenar con una funci&amp;oacute;n de comparaci&amp;oacute;n como &lt;code&gt;$a &amp;lt;=&amp;gt; $b&lt;/code&gt; cualquier lista que pueda contener un &lt;code&gt;NaN&lt;/code&gt; . El siguiente ejemplo aprovecha que &lt;code&gt;NaN != NaN&lt;/code&gt; para eliminar cualquier &lt;code&gt;NaN&lt;/code&gt; de la lista de entrada.</target>
        </trans-unit>
        <trans-unit id="dbfd747a0cfe35cb8ad11b2926956f99d4f77a54" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when either operand is &lt;code&gt;NaN&lt;/code&gt; (not-a-number), be careful when sorting with a comparison function like &lt;code&gt;$a &amp;lt;=&amp;gt; $b&lt;/code&gt; any lists that might contain a &lt;code&gt;NaN&lt;/code&gt; . The following example takes advantage that &lt;code&gt;NaN != NaN&lt;/code&gt; to eliminate any &lt;code&gt;NaN&lt;/code&gt; s from the input list.</source>
          <target state="translated">Debido a que &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; cuando cualquiera de los operandos es &lt;code&gt;NaN&lt;/code&gt; (no un n&amp;uacute;mero), tenga cuidado al ordenar con una funci&amp;oacute;n de comparaci&amp;oacute;n como &lt;code&gt;$a &amp;lt;=&amp;gt; $b&lt;/code&gt; cualquier lista que pueda contener un &lt;code&gt;NaN&lt;/code&gt; . El siguiente ejemplo aprovecha que &lt;code&gt;NaN != NaN&lt;/code&gt; para eliminar cualquier &lt;code&gt;NaN&lt;/code&gt; de la lista de entrada.</target>
        </trans-unit>
        <trans-unit id="89d0f8e67a21f5d12b3d2f9f3bbfa73cf7cb9115" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;.&lt;/code&gt; is special in regular expressions, and can match any single character, the regex &lt;code&gt;P.&lt;/code&gt; here has matched the &amp;lt;Pl&amp;gt; in the original string.</source>
          <target state="translated">Porque &lt;code&gt;.&lt;/code&gt; es especial en expresiones regulares y puede coincidir con cualquier car&amp;aacute;cter, la expresi&amp;oacute;n regular &lt;code&gt;P.&lt;/code&gt; aqu&amp;iacute; ha coincidido con &amp;lt;Pl&amp;gt; en la cadena original.</target>
        </trans-unit>
        <trans-unit id="19a20b9f3a218df5a7c84d8e40e3cdca6928cac3" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;.&lt;/code&gt; was in use as a directory separator and filenames could not be assumed to be unique after 10 characters, Acorn implemented the C compiler to strip the trailing &lt;code&gt;.c&lt;/code&gt;&lt;code&gt;.h&lt;/code&gt;&lt;code&gt;.s&lt;/code&gt; and &lt;code&gt;.o&lt;/code&gt; suffix from filenames specified in source code and store the respective files in subdirectories named after the suffix. Hence files are translated:</source>
          <target state="translated">Porque &lt;code&gt;.&lt;/code&gt; estaba en uso como un separador de directorio y no se pod&amp;iacute;a suponer que los nombres de archivo fueran &amp;uacute;nicos despu&amp;eacute;s de 10 caracteres, Acorn implement&amp;oacute; el compilador de C para eliminar el sufijo &lt;code&gt;.c&lt;/code&gt; &lt;code&gt;.h&lt;/code&gt; &lt;code&gt;.s&lt;/code&gt; y &lt;code&gt;.o&lt;/code&gt; final de los nombres de archivo especificados en el c&amp;oacute;digo fuente y almacenar los archivos respectivos en subdirectorios con el nombre del sufijo. Por lo tanto, los archivos se traducen:</target>
        </trans-unit>
        <trans-unit id="daf7ef166b9a7929b988f6a60b2c3afc2523b46d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; is a run-time operator, it gets executed each time through a loop. Consequently, it's more efficient to localize your variables outside the loop.</source>
          <target state="translated">Debido a que &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; es un operador en tiempo de ejecuci&amp;oacute;n, se ejecuta cada vez a trav&amp;eacute;s de un bucle. En consecuencia, es m&amp;aacute;s eficiente localizar sus variables fuera del ciclo.</target>
        </trans-unit>
        <trans-unit id="2f69348654d069c347e7c5732088634fa13b4fd6" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; is a unary operator, if you accidentally use a parenthesized list for the EXPR, this behaves as a scalar comma expression, evaluating all but the last element in void context and returning the final element evaluated in scalar context. This is seldom what you want.</source>
          <target state="translated">Debido a que &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; es un operador unario, si accidentalmente usa una lista entre par&amp;eacute;ntesis para el EXPR, esto se comporta como una expresi&amp;oacute;n de coma escalar, evaluando todos menos el &amp;uacute;ltimo elemento en contexto vac&amp;iacute;o y devolviendo el elemento final evaluado en contexto escalar. Esto rara vez es lo que quieres.</target>
        </trans-unit>
        <trans-unit id="f2af4d959eb62b1a9bf83d9e5254d41aa11be74b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; takes effect at compile time, it doesn't respect the ordinary flow control of the code being compiled. In particular, putting a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; inside the false branch of a conditional doesn't prevent it from being processed. If a module or pragma only needs to be loaded conditionally, this can be done using the &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; pragma:</source>
          <target state="translated">Debido a que el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; tiene efecto en el momento de la compilaci&amp;oacute;n, no respeta el control de flujo ordinario del c&amp;oacute;digo que se est&amp;aacute; compilando. En particular, poner un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; dentro de la rama falsa de un condicional no evita que se procese. Si un m&amp;oacute;dulo o pragma solo necesita cargarse condicionalmente, esto se puede hacer usando &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; pragma:</target>
        </trans-unit>
        <trans-unit id="4bb9a434db491939507421e019d5c81a08c7de9d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; is a unary operator, if you accidentally use a parenthesized list for the EXPR, this behaves as a scalar comma expression, evaluating all but the last element in void context and returning the final element evaluated in scalar context. This is seldom what you want.</source>
          <target state="translated">Debido a que &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; es un operador unario, si accidentalmente usa una lista entre par&amp;eacute;ntesis para el EXPR, esto se comporta como una expresi&amp;oacute;n de coma escalar, evaluando todos menos el &amp;uacute;ltimo elemento en contexto vac&amp;iacute;o y devolviendo el elemento final evaluado en contexto escalar. Esto rara vez es lo que quieres.</target>
        </trans-unit>
        <trans-unit id="c409d5f2e3bc5948e94957a82aeec5c28556f99d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; takes effect at compile time, it doesn't respect the ordinary flow control of the code being compiled. In particular, putting a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; inside the false branch of a conditional doesn't prevent it from being processed. If a module or pragma only needs to be loaded conditionally, this can be done using the &lt;a href=&quot;../if&quot;&gt;if&lt;/a&gt; pragma:</source>
          <target state="translated">Debido a que el &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; tiene efecto en el momento de la compilaci&amp;oacute;n, no respeta el control de flujo ordinario del c&amp;oacute;digo que se est&amp;aacute; compilando. En particular, poner un &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; dentro de la rama falsa de un condicional no evita que se procese. Si un m&amp;oacute;dulo o pragma solo necesita cargarse condicionalmente, esto se puede hacer usando &lt;a href=&quot;../if&quot;&gt;if&lt;/a&gt; pragma:</target>
        </trans-unit>
        <trans-unit id="f7ea34c50bf47a71dd29a5e22af22a7376e9666b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;DESTROY&lt;/code&gt; methods can be called at any time, you should localize any global variables you might update in your &lt;code&gt;DESTROY&lt;/code&gt; . In particular, if you use &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; you should localize &lt;code&gt;$@&lt;/code&gt; , and if you use &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; or backticks you should localize &lt;code&gt;$?&lt;/code&gt; .</source>
          <target state="translated">Debido a que los m&amp;eacute;todos &lt;code&gt;DESTROY&lt;/code&gt; se pueden llamar en cualquier momento, debe localizar cualquier variable global que pueda actualizar en su &lt;code&gt;DESTROY&lt;/code&gt; . En particular, si usa &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; debe localizar &lt;code&gt;$@&lt;/code&gt; , y si usa &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; o comillas invertidas, debe localizar &lt;code&gt;$?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b1a7e8c9b3926d0057e1f91a59eec1bca6ac0fe" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;PERL5LIB&lt;/code&gt; is often used during testing to add build directories to &lt;code&gt;@INC&lt;/code&gt; prove passes the names of any directories found in &lt;code&gt;PERL5LIB&lt;/code&gt; as -I switches. The net effect of this is that &lt;code&gt;PERL5LIB&lt;/code&gt; is honoured even when prove is run in taint mode.</source>
          <target state="translated">Debido a que &lt;code&gt;PERL5LIB&lt;/code&gt; se usa a menudo durante las pruebas para agregar directorios de &lt;code&gt;@INC&lt;/code&gt; a @INC, prueba pasa los nombres de los directorios que se encuentran en &lt;code&gt;PERL5LIB&lt;/code&gt; como conmutadores -I. El efecto neto de esto es que &lt;code&gt;PERL5LIB&lt;/code&gt; se respeta incluso cuando se ejecuta la prueba en modo taint.</target>
        </trans-unit>
        <trans-unit id="8d8b86b2aa791fa81fa4a800514b6911cd4cea09" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;PERL5LIB&lt;/code&gt; is often used during testing to add build directories to &lt;code&gt;@INC&lt;/code&gt;&lt;code&gt;Test::Harness&lt;/code&gt; passes the names of any directories found in &lt;code&gt;PERL5LIB&lt;/code&gt; as -I switches. The net effect of this is that &lt;code&gt;PERL5LIB&lt;/code&gt; is honoured even in taint mode.</source>
          <target state="translated">Debido a que &lt;code&gt;PERL5LIB&lt;/code&gt; se usa a menudo durante las pruebas para agregar directorios de &lt;code&gt;@INC&lt;/code&gt; a @INC &lt;code&gt;Test::Harness&lt;/code&gt; pasa los nombres de los directorios que se encuentran en &lt;code&gt;PERL5LIB&lt;/code&gt; como conmutadores -I. El efecto neto de esto es que &lt;code&gt;PERL5LIB&lt;/code&gt; se respeta incluso en el modo de contaminaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="528ed40a74786c9daeb579970bad493df64c4a75" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;PL_restartop&lt;/code&gt; is non-null, &lt;code&gt;run_body&lt;/code&gt; starts a new runops loop and execution continues.</source>
          <target state="translated">Debido a que &lt;code&gt;PL_restartop&lt;/code&gt; no es nulo, &lt;code&gt;run_body&lt;/code&gt; inicia un nuevo ciclo de runops y la ejecuci&amp;oacute;n contin&amp;uacute;a.</target>
        </trans-unit>
        <trans-unit id="add12825d3665c5532bcf2a78d2469e31a8a7e9f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;STORABLE_attach&lt;/code&gt; is passed the class (rather than an object), it also returns the object directly, rather than modifying the passed object.</source>
          <target state="translated">Debido a que &lt;code&gt;STORABLE_attach&lt;/code&gt; se pasa la clase (en lugar de un objeto), tambi&amp;eacute;n devuelve el objeto directamente, en lugar de modificar el objeto pasado.</target>
        </trans-unit>
        <trans-unit id="308ec40cfa786d712d62a1e76733c4c3028b3e68" translate="yes" xml:space="preserve">
          <source>Because Acorns use ASCII with newlines (&lt;code&gt;\n&lt;/code&gt; ) in text files as &lt;code&gt;\012&lt;/code&gt; like Unix, and because Unix filename emulation is turned on by default, most simple scripts will probably work &quot;out of the box&quot;. The native filesystem is modular, and individual filesystems are free to be case-sensitive or insensitive, and are usually case-preserving. Some native filesystems have name length limits, which file and directory names are silently truncated to fit. Scripts should be aware that the standard filesystem currently has a name length limit of &lt;b&gt;10&lt;/b&gt; characters, with up to 77 items in a directory, but other filesystems may not impose such limitations.</source>
          <target state="translated">Debido a que Acorns usa ASCII con l&amp;iacute;neas nuevas ( &lt;code&gt;\n&lt;/code&gt; ) en archivos de texto como &lt;code&gt;\012&lt;/code&gt; como Unix, y debido a que la emulaci&amp;oacute;n de nombre de archivo Unix est&amp;aacute; activada de forma predeterminada, la mayor&amp;iacute;a de los scripts simples probablemente funcionar&amp;aacute;n &quot;fuera de la caja&quot;. El sistema de archivos nativo es modular, y los sistemas de archivos individuales son libres de distinguir entre may&amp;uacute;sculas y min&amp;uacute;sculas y, por lo general, conservan entre may&amp;uacute;sculas y min&amp;uacute;sculas. Algunos sistemas de archivos nativos tienen l&amp;iacute;mites de longitud de nombres, cuyos nombres de archivos y directorios se truncan silenciosamente para ajustarse. Los scripts deben tener en cuenta que el sistema de archivos est&amp;aacute;ndar actualmente tiene un l&amp;iacute;mite de longitud de nombre de &lt;b&gt;10&lt;/b&gt; caracteres, con hasta 77 elementos en un directorio, pero otros sistemas de archivos pueden no imponer tales limitaciones.</target>
        </trans-unit>
        <trans-unit id="828cb90cec8613e5d83ab546b1c59479cecb4072" translate="yes" xml:space="preserve">
          <source>Because C has no builtin function for integer exponentiation, let's make Perl's ** operator available to it (this is less useful than it sounds, because Perl implements ** with C's</source>
          <target state="translated">Debido a que C no tiene una función incorporada para la exponenciación de números enteros,vamos a poner el operador de Perl **a su disposición (esto es menos útil de lo que parece,porque Perl implementa **con C's</target>
        </trans-unit>
        <trans-unit id="9459aa14a3cec514837284733b6c7f9c5dcb8910" translate="yes" xml:space="preserve">
          <source>Because Perl allows you to use barewords for package names and subroutine names, it sometimes interprets a bareword's meaning incorrectly. For example, the construct &lt;code&gt;Class-&amp;gt;new()&lt;/code&gt; can be interpreted as either &lt;code&gt;'Class'-&amp;gt;new()&lt;/code&gt; or &lt;code&gt;Class()-&amp;gt;new()&lt;/code&gt; . In English, that second interpretation reads as &quot;call a subroutine named Class(), then call new() as a method on the return value of Class()&quot;. If there is a subroutine named &lt;code&gt;Class()&lt;/code&gt; in the current namespace, Perl will always interpret &lt;code&gt;Class-&amp;gt;new()&lt;/code&gt; as the second alternative: a call to &lt;code&gt;new()&lt;/code&gt; on the object returned by a call to &lt;code&gt;Class()&lt;/code&gt;</source>
          <target state="translated">Debido a que Perl le permite usar palabras simples para nombres de paquetes y nombres de subrutinas, a veces interpreta incorrectamente el significado de una palabra clave. Por ejemplo, el constructo &lt;code&gt;Class-&amp;gt;new()&lt;/code&gt; puede interpretarse como &lt;code&gt;'Class'-&amp;gt;new()&lt;/code&gt; o &lt;code&gt;Class()-&amp;gt;new()&lt;/code&gt; . En ingl&amp;eacute;s, esa segunda interpretaci&amp;oacute;n se lee como &quot;llamar a una subrutina llamada Class (), luego llamar a new () como un m&amp;eacute;todo en el valor de retorno de Class ()&quot;. Si hay una subrutina llamada &lt;code&gt;Class()&lt;/code&gt; en el espacio de nombres actual, Perl siempre interpretar&amp;aacute; &lt;code&gt;Class-&amp;gt;new()&lt;/code&gt; como la segunda alternativa: una llamada a &lt;code&gt;new()&lt;/code&gt; en el objeto devuelto por una llamada a &lt;code&gt;Class()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aadc88ee4df674055a8e46229f25dab587fc29ec" translate="yes" xml:space="preserve">
          <source>Because Perl stringifies uncaught exception messages before display, you'll probably want to overload stringification operations on exception objects. See &lt;a href=&quot;../overload&quot;&gt;overload&lt;/a&gt; for details about that.</source>
          <target state="translated">Debido a que Perl encadena los mensajes de excepci&amp;oacute;n no detectados antes de que se muestren, probablemente desee sobrecargar las operaciones de encadenamiento en los objetos de excepci&amp;oacute;n. Consulte la &lt;a href=&quot;../overload&quot;&gt;sobrecarga&lt;/a&gt; para obtener detalles al respecto.</target>
        </trans-unit>
        <trans-unit id="e1c5024f83c23d4c6dafd0e63d9f2e92824de07b" translate="yes" xml:space="preserve">
          <source>Because Perl stringifies uncaught exception messages before display, you'll probably want to overload stringification operations on exception objects. See &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt; for details about that.</source>
          <target state="translated">Debido a que Perl encadena los mensajes de excepci&amp;oacute;n no detectados antes de que se muestren, probablemente desee sobrecargar las operaciones de encadenamiento en los objetos de excepci&amp;oacute;n. Consulte la &lt;a href=&quot;overload&quot;&gt;sobrecarga&lt;/a&gt; para obtener detalles al respecto.</target>
        </trans-unit>
        <trans-unit id="2faaff7512cd20cbdff5d0e25efe8bfe139f7156" translate="yes" xml:space="preserve">
          <source>Because Perl uses doubles (or long doubles, if configured) internally for all numeric calculation, converting from double into float and thence to double again loses precision, so &lt;code&gt;unpack(&quot;f&quot;, pack(&quot;f&quot;, $foo)&lt;/code&gt;) will not in general equal $foo.</source>
          <target state="translated">Debido a que Perl usa dobles (o dobles largos, si est&amp;aacute; configurado) internamente para todos los c&amp;aacute;lculos num&amp;eacute;ricos, la conversi&amp;oacute;n de doble a flotante y luego a doble pierde precisi&amp;oacute;n, por lo que &lt;code&gt;unpack(&quot;f&quot;, pack(&quot;f&quot;, $foo)&lt;/code&gt; ) no lo har&amp;aacute;. en general igual a $ foo.</target>
        </trans-unit>
        <trans-unit id="398f8b38f72125ad882bed6f196a0775e260d2ad" translate="yes" xml:space="preserve">
          <source>Because UTF-8 is one of Perl's internal formats, you can often just skip the encoding or decoding step, and manipulate the UTF8 flag directly.</source>
          <target state="translated">Debido a que el UTF-8 es uno de los formatos internos de Perl,a menudo puedes saltarte el paso de codificación o decodificación,y manipular la bandera del UTF-8 directamente.</target>
        </trans-unit>
        <trans-unit id="6847617d71c84ec40d27c1365086ed8c20f1449c" translate="yes" xml:space="preserve">
          <source>Because UTF-EBCDIC is so similar to UTF-8, the differences are mostly hidden from you; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; (and NOT something like &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utfebcdic&lt;/code&gt; ) declares the the script is in the platform's &quot;native&quot; 8-bit encoding of Unicode. (Similarly for the &lt;code&gt;&quot;:utf8&quot;&lt;/code&gt; layer.)</source>
          <target state="translated">Debido a que UTF-EBCDIC es tan similar a UTF-8, las diferencias en su mayor&amp;iacute;a est&amp;aacute;n ocultas para usted; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; (y NO algo como &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utfebcdic&lt;/code&gt; ) declara que el script est&amp;aacute; en la codificaci&amp;oacute;n &quot;nativa&quot; de 8 bits de Unicode de la plataforma. (De manera similar para la capa &lt;code&gt;&quot;:utf8&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="237849b1b007b545cf9244e10de8226da0ca3773" translate="yes" xml:space="preserve">
          <source>Because VMS's exit codes are much, much different than the rest of the universe, and perl does horrible mangling to them that gets in my way, it works like this on VMS.</source>
          <target state="translated">Debido a que los códigos de salida del VMS son muy,muy diferentes al resto del universo,y Perl les hace un horrible destrozo que se interpone en mi camino,funciona así en el VMS.</target>
        </trans-unit>
        <trans-unit id="815d9b38e08d4ff6dad9bd30fba64b1ec6e8aeb8" translate="yes" xml:space="preserve">
          <source>Because XS modules require re-linking of the perl binary, you need both the perl binary distribution and the perl source distribution to build an XS extension module. In addition, you will have to have built your perl binary from the source distribution so that all of the components of the perl binary are available for the required link step.</source>
          <target state="translated">Debido a que los módulos XS requieren la re-ligadura del binario de perl,se necesita tanto la distribución binaria de perl como la distribución de la fuente de perl para construir un módulo de extensión XS.Además,tendrá que haber construido su binario de perl a partir de la distribución fuente para que todos los componentes del binario de perl estén disponibles para el paso de enlace requerido.</target>
        </trans-unit>
        <trans-unit id="b57c6e3153bc9c89950406d1bdb5e4a01632a292" translate="yes" xml:space="preserve">
          <source>Because a failed &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; match doesn't reset the offset, the return from &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; won't change either in this case. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; and &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Debido a que una coincidencia de &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; fallida no restablece el desplazamiento, el retorno de &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; tampoco cambiar&amp;aacute; en este caso. Ver &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; y &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aac46af0a65c30c1278fb04116da06849260131d" translate="yes" xml:space="preserve">
          <source>Because a failed &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; match doesn't reset the offset, the return from &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; won't change either in this case. See &lt;a href=&quot;../perlre&quot;&gt;perlre&lt;/a&gt; and &lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Debido a que una coincidencia de &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; fallida no restablece el desplazamiento, el retorno de &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; tampoco cambiar&amp;aacute; en este caso. Ver &lt;a href=&quot;../perlre&quot;&gt;perlre&lt;/a&gt; y &lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9eb2a05168485f04f9e352bc656013c7106c3b67" translate="yes" xml:space="preserve">
          <source>Because a list of potential candidates is returned, the &lt;code&gt;while&lt;/code&gt; loop tries each in turn until it finds one that succeeds both the socket() and connect() calls.</source>
          <target state="translated">Debido a que se devuelve una lista de posibles candidatos, el &lt;code&gt;while&lt;/code&gt; bucle de prueba cada vez, hasta que encuentra uno que tiene &amp;eacute;xito tanto a la toma () y conectar) (llamadas.</target>
        </trans-unit>
        <trans-unit id="93bb95979fc3bb902bf7566626913de80d560dcc" translate="yes" xml:space="preserve">
          <source>Because a name correction may be added in future Unicode releases, the name that &lt;code&gt;viacode&lt;/code&gt; returns may change as a result. This is a rare event, but it does happen.</source>
          <target state="translated">Debido a que se puede agregar una correcci&amp;oacute;n de nombre en futuras versiones de Unicode, el nombre que devuelve &lt;code&gt;viacode&lt;/code&gt; puede cambiar como resultado. Este es un evento raro, pero sucede.</target>
        </trans-unit>
        <trans-unit id="284e0db6a72cf3c4c7c4890513562109eb2a9995" translate="yes" xml:space="preserve">
          <source>Because a period is a metacharacter, it needs to be escaped to match as an ordinary period. Because, for example, &lt;code&gt;\d&lt;/code&gt; and &lt;code&gt;\w&lt;/code&gt; are sets of characters, it is incorrect to think of &lt;code&gt;[^\d\w]&lt;/code&gt; as &lt;code&gt;[\D\W]&lt;/code&gt; ; in fact &lt;code&gt;[^\d\w]&lt;/code&gt; is the same as &lt;code&gt;[^\w]&lt;/code&gt;, which is the same as &lt;code&gt;[\W]&lt;/code&gt; . Think DeMorgan's laws.</source>
          <target state="translated">Debido a que un per&amp;iacute;odo es un metacar&amp;aacute;cter, debe escaparse para que coincida con un per&amp;iacute;odo ordinario. Dado que, por ejemplo, &lt;code&gt;\d&lt;/code&gt; y &lt;code&gt;\w&lt;/code&gt; son conjuntos de caracteres, es incorrecto pensar en &lt;code&gt;[^\d\w]&lt;/code&gt; como &lt;code&gt;[\D\W]&lt;/code&gt; ; de hecho, &lt;code&gt;[^\d\w]&lt;/code&gt; es lo mismo que &lt;code&gt;[^\w]&lt;/code&gt; , que es lo mismo que &lt;code&gt;[\W]&lt;/code&gt; . Piense en las leyes de DeMorgan.</target>
        </trans-unit>
        <trans-unit id="934c60da6f18a9def8d944b8bcb6ee8755c35fe6" translate="yes" xml:space="preserve">
          <source>Because access() does not invoke stat() (at least not in a way visible to Perl), &lt;b&gt;the stat result cache &quot;_&quot; is not set&lt;/b&gt;. This means that the outcome of the following two tests is different. The first has the stat bits of</source>
          <target state="translated">Debido a que access () no invoca stat () (al menos no de una manera visible para Perl), &lt;b&gt;la cach&amp;eacute; de resultados de estad&amp;iacute;sticas &quot;_&quot; no est&amp;aacute; configurada&lt;/b&gt; . Esto significa que el resultado de las siguientes dos pruebas es diferente. El primero tiene los bits de estad&amp;iacute;sticas de</target>
        </trans-unit>
        <trans-unit id="390a39256a176624bc85b17cecc4ce28e0fc7e67" translate="yes" xml:space="preserve">
          <source>Because assignment of a reference to a typeglob creates an alias, this can be used to create what is effectively a local function, or at least, a local alias.</source>
          <target state="translated">Debido a que la asignación de una referencia a un typeglob crea un alias,esto puede ser usado para crear lo que es efectivamente una función local,o al menos,un alias local.</target>
        </trans-unit>
        <trans-unit id="0fe40d9c5df21e57c6ec455bae627177153c51cf" translate="yes" xml:space="preserve">
          <source>Because backticks do not affect standard error, use shell file descriptor syntax (assuming the shell supports this) if you care to address this. To capture a command's STDERR and STDOUT together:</source>
          <target state="translated">Dado que los backticks no afectan al error estándar,utilice la sintaxis del descriptor del archivo de shell (suponiendo que el shell lo soporte)si quiere solucionarlo.Para capturar el STDERR y STDOUT de un comando juntos:</target>
        </trans-unit>
        <trans-unit id="58a3a4b137a2ac3042f5ce6d5ed31ccf52919b18" translate="yes" xml:space="preserve">
          <source>Because both CRLF and LF end in LF, the input record separator can be set to LF and any CR stripped later. Better to write:</source>
          <target state="translated">Debido a que tanto el CRLF como el LF terminan en LF,el separador de registros de entrada puede ser configurado en LF y cualquier CR puede ser eliminado más tarde.Es mejor escribir:</target>
        </trans-unit>
        <trans-unit id="a49e08801e09e4ade1a0feed4948dfc00925efc8" translate="yes" xml:space="preserve">
          <source>Because curly brackets (braces) are used for several other things including BLOCKs, you may occasionally have to disambiguate braces at the beginning of a statement by putting a &lt;code&gt;+&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; in front so that Perl realizes the opening brace isn't starting a BLOCK. The economy and mnemonic value of using curlies is deemed worth this occasional extra hassle.</source>
          <target state="translated">Debido a que las llaves (llaves) se utilizan para varias otras cosas, incluidos los BLOQUES, es posible que ocasionalmente tenga que eliminar la ambig&amp;uuml;edad de las llaves al comienzo de una declaraci&amp;oacute;n colocando un &lt;code&gt;+&lt;/code&gt; o un &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; al frente para que Perl se d&amp;eacute; cuenta de que la llave de apertura no est&amp;aacute; iniciando un BLOQUE. . La econom&amp;iacute;a y el valor mnem&amp;oacute;nico de usar curlies se considera que vale la pena esta molestia adicional ocasional.</target>
        </trans-unit>
        <trans-unit id="b7b830bba46d3c56bd91aa88ed2e25a2ca316287" translate="yes" xml:space="preserve">
          <source>Because depending on a directory to just ensure it exists doesn't work too well (the modified time changes too often) dir_target() creates a .exists file in the created directory. It is this you should depend on. For portability purposes you should use the $(DIRFILESEP) macro rather than a '/' to separate the directory from the file.</source>
          <target state="translated">Porque depender de un directorio para asegurarse de que existe no funciona demasiado bien (el tiempo de modificación cambia con demasiada frecuencia)dir_target()crea un archivo .exists en el directorio creado.Es de esto de lo que debes depender.Para propósitos de portabilidad debes usar la macro $(DIRFILESEP)en vez de un '/' para separar el directorio del archivo.</target>
        </trans-unit>
        <trans-unit id="e43a24b825ab27b01432c41cd607e2f4d3328c51" translate="yes" xml:space="preserve">
          <source>Because each operand is evaluated in integer form, &lt;code&gt;2.18 .. 3.14&lt;/code&gt; will return two elements in list context.</source>
          <target state="translated">Debido a que cada operando se eval&amp;uacute;a en forma de entero, &lt;code&gt;2.18 .. 3.14&lt;/code&gt; devolver&amp;aacute; dos elementos en el contexto de lista.</target>
        </trans-unit>
        <trans-unit id="d594331311925ecf9da3e16eb2cdc66b10c06327" translate="yes" xml:space="preserve">
          <source>Because even on non-Unix ports, Perl's glob function follows standard Unix globbing semantics. You'll need &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob(&quot;*&quot;)&lt;/a&gt;&lt;/code&gt; to get all (non-hidden) files. This makes glob() portable even to legacy systems. Your port may include proprietary globbing functions as well. Check its documentation for details.</source>
          <target state="translated">Porque incluso en los puertos que no son Unix, la funci&amp;oacute;n glob de Perl sigue la sem&amp;aacute;ntica globbing est&amp;aacute;ndar de Unix. Necesitar&amp;aacute; &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob(&quot;*&quot;)&lt;/a&gt;&lt;/code&gt; para obtener todos los archivos (no ocultos). Esto hace que glob () sea port&amp;aacute;til incluso para sistemas heredados. Su puerto tambi&amp;eacute;n puede incluir funciones de globbing patentadas. Consulte su documentaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="2981f551145cc9ed169b464d8c0a095e7cf58a72" translate="yes" xml:space="preserve">
          <source>Because historically some operating systems silently chopped off kernel interpretation of the &lt;code&gt;#!&lt;/code&gt; line after 32 characters, some switches may be passed in on the command line, and some may not; you could even get a &quot;-&quot; without its letter, if you're not careful. You probably want to make sure that all your switches fall either before or after that 32-character boundary. Most switches don't actually care if they're processed redundantly, but getting a &quot;-&quot; instead of a complete switch could cause Perl to try to execute standard input instead of your program. And a partial &lt;b&gt;-I&lt;/b&gt; switch could also cause odd results.</source>
          <target state="translated">Porque hist&amp;oacute;ricamente algunos sistemas operativos cortaron silenciosamente la interpretaci&amp;oacute;n del kernel de &lt;code&gt;#!&lt;/code&gt; l&amp;iacute;nea despu&amp;eacute;s de 32 caracteres, algunos modificadores pueden pasarse en la l&amp;iacute;nea de comando y otros no; incluso podr&amp;iacute;a obtener un &quot;-&quot; sin su letra, si no tiene cuidado. Probablemente desee asegurarse de que todos sus conmutadores caigan antes o despu&amp;eacute;s de ese l&amp;iacute;mite de 32 caracteres. A la mayor&amp;iacute;a de los conmutadores en realidad no les importa si se procesan de forma redundante, pero obtener un &quot;-&quot; en lugar de un cambio completo podr&amp;iacute;a hacer que Perl intente ejecutar una entrada est&amp;aacute;ndar en lugar de su programa. Y un cambio &lt;b&gt;-I&lt;/b&gt; parcial tambi&amp;eacute;n podr&amp;iacute;a causar resultados extra&amp;ntilde;os.</target>
        </trans-unit>
        <trans-unit id="0e93d867e0e61a9f65c5551095616b09fa36af42" translate="yes" xml:space="preserve">
          <source>Because if _1 is one, you get &quot;1 document &lt;b&gt;were&lt;/b&gt; matched&quot;. An acceptable hack here is to do something like this:</source>
          <target state="translated">Porque si _1 es uno, que se obtiene &quot;1 documento &lt;b&gt;se&lt;/b&gt; corresponde&quot;. Un truco aceptable aqu&amp;iacute; es hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="14e83724617636cdff52bc89c9135eb24a32b2c3" translate="yes" xml:space="preserve">
          <source>Because it is not possible to reliably tell UTF-8 from native 8 bit encodings, you need either a Byte Order Mark at the beginning of your source code, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8;&lt;/code&gt; , to instruct perl.</source>
          <target state="translated">Debido a que no es posible distinguir UTF-8 de forma confiable a partir de codificaciones nativas de 8 bits, necesita una marca de orden de bytes al comienzo de su c&amp;oacute;digo fuente o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8;&lt;/code&gt; , para instruir a perl.</target>
        </trans-unit>
        <trans-unit id="8c9a76f6de0976ec0aec1cbf80b933b451074248" translate="yes" xml:space="preserve">
          <source>Because it's a module, not an integral part of the interpreter, NEXT.pm has to guess where the surrounding call was found in the method look-up sequence. In the presence of diamond inheritance patterns it occasionally guesses wrong.</source>
          <target state="translated">Debido a que es un módulo,no una parte integral del intérprete,el próximo día tiene que adivinar dónde se encontró la llamada circundante en la secuencia de búsqueda del método.En presencia de patrones de herencia de diamantes,ocasionalmente adivina mal.</target>
        </trans-unit>
        <trans-unit id="1b07afd521e75a07298e5e250bb27a3b27578dea" translate="yes" xml:space="preserve">
          <source>Because loading in the &lt;code&gt;IO::Handle&lt;/code&gt; class is an expensive operation, you should learn how to use the regular built-in variables.</source>
          <target state="translated">Debido a que cargar en la clase &lt;code&gt;IO::Handle&lt;/code&gt; es una operaci&amp;oacute;n costosa, debe aprender a utilizar las variables integradas habituales.</target>
        </trans-unit>
        <trans-unit id="fb1b328dbd0a94624aa3c89dafc392fc30581afd" translate="yes" xml:space="preserve">
          <source>Because many operating systems permit anyone with read access to the Perl program file to make a copy of it, patch the copy, and then execute the copy, the security-conscious Perl programmer should take care to invoke the installed copy of perl, not the copy referenced by &lt;code&gt;$^X&lt;/code&gt; . The following statements accomplish this goal, and produce a pathname that can be invoked as a command or referenced as a file.</source>
          <target state="translated">Debido a que muchos sistemas operativos permiten que cualquier persona con acceso de lectura al archivo de programa de Perl haga una copia, parchee la copia y luego ejecute la copia, el programador de Perl consciente de la seguridad debe tener cuidado de invocar la copia instalada de perl, no la copia referenciado por &lt;code&gt;$^X&lt;/code&gt; . Las siguientes declaraciones logran este objetivo y producen un nombre de ruta que puede invocarse como un comando o referenciarse como un archivo.</target>
        </trans-unit>
        <trans-unit id="9fda5ef27e15d5bae07e31ec0802921ed805374c" translate="yes" xml:space="preserve">
          <source>Because native operating system filehandles are global and are currently allocated down from 255, with 0 being a reserved value, the Unix emulation library emulates Unix filehandles. Consequently, you can't rely on passing &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; , or &lt;code&gt;STDERR&lt;/code&gt; to your children.</source>
          <target state="translated">Debido a que los identificadores de archivos del sistema operativo nativo son globales y actualmente se asignan por debajo de 255, siendo 0 un valor reservado, la biblioteca de emulaci&amp;oacute;n de Unix emula los identificadores de archivos de Unix. En consecuencia, no puede confiar en pasar &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; o &lt;code&gt;STDERR&lt;/code&gt; a sus hijos.</target>
        </trans-unit>
        <trans-unit id="f5e62ec9329120e24ef0d8c20f22f5389de7c7e2" translate="yes" xml:space="preserve">
          <source>Because objects in Perl are implemented as references, it's possible to have circular references with objects as well. Imagine a TreeNode class where each node references its parent and child nodes. Any node with a parent will be part of a circular reference.</source>
          <target state="translated">Debido a que los objetos en Perl se implementan como referencias,es posible tener referencias circulares con los objetos también.Imagine una clase TreeNode donde cada nodo hace referencia a sus nodos padre e hijo.Cualquier nodo con un padre será parte de una referencia circular.</target>
        </trans-unit>
        <trans-unit id="0bd5958f518c949c2219a905e834fb00df87ae4a" translate="yes" xml:space="preserve">
          <source>Because of DST changes, there are many time zones where the same local time occurs for two different GMT times on the same day. For example, in the &quot;Europe/Paris&quot; time zone, the local time of 2001-10-28 02:30:00 can represent either 2001-10-28 00:30:00 GMT, &lt;b&gt;or&lt;/b&gt; 2001-10-28 01:30:00 GMT.</source>
          <target state="translated">Debido a los cambios de horario de verano, hay muchas zonas horarias en las que se produce la misma hora local para dos horas GMT diferentes en el mismo d&amp;iacute;a. Por ejemplo, en la zona horaria &quot;Europa / Par&amp;iacute;s&quot;, la hora local de 2001-10-28 02:30:00 puede representar 2001-10-28 00:30:00 GMT &lt;b&gt;o&lt;/b&gt; 2001-10-28 01: 30:00 GMT.</target>
        </trans-unit>
        <trans-unit id="65864a7a85dc93ea309cdec582c118e5dd979f14" translate="yes" xml:space="preserve">
          <source>Because of a bug in perl (#19213), at least in version 5.6.1, we have to hardcode the path separator for a require on Win32 to be &lt;code&gt;/&lt;/code&gt;, like on Unix rather than the Win32 &lt;code&gt;\&lt;/code&gt; . Otherwise perl will not read its own %INC accurately double load files if they are required again, or in the worst case, core dump.</source>
          <target state="translated">Debido a un error en perl (# 19213), al menos en la versi&amp;oacute;n 5.6.1, tenemos que codificar el separador de ruta para que un requerimiento en Win32 sea &lt;code&gt;/&lt;/code&gt; , como en Unix en lugar de Win32 &lt;code&gt;\&lt;/code&gt; . De lo contrario, perl no leer&amp;aacute; sus propios archivos% INC de carga doble con precisi&amp;oacute;n si son necesarios de nuevo o, en el peor de los casos, si se realiza un volcado del n&amp;uacute;cleo.</target>
        </trans-unit>
        <trans-unit id="4f334a2266086aa81e3afdad8578b63a9a352bf3" translate="yes" xml:space="preserve">
          <source>Because of a lack of anything better, this module uses its own routines to pack and unpack ICMP packets. It would be better for a separate module to be written which understands all of the different kinds of ICMP packets.</source>
          <target state="translated">Debido a la falta de algo mejor,este módulo utiliza sus propias rutinas para empaquetar y desempaquetar paquetes ICMP.Sería mejor que se escribiera un módulo separado que comprendiera todos los diferentes tipos de paquetes ICMP.</target>
        </trans-unit>
        <trans-unit id="c50ff3946dd738899f690c4bd5e562356a6223d1" translate="yes" xml:space="preserve">
          <source>Because of all these problems, starting in v5.22, Perl will raise a warning if a multi-byte (hence Unicode) code point is used when a single-byte locale is in effect. (Although it doesn't check for this if doing so would unreasonably slow execution down.)</source>
          <target state="translated">Debido a todos estos problemas,a partir de la v5.22,Perl emitirá una advertencia si se utiliza un punto de código de varios bytes (por lo tanto,Unicode)cuando una localidad de un solo byte está en efecto.(Aunque no comprueba esto si al hacerlo se ralentizaría injustificadamente la ejecución).</target>
        </trans-unit>
        <trans-unit id="7eca024239d85bdb38cb09ea249ea5b41add05bc" translate="yes" xml:space="preserve">
          <source>Because of backward compatibility with legacy encodings, the &quot;a unique number for every character&quot; idea breaks down a bit: instead, there is &quot;at least one number for every character&quot;. The same character could be represented differently in several legacy encodings. The converse is not true: some code points do not have an assigned character. Firstly, there are unallocated code points within otherwise used blocks. Secondly, there are special Unicode control characters that do not represent true characters.</source>
          <target state="translated">Debido a la compatibilidad con las codificaciones anteriores,la idea de &quot;un número único para cada personaje&quot; se rompe un poco:en cambio,hay &quot;al menos un número para cada personaje&quot;.El mismo carácter podría ser representado de forma diferente en varias codificaciones heredadas.Lo contrario no es cierto:algunos puntos de código no tienen un carácter asignado.En primer lugar,hay puntos de código no asignados dentro de bloques utilizados de otra manera.En segundo lugar,hay caracteres de control especiales de Unicode que no representan caracteres verdaderos.</target>
        </trans-unit>
        <trans-unit id="6c5cc2c32fa019382bf3152d3598a8ccd6be4473" translate="yes" xml:space="preserve">
          <source>Because of being able to omit the curlies for the simple case of &lt;code&gt;$$x&lt;/code&gt; , people often make the mistake of viewing the dereferencing symbols as proper operators, and wonder about their precedence. If they were, though, you could use parentheses instead of braces. That's not the case. Consider the difference below; case 0 is a short-hand version of case 1,</source>
          <target state="translated">Debido a que se pueden omitir los curlies para el caso simple de &lt;code&gt;$$x&lt;/code&gt; , las personas a menudo cometen el error de ver los s&amp;iacute;mbolos de desreferenciaci&amp;oacute;n como operadores adecuados y se preguntan sobre su precedencia. Sin embargo, si lo fueran, podr&amp;iacute;a usar par&amp;eacute;ntesis en lugar de llaves. Ese no es el caso. Considere la diferencia a continuaci&amp;oacute;n; el caso 0 es una versi&amp;oacute;n abreviada del caso 1,</target>
        </trans-unit>
        <trans-unit id="e900a4e123821bf1949cbdd4fb9b5da407117914" translate="yes" xml:space="preserve">
          <source>Because of clock granularity, expiration times may occur up to one second sooner than you expect. For example, suppose you store a value with a lifetime of ten seconds, and you store it at 12:00:00.998 on a certain day. Memoize will look at the clock and see 12:00:00. Then 9.01 seconds later, at 12:00:10.008 you try to read it back. Memoize will look at the clock and see 12:00:10 and conclude that the value has expired. This will probably not occur if you have &lt;code&gt;Time::HiRes&lt;/code&gt; installed.</source>
          <target state="translated">Debido a la granularidad del reloj, los tiempos de caducidad pueden ocurrir hasta un segundo antes de lo esperado. Por ejemplo, suponga que almacena un valor con una duraci&amp;oacute;n de diez segundos y lo almacena a las 12:00: 00,998 de un d&amp;iacute;a determinado. Memoize mirar&amp;aacute; el reloj y ver&amp;aacute; 12:00:00. Luego, 9.01 segundos despu&amp;eacute;s, a las 12: 00: 10.008, intentas leerlo. Memoize mirar&amp;aacute; el reloj y ver&amp;aacute; 12:00:10 y concluir&amp;aacute; que el valor ha expirado. Esto probablemente no ocurrir&amp;aacute; si tiene &lt;code&gt;Time::HiRes&lt;/code&gt; instalado.</target>
        </trans-unit>
        <trans-unit id="c6e7a0449744f95f7025dc0e8c4838b8d0860c99" translate="yes" xml:space="preserve">
          <source>Because of idiosyncrasies of OS/2 one cannot have all the eggs in the same basket (though EMX environment tries hard to overcome this limitations, so the situation may somehow improve). There are 4 executables for Perl provided by the distribution:</source>
          <target state="translated">Debido a la idiosincrasia del OS/2 no se pueden tener todos los huevos en la misma cesta (aunque el entorno del EMX se esfuerza por superar estas limitaciones,por lo que la situación puede mejorar de alguna manera).Hay 4 ejecutables para Perl proporcionados por la distribución:</target>
        </trans-unit>
        <trans-unit id="38b54108e9558724b240349ad9589f54bf027fa2" translate="yes" xml:space="preserve">
          <source>Because of its global effect, this setting should not be used inside modules or the like.</source>
          <target state="translated">Debido a su efecto global,este ajuste no debe utilizarse dentro de los módulos o similares.</target>
        </trans-unit>
        <trans-unit id="cc4be6e39aa524fd29878685a03b1168c2bf5d9f" translate="yes" xml:space="preserve">
          <source>Because of our problems with the native yacc we used GNU bison to generate a pure (=reentrant) parser for perly.y. So our yacc is really the following script:</source>
          <target state="translated">Debido a nuestros problemas con el yacc nativo usamos GNU bisonte para generar un analizador puro (=reentrante)para perly.y.Así que nuestro yacc es realmente el siguiente guión:</target>
        </trans-unit>
        <trans-unit id="9835e5c9cd0a637bdd223f60f76a72232d5d4783" translate="yes" xml:space="preserve">
          <source>Because of the &quot;text&quot; mode translation, DOSish perls have limitations in using &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; on a file accessed in &quot;text&quot; mode. Stick to &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;-ing to locations you got from &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; (and no others), and you are usually free to use &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; even in &quot;text&quot; mode. Using &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; or other file operations may be non-portable. If you use &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; on a file, however, you can usually &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; with arbitrary values safely.</source>
          <target state="translated">Debido a la traducci&amp;oacute;n en modo &quot;texto&quot;, las perls de DOSish tienen limitaciones en el uso de &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; en un archivo al que se accede en modo &quot;texto&quot;. C&amp;iacute;&amp;ntilde;ete a la &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; de ubicaciones que obtuviste de &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; (y ninguna otra), y por lo general eres libre de usar &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; incluso en modo &quot;texto&quot;. El uso de &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; u otras operaciones de archivo puede no ser port&amp;aacute;til. Sin embargo, si usa &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; en un archivo, generalmente puede &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; con valores arbitrarios de manera segura.</target>
        </trans-unit>
        <trans-unit id="86b041b8cdbf2e2a44b563d3f9086435ec867343" translate="yes" xml:space="preserve">
          <source>Because of the 16-bitness, UTF-16 is byte-order dependent. UTF-16 itself can be used for in-memory computations, but if storage or transfer is required either UTF-16BE (big-endian) or UTF-16LE (little-endian) encodings must be chosen.</source>
          <target state="translated">Debido a los 16 bits,el UTF-16 depende del orden de los bytes.El UTF-16 en sí mismo puede ser usado para cálculos en memoria,pero si se requiere almacenamiento o transferencia,deben elegirse codificaciones UTF-16BE (big-endian)o UTF-16LE (little-endian).</target>
        </trans-unit>
        <trans-unit id="ddcee3f7b2710d631ab7d25c7c6ccf7f643a3fe9" translate="yes" xml:space="preserve">
          <source>Because of the algorithm used, ISO-8859 series and other single-byte encodings do not work well unless either one of ISO-8859 is the only one suspect (besides ascii and utf8).</source>
          <target state="translated">Debido al algoritmo utilizado,las series ISO-8859 y otras codificaciones de un solo byte no funcionan bien,a menos que alguno de los ISO-8859 sea el único sospechoso (además de ascii y utf8).</target>
        </trans-unit>
        <trans-unit id="11b9a9053f80eaf386518a04692ab13e4782146b" translate="yes" xml:space="preserve">
          <source>Because of the unexpected behaviors associated with this modifier, you probably should only use it to maintain weird backward compatibilities.</source>
          <target state="translated">Debido a los comportamientos inesperados asociados con este modificador,probablemente sólo deberías usarlo para mantener extrañas compatibilidades hacia atrás.</target>
        </trans-unit>
        <trans-unit id="033d419ed47a31e5b1999d8b2e6265eaff662dc3" translate="yes" xml:space="preserve">
          <source>Because of their special use by sort(), the variables $a and $b are exempted from this check.</source>
          <target state="translated">Debido a su uso especial por sort(),las variables $a y $b están exentas de este cheque.</target>
        </trans-unit>
        <trans-unit id="b4c8809b3046a08b3452bb5931521fe0616806ce" translate="yes" xml:space="preserve">
          <source>Because of this mechanism it is important that &lt;b&gt;AutoLoader&lt;/b&gt; is always &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;d and not &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;d.</source>
          <target state="translated">Debido a este mecanismo, es importante que el &lt;b&gt;Autocargador&lt;/b&gt; siempre se &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; dy no &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; d.</target>
        </trans-unit>
        <trans-unit id="cf9b61922d31b09cb33aab7bed1a50c499c2933e" translate="yes" xml:space="preserve">
          <source>Because of those two, the code paging approach used use in ucm-based Encoding SOMETIMES fails so this module was written.</source>
          <target state="translated">Debido a estos dos,el enfoque de paginación de código usado en la codificación basada en ucm SOMETIMES falla,por lo que este módulo fue escrito.</target>
        </trans-unit>
        <trans-unit id="4732978c8da8f3cf527ff9f22b157a0776b9721a" translate="yes" xml:space="preserve">
          <source>Because patterns are processed as double-quoted strings, the following also work:</source>
          <target state="translated">Debido a que los patrones se procesan como cadenas de doble cita,lo siguiente también funciona:</target>
        </trans-unit>
        <trans-unit id="e94cf9546dd5c84d3c599b01ef4e83754d69c340" translate="yes" xml:space="preserve">
          <source>Because perl needs to parse the script before applying this pragma, such encodings as Shift_JIS and Big-5 that may contain &lt;code&gt;'\'&lt;/code&gt; (BACKSLASH; &lt;code&gt;\x5c&lt;/code&gt; ) in the second byte fail because the second byte may accidentally escape the quoting character that follows.</source>
          <target state="translated">Debido a que perl necesita analizar el script antes de aplicar este pragma, codificaciones como Shift_JIS y Big-5 que pueden contener &lt;code&gt;'\'&lt;/code&gt; (BACKSLASH; &lt;code&gt;\x5c&lt;/code&gt; ) en el segundo byte fallan porque el segundo byte puede escapar accidentalmente del car&amp;aacute;cter entre comillas que sigue.</target>
        </trans-unit>
        <trans-unit id="00d20d737f3e8559e674f183083581c5bd074a26" translate="yes" xml:space="preserve">
          <source>Because pointer size does not necessarily equal integer size, use the follow macros to do it right.</source>
          <target state="translated">Debido a que el tamaño del puntero no necesariamente es igual al tamaño del entero,usa las siguientes macros para hacerlo bien.</target>
        </trans-unit>
        <trans-unit id="1ab7d92c18b253929d90277eb1a2787d5ea83ae7" translate="yes" xml:space="preserve">
          <source>Because scripts differ in their directionality (Hebrew and Arabic are written right to left, for example) Unicode supplies a &lt;code&gt;Bidi_Class&lt;/code&gt; property. Some of the values this property can have are:</source>
          <target state="translated">Debido a que los scripts difieren en su direccionalidad (el hebreo y el &amp;aacute;rabe se escriben de derecha a izquierda, por ejemplo), Unicode proporciona una propiedad &lt;code&gt;Bidi_Class&lt;/code&gt; . Algunos de los valores que puede tener esta propiedad son:</target>
        </trans-unit>
        <trans-unit id="5783acfed14f8a18cb2ce82232df112d8f4b39d0" translate="yes" xml:space="preserve">
          <source>Because taintedness is associated with each scalar value, some elements of an array or hash can be tainted and others not. The keys of a hash are &lt;b&gt;never&lt;/b&gt; tainted.</source>
          <target state="translated">Debido a que la contaminaci&amp;oacute;n est&amp;aacute; asociada con cada valor escalar, algunos elementos de una matriz o hash pueden estar contaminados y otros no. Las claves de un hash &lt;b&gt;nunca&lt;/b&gt; est&amp;aacute;n contaminadas.</target>
        </trans-unit>
        <trans-unit id="43efff829e58f5a1345657268ce9125ae02a8e64" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;&lt;a href=&quot;../functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt;ed value will have the separator reattached when it is written back to the file. There is no way to create a file whose trailing record separator string is missing.</source>
          <target state="translated">Debido a que el valor &lt;code&gt;&lt;a href=&quot;../functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; tendr&amp;aacute; el separador vuelto a adjuntar cuando se vuelva a escribir en el archivo. No hay forma de crear un archivo en el que falte la cadena separadora de registros finales.</target>
        </trans-unit>
        <trans-unit id="1a39cf872a3f7b6aa066ba9c7802115aead55d6e" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; function returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; at end of file or upon error, you will sometimes see it used this way:</source>
          <target state="translated">Debido a que la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; al final del archivo o en caso de error, a veces ver&amp;aacute; que se usa de esta manera:</target>
        </trans-unit>
        <trans-unit id="2d7cdbb67a74f8d2c9c047551149590e9752d672" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement implies a &lt;code&gt;BEGIN&lt;/code&gt; block, the importing of semantics happens as soon as the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement is compiled, before the rest of the file is compiled. This is how it is able to function as a pragma mechanism, and also how modules are able to declare subroutines that are then visible as list or unary operators for the rest of the current file. This will not work if you use &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;. With &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; you can get into this problem:</source>
          <target state="translated">Debido a que la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; implica un bloque &lt;code&gt;BEGIN&lt;/code&gt; , la importaci&amp;oacute;n de la sem&amp;aacute;ntica ocurre tan pronto como se compila la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , antes de que se compile el resto del archivo. As&amp;iacute; es como puede funcionar como un mecanismo pragma, y ​​tambi&amp;eacute;n c&amp;oacute;mo los m&amp;oacute;dulos pueden declarar subrutinas que luego son visibles como lista o operadores unarios para el resto del archivo actual. Esto no funcionar&amp;aacute; si usa &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; . Con &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; puedes meterte en este problema:</target>
        </trans-unit>
        <trans-unit id="af2ba8c1f36d75fd963bdb6706751e36d03bae43" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;here&lt;/code&gt; is before the &lt;code&gt;.*&lt;/code&gt; in the pattern, its position can be determined exactly. That's not true, however, for the &lt;code&gt;there&lt;/code&gt; ; it could appear at any point after where the anchored string appeared. Perl uses both for its optimisations, preferring the longer, or, if they are equal, the floating.</source>
          <target state="translated">Debido a que &lt;code&gt;here&lt;/code&gt; est&amp;aacute; antes del &lt;code&gt;.*&lt;/code&gt; En el patr&amp;oacute;n, su posici&amp;oacute;n se puede determinar exactamente. Sin embargo, eso no es cierto para el &lt;code&gt;there&lt;/code&gt; ; podr&amp;iacute;a aparecer en cualquier punto despu&amp;eacute;s de donde apareci&amp;oacute; la cuerda anclada. Perl usa ambos para sus optimizaciones, prefiriendo el m&amp;aacute;s largo o, si son iguales, el flotante.</target>
        </trans-unit>
        <trans-unit id="77f9c95f62f2ca8f51dfcabf085dd8aa40d54fc6" translate="yes" xml:space="preserve">
          <source>Because the assignment copies the values, this also has the effect of turning call-by-reference into call-by-value. Otherwise a function is free to do in-place modifications of &lt;code&gt;@_&lt;/code&gt; and change its caller's values.</source>
          <target state="translated">Dado que la asignaci&amp;oacute;n copia los valores, esto tambi&amp;eacute;n tiene el efecto de convertir la llamada por referencia en una llamada por valor. De lo contrario, una funci&amp;oacute;n es libre de realizar modificaciones in situ de &lt;code&gt;@_&lt;/code&gt; y cambiar los valores de su llamador.</target>
        </trans-unit>
        <trans-unit id="6c5cdf7c11299fa442df7b9179d8baed60991f7f" translate="yes" xml:space="preserve">
          <source>Because the conversion happens in place, the data to be converted cannot be a string constant: it must be a scalar variable.</source>
          <target state="translated">Debido a que la conversión ocurre en el lugar,los datos a ser convertidos no pueden ser una constante de cadena:debe ser una variable escalar.</target>
        </trans-unit>
        <trans-unit id="9be0ebeeed384a0006842b7e5b00f870be61a55a" translate="yes" xml:space="preserve">
          <source>Because the current implementation uses the table and key sizes for the hashing algorithm, there is no means by which to dynamically change the value of any of the initialization parameters.</source>
          <target state="translated">Dado que en la aplicación actual se utilizan los tamaños de la tabla y de la clave para el algoritmo de hashing,no hay medios para cambiar dinámicamente el valor de ninguno de los parámetros de inicialización.</target>
        </trans-unit>
        <trans-unit id="a16d069c72d0455b6bbcd09050d9c581b9a31d6b" translate="yes" xml:space="preserve">
          <source>Because the intent of this feature is primarily to let you define subroutines that work like built-in functions, here are prototypes for some other functions that parse almost exactly like the corresponding built-in.</source>
          <target state="translated">Debido a que la intención de esta característica es principalmente permitirle definir subrutinas que funcionen como funciones incorporadas,aquí hay prototipos de algunas otras funciones que analizan casi exactamente como la correspondiente incorporada.</target>
        </trans-unit>
        <trans-unit id="286b10724045d4807f7e79831cdfb01b70d2bd21" translate="yes" xml:space="preserve">
          <source>Because the internal format is often UTF-8, these bugs are hard to spot, because UTF-8 is usually the encoding you wanted! But don't be lazy, and don't use the fact that Perl's internal format is UTF-8 to your advantage. Encode explicitly to avoid weird bugs, and to show to maintenance programmers that you thought this through.</source>
          <target state="translated">Debido a que el formato interno es a menudo UTF-8,estos errores son difíciles de detectar,porque UTF-8 es por lo general la codificación que querías! Pero no seas perezoso,y no uses el hecho de que el formato interno de Perl es UTF-8 a tu favor.Codifica explícitamente para evitar errores extraños,y para mostrar a los programadores de mantenimiento que lo has pensado bien.</target>
        </trans-unit>
        <trans-unit id="2a9f9af112f672f597ba8d8590f5548d9330b12e" translate="yes" xml:space="preserve">
          <source>Because the mode contains both the file type and its permissions, you should mask off the file type portion and (s)printf using a &lt;code&gt;&quot;%o&quot;&lt;/code&gt; if you want to see the real permissions.</source>
          <target state="translated">Debido a que el modo contiene tanto el tipo de archivo como sus permisos, debe enmascarar la parte del tipo de archivo y printf usando un &lt;code&gt;&quot;%o&quot;&lt;/code&gt; si desea ver los permisos reales.</target>
        </trans-unit>
        <trans-unit id="f2423ea47c406258a59791ed602061d34ce7d19b" translate="yes" xml:space="preserve">
          <source>Because the result of &lt;code&gt;&quot;\Q &lt;i&gt;STRING&lt;/i&gt; \E&quot;&lt;/code&gt; has all metacharacters quoted, there is no way to insert a literal &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;@&lt;/code&gt; inside a &lt;code&gt;\Q\E&lt;/code&gt; pair. If protected by &lt;code&gt;\&lt;/code&gt; , &lt;code&gt;$&lt;/code&gt; will be quoted to become &lt;code&gt;&quot;\\\$&quot;&lt;/code&gt; ; if not, it is interpreted as the start of an interpolated scalar.</source>
          <target state="translated">Debido a que el resultado de &lt;code&gt;&quot;\Q &lt;i&gt;STRING&lt;/i&gt; \E&quot;&lt;/code&gt; tiene todos los metacaracteres citados, no hay forma de insertar un &lt;code&gt;$&lt;/code&gt; o &lt;code&gt;@&lt;/code&gt; literal dentro de un par &lt;code&gt;\Q\E&lt;/code&gt; Si est&amp;aacute; protegido por &lt;code&gt;\&lt;/code&gt; , &lt;code&gt;$&lt;/code&gt; se cotizar&amp;aacute; para convertirse en &lt;code&gt;&quot;\\\$&quot;&lt;/code&gt; ; de lo contrario, se interpreta como el inicio de un escalar interpolado.</target>
        </trans-unit>
        <trans-unit id="d152f048af7d90769fe2fc306e54559a9ec00ef1" translate="yes" xml:space="preserve">
          <source>Because the smartmatch operator recurses on nested arrays, this will still report that &quot;red&quot; is in the array.</source>
          <target state="translated">Debido a que el operador del smartmatch recurre a las matrices anidadas,éste seguirá informando que el &quot;rojo&quot; está en la matriz.</target>
        </trans-unit>
        <trans-unit id="2efc41902e93fe5cc4de4d763dfe32a371a96fe2" translate="yes" xml:space="preserve">
          <source>Because the standard failure message that &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; produces whenever a test fails will be a common occurrence in your test error output, and because it has changed between Test::Builder versions, rather than forcing you to call &lt;code&gt;test_err&lt;/code&gt; with the string all the time like so</source>
          <target state="translated">Porque el mensaje de falla est&amp;aacute;ndar que produce &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; cada vez que falla una prueba ser&amp;aacute; una ocurrencia com&amp;uacute;n en su salida de error de prueba, y porque ha cambiado entre las versiones de Test :: Builder, en lugar de forzarlo a llamar a &lt;code&gt;test_err&lt;/code&gt; con la cadena todos los tiempo as&amp;iacute;</target>
        </trans-unit>
        <trans-unit id="4ad62b1bf690da795c5cc2f593aa204a22c3e54b" translate="yes" xml:space="preserve">
          <source>Because the target is reused, you must be careful when pushing multiple values on the stack. The following code will not do what you think:</source>
          <target state="translated">Debido a que el objetivo es reutilizado,debes tener cuidado al empujar múltiples valores en la pila.El siguiente código no hará lo que piensas:</target>
        </trans-unit>
        <trans-unit id="bdc28270d2ca87731131681df34d184cd0aea361" translate="yes" xml:space="preserve">
          <source>Because the transliteration table is built at compile time, neither the</source>
          <target state="translated">Debido a que la tabla de transliteración se construye en tiempo de compilación,ni la</target>
        </trans-unit>
        <trans-unit id="2e5bc19b54b9930fd5e2dcb3e6dfb795d20462ff" translate="yes" xml:space="preserve">
          <source>Because the value of &lt;code&gt;$Config{archname}&lt;/code&gt; may depend on the hardware architecture, it can vary more than the value of &lt;code&gt;$^O&lt;/code&gt; .</source>
          <target state="translated">Debido a que el valor de &lt;code&gt;$Config{archname}&lt;/code&gt; puede depender de la arquitectura de hardware, que puede variar m&amp;aacute;s que el valor de &lt;code&gt;$^O&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e90ed527002ad403540a55eb78d4c5ab847fcd41" translate="yes" xml:space="preserve">
          <source>Because the values line may contain arbitrary expressions (for at fields, not caret fields), you can farm out more sophisticated processing to other functions, like sprintf() or one of your own. For example:</source>
          <target state="translated">Debido a que la línea de valores puede contener expresiones arbitrarias (para los campos de at,no para los campos de caret),puedes hacer un procesamiento más sofisticado para otras funciones,como sprintf()o una de las tuyas propias.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d8bc8ec23c88de9efd45beeefb8be0639f500936" translate="yes" xml:space="preserve">
          <source>Because the variable becomes legal immediately under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; , so long as there is no variable with that name is already in scope, you can then reference the package variable again even within the same statement.</source>
          <target state="translated">Debido a que la variable se vuelve legal inmediatamente bajo el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; , siempre que no haya ninguna variable con ese nombre en el alcance, puede hacer referencia a la variable del paquete nuevamente incluso dentro de la misma declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="da44b03f12b50aea312686ca3a3d0b93a5cee3d2" translate="yes" xml:space="preserve">
          <source>Because the variable becomes legal immediately under &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; , so long as there is no variable with that name is already in scope, you can then reference the package variable again even within the same statement.</source>
          <target state="translated">Debido a que la variable se vuelve legal inmediatamente bajo el &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; , siempre que no haya ninguna variable con ese nombre en el alcance, puede hacer referencia a la variable del paquete nuevamente incluso dentro de la misma declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1213676c8b2ebcfdeacd60c8eeb78e070a8906e8" translate="yes" xml:space="preserve">
          <source>Because there are more than three arguments to open(), forks the ps(1) command</source>
          <target state="translated">Debido a que hay más de tres argumentos para abrir(),se bifurca el comando ps(1)</target>
        </trans-unit>
        <trans-unit id="63c371b01d835f1b3e60dfea4284b4178cc48a57" translate="yes" xml:space="preserve">
          <source>Because there are people who have their precise expectations about who may install where in the @INC path and who uses which @INC array. In fine tuned environments &lt;code&gt;UNINST=1&lt;/code&gt; can cause damage.</source>
          <target state="translated">Porque hay personas que tienen sus expectativas precisas sobre qui&amp;eacute;n puede instalar d&amp;oacute;nde en la ruta @INC y qui&amp;eacute;n usa qu&amp;eacute; matriz @INC. En entornos bien &lt;code&gt;UNINST=1&lt;/code&gt; , UNINST = 1 puede causar da&amp;ntilde;os.</target>
        </trans-unit>
        <trans-unit id="b691163394a932e3f6d352ebd6e7cd633110d322" translate="yes" xml:space="preserve">
          <source>Because these resource objects are considered to be owned by the entire process/system, and not the &quot;property&quot; of whatever is being serialized, no references underneath the object should be included in the serialized string. Thus, in any class that implements &lt;code&gt;STORABLE_attach&lt;/code&gt; , the &lt;code&gt;STORABLE_freeze&lt;/code&gt; method cannot return any references, and &lt;code&gt;Storable&lt;/code&gt; will throw an error if &lt;code&gt;STORABLE_freeze&lt;/code&gt; tries to return references.</source>
          <target state="translated">Debido a que estos objetos de recursos se consideran propiedad de todo el proceso / sistema, y ​​no la &quot;propiedad&quot; de lo que se est&amp;eacute; serializando, no se deben incluir referencias debajo del objeto en la cadena serializada. Por lo tanto, en cualquier clase que implemente &lt;code&gt;STORABLE_attach&lt;/code&gt; , el m&amp;eacute;todo &lt;code&gt;STORABLE_freeze&lt;/code&gt; no puede devolver ninguna referencia y &lt;code&gt;Storable&lt;/code&gt; arrojar&amp;aacute; un error si &lt;code&gt;STORABLE_freeze&lt;/code&gt; intenta devolver referencias.</target>
        </trans-unit>
        <trans-unit id="e58a7f2a84e13b9fada5ed77ade53adda8ab6513" translate="yes" xml:space="preserve">
          <source>Because this command is in some senses new, a warning is issued if you appear to have accidentally entered a block instead. If that's what you mean to do, write it as with &lt;code&gt;;{ ... }&lt;/code&gt; or even &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; { ... }&lt;/code&gt; .</source>
          <target state="translated">Debido a que este comando es nuevo en algunos sentidos, se emite una advertencia si parece haber ingresado accidentalmente en un bloque. Si eso es lo que quiere hacer, escr&amp;iacute;balo como con &lt;code&gt;;{ ... }&lt;/code&gt; o incluso &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; { ... }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efa88e36be50b169e959caa4254fea74155063be" translate="yes" xml:space="preserve">
          <source>Because this function uses mktemp(), it can suffer from race conditions.</source>
          <target state="translated">Debido a que esta función utiliza mktemp(),puede sufrir condiciones de raza.</target>
        </trans-unit>
        <trans-unit id="2478181856508c1cc91e32c539a156e07c17eb63" translate="yes" xml:space="preserve">
          <source>Because this information is not stored within the perl executable itself it is possible (but unlikely) that the information does not relate to the actual perl binary which is being used to access it.</source>
          <target state="translated">Dado que esta información no está almacenada en el propio ejecutable de perl,es posible (pero improbable)que la información no se relacione con el binario de perl real que se está utilizando para acceder a él.</target>
        </trans-unit>
        <trans-unit id="ad52e097251691a48fd57b8bdbc852cffc9bb5f6" translate="yes" xml:space="preserve">
          <source>Because this is a wide-open interface, pragmas (compiler directives) are also implemented this way. Currently implemented pragmas are:</source>
          <target state="translated">Debido a que se trata de una interfaz abierta,las pragmas (directivas del compilador)también se implementan de esta manera.Las pragmas actualmente implementadas son:</target>
        </trans-unit>
        <trans-unit id="e8055a645160d58d1aa3758824d7f3046e3cd0a9" translate="yes" xml:space="preserve">
          <source>Because this operator produces an assignable result, using assignments without parentheses will get you in trouble. For example, this:</source>
          <target state="translated">Debido a que este operador produce un resultado asignable,el uso de asignaciones sin paréntesis te meterá en problemas.Por ejemplo,esto:</target>
        </trans-unit>
        <trans-unit id="cda353c8b2d143f02b4da6818d79c64f57fb0765" translate="yes" xml:space="preserve">
          <source>Because this promotes action at a distance, this counterintuitive behavior may be fixed in a future release.</source>
          <target state="translated">Debido a que esto promueve la acción a distancia,este comportamiento contrario a la intuición puede ser arreglado en una futura liberación.</target>
        </trans-unit>
        <trans-unit id="ece57b9cb9008cd6f8ed94726d6205b9428981dc" translate="yes" xml:space="preserve">
          <source>Because thread creation and thread joining may occur in different contexts, it may be desirable to state the context explicitly to the thread's entry point function. This may be done by calling &lt;code&gt;-&amp;gt;create()&lt;/code&gt; with a hash reference as the first argument:</source>
          <target state="translated">Debido a que la creaci&amp;oacute;n y la uni&amp;oacute;n de subprocesos pueden ocurrir en contextos diferentes, puede ser deseable establecer el contexto expl&amp;iacute;citamente en la funci&amp;oacute;n de punto de entrada del subproceso. Esto se puede hacer llamando a &lt;code&gt;-&amp;gt;create()&lt;/code&gt; con una referencia hash como primer argumento:</target>
        </trans-unit>
        <trans-unit id="a311abdd84d17ec36b9f35316e74bcbefa1ccdb8" translate="yes" xml:space="preserve">
          <source>Because variable references always start with '$', '@', or '%', the &quot;reserved&quot; words aren't in fact reserved with respect to variable names. They</source>
          <target state="translated">Debido a que las referencias a las variables siempre comienzan con &quot;$&quot;,&quot;@&quot; o &quot;%&quot;,las palabras &quot;reservadas&quot; no son de hecho reservadas con respecto a los nombres de las variables.Son</target>
        </trans-unit>
        <trans-unit id="0ac64477279b51b2f8ca41484de7b49285b3815c" translate="yes" xml:space="preserve">
          <source>Because we are now concerned with the return value from</source>
          <target state="translated">Porque ahora nos preocupa el valor de retorno de</target>
        </trans-unit>
        <trans-unit id="9befd612f9b4e3c124f9ec128a96394cb71cf6fb" translate="yes" xml:space="preserve">
          <source>Because we are using an SV to call</source>
          <target state="translated">Porque estamos usando un SV para llamar</target>
        </trans-unit>
        <trans-unit id="ded04a0cee8ca9e46b88306d00153b5faa51a410" translate="yes" xml:space="preserve">
          <source>Because we created temporary values (by means of sv_2mortal() calls) we will have to tidy up the Perl stack and dispose of mortal SVs.</source>
          <target state="translated">Debido a que creamos valores temporales (por medio de llamadas sv_2mortal())tendremos que ordenar la pila de Perl y deshacernos de los SVs mortales.</target>
        </trans-unit>
        <trans-unit id="aa34046474e322c81f9b04585e1a1d3d975224ac" translate="yes" xml:space="preserve">
          <source>Because we specified G_DISCARD, it is not necessary to check the value returned from</source>
          <target state="translated">Debido a que especificamos G_DISCARD,no es necesario comprobar el valor devuelto de</target>
        </trans-unit>
        <trans-unit id="941fe97debd1bfb6b702aacc07a44435ca4e56b7" translate="yes" xml:space="preserve">
          <source>Because when &lt;code&gt;autochomp&lt;/code&gt; is disabled, &lt;code&gt;$a[10]&lt;/code&gt; will read back as &lt;code&gt;&quot;\n&quot;&lt;/code&gt; (or whatever the record separator string is.)</source>
          <target state="translated">Porque cuando &lt;code&gt;autochomp&lt;/code&gt; est&amp;aacute; deshabilitado, &lt;code&gt;$a[10]&lt;/code&gt; se leer&amp;aacute; como &lt;code&gt;&quot;\n&quot;&lt;/code&gt; (o cualquiera que sea la cadena de separaci&amp;oacute;n de registros).</target>
        </trans-unit>
        <trans-unit id="b0a17ee4f4c080e1c09fd835e1c924855560fcaf" translate="yes" xml:space="preserve">
          <source>Because you just moved the existing &lt;b&gt;stdout&lt;/b&gt; to somewhere else.</source>
          <target state="translated">Porque acaba de mover la salida &lt;b&gt;est&amp;aacute;ndar&lt;/b&gt; existente a otro lugar.</target>
        </trans-unit>
        <trans-unit id="aa628e92b3c4d485e932ec48525c963ebb2f9c63" translate="yes" xml:space="preserve">
          <source>Because you're using something like this, which truncates the file</source>
          <target state="translated">Porque estás usando algo como esto,que trunca el archivo</target>
        </trans-unit>
        <trans-unit id="973ca6acb768a5dd6330a5eade0b5d4dbc53ee84" translate="yes" xml:space="preserve">
          <source>Before Perl 5.10.0 and 5.8.8, PERL5SHELL was not taint checked when running external commands. It is recommended that you explicitly set (or delete) &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt; when running in taint mode under Windows.</source>
          <target state="translated">Antes de Perl 5.10.0 y 5.8.8, PERL5SHELL no se verificaba cuando se ejecutaban comandos externos. Se recomienda que establezca (o elimine) expl&amp;iacute;citamente &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt; cuando se ejecuta en modo corrupto en Windows.</target>
        </trans-unit>
        <trans-unit id="36d386f00504590e35abdcaf1bc115cbe7c02503" translate="yes" xml:space="preserve">
          <source>Before Perl 5.14, the assignment to &lt;code&gt;$@&lt;/code&gt; occurred before restoration of localized variables, which means that for your code to run on older versions, a temporary is required if you want to mask some but not all errors:</source>
          <target state="translated">Antes de Perl 5.14, la asignaci&amp;oacute;n a &lt;code&gt;$@&lt;/code&gt; ocurr&amp;iacute;a antes de la restauraci&amp;oacute;n de las variables localizadas, lo que significa que para que su c&amp;oacute;digo se ejecute en versiones anteriores, se requiere un temporal si desea enmascarar algunos pero no todos los errores:</target>
        </trans-unit>
        <trans-unit id="512488ae279d498c1ee81f682f1f53229da4c6e2" translate="yes" xml:space="preserve">
          <source>Before Perl 5.14, the relation between overloading and tie()ing was broken. Overloading was triggered or not based on the</source>
          <target state="translated">Antes del Perl 5.14,la relación entre la sobrecarga y el amarre se rompió.La sobrecarga se desencadenaba o no en función de la</target>
        </trans-unit>
        <trans-unit id="b34cea36bce317a875588bd1ba293a621fd141d4" translate="yes" xml:space="preserve">
          <source>Before Perl 5.18, &lt;code&gt;given(EXPR)&lt;/code&gt; assigned the value of</source>
          <target state="translated">Antes de Perl 5.18, &lt;code&gt;given(EXPR)&lt;/code&gt; asignado el valor de</target>
        </trans-unit>
        <trans-unit id="54445efd0dc2c1e8891bd0fe2ff854e28637df1f" translate="yes" xml:space="preserve">
          <source>Before Perl 5.6, you had to use the &lt;code&gt;*FH&lt;/code&gt; or &lt;code&gt;\*FH&lt;/code&gt; notations. These are &quot;typeglobs&quot;--see &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs and Filehandles in perldata&lt;/a&gt; and especially &lt;a href=&quot;perlsub#Pass-by-Reference&quot;&gt;Pass by Reference in perlsub&lt;/a&gt; for more information.</source>
          <target state="translated">Antes de Perl 5.6, ten&amp;iacute;a que usar las notaciones &lt;code&gt;*FH&lt;/code&gt; o &lt;code&gt;\*FH&lt;/code&gt; . Estos son &quot;typeglobs&quot; - vea &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs y Filehandles en perldata&lt;/a&gt; y especialmente &lt;a href=&quot;perlsub#Pass-by-Reference&quot;&gt;Pass by Reference en perlsub&lt;/a&gt; para m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2df4fb0a98f840a2555a3347deeff121cc142591" translate="yes" xml:space="preserve">
          <source>Before Perl 5.8.0, installing Perl code to deal with signals exposed you to danger from two things. First, few system library functions are re-entrant. If the signal interrupts while Perl is executing one function (like malloc(3) or printf(3)), and your signal handler then calls the same function again, you could get unpredictable behavior--often, a core dump. Second, Perl isn't itself re-entrant at the lowest levels. If the signal interrupts Perl while Perl is changing its own internal data structures, similarly unpredictable behavior may result.</source>
          <target state="translated">Antes de Perl 5.8.0,instalar el código Perl para tratar las señales te exponía al peligro de dos cosas.En primer lugar,pocas funciones de la biblioteca del sistema son reingresadas.Si la señal se interrumpe mientras Perl está ejecutando una función (como malloc(3)o printf(3)),y tu manejador de señales vuelve a llamar a la misma función,podrías obtener un comportamiento impredecible,a menudo,un volcado del núcleo.En segundo lugar,Perl no es en sí mismo reentrante en los niveles más bajos.Si la señal interrumpe el Perl mientras éste está cambiando sus propias estructuras internas de datos,puede resultar un comportamiento igualmente impredecible.</target>
        </trans-unit>
        <trans-unit id="870cc998eebf778ddd06bc7ed2f1805b37f31d55" translate="yes" xml:space="preserve">
          <source>Before Perl v5.8.0, the use of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; was used to declare that operations in the current block or file would be Unicode-aware. This model was found to be wrong, or at least clumsy: the &quot;Unicodeness&quot; is now carried with the data, instead of being attached to the operations. Starting with Perl v5.8.0, only one case remains where an explicit &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
utf8&lt;/code&gt; is needed: if your Perl script itself is encoded in UTF-8, you can use UTF-8 in your identifier names, and in string and regular expression literals, by saying &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; . This is not the default because scripts with legacy 8-bit data in them would break. See &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;.</source>
          <target state="translated">Antes de Perl v5.8.0, el uso de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; se usaba para declarar que las operaciones en el bloque o archivo actual ser&amp;iacute;an compatibles con Unicode. Se encontr&amp;oacute; que este modelo era incorrecto, o al menos torpe: el &quot;Unicodeness&quot; ahora se transporta con los datos, en lugar de estar adjunto a las operaciones. A partir de Perl v5.8.0, solo queda un caso en el que se necesita un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; expl&amp;iacute;cito de utf8 : si su propio script de Perl est&amp;aacute; codificado en UTF-8, puede usar UTF-8 en los nombres de sus identificadores y en cadenas y expresiones regulares literales, diciendo &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; . Este no es el valor predeterminado porque los scripts con datos heredados de 8 bits se romper&amp;iacute;an. Ver &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04e04ef0cf482846e31d6720b49ae41928208ea3" translate="yes" xml:space="preserve">
          <source>Before Unicode, most encodings used 8 bits (a single byte) to encode each character. Thus a character was a byte, and a byte was a character, and there could be only 256 or fewer possible characters. &quot;Byte Semantics&quot; in the title of this section refers to this behavior. There was no need to distinguish between &quot;Byte&quot; and &quot;Character&quot;.</source>
          <target state="translated">Antes de Unicode,la mayoría de las codificaciones usaban 8 bits (un solo byte)para codificar cada carácter.Por lo tanto,un carácter era un byte,y un byte era un carácter,y sólo podía haber 256 o menos caracteres posibles.&quot;Semántica de bytes&quot; en el título de esta sección se refiere a este comportamiento.No había necesidad de distinguir entre &quot;Byte&quot; y &quot;Carácter&quot;.</target>
        </trans-unit>
        <trans-unit id="290d67ae3ee387c5e4e99c79148af4efc4e204f2" translate="yes" xml:space="preserve">
          <source>Before Unicode, when a character was a byte was a character, Perl knew only about the 128 characters defined by ASCII, code points 0 through 127 (except for under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ). That left the code points 128 to 255 as unassigned, and available for whatever use a program might want. The only semantics they have is their ordinal numbers, and that they are members of none of the non-negative character classes. None are considered to match &lt;code&gt;\w&lt;/code&gt; for example, but all match &lt;code&gt;\W&lt;/code&gt; .</source>
          <target state="translated">Antes de Unicode, cuando un car&amp;aacute;cter era un byte era un car&amp;aacute;cter, Perl solo conoc&amp;iacute;a los 128 caracteres definidos por ASCII, puntos de c&amp;oacute;digo 0 a 127 (excepto para la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; en &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; ). Eso dej&amp;oacute; los puntos de c&amp;oacute;digo 128 a 255 sin asignar y disponibles para cualquier uso que un programa pudiera desear. La &amp;uacute;nica sem&amp;aacute;ntica que tienen son sus n&amp;uacute;meros ordinales y que no son miembros de ninguna de las clases de caracteres no negativos. Ninguno se consideran para que coincida con &lt;code&gt;\w&lt;/code&gt; por ejemplo, pero todo el partido &lt;code&gt;\W&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d690a12b540a565baadfa57c599d5a868691200d" translate="yes" xml:space="preserve">
          <source>Before any command has executed or if an unexpected error occurs &lt;code&gt;code()&lt;/code&gt; will return &quot;421&quot; (temporary connection failure) and &lt;code&gt;message()&lt;/code&gt; will return undef.</source>
          <target state="translated">Antes de que se haya ejecutado cualquier comando o si ocurre un error inesperado, el &lt;code&gt;code()&lt;/code&gt; devolver&amp;aacute; &quot;421&quot; (falla de conexi&amp;oacute;n temporal) y el &lt;code&gt;message()&lt;/code&gt; devolver&amp;aacute; undef.</target>
        </trans-unit>
        <trans-unit id="752f8552c1f4e0b002a40cffe2d75752a7a074d6" translate="yes" xml:space="preserve">
          <source>Before anything else, you need a testing plan. This basically declares how many tests your script is going to run to protect against premature failure.</source>
          <target state="translated">Antes que nada,necesitas un plan de pruebas.Esto básicamente declara cuántas pruebas va a ejecutar tu guión para protegerse de un fallo prematuro.</target>
        </trans-unit>
        <trans-unit id="4bb0c278106c5fac84e8a238d47e490b85a41fa5" translate="yes" xml:space="preserve">
          <source>Before installing the patches to the IBM C-compiler you need to know the level of patching for the Operating System. IBM's command 'oslevel' will show the base, but is not always complete (in this example oslevel shows 4.3.NULL, whereas the system might run most of 4.3.THREE):</source>
          <target state="translated">Antes de instalar los parches en el compilador C de IBM necesitas saber el nivel de parcheo para el Sistema Operativo.El comando 'oslevel' de IBM mostrará la base,pero no siempre está completo (en este ejemplo oslevel muestra 4.3.NULL,mientras que el sistema podría ejecutar la mayor parte de 4.3.TRES):</target>
        </trans-unit>
        <trans-unit id="b46ac14ab9ac97916ee87fb2735b65fa3bcb3084" translate="yes" xml:space="preserve">
          <source>Before perl5.6, you had to deal with various typeglob idioms which you may see in older code.</source>
          <target state="translated">Antes del perl5.6,tenías que lidiar con varios modismos tipográficos que puedes ver en códigos antiguos.</target>
        </trans-unit>
        <trans-unit id="4d24253ab2fd2c805f0d6bcaca41ee8bd8627285" translate="yes" xml:space="preserve">
          <source>Before release 5 of Perl it was difficult to represent complex data structures, because all references had to be symbolic--and even then it was difficult to refer to a variable instead of a symbol table entry. Perl now not only makes it easier to use symbolic references to variables, but also lets you have &quot;hard&quot; references to any piece of data or code. Any scalar may hold a hard reference. Because arrays and hashes contain scalars, you can now easily build arrays of arrays, arrays of hashes, hashes of arrays, arrays of hashes of functions, and so on.</source>
          <target state="translated">Antes de la versión 5 de Perl era difícil representar estructuras de datos complejas,porque todas las referencias tenían que ser simbólicas...e incluso entonces era difícil referirse a una variable en lugar de una entrada de tabla de símbolos.Ahora Perl no sólo facilita el uso de referencias simbólicas a las variables,sino que también permite tener referencias &quot;duras&quot; a cualquier dato o código.Cualquier escalar puede contener una referencia dura.Debido a que las matrices y hashes contienen escalares,ahora se pueden construir fácilmente matrices de matrices,matrices de hashes,hashes de matrices,matrices de hashes de funciones,y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="ef266fb9e8f6dafd9b23077a1b88d8327a3a9667" translate="yes" xml:space="preserve">
          <source>Before submitting a bug, please make sure that the traditional method of building a Perl module package from a shell by following the installation instructions of that package still works in your environment.</source>
          <target state="translated">Antes de enviar un error,por favor asegúrese de que el método tradicional de construir un paquete de módulos Perl desde un shell siguiendo las instrucciones de instalación de ese paquete aún funciona en su entorno.</target>
        </trans-unit>
        <trans-unit id="852a62fb5185caad446c6f66da79350d77dac37e" translate="yes" xml:space="preserve">
          <source>Before terminating, the &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; function must explicitly install the filter by calling &lt;code&gt;filter_add&lt;/code&gt; .</source>
          <target state="translated">Antes de terminar, la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n debe instalar expl&amp;iacute;citamente el filtro llamando a &lt;code&gt;filter_add&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f512253f81c2fd706ba28a9ad84dc13dc48c3eb8" translate="yes" xml:space="preserve">
          <source>Before the Perl interpreter can execute a Perl script, it must first read it from a file into memory for parsing and compilation. If that script itself includes other scripts with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; statement, then each of those scripts will have to be read from their respective files as well.</source>
          <target state="translated">Antes de que el int&amp;eacute;rprete de Perl pueda ejecutar un script de Perl, primero debe leerlo de un archivo a la memoria para analizarlo y compilarlo. Si ese script en s&amp;iacute; incluye otros scripts con una instrucci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , entonces cada uno de esos scripts deber&amp;aacute; leerse tambi&amp;eacute;n de sus respectivos archivos.</target>
        </trans-unit>
        <trans-unit id="7056378ac690eaab80565ece696557496384c5bd" translate="yes" xml:space="preserve">
          <source>Before the introduction of Unicode support in Perl, The &lt;code&gt;eq&lt;/code&gt; operator just compared the strings represented by two scalars. Beginning with Perl 5.8, &lt;code&gt;eq&lt;/code&gt; compares two strings with simultaneous consideration of</source>
          <target state="translated">Antes de la introducci&amp;oacute;n del soporte Unicode en Perl, el operador &lt;code&gt;eq&lt;/code&gt; simplemente comparaba las cadenas representadas por dos escalares. A partir de Perl 5.8, &lt;code&gt;eq&lt;/code&gt; compara dos cadenas con la consideraci&amp;oacute;n simult&amp;aacute;nea de</target>
        </trans-unit>
        <trans-unit id="07d7d02c48129829b963f0f9c3efb3625c646877" translate="yes" xml:space="preserve">
          <source>Before the introduction of lexical warnings, Perl had two classes of warnings: mandatory and optional.</source>
          <target state="translated">Antes de la introducción de las advertencias léxicas,Perl tenía dos clases de advertencias:obligatorias y opcionales.</target>
        </trans-unit>
        <trans-unit id="759cf8f89c69b1e5d0ddf3e544f843b8c5c70ae3" translate="yes" xml:space="preserve">
          <source>Before we even start scraping out the code, there are a few things we'll want to do in advance.</source>
          <target state="translated">Antes de que empecemos a raspar el código,hay algunas cosas que queremos hacer por adelantado.</target>
        </trans-unit>
        <trans-unit id="a2896a2a84e6fb1618d5a02150eb4f976c910264" translate="yes" xml:space="preserve">
          <source>Before we go any further, you'll want to know how to quit the debugger: use just the letter '&lt;b&gt;q&lt;/b&gt;', not the words 'quit' or 'exit':</source>
          <target state="translated">Antes de continuar, querr&amp;aacute; saber c&amp;oacute;mo salir del depurador: use solo la letra ' &lt;b&gt;q&lt;/b&gt; ', no las palabras 'salir' o 'salir':</target>
        </trans-unit>
        <trans-unit id="8a4b62fae1d0e77e031397754824b30119b2b62a" translate="yes" xml:space="preserve">
          <source>Before writing XS, read the &lt;a href=&quot;#CAVEATS&quot;&gt;CAVEATS&lt;/a&gt; section below.</source>
          <target state="translated">Antes de escribir XS, lea la secci&amp;oacute;n &lt;a href=&quot;#CAVEATS&quot;&gt;AVISOS a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1b5bba6a088484e3f244c7ed2d3c63206cbf13d5" translate="yes" xml:space="preserve">
          <source>Before you consider posting a bug report, please consult, and possibly post a message to the discussion forum to see if what you've encountered is a known problem.</source>
          <target state="translated">Antes de considerar la posibilidad de publicar un informe de fallo,por favor consulte,y posiblemente publique un mensaje en el foro de discusión para ver si lo que ha encontrado es un problema conocido.</target>
        </trans-unit>
        <trans-unit id="528e582d94b55449ac3523f64dd0d0e5c7486531" translate="yes" xml:space="preserve">
          <source>Before you continue, note the sort order for variables. In general, we first list the variables in case-insensitive, almost-lexigraphical order (ignoring the &lt;code&gt;{&lt;/code&gt; or &lt;code&gt;^&lt;/code&gt; preceding words, as in &lt;code&gt;${^UNICODE}&lt;/code&gt; or &lt;code&gt;$^T&lt;/code&gt; ), although &lt;code&gt;$_&lt;/code&gt; and &lt;code&gt;@_&lt;/code&gt; move up to the top of the pile. For variables with the same identifier, we list it in order of scalar, array, hash, and bareword.</source>
          <target state="translated">Antes de continuar, observe el orden de clasificaci&amp;oacute;n de las variables. En general, primero enumeramos las variables en orden casi lexigr&amp;aacute;fico que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas (ignorando las palabras &lt;code&gt;{&lt;/code&gt; o &lt;code&gt;^&lt;/code&gt; precedentes, como en &lt;code&gt;${^UNICODE}&lt;/code&gt; o &lt;code&gt;$^T&lt;/code&gt; ), aunque &lt;code&gt;$_&lt;/code&gt; y &lt;code&gt;@_&lt;/code&gt; se mueven hacia arriba de la pila. Para las variables con el mismo identificador, las enumeramos en orden escalar, matriz, hash y palabra sin formato.</target>
        </trans-unit>
        <trans-unit id="29b11945139a380af16d5d49212f0306507606fb" translate="yes" xml:space="preserve">
          <source>Before you decide to merge two hashes, you have to decide what to do if both hashes contain keys that are the same and if you want to leave the original hashes as they were.</source>
          <target state="translated">Antes de decidir fusionar dos hashes,hay que decidir qué hacer si ambos hashes contienen claves que son iguales y si se quiere dejar los hashes originales como estaban.</target>
        </trans-unit>
        <trans-unit id="7b25edaa05329b202d8bbb719df130a305f9a0e7" translate="yes" xml:space="preserve">
          <source>Before you do anything else, you can help yourself by ensuring that you let Perl tell you about problem areas in your code. By turning on warnings and strictures, you can head off many problems before they get too big. You can find out more about these in &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt; and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Antes de hacer cualquier otra cosa, puede ayudarse a s&amp;iacute; mismo asegur&amp;aacute;ndose de dejar que Perl le informe sobre las &amp;aacute;reas problem&amp;aacute;ticas en su c&amp;oacute;digo. Al activar las advertencias y restricciones, puede evitar muchos problemas antes de que sean demasiado grandes. Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre estos en &lt;a href=&quot;strict&quot;&gt;estricta&lt;/a&gt; y &lt;a href=&quot;warnings&quot;&gt;advertencias&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="054a146795bb49c5d92e2d968e739a1f63c7604c" translate="yes" xml:space="preserve">
          <source>Before you do that, first make sure the alias is nonexistent using &lt;code&gt;resolve_alias()&lt;/code&gt; , which returns the canonical name thereof. For example:</source>
          <target state="translated">Antes de hacer eso, primero aseg&amp;uacute;rese de que el alias no &lt;code&gt;resolve_alias()&lt;/code&gt; usando resolve_alias () , que devuelve el nombre can&amp;oacute;nico del mismo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ea4eb9d8b93fbec8607b4df5d4d1083567318fe5" translate="yes" xml:space="preserve">
          <source>Before you launch yourself head first into the rest of this document, it would be a good idea to have read the following two documents--&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; and &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">Antes de lanzarse de cabeza al resto de este documento, ser&amp;iacute;a una buena idea haber le&amp;iacute;do los dos documentos siguientes: &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; y &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dde9d3bcf2359cbba92e26ac6718964bcaacd3c3" translate="yes" xml:space="preserve">
          <source>Before you panic, know that many people do use &lt;code&gt;Moose&lt;/code&gt; for command-line tools and other startup-sensitive code. We encourage you to try &lt;code&gt;Moose&lt;/code&gt; out first before worrying about startup speed.</source>
          <target state="translated">Antes de que entre en p&amp;aacute;nico, sepa que muchas personas usan &lt;code&gt;Moose&lt;/code&gt; para herramientas de l&amp;iacute;nea de comandos y otro c&amp;oacute;digo sensible al inicio. Le recomendamos que pruebe &lt;code&gt;Moose&lt;/code&gt; primero antes de preocuparse por la velocidad de inicio.</target>
        </trans-unit>
        <trans-unit id="2c445dd5994fd48a7f879efa85cd15aa5394f95f" translate="yes" xml:space="preserve">
          <source>Before you start</source>
          <target state="translated">Antes de empezar</target>
        </trans-unit>
        <trans-unit id="fa35a8236ca3aecdca56f64d9f3832c8bf9e0996" translate="yes" xml:space="preserve">
          <source>Before you start, it's important to know a few things:</source>
          <target state="translated">Antes de empezar,es importante saber algunas cosas:</target>
        </trans-unit>
        <trans-unit id="85435e88ea012cea6ee5f0e38fd4d12329633e18" translate="yes" xml:space="preserve">
          <source>Before you start, you should glance through the README file found in the top-level directory to which the Perl distribution was extracted. Make sure you read and understand the terms under which this software is being distributed.</source>
          <target state="translated">Antes de empezar,deberías echar un vistazo al archivo README que se encuentra en el directorio de nivel superior al que se extrajo la distribución Perl.Asegúrese de leer y entender los términos bajo los cuales este software está siendo distribuido.</target>
        </trans-unit>
        <trans-unit id="82f236c12f0a7b2bfa05bcc6c77fce0d5554f74c" translate="yes" xml:space="preserve">
          <source>Before you start, you should glance through the README file found in the top-level directory where the Perl distribution was extracted. Make sure you read and understand the terms under which this software is being distributed.</source>
          <target state="translated">Antes de empezar,deberías echar un vistazo al archivo README que se encuentra en el directorio de nivel superior donde se extrajo la distribución Perl.Asegúrese de leer y comprender los términos bajo los cuales se distribuye este software.</target>
        </trans-unit>
        <trans-unit id="e6dc5aa054869bdc5776548930fba90056a049b5" translate="yes" xml:space="preserve">
          <source>Begin the retrieval of a file called &lt;code&gt;FILE&lt;/code&gt; from the remote server.</source>
          <target state="translated">Inicie la recuperaci&amp;oacute;n de un archivo llamado &lt;code&gt;FILE&lt;/code&gt; desde el servidor remoto.</target>
        </trans-unit>
        <trans-unit id="d1bae729fa6ba19a84ae13329bfa79bbfaf77e9b" translate="yes" xml:space="preserve">
          <source>Beginner note: In example 2, above &lt;code&gt;$columns&lt;/code&gt; is imported into the local namespace, and set locally. In example 3, &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; is set in its own namespace without importing it.</source>
          <target state="translated">Nota para principiantes: en el ejemplo 2, las &lt;code&gt;$columns&lt;/code&gt; anteriores se importan al espacio de nombres local y se configuran localmente. En el ejemplo 3, &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; se configura en su propio espacio de nombres sin importarlo.</target>
        </trans-unit>
        <trans-unit id="8c50d29cf088569a469311ef83bf39d51d30a011" translate="yes" xml:space="preserve">
          <source>Beginners often think they want to have a variable contain the name of a variable.</source>
          <target state="translated">Los principiantes a menudo piensan que quieren que una variable contenga el nombre de una variable.</target>
        </trans-unit>
        <trans-unit id="ddd5e0ea97f5ceda3171fdb3abe535bc421229c3" translate="yes" xml:space="preserve">
          <source>Beginning in Perl 5.12, Perl accepts an ellipsis, &quot;&lt;code&gt;...&lt;/code&gt; &quot;, as a placeholder for code that you haven't implemented yet. This form of ellipsis, the unimplemented statement, should not be confused with the binary flip-flop &lt;code&gt;...&lt;/code&gt; operator. One is a statement and the other an operator. (Perl doesn't usually confuse them because usually Perl can tell whether it wants an operator or a statement, but see below for exceptions.)</source>
          <target state="translated">A partir de Perl 5.12, Perl acepta puntos suspensivos, &quot; &lt;code&gt;...&lt;/code&gt; &quot;, como marcador de posici&amp;oacute;n para el c&amp;oacute;digo que a&amp;uacute;n no ha implementado. Esta forma de elipsis, la declaraci&amp;oacute;n no implementada, no debe confundirse con el operador binario flip-flop &lt;code&gt;...&lt;/code&gt; Uno es una declaraci&amp;oacute;n y el otro un operador. (Perl generalmente no los confunde porque generalmente Perl puede decir si quiere un operador o una declaraci&amp;oacute;n, pero vea las excepciones a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="82d48c3b20d2f80bac7595523990a9132ad0e311" translate="yes" xml:space="preserve">
          <source>Beginning in v5.20.0, a postfix syntax for using references is available. It behaves as described in &lt;a href=&quot;#Using-References&quot;&gt;Using References&lt;/a&gt;, but instead of a prefixed sigil, a postfixed sigil-and-star is used.</source>
          <target state="translated">A partir de la v5.20.0, est&amp;aacute; disponible una sintaxis de sufijo para usar referencias. Se comporta como se describe en &lt;a href=&quot;#Using-References&quot;&gt;Uso de referencias&lt;/a&gt; , pero en lugar de un sigilo prefijado, se usa un sigilo y una estrella posfijos.</target>
        </trans-unit>
        <trans-unit id="e4fd9d1748abdc28d0efb1f242a157236c1c9529" translate="yes" xml:space="preserve">
          <source>Beginning in v5.22.0, the referencing operator can be assigned to. It performs an aliasing operation, so that the variable name referenced on the left-hand side becomes an alias for the thing referenced on the right-hand side:</source>
          <target state="translated">A partir de la v5.22.0,se puede asignar el operador de referencia.Realiza una operación de alias,de modo que el nombre de la variable referenciada en el lado izquierdo se convierte en un alias para la cosa referenciada en el lado derecho:</target>
        </trans-unit>
        <trans-unit id="54f7bcfa82e1deb0e3342e8510b04a376681f2a5" translate="yes" xml:space="preserve">
          <source>Beginning with HP-UX 11.00, programs compiled under HP-UX can take advantage of the LP64 programming environment (LP64 means Longs and Pointers are 64 bits wide), in which scalar variables will be able to hold numbers larger than 2^32 with complete precision. Perl has proven to be consistent and reliable in 64bit mode since 5.8.1 on all HP-UX 11.xx.</source>
          <target state="translated">A partir de HP-UX 11.00,los programas compilados bajo HP-UX pueden aprovechar el entorno de programación LP64 (LP64 significa Longs y Pointers son de 64 bits de ancho),en el que las variables escalares serán capaces de contener números mayores de 2^32 con total precisión.Perl ha demostrado ser consistente y confiable en el modo de 64 bits desde 5.8.1 en todos los HP-UX 11.xx.</target>
        </trans-unit>
        <trans-unit id="7f252bceac885ebc51d1278ef820d426befd060f" translate="yes" xml:space="preserve">
          <source>Beginning with HP-UX version 10.20, files larger than 2GB (2^31 bytes) may be created and manipulated. Three separate methods of doing this are available. Of these methods, the best method for Perl is to compile using the -Duselargefiles flag to Configure. This causes Perl to be compiled using structures and functions in which these are 64 bits wide, rather than 32 bits wide. (Note that this will only work with HP's ANSI C compiler. If you want to compile Perl using gcc, you will have to get a version of the compiler that supports 64-bit operations. See above for where to find it.)</source>
          <target state="translated">A partir de la versión 10.20 de HP-UX,se pueden crear y manipular archivos de más de 2 GB (2^31 bytes).Existen tres métodos distintos para hacerlo.De estos métodos,el mejor para Perl es compilar usando la bandera -Duselargefiles para Configurar.Esto hace que Perl sea compilado usando estructuras y funciones en las que éstas tienen un ancho de 64 bits,en lugar de 32 bits.(Tengan en cuenta que esto sólo funcionará con el compilador ANSI C de HP.Si desea compilar Perl usando gcc,tendrá que obtener una versión del compilador que soporte operaciones de 64 bits.Ver arriba para saber dónde encontrarlo).</target>
        </trans-unit>
        <trans-unit id="7b1997a711dcb385772e62932a24b63be2ca5162" translate="yes" xml:space="preserve">
          <source>Beginning with Perl 5.10.0, you can declare variables with the &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; keyword in place of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;. For that to work, though, you must have enabled that feature beforehand, either by using the &lt;code&gt;feature&lt;/code&gt; pragma, or by using &lt;code&gt;-E&lt;/code&gt; on one-liners (see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;). Beginning with Perl 5.16, the &lt;code&gt;CORE::state&lt;/code&gt; form does not require the &lt;code&gt;feature&lt;/code&gt; pragma.</source>
          <target state="translated">A partir de Perl 5.10.0, puede declarar variables con la palabra clave &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; . Sin embargo, para que eso funcione, debe haber habilitado esa caracter&amp;iacute;stica de antemano, ya sea usando el pragma de &lt;code&gt;feature&lt;/code&gt; o usando &lt;code&gt;-E&lt;/code&gt; en una sola l&amp;iacute;nea (ver &lt;a href=&quot;feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; ). A partir de Perl 5.16, el formulario &lt;code&gt;CORE::state&lt;/code&gt; no requiere la &lt;code&gt;feature&lt;/code&gt; pragma.</target>
        </trans-unit>
        <trans-unit id="fd848af5e7c989b28a26cc1aec55564025fc4af9" translate="yes" xml:space="preserve">
          <source>Beginning with Perl 5.18, you can declare a private subroutine with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;. As with state variables, the &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; keyword is only available under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'state'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.010&lt;/code&gt; or higher.</source>
          <target state="translated">A partir de Perl 5.18, puede declarar una subrutina privada con &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; . Al igual que con las variables de estado, la palabra clave de &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; solo est&amp;aacute; disponible en la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'state'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'estado' o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.010&lt;/code&gt; o superior.</target>
        </trans-unit>
        <trans-unit id="2eca9f03e4044bf99d10838840f25a5c4ae464b9" translate="yes" xml:space="preserve">
          <source>Beginning with perl 5.10.0, you can also use &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables to have lexicals that are initialized only once (see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;):</source>
          <target state="translated">A partir de perl 5.10.0, tambi&amp;eacute;n puede usar variables de &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; para tener l&amp;eacute;xicos que se inicializan solo una vez (ver &lt;a href=&quot;feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="d269396692530a4c995cb59a2555fae5ff4dd172" translate="yes" xml:space="preserve">
          <source>Beginning with version 5.004, the following functions are also supported:</source>
          <target state="translated">A partir de la versión 5.004,también se soportan las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="34133685a790f2f2b5caab0cdf19417a300c4bef" translate="yes" xml:space="preserve">
          <source>Behaves like wait(2) on your system: it waits for a child process to terminate and returns the pid of the deceased process, or &lt;code&gt;-1&lt;/code&gt; if there are no child processes. The status is returned in &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; . Note that a return value of &lt;code&gt;-1&lt;/code&gt; could mean that child processes are being automatically reaped, as described in &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt;.</source>
          <target state="translated">Se comporta como wait (2) en su sistema: espera a que termine un proceso hijo y devuelve el pid del proceso fallecido, o &lt;code&gt;-1&lt;/code&gt; si no hay procesos hijo. El estado se devuelve en &lt;code&gt;$?&lt;/code&gt; y &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; . Tenga en cuenta que un valor de retorno de &lt;code&gt;-1&lt;/code&gt; podr&amp;iacute;a significar que los procesos secundarios se cosechan autom&amp;aacute;ticamente, como se describe en &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f0c5491ce914759629c95815e914e921b25062e" translate="yes" xml:space="preserve">
          <source>Behaves like wait(2) on your system: it waits for a child process to terminate and returns the pid of the deceased process, or &lt;code&gt;-1&lt;/code&gt; if there are no child processes. The status is returned in &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; . Note that a return value of &lt;code&gt;-1&lt;/code&gt; could mean that child processes are being automatically reaped, as described in &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt;.</source>
          <target state="translated">Se comporta como wait (2) en su sistema: espera a que termine un proceso hijo y devuelve el pid del proceso fallecido, o &lt;code&gt;-1&lt;/code&gt; si no hay procesos hijo. El estado se devuelve en &lt;code&gt;$?&lt;/code&gt; y &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; . Tenga en cuenta que un valor de retorno de &lt;code&gt;-1&lt;/code&gt; podr&amp;iacute;a significar que los procesos secundarios se cosechan autom&amp;aacute;ticamente, como se describe en &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0be599b479dc1a9d62fd33cd4b25ae6147cf1069" translate="yes" xml:space="preserve">
          <source>Behaves the same as &lt;a href=&quot;#croak&quot;&gt;croak&lt;/a&gt;, except for the return type. It should be used only where the &lt;code&gt;OP *&lt;/code&gt; return type is required. The function never actually returns.</source>
          <target state="translated">Se comporta igual que &lt;a href=&quot;#croak&quot;&gt;croak&lt;/a&gt; , excepto por el tipo de retorno. Debe usarse solo donde se requiera el tipo de retorno &lt;code&gt;OP *&lt;/code&gt; . La funci&amp;oacute;n nunca regresa realmente.</target>
        </trans-unit>
        <trans-unit id="4c49c08082a231774a342ac5391eebbc26cb4596" translate="yes" xml:space="preserve">
          <source>Behaves the same as &lt;a href=&quot;#croak_sv&quot;&gt;croak_sv&lt;/a&gt;, except for the return type. It should be used only where the &lt;code&gt;OP *&lt;/code&gt; return type is required. The function never actually returns.</source>
          <target state="translated">Se comporta igual que &lt;a href=&quot;#croak_sv&quot;&gt;croak_sv&lt;/a&gt; , excepto por el tipo de retorno. Debe usarse solo donde se requiera el tipo de retorno &lt;code&gt;OP *&lt;/code&gt; . La funci&amp;oacute;n nunca regresa realmente.</target>
        </trans-unit>
        <trans-unit id="fbf9c5863d4bbe3bd2490f1ad8ab93b461cdea43" translate="yes" xml:space="preserve">
          <source>Behavior of other Perl features in forked pseudo-processes</source>
          <target state="translated">El comportamiento de otras características de Perl en pseudo-procesos bifurcados</target>
        </trans-unit>
        <trans-unit id="546fd299e317f0cfab072f158d53c6046d080ef9" translate="yes" xml:space="preserve">
          <source>Behavior of this function varies wildly depending on your system implementation. For example, it will usually not work across file system boundaries, even though the system</source>
          <target state="translated">El comportamiento de esta función varía mucho dependiendo de la implementación de su sistema.Por ejemplo,normalmente no funcionará a través de los límites del sistema de archivos,aunque el sistema</target>
        </trans-unit>
        <trans-unit id="6296c0acaf0c68b8a708c260d5e620e45c188c21" translate="yes" xml:space="preserve">
          <source>Behaviour since version 2.11</source>
          <target state="translated">Comportamiento desde la versión 2.11</target>
        </trans-unit>
        <trans-unit id="fc99a03494d30ac32472278376507c26adfb39ce" translate="yes" xml:space="preserve">
          <source>Behind The Scenes</source>
          <target state="translated">Entre bastidores</target>
        </trans-unit>
        <trans-unit id="8e234f329fb33ee94403565f619b16d72bc67919" translate="yes" xml:space="preserve">
          <source>Behind the scenes the &lt;code&gt;globmap&lt;/code&gt; function does a combination of a file glob to match existing filenames followed by a substitute to create the new filenames.</source>
          <target state="translated">Detr&amp;aacute;s de escena, la funci&amp;oacute;n de &lt;code&gt;globmap&lt;/code&gt; hace una combinaci&amp;oacute;n de un archivo global para que coincida con los nombres de archivo existentes seguido de un sustituto para crear los nuevos nombres de archivo.</target>
        </trans-unit>
        <trans-unit id="4f88b0aecf2344cf177fb22c2c1e4809d60f491d" translate="yes" xml:space="preserve">
          <source>Being Perl-specific, this function has evolved along time. It can currently be called as follow:</source>
          <target state="translated">Siendo específica de Perl,esta función ha evolucionado a lo largo del tiempo.Actualmente se puede llamar así:</target>
        </trans-unit>
        <trans-unit id="0fc303a764ff6b60a94ad6969ea173a3382e1620" translate="yes" xml:space="preserve">
          <source>Being a mechanical process pl2pm is not bullet proof. The converted code will need careful checking, especially any package statements. Don't delete the original .pl file till the new .pm one works!</source>
          <target state="translated">Ser un proceso mecánico pl2pm no es a prueba de balas.El código convertido necesitará una revisión cuidadosa,especialmente cualquier declaración de paquete.¡No borre el archivo .pl original hasta que el nuevo .pm funcione!</target>
        </trans-unit>
        <trans-unit id="e98f301c8128b87a5492d5177997df433005bc22" translate="yes" xml:space="preserve">
          <source>Being parsimonious on filehandles is also useful (besides being parsimonious) for example when something is dependent on file descriptors, like for example locking using flock(). If you do just &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;B&quot;)&lt;/code&gt; , the filehandle A will not have the same file descriptor as B, and therefore flock(A) will not flock(B) nor vice versa. But with &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;=B&quot;)&lt;/code&gt; , the filehandles will share the same underlying system file descriptor.</source>
          <target state="translated">Ser parsimonioso en los identificadores de archivos tambi&amp;eacute;n es &amp;uacute;til (adem&amp;aacute;s de ser parsimonioso), por ejemplo, cuando algo depende de los descriptores de archivos, como por ejemplo, bloquear con flock (). Si simplemente &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;B&quot;)&lt;/code&gt; , el identificador de archivo A no tendr&amp;aacute; el mismo descriptor de archivo que B, y por lo tanto flock (A) no flock (B) ni viceversa. Pero con &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;=B&quot;)&lt;/code&gt; , los identificadores de archivo compartir&amp;aacute;n el mismo descriptor de archivo del sistema subyacente.</target>
        </trans-unit>
        <trans-unit id="eb7d6ff0d012000fe6eccb3c989a4ceae1efb833" translate="yes" xml:space="preserve">
          <source>Being parsimonious on filehandles is also useful (besides being parsimonious) for example when something is dependent on file descriptors, like for example locking using flock(). If you do just &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;B&quot;)&lt;/code&gt; , the filehandle A will not have the same file descriptor as B, and therefore flock(A) will not flock(B) nor vice versa. But with &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;=B&quot;)&lt;/code&gt; , the filehandles will share the same underlying system file descriptor.</source>
          <target state="translated">Ser parsimonioso en los identificadores de archivos tambi&amp;eacute;n es &amp;uacute;til (adem&amp;aacute;s de ser parsimonioso), por ejemplo, cuando algo depende de los descriptores de archivos, como por ejemplo, bloquear con flock (). Si simplemente &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;B&quot;)&lt;/code&gt; , el identificador de archivo A no tendr&amp;aacute; el mismo descriptor de archivo que B, y por lo tanto flock (A) no flock (B) ni viceversa. Pero con &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;(A, &quot;&amp;gt;&amp;gt;&amp;amp;=B&quot;)&lt;/code&gt; , los identificadores de archivo compartir&amp;aacute;n el mismo descriptor de archivo del sistema subyacente.</target>
        </trans-unit>
        <trans-unit id="1b8a9f965c18d647b7a7bff03b9e0c4a68361224" translate="yes" xml:space="preserve">
          <source>Bell sounds when word completion fails.</source>
          <target state="translated">La campana suena cuando falla la terminación de la palabra.</target>
        </trans-unit>
        <trans-unit id="74d2e1c77a10412bd2a923bb84c1c65e97a50e55" translate="yes" xml:space="preserve">
          <source>Below are a few examples of globmaps</source>
          <target state="translated">A continuación se presentan algunos ejemplos de globmaps</target>
        </trans-unit>
        <trans-unit id="d6238547f660d516d0fdf40f8de1337807f2955e" translate="yes" xml:space="preserve">
          <source>Below is a</source>
          <target state="translated">A continuación se muestra un</target>
        </trans-unit>
        <trans-unit id="eab1a70d36b9d2b495b3781776947aeb4b2fc004" translate="yes" xml:space="preserve">
          <source>Below is a list of a few frameworks with comments which might help you in making a decision, depending on your specific requirements. Start by reading the docs, then ask questions on the relevant mailing list or IRC channel.</source>
          <target state="translated">A continuación figura una lista de algunos marcos con comentarios que podrían ayudarle a tomar una decisión,en función de sus necesidades específicas.Comience leyendo los documentos,luego haga preguntas en la lista de correo correspondiente o en el canal IRC.</target>
        </trans-unit>
        <trans-unit id="1f47cec9db1010fb960d67042b7e30d1824cca4b" translate="yes" xml:space="preserve">
          <source>Below is a list of the files in the Unicode data base that Perl doesn't currently use, along with very brief descriptions of their purposes. Some of the names of the files have been shortened from those that Unicode uses, in order to allow them to be distinguishable from similarly named files on file systems for which only the first 8 characters of a name are significant.</source>
          <target state="translated">A continuación se presenta una lista de los archivos de la base de datos Unicode que Perl no utiliza actualmente,junto con descripciones muy breves de sus propósitos.Algunos de los nombres de los archivos han sido acortados de los que utiliza Unicode,a fin de permitir que se distingan de los archivos con nombres similares en los sistemas de archivos para los que sólo los primeros 8 caracteres de un nombre son significativos.</target>
        </trans-unit>
        <trans-unit id="80905719173a37bfcc2cab267e8366cac44b82fa" translate="yes" xml:space="preserve">
          <source>Below is a list of the methods available.</source>
          <target state="translated">A continuación figura una lista de los métodos disponibles.</target>
        </trans-unit>
        <trans-unit id="a5ddbb5a4ded78a58dd050a0a7bd8f09a53b44f8" translate="yes" xml:space="preserve">
          <source>Below is a list of the valid options:</source>
          <target state="translated">A continuación se presenta una lista de las opciones válidas:</target>
        </trans-unit>
        <trans-unit id="f51c6d51b727cf7e1f4d3849980abd064bedf568" translate="yes" xml:space="preserve">
          <source>Below is a mapping of what utilities will be used in what order for what schemes, if available:</source>
          <target state="translated">A continuación se presenta un mapa de las utilidades que se usarán en qué orden para qué esquemas,si están disponibles:</target>
        </trans-unit>
        <trans-unit id="beba98866f16c9dd2863b4a3ebd6b7ee815c3c45" translate="yes" xml:space="preserve">
          <source>Below is a possible implementation of a script to carry out the rename (error cases have been omitted)</source>
          <target state="translated">A continuación se presenta una posible implementación de un guión para llevar a cabo el renombramiento (se han omitido los casos de error)</target>
        </trans-unit>
        <trans-unit id="58a01ebfbc11cd115ad51487cc4a5f70ba63da00" translate="yes" xml:space="preserve">
          <source>Below is a script which makes use of &lt;code&gt;gzreadline&lt;/code&gt; . It implements a very simple</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un script que hace uso de &lt;code&gt;gzreadline&lt;/code&gt; . Implementa un muy simple</target>
        </trans-unit>
        <trans-unit id="7ffed42afdfaf25df4c7e5e8645b31ce92ca54e6" translate="yes" xml:space="preserve">
          <source>Below is a simple &quot;rename&quot; script that uses &lt;code&gt;globmap&lt;/code&gt; to determine the source and destination filenames.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un sencillo script de &quot;cambio de nombre&quot; que utiliza &lt;code&gt;globmap&lt;/code&gt; para determinar los nombres de archivo de origen y destino.</target>
        </trans-unit>
        <trans-unit id="1ec37797cdff4399757b58637d8bd54b7066dfec" translate="yes" xml:space="preserve">
          <source>Below is an example module that makes use of the macros.</source>
          <target state="translated">A continuación se muestra un módulo de ejemplo que hace uso de las macros.</target>
        </trans-unit>
        <trans-unit id="2be2899025a1fe4d200821c4ccbd79eabb3ab414" translate="yes" xml:space="preserve">
          <source>Below is an example program, &lt;code&gt;cpp_test&lt;/code&gt; , which makes use of this filter. Line numbers have been added to allow specific lines to be referenced easily.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un programa de ejemplo, &lt;code&gt;cpp_test&lt;/code&gt; , que utiliza este filtro. Se han agregado n&amp;uacute;meros de l&amp;iacute;nea para permitir que las l&amp;iacute;neas espec&amp;iacute;ficas sean referenciadas f&amp;aacute;cilmente.</target>
        </trans-unit>
        <trans-unit id="4e2cc23005bf69f272f1f19d9851308543cafdff" translate="yes" xml:space="preserve">
          <source>Below is just one example, illustrating the control verb &lt;code&gt;(*FAIL)&lt;/code&gt; , which may be abbreviated as &lt;code&gt;(*F)&lt;/code&gt; . If this is inserted in a regexp it will cause it to fail, just as it would at some mismatch between the pattern and the string. Processing of the regexp continues as it would after any &quot;normal&quot; failure, so that, for instance, the next position in the string or another alternative will be tried. As failing to match doesn't preserve capture groups or produce results, it may be necessary to use this in combination with embedded code.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra solo un ejemplo, que ilustra el verbo de control &lt;code&gt;(*FAIL)&lt;/code&gt; , que puede abreviarse como &lt;code&gt;(*F)&lt;/code&gt; . Si esto se inserta en una expresi&amp;oacute;n regular, har&amp;aacute; que falle, tal como lo har&amp;iacute;a en una discrepancia entre el patr&amp;oacute;n y la cadena. El procesamiento de la expresi&amp;oacute;n regular contin&amp;uacute;a como lo har&amp;iacute;a despu&amp;eacute;s de cualquier falla &quot;normal&quot;, de modo que, por ejemplo, se probar&amp;aacute; la siguiente posici&amp;oacute;n en la cadena u otra alternativa. Dado que no hacer coincidir no preserva los grupos de captura ni produce resultados, puede ser necesario usar esto en combinaci&amp;oacute;n con el c&amp;oacute;digo incrustado.</target>
        </trans-unit>
        <trans-unit id="994ae30ab39b91782977e3601a4b1c5958c55b6d" translate="yes" xml:space="preserve">
          <source>Below is the sample of what to do to reproduce the configuration on my machine. In</source>
          <target state="translated">A continuación se muestra una muestra de lo que hay que hacer para reproducir la configuración en mi máquina.En</target>
        </trans-unit>
        <trans-unit id="8d0833a6280a2357c9ec993c9c38bf06fc8a81e8" translate="yes" xml:space="preserve">
          <source>Below is typical code that shows how to use &lt;code&gt;LimitOutput&lt;/code&gt; .</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un c&amp;oacute;digo t&amp;iacute;pico que muestra c&amp;oacute;mo utilizar &lt;code&gt;LimitOutput&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f28ac791ee08fb184476e4de12d634a0a1d7498" translate="yes" xml:space="preserve">
          <source>Ben Tilly</source>
          <target state="translated">Ben Tilly</target>
        </trans-unit>
        <trans-unit id="9ed99e75a9b04f273de29c9fef2bd3fb53d2e2de" translate="yes" xml:space="preserve">
          <source>Benchmark</source>
          <target state="translated">Benchmark</target>
        </trans-unit>
        <trans-unit id="9a552526ddac8fc37648130a16d1381a6f9ad6fb" translate="yes" xml:space="preserve">
          <source>Benchmark - benchmark running times of Perl code</source>
          <target state="translated">Referencia:tiempos de ejecución de referencia del código Perl.</target>
        </trans-unit>
        <trans-unit id="c6133998f601e0eb9b2fbe0a853d3f9116d43ce3" translate="yes" xml:space="preserve">
          <source>Benchmark Object</source>
          <target state="translated">objeto de referencia</target>
        </trans-unit>
        <trans-unit id="0ff60c3e395ce6dcfa9869e330a91fa3d0e1a335" translate="yes" xml:space="preserve">
          <source>Benchmark inherits from no other class, except of course from Exporter.</source>
          <target state="translated">Benchmark no hereda de ninguna otra clase,excepto,por supuesto,del Exportador.</target>
        </trans-unit>
        <trans-unit id="bf40ff62878fab85612abb7b1055df933f606399" translate="yes" xml:space="preserve">
          <source>Benchmark running times of Perl code</source>
          <target state="translated">Los tiempos de referencia del código Perl</target>
        </trans-unit>
        <trans-unit id="4b02607a2ea9a6953d07f941016201f155b468af" translate="yes" xml:space="preserve">
          <source>Benjamin Holzman contributed the tied variable support, Andrew Ford contributed the canonical order for hashes, and Gisle Aas fixed a few misunderstandings of mine regarding the perl internals, and optimized the emission of &quot;tags&quot; in the output streams by simply counting the objects instead of tagging them (leading to a binary incompatibility for the Storable image starting at version 0.6--older images are, of course, still properly understood). Murray Nesbitt made Storable thread-safe. Marc Lehmann added overloading and references to tied items support. Benjamin Holzman added a performance improvement for overloaded classes; thanks to Grant Street Group for footing the bill.</source>
          <target state="translated">Benjamin Holzman contribuyó con el soporte de la variable atada,Andrew Ford contribuyó con el orden canónico para los hashes,y Gisle Aas arregló algunos malentendidos míos con respecto a los internos del perl,y optimizó la emisión de &quot;tags&quot; en los flujos de salida simplemente contando los objetos en lugar de etiquetarlos (lo que llevó a una incompatibilidad binaria para la imagen del Storable a partir de la versión 0.6-las imágenes antiguas,por supuesto,todavía se entienden correctamente).Murray Nesbitt hizo el hilo de Storable seguro.Marc Lehmann añadió la sobrecarga y las referencias al soporte de artículos atados.Benjamin Holzman añadió una mejora de rendimiento para las clases sobrecargadas;gracias a Grant Street Group por pagar la factura.</target>
        </trans-unit>
        <trans-unit id="75fc540bc0a50aa81831bc474ec860350d0bca6e" translate="yes" xml:space="preserve">
          <source>Berkeley DB allows the creation of in-memory databases by using NULL (that is, a &lt;code&gt;(char *)0&lt;/code&gt; in C) in place of the filename. &lt;b&gt;DB_File&lt;/b&gt; uses &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; instead of NULL to provide this functionality.</source>
          <target state="translated">Berkeley DB permite la creaci&amp;oacute;n de bases de datos en memoria utilizando NULL (es decir, un &lt;code&gt;(char *)0&lt;/code&gt; en C) en lugar del nombre del archivo. &lt;b&gt;DB_File&lt;/b&gt; usa &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en lugar de NULL para proporcionar esta funcionalidad.</target>
        </trans-unit>
        <trans-unit id="9268b246582cb1f8cd7166d3bdd75afc5afe74a7" translate="yes" xml:space="preserve">
          <source>Berkeley DB is a C library which provides a consistent interface to a number of database formats. &lt;b&gt;DB_File&lt;/b&gt; provides an interface to all three of the database types currently supported by Berkeley DB.</source>
          <target state="translated">Berkeley DB es una biblioteca de C que proporciona una interfaz coherente para varios formatos de base de datos. &lt;b&gt;DB_File&lt;/b&gt; proporciona una interfaz para los tres tipos de bases de datos que actualmente admite Berkeley DB.</target>
        </trans-unit>
        <trans-unit id="434964490ac8a77af87035de9e77b760d4b578ea" translate="yes" xml:space="preserve">
          <source>Berkeley DB uses the function dbopen() to open or create a database. Here is the C prototype for dbopen():</source>
          <target state="translated">La base de datos de Berkeley utiliza la función dbopen()para abrir o crear una base de datos.Aquí está el prototipo de C para dbopen():</target>
        </trans-unit>
        <trans-unit id="cbcc04a4e53af70d968fb1854369b92c28068d53" translate="yes" xml:space="preserve">
          <source>BerkeleyDB is available for Cygwin.</source>
          <target state="translated">BerkeleyDB está disponible para Cygwin.</target>
        </trans-unit>
        <trans-unit id="994ccae3d03329e5f7c9f11ecf6157dc38d89408" translate="yes" xml:space="preserve">
          <source>Beside import() and AUTOLOAD() there are only a few other methods.</source>
          <target state="translated">Además de import()y AUTOLOAD()sólo hay algunos otros métodos.</target>
        </trans-unit>
        <trans-unit id="0cc3e4e79500c47fb5b02fd6bd36bb30830d4b93" translate="yes" xml:space="preserve">
          <source>Besides &lt;a href=&quot;#decode&quot;&gt;decode&lt;/a&gt; and &lt;a href=&quot;#encode&quot;&gt;encode&lt;/a&gt;, other methods are available as well. For instance, &lt;code&gt;name()&lt;/code&gt; returns the canonical name of the encoding object.</source>
          <target state="translated">Adem&amp;aacute;s de &lt;a href=&quot;#decode&quot;&gt;decodificar&lt;/a&gt; y &lt;a href=&quot;#encode&quot;&gt;codificar&lt;/a&gt; , tambi&amp;eacute;n hay otros m&amp;eacute;todos disponibles. Por ejemplo, &lt;code&gt;name()&lt;/code&gt; devuelve el nombre can&amp;oacute;nico del objeto de codificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a7e42697322af6c9745acd371b634a7d3de7f9ce" translate="yes" xml:space="preserve">
          <source>Besides checking existing XS code, the script can also be used to retrieve compatibility information for various API calls using the &lt;code&gt;--api-info&lt;/code&gt; command line switch. For example:</source>
          <target state="translated">Adem&amp;aacute;s de verificar el c&amp;oacute;digo XS existente, el script tambi&amp;eacute;n se puede usar para recuperar informaci&amp;oacute;n de compatibilidad para varias llamadas de API usando el interruptor de l&amp;iacute;nea de comando &lt;code&gt;--api-info&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="38c540b359fe4177c8733f2554f7c8aac1cf7755" translate="yes" xml:space="preserve">
          <source>Besides many other tests, it will test every locale it finds on your system to see if they conform to the POSIX standard. If any have errors, it will include a summary near the end of the output of which locales passed all its tests, and which failed, and why.</source>
          <target state="translated">Además de muchas otras pruebas,probará cada local que encuentre en su sistema para ver si se ajustan al estándar POSIX.Si alguna tiene errores,incluirá un resumen cerca del final de la salida de qué locales pasaron todas sus pruebas,y cuáles fallaron,y por qué.</target>
        </trans-unit>
        <trans-unit id="eaf1b9544c43d438f9e6f77acb1ab9f9247ce8b8" translate="yes" xml:space="preserve">
          <source>Besides putting the cross-compiler and the rest of the toolchain in your PATH, this will also provide the QNX_TARGET variable, which we will pass to Configure through -Dsysroot.</source>
          <target state="translated">Además de poner el compilador cruzado y el resto de la cadena de herramientas en su PATH,esto también proporcionará la variable QNX_TARGET,que pasaremos a Configurar a través de -Dsysroot.</target>
        </trans-unit>
        <trans-unit id="8731a27dfb4cb7bb97f8e5e387722a8377af9b68" translate="yes" xml:space="preserve">
          <source>Besides saving these hashes as the hashref attributes &lt;code&gt;name2path&lt;/code&gt; and &lt;code&gt;path2name&lt;/code&gt; , calling this function also returns these hashrefs. In list context, the return value of &lt;code&gt;$search-&amp;gt;survey&lt;/code&gt; is the list &lt;code&gt;(\%name2path, \%path2name)&lt;/code&gt; . In scalar context, the return value is &lt;code&gt;\%name2path&lt;/code&gt; . Or you can just call this in void context.</source>
          <target state="translated">Adem&amp;aacute;s de guardar estos hash como los atributos &lt;code&gt;name2path&lt;/code&gt; y &lt;code&gt;path2name&lt;/code&gt; , llamar a esta funci&amp;oacute;n tambi&amp;eacute;n devuelve estos hashrefs. En el contexto de la lista, el valor de retorno de &lt;code&gt;$search-&amp;gt;survey&lt;/code&gt; es la lista &lt;code&gt;(\%name2path, \%path2name)&lt;/code&gt; . En contexto escalar, el valor de retorno es &lt;code&gt;\%name2path&lt;/code&gt; . O simplemente puede llamar a esto en contexto vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="d17cf41d34eb6f4b37b1b9cc872817585f3b1ca4" translate="yes" xml:space="preserve">
          <source>Besides the &lt;code&gt;$|&lt;/code&gt; special variable, you can use &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; to give your filehandle a &lt;code&gt;:unix&lt;/code&gt; layer, which is unbuffered:</source>
          <target state="translated">Adem&amp;aacute;s del &lt;code&gt;$|&lt;/code&gt; variable especial, puede usar &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; para darle a su identificador de archivo una capa &lt;code&gt;:unix&lt;/code&gt; , que no tiene b&amp;uacute;fer:</target>
        </trans-unit>
        <trans-unit id="c874def12573a04b6982ff2c45bf57742f038615" translate="yes" xml:space="preserve">
          <source>Besides the NBSP character discussed above, implementors are reminded of the existence of the other &quot;special&quot; character in Latin-1, the &quot;soft hyphen&quot; character, also known as &quot;discretionary hyphen&quot;, i.e. &lt;code&gt;E&amp;lt;173&amp;gt;&lt;/code&gt; = &lt;code&gt;E&amp;lt;0xAD&amp;gt;&lt;/code&gt; = &lt;code&gt;E&amp;lt;shy&amp;gt;&lt;/code&gt; ). This character expresses an optional hyphenation point. That is, it normally renders as nothing, but may render as a &quot;-&quot; if a formatter breaks the word at that point. Pod formatters should, as appropriate, do one of the following: 1) render this with a code with the same meaning (e.g., &quot;\-&quot; in RTF), 2) pass it through in the expectation that the formatter understands this character as such, or 3) delete it.</source>
          <target state="translated">Adem&amp;aacute;s del car&amp;aacute;cter NBSP mencionado anteriormente, se recuerda a los implementadores la existencia del otro car&amp;aacute;cter &quot;especial&quot; en Latin-1, el car&amp;aacute;cter de &quot;gui&amp;oacute;n suave&quot;, tambi&amp;eacute;n conocido como &quot;gui&amp;oacute;n discrecional&quot;, es decir, &lt;code&gt;E&amp;lt;173&amp;gt;&lt;/code&gt; = &lt;code&gt;E&amp;lt;0xAD&amp;gt;&lt;/code&gt; = &lt;code&gt;E&amp;lt;shy&amp;gt;&lt;/code&gt; ). Este car&amp;aacute;cter expresa un punto de separaci&amp;oacute;n de s&amp;iacute;labas opcional. Es decir, normalmente se representa como nada, pero puede presentarse como un &quot;-&quot; si un formateador rompe la palabra en ese punto. Los formateadores de pod deben, seg&amp;uacute;n corresponda, realizar una de las siguientes acciones: 1) renderizar esto con un c&amp;oacute;digo con el mismo significado (p. Ej., &quot;\ -&quot; en RTF), 2) pasarlo con la expectativa de que el formateador entienda este car&amp;aacute;cter como tal, o 3) eliminarlo.</target>
        </trans-unit>
        <trans-unit id="383f64e6a803d40e90542694df252e926486880e" translate="yes" xml:space="preserve">
          <source>Besides the normal array index looping, &lt;code&gt;for&lt;/code&gt; can lend itself to many other interesting applications. Here's one that avoids the problem you get into if you explicitly test for end-of-file on an interactive file descriptor causing your program to appear to hang.</source>
          <target state="translated">Adem&amp;aacute;s del bucle de &amp;iacute;ndice de matriz normal, &lt;code&gt;for&lt;/code&gt; puede prestarse a muchas otras aplicaciones interesantes. Aqu&amp;iacute; hay uno que evita el problema en el que se mete si prueba expl&amp;iacute;citamente el final del archivo en un descriptor de archivo interactivo que hace que su programa parezca bloquearse.</target>
        </trans-unit>
        <trans-unit id="b788aba9c107e5a4eaba0767ff3be57caf43c88d" translate="yes" xml:space="preserve">
          <source>Besides the obvious documents, source code can be instructive. Some pathological examples of the use of references can be found in the</source>
          <target state="translated">Además de los documentos obvios,el código fuente puede ser instructivo.Algunos ejemplos patológicos del uso de referencias pueden encontrarse en el</target>
        </trans-unit>
        <trans-unit id="3cd8fe6552552b50530c70ff871d9df229c4d203" translate="yes" xml:space="preserve">
          <source>Besides the obvious pod conversions, Pod::Man also takes care of formatting func(), func(3), and simple variable references like $foo or @bar so you don't have to use code escapes for them; complex expressions like &lt;code&gt;$fred{'stuff'}&lt;/code&gt; will still need to be escaped, though. It also translates dashes that aren't used as hyphens into en dashes, makes long dashes--like this--into proper em dashes, fixes &quot;paired quotes,&quot; makes C++ look right, puts a little space between double underscores, makes ALLCAPS a teeny bit smaller in &lt;b&gt;troff&lt;/b&gt;, and escapes stuff that *roff treats as special so that you don't have to.</source>
          <target state="translated">Adem&amp;aacute;s de las obvias conversiones de pod, Pod :: Man tambi&amp;eacute;n se encarga de formatear func (), func (3) y referencias de variables simples como $ foo o @bar para que no tengas que usar c&amp;oacute;digos de escape para ellos; Sin embargo, las expresiones complejas como &lt;code&gt;$fred{'stuff'}&lt;/code&gt; a&amp;uacute;n deber&amp;aacute;n escaparse. Tambi&amp;eacute;n traduce los guiones que no se usan como guiones en guiones cortos, hace guiones largos, como este, en guiones em adecuados, corrige &quot;comillas emparejadas&quot;, hace que C ++ se vea bien, pone un poco de espacio entre guiones bajos dobles, hace ALLCAPS un poquito m&amp;aacute;s peque&amp;ntilde;o en &lt;b&gt;troff&lt;/b&gt; , y escapa de cosas que * roff trata como especiales para que t&amp;uacute; no tengas que hacerlo.</target>
        </trans-unit>
        <trans-unit id="a063aa374e8d2e7cef3baa1877fd812efaeadbc4" translate="yes" xml:space="preserve">
          <source>Besides the obvious pod conversions, Pod::Man, and therefore pod2man also takes care of formatting func(), func(n), and simple variable references like $foo or @bar so you don't have to use code escapes for them; complex expressions like &lt;code&gt;$fred{'stuff'}&lt;/code&gt; will still need to be escaped, though. It also translates dashes that aren't used as hyphens into en dashes, makes long dashes--like this--into proper em dashes, fixes &quot;paired quotes,&quot; and takes care of several other troff-specific tweaks. See &lt;a href=&quot;pod/man&quot;&gt;Pod::Man&lt;/a&gt; for complete information.</source>
          <target state="translated">Adem&amp;aacute;s de las conversiones de pod obvias, Pod :: Man y, por lo tanto, pod2man tambi&amp;eacute;n se encarga de formatear func (), func (n) y referencias de variables simples como $ foo o @bar para que no tenga que usar escapes de c&amp;oacute;digo para ellos. ; Sin embargo, las expresiones complejas como &lt;code&gt;$fred{'stuff'}&lt;/code&gt; a&amp;uacute;n deber&amp;aacute;n escaparse. Tambi&amp;eacute;n traduce los guiones que no se usan como guiones en guiones cortos, convierte los guiones largos, como este, en guiones em adecuados, corrige &quot;comillas emparejadas&quot; y se encarga de varios otros ajustes espec&amp;iacute;ficos de troff. Consulte &lt;a href=&quot;pod/man&quot;&gt;Pod :: Man&lt;/a&gt; para obtener informaci&amp;oacute;n completa.</target>
        </trans-unit>
        <trans-unit id="2b7e5467e3e0ec9a6b2fff1ef3ee081c7b986017" translate="yes" xml:space="preserve">
          <source>Besides the well-known &quot;E&amp;lt;lt&amp;gt;&quot; and &quot;E&amp;lt;gt&amp;gt;&quot; codes for less-than and greater-than, Pod parsers must understand &quot;E&amp;lt;sol&amp;gt;&quot; for &quot;/&quot; (solidus, slash), and &quot;E&amp;lt;verbar&amp;gt;&quot; for &quot;|&quot; (vertical bar, pipe). Pod parsers should also understand &quot;E&amp;lt;lchevron&amp;gt;&quot; and &quot;E&amp;lt;rchevron&amp;gt;&quot; as legacy codes for characters 171 and 187, i.e., &quot;left-pointing double angle quotation mark&quot; = &quot;left pointing guillemet&quot; and &quot;right-pointing double angle quotation mark&quot; = &quot;right pointing guillemet&quot;. (These look like little &quot;&amp;lt;&amp;lt;&quot; and &quot;&amp;gt;&amp;gt;&quot;, and they are now preferably expressed with the HTML/XHTML codes &quot;E&amp;lt;laquo&amp;gt;&quot; and &quot;E&amp;lt;raquo&amp;gt;&quot;.)</source>
          <target state="translated">Adem&amp;aacute;s de los conocidos c&amp;oacute;digos &quot;E &amp;lt;lt&amp;gt;&quot; y &quot;E &amp;lt;gt&amp;gt;&quot; para menor que y mayor-que, los analizadores de pod deben entender &quot;E &amp;lt;sol&amp;gt;&quot; para &quot;/&quot; (solidus, barra) y &quot; E &amp;lt;verbar&amp;gt; &quot;para&quot; | &quot; (barra vertical, tubo). Los analizadores de pod tambi&amp;eacute;n deben entender &quot;E &amp;lt;lchevron&amp;gt;&quot; y &quot;E &amp;lt;rchevron&amp;gt;&quot; como c&amp;oacute;digos heredados para los caracteres 171 y 187, es decir, &quot;comillas de doble &amp;aacute;ngulo hacia la izquierda&quot; = &quot;guillemet hacia la izquierda&quot; y &quot;doble hacia la derecha comillas angulares &quot;=&quot; guillemet apuntando hacia la derecha &quot;. (Parecen peque&amp;ntilde;os &quot;&amp;lt;&amp;lt;&quot; y &quot;&amp;gt;&amp;gt;&quot;, y ahora se expresan preferiblemente con los c&amp;oacute;digos HTML / XHTML &quot;E &amp;lt;laquo&amp;gt;&quot; y &quot;E &amp;lt;raquo&amp;gt;&quot;).</target>
        </trans-unit>
        <trans-unit id="5b2158802b148a274c615dff49ad8ceaf2fe4a86" translate="yes" xml:space="preserve">
          <source>Besides these, all the Unicode character properties mentioned above (except for those marked as for internal use by Perl) are also accessible by &lt;a href=&quot;unicode/ucd#prop_invlist()&quot;&gt;prop_invlist() in Unicode::UCD&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de estas, todas las propiedades de caracteres Unicode mencionadas anteriormente (excepto aquellas marcadas como para uso interno por Perl) tambi&amp;eacute;n son accesibles por &lt;a href=&quot;unicode/ucd#prop_invlist()&quot;&gt;prop_invlist () en Unicode :: UCD&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="708a3f784c168edb7cbbe1a181dbe5bffd40a3cc" translate="yes" xml:space="preserve">
          <source>Besides whole phrases meant for output, anything language-dependent should be put into the class Projname::L10N::en_us, whether as methods, or as lexicon entries -- this is discussed in the section &quot;Entries in Each Lexicon&quot;, above.</source>
          <target state="translated">Además de las frases enteras destinadas a la salida,todo lo que dependa del lenguaje debe ser puesto en la clase Projname::L10N::en_us,ya sea como métodos,o como entradas en el léxico-esto se discute en la sección &quot;Entradas en cada léxico&quot;,arriba.</target>
        </trans-unit>
        <trans-unit id="cd7916b96afe381cf04fb2aeca341eed5cca3a69" translate="yes" xml:space="preserve">
          <source>Best practices for making a new module.</source>
          <target state="translated">Las mejores prácticas para hacer un nuevo módulo.</target>
        </trans-unit>
        <trans-unit id="5f9760622e022594213ec306985fb05bd7325740" translate="yes" xml:space="preserve">
          <source>Between Mac OS X 10.3 &quot;Panther&quot; and 10.6 &quot;Snow Leopard&quot;, the 'Command Line Tools' bundle was called 'unix tools', and was usually supplied with Mac OS install DVDs.</source>
          <target state="translated">Entre Mac OS X 10.3 &quot;Pantera&quot; y 10.6 &quot;Leopardo de las Nieves&quot;,el paquete de 'Herramientas de Línea de Comandos' se llamaba 'herramientas unix',y se suministraba normalmente con los DVDs de instalación de Mac OS.</target>
        </trans-unit>
        <trans-unit id="6249e6fb239ee6aed11ccf460f154f4ff6f24738" translate="yes" xml:space="preserve">
          <source>Between the &lt;code&gt;%&lt;/code&gt; and the format letter, you may specify several additional attributes controlling the interpretation of the format. In order, these are:</source>
          <target state="translated">Entre el &lt;code&gt;%&lt;/code&gt; y la letra del formato, puede especificar varios atributos adicionales que controlan la interpretaci&amp;oacute;n del formato. En orden, estos son:</target>
        </trans-unit>
        <trans-unit id="b8011f36b2088bc97398915695cf8abfb01b5b1d" translate="yes" xml:space="preserve">
          <source>Beware also of the order of more complicated expressions like:</source>
          <target state="translated">Cuidado también con el orden de expresiones más complicadas como:</target>
        </trans-unit>
        <trans-unit id="6c100dc724a3253ddc31a97cdb43e9fdb264b604" translate="yes" xml:space="preserve">
          <source>Beware of simple &quot;casting&quot; the entire expression, this would only convert the already computed result:</source>
          <target state="translated">Cuidado con el simple &quot;vaciado&quot; de toda la expresión,esto sólo convertiría el resultado ya calculado:</target>
        </trans-unit>
        <trans-unit id="c8bc77265aea976e7b646f3af43c05662f7e17da" translate="yes" xml:space="preserve">
          <source>Beware of:</source>
          <target state="translated">Cuidado:</target>
        </trans-unit>
        <trans-unit id="6bac55531c21ad380bc95de89addf1faea92b643" translate="yes" xml:space="preserve">
          <source>Beware that if you put literal backslashes (those not inside interpolated variables) between &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; , double-quotish backslash interpolation may lead to confusing results. If you</source>
          <target state="translated">Tenga en cuenta que si coloca barras invertidas literales (las que no est&amp;aacute;n dentro de las variables interpoladas) entre &lt;code&gt;\Q&lt;/code&gt; y &lt;code&gt;\E&lt;/code&gt; , la interpolaci&amp;oacute;n de barras invertidas entre comillas dobles puede generar resultados confusos. Si tu</target>
        </trans-unit>
        <trans-unit id="6ca66f864461fdc36869edeb4abd6935993616b0" translate="yes" xml:space="preserve">
          <source>Beware that some command shells may place restrictions on the length of the command line. You must ensure your strings don't exceed this limit after any necessary interpolations. See the platform-specific release notes for more details about your particular environment.</source>
          <target state="translated">Tengan cuidado de que algunos proyectiles de comando pueden poner restricciones en la longitud de la línea de comando.Debe asegurarse de que sus cuerdas no excedan este límite después de cualquier interpolación necesaria.Consulte las notas de lanzamiento específicas de la plataforma para obtener más detalles sobre su entorno particular.</target>
        </trans-unit>
        <trans-unit id="1bd1204f447158c3ff1bfbe82d9a707a81d4fa56" translate="yes" xml:space="preserve">
          <source>Beware that unlike &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; doesn't take a pattern as its first argument. Compare &lt;a href=&quot;#split&quot;&gt;split&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que, a diferencia de &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; no toma un patr&amp;oacute;n como primer argumento. Compare &lt;a href=&quot;#split&quot;&gt;split&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc2144e8f71ac4bf9140995eea7dc924e6bdda59" translate="yes" xml:space="preserve">
          <source>Beware that unlike &lt;code&gt;&lt;a href=&quot;split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; doesn't take a pattern as its first argument. Compare &lt;a href=&quot;split&quot;&gt;split&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que, a diferencia de &lt;code&gt;&lt;a href=&quot;split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; no toma un patr&amp;oacute;n como primer argumento. Compare &lt;a href=&quot;split&quot;&gt;split&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c39aa460c8cfb8c3295132732d48ee06e763b200" translate="yes" xml:space="preserve">
          <source>Beware: This feature is not fully implemented yet.</source>
          <target state="translated">Tengan cuidado:Esta característica no se ha implementado completamente todavía.</target>
        </trans-unit>
        <trans-unit id="d3f2ff6e4b3a254c248f8c186f3f0868a1b1e7b1" translate="yes" xml:space="preserve">
          <source>Beware: This list is not complete.</source>
          <target state="translated">Tengan cuidado:Esta lista no está completa.</target>
        </trans-unit>
        <trans-unit id="85c248dc6ba19bfc8397a2d612c997c46ad24985" translate="yes" xml:space="preserve">
          <source>Beware: after this function returns, &lt;code&gt;ptr&lt;/code&gt; and SvPVX_const(sv) may no longer refer to the same chunk of data.</source>
          <target state="translated">Cuidado: despu&amp;eacute;s de que esta funci&amp;oacute;n regrese, es posible que &lt;code&gt;ptr&lt;/code&gt; y SvPVX_const (sv) ya no se refieran al mismo fragmento de datos.</target>
        </trans-unit>
        <trans-unit id="40ca4e03748bbc6d9d8fdf7c985dd464c29b4a02" translate="yes" xml:space="preserve">
          <source>Beyond Unicode code points</source>
          <target state="translated">Más allá de los puntos de código de Unicode</target>
        </trans-unit>
        <trans-unit id="8d2086dee2d46aa5a491374a05ac5325e10530d7" translate="yes" xml:space="preserve">
          <source>Beyond make test</source>
          <target state="translated">Más allá de hacer la prueba</target>
        </trans-unit>
        <trans-unit id="7071855c582934ec0ec68ba51cead15591289a64" translate="yes" xml:space="preserve">
          <source>Beyond that help, the urllist config parameter is yours. You can add and remove sites at will. You should find out which sites have the best up-to-dateness, bandwidth, reliability, etc. and are topologically close to you. Some people prefer fast downloads, others up-to-dateness, others reliability. You decide which to try in which order.</source>
          <target state="translated">Más allá de esa ayuda,el parámetro de configuración del urlist es tuyo.Puedes añadir y eliminar sitios a voluntad.Debes averiguar qué sitios tienen la mejor actualización,ancho de banda,confiabilidad,etc.y están topológicamente cerca de ti.Algunas personas prefieren las descargas rápidas,otras la actualización,otras la fiabilidad.Usted decide cuál probar en qué orden.</target>
        </trans-unit>
        <trans-unit id="3f05839b089d755d215e2ff3af4aafe1ec68679d" translate="yes" xml:space="preserve">
          <source>Beyond that, the simplest debugger is the &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; function. Use it to look at values as you run your program:</source>
          <target state="translated">M&amp;aacute;s all&amp;aacute; de eso, el depurador m&amp;aacute;s simple es la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; . &amp;Uacute;selo para ver los valores mientras ejecuta su programa:</target>
        </trans-unit>
        <trans-unit id="3981fa65dd4a5a67077c84cbcab0e6d7e62ef4b1" translate="yes" xml:space="preserve">
          <source>Beyond that, you have to consider several things and decide which is best for you.</source>
          <target state="translated">Más allá de eso,tienes que considerar varias cosas y decidir cuál es la mejor para ti.</target>
        </trans-unit>
        <trans-unit id="44d69eda49b459248ce90b6917e4f918be54d8d4" translate="yes" xml:space="preserve">
          <source>Beyond the normal measures described to make general Perl programs faster or smaller, a CGI program has additional issues. It may be run several times per second. Given that each time it runs it will need to be re-compiled and will often allocate a megabyte or more of system memory, this can be a killer. Compiling into C &lt;b&gt;isn't going to help you&lt;/b&gt; because the process start-up overhead is where the bottleneck is.</source>
          <target state="translated">M&amp;aacute;s all&amp;aacute; de las medidas normales descritas para hacer que los programas generales de Perl sean m&amp;aacute;s r&amp;aacute;pidos o m&amp;aacute;s peque&amp;ntilde;os, un programa CGI tiene problemas adicionales. Puede ejecutarse varias veces por segundo. Dado que cada vez que se ejecuta, ser&amp;aacute; necesario volver a compilarlo y, a menudo, asignar&amp;aacute; un megabyte o m&amp;aacute;s de memoria del sistema, esto puede ser un desastre. La compilaci&amp;oacute;n en C &lt;b&gt;no lo ayudar&amp;aacute;&lt;/b&gt; porque la sobrecarga de inicio del proceso es donde est&amp;aacute; el cuello de botella.</target>
        </trans-unit>
        <trans-unit id="213d672c8ec1c5c132adb8f810eb6a5d6ae1c84f" translate="yes" xml:space="preserve">
          <source>Beyond the obvious problems that stem from giving special privileges to systems as flexible as scripts, on many versions of Unix, set-id scripts are inherently insecure right from the start. The problem is a race condition in the kernel. Between the time the kernel opens the file to see which interpreter to run and when the (now-set-id) interpreter turns around and reopens the file to interpret it, the file in question may have changed, especially if you have symbolic links on your system.</source>
          <target state="translated">Más allá de los problemas obvios que se derivan de dar privilegios especiales a sistemas tan flexibles como los scripts,en muchas versiones de Unix,los scripts set-id son inherentemente inseguros desde el principio.El problema es una condición de raza en el núcleo.Entre el momento en que el núcleo abre el archivo para ver qué intérprete debe ejecutar y cuando el intérprete (ahora establecido)se da la vuelta y vuelve a abrir el archivo para interpretarlo,el archivo en cuestión puede haber cambiado,especialmente si tiene enlaces simbólicos en su sistema.</target>
        </trans-unit>
        <trans-unit id="619d65e1ae1a2704aa306451ac2a75a0cde345a8" translate="yes" xml:space="preserve">
          <source>Bibliography</source>
          <target state="translated">Bibliography</target>
        </trans-unit>
        <trans-unit id="b4412d2ae1aa691608b316e9ad2227f4c8f05c5f" translate="yes" xml:space="preserve">
          <source>Bidirectional Communication with Another Process</source>
          <target state="translated">Comunicación bidireccional con otro proceso</target>
        </trans-unit>
        <trans-unit id="20453df9f611f7ce81199fe2171f3b15f7db6ba1" translate="yes" xml:space="preserve">
          <source>Bidirectional Communication with Yourself</source>
          <target state="translated">Comunicación bidireccional con usted mismo</target>
        </trans-unit>
        <trans-unit id="aaec1a206ed8540735d6653165ead4690d690a5c" translate="yes" xml:space="preserve">
          <source>BigInt's bcmp() routine currently returns undef to signal that a NaN was involved in a comparison. However, the overload code turns that into either 1 or '' and thus operations like &lt;code&gt;NaN != NaN&lt;/code&gt; might return wrong values.</source>
          <target state="translated">La rutina bcmp () de BigInt actualmente devuelve undef para indicar que un NaN estuvo involucrado en una comparaci&amp;oacute;n. Sin embargo, el c&amp;oacute;digo de sobrecarga lo convierte en 1 o '' y, por lo tanto, operaciones como &lt;code&gt;NaN != NaN&lt;/code&gt; pueden devolver valores incorrectos.</target>
        </trans-unit>
        <trans-unit id="b68a65a4af953b7e6ff32f4e519ad10e0c7af47b" translate="yes" xml:space="preserve">
          <source>Bigger Numbers</source>
          <target state="translated">Números más grandes</target>
        </trans-unit>
        <trans-unit id="98032da695f3e799620752e98882e414e0196f49" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;!=&quot;&lt;/code&gt; returns true if the left argument is numerically not equal to the right argument.</source>
          <target state="translated">Binary &lt;code&gt;&quot;!=&quot;&lt;/code&gt; Devuelve verdadero si el argumento de la izquierda no es num&amp;eacute;ricamente igual al argumento de la derecha.</target>
        </trans-unit>
        <trans-unit id="0806ad998452d5851f139bbe3f01d7066c39cefd" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;!~&quot;&lt;/code&gt; is just like &lt;code&gt;&quot;=~&quot;&lt;/code&gt; except the return value is negated in the logical sense.</source>
          <target state="translated">El binario &lt;code&gt;&quot;!~&quot;&lt;/code&gt; Es como &lt;code&gt;&quot;=~&quot;&lt;/code&gt; excepto que el valor de retorno se niega en el sentido l&amp;oacute;gico.</target>
        </trans-unit>
        <trans-unit id="958b8a1169468f4a63917c7ca8496d2c631c8da0" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;!~&quot;&lt;/code&gt; with a non-destructive substitution (&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt;) or transliteration (&lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///r&lt;/a&gt;&lt;/code&gt;) is a syntax error.</source>
          <target state="translated">El binario &lt;code&gt;&quot;!~&quot;&lt;/code&gt; Con una sustituci&amp;oacute;n no destructiva ( &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt; ) o transliteraci&amp;oacute;n ( &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///r&lt;/a&gt;&lt;/code&gt; ) es un error de sintaxis.</target>
        </trans-unit>
        <trans-unit id="f26c16627064dbaf94b2accf763da8c7ea571aa3" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;%&quot;&lt;/code&gt; is the modulo operator, which computes the division remainder of its first argument with respect to its second argument. Given integer operands &lt;code&gt;$m&lt;/code&gt; and &lt;code&gt;$n&lt;/code&gt; : If &lt;code&gt;$n&lt;/code&gt; is positive, then &lt;code&gt;$m % $n&lt;/code&gt; is &lt;code&gt;$m&lt;/code&gt; minus the largest multiple of &lt;code&gt;$n&lt;/code&gt; less than or equal to &lt;code&gt;$m&lt;/code&gt; . If &lt;code&gt;$n&lt;/code&gt; is negative, then &lt;code&gt;$m % $n&lt;/code&gt; is &lt;code&gt;$m&lt;/code&gt; minus the smallest multiple of &lt;code&gt;$n&lt;/code&gt; that is not less than &lt;code&gt;$m&lt;/code&gt; (that is, the result will be less than or equal to zero). If the operands &lt;code&gt;$m&lt;/code&gt; and &lt;code&gt;$n&lt;/code&gt; are floating point values and the absolute value of &lt;code&gt;$n&lt;/code&gt; (that is &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs($n)&lt;/a&gt;&lt;/code&gt;) is less than &lt;code&gt;(UV_MAX + 1)&lt;/code&gt; , only the integer portion of &lt;code&gt;$m&lt;/code&gt; and &lt;code&gt;$n&lt;/code&gt; will be used in the operation (Note: here &lt;code&gt;UV_MAX&lt;/code&gt; means the maximum of the unsigned integer type). If the absolute value of the right operand (&lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs($n)&lt;/a&gt;&lt;/code&gt;) is greater than or equal to &lt;code&gt;(UV_MAX + 1)&lt;/code&gt; , &lt;code&gt;&quot;%&quot;&lt;/code&gt; computes the floating-point remainder &lt;code&gt;$r&lt;/code&gt; in the equation &lt;code&gt;($r = $m - $i*$n)&lt;/code&gt; where &lt;code&gt;$i&lt;/code&gt; is a certain integer that makes &lt;code&gt;$r&lt;/code&gt; have the same sign as the right operand &lt;code&gt;$n&lt;/code&gt; (&lt;b&gt;not&lt;/b&gt; as the left operand &lt;code&gt;$m&lt;/code&gt; like C function &lt;code&gt;fmod()&lt;/code&gt; ) and the absolute value less than that of &lt;code&gt;$n&lt;/code&gt; . Note that when &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; is in scope, &lt;code&gt;&quot;%&quot;&lt;/code&gt; gives you direct access to the modulo operator as implemented by your C compiler. This operator is not as well defined for negative operands, but it will execute faster.</source>
          <target state="translated">El &lt;code&gt;&quot;%&quot;&lt;/code&gt; binario es el operador de m&amp;oacute;dulo, que calcula el resto de la divisi&amp;oacute;n de su primer argumento con respecto a su segundo argumento. Dada n&amp;uacute;mero entero operandos &lt;code&gt;$m&lt;/code&gt; y &lt;code&gt;$n&lt;/code&gt; : Si &lt;code&gt;$n&lt;/code&gt; es positivo, entonces &lt;code&gt;$m % $n&lt;/code&gt; es &lt;code&gt;$m&lt;/code&gt; , menos el m&amp;uacute;ltiplo m&amp;aacute;s grande de &lt;code&gt;$n&lt;/code&gt; menor que o igual a &lt;code&gt;$m&lt;/code&gt; . Si &lt;code&gt;$n&lt;/code&gt; es negativo, &lt;code&gt;$m % $n&lt;/code&gt; es &lt;code&gt;$m&lt;/code&gt; menos el m&amp;uacute;ltiplo m&amp;aacute;s peque&amp;ntilde;o de &lt;code&gt;$n&lt;/code&gt; que no sea menor que &lt;code&gt;$m&lt;/code&gt; (es decir, el resultado ser&amp;aacute; menor o igual a cero). Si los operandos &lt;code&gt;$m&lt;/code&gt; y &lt;code&gt;$n&lt;/code&gt; son valores de punto flotante y el valor absoluto de &lt;code&gt;$n&lt;/code&gt; (es decir &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs($n)&lt;/a&gt;&lt;/code&gt; ) es menor que &lt;code&gt;(UV_MAX + 1)&lt;/code&gt; , s&amp;oacute;lo la parte entera de &lt;code&gt;$m&lt;/code&gt; y &lt;code&gt;$n&lt;/code&gt; ser&amp;aacute; utilizado en la operaci&amp;oacute;n (Nota: aqu&amp;iacute; &lt;code&gt;UV_MAX&lt;/code&gt; significa el m&amp;aacute;ximo del tipo entero sin signo). Si el valor absoluto del operando derecho ( &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs($n)&lt;/a&gt;&lt;/code&gt; ) es mayor o igual que &lt;code&gt;(UV_MAX + 1)&lt;/code&gt; , &lt;code&gt;&quot;%&quot;&lt;/code&gt; calcula el resto de punto flotante &lt;code&gt;$r&lt;/code&gt; en la ecuaci&amp;oacute;n &lt;code&gt;($r = $m - $i*$n)&lt;/code&gt; donde &lt;code&gt;$i&lt;/code&gt; es un cierto n&amp;uacute;mero entero que hace que &lt;code&gt;$r&lt;/code&gt; tenga el mismo signo que el operando derecho &lt;code&gt;$n&lt;/code&gt; ( &lt;b&gt;no&lt;/b&gt; como el operando izquierdo &lt;code&gt;$m&lt;/code&gt; como la funci&amp;oacute;n C &lt;code&gt;fmod()&lt;/code&gt; ) y el valor absoluto es menor que el de &lt;code&gt;$n&lt;/code&gt; . Tenga en cuenta que cuando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; est&amp;aacute; dentro del alcance, &lt;code&gt;&quot;%&quot;&lt;/code&gt; le da acceso directo al operador de m&amp;oacute;dulo implementado por su compilador de C. Este operador no est&amp;aacute; tan bien definido para operandos negativos, pero se ejecutar&amp;aacute; m&amp;aacute;s r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="68ed9e30d3d6543dd0a9f75b291cbc79357b65a9" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; returns its operands ANDed together bit by bit. Although no warning is currently raised, the result is not well defined when this operation is performed on operands that aren't either numbers (see &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Integer Arithmetic&lt;/a&gt;) nor bitstrings (see &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;Bitwise String Operators&lt;/a&gt;).</source>
          <target state="translated">Binary &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; devuelve sus operandos AND juntos bit a bit. Aunque actualmente no se emite ninguna advertencia, el resultado no est&amp;aacute; bien definido cuando esta operaci&amp;oacute;n se realiza en operandos que no son n&amp;uacute;meros (consulte &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Aritm&amp;eacute;tica de enteros&lt;/a&gt; ) ni cadenas de bits (consulte &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;Operadores de cadenas de bits&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c0937405123294a033856c6fea7344af89470f86" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;&amp;amp;&amp;amp;&quot;&lt;/code&gt; performs a short-circuit logical AND operation. That is, if the left operand is false, the right operand is not even evaluated. Scalar or list context propagates down to the right operand if it is evaluated.</source>
          <target state="translated">El &lt;code&gt;&quot;&amp;amp;&amp;amp;&quot;&lt;/code&gt; binario realiza una operaci&amp;oacute;n Y l&amp;oacute;gica de cortocircuito. Es decir, si el operando izquierdo es falso, el operando derecho ni siquiera se eval&amp;uacute;a. El contexto escalar o de lista se propaga hasta el operando derecho si se eval&amp;uacute;a.</target>
        </trans-unit>
        <trans-unit id="1f3f00bc4d3f1107e73b1aeb90803d21d2f7f5a5" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; returns true if the left argument is numerically greater than the right argument.</source>
          <target state="translated">Binario &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; devuelve verdadero si el argumento de la izquierda es num&amp;eacute;ricamente mayor que el de la derecha.</target>
        </trans-unit>
        <trans-unit id="6a8e5f64ce960724d668657e4a1ad5261d933577" translate="yes" xml:space="preserve">
          <source>Binary &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; returns the value of its left argument shifted right by the number of bits specified by the right argument. Arguments should be integers. (See also &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Integer Arithmetic&lt;/a&gt;.)</source>
          <target state="translated">Binario &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; devuelve el valor de su argumento de la izquierda desplazado a la derecha por el n&amp;uacute;mero de bits especificado por el argumento de la derecha. Los argumentos deben ser n&amp;uacute;meros enteros. (Consulte tambi&amp;eacute;n &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Aritm&amp;eacute;tica de enteros&lt;/a&gt; ).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
