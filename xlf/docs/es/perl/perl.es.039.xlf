<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="f0a36e2858858b02958d2f9bb2e7a02778b6e7c8" translate="yes" xml:space="preserve">
          <source>If you haven't already, before reading this document, you should become familiar with both &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; and &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;.</source>
          <target state="translated">Si a&amp;uacute;n no lo ha hecho, antes de leer este documento, debe familiarizarse con &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; y &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f5cd5895b74e660a355a89bb89cfe0d64a65e68" translate="yes" xml:space="preserve">
          <source>If you haven't read &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; and &lt;a href=&quot;perlhacktut&quot;&gt;perlhacktut&lt;/a&gt; yet, you might want to do that first.</source>
          <target state="translated">Si a&amp;uacute;n no ha le&amp;iacute;do &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; y &lt;a href=&quot;perlhacktut&quot;&gt;perlhacktut&lt;/a&gt; , es posible que desee hacerlo primero.</target>
        </trans-unit>
        <trans-unit id="9d18cc6d1bb045c22ff75a5143e7edc7882d3f36" translate="yes" xml:space="preserve">
          <source>If you haven't read &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; yet, go do that first! You might also want to read through &lt;a href=&quot;perlsource&quot;&gt;perlsource&lt;/a&gt; too.</source>
          <target state="translated">Si a&amp;uacute;n no ha le&amp;iacute;do &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; , &amp;iexcl;h&amp;aacute;galo primero! Es posible que tambi&amp;eacute;n desee leer &lt;a href=&quot;perlsource&quot;&gt;perlsource&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c78c6e524a1994f83a33a6fe7a18f30be9a7fce" translate="yes" xml:space="preserve">
          <source>If you haven't used regular expressions before, a quick-start introduction is available in &lt;a href=&quot;perlrequick&quot;&gt;perlrequick&lt;/a&gt;, and a longer tutorial introduction is available in &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;.</source>
          <target state="translated">Si no ha usado expresiones regulares antes, una introducci&amp;oacute;n de inicio r&amp;aacute;pido est&amp;aacute; disponible en &lt;a href=&quot;perlrequick&quot;&gt;perlrequick&lt;/a&gt; , y una introducci&amp;oacute;n de tutorial m&amp;aacute;s larga est&amp;aacute; disponible en &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="523b01060cd2a1e79d110af4dcfaa137536eb9a5" translate="yes" xml:space="preserve">
          <source>If you haven't used regular expressions before, a tutorial introduction is available in &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;. If you know just a little about them, a quick-start introduction is available in &lt;a href=&quot;perlrequick&quot;&gt;perlrequick&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7a1d83ca677617a38c3a7af6a10c7ed341f9e8" translate="yes" xml:space="preserve">
          <source>If you haven't yet moved &lt;code&gt;perl*.dll&lt;/code&gt; onto LIBPATH, do it now.</source>
          <target state="translated">Si a&amp;uacute;n no ha movido &lt;code&gt;perl*.dll&lt;/code&gt; a LIBPATH, h&amp;aacute;galo ahora.</target>
        </trans-unit>
        <trans-unit id="83593b846f63af31e001bdf82839b9a46da47025" translate="yes" xml:space="preserve">
          <source>If you ignore all the error checking that most of the code does, the essence of the filter is as follows:</source>
          <target state="translated">Si ignoras todo el error que comprueba que la mayoría del código lo hace,la esencia del filtro es la siguiente:</target>
        </trans-unit>
        <trans-unit id="4660b183b00b39c6b2b92484fb7503359beb8635" translate="yes" xml:space="preserve">
          <source>If you import &lt;code&gt;:constants256&lt;/code&gt; , you can use the following constants directly:</source>
          <target state="translated">Si importa &lt;code&gt;:constants256&lt;/code&gt; , puede usar las siguientes constantes directamente:</target>
        </trans-unit>
        <trans-unit id="6fb29858655e86b9cd846e89d6a53be9482baa8e" translate="yes" xml:space="preserve">
          <source>If you import &lt;code&gt;:constants256&lt;/code&gt;, you can use the following constants directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed57c7ce00df9ba4b19fb6493a06d874c07ba72a" translate="yes" xml:space="preserve">
          <source>If you insist on using bare v-strings with Perl &amp;gt; 5.6.0, be aware of the following limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87b608eeb1cdc6eb4d8977d4b889a03e6d083dd" translate="yes" xml:space="preserve">
          <source>If you intend making use of the object returned from either tie() or tied(), and if the tie's target class defines a destructor, there is a subtle gotcha you</source>
          <target state="translated">Si pretendes hacer uso del objeto devuelto por tie()o tied(),y si la clase de objetivo del tie define un destructor,hay un sutil gotcha que</target>
        </trans-unit>
        <trans-unit id="dbdc31314e86dc1060f92b8ed429f69bdf25f6be" translate="yes" xml:space="preserve">
          <source>If you intend to manipulate the Zip64 zip files created with &lt;code&gt;IO-Compress-Zip&lt;/code&gt; using an external zip/unzip, make sure that it supports Zip64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc6f9a7f0a4b90e4946e190029eff70ef889753" translate="yes" xml:space="preserve">
          <source>If you intend to manipulate the Zip64 zip files created with this module using an external zip/unzip, make sure that it supports Zip64.</source>
          <target state="translated">Si pretendes manipular los archivos zip de Zip64 creados con este módulo usando un zip/unzip externo,asegúrate de que es compatible con Zip64.</target>
        </trans-unit>
        <trans-unit id="fd3a1f6a190142b4a94b8f1071ccacb0e45694c8" translate="yes" xml:space="preserve">
          <source>If you intend to run only on FAT (or if using AnyDBM_File on FAT), run Configure with the -Ui_ndbm and -Ui_dbm options to prevent NDBM_File and ODBM_File being built.</source>
          <target state="translated">Si tiene intención de ejecutar sólo en FAT (o si utiliza AnyDBM_File en FAT),ejecute Configurar con las opciones -Ui_ndbm y -Ui_dbm para evitar que se construya NDBM_File y ODBM_File.</target>
        </trans-unit>
        <trans-unit id="3f04b70c5edf0d8a2ff6b52a2e5a3c4237fee493" translate="yes" xml:space="preserve">
          <source>If you intend using the Filter::Call functionality, I would strongly recommend that you check out Damian Conway's excellent Filter::Simple module. Damian's module provides a much cleaner interface than Filter::Util::Call. Although it doesn't allow the fine control that Filter::Util::Call does, it should be adequate for the majority of applications. It's available at</source>
          <target state="translated">Si tiene intención de usar la funcionalidad del filtro::Call,le recomiendo encarecidamente que compruebe el excelente módulo Filter::Simple de Damian Conway.El módulo de Damian proporciona una interfaz mucho más limpia que Filter::Util::Call.Aunque no permite el control fino que hace Filter::Util::Call,debería ser adecuado para la mayoría de las aplicaciones.Está disponible en</target>
        </trans-unit>
        <trans-unit id="e2cffac6976f9820e2e90021e812ad7d58d0f5b4" translate="yes" xml:space="preserve">
          <source>If you intended for the subroutine to be eligible for inlining, then make sure the variable is not referenced elsewhere, possibly by copying it:</source>
          <target state="translated">Si se pretende que la subrutina sea apta para el inlining,entonces asegúrese de que la variable no esté referenciada en otro lugar,posiblemente copiándola:</target>
        </trans-unit>
        <trans-unit id="9dab4bde5120fee3a0a7f6db844ef859c18d4c68" translate="yes" xml:space="preserve">
          <source>If you invoke Concise more than once in a program, you should know that the options are 'sticky'. This means that the options you provide in the first call will be remembered for the 2nd call, unless you re-specify or change them.</source>
          <target state="translated">Si invoca a Conciso más de una vez en un programa,debe saber que las opciones son &quot;pegajosas&quot;.Esto significa que las opciones que proporcione en la primera llamada se recordarán para la segunda llamada,a menos que las vuelva a especificar o las cambie.</target>
        </trans-unit>
        <trans-unit id="50093622d9b6b20299be5b789440addca54eb16b" translate="yes" xml:space="preserve">
          <source>If you invoke Perl with the &lt;b&gt;-d&lt;/b&gt; switch, your script runs under the Perl source debugger. This works like an interactive Perl environment, prompting for debugger commands that let you examine source code, set breakpoints, get stack backtraces, change the values of variables, etc. This is so convenient that you often fire up the debugger all by itself just to test out Perl constructs interactively to see what they do. For example:</source>
          <target state="translated">Si invoca a Perl con el &lt;b&gt;modificador -d&lt;/b&gt; , su script se ejecuta bajo el depurador de fuentes de Perl. Esto funciona como un entorno interactivo de Perl, solicitando comandos del depurador que le permitan examinar el c&amp;oacute;digo fuente, establecer puntos de interrupci&amp;oacute;n, obtener trazas de pila, cambiar los valores de las variables, etc. Esto es tan conveniente que a menudo se activa el depurador solo para pruebe los constructos de Perl de forma interactiva para ver qu&amp;eacute; hacen. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="5f165a45e66d1014a54e531d87cac35b6f25f848" translate="yes" xml:space="preserve">
          <source>If you iterate through the hash with each(), you can delete the key most recently returned without worrying about it. If you delete or add other keys, the iterator may skip or double up on them since perl may rearrange the hash table. See the entry for &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">Si recorre el hash con cada (), puede eliminar la clave devuelta m&amp;aacute;s recientemente sin preocuparse por ello. Si elimina o agrega otras claves, el iterador puede omitirlas o duplicarlas, ya que Perl puede reorganizar la tabla hash. Vea la entrada para &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d81db3e7b1b60ae3b2c12b8158af75032cae4b4" translate="yes" xml:space="preserve">
          <source>If you iterate through the hash with each(), you can delete the key most recently returned without worrying about it. If you delete or add other keys, the iterator may skip or double up on them since perl may rearrange the hash table. See the entry for &lt;code&gt;each()&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23dd3433d5c0c9ce07c89417e11d9a477ce1b1b" translate="yes" xml:space="preserve">
          <source>If you just need to customize the objects on creation, subclass &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; and override &lt;a href=&quot;#make_iterator_factory&quot;&gt;&quot;make_iterator_factory&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bb290aa78bc388524149987ffa684a6cd88006" translate="yes" xml:space="preserve">
          <source>If you just need to customize the objects on creation, subclass &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt; and override &lt;a href=&quot;#make_iterator_factory&quot;&gt;make_iterator_factory&lt;/a&gt;.</source>
          <target state="translated">Si solo necesita personalizar los objetos en la creaci&amp;oacute;n, subclase &lt;a href=&quot;parser&quot;&gt;TAP :: Parser&lt;/a&gt; y anule &lt;a href=&quot;#make_iterator_factory&quot;&gt;make_iterator_factory&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d8b361c59c621bac0b0795b77d82ce0376ae0d6" translate="yes" xml:space="preserve">
          <source>If you just want the bytes printed in a 7bit NUL-terminated string, you can just use &lt;code&gt;%s&lt;/code&gt; (assuming they are all really only 7bit). But if there is a possibility the value will be encoded as UTF-8 or contains bytes above &lt;code&gt;0x7F&lt;/code&gt; (and therefore 8bit), you should instead use the &lt;code&gt;UTF8f&lt;/code&gt; format. And as its parameter, use the &lt;code&gt;UTF8fARG()&lt;/code&gt; macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eae7a7eb8bcc1fc11d062386801944953ed61fe" translate="yes" xml:space="preserve">
          <source>If you just want to extract, use the &lt;code&gt;extract_archive&lt;/code&gt; class method instead. It will optimize and write to disk immediately.</source>
          <target state="translated">Si solo desea extraer, use el m&amp;eacute;todo de clase &lt;code&gt;extract_archive&lt;/code&gt; en su lugar. Optimizar&amp;aacute; y escribir&amp;aacute; en el disco inmediatamente.</target>
        </trans-unit>
        <trans-unit id="205b6c9376bdc41030a3ba0411b3c133175a1cfb" translate="yes" xml:space="preserve">
          <source>If you just want to know how to use the utilities described here,</source>
          <target state="translated">Si sólo quieres saber cómo usar las utilidades descritas aquí,</target>
        </trans-unit>
        <trans-unit id="5ca84053d1241bb168ed3733abf9fe5fef328612" translate="yes" xml:space="preserve">
          <source>If you just want to load a module in a test, we recommend simply using &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; directly. It will cause the test to stop.</source>
          <target state="translated">Si solo desea cargar un m&amp;oacute;dulo en una prueba, le recomendamos que utilice &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; directamente. Har&amp;aacute; que la prueba se detenga.</target>
        </trans-unit>
        <trans-unit id="2c70a28f88935f71d3cc2f51d7cbe4011451f638" translate="yes" xml:space="preserve">
          <source>If you just want to load a module in a test, we recommend simply using &lt;code&gt;use&lt;/code&gt; directly. It will cause the test to stop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5383a5a1f3fb1c8ecb11208a275376f630d5aac" translate="yes" xml:space="preserve">
          <source>If you just want to sort keys (names) in JSON objects when you &lt;code&gt;encode&lt;/code&gt;, enable &lt;code&gt;canonical&lt;/code&gt; option (see above) that allows you to sort object keys alphabetically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d9e2fc3089c3ee91bde03c8a168aabda14adca" translate="yes" xml:space="preserve">
          <source>If you just want to submit a single small patch like a pod fix, a test for a bug, comment fixes, etc., it's easy! Here's how:</source>
          <target state="translated">Si sólo quieres enviar un pequeño parche como un arreglo de vaina,una prueba para un error,arreglos de comentarios,etc.,¡es fácil! Así es como se hace:</target>
        </trans-unit>
        <trans-unit id="a3962095233ae6bded8cb1555c84a52ea4fc9a0c" translate="yes" xml:space="preserve">
          <source>If you just want to test a module can be loaded, use &lt;code&gt;require_ok&lt;/code&gt; .</source>
          <target state="translated">Si solo desea probar que se puede cargar un m&amp;oacute;dulo, use &lt;code&gt;require_ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3978204bccf1fd47b9da04f6a2bf931fa35286f6" translate="yes" xml:space="preserve">
          <source>If you just want to test a module can be loaded, use &lt;code&gt;require_ok&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e3b970aadb68ea3a8923d019f70d26e7a5a350" translate="yes" xml:space="preserve">
          <source>If you know</source>
          <target state="translated">Si sabes...</target>
        </trans-unit>
        <trans-unit id="9c14b8eb60486ad1003f5f292ba8d0aaf7f2284e" translate="yes" xml:space="preserve">
          <source>If you know one name for a Unicode property, you can use &lt;code&gt;prop_aliases&lt;/code&gt; to find either the long name (when called in scalar context), or a list of all of the names, somewhat ordered so that the short name is in the 0th element, the long name in the next element, and any other synonyms are in the remaining elements, in no particular order.</source>
          <target state="translated">Si conoce un nombre para una propiedad Unicode, puede usar &lt;code&gt;prop_aliases&lt;/code&gt; para encontrar el nombre largo (cuando se llama en contexto escalar) o una lista de todos los nombres, algo ordenados para que el nombre corto est&amp;eacute; en el elemento 0, el nombre largo en el siguiente elemento y cualquier otro sin&amp;oacute;nimo est&amp;aacute;n en los elementos restantes, sin ning&amp;uacute;n orden en particular.</target>
        </trans-unit>
        <trans-unit id="cb42b2ab34d9ba0baed912ade71e395e6b67b39f" translate="yes" xml:space="preserve">
          <source>If you know that &lt;code&gt;$compressedLength&lt;/code&gt; isn't that big then using temporary storage won't be a problem. But if &lt;code&gt;$compressedLength&lt;/code&gt; is very large or you are writing an application that other people will use, and so have no idea how big &lt;code&gt;$compressedLength&lt;/code&gt; will be, it could be an issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a59a33095f0058eebdfd05ced2318493337053a" translate="yes" xml:space="preserve">
          <source>If you know the columns that contain the data, you can use &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; to extract a single column.</source>
          <target state="translated">Si conoce las columnas que contienen los datos, puede usar &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; para extraer una sola columna.</target>
        </trans-unit>
        <trans-unit id="06cfb464d41fe790822610afbdaa468a829c60a7" translate="yes" xml:space="preserve">
          <source>If you know the columns that contain the data, you can use &lt;code&gt;substr&lt;/code&gt; to extract a single column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb4c97e122131b8720d6a259fed14fb554c1b02" translate="yes" xml:space="preserve">
          <source>If you know the directory already, you can add it to &lt;code&gt;@INC&lt;/code&gt; as you would for any other directory. You might &amp;lt;use lib&amp;gt; if you know the directory at compile time:</source>
          <target state="translated">Si ya conoce el directorio, puede agregarlo a &lt;code&gt;@INC&lt;/code&gt; como lo har&amp;iacute;a con cualquier otro directorio. Puede &amp;lt;usar lib&amp;gt; si conoce el directorio en el momento de la compilaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a3a965f3de203e872ac1dbbc0191ed03e5d04a74" translate="yes" xml:space="preserve">
          <source>If you know the directory already, you can add it to &lt;code&gt;@INC&lt;/code&gt; as you would for any other directory. You might &lt;code&gt;use lib&lt;/code&gt; if you know the directory at compile time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98e61c08f8371d445ada91d42b0a6e31509fa7c" translate="yes" xml:space="preserve">
          <source>If you know the exact length in bits, it can be used in place of the &lt;code&gt;*&lt;/code&gt; .</source>
          <target state="translated">Si conoce la longitud exacta en bits, puede usarla en lugar del &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6be1b2dd7aa390ceb8d695be13eb24892efb660c" translate="yes" xml:space="preserve">
          <source>If you know the exact length in bits, it can be used in place of the &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927bf5e4096ddfb3b14c96fc89123708e7ddad90" translate="yes" xml:space="preserve">
          <source>If you know the length of the compressed data stream before you start uncompressing, you can avoid having to use &lt;code&gt;trailingData&lt;/code&gt; by setting the &lt;code&gt;InputLength&lt;/code&gt; option in the constructor.</source>
          <target state="translated">Si conoce la longitud del flujo de datos comprimidos antes de comenzar a descomprimir, puede evitar tener que usar &lt;code&gt;trailingData&lt;/code&gt; configurando la opci&amp;oacute;n &lt;code&gt;InputLength&lt;/code&gt; en el constructor.</target>
        </trans-unit>
        <trans-unit id="f21638ec12744a0da920d55488938e9726007614" translate="yes" xml:space="preserve">
          <source>If you know the length of the compressed data stream before you start uncompressing, you can avoid having to use &lt;code&gt;trailingData&lt;/code&gt; by setting the &lt;code&gt;InputLength&lt;/code&gt; option.</source>
          <target state="translated">Si conoce la longitud del flujo de datos comprimidos antes de comenzar a descomprimir, puede evitar tener que usar &lt;code&gt;trailingData&lt;/code&gt; configurando la opci&amp;oacute;n &lt;code&gt;InputLength&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2ae57604fb0c858677a8a7bba0d622df68f1d53" translate="yes" xml:space="preserve">
          <source>If you know the name of a hash variable, you can get a pointer to its HV by using the following:</source>
          <target state="translated">Si conoces el nombre de una variable de hachís,puedes obtener un puntero a su HV usando lo siguiente:</target>
        </trans-unit>
        <trans-unit id="eb63e6aa11dc04fb3c005505a5dc56980b836dee" translate="yes" xml:space="preserve">
          <source>If you know the name of a scalar variable, you can get a pointer to its SV by using the following:</source>
          <target state="translated">Si conoce el nombre de una variable escalar,puede obtener un puntero a su SV usando lo siguiente:</target>
        </trans-unit>
        <trans-unit id="71cc5e317d663fb79a1bf1ed454222ec34ef184d" translate="yes" xml:space="preserve">
          <source>If you know the name of an array variable, you can get a pointer to its AV by using the following:</source>
          <target state="translated">Si conoces el nombre de una variable de la matriz,puedes obtener un puntero a su AV usando lo siguiente:</target>
        </trans-unit>
        <trans-unit id="cd318c8126ae3cf5cfc9e3d9345bc2d0fc779cdb" translate="yes" xml:space="preserve">
          <source>If you know what you are doing you can turn off this warning by &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'non_unicode';&lt;/code&gt; .</source>
          <target state="translated">Si sabe lo que est&amp;aacute; haciendo, puede desactivar esta advertencia &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'non_unicode';&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b884b7f1740fc7317e54fef08f2f9cd3cb14f5e3" translate="yes" xml:space="preserve">
          <source>If you know what you are doing you can turn off this warning by &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'surrogate';&lt;/code&gt; .</source>
          <target state="translated">Si sabe lo que est&amp;aacute; haciendo, puede desactivar esta advertencia &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'surrogate';&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="450cdd3bb7c30208da61bb587dafc55dbfb2d416" translate="yes" xml:space="preserve">
          <source>If you know what you are doing you can turn off this warning by &lt;code&gt;no warnings 'non_unicode';&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdb6f8f972275104dbb956312abdb2698ecb912" translate="yes" xml:space="preserve">
          <source>If you know what you are doing you can turn off this warning by &lt;code&gt;no warnings 'surrogate';&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7e8e09f3e73c52948b41c1fa2c3d1d138db3f3" translate="yes" xml:space="preserve">
          <source>If you know you are only going to use a system that does correctly implement appending (i.e. not Win32) then you can omit the &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; from the code in the previous answer.</source>
          <target state="translated">Si sabe que solo va a utilizar un sistema que implemente correctamente la adici&amp;oacute;n (es decir, no Win32), puede omitir la &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; del c&amp;oacute;digo en la respuesta anterior.</target>
        </trans-unit>
        <trans-unit id="ba755cafcf3fda0933750ad2082aef00aba43d16" translate="yes" xml:space="preserve">
          <source>If you know you are only going to use a system that does correctly implement appending (i.e. not Win32) then you can omit the &lt;code&gt;seek&lt;/code&gt; from the code in the previous answer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1148f14b2fe4053075a5db927cd2f992ce530c8c" translate="yes" xml:space="preserve">
          <source>If you know you are only writing code to run on an OS and filesystem that does implement append mode correctly (a local filesystem on a modern Unix for example), and you keep the file in block-buffered mode and you write less than one buffer-full of output between each manual flushing of the buffer then each bufferload is almost guaranteed to be written to the end of the file in one chunk without getting intermingled with anyone else's output. You can also use the &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; function which is simply a wrapper around your system's &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write(2)&lt;/a&gt;&lt;/code&gt; system call.</source>
          <target state="translated">Si sabe que solo est&amp;aacute; escribiendo c&amp;oacute;digo para que se ejecute en un sistema operativo y un sistema de archivos que implementa el modo de adici&amp;oacute;n correctamente (un sistema de archivos local en un Unix moderno, por ejemplo), y mantiene el archivo en modo de b&amp;uacute;fer de bloques y escribe menos de un b&amp;uacute;fer -lleno de salida entre cada descarga manual del b&amp;uacute;fer, entonces es casi seguro que cada carga de b&amp;uacute;fer se escribir&amp;aacute; al final del archivo en un fragmento sin que se entremezcle con la salida de nadie m&amp;aacute;s. Tambi&amp;eacute;n puede usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; , que es simplemente un envoltorio alrededor de la llamada al sistema &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write(2)&lt;/a&gt;&lt;/code&gt; sistema.</target>
        </trans-unit>
        <trans-unit id="602b87bd77bf909ec7f1749e9c4b42785a2cd907" translate="yes" xml:space="preserve">
          <source>If you know you are only writing code to run on an OS and filesystem that does implement append mode correctly (a local filesystem on a modern Unix for example), and you keep the file in block-buffered mode and you write less than one buffer-full of output between each manual flushing of the buffer then each bufferload is almost guaranteed to be written to the end of the file in one chunk without getting intermingled with anyone else's output. You can also use the &lt;code&gt;syswrite&lt;/code&gt; function which is simply a wrapper around your system's &lt;code&gt;write(2)&lt;/code&gt; system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c8e667e3ed1b51f8f2d44670f827394972704b" translate="yes" xml:space="preserve">
          <source>If you know your package, you can just mention it explicitly, as in $Some_Pack::var. Note that the notation $::var is &lt;b&gt;not&lt;/b&gt; the dynamic $var in the current package, but rather the one in the &quot;main&quot; package, as though you had written $main::var.</source>
          <target state="translated">Si conoce su paquete, puede mencionarlo expl&amp;iacute;citamente, como en $ Some_Pack :: var. Tenga en cuenta que la notaci&amp;oacute;n $ :: var &lt;b&gt;no&lt;/b&gt; es la $ var din&amp;aacute;mica del paquete actual, sino la del paquete &quot;principal&quot;, como si hubiera escrito $ main :: var.</target>
        </trans-unit>
        <trans-unit id="283a4b9fbff3cde02d8b49d7e007e0e9915125fc" translate="yes" xml:space="preserve">
          <source>If you like a more web-like approach, a good start point can be &lt;a href=&quot;http://www14.software.ibm.com/webapp/download/downloadaz.jsp&quot;&gt;http://www14.software.ibm.com/webapp/download/downloadaz.jsp&lt;/a&gt; and click &quot;C for AIX&quot;, and follow the instructions.</source>
          <target state="translated">Si le gusta un enfoque m&amp;aacute;s similar a la web, un buen punto de inicio puede ser &lt;a href=&quot;http://www14.software.ibm.com/webapp/download/downloadaz.jsp&quot;&gt;http://www14.software.ibm.com/webapp/download/downloadaz.jsp,&lt;/a&gt; haga clic en &quot;C para AIX&quot; y siga las instrucciones.</target>
        </trans-unit>
        <trans-unit id="f15eb42f4edad457922247251c5d7e7bc14ff512" translate="yes" xml:space="preserve">
          <source>If you like the &lt;code&gt;prove&lt;/code&gt; utility and &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; but you want your own harness, all you need to do is write one and provide &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;runtests&lt;/code&gt; methods. Then you can use the &lt;code&gt;prove&lt;/code&gt; utility like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95d71103315a260f526ee0388cdf401d8ff3b71" translate="yes" xml:space="preserve">
          <source>If you like the &lt;code&gt;prove&lt;/code&gt; utility and &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt; but you want your own harness, all you need to do is write one and provide &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;runtests&lt;/code&gt; methods. Then you can use the &lt;code&gt;prove&lt;/code&gt; utility like so:</source>
          <target state="translated">Si le gusta la utilidad de &lt;code&gt;prove&lt;/code&gt; y &lt;a href=&quot;parser&quot;&gt;TAP :: Parser&lt;/a&gt; pero quiere su propio arn&amp;eacute;s, todo lo que necesita hacer es escribir uno y proporcionar m&amp;eacute;todos &lt;code&gt;new&lt;/code&gt; y de &lt;code&gt;runtests&lt;/code&gt; . Entonces puedes usar la utilidad de &lt;code&gt;prove&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="fbd3ba27ff3a08207feb966e075b2fa08e7cf809" translate="yes" xml:space="preserve">
          <source>If you like, you can store these filehandles in an array or a hash. If you access them directly, they aren't simple scalars and you need to give &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; a little help by placing the filehandle reference in braces. Perl can only figure it out on its own when the filehandle reference is a simple scalar.</source>
          <target state="translated">Si lo desea, puede almacenar estos identificadores de archivos en una matriz o un hash. Si accede a ellos directamente, no son simples escalares y necesita dar un poco de ayuda a la &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; colocando la referencia del identificador de archivo entre llaves. Perl solo puede resolverlo por s&amp;iacute; solo cuando la referencia del identificador de archivo es un escalar simple.</target>
        </trans-unit>
        <trans-unit id="27d5798184dd1af5697105e7a8d7e3bef1780f00" translate="yes" xml:space="preserve">
          <source>If you like, you can store these filehandles in an array or a hash. If you access them directly, they aren't simple scalars and you need to give &lt;code&gt;print&lt;/code&gt; a little help by placing the filehandle reference in braces. Perl can only figure it out on its own when the filehandle reference is a simple scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d730d69794a1a0d8df4bc0eb2edfe8040f78af15" translate="yes" xml:space="preserve">
          <source>If you localize a special variable, you'll be giving a new value to it, but its magic won't go away. That means that all side-effects related to this magic still work with the localized value.</source>
          <target state="translated">Si localizas una variable especial,le darás un nuevo valor,pero su magia no desaparecerá.Eso significa que todos los efectos secundarios relacionados con esta magia siguen funcionando con el valor localizado.</target>
        </trans-unit>
        <trans-unit id="c90f343f24019c1da72c48d70c317941a7498b61" translate="yes" xml:space="preserve">
          <source>If you localize an exported variable in a module, its exported value will not change. The local name becomes an alias to a new value but the external name is still an alias for the original.</source>
          <target state="translated">Si localizas una variable exportada en un módulo,su valor exportado no cambiará.El nombre local se convierte en un alias para un nuevo valor,pero el nombre externo sigue siendo un alias para el original.</target>
        </trans-unit>
        <trans-unit id="dafcf35a82f601b489cfb5dd0eef86e45cb1372b" translate="yes" xml:space="preserve">
          <source>If you look at its source, you'll see that open2() uses low-level primitives like the pipe() and exec() syscalls to create all the connections. Although it might have been more efficient by using socketpair(), this would have been even less portable than it already is. The open2() and open3() functions are unlikely to work anywhere except on a Unix system, or at least one purporting POSIX compliance.</source>
          <target state="translated">Si miras su fuente,verás que open2()utiliza primitivas de bajo nivel como el pipe()y exec()syscalls para crear todas las conexiones.Aunque podría haber sido más eficiente usando socketpair(),esto habría sido incluso menos portable de lo que ya es.Es poco probable que las funciones open2()y open3()funcionen en ningún sitio excepto en un sistema Unix,o al menos en uno que pretenda ser compatible con POSIX.</target>
        </trans-unit>
        <trans-unit id="dba57ac6d2e87e59b7cd30bc2efe7662859d4f78" translate="yes" xml:space="preserve">
          <source>If you look at the contents of a database file created by DB_File, there can sometimes be part of a Perl script included in it.</source>
          <target state="translated">Si miras el contenido de un archivo de base de datos creado por DB_File,a veces puede haber parte de un script Perl incluido en él.</target>
        </trans-unit>
        <trans-unit id="9ffeef0f67f605dc88b0c1746d2c0bfb6febb326" translate="yes" xml:space="preserve">
          <source>If you make any changes that affect miniperl or core routines that have different code paths for miniperl, be sure to run &lt;code&gt;make minitest&lt;/code&gt;. This will catch problems that even the full test suite will not catch because it runs a subset of tests under miniperl rather than perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e077c0b0a12316fa45027aa958a68eefe5eb38b" translate="yes" xml:space="preserve">
          <source>If you make use of the Berkeley DB API, it is</source>
          <target state="translated">Si haces uso de la API de la DB de Berkeley,es</target>
        </trans-unit>
        <trans-unit id="044615c04770ac7a0002f5e8d4d8dd2908b76278" translate="yes" xml:space="preserve">
          <source>If you may assume POSIX (a rather large assumption), you may read more about the POSIX locale system from &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;. The locale system at least attempts to make things a little bit more portable, or at least more convenient and native-friendly for non-English users. The system affects character sets and encoding, and date and time formatting--amongst other things.</source>
          <target state="translated">Si puede asumir POSIX (una suposici&amp;oacute;n bastante grande), puede leer m&amp;aacute;s sobre el sistema local POSIX de &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; . El sistema local intenta al menos hacer las cosas un poco m&amp;aacute;s port&amp;aacute;tiles, o al menos m&amp;aacute;s convenientes y amigables para los nativos para los usuarios que no hablan ingl&amp;eacute;s. El sistema afecta los conjuntos de caracteres y la codificaci&amp;oacute;n, y el formato de fecha y hora, entre otras cosas.</target>
        </trans-unit>
        <trans-unit id="a25944da5356d5910252ea9238bbb196b425ee18" translate="yes" xml:space="preserve">
          <source>If you memoize &lt;code&gt;getusers&lt;/code&gt; here, it will work right exactly once. The reference to the users list will be stored in the memo table. &lt;code&gt;main&lt;/code&gt; will discard the first element from the referenced list. The next time you invoke &lt;code&gt;main&lt;/code&gt; , &lt;code&gt;Memoize&lt;/code&gt; will not call &lt;code&gt;getusers&lt;/code&gt; ; it will just return the same reference to the same list it got last time. But this time the list has already had its head removed; &lt;code&gt;main&lt;/code&gt; will erroneously remove another element from it. The list will get shorter and shorter every time you call &lt;code&gt;main&lt;/code&gt; .</source>
          <target state="translated">Si memoriza &lt;code&gt;getusers&lt;/code&gt; aqu&amp;iacute;, funcionar&amp;aacute; exactamente una vez. La referencia a la lista de usuarios se almacenar&amp;aacute; en la tabla de notas. &lt;code&gt;main&lt;/code&gt; descartar&amp;aacute; el primer elemento de la lista referenciada. La pr&amp;oacute;xima vez que invoque &lt;code&gt;main&lt;/code&gt; , &lt;code&gt;Memoize&lt;/code&gt; no llamar&amp;aacute; a &lt;code&gt;getusers&lt;/code&gt; ; simplemente devolver&amp;aacute; la misma referencia a la misma lista que obtuvo la &amp;uacute;ltima vez. Pero esta vez la lista ya ha sido eliminada; &lt;code&gt;main&lt;/code&gt; eliminar&amp;aacute; por error otro elemento. La lista se acortar&amp;aacute; cada vez m&amp;aacute;s cada vez que llame a &lt;code&gt;main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccab2ece05cb5161b728c7c08be08148f8aa1e6f" translate="yes" xml:space="preserve">
          <source>If you memoize &lt;code&gt;getusers&lt;/code&gt; here, it will work right exactly once. The reference to the users list will be stored in the memo table. &lt;code&gt;main&lt;/code&gt; will discard the first element from the referenced list. The next time you invoke &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;Memoize&lt;/code&gt; will not call &lt;code&gt;getusers&lt;/code&gt;; it will just return the same reference to the same list it got last time. But this time the list has already had its head removed; &lt;code&gt;main&lt;/code&gt; will erroneously remove another element from it. The list will get shorter and shorter every time you call &lt;code&gt;main&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcd78cb5551e89b0a93e6ea03193603933b2916" translate="yes" xml:space="preserve">
          <source>If you must obtain a context in a sub deeper than your entry point you can use this to tell it how many EXTRA stack frames to look back. If this option is not provided the default of &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b7671e8edf51721ce7a662449c478e8b97bd95" translate="yes" xml:space="preserve">
          <source>If you need a copy of the string, see &lt;a href=&quot;#bytes_from_utf8&quot;&gt;&quot;bytes_from_utf8&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babf77ebcd09b5b6b24f3181921a88c6ea58626a" translate="yes" xml:space="preserve">
          <source>If you need a copy of the string, see &lt;a href=&quot;#bytes_from_utf8&quot;&gt;bytes_from_utf8&lt;/a&gt;.</source>
          <target state="translated">Si necesita una copia de la cadena, consulte &lt;a href=&quot;#bytes_from_utf8&quot;&gt;bytes_from_utf8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5f94b7a22fe122cef06ac242e6fea05a7455fe1" translate="yes" xml:space="preserve">
          <source>If you need a notation that's that powerful, use normal Perl:</source>
          <target state="translated">Si necesitas una notación tan potente,usa Perl normal:</target>
        </trans-unit>
        <trans-unit id="d3c247b2226d86ce39340fe5128412de0478e397" translate="yes" xml:space="preserve">
          <source>If you need an empty attribute list, for example in a code generator, add a space before the &lt;code&gt;=&lt;/code&gt; .</source>
          <target state="translated">Si necesita una lista de atributos vac&amp;iacute;a, por ejemplo en un generador de c&amp;oacute;digo, agregue un espacio antes de &lt;code&gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ec51b16d80aba23cb27eed2f37d008fc8bfa32a" translate="yes" xml:space="preserve">
          <source>If you need an empty attribute list, for example in a code generator, add a space before the &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df082bfa03c81e3a347168ac51e900439925f13" translate="yes" xml:space="preserve">
          <source>If you need both &lt;code&gt;next&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt;, you have to do both and also use a loop label:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bff095055ae8196964fe851c387b6ea9ca66a7f" translate="yes" xml:space="preserve">
          <source>If you need more advanced management of what runs in parallel vs in sequence, see the associated 'rules' documentation in &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; and &lt;a href=&quot;TAP::Parser::Scheduler&quot;&gt;TAP::Parser::Scheduler&lt;/a&gt;. If what's possible directly through &lt;code&gt;prove&lt;/code&gt; is not sufficient, you can write your own harness to access these features directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f75e54b3d41cd48a9f47dcdc6a65f36e63ccd0" translate="yes" xml:space="preserve">
          <source>If you need more advanced management of what runs in parallel vs in sequence, see the associated 'rules' documentation in &lt;a href=&quot;tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; and &lt;a href=&quot;tap/parser/scheduler&quot;&gt;TAP::Parser::Scheduler&lt;/a&gt;. If what's possible directly through &lt;code&gt;prove&lt;/code&gt; is not sufficient, you can write your own harness to access these features directly.</source>
          <target state="translated">Si necesita una administraci&amp;oacute;n m&amp;aacute;s avanzada de lo que se ejecuta en paralelo o en secuencia, consulte la documentaci&amp;oacute;n de las 'reglas' asociadas en &lt;a href=&quot;tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt; y &lt;a href=&quot;tap/parser/scheduler&quot;&gt;TAP :: Parser :: Scheduler&lt;/a&gt; . Si lo que es posible directamente a trav&amp;eacute;s de la &lt;code&gt;prove&lt;/code&gt; no es suficiente, puede escribir su propio arn&amp;eacute;s para acceder a estas funciones directamente.</target>
        </trans-unit>
        <trans-unit id="bcc2262a79a5dbdf9359e3765fbc56f15e34b33f" translate="yes" xml:space="preserve">
          <source>If you need more fine-grained control over shared variable access, see &lt;a href=&quot;../thread/semaphore&quot;&gt;Thread::Semaphore&lt;/a&gt;.</source>
          <target state="translated">Si necesita un control m&amp;aacute;s detallado sobre el acceso a variables compartidas, consulte &lt;a href=&quot;../thread/semaphore&quot;&gt;Thread :: Semaphore&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64caf20ebddb6770dbd779252f4ceb1cec9300bf" translate="yes" xml:space="preserve">
          <source>If you need more fine-grained control over shared variable access, see &lt;a href=&quot;Thread::Semaphore&quot;&gt;Thread::Semaphore&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a1402305f2d5c348929119dfbe7d1b16bea038" translate="yes" xml:space="preserve">
          <source>If you need more memory (larger data segment) for your Perl programs you can set:</source>
          <target state="translated">Si necesita más memoria (un segmento de datos más grande)para sus programas Perl,puede configurarla:</target>
        </trans-unit>
        <trans-unit id="a733f66f7ebcddfc5bced382948b822560f8102b" translate="yes" xml:space="preserve">
          <source>If you need non-ASCII characters in your source code, make it a UTF-8 encoded file and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; .</source>
          <target state="translated">Si necesita caracteres no ASCII en su c&amp;oacute;digo fuente, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; archivo codificado en UTF-8 y &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8 .</target>
        </trans-unit>
        <trans-unit id="d0a3470b5eeb6f4646e842f332fe5e001c0f8638" translate="yes" xml:space="preserve">
          <source>If you need non-ASCII characters in your source code, make it a UTF-8 encoded file and &lt;code&gt;use utf8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2791275bc33103874a494cba3668a34d497a88" translate="yes" xml:space="preserve">
          <source>If you need not it (say, in the case when you need not handle any combining characters), assign &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; explicitly.</source>
          <target state="translated">Si no lo necesita (digamos, en el caso de que no necesite manejar ning&amp;uacute;n car&amp;aacute;cter de combinaci&amp;oacute;n), asigne &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="f59efc7843078cafcac070fa0d339e2add569c59" translate="yes" xml:space="preserve">
          <source>If you need not it (say, in the case when you need not handle any combining characters), assign &lt;code&gt;(normalization =&amp;gt; undef)&lt;/code&gt; explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c63ba89d54a209534c04c157c983b92a890aeb" translate="yes" xml:space="preserve">
          <source>If you need something like this functionality, it is recommended that use you a simple source filter, such as &lt;a href=&quot;Filter::Encoding&quot;&gt;Filter::Encoding&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d24eea4a069716d3cfb8ce322b04914e0b52151" translate="yes" xml:space="preserve">
          <source>If you need something like this functionality, you should use the &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; pragma, which is also deprecated, but has fewer nasty side effects.</source>
          <target state="translated">Si necesita algo como esta funcionalidad, debe usar el pragma de &lt;a href=&quot;encoding&quot;&gt;codificaci&amp;oacute;n&lt;/a&gt; , que tambi&amp;eacute;n est&amp;aacute; obsoleto, pero tiene menos efectos secundarios desagradables.</target>
        </trans-unit>
        <trans-unit id="988729c3d7bb2f3f6d6060c234bddde42b00f5a7" translate="yes" xml:space="preserve">
          <source>If you need something much more sophisticated and controllable, Leon Brocard's &lt;a href=&quot;Devel::ebug&quot;&gt;Devel::ebug&lt;/a&gt; (which you can call with the &lt;code&gt;-D&lt;/code&gt; switch as &lt;code&gt;-Debug&lt;/code&gt;) gives you the programmatic hooks into everything you need to write your own (without too much pain and suffering).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74399fe1ce7a1f4f506a06b60ded39ec27cea334" translate="yes" xml:space="preserve">
          <source>If you need something much more sophisticated and controllable, Leon Brocard's &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::ebug&quot;&gt;Devel::ebug&lt;/a&gt; (which you can call with the &lt;code&gt;-D&lt;/code&gt; switch as &lt;code&gt;-Debug&lt;/code&gt; ) gives you the programmatic hooks into everything you need to write your own (without too much pain and suffering).</source>
          <target state="translated">Si necesita algo mucho m&amp;aacute;s sofisticado y controlable, &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::ebug&quot;&gt;Devel :: ebug de&lt;/a&gt; Leon Brocard (al que puede llamar con el interruptor &lt;code&gt;-D&lt;/code&gt; como &lt;code&gt;-Debug&lt;/code&gt; ) le brinda los ganchos program&amp;aacute;ticos en todo lo que necesita para escribir el suyo (sin demasiado dolor y sufrimiento ).</target>
        </trans-unit>
        <trans-unit id="77f3f2631a368e380813c177575d4bf78bb0f7fd" translate="yes" xml:space="preserve">
          <source>If you need the string representation of a character that doesn't have a mnemonic name in C, you should add it to the list in</source>
          <target state="translated">Si necesitas la representación de la cadena de un personaje que no tiene un nombre mnemotécnico en C,debes añadirlo a la lista en</target>
        </trans-unit>
        <trans-unit id="c2b8ba636abce4657c8c0f922660904cfc7228c1" translate="yes" xml:space="preserve">
          <source>If you need to be able to read a block which has an exact size, you can use the function &lt;code&gt;filter_read_exact&lt;/code&gt; . It works identically to &lt;code&gt;filter_read&lt;/code&gt; in block mode, except it will try to read a block which is exactly &lt;code&gt;$size&lt;/code&gt; bytes in length. The only circumstances when it will not return a block which is &lt;code&gt;$size&lt;/code&gt; bytes long is on EOF or error.</source>
          <target state="translated">Si necesita poder leer un bloque que tiene un tama&amp;ntilde;o exacto, puede usar la funci&amp;oacute;n &lt;code&gt;filter_read_exact&lt;/code&gt; . Funciona de manera id&amp;eacute;ntica a &lt;code&gt;filter_read&lt;/code&gt; en modo de bloque, excepto que intentar&amp;aacute; leer un bloque que tiene exactamente &lt;code&gt;$size&lt;/code&gt; bytes de longitud. Las &amp;uacute;nicas circunstancias en las que no devolver&amp;aacute; un bloque con una longitud de bytes de &lt;code&gt;$size&lt;/code&gt; es en EOF o error.</target>
        </trans-unit>
        <trans-unit id="8c813a030a97b2b5bb47766e284a0379dde73e25" translate="yes" xml:space="preserve">
          <source>If you need to be able to read a block which has an exact size, you can use the function &lt;code&gt;filter_read_exact&lt;/code&gt;. It works identically to &lt;code&gt;filter_read&lt;/code&gt; in block mode, except it will try to read a block which is exactly &lt;code&gt;$size&lt;/code&gt; bytes in length. The only circumstances when it will not return a block which is &lt;code&gt;$size&lt;/code&gt; bytes long is on EOF or error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a6ebad8222234ffca6c9871e53dc4619a2ca40" translate="yes" xml:space="preserve">
          <source>If you need to bless or re-bless an object you can use the following function:</source>
          <target state="translated">Si necesita bendecir o volver a bendecir un objeto puede usar la siguiente función:</target>
        </trans-unit>
        <trans-unit id="ac05679aaf52c29544dd930529212ccf723e35df" translate="yes" xml:space="preserve">
          <source>If you need to compare version numbers, but can't be sure whether they are expressed as numbers, strings, v-strings or version objects, then you should use version.pm to parse them all into objects for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a20b3786b554786904a5b1cfd2ed611798a9441" translate="yes" xml:space="preserve">
          <source>If you need to customize the objects on creation, subclass &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; and override &lt;a href=&quot;#make_grammar&quot;&gt;&quot;make_grammar&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8826419639cfccd71d1ef977c6d4164c1055d8a9" translate="yes" xml:space="preserve">
          <source>If you need to customize the objects on creation, subclass &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; and override &lt;a href=&quot;#make_result&quot;&gt;&quot;make_result&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70c6e2df233bb6ffd0181bcff94f18d3b389825" translate="yes" xml:space="preserve">
          <source>If you need to customize the objects on creation, subclass &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt; and override &lt;a href=&quot;#make_grammar&quot;&gt;make_grammar&lt;/a&gt;</source>
          <target state="translated">Si necesita personalizar los objetos en la creaci&amp;oacute;n, subclase &lt;a href=&quot;parser&quot;&gt;TAP :: Parser&lt;/a&gt; y anule &lt;a href=&quot;#make_grammar&quot;&gt;make_grammar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28d9937fb82713ba1f2c783a5af6bd5ed96f1469" translate="yes" xml:space="preserve">
          <source>If you need to customize the objects on creation, subclass &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt; and override &lt;a href=&quot;#make_result&quot;&gt;make_result&lt;/a&gt;.</source>
          <target state="translated">Si necesita personalizar los objetos en la creaci&amp;oacute;n, subclase &lt;a href=&quot;parser&quot;&gt;TAP :: Parser&lt;/a&gt; y anule &lt;a href=&quot;#make_result&quot;&gt;make_result&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bf36336c456165d1f557c63d917cf367e24c8a2" translate="yes" xml:space="preserve">
          <source>If you need to distinguish between endian architectures you could use either of the variables set like so:</source>
          <target state="translated">Si necesitas distinguir entre las arquitecturas endianas,puedes usar cualquiera de las variables establecidas como tal:</target>
        </trans-unit>
        <trans-unit id="74fb9c00d6d39f0efb84e3bc0ddfd5cbf2ea27a0" translate="yes" xml:space="preserve">
          <source>If you need to do something more complicated, the &lt;a href=&quot;HTTP::Tiny&quot;&gt;HTTP::Tiny&lt;/a&gt; object can be customized by setting attributes, or you can use &lt;a href=&quot;LWP::UserAgent&quot;&gt;LWP::UserAgent&lt;/a&gt; from the libwww-perl distribution or &lt;a href=&quot;Mojo::UserAgent&quot;&gt;Mojo::UserAgent&lt;/a&gt; from the Mojolicious distribution to make common tasks easier. If you want to simulate an interactive web browser, you can use the &lt;a href=&quot;WWW::Mechanize&quot;&gt;WWW::Mechanize&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c8b4493aa37d00a1808e45469530aac89fd5c8" translate="yes" xml:space="preserve">
          <source>If you need to do something more complicated, you can use &lt;a href=&quot;http://search.cpan.org/perldoc/LWP::UserAgent&quot;&gt;LWP::UserAgent&lt;/a&gt; module to create your own user-agent (e.g. browser) to get the job done. If you want to simulate an interactive web browser, you can use the &lt;a href=&quot;http://search.cpan.org/perldoc/WWW::Mechanize&quot;&gt;WWW::Mechanize&lt;/a&gt; module.</source>
          <target state="translated">Si necesita hacer algo m&amp;aacute;s complicado, puede usar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/LWP::UserAgent&quot;&gt;LWP :: UserAgent&lt;/a&gt; para crear su propio agente de usuario (por ejemplo, navegador) para realizar el trabajo. Si desea simular un navegador web interactivo, puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/WWW::Mechanize&quot;&gt;WWW :: Mechanize&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7852e983dc45b1c4fb37cf3f05367219e6ca843" translate="yes" xml:space="preserve">
          <source>If you need to do this check often, define your own macro like this:</source>
          <target state="translated">Si necesitas hacer esta comprobación a menudo,define tu propia macro así:</target>
        </trans-unit>
        <trans-unit id="6466ffd2aaaebc3946b351828c459bde58bed891" translate="yes" xml:space="preserve">
          <source>If you need to include C code or C library interfaces use h2xs. h2xs will create the module distribution structure and the initial interface files. &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; and &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; explain the details.</source>
          <target state="translated">Si necesita incluir c&amp;oacute;digo C o interfaces de biblioteca C, use h2xs. h2xs crear&amp;aacute; la estructura de distribuci&amp;oacute;n del m&amp;oacute;dulo y los archivos de interfaz iniciales. &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; y &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; explican los detalles.</target>
        </trans-unit>
        <trans-unit id="132d01927536564513220be940287f0a7e0711cd" translate="yes" xml:space="preserve">
          <source>If you need to make sure your diagnostics are displayed in the correct order relative to test results you can use the &lt;code&gt;--merge&lt;/code&gt; option to merge the test scripts' STDERR into their STDOUT.</source>
          <target state="translated">Si necesita asegurarse de que sus diagn&amp;oacute;sticos se muestren en el orden correcto en relaci&amp;oacute;n con los resultados de la prueba, puede usar la opci&amp;oacute;n &lt;code&gt;--merge&lt;/code&gt; para fusionar el STDERR de los scripts de prueba en su STDOUT.</target>
        </trans-unit>
        <trans-unit id="f121bbe2a75e4529feda5970b07f0e59291a1000" translate="yes" xml:space="preserve">
          <source>If you need to pad with a character other than blank or zero you can use one of the following methods. They all generate a pad string with the &lt;code&gt;x&lt;/code&gt; operator and combine that with &lt;code&gt;$text&lt;/code&gt; . These methods do not truncate &lt;code&gt;$text&lt;/code&gt; .</source>
          <target state="translated">Si necesita rellenar con un car&amp;aacute;cter que no sea en blanco o cero, puede utilizar uno de los siguientes m&amp;eacute;todos. Todos generan una cadena de pad con el operador &lt;code&gt;x&lt;/code&gt; y la combinan con &lt;code&gt;$text&lt;/code&gt; . Estos m&amp;eacute;todos no truncan &lt;code&gt;$text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="281d15e2e9e38bc2d44d9e73a83267de2350b440" translate="yes" xml:space="preserve">
          <source>If you need to pad with a character other than blank or zero you can use one of the following methods. They all generate a pad string with the &lt;code&gt;x&lt;/code&gt; operator and combine that with &lt;code&gt;$text&lt;/code&gt;. These methods do not truncate &lt;code&gt;$text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed2c6c4464c8d7cdb6c519c251d4778b6623f9b" translate="yes" xml:space="preserve">
          <source>If you need to pass the handle to something that expects a filename then on a unix system you can use &lt;code&gt;&quot;/dev/fd/&quot; . fileno($fh)&lt;/code&gt; for arbitrary programs. Perl code that uses the 2-argument version of &lt;code&gt;open&lt;/code&gt; can be passed &lt;code&gt;&quot;+&amp;lt;=&amp;amp;&quot; . fileno($fh)&lt;/code&gt;. Otherwise you will need to pass the filename. You will have to clear the close-on-exec bit on that file descriptor before passing it to another process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db19b81a16545df9a2691c134fe238aff01db6b" translate="yes" xml:space="preserve">
          <source>If you need to pass the handle to something that expects a filename then on a unix system you can use C for arbitrary programs. Perl code that uses the 2-argument version of C&amp;lt;&amp;lt; open &amp;gt;&amp;gt; can be passed C&amp;lt;&amp;lt; &quot;+&amp;lt;=&amp;amp;&quot; . fileno($fh) &amp;gt;&amp;gt;. Otherwise you will need to pass the filename. You will have to clear the close-on-exec bit on that file descriptor before passing it to another process.</source>
          <target state="translated">Si necesita pasar el identificador a algo que espera un nombre de archivo, en un sistema Unix puede usar C para programas arbitrarios. El c&amp;oacute;digo Perl que usa la versi&amp;oacute;n de 2 argumentos de C &amp;lt;&amp;lt; open &amp;gt;&amp;gt; puede pasarse C &amp;lt;&amp;lt; &quot;+ &amp;lt;= &amp;amp;&quot;. fileno ($ fh) &amp;gt;&amp;gt;. De lo contrario, deber&amp;aacute; pasar el nombre del archivo. Tendr&amp;aacute; que borrar el bit close-on-exec en ese descriptor de archivo antes de pasarlo a otro proceso.</target>
        </trans-unit>
        <trans-unit id="a1479a86a7c4f92b2a893038ca84d0e7634155ed" translate="yes" xml:space="preserve">
          <source>If you need to perform any preprocessing of input before it is parsed you may want to override one or more of &lt;b&gt;preprocess_line()&lt;/b&gt; and/or &lt;b&gt;preprocess_paragraph()&lt;/b&gt;.</source>
          <target state="translated">Si necesita realizar cualquier procesamiento previo de la entrada antes de analizarla, es posible que desee anular uno o m&amp;aacute;s de &lt;b&gt;preprocess_line ()&lt;/b&gt; y / o &lt;b&gt;preprocess_paragraph ()&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="6fb6f27c51e4262718886f54bfa50ac616a6eb28" translate="yes" xml:space="preserve">
          <source>If you need to push multiple different values then you should either use the &lt;code&gt;(X)PUSHs&lt;/code&gt; macros, or else use the new &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m(X)PUSH[iunp]&lt;/a&gt;&lt;/code&gt; macros, none of which make use of &lt;code&gt;TARG&lt;/code&gt; . The &lt;code&gt;(X)PUSHs&lt;/code&gt; macros simply push an SV* on the stack, which, as noted under &lt;a href=&quot;#XSUBs-and-the-Argument-Stack&quot;&gt;XSUBs and the Argument Stack&lt;/a&gt;, will often need to be &quot;mortal&quot;. The new &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m(X)PUSH[iunp]&lt;/a&gt;&lt;/code&gt; macros make this a little easier to achieve by creating a new mortal for you (via &lt;code&gt;(X)PUSHmortal&lt;/code&gt;), pushing that onto the stack (extending it if necessary in the case of the &lt;code&gt;mXPUSH[iunp]&lt;/code&gt; macros), and then setting its value. Thus, instead of writing this to &quot;fix&quot; the example above:</source>
          <target state="translated">Si necesita insertar varios valores diferentes, entonces debe usar las macros &lt;code&gt;(X)PUSHs&lt;/code&gt; , o bien usar las nuevas macros &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m(X)PUSH[iunp]&lt;/a&gt;&lt;/code&gt; , ninguna de las cuales hace uso de &lt;code&gt;TARG&lt;/code&gt; . Las macros &lt;code&gt;(X)PUSHs&lt;/code&gt; simplemente empujan un SV * en la pila, que, como se indica en &lt;a href=&quot;#XSUBs-and-the-Argument-Stack&quot;&gt;XSUBs y Argument Stack&lt;/a&gt; , a menudo necesitar&amp;aacute; ser &quot;mortal&quot;. Las nuevas macros &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m(X)PUSH[iunp]&lt;/a&gt;&lt;/code&gt; hacen que esto sea un poco m&amp;aacute;s f&amp;aacute;cil de lograr creando un nuevo mortal para ti (a trav&amp;eacute;s de &lt;code&gt;(X)PUSHmortal&lt;/code&gt; ), empuj&amp;aacute;ndolo a la pila (extendi&amp;eacute;ndolo si es necesario en el caso de &lt;code&gt;mXPUSH[iunp]&lt;/code&gt; macros) y, a continuaci&amp;oacute;n, establezca su valor. Por lo tanto, en lugar de escribir esto para &quot;arreglar&quot; el ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="dcfff33a227c9b4b0446369038ec69edba6230b7" translate="yes" xml:space="preserve">
          <source>If you need to push multiple different values then you should either use the &lt;code&gt;(X)PUSHs&lt;/code&gt; macros, or else use the new &lt;code&gt;m(X)PUSH[iunp]&lt;/code&gt; macros, none of which make use of &lt;code&gt;TARG&lt;/code&gt;. The &lt;code&gt;(X)PUSHs&lt;/code&gt; macros simply push an SV* on the stack, which, as noted under &lt;a href=&quot;#XSUBs-and-the-Argument-Stack&quot;&gt;&quot;XSUBs and the Argument Stack&quot;&lt;/a&gt;, will often need to be &quot;mortal&quot;. The new &lt;code&gt;m(X)PUSH[iunp]&lt;/code&gt; macros make this a little easier to achieve by creating a new mortal for you (via &lt;code&gt;(X)PUSHmortal&lt;/code&gt;), pushing that onto the stack (extending it if necessary in the case of the &lt;code&gt;mXPUSH[iunp]&lt;/code&gt; macros), and then setting its value. Thus, instead of writing this to &quot;fix&quot; the example above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2c24c8a5106b97dd605e7836d7f3b3f6f05f0c" translate="yes" xml:space="preserve">
          <source>If you need to run code under taint mode, updating to the latest &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt; is highly recommended. On Windows, if the directory given by &lt;a href=&quot;File::Spec::tmpdir&quot;&gt;File::Spec::tmpdir&lt;/a&gt; isn't writable, File::Temp will attempt to fallback to the user's local application data directory or croak with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45e0c901cd619f7527093c4d9dc59b922de91c4" translate="yes" xml:space="preserve">
          <source>If you need to run code under taint mode, updating to the latest L&amp;lt;:spec&amp;gt; is highly recommended.</source>
          <target state="translated">Si necesita ejecutar c&amp;oacute;digo en modo taint, se recomienda encarecidamente actualizar a la &amp;uacute;ltima L &amp;lt;: spec&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="0a26debdab35f4d9006770f7ff9dd97352bd60fc" translate="yes" xml:space="preserve">
          <source>If you need to set the encoding for STDIN, STDOUT, and STDERR, for example based on the user's locale, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">Si necesita establecer la codificaci&amp;oacute;n para STDIN, STDOUT y STDERR, por ejemplo, seg&amp;uacute;n la configuraci&amp;oacute;n regional del usuario, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="870260c0c362207468a98bb8f507e2cc87fb2a13" translate="yes" xml:space="preserve">
          <source>If you need to set the encoding for STDIN, STDOUT, and STDERR, for example based on the user's locale, &lt;code&gt;use open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d6ae28c61f9ab4be958ec28b43ea876d12f0ac" translate="yes" xml:space="preserve">
          <source>If you need to sort on several fields, the following paradigm is useful.</source>
          <target state="translated">Si necesitas clasificar en varios campos,el siguiente paradigma es útil.</target>
        </trans-unit>
        <trans-unit id="f3d49b98b395f07c8fa5d476950e74044c830e9d" translate="yes" xml:space="preserve">
          <source>If you need to test whether a version object has been initialized, you can simply test it directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb30e833a46ba05085b508093073afbb52be3c6" translate="yes" xml:space="preserve">
          <source>If you need to use</source>
          <target state="translated">Si necesita usar</target>
        </trans-unit>
        <trans-unit id="dd52c7b44ac55aa77cc0e377ad21781b36b65218" translate="yes" xml:space="preserve">
          <source>If you need to use Perl in the ILE environment, you may want to consider using Qp2RunPase() to call the PASE version of Perl.</source>
          <target state="translated">Si necesita usar Perl en el entorno ILE,puede considerar usar Qp2RunPase()para llamar a la versión PASE de Perl.</target>
        </trans-unit>
        <trans-unit id="b4808d5e77c37aaf035853f43eef1fd731c05497" translate="yes" xml:space="preserve">
          <source>If you need to, your program can pass parameters to the subroutine as part of the thread startup. Just include the list of parameters as part of the &lt;code&gt;threads-&amp;gt;create()&lt;/code&gt; call, like this:</source>
          <target state="translated">Si es necesario, su programa puede pasar par&amp;aacute;metros a la subrutina como parte del inicio del hilo. Simplemente incluya la lista de par&amp;aacute;metros como parte de la &lt;code&gt;threads-&amp;gt;create()&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="1710a33b911c663eb696834835df2f1e23df21c3" translate="yes" xml:space="preserve">
          <source>If you needed to know the length of the string in bytes, now's the perfect time for that. Because &lt;code&gt;$body&lt;/code&gt; is now a byte string, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; will report the number of bytes, instead of the number of characters. The number of characters is no longer known, because characters only exist in text strings.</source>
          <target state="translated">Si necesita saber la longitud de la cadena en bytes, ahora es el momento perfecto para eso. Debido a que &lt;code&gt;$body&lt;/code&gt; ahora es una cadena de bytes, la &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; informar&amp;aacute; el n&amp;uacute;mero de bytes, en lugar del n&amp;uacute;mero de caracteres. Ya no se conoce el n&amp;uacute;mero de caracteres, porque los caracteres solo existen en cadenas de texto.</target>
        </trans-unit>
        <trans-unit id="f897865d444575124f537cfaf9274fd31883caca" translate="yes" xml:space="preserve">
          <source>If you needed to know the length of the string in bytes, now's the perfect time for that. Because &lt;code&gt;$body&lt;/code&gt; is now a byte string, &lt;code&gt;length&lt;/code&gt; will report the number of bytes, instead of the number of characters. The number of characters is no longer known, because characters only exist in text strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be13b7e49abdf9671c1c203318c86c5b390da880" translate="yes" xml:space="preserve">
          <source>If you now say</source>
          <target state="translated">Si ahora dices</target>
        </trans-unit>
        <trans-unit id="4e07afe42e8e4906b74c8de7f97562b41c673c72" translate="yes" xml:space="preserve">
          <source>If you only have to do this once, you can print individually to each filehandle.</source>
          <target state="translated">Si sólo tiene que hacerlo una vez,puede imprimir individualmente en cada archivador.</target>
        </trans-unit>
        <trans-unit id="4fedbe813a9df1931afb6723a023d133df40e372" translate="yes" xml:space="preserve">
          <source>If you only want to cancel some uncommitted edits, you can use &lt;code&gt;git checkout&lt;/code&gt; and give it a list of files to be reverted, or &lt;code&gt;git checkout -f&lt;/code&gt; to revert them all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a207a0fbb92e170fc7384b498a52e214bc5156" translate="yes" xml:space="preserve">
          <source>If you open a pipe on the command &lt;code&gt;-&lt;/code&gt; (that is, specify either &lt;code&gt;|-&lt;/code&gt; or &lt;code&gt;-|&lt;/code&gt; with the one- or two-argument forms of &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;), an implicit &lt;a href=&quot;#fork&quot;&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/a&gt; is done, so &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; returns twice: in the parent process it returns the pid of the child process, and in the child process it returns (a defined) &lt;code&gt;0&lt;/code&gt;. Use &lt;code&gt;defined($pid)&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt; to determine whether the open was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4f1155d60201a5a642377c105def023a28c8a3" translate="yes" xml:space="preserve">
          <source>If you open a pipe on the command &lt;code&gt;-&lt;/code&gt; (that is, specify either &lt;code&gt;|-&lt;/code&gt; or &lt;code&gt;-|&lt;/code&gt; with the one- or two-argument forms of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;), an implicit &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; is done, so &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; returns twice: in the parent process it returns the pid of the child process, and in the child process it returns (a defined) &lt;code&gt;0&lt;/code&gt; . Use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined($pid)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt; to determine whether the open was successful.</source>
          <target state="translated">Si abre una tuber&amp;iacute;a en el comando &lt;code&gt;-&lt;/code&gt; (es decir, especifique &lt;code&gt;|-&lt;/code&gt; o &lt;code&gt;-|&lt;/code&gt; con las formas de uno o dos argumentos de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; ), se realiza una &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; impl&amp;iacute;cita , por lo que &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; devuelve dos veces: en el proceso padre devuelve el pid del proceso hijo, y en el proceso hijo devuelve (un definido) &lt;code&gt;0&lt;/code&gt; . Use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined($pid)&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;//&lt;/code&gt; para determinar si la apertura fue exitosa.</target>
        </trans-unit>
        <trans-unit id="3ae4797a620c0cf454989f9d7b82f21950740479" translate="yes" xml:space="preserve">
          <source>If you open a pipe on the command &lt;code&gt;-&lt;/code&gt; (that is, specify either &lt;code&gt;|-&lt;/code&gt; or &lt;code&gt;-|&lt;/code&gt; with the one- or two-argument forms of &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;), an implicit &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; is done, so &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; returns twice: in the parent process it returns the pid of the child process, and in the child process it returns (a defined) &lt;code&gt;0&lt;/code&gt; . Use &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined($pid)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt; to determine whether the open was successful.</source>
          <target state="translated">Si abre una tuber&amp;iacute;a en el comando &lt;code&gt;-&lt;/code&gt; (es decir, especifique &lt;code&gt;|-&lt;/code&gt; o &lt;code&gt;-|&lt;/code&gt; con las formas de uno o dos argumentos de &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; ), se realiza una &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; impl&amp;iacute;cita , por lo que &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; devuelve dos veces: en el proceso padre devuelve el pid del proceso hijo, y en el proceso hijo devuelve (un definido) &lt;code&gt;0&lt;/code&gt; . Use &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined($pid)&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;//&lt;/code&gt; para determinar si la apertura fue exitosa.</target>
        </trans-unit>
        <trans-unit id="b60263df2e1568250aacc0155390b54bbc574b26" translate="yes" xml:space="preserve">
          <source>If you opted to uncomment &lt;code&gt;INST_VER&lt;/code&gt; and &lt;code&gt;INST_ARCH&lt;/code&gt; in the makefile then the installation structure is a little more complicated and you will need to add two new PATH components instead: &lt;code&gt;$INST_TOP\$INST_VER\bin&lt;/code&gt; and &lt;code&gt;$INST_TOP\$INST_VER\bin\$ARCHNAME&lt;/code&gt; , e.g.</source>
          <target state="translated">Si opt&amp;oacute; por descomentar &lt;code&gt;INST_VER&lt;/code&gt; e &lt;code&gt;INST_ARCH&lt;/code&gt; en el archivo Make, entonces la estructura de instalaci&amp;oacute;n es un poco m&amp;aacute;s complicada y deber&amp;aacute; agregar dos nuevos componentes PATH en su lugar: &lt;code&gt;$INST_TOP\$INST_VER\bin&lt;/code&gt; y &lt;code&gt;$INST_TOP\$INST_VER\bin\$ARCHNAME&lt;/code&gt; , p.ej</target>
        </trans-unit>
        <trans-unit id="bad570e796041b2f5592838887a3faca1802a117" translate="yes" xml:space="preserve">
          <source>If you opted to uncomment &lt;code&gt;INST_VER&lt;/code&gt; and &lt;code&gt;INST_ARCH&lt;/code&gt; in the makefile then the installation structure is a little more complicated and you will need to add two new PATH components instead: &lt;code&gt;$INST_TOP\$INST_VER\bin&lt;/code&gt; and &lt;code&gt;$INST_TOP\$INST_VER\bin\$ARCHNAME&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3281995d9866c6fc2125672694920f44e26bcb98" translate="yes" xml:space="preserve">
          <source>If you override this method, it should never throw an exception.</source>
          <target state="translated">Si anula este método,nunca debería hacer una excepción.</target>
        </trans-unit>
        <trans-unit id="a202baf38183d44995c2fcf3449035cd37813ae8" translate="yes" xml:space="preserve">
          <source>If you pass a perl version you get the release date for that version only.</source>
          <target state="translated">Si pasas una versión de perl,obtienes la fecha de lanzamiento sólo para esa versión.</target>
        </trans-unit>
        <trans-unit id="d2654ab11aa24c5cd7986448b88f2571bec7a12a" translate="yes" xml:space="preserve">
          <source>If you pass a port number to Net::FTP then it assumes this is the port number of the final destination. By default Net::FTP will always try to connect to the firewall on port 21.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1538bf7a76ecb948f65bf6e3cd597e0fef6beddd" translate="yes" xml:space="preserve">
          <source>If you pass a version argument (value of &lt;code&gt;$]&lt;/code&gt; , like &lt;code&gt;5.00503&lt;/code&gt; or &lt;code&gt;5.008008&lt;/code&gt; ), you get a list of all the modules and their respective versions. (If you have the &lt;code&gt;version&lt;/code&gt; module, you can also use new-style version numbers, like &lt;code&gt;5.8.8&lt;/code&gt; .)</source>
          <target state="translated">Si pasa un argumento de versi&amp;oacute;n (valor de &lt;code&gt;$]&lt;/code&gt; , como &lt;code&gt;5.00503&lt;/code&gt; o &lt;code&gt;5.008008&lt;/code&gt; ), obtendr&amp;aacute; una lista de todos los m&amp;oacute;dulos y sus respectivas versiones. (Si tiene el m&amp;oacute;dulo de &lt;code&gt;version&lt;/code&gt; , tambi&amp;eacute;n puede usar n&amp;uacute;meros de versi&amp;oacute;n de estilo nuevo, como &lt;code&gt;5.8.8&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7bc630f7bd97f46ece9c6618008aa09db386949e" translate="yes" xml:space="preserve">
          <source>If you pass a version argument (value of &lt;code&gt;$]&lt;/code&gt;, like &lt;code&gt;5.00503&lt;/code&gt; or &lt;code&gt;5.008008&lt;/code&gt;), you get a list of all the modules and their respective versions. (If you have the &lt;code&gt;version&lt;/code&gt; module, you can also use new-style version numbers, like &lt;code&gt;5.8.8&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bac64f7444e2412e1719cee4ee931ff2c82b7b" translate="yes" xml:space="preserve">
          <source>If you pass the &lt;code&gt;-q&lt;/code&gt; option to the module, then the STDOUT filehandle will be redirected into the variable &lt;code&gt;$O::BEGIN_output&lt;/code&gt; during compilation. This has the effect that any output printed to STDOUT by BEGIN blocks or use'd modules will be stored in this variable rather than printed. It's useful with those backends which produce output themselves (&lt;code&gt;Deparse&lt;/code&gt; , &lt;code&gt;Concise&lt;/code&gt; etc), so that their output is not confused with that generated by the code being compiled.</source>
          <target state="translated">Si pasa la opci&amp;oacute;n &lt;code&gt;-q&lt;/code&gt; al m&amp;oacute;dulo, entonces el identificador de archivo STDOUT ser&amp;aacute; redirigido a la variable &lt;code&gt;$O::BEGIN_output&lt;/code&gt; durante la compilaci&amp;oacute;n. Esto tiene el efecto de que cualquier salida impresa en STDOUT por bloques BEGIN o m&amp;oacute;dulos usados ​​se almacenar&amp;aacute; en esta variable en lugar de imprimirse. Es &amp;uacute;til con aquellos backends que producen resultados por s&amp;iacute; mismos ( &lt;code&gt;Deparse&lt;/code&gt; , &lt;code&gt;Concise&lt;/code&gt; , etc.), de modo que su resultado no se confunda con el generado por el c&amp;oacute;digo que se est&amp;aacute; compilando.</target>
        </trans-unit>
        <trans-unit id="2b02265881df71310516615b75c10b272c997131" translate="yes" xml:space="preserve">
          <source>If you pass the &lt;code&gt;-q&lt;/code&gt; option to the module, then the STDOUT filehandle will be redirected into the variable &lt;code&gt;$O::BEGIN_output&lt;/code&gt; during compilation. This has the effect that any output printed to STDOUT by BEGIN blocks or use'd modules will be stored in this variable rather than printed. It's useful with those backends which produce output themselves (&lt;code&gt;Deparse&lt;/code&gt;, &lt;code&gt;Concise&lt;/code&gt; etc), so that their output is not confused with that generated by the code being compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6ebb2e5d7084d0bbbc51b71dbc71d3b131a896" translate="yes" xml:space="preserve">
          <source>If you perform a new installation, then (a newer) Perl will be installed automatically. Pre-installed HP-UX systems now have more recent versions of Perl and the updated modules.</source>
          <target state="translated">Si realiza una nueva instalación,entonces (una más nueva)Perl se instalará automáticamente.Los sistemas HP-UX preinstalados ahora tienen versiones más recientes de Perl y los módulos actualizados.</target>
        </trans-unit>
        <trans-unit id="3e9cb6c101da46aadecf5f8c5c109de4412a1005" translate="yes" xml:space="preserve">
          <source>If you pick the right test function, you'll usually get a good idea of what went wrong when it failed. But sometimes it doesn't work out that way. So here we have ways for you to write your own diagnostic messages which are safer than just &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; STDERR&lt;/code&gt; .</source>
          <target state="translated">Si elige la funci&amp;oacute;n de prueba correcta, generalmente obtendr&amp;aacute; una buena idea de qu&amp;eacute; sali&amp;oacute; mal cuando fall&amp;oacute;. Pero a veces no funciona de esa manera. As&amp;iacute; que aqu&amp;iacute; tenemos formas para que usted escriba sus propios mensajes de diagn&amp;oacute;stico que son m&amp;aacute;s seguros que simplemente &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; STDERR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bdb193abf588e1053390563380a45f43172b81e" translate="yes" xml:space="preserve">
          <source>If you pick the right test function, you'll usually get a good idea of what went wrong when it failed. But sometimes it doesn't work out that way. So here we have ways for you to write your own diagnostic messages which are safer than just &lt;code&gt;print STDERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f8c3042df990d0caf7e15fec6410a8229928ec" translate="yes" xml:space="preserve">
          <source>If you plan on doing serious C hacking, make sure to read this.</source>
          <target state="translated">Si planeas hacer un hackeo serio de C,asegúrate de leer esto.</target>
        </trans-unit>
        <trans-unit id="81013dc1ad1ba24b43d69b63d40b9239df928ef7" translate="yes" xml:space="preserve">
          <source>If you plan to link Perl to any module that requires thread-support, like DBD::Oracle, it is better to use the _r version of the compiler. This will not build a threaded Perl, but a thread-enabled Perl. See also &lt;a href=&quot;#Threaded-Perl&quot;&gt;&quot;Threaded Perl&quot;&lt;/a&gt; later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea674be45f6eda0998926e34d1adb1941baadfc8" translate="yes" xml:space="preserve">
          <source>If you plan to link Perl to any module that requires thread-support, like DBD::Oracle, it is better to use the _r version of the compiler. This will not build a threaded Perl, but a thread-enabled Perl. See also &lt;a href=&quot;#Threaded-Perl&quot;&gt;Threaded Perl&lt;/a&gt; later on.</source>
          <target state="translated">Si planea vincular Perl a cualquier m&amp;oacute;dulo que requiera soporte de subprocesos, como DBD :: Oracle, es mejor usar la versi&amp;oacute;n _r del compilador. Esto no construir&amp;aacute; un Perl con subprocesos, sino un Perl habilitado para subprocesos. Consulte tambi&amp;eacute;n &lt;a href=&quot;#Threaded-Perl&quot;&gt;Perl enhebrado&lt;/a&gt; m&amp;aacute;s adelante.</target>
        </trans-unit>
        <trans-unit id="f3ae83db0cc3f44bcbcecf136bd4e7799904f67e" translate="yes" xml:space="preserve">
          <source>If you prefer &quot;regex&quot; over &quot;regexp&quot; in this tutorial, you could use the following program to replace it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59862b4b635be40786928d6e580b97f5fccb229" translate="yes" xml:space="preserve">
          <source>If you prefer 'regex' over 'regexp' in this tutorial, you could use the following program to replace it:</source>
          <target state="translated">Si en este tutorial prefieres &quot;regex&quot; en lugar de &quot;regexp&quot;,puedes usar el siguiente programa para reemplazarlo:</target>
        </trans-unit>
        <trans-unit id="e975a86edf7cf3f2a85267ea19c5e7fb97348443" translate="yes" xml:space="preserve">
          <source>If you prefer &lt;code&gt;CPANPLUS&lt;/code&gt; , it's just as easy:</source>
          <target state="translated">Si prefiere &lt;code&gt;CPANPLUS&lt;/code&gt; , es igual de f&amp;aacute;cil:</target>
        </trans-unit>
        <trans-unit id="7a50be93857181d27ad3f82440855d08d5614eb6" translate="yes" xml:space="preserve">
          <source>If you prefer &lt;code&gt;CPANPLUS&lt;/code&gt;, it's just as easy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b2286238e8c1ea0536c07d5d33ab84bc86bbaa" translate="yes" xml:space="preserve">
          <source>If you prefer not to import these routines into your namespace, you can call them as:</source>
          <target state="translated">Si prefieres no importar estas rutinas a tu espacio de nombres,puedes llamarlas como:</target>
        </trans-unit>
        <trans-unit id="02b429d0fbb0524681e65be7d6f8ab7830a0723a" translate="yes" xml:space="preserve">
          <source>If you prefer something more legible, use the File::stat module (part of the standard distribution in version 5.004 and later):</source>
          <target state="translated">Si prefiere algo más legible,use el módulo File::stat (parte de la distribución estándar en la versión 5.004 y posteriores):</target>
        </trans-unit>
        <trans-unit id="f0813e4f27c28bf6e883076eecebd37913fd5b51" translate="yes" xml:space="preserve">
          <source>If you prefer to do it more in a programmerish style in one single process, something like this may better suit you:</source>
          <target state="translated">Si prefieres hacerlo más en un estilo programado en un solo proceso,algo como esto puede ser más adecuado para ti:</target>
        </trans-unit>
        <trans-unit id="ec90d5c6994006bb5fd89f190c78b5cdc340ee30" translate="yes" xml:space="preserve">
          <source>If you prefer to run your program first and look at its problem afterwards, do this:</source>
          <target state="translated">Si prefiere ejecutar su programa primero y ver su problema después,haga esto:</target>
        </trans-unit>
        <trans-unit id="aacba9db61987e99507860e0fb4bb65d12a9bd0f" translate="yes" xml:space="preserve">
          <source>If you prefer to use colour as a means of finding tricky whitespace characters then you can set the &lt;code&gt;TESTTESTCOLOUR&lt;/code&gt; environment variable to a comma separated pair of colours, the first for the foreground, the second for the background. For example &quot;white,red&quot; will print white text on a red background. This requires the Term::ANSIColor module. You can specify any colour that would be acceptable to the Term::ANSIColor::color function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3870b14accf24c65cf812dc3594ebf250f4f78e6" translate="yes" xml:space="preserve">
          <source>If you properly encode your strings for output, none of this is of your concern, and you can just &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; dumped data as always.</source>
          <target state="translated">Si codifica correctamente sus cadenas para la salida, nada de esto es de su incumbencia, y puede &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uar los datos descargados como siempre.</target>
        </trans-unit>
        <trans-unit id="e766f156c26878a70aac60fe8090c0a4f6df2f3f" translate="yes" xml:space="preserve">
          <source>If you properly encode your strings for output, none of this is of your concern, and you can just &lt;code&gt;eval&lt;/code&gt; dumped data as always.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065fd2bf37d0cb46e6971e495f8f9b0d94012ccb" translate="yes" xml:space="preserve">
          <source>If you provide a $name, that will be printed along with the &quot;ok/not ok&quot; to make it easier to find your test when if fails (just search for the name). It also makes it easier for the next guy to understand what your test is for. It's highly recommended you use test names.</source>
          <target state="translated">Si proporciona un nombre de $,se imprimirá junto con el &quot;ok/no ok&quot; para facilitar la búsqueda de su prueba cuando falle (sólo busque el nombre).También hace más fácil para el siguiente que entienda para qué sirve su prueba.Se recomienda encarecidamente utilizar los nombres de las pruebas.</target>
        </trans-unit>
        <trans-unit id="b7880cf2049cee53a05bb2b9ece1c4d6f2c66f65" translate="yes" xml:space="preserve">
          <source>If you put a &lt;code&gt;\&lt;/code&gt; in front of a variable, you get a reference to that variable.</source>
          <target state="translated">Si pones &lt;code&gt;\&lt;/code&gt; delante de una variable, obtienes una referencia a esa variable.</target>
        </trans-unit>
        <trans-unit id="34b57973357474bb06b6216c6a1396c52f47b8be" translate="yes" xml:space="preserve">
          <source>If you put extensions in unusual places, you can set PERL5LIB to a list of paths separated by semicolons where you want perl to look for libraries. Look for descriptions of other environment variables you can set in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">Si coloca extensiones en lugares inusuales, puede configurar PERL5LIB en una lista de rutas separadas por punto y coma donde desea que perl busque bibliotecas. Busque descripciones de otras variables de entorno que puede establecer en &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4498166e1dac5738a547d2b9e86da7f11d00c4e8" translate="yes" xml:space="preserve">
          <source>If you put two contiguous tilde characters &quot;~~&quot; anywhere into a line, the line will be repeated until all the fields on the line are exhausted, i.e. undefined. For special (caret) text fields this will occur sooner or later, but if you use a text field of the at variety, the expression you supply had better not give the same value every time forever! (&lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift(@f)&lt;/a&gt;&lt;/code&gt; is a simple example that would work.) Don't use a regular (at) numeric field in such lines, because it will never go blank.</source>
          <target state="translated">Si coloca dos caracteres de tilde contiguos &quot;~~&quot; en cualquier lugar de una l&amp;iacute;nea, la l&amp;iacute;nea se repetir&amp;aacute; hasta que todos los campos de la l&amp;iacute;nea est&amp;eacute;n agotados, es decir, sin definir. En el caso de los campos de texto especiales (intercalaci&amp;oacute;n), esto ocurrir&amp;aacute; tarde o temprano, pero si utiliza un campo de texto de la variedad at, es mejor que la expresi&amp;oacute;n que proporcione no d&amp;eacute; el mismo valor siempre para siempre. ( &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift(@f)&lt;/a&gt;&lt;/code&gt; es un ejemplo simple que funcionar&amp;iacute;a.) No use un campo num&amp;eacute;rico regular (arroba) en tales l&amp;iacute;neas, porque nunca quedar&amp;aacute; en blanco.</target>
        </trans-unit>
        <trans-unit id="5c6b6a167ca19e1425e3b4fcf8a618d7dce2d0b2" translate="yes" xml:space="preserve">
          <source>If you put two contiguous tilde characters &quot;~~&quot; anywhere into a line, the line will be repeated until all the fields on the line are exhausted, i.e. undefined. For special (caret) text fields this will occur sooner or later, but if you use a text field of the at variety, the expression you supply had better not give the same value every time forever! (&lt;code&gt;shift(@f)&lt;/code&gt; is a simple example that would work.) Don't use a regular (at) numeric field in such lines, because it will never go blank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131e6f1801bde966ebc62c17a25904f6f6c22132" translate="yes" xml:space="preserve">
          <source>If you re-run &lt;code&gt;git status&lt;/code&gt;, you should see something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6608312c76270dd048459022213c207db61db43" translate="yes" xml:space="preserve">
          <source>If you really do mean it, explicitly numify your reference, like so: &lt;code&gt;$array[0+$ref]&lt;/code&gt; . This warning is not given for overloaded objects, however, because you can overload the numification and stringification operators and then you presumably know what you are doing.</source>
          <target state="translated">Si realmente lo dices en serio, numifica expl&amp;iacute;citamente tu referencia, as&amp;iacute;: &lt;code&gt;$array[0+$ref]&lt;/code&gt; . Sin embargo, esta advertencia no se da para objetos sobrecargados, porque puede sobrecargar los operadores de numificaci&amp;oacute;n y cadena de caracteres y entonces presumiblemente sabe lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="3f20955fb9ac108dca46685f37b1cba8f9e1d54b" translate="yes" xml:space="preserve">
          <source>If you really do mean it, explicitly numify your reference, like so: &lt;code&gt;$array[0+$ref]&lt;/code&gt;. This warning is not given for overloaded objects, however, because you can overload the numification and stringification operators and then you presumably know what you are doing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b04e2e2f5675cd2c5905d17662a57b68104214b" translate="yes" xml:space="preserve">
          <source>If you really insist on using version.pm with an ordinary decimal version, use &lt;code&gt;parse()&lt;/code&gt; instead of declare. See the &lt;a href=&quot;#PARSING-AND-COMPARING-VERSIONS&quot;&gt;&quot;PARSING AND COMPARING VERSIONS&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1013051a31faa052729be2f388df420c87199413" translate="yes" xml:space="preserve">
          <source>If you really need to see whether the change has been accepted simply examine the return value of &lt;code&gt;safe_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ee3c0e5f77f2901d0e16f7c2a62b5dc496ad9" translate="yes" xml:space="preserve">
          <source>If you really need to see whether the change has been accepted simply examine the return value of C</source>
          <target state="translated">Si realmente necesita ver si el cambio ha sido aceptado,simplemente examine el valor de retorno de C</target>
        </trans-unit>
        <trans-unit id="dd150284dfc14b1b33a794d882418a56b32b28b6" translate="yes" xml:space="preserve">
          <source>If you really want a subroutine with a &lt;code&gt;()&lt;/code&gt; prototype that returns a lexical variable you can easily force it to not be inlined by adding an explicit &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Si realmente desea una subrutina con un prototipo &lt;code&gt;()&lt;/code&gt; que devuelva una variable l&amp;eacute;xica, puede forzarla f&amp;aacute;cilmente para que no est&amp;eacute; en l&amp;iacute;nea agregando un &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;cito :</target>
        </trans-unit>
        <trans-unit id="35a28f2c0d08eecba0c0e0394cdcfb91fe1c86b5" translate="yes" xml:space="preserve">
          <source>If you really want a subroutine with a &lt;code&gt;()&lt;/code&gt; prototype that returns a lexical variable you can easily force it to not be inlined by adding an explicit &lt;code&gt;return&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0166a5725d2770573e3a305750b9dd3edf5c05f" translate="yes" xml:space="preserve">
          <source>If you really want comments, build your list the old-fashioned way, with quotes and commas:</source>
          <target state="translated">Si realmente quieres comentarios,construye tu lista a la antigua,con citas y comas:</target>
        </trans-unit>
        <trans-unit id="f8aa3dfe02cc827e79905e1ddc0f6d36b724e3c5" translate="yes" xml:space="preserve">
          <source>If you really want just plain byte strings, use my_snprintf() and my_vsnprintf() instead, which will try to use snprintf() and vsnprintf() if those safer APIs are available. If you want something fancier than a plain byte string, use &lt;a href=&quot;perlapi#form&quot;&gt;&lt;code&gt;Perl_form&lt;/code&gt;()&lt;/a&gt; or SVs and &lt;a href=&quot;perlapi#sv_catpvf&quot;&gt;&lt;code&gt;Perl_sv_catpvf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb99b666d9e169ba81737784680da343f375dd69" translate="yes" xml:space="preserve">
          <source>If you really want just plain byte strings, use my_snprintf() and my_vsnprintf() instead, which will try to use snprintf() and vsnprintf() if those safer APIs are available. If you want something fancier than a plain byte string, use &lt;a href=&quot;perlapi#form&quot;&gt;Perl_form ()&lt;/a&gt; or SVs and &lt;a href=&quot;perlapi#sv_catpvf&quot;&gt;Perl_sv_catpvf() &lt;/a&gt;.</source>
          <target state="translated">Si realmente desea cadenas de bytes simples, use my_snprintf () y my_vsnprintf () en su lugar, que intentar&amp;aacute;n usar snprintf () y vsnprintf () si esas API m&amp;aacute;s seguras est&amp;aacute;n disponibles. Si desea algo m&amp;aacute;s elegante que una cadena de bytes simple, use &lt;a href=&quot;perlapi#form&quot;&gt;Perl_form ()&lt;/a&gt; o &lt;a href=&quot;perlapi#sv_catpvf&quot;&gt;SVs&lt;/a&gt; y Perl_sv_catpvf () .</target>
        </trans-unit>
        <trans-unit id="1c2d9e52e0617d90849665511b4fb2b333643750" translate="yes" xml:space="preserve">
          <source>If you really want to be international, you should consider Unicode. See &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for more information.</source>
          <target state="translated">Si realmente quiere ser internacional, deber&amp;iacute;a considerar Unicode. Consulte &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; y &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7a1586770541996a5a05c7da504fe6b4a6bdef4c" translate="yes" xml:space="preserve">
          <source>If you really want to do this, you can use &lt;code&gt;ExtUtils::Manifest::manifind()&lt;/code&gt; to read the MANIFEST and File::Find to delete the files. But you have to be careful. Here's a script to do that. Use at your own risk. Have fun blowing holes in your foot.</source>
          <target state="translated">Si realmente desea hacer esto, puede usar &lt;code&gt;ExtUtils::Manifest::manifind()&lt;/code&gt; para leer el MANIFEST y File :: Find para eliminar los archivos. Pero tienes que tener cuidado. Aqu&amp;iacute; hay un gui&amp;oacute;n para hacer eso. &amp;Uacute;selo bajo su propio riesgo. Divi&amp;eacute;rtete haci&amp;eacute;ndote agujeros en el pie.</target>
        </trans-unit>
        <trans-unit id="a9347a0885d5cc8b4c2356aaadf69fb6797e3c1b" translate="yes" xml:space="preserve">
          <source>If you really want to, you can use the standard open2() from the &lt;a href=&quot;IPC::Open2&quot;&gt;IPC::Open2&lt;/a&gt; module to catch both ends. There's also an open3() in &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; for tridirectional I/O so you can also catch your child's STDERR, but doing so would then require an awkward select() loop and wouldn't allow you to use normal Perl input operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0128791efed65e3bbb8d082044be49dfce046e" translate="yes" xml:space="preserve">
          <source>If you really want to, you can use the standard open2() from the &lt;code&gt;IPC::Open2&lt;/code&gt; module to catch both ends. There's also an open3() in &lt;code&gt;IPC::Open3&lt;/code&gt; for tridirectional I/O so you can also catch your child's STDERR, but doing so would then require an awkward select() loop and wouldn't allow you to use normal Perl input operations.</source>
          <target state="translated">Si realmente lo desea, puede usar el est&amp;aacute;ndar open2 () del m&amp;oacute;dulo &lt;code&gt;IPC::Open2&lt;/code&gt; para atrapar ambos extremos. Tambi&amp;eacute;n hay un open3 () en &lt;code&gt;IPC::Open3&lt;/code&gt; para E / S tridireccional, por lo que tambi&amp;eacute;n puede capturar el STDERR de su hijo, pero hacerlo requerir&amp;iacute;a un bucle select () inc&amp;oacute;modo y no le permitir&amp;iacute;a usar las operaciones normales de entrada de Perl.</target>
        </trans-unit>
        <trans-unit id="3c3fc1f61dc62bd06eef70c14d9957a3cba43c99" translate="yes" xml:space="preserve">
          <source>If you receive this error with a subroutine that has a real name, then you may have found a bug in autodie. See &lt;a href=&quot;autodie#BUGS&quot;&gt;&quot;BUGS&quot; in autodie&lt;/a&gt; for how to report this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53be29d9aa606768bcbe9e3309afe9ba5b57da03" translate="yes" xml:space="preserve">
          <source>If you recognized the quote about the Road above, you're in luck.</source>
          <target state="translated">Si reconoces la cita sobre el Camino de arriba,estás de suerte.</target>
        </trans-unit>
        <trans-unit id="39a2ad311b79ed3072c37af199bf41f9f9aebf15" translate="yes" xml:space="preserve">
          <source>If you redefine a subroutine that was eligible for inlining, you'll get a warning by default. You can use this warning to tell whether or not a particular subroutine is considered inlinable, since it's different than the warning for overriding non-inlined subroutines:</source>
          <target state="translated">Si redefine una subrutina que era elegible para el inlining,recibirá una advertencia por defecto.Puede utilizar esta advertencia para saber si una subrutina determinada se considera inlinable o no,ya que es diferente de la advertencia para anular subrutinas no inlinadas:</target>
        </trans-unit>
        <trans-unit id="ef0afdd765138635cef800ba6a31de68edaeb90c" translate="yes" xml:space="preserve">
          <source>If you require more flexibility than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432e76406abd8db96136b5a2df1a568bbdde9d3f" translate="yes" xml:space="preserve">
          <source>If you resize the array with deferred writing enabled, the file will be resized immediately, but deferred records will not be written. This has a surprising consequence: &lt;code&gt;@a = (...)&lt;/code&gt; erases the file immediately, but the writing of the actual data is deferred. This might be a bug. If it is a bug, it will be fixed in a future version.</source>
          <target state="translated">Si cambia el tama&amp;ntilde;o de la matriz con la escritura diferida habilitada, el tama&amp;ntilde;o del archivo cambiar&amp;aacute; inmediatamente, pero los registros diferidos no se escribir&amp;aacute;n. Esto tiene una consecuencia sorprendente: &lt;code&gt;@a = (...)&lt;/code&gt; borra el archivo inmediatamente, pero la escritura de los datos reales se aplaza. Esto podr&amp;iacute;a ser un error. Si es un error, se solucionar&amp;aacute; en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="21c1c9d8d7fcdca9d7bb7cd7ffec5848c2f729ce" translate="yes" xml:space="preserve">
          <source>If you run Perl with the &lt;a href=&quot;warnings&quot;&gt;&lt;code&gt;use warnings&lt;/code&gt;&lt;/a&gt; pragma, it can warn you about this. For example, the third line above produces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95da308b81d0840cacd6821e3c3f91e04b82e8a" translate="yes" xml:space="preserve">
          <source>If you run Perl with the &lt;b&gt;-w&lt;/b&gt; switch it can warn you about this. For example, the third line above produces:</source>
          <target state="translated">Si ejecuta Perl con el &lt;b&gt;modificador -w&lt;/b&gt; , puede advertirle sobre esto. Por ejemplo, la tercera l&amp;iacute;nea anterior produce:</target>
        </trans-unit>
        <trans-unit id="1983e4f73a942cb1a7c7741631cd3c3e344c8e03" translate="yes" xml:space="preserve">
          <source>If you run the script with the &lt;code&gt;-w&lt;/code&gt; flag the error message becomes:</source>
          <target state="translated">Si ejecuta el script con el indicador &lt;code&gt;-w&lt;/code&gt; , el mensaje de error se convierte en:</target>
        </trans-unit>
        <trans-unit id="a9ad6a9bb0a2be45f4030cad900647a4bc2c1db1" translate="yes" xml:space="preserve">
          <source>If you run this code twice, the contents of the</source>
          <target state="translated">Si ejecutas este código dos veces,el contenido del</target>
        </trans-unit>
        <trans-unit id="80dfce6f2a878c8f488ddf11e051d8fa78b7f75e" translate="yes" xml:space="preserve">
          <source>If you run your program with the &lt;code&gt;-w&lt;/code&gt; switch, or if you use the &lt;code&gt;warnings&lt;/code&gt; pragma, File::Find will report warnings for several weird situations. You can disable these warnings by putting the statement</source>
          <target state="translated">Si ejecuta su programa con la &lt;code&gt;-w&lt;/code&gt; , o si usa el pragma de &lt;code&gt;warnings&lt;/code&gt; , File :: Find reportar&amp;aacute; advertencias para varias situaciones extra&amp;ntilde;as. Puede desactivar estas advertencias poniendo la declaraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="714149520d778ab4a3aa775aef45bdd606216fd6" translate="yes" xml:space="preserve">
          <source>If you say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e83e7869cb30f17fc9ab2b3dafef8f917abf86" translate="yes" xml:space="preserve">
          <source>If you say yes to the following question, CPAN will try to store enough information about the build process so that it can pick up in future sessions at the same state of affairs as it left a previous session.</source>
          <target state="translated">Si dice que sí a la siguiente pregunta,el CPAN tratará de almacenar suficiente información sobre el proceso de construcción para que pueda recoger en futuras sesiones el mismo estado de cosas que dejó en una sesión anterior.</target>
        </trans-unit>
        <trans-unit id="3a116108872049154f6c27d6353e551d6d6917b4" translate="yes" xml:space="preserve">
          <source>If you see &quot;bad interpreter - no such file or directory&quot;, the first line in your perl script (the &quot;shebang&quot; line) does not contain the right path to perl (or any other program capable of running scripts). Sometimes this happens when you move the script from one machine to another and each machine has a different path to perl--/usr/bin/perl versus /usr/local/bin/perl for instance. It may also indicate that the source machine has CRLF line terminators and the destination machine has LF only: the shell tries to find /usr/bin/perl&amp;lt;CR&amp;gt;, but can't.</source>
          <target state="translated">Si ve &quot;mal int&amp;eacute;rprete - no existe ese archivo o directorio&quot;, la primera l&amp;iacute;nea en su script de perl (la l&amp;iacute;nea &quot;shebang&quot;) no contiene la ruta correcta a perl (o cualquier otro programa capaz de ejecutar scripts). A veces esto sucede cuando mueve el script de una m&amp;aacute;quina a otra y cada m&amp;aacute;quina tiene una ruta diferente a perl - / usr / bin / perl versus / usr / local / bin / perl, por ejemplo. Tambi&amp;eacute;n puede indicar que la m&amp;aacute;quina de origen tiene terminadores de l&amp;iacute;nea CRLF y la m&amp;aacute;quina de destino solo tiene LF: el shell intenta encontrar / usr / bin / perl &amp;lt;CR&amp;gt;, pero no puede.</target>
        </trans-unit>
        <trans-unit id="2f85a9726440183decd897c1fff5988cce63ccf9" translate="yes" xml:space="preserve">
          <source>If you see &quot;bad interpreter: Permission denied&quot;, you need to make your script executable.</source>
          <target state="translated">Si ves &quot;mal intérprete&quot;:Permiso denegado&quot;,tienes que hacer tu guión ejecutable.</target>
        </trans-unit>
        <trans-unit id="8de6b12e8e3d869536fad39850a1db08fd9bac7f" translate="yes" xml:space="preserve">
          <source>If you see in a debugger a memory area mysteriously full of 0xABABABAB or 0xEFEFEFEF, you may be seeing the effect of the Poison() macros, see &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt;.</source>
          <target state="translated">Si ve en un depurador un &amp;aacute;rea de memoria misteriosamente llena de 0xABABABAB o 0xEFEFEFEF, es posible que est&amp;eacute; viendo el efecto de las macros Poison (), consulte &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d3df616229a0ebfcb7922d24bec233001d332f4" translate="yes" xml:space="preserve">
          <source>If you see right after &quot;make&quot; this</source>
          <target state="translated">Si ves justo después de &quot;hacer&quot; esto</target>
        </trans-unit>
        <trans-unit id="d8e7a131ddc6c256b7162ac7f1766e22fd038d65" translate="yes" xml:space="preserve">
          <source>If you see that you're leaking memory at runtime, but neither valgrind nor &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; will find anything, you're probably leaking SVs that are still reachable and will be properly cleaned up during destruction of the interpreter. In such cases, using the &lt;code&gt;-Dm&lt;/code&gt; switch can point you to the source of the leak. If the executable was built with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; , &lt;code&gt;-Dm&lt;/code&gt; will output SV allocations in addition to memory allocations. Each SV allocation has a distinct serial number that will be written on creation and destruction of the SV. So if you're executing the leaking code in a loop, you need to look for SVs that are created, but never destroyed between each cycle. If such an SV is found, set a conditional breakpoint within &lt;code&gt;new_SV()&lt;/code&gt; and make it break only when &lt;code&gt;PL_sv_serial&lt;/code&gt; is equal to the serial number of the leaking SV. Then you will catch the interpreter in exactly the state where the leaking SV is allocated, which is sufficient in many cases to find the source of the leak.</source>
          <target state="translated">Si ve que est&amp;aacute; perdiendo memoria en tiempo de ejecuci&amp;oacute;n, pero ni valgrind ni &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; encontrar&amp;aacute;n nada, probablemente est&amp;eacute; perdiendo SV que a&amp;uacute;n est&amp;aacute;n accesibles y se limpiar&amp;aacute;n adecuadamente durante la destrucci&amp;oacute;n del int&amp;eacute;rprete. En tales casos, el uso del interruptor &lt;code&gt;-Dm&lt;/code&gt; puede indicarle el origen de la fuga. Si el ejecutable se &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; con -DDEBUG_LEAKING_SCALARS , &lt;code&gt;-Dm&lt;/code&gt; generar&amp;aacute; asignaciones de SV adem&amp;aacute;s de asignaciones de memoria. Cada asignaci&amp;oacute;n de SV tiene un n&amp;uacute;mero de serie distinto que se escribir&amp;aacute; al crear y destruir el SV. Entonces, si est&amp;aacute; ejecutando el c&amp;oacute;digo con fugas en un bucle, debe buscar los SV que se crean, pero nunca se destruyen entre cada ciclo. Si se encuentra tal SV, establezca un punto de interrupci&amp;oacute;n condicional dentro de &lt;code&gt;new_SV()&lt;/code&gt; y &lt;code&gt;PL_sv_serial&lt;/code&gt; romper solo cuando PL_sv_serial sea ​​igual al n&amp;uacute;mero de serie del SV con fugas. Luego, detectar&amp;aacute; al int&amp;eacute;rprete exactamente en el estado en el que est&amp;aacute; asignado el SV con fugas, que es suficiente en muchos casos para encontrar la fuente de la fuga.</target>
        </trans-unit>
        <trans-unit id="00d516d64e31e37eefa736f20d08e45a8565422c" translate="yes" xml:space="preserve">
          <source>If you see that you're leaking memory at runtime, but neither valgrind nor &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; will find anything, you're probably leaking SVs that are still reachable and will be properly cleaned up during destruction of the interpreter. In such cases, using the &lt;code&gt;-Dm&lt;/code&gt; switch can point you to the source of the leak. If the executable was built with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt;, &lt;code&gt;-Dm&lt;/code&gt; will output SV allocations in addition to memory allocations. Each SV allocation has a distinct serial number that will be written on creation and destruction of the SV. So if you're executing the leaking code in a loop, you need to look for SVs that are created, but never destroyed between each cycle. If such an SV is found, set a conditional breakpoint within &lt;code&gt;new_SV()&lt;/code&gt; and make it break only when &lt;code&gt;PL_sv_serial&lt;/code&gt; is equal to the serial number of the leaking SV. Then you will catch the interpreter in exactly the state where the leaking SV is allocated, which is sufficient in many cases to find the source of the leak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbf4110deb94dbc624ccee947cca19c596a9010" translate="yes" xml:space="preserve">
          <source>If you see this</source>
          <target state="translated">Si ves esto</target>
        </trans-unit>
        <trans-unit id="4203dc6863ea2ff3c77a2428ddc46eaf1f7849d3" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;$DB::single&lt;/code&gt; to 2, it's equivalent to having just typed the &lt;code&gt;n&lt;/code&gt; command, whereas a value of 1 means the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; command. The &lt;code&gt;$DB::trace&lt;/code&gt; variable should be set to 1 to simulate having typed the &lt;code&gt;t&lt;/code&gt; command.</source>
          <target state="translated">Si establece &lt;code&gt;$DB::single&lt;/code&gt; en 2, es equivalente a haber escrito el comando &lt;code&gt;n&lt;/code&gt; , mientras que un valor de 1 significa el comando &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; . La variable &lt;code&gt;$DB::trace&lt;/code&gt; debe establecerse en 1 para simular haber escrito el comando &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b33b418b3104ec5416e5681959ccdc2c9bea5af" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;$DB::single&lt;/code&gt; to 2, it's equivalent to having just typed the &lt;code&gt;n&lt;/code&gt; command, whereas a value of 1 means the &lt;code&gt;s&lt;/code&gt; command. The &lt;code&gt;$DB::trace&lt;/code&gt; variable should be set to 1 to simulate having typed the &lt;code&gt;t&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d30ba8967fd6c8924240ee40d5a140a986b280" translate="yes" xml:space="preserve">
          <source>If you set a value for this attribute, the value is expected to be an object (probably of a class that you define) that has a &lt;code&gt;reach&lt;/code&gt; method and a &lt;code&gt;done&lt;/code&gt; method. This is meant for reporting progress during the search, if you don't want to use a simple callback.</source>
          <target state="translated">Si establece un valor para este atributo, se espera que el valor sea un objeto (probablemente de una clase que defina) que tenga un m&amp;eacute;todo de &lt;code&gt;reach&lt;/code&gt; y un m&amp;eacute;todo &lt;code&gt;done&lt;/code&gt; . Esto est&amp;aacute; destinado a informar el progreso durante la b&amp;uacute;squeda, si no desea utilizar una devoluci&amp;oacute;n de llamada simple.</target>
        </trans-unit>
        <trans-unit id="bcde195e379d8e8445763e6616418aa0a7c91d66" translate="yes" xml:space="preserve">
          <source>If you set the &lt;code&gt;parse_characters&lt;/code&gt; option to a true value the parser will expect characters rather than octets; will ignore any &lt;code&gt;=encoding&lt;/code&gt; ; and will make no attempt to decode the input.</source>
          <target state="translated">Si establece la opci&amp;oacute;n &lt;code&gt;parse_characters&lt;/code&gt; en un valor verdadero, el analizador esperar&amp;aacute; caracteres en lugar de octetos; ignorar&amp;aacute; cualquier &lt;code&gt;=encoding&lt;/code&gt; ; y no intentar&amp;aacute; decodificar la entrada.</target>
        </trans-unit>
        <trans-unit id="f6202a4ce3a92187f86730903457c240d414eaac" translate="yes" xml:space="preserve">
          <source>If you set the &lt;code&gt;parse_characters&lt;/code&gt; option to a true value the parser will expect characters rather than octets; will ignore any &lt;code&gt;=encoding&lt;/code&gt;; and will make no attempt to decode the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24318749936760c8c43beac827cb9d11fbd59672" translate="yes" xml:space="preserve">
          <source>If you set this attribute to a true value, it will send reports of parsing errors to STDERR. By default, this attribute's value is false, meaning that no output is sent to STDERR.</source>
          <target state="translated">Si se establece este atributo en un valor verdadero,enviará informes de errores de análisis a STDERR.Por defecto,el valor de este atributo es falso,lo que significa que no se envía ninguna salida al STDERR.</target>
        </trans-unit>
        <trans-unit id="230572eb4ee772d17d86eabe528a430137c47e2e" translate="yes" xml:space="preserve">
          <source>If you set this attribute to a true value, the parser will try to preserve whitespace in the output. This means that such formatting conventions as two spaces after periods will be preserved by the parser. This is primarily useful for output formats that treat whitespace as significant (such as text or *roff, but not HTML).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b8252659bce51d0b80d2e62f37a533a1cac341" translate="yes" xml:space="preserve">
          <source>If you set this attribute to a true value, you will stop the parser from generating a &quot;POD ERRORS&quot; section at the end of the document. By default, this attribute's value is false, meaning that an errata section will be generated, as necessary.</source>
          <target state="translated">Si establece este atributo en un valor verdadero,evitará que el analizador genere una sección de &quot;ERRORES DE POD&quot; al final del documento.Por defecto,el valor de este atributo es falso,lo que significa que se generará una sección de erratas,según sea necesario.</target>
        </trans-unit>
        <trans-unit id="551f3a0a87736ea2dc54ed40fd31f1fb500e9541" translate="yes" xml:space="preserve">
          <source>If you set this attribute to a true value, you will suppress the parser's complaints about irregularities in the Pod coding. By default, this attribute's value is false, meaning that irregularities will be reported.</source>
          <target state="translated">Si se establece este atributo en un valor verdadero,se suprimirán las quejas del analizador sobre las irregularidades en la codificación del Pod.Por defecto,el valor de este atributo es falso,lo que significa que las irregularidades serán reportadas.</target>
        </trans-unit>
        <trans-unit id="e0f5cb1c277b98516d80bdfac1209f73af95fdc5" translate="yes" xml:space="preserve">
          <source>If you set this flag, all keys passed in the following manner:</source>
          <target state="translated">Si se pone esta bandera,todas las llaves pasan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="90adec0aabd8555567c00e54faf42cc1c5fd95da" translate="yes" xml:space="preserve">
          <source>If you set this flag, unknown options will still be present in the return value, rather than filtered out. This is useful if your subroutine is only interested in a few arguments, and wants to pass the rest on blindly to perhaps another subroutine.</source>
          <target state="translated">Si se fija esta bandera,las opciones desconocidas seguirán presentes en el valor de retorno,en lugar de ser filtradas.Esto es útil si su subrutina sólo está interesada en unos pocos argumentos,y quiere pasar el resto a ciegas a quizás otra subrutina.</target>
        </trans-unit>
        <trans-unit id="71c1c224b5079dff6437c4c296c3882a0dbe0842" translate="yes" xml:space="preserve">
          <source>If you set this value to 0, these processes will wait forever. This is the default and recommended setting.</source>
          <target state="translated">Si pones este valor a 0,estos procesos esperarán para siempre.Este es el ajuste predeterminado y recomendado.</target>
        </trans-unit>
        <trans-unit id="57bb7a66b14f683a002bf6e9ed419bdbfaba4540" translate="yes" xml:space="preserve">
          <source>If you simply need to check quickly to see if a module is available, you can check for its documentation. If you can read the documentation the module is most likely installed. If you cannot read the documentation, the module might not have any (in rare cases):</source>
          <target state="translated">Si simplemente necesita comprobar rápidamente si un módulo está disponible,puede consultar su documentación.Si puede leer la documentación,lo más probable es que el módulo esté instalado.Si no puede leer la documentación,es posible que el módulo no tenga ninguna (en raras ocasiones):</target>
        </trans-unit>
        <trans-unit id="62a930272a7b67c86c0db7dd61a11f4230b11d14" translate="yes" xml:space="preserve">
          <source>If you simply want &lt;code&gt;TAP::Parser&lt;/code&gt; to handle a new source of TAP you probably don't need to subclass &lt;code&gt;TAP::Parser&lt;/code&gt; itself. Rather, you'll need to create a new &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; class, and just plug it into the parser using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8217a1604a7e6dedea6a0a5e3eee8fea23c61b15" translate="yes" xml:space="preserve">
          <source>If you simply want &lt;code&gt;TAP::Parser&lt;/code&gt; to handle a new source of TAP you probably don't need to subclass &lt;code&gt;TAP::Parser&lt;/code&gt; itself. Rather, you'll need to create a new &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; class, and just plug it into the parser using the</source>
          <target state="translated">Si simplemente desea que &lt;code&gt;TAP::Parser&lt;/code&gt; maneje una nueva fuente de TAP, probablemente no necesite subclasificar &lt;code&gt;TAP::Parser&lt;/code&gt; . M&amp;aacute;s bien, necesitar&amp;aacute; crear una nueva clase &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; , y simplemente conectarla al analizador usando el</target>
        </trans-unit>
        <trans-unit id="bccc23097030849c37e4990da975ad564b128d6e" translate="yes" xml:space="preserve">
          <source>If you simply want to check that a variable contains an object reference, we recommend that you use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; blessed($object)&lt;/code&gt; , since &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; returns true values for all references, not just objects.</source>
          <target state="translated">Si simplemente desea verificar que una variable contiene una referencia de objeto, le recomendamos que use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; blessed($object)&lt;/code&gt; &lt;a href=&quot;functions/defined&quot;&gt;definido&lt;/a&gt; ($ objeto) , ya que &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; devuelve valores verdaderos para todas las referencias, no solo para los objetos.</target>
        </trans-unit>
        <trans-unit id="0eff4b8cc8d1302b285b2ea0f2efb3650eee76be" translate="yes" xml:space="preserve">
          <source>If you simply want to check that a variable contains an object reference, we recommend that you use &lt;code&gt;defined blessed($object)&lt;/code&gt;, since &lt;code&gt;ref&lt;/code&gt; returns true values for all references, not just objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775bfc9c0c8443d71c6d6889e2281bdebabd0a98" translate="yes" xml:space="preserve">
          <source>If you simply want to do a little tweaking of how the tests behave, you can access the underlying &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538504cf71c29fca71496cb30f3e2c1293640623" translate="yes" xml:space="preserve">
          <source>If you simply want to do a little tweaking of how the tests behave, you can access the underlying &lt;a href=&quot;builder&quot;&gt;Test::Builder&lt;/a&gt; object like so:</source>
          <target state="translated">Si simplemente desea modificar un poco c&amp;oacute;mo se comportan las pruebas, puede acceder al objeto &lt;a href=&quot;builder&quot;&gt;Test :: Builder&lt;/a&gt; subyacente as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="529d627921bb06c8d7af89d86ac316fcc827cff3" translate="yes" xml:space="preserve">
          <source>If you simply want to intercept all results instead of letting them go to TAP, you should look at the &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; docs and read about pushing a new hub onto the hub stack. Replacing the hub temporarily is now the correct way to intercept results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d0959c4e3749a28ef9e062bf2ea64f531c9a4d" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;'&amp;lt;&amp;amp;=X'&lt;/code&gt; , where &lt;code&gt;X&lt;/code&gt; is a file descriptor number or a filehandle, then Perl will do an equivalent of C's &lt;code&gt;fdopen&lt;/code&gt; of that file descriptor (and not call &lt;code&gt;dup(2)&lt;/code&gt; ); this is more parsimonious of file descriptors. For example:</source>
          <target state="translated">Si especifica &lt;code&gt;'&amp;lt;&amp;amp;=X'&lt;/code&gt; , donde &lt;code&gt;X&lt;/code&gt; es un n&amp;uacute;mero de descriptor de archivo o un &lt;code&gt;fdopen&lt;/code&gt; de archivo , Perl har&amp;aacute; un equivalente de C's fdopen de ese descriptor de archivo (y no llamar&amp;aacute; a &lt;code&gt;dup(2)&lt;/code&gt; ); esto es m&amp;aacute;s parsimonioso con los descriptores de archivos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="374cb57ad3f006566ce6e2725d54d8c62c1dbbdd" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;'&amp;lt;&amp;amp;=X'&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is a file descriptor number or a filehandle, then Perl will do an equivalent of C's &lt;a href=&quot;http://man.he.net/man3/fdopen&quot;&gt;fdopen(3)&lt;/a&gt; of that file descriptor (and not call &lt;a href=&quot;http://man.he.net/man2/dup&quot;&gt;dup(2)&lt;/a&gt;); this is more parsimonious of file descriptors. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180f2fd51c0d498482504f1f96654a60c731b6ff" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;NUM_USES&lt;/code&gt; with an argument of</source>
          <target state="translated">Si especifica &lt;code&gt;NUM_USES&lt;/code&gt; con un argumento de</target>
        </trans-unit>
        <trans-unit id="8d4306b9666c2a3ba16744fba22e147888a1f901" translate="yes" xml:space="preserve">
          <source>If you specify COMPRESS, then SUFFIX should also be altered, as it is needed to tell make the target file of the compression. Setting DIST_CP to ln can be useful, if you need to preserve the timestamps on your files. DIST_CP can take the values 'cp', which copies the file, 'ln', which links the file, and 'best' which copies symbolic links and links the rest. Default is 'best'.</source>
          <target state="translated">Si especificas COMPRIMIR,entonces SUFIX también debe ser alterado,ya que es necesario para decir hacer el archivo de destino de la compresión.Establecer DIST_CP a ln puede ser útil,si necesitas preservar las marcas de tiempo de tus archivos.DIST_CP puede tomar los valores 'cp',que copia el archivo,'ln',que enlaza el archivo,y 'best' que copia los enlaces simbólicos y enlaza el resto.Por defecto es 'best'.</target>
        </trans-unit>
        <trans-unit id="fc451ad5db1446b8366614b6922be5421ce289a8" translate="yes" xml:space="preserve">
          <source>If you specify LIB or any INSTALL* variables they will not be affected by the PREFIX.</source>
          <target state="translated">Si especificas LIB o cualquier variable de INSTALL*no se verán afectados por el PREFIX.</target>
        </trans-unit>
        <trans-unit id="9241abdeaef157dc233bd737d1c5964fbf4c453e" translate="yes" xml:space="preserve">
          <source>If you specify both arguments, data will be discarded from the cache when either expiration condition holds.</source>
          <target state="translated">Si especifica ambos argumentos,los datos se descartarán de la caché cuando se cumpla cualquiera de las dos condiciones de caducidad.</target>
        </trans-unit>
        <trans-unit id="4155cee8fa3d0e362aaa00b0200498bfa23f6764" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;'class' =&amp;gt; $class&lt;/code&gt; argument, the new hub will be an instance of the specified class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63159230c4deaa2cf08d944e8f0464cc9f6ef86a" translate="yes" xml:space="preserve">
          <source>If you spell colour differently, that's no problem. The &lt;code&gt;TESTTESTERCOLOR&lt;/code&gt; variable also works (if both are set then the British spelling wins out).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec224c3d56f48a286860fa26eb84c5ac4d399f4c" translate="yes" xml:space="preserve">
          <source>If you start with bullets or numbers, stick with them, as formatters use the first &quot;=item&quot; type to decide how to format the list.</source>
          <target state="translated">Si empiezas con balas o números,sigue con ellos,ya que los formateadores utilizan el primer tipo de &quot;=elemento&quot; para decidir cómo formatear la lista.</target>
        </trans-unit>
        <trans-unit id="583108dc3c7ca5413e3c465d6f2c5b41f57d07b1" translate="yes" xml:space="preserve">
          <source>If you still need a different solution, try to develop another subroutine that fits your needs and submit the diffs to &lt;code&gt;makemaker@perl.org&lt;/code&gt;</source>
          <target state="translated">Si a&amp;uacute;n necesita una soluci&amp;oacute;n diferente, intente desarrollar otra subrutina que se adapte a sus necesidades y env&amp;iacute;e las diferencias a &lt;code&gt;makemaker@perl.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a47b80b17f146bdd2f697c181154024073445f0f" translate="yes" xml:space="preserve">
          <source>If you still need commercial support &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.activestate.com%2factiveperl&quot;&gt;ActiveState&lt;/a&gt; offers this.</source>
          <target state="translated">Si a&amp;uacute;n necesita soporte comercial, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.activestate.com%2factiveperl&quot;&gt;ActiveState&lt;/a&gt; ofrece esto.</target>
        </trans-unit>
        <trans-unit id="e6da1990bc50d152e699b894b1f49c6c5a3821a0" translate="yes" xml:space="preserve">
          <source>If you still need commercial support &lt;a href=&quot;http://www.activestate.com/activeperl&quot;&gt;ActiveState&lt;/a&gt; offers this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36c7ee3bb3bd53d4ea9fd7168cf498f48087d02" translate="yes" xml:space="preserve">
          <source>If you still think you need this outside of debugging, testing or dealing with filenames, you should probably read &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; and &lt;a href=&quot;perlunifaq#What-is-%22the-UTF8-flag%22%3F&quot;&gt;&quot;What is &quot;the UTF8 flag&quot;?&quot; in perlunifaq&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1b0c04cf56825c214a1e0c17a804ce5039d636" translate="yes" xml:space="preserve">
          <source>If you supply a code reference the subroutine will be called once for each line of output with the line as its only argument. Passed lines will have no trailing newline.</source>
          <target state="translated">Si se suministra una referencia de código,la subrutina se llamará una vez por cada línea de salida con la línea como único argumento.Las líneas pasadas no tendrán ninguna nueva línea de salida.</target>
        </trans-unit>
        <trans-unit id="9c870447a33109e08d6ac4807e8b39152cd8060a" translate="yes" xml:space="preserve">
          <source>If you supply a function name with &lt;code&gt;INSTALL&lt;/code&gt; , memoize will install the new, memoized version of the function under the name you give. For example,</source>
          <target state="translated">Si proporciona un nombre de funci&amp;oacute;n con &lt;code&gt;INSTALL&lt;/code&gt; , memoize instalar&amp;aacute; la nueva versi&amp;oacute;n memoizada de la funci&amp;oacute;n con el nombre que proporcione. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="d57aa0246bfd4cdc05d4e778a00fbcc8da325130" translate="yes" xml:space="preserve">
          <source>If you supply a function name with &lt;code&gt;INSTALL&lt;/code&gt;, memoize will install the new, memoized version of the function under the name you give. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6165205f1f599d384067c9f25ff1f7dd1d17430" translate="yes" xml:space="preserve">
          <source>If you supply data which is not valid (month 27, second 1,000) the results will be unpredictable (so don't do that).</source>
          <target state="translated">Si suministra datos que no son válidos (mes 27,segundo 1.000)los resultados serán impredecibles (así que no lo haga).</target>
        </trans-unit>
        <trans-unit id="f2f171e34560b51f24a2295b658a384f71202d5b" translate="yes" xml:space="preserve">
          <source>If you think geographically the</source>
          <target state="translated">Si piensas que geográficamente la</target>
        </trans-unit>
        <trans-unit id="50a6625675c788b39661b9a604d74414a739f593" translate="yes" xml:space="preserve">
          <source>If you think that you want to add a new command to Pod (like, say, a &quot;=biblio&quot; command), consider whether you could get the same effect with a for or begin/end sequence: &quot;=for biblio ...&quot; or &quot;=begin biblio&quot; ... &quot;=end biblio&quot;. Pod processors that don't understand &quot;=for biblio&quot;, etc, will simply ignore it, whereas they may complain loudly if they see &quot;=biblio&quot;.</source>
          <target state="translated">Si crees que quieres añadir un nuevo comando a Pod (como,por ejemplo,un comando &quot;=biblio&quot;),considera si podrías obtener el mismo efecto con una secuencia de inicio/fin:&quot;=para biblio...&quot; o &quot;=iniciar biblio&quot;...&quot;=final biblio&quot;.Los procesadores de pod que no entienden &quot;=para biblio&quot;,etc,simplemente lo ignorarán,mientras que pueden quejarse en voz alta si ven &quot;=biblio&quot;.</target>
        </trans-unit>
        <trans-unit id="0dc7def89e2edc18a212cddb050ecfe26b36c107" translate="yes" xml:space="preserve">
          <source>If you trust the archive, or have other reasons to allow the archive to write files outside your current working directory, set this variable to &lt;code&gt;true&lt;/code&gt; .</source>
          <target state="translated">Si conf&amp;iacute;a en el archivo o tiene otras razones para permitir que el archivo escriba archivos fuera de su directorio de trabajo actual, establezca esta variable en &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bec0c73790b3c3d05f6a3152a00361a5cd4bae9" translate="yes" xml:space="preserve">
          <source>If you trust the archive, or have other reasons to allow the archive to write files outside your current working directory, set this variable to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6aec72dc70a1ee4a43ad060e5bdfa6e98825b4f" translate="yes" xml:space="preserve">
          <source>If you try &lt;code&gt;Moose&lt;/code&gt; and find that one of these issues is preventing you from using &lt;code&gt;Moose&lt;/code&gt; , we encourage you to consider &lt;a href=&quot;http://search.cpan.org/perldoc/Moo&quot;&gt;Moo&lt;/a&gt; next. &lt;code&gt;Moo&lt;/code&gt; implements a subset of &lt;code&gt;Moose&lt;/code&gt; 's functionality in a simpler package. For most features that it does implement, the end-user API is</source>
          <target state="translated">Si prueba &lt;code&gt;Moose&lt;/code&gt; y descubre que uno de estos problemas le impide usar &lt;code&gt;Moose&lt;/code&gt; , le recomendamos que considere &lt;a href=&quot;http://search.cpan.org/perldoc/Moo&quot;&gt;Moo a&lt;/a&gt; continuaci&amp;oacute;n. &lt;code&gt;Moo&lt;/code&gt; implementa un subconjunto de la funcionalidad de &lt;code&gt;Moose&lt;/code&gt; en un paquete m&amp;aacute;s simple. Para la mayor&amp;iacute;a de las funciones que implementa, la API de usuario final es</target>
        </trans-unit>
        <trans-unit id="8196054f51c09e40b22436127d72432408c8b94d" translate="yes" xml:space="preserve">
          <source>If you try &lt;code&gt;Moose&lt;/code&gt; and find that one of these issues is preventing you from using &lt;code&gt;Moose&lt;/code&gt;, we encourage you to consider &lt;a href=&quot;moo&quot;&gt;Moo&lt;/a&gt; next. &lt;code&gt;Moo&lt;/code&gt; implements a subset of &lt;code&gt;Moose&lt;/code&gt;'s functionality in a simpler package. For most features that it does implement, the end-user API is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce64d2eb6b26fca2ba64557ff812899e21e2cf8b" translate="yes" xml:space="preserve">
          <source>If you try to add a file to @INC as follows:</source>
          <target state="translated">Si intentas añadir un archivo a @INC de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="e1047e2245ed732ddd158d44ef63171c1040f4d7" translate="yes" xml:space="preserve">
          <source>If you try to dereference the key, it won't do a hard dereference, and you won't accomplish what you're attempting. You might want to do something more like</source>
          <target state="translated">Si tratas de descerebrar la llave,no hará una descerebrada difícil,y no lograrás lo que estás intentando.Puede que quieras hacer algo más como</target>
        </trans-unit>
        <trans-unit id="b64e549b9d0f70c710cd7ee8a843df08eb7e123c" translate="yes" xml:space="preserve">
          <source>If you try to do something insecure, you will get a fatal error saying something like &quot;Insecure dependency&quot; or &quot;Insecure $ENV{PATH}&quot;.</source>
          <target state="translated">Si intentas hacer algo inseguro,obtendrás un error fatal al decir algo como &quot;Dependencia insegura&quot; o &quot;Insegura $ENV{PATH}&quot;.</target>
        </trans-unit>
        <trans-unit id="baaf467929bddd8fa5b7aa6c26404c219da0153b" translate="yes" xml:space="preserve">
          <source>If you try to do the same thing with what you think is a list, you get a quite different result. Although it looks like you have a list on the righthand side, Perl actually sees a bunch of scalars separated by a comma:</source>
          <target state="translated">Si intentas hacer lo mismo con lo que crees que es una lista,obtienes un resultado bastante diferente.Aunque parece que tienes una lista a la derecha,Perl ve un montón de escalares separados por una coma:</target>
        </trans-unit>
        <trans-unit id="e39b81693bb33881d5354ed40ab1aa5e5e421f38" translate="yes" xml:space="preserve">
          <source>If you try to import an unimplemented function in the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement it will fail at compile time.</source>
          <target state="translated">Si intenta importar una funci&amp;oacute;n no implementada en la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , fallar&amp;aacute; en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4b4406a29e69d0fe589df66b2d19e5926b365127" translate="yes" xml:space="preserve">
          <source>If you try to import an unimplemented function in the &lt;code&gt;use&lt;/code&gt; statement it will fail at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15d030c497334de4682713f89a5eeaabfcfb4a3" translate="yes" xml:space="preserve">
          <source>If you try to read from the child's stdout writer and their stderr writer, you'll have problems with blocking, which means you'll want to use select() or &lt;a href=&quot;IO::Select&quot;&gt;IO::Select&lt;/a&gt;, which means you'd best use sysread() instead of readline() for normal stuff.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce84b9139b9e943d624385f2da9d34f42bd6117a" translate="yes" xml:space="preserve">
          <source>If you try to read from the child's stdout writer and their stderr writer, you'll have problems with blocking, which means you'll want to use select() or the IO::Select, which means you'd best use sysread() instead of readline() for normal stuff.</source>
          <target state="translated">Si intentas leer del escritor de stdout del niño y su escritor de stderr,tendrás problemas de bloqueo,lo que significa que querrás usar select()o el IO::Select,lo que significa que es mejor usar sysread()en lugar de readline()para cosas normales.</target>
        </trans-unit>
        <trans-unit id="8629095d12898edeef813ea5adb0d8466406ccc7" translate="yes" xml:space="preserve">
          <source>If you try to use a reference like a string, you get strings like</source>
          <target state="translated">Si intentas usar una referencia como una cuerda,obtienes cuerdas como</target>
        </trans-unit>
        <trans-unit id="39dd9c9407d1478c40154f713c3d3db1f745db97" translate="yes" xml:space="preserve">
          <source>If you try to use an alphanumeric sequence in a prototype you will generate an optional warning - &quot;Illegal character in prototype...&quot;. Unfortunately earlier versions of Perl allowed the prototype to be used as long as its prefix was a valid prototype. The warning may be upgraded to a fatal error in a future version of Perl once the majority of offending code is fixed.</source>
          <target state="translated">Si intentas usar una secuencia alfanumérica en un prototipo generarás una advertencia opcional:&quot;Carácter ilegal en el prototipo...&quot;.Desafortunadamente las versiones anteriores de Perl permitían usar el prototipo siempre y cuando su prefijo fuera un prototipo válido.La advertencia puede ser actualizada a un error fatal en una futura versión de Perl una vez que la mayoría de los códigos ofensivos sean corregidos.</target>
        </trans-unit>
        <trans-unit id="fe9a752d3dfb5ae4ddbce9b50462b1f6d85d68b3" translate="yes" xml:space="preserve">
          <source>If you try to use code expressions where the code text is contained within an interpolated variable, rather than appearing literally in the pattern, Perl may surprise you:</source>
          <target state="translated">Si tratas de usar expresiones de código donde el texto del código está contenido dentro de una variable interpolada,en lugar de aparecer literalmente en el patrón,Perl puede sorprenderte:</target>
        </trans-unit>
        <trans-unit id="11e25dd065a3c2e65ba069546d65a87869f3ab69" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;#wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; in your handler for &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;$SIG{CHLD}&lt;/code&gt;&lt;/a&gt;, it may accidentally wait for the child created by &lt;a href=&quot;#qx%2FSTRING%2F&quot;&gt;&lt;code&gt;qx&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74ccad2ea9ca8d857dc7afb6d54fa03395dd0f9" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; in your handler for $SIG{CHLD}, it may accidentally wait for the child created by qx() or system(). See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">Si usa &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; en su controlador para $ SIG {CHLD}, puede esperar accidentalmente al hijo creado por qx () o system (). Consulte &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="5f489bb10b3438e3010da06cd3b95ce427029dc2" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; in your handler for $SIG{CHLD}, it may accidentally wait for the child created by qx() or system(). See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">Si usa &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; en su controlador para $ SIG {CHLD}, puede esperar accidentalmente al hijo creado por qx () o system (). Consulte &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="46bb44efb62948225ccf4e92dee64ae61f103a13" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;FilterName&lt;/code&gt; to modify the filename, it is your responsibility to keep the filename in Unix format.</source>
          <target state="translated">Si usa &lt;code&gt;FilterName&lt;/code&gt; para modificar el nombre del archivo, es su responsabilidad mantener el nombre del archivo en formato Unix.</target>
        </trans-unit>
        <trans-unit id="16f11d3777f6f8b6ecfda56c2150f1df3c1a440a" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;harness&lt;/code&gt; for testing, you have several command line options available to you. The arguments are as follows, and are in the order that they must appear if used together.</source>
          <target state="translated">Si usa &lt;code&gt;harness&lt;/code&gt; para realizar pruebas, tiene varias opciones de l&amp;iacute;nea de comandos disponibles. Los argumentos son los siguientes y est&amp;aacute;n en el orden en que deben aparecer si se usan juntos.</target>
        </trans-unit>
        <trans-unit id="5dace6a8fabe0f3fff4268587985038c8aa60a8e" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;man&lt;/code&gt; , either move the installed</source>
          <target state="translated">Si usa &lt;code&gt;man&lt;/code&gt; , mueva el instalado</target>
        </trans-unit>
        <trans-unit id="2526f763683e8e3d761dca9fc7d00f94a999cd3a" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;man&lt;/code&gt;, either move the installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77d31c25362c9be9687e6ee59543d3904970c3a" translate="yes" xml:space="preserve">
          <source>If you use Sun's C compiler, make sure the correct directory (usually /opt/SUNWspro/bin/) is in your PATH (before /usr/ucb/).</source>
          <target state="translated">Si usas el compilador de C de Sun,asegúrate de que el directorio correcto (normalmente /opt/SUNWspro/bin/)está en tu PATH (antes de /usr/ucb/).</target>
        </trans-unit>
        <trans-unit id="694a362a82c6e3cfa50f1318ad85b6fb37d17685" translate="yes" xml:space="preserve">
          <source>If you use a Unicode editor to edit your program, Unicode characters may occur directly within the literal strings in UTF-8 encoding, or UTF-16. (The former requires a &lt;code&gt;BOM&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; , the latter requires a &lt;code&gt;BOM&lt;/code&gt; .)</source>
          <target state="translated">Si utiliza un editor Unicode para editar su programa, los caracteres Unicode pueden aparecer directamente dentro de las cadenas literales en codificaci&amp;oacute;n UTF-8 o UTF-16. (El primero requiere una &lt;code&gt;BOM&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; , el segundo requiere una &lt;code&gt;BOM&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="12733393a4777e2904da336b9a9ac1c8e8988972" translate="yes" xml:space="preserve">
          <source>If you use a Unicode editor to edit your program, Unicode characters may occur directly within the literal strings in UTF-8 encoding, or UTF-16. (The former requires a &lt;code&gt;use utf8&lt;/code&gt;, the latter may require a &lt;code&gt;BOM&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cf615c227432610de49accfafc5d497f5d3f61" translate="yes" xml:space="preserve">
          <source>If you use a deprecated feature or module and believe that its removal from the Perl core would be a mistake, please contact the perl5-porters mailinglist and plead your case. We don't deprecate things without a good reason, but sometimes there's a counterargument we haven't considered. Historically, we did not distinguish between &quot;deprecated&quot; and &quot;discouraged&quot; features.</source>
          <target state="translated">Si utiliza una característica o módulo desaprobado y cree que su eliminación del núcleo de Perl sería un error,póngase en contacto con la lista de correo de perl5-porters y alegue su caso.No desaprobamos cosas sin una buena razón,pero a veces hay un contraargumento que no hemos considerado.Históricamente,no distinguimos entre características &quot;desaprobadas&quot; y &quot;desalentadas&quot;.</target>
        </trans-unit>
        <trans-unit id="5dd282c0cc211cebd60be34d73466e199fdff472" translate="yes" xml:space="preserve">
          <source>If you use a here-doc within a delimited construct, such as in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///eg&lt;/a&gt;&lt;/code&gt;, the quoted material must still come on the line following the &lt;code&gt;&amp;lt;&amp;lt;FOO&lt;/code&gt; marker, which means it may be inside the delimited construct:</source>
          <target state="translated">Si usa un here-doc dentro de una construcci&amp;oacute;n delimitada, como en &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///eg&lt;/a&gt;&lt;/code&gt; , el material citado a&amp;uacute;n debe aparecer en la l&amp;iacute;nea que sigue al marcador &lt;code&gt;&amp;lt;&amp;lt;FOO&lt;/code&gt; , lo que significa que puede estar dentro de la construcci&amp;oacute;n delimitada:</target>
        </trans-unit>
        <trans-unit id="ef85aed564f520195de79872cb8f400e6839cfe4" translate="yes" xml:space="preserve">
          <source>If you use a here-doc within a delimited construct, such as in &lt;code&gt;s///eg&lt;/code&gt;, the quoted material must still come on the line following the &lt;code&gt;&amp;lt;&amp;lt;FOO&lt;/code&gt; marker, which means it may be inside the delimited construct:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f880ff17098bf984e1784381aefee800c2614214" translate="yes" xml:space="preserve">
          <source>If you use a mathematic formula that resolves to a floating point number, you are dependent on Perl's conversion routines to yield the version you expect. You are pretty safe by dividing by a power of 10, for example, but other operations are not likely to be what you intend. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328cd5a18e409f3686cf9b70d3830474d172c463" translate="yes" xml:space="preserve">
          <source>If you use deferred writing (See &lt;a href=&quot;#Deferred-Writing&quot;&gt;&quot;Deferred Writing&quot;&lt;/a&gt;, below) then data you write into the array will not be written directly to the file; instead, it will be saved in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae0c0867250fd5a479e543aea928a9a77d11b83" translate="yes" xml:space="preserve">
          <source>If you use deferred writing (See &lt;a href=&quot;#Deferred-Writing&quot;&gt;Deferred Writing&lt;/a&gt;, below) then data you write into the array will not be written directly to the file; instead, it will be saved in the</source>
          <target state="translated">Si usa escritura diferida (consulte &lt;a href=&quot;#Deferred-Writing&quot;&gt;Escritura diferida&lt;/a&gt; , a continuaci&amp;oacute;n), los datos que escriba en la matriz no se escribir&amp;aacute;n directamente en el archivo; en su lugar, se guardar&amp;aacute; en el</target>
        </trans-unit>
        <trans-unit id="4f2793be84e03f881815cfd6cbd437f560ace728" translate="yes" xml:space="preserve">
          <source>If you use either the R_IAFTER or R_IBEFORE flags, the &lt;code&gt;$key&lt;/code&gt; parameter will have the record number of the inserted key/value pair set.</source>
          <target state="translated">Si usa los indicadores R_IAFTER o R_IBEFORE, el par&amp;aacute;metro &lt;code&gt;$key&lt;/code&gt; tendr&amp;aacute; el n&amp;uacute;mero de registro del par clave / valor insertado configurado.</target>
        </trans-unit>
        <trans-unit id="7804e89f419dfb4afe57d175e577f649678035a8" translate="yes" xml:space="preserve">
          <source>If you use gcc, make sure your installation is recent and complete. perl versions since 5.6.0 build fine with gcc &amp;gt; 2.8.1 on Solaris &amp;gt;= 2.6.</source>
          <target state="translated">Si usa gcc, aseg&amp;uacute;rese de que su instalaci&amp;oacute;n sea reciente y completa. Las versiones de perl desde 5.6.0 se compilan bien con gcc&amp;gt; 2.8.1 en Solaris&amp;gt; = 2.6.</target>
        </trans-unit>
        <trans-unit id="c133e612772c5c91ca38653bb618cdde5ecf7eea" translate="yes" xml:space="preserve">
          <source>If you use one of the undocumented functions below, you may wish to consider creating and submitting documentation for it. If your patch is accepted, this will indicate that the interface is stable (unless it is explicitly marked otherwise).</source>
          <target state="translated">Si utiliza una de las funciones no documentadas que se indican a continuación,tal vez desee considerar la posibilidad de crear y presentar documentación al respecto.Si su parche es aceptado,esto indicará que la interfaz es estable (a menos que esté explícitamente marcado de otra manera).</target>
        </trans-unit>
        <trans-unit id="97a1d75ada82bbf9f654420e7c70ad3899b98121" translate="yes" xml:space="preserve">
          <source>If you use preprocessor directives to choose one of two versions of a function, use</source>
          <target state="translated">Si utiliza directivas del preprocesador para elegir una de las dos versiones de una función,utilice</target>
        </trans-unit>
        <trans-unit id="32e7fdaa4b2e816b8b9a792f2d7c56bbe0d52ad7" translate="yes" xml:space="preserve">
          <source>If you use the 4DOS/NT or similar command shell, note that &quot;pl2bat&quot; uses the &quot;%*&quot; variable in the generated batch file to refer to all the command line arguments, so you may need to make sure that construct works in batch files. As of this writing, 4DOS/NT users will need a &quot;ParameterChar = *&quot; statement in their 4NT.INI file or will need to execute &quot;setdos /p*&quot; in the 4DOS/NT startup file to enable this to work.</source>
          <target state="translated">Si utiliza el shell de comandos 4DOS/NT o similar,tenga en cuenta que &quot;pl2bat&quot; utiliza la variable &quot;%*&quot; en el archivo por lotes generado para referirse a todos los argumentos de la línea de comandos,por lo que es posible que necesite asegurarse de que la construcción funciona en los archivos por lotes.En el momento de escribir este documento,los usuarios de 4DOS/NT necesitarán una declaración &quot;ParameterChar=*&quot; en su archivo 4NT.INI o deberán ejecutar &quot;setdos /p*&quot; en el archivo de inicio de 4DOS/NT para que esto funcione.</target>
        </trans-unit>
        <trans-unit id="91300f437c633a42a75ef31ebaae0d2065c281bd" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; PerlIO layer for input, invalid byte sequences are handled gracefully, but if you use &lt;code&gt;:utf8&lt;/code&gt; , the flag is set without validating the data, possibly resulting in this error message.</source>
          <target state="translated">Si usa la capa PerlIO &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; para la entrada, las secuencias de bytes no v&amp;aacute;lidas se manejan con elegancia, pero si usa &lt;code&gt;:utf8&lt;/code&gt; , la bandera se establece sin validar los datos, lo que posiblemente resulte en este mensaje de error.</target>
        </trans-unit>
        <trans-unit id="c99f058cbb6ca20108d91c09dfe4c9c7ca4b2109" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; PerlIO layer for input, invalid byte sequences are handled gracefully, but if you use &lt;code&gt;:utf8&lt;/code&gt;, the flag is set without validating the data, possibly resulting in this error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eecf6412d7114c8844a3dfb8554c44c0eb8598c" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;SA_SIGINFO&lt;/code&gt; flag, the signal handler will in addition to the first argument, the signal name, also receive a second argument, a hash reference, inside which are the following keys with the following semantics, as defined by POSIX/SUSv3:</source>
          <target state="translated">Si usa la bandera &lt;code&gt;SA_SIGINFO&lt;/code&gt; , el manejador de se&amp;ntilde;ales, adem&amp;aacute;s del primer argumento, el nombre de la se&amp;ntilde;al, tambi&amp;eacute;n recibir&amp;aacute; un segundo argumento, una referencia hash, dentro de la cual se encuentran las siguientes claves con la siguiente sem&amp;aacute;ntica, seg&amp;uacute;n lo definido por POSIX / SUSv3:</target>
        </trans-unit>
        <trans-unit id="dc06c253841f15b9de0c355618356ed5550da10d" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;\G&lt;/code&gt; anchor, you force the match after &lt;code&gt;22&lt;/code&gt; to start with the &lt;code&gt;a&lt;/code&gt; . The regular expression cannot match there since it does not find a digit, so the next match fails and the match operator returns the pairs it already found.</source>
          <target state="translated">Si usa el ancla &lt;code&gt;\G&lt;/code&gt; , fuerza la coincidencia despu&amp;eacute;s de &lt;code&gt;22&lt;/code&gt; para comenzar con &lt;code&gt;a&lt;/code&gt; . La expresi&amp;oacute;n regular no puede coincidir all&amp;iacute; porque no encuentra un d&amp;iacute;gito, por lo que la siguiente coincidencia falla y el operador de coincidencia devuelve los pares que ya encontr&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="b510ad2eb535862884ae7cf62a7e26f96276ab1c" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;\G&lt;/code&gt; anchor, you force the match after &lt;code&gt;22&lt;/code&gt; to start with the &lt;code&gt;a&lt;/code&gt;. The regular expression cannot match there since it does not find a digit, so the next match fails and the match operator returns the pairs it already found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb20a66ed661494874fa5e98a73f246a9cc34cc" translate="yes" xml:space="preserve">
          <source>If you use the English module, you can even read the variable names:</source>
          <target state="translated">Si usas el módulo de inglés,puedes incluso leer los nombres de las variables:</target>
        </trans-unit>
        <trans-unit id="5c03e0261fc0b7da7836c0a3093ff6c1dacfba33" translate="yes" xml:space="preserve">
          <source>If you use the VC IDE, you will have to run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbbac8010fcf4e1f8177dc8b18103356d7c1579" translate="yes" xml:space="preserve">
          <source>If you use the form &lt;code&gt;\N{&lt;i&gt;character name&lt;/i&gt;}&lt;/code&gt;, the &lt;a href=&quot;charnames&quot;&gt;charnames&lt;/a&gt; module gets automatically loaded. This may not be suitable for the test level you are doing.</source>
          <target state="translated">Si usa la forma &lt;code&gt;\N{&lt;i&gt;character name&lt;/i&gt;}&lt;/code&gt; , el m&amp;oacute;dulo de &lt;a href=&quot;charnames&quot;&gt;nombres de caracteres&lt;/a&gt; se carga autom&amp;aacute;ticamente. Es posible que esto no sea adecuado para el nivel de prueba que est&amp;aacute; realizando.</target>
        </trans-unit>
        <trans-unit id="b6639f5cfc711b71b35423e81c784a209aabfc93" translate="yes" xml:space="preserve">
          <source>If you use the hash syntax, you have no control over the order in which the ExtraSubFields are stored, plus you cannot have SubFields with duplicate ID.</source>
          <target state="translated">Si usas la sintaxis hash,no tienes control sobre el orden en el que se almacenan los ExtraSubFields,además no puedes tener SubFields con identificación duplicada.</target>
        </trans-unit>
        <trans-unit id="cf9048b3298377c86c20ad5d8b5d02655bc3f8b6" translate="yes" xml:space="preserve">
          <source>If you use the raw format, and the &lt;code&gt;Strict&lt;/code&gt; option is enabled, &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; will check that &lt;code&gt;$rawdata&lt;/code&gt; consists of zero or more conformant sub-fields. When &lt;code&gt;Strict&lt;/code&gt; is disabled, &lt;code&gt;$rawdata&lt;/code&gt; can consist of any arbitrary byte stream.</source>
          <target state="translated">Si usa el formato sin formato y la opci&amp;oacute;n &lt;code&gt;Strict&lt;/code&gt; est&amp;aacute; habilitada, &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; comprobar&amp;aacute; que &lt;code&gt;$rawdata&lt;/code&gt; consta de cero o m&amp;aacute;s subcampos conformes. Cuando &lt;code&gt;Strict&lt;/code&gt; est&amp;aacute; deshabilitado, &lt;code&gt;$rawdata&lt;/code&gt; puede consistir en cualquier flujo de bytes arbitrario.</target>
        </trans-unit>
        <trans-unit id="c067123fb137430de0f256b297d516b2001d264a" translate="yes" xml:space="preserve">
          <source>If you use utf8 or other non-ASCII characters with Test::More you might get a &quot;Wide character in print&quot; warning. Using &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt; STDOUT, &quot;:utf8&quot;&lt;/code&gt; will not fix it. &lt;a href=&quot;builder&quot;&gt;Test::Builder&lt;/a&gt; (which powers Test::More) duplicates STDOUT and STDERR. So any changes to them, including changing their output disciplines, will not be seem by Test::More.</source>
          <target state="translated">Si usa utf8 u otros caracteres no ASCII con Test :: More, es posible que obtenga una advertencia de &quot;Car&amp;aacute;cter ancho en la impresi&amp;oacute;n&quot;. Usando &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt; STDOUT, &quot;:utf8&quot;&lt;/code&gt; no lo solucionar&amp;aacute;. &lt;a href=&quot;builder&quot;&gt;Test :: Builder&lt;/a&gt; (que potencia Test :: More) duplica STDOUT y STDERR. Por lo tanto, Test :: More no mostrar&amp;aacute; ning&amp;uacute;n cambio en ellos, incluido el cambio de sus disciplinas de salida.</target>
        </trans-unit>
        <trans-unit id="d00aea3e7b59229d34e146319ce9c85454b14e11" translate="yes" xml:space="preserve">
          <source>If you use utf8 or other non-ASCII characters with Test::More you might get a &quot;Wide character in print&quot; warning. Using &lt;code&gt;binmode STDOUT, &quot;:utf8&quot;&lt;/code&gt; will not fix it. &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; (which powers Test::More) duplicates STDOUT and STDERR. So any changes to them, including changing their output disciplines, will not be seen by Test::More.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630840ae944c06429550447e9540c0ca707dbc1a" translate="yes" xml:space="preserve">
          <source>If you used WinZip, this was already done for you.</source>
          <target state="translated">Si usaste WinZip,esto ya estaba hecho para ti.</target>
        </trans-unit>
        <trans-unit id="8c53b3ef6362ad03c7dbea52d0c4786e608f8e77" translate="yes" xml:space="preserve">
          <source>If you used git to check out the Perl source, then using &lt;code&gt;git
format-patch&lt;/code&gt; will produce a patch in a style suitable for Perl. The &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format-patch&lt;/a&gt;&lt;/code&gt; command produces one patch file for each commit you made. If you prefer to send a single patch for all commits, you can use &lt;code&gt;git diff&lt;/code&gt; .</source>
          <target state="translated">Si us&amp;oacute; git para verificar la fuente de Perl, entonces usar &lt;code&gt;git format-patch&lt;/code&gt; producir&amp;aacute; un parche en un estilo adecuado para Perl. El comando &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format-patch&lt;/a&gt;&lt;/code&gt; produce un archivo de parche para cada confirmaci&amp;oacute;n realizada. Si prefiere enviar un solo parche para todas las confirmaciones, puede usar &lt;code&gt;git diff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="005c2baa346d58318121715604db7b7de9beda44" translate="yes" xml:space="preserve">
          <source>If you used git to check out the Perl source, then using &lt;code&gt;git format-patch&lt;/code&gt; will produce a patch in a style suitable for Perl. The &lt;code&gt;format-patch&lt;/code&gt; command produces one patch file for each commit you made. If you prefer to send a single patch for all commits, you can use &lt;code&gt;git diff&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc21e512fb418bd39c6e536f3bdd95478cb7d3c" translate="yes" xml:space="preserve">
          <source>If you want $x to have a certain sign, use one of the following methods:</source>
          <target state="translated">Si quiere que $x tenga un determinado signo,use uno de los siguientes métodos:</target>
        </trans-unit>
        <trans-unit id="1553678828e2328fa0aa14746ccfdd7229ce26f6" translate="yes" xml:space="preserve">
          <source>If you want *.ucm installed together with the modules, do as follows;</source>
          <target state="translated">Si quieres que *.ucm se instale junto con los módulos,haz lo siguiente;</target>
        </trans-unit>
        <trans-unit id="3a9e72b266b57bba86c6eccbfed06538dcba5011" translate="yes" xml:space="preserve">
          <source>If you want a &quot;real&quot; C &lt;a href=&quot;http://man.he.net/man2/open&quot;&gt;open(2)&lt;/a&gt;, then you should use the &lt;a href=&quot;#sysopen-FILEHANDLE%2CFILENAME%2CMODE&quot;&gt;&lt;code&gt;sysopen&lt;/code&gt;&lt;/a&gt; function, which involves no such magic (but uses different filemodes than Perl &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;, which corresponds to C &lt;a href=&quot;http://man.he.net/man3/fopen&quot;&gt;fopen(3)&lt;/a&gt;). This is another way to protect your filenames from interpretation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791324333537699862b9ce903fa1af5980ed496f" translate="yes" xml:space="preserve">
          <source>If you want a &quot;real&quot; C &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; (see</source>
          <target state="translated">Si desea &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; C &quot;real&quot; (consulte</target>
        </trans-unit>
        <trans-unit id="c13df57b95397c5f1d723459f0b855e899e41a8a" translate="yes" xml:space="preserve">
          <source>If you want a &quot;real&quot; C &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; (see</source>
          <target state="translated">Si desea &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; C &quot;real&quot; (consulte</target>
        </trans-unit>
        <trans-unit id="cb1d7bd468d379f255df6d0a8a45090fecae8882" translate="yes" xml:space="preserve">
          <source>If you want a Perl application to process and present your data according to a particular locale, the application code should include the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; pragma (see &lt;a href=&quot;#The-%22use-locale%22-pragma&quot;&gt;The use locale pragma&lt;/a&gt;) where appropriate, and &lt;b&gt;at least one&lt;/b&gt; of the following must be true:</source>
          <target state="translated">Si desea que una aplicaci&amp;oacute;n Perl procese y presente sus datos de acuerdo con una configuraci&amp;oacute;n regional en particular, el c&amp;oacute;digo de la aplicaci&amp;oacute;n debe incluir el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (consulte &lt;a href=&quot;#The-%22use-locale%22-pragma&quot;&gt;El pragma use locale&lt;/a&gt; ) donde sea apropiado, y &lt;b&gt;al menos uno&lt;/b&gt; de los siguientes debe ser verdadero:</target>
        </trans-unit>
        <trans-unit id="7f64cf3c950fcdad95bf25b3cb5fe1e64c6e318a" translate="yes" xml:space="preserve">
          <source>If you want a Perl application to process and present your data according to a particular locale, the application code should include the &lt;code&gt;use locale&lt;/code&gt; pragma (see &lt;a href=&quot;#The-%22use-locale%22-pragma&quot;&gt;&quot;The &quot;use locale&quot; pragma&quot;&lt;/a&gt;) where appropriate, and &lt;b&gt;at least one&lt;/b&gt; of the following must be true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8f1faa6c36903ecd5d1abeecfdbd92380ab3a3" translate="yes" xml:space="preserve">
          <source>If you want a better approximation of the square root, then use:</source>
          <target state="translated">Si quieres una mejor aproximación de la raíz cuadrada,entonces usa:</target>
        </trans-unit>
        <trans-unit id="409579e935815d3f9b1b191e4808eba939430e40" translate="yes" xml:space="preserve">
          <source>If you want a completely new Test::Builder object different from the singleton, use &lt;code&gt;create&lt;/code&gt; .</source>
          <target state="translated">Si desea un objeto Test :: Builder completamente nuevo diferente del singleton, use &lt;code&gt;create&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9078ce92d169ba5491de791cf112f90cf0081697" translate="yes" xml:space="preserve">
          <source>If you want a completely new Test::Builder object different from the singleton, use &lt;code&gt;create&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cafbc1f6bcd93d15d82018f51a268c90603bc8" translate="yes" xml:space="preserve">
          <source>If you want a list of all of the Perl module filenames, you can use &lt;a href=&quot;File::Find::Rule&quot;&gt;File::Find::Rule&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364287807494857e0923c716161b8323aaaa85ad" translate="yes" xml:space="preserve">
          <source>If you want a list of all of the Perl module filenames, you can use &lt;a href=&quot;http://search.cpan.org/perldoc/File::Find::Rule&quot;&gt;File::Find::Rule&lt;/a&gt;:</source>
          <target state="translated">Si desea una lista de todos los nombres de archivo del m&amp;oacute;dulo Perl, puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/File::Find::Rule&quot;&gt;File :: Find :: Rule&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="20d03f9f8d59c035c39fd85e8955d33568507a9f" translate="yes" xml:space="preserve">
          <source>If you want a real Perl scalar, use &lt;code&gt;numify()&lt;/code&gt; :</source>
          <target state="translated">Si desea un escalar de Perl real, use &lt;code&gt;numify()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b8b877d7756b903200810e1071cc23b772cf0635" translate="yes" xml:space="preserve">
          <source>If you want a real Perl scalar, use &lt;code&gt;numify()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9309fd012fc6beaef72da428ac578230d08f400e" translate="yes" xml:space="preserve">
          <source>If you want a supported version of perl for OpenVOS, purchase the OpenVOS GNU Tools product from Stratus Technologies, along with a support contract (or from anyone else who will sell you support).</source>
          <target state="translated">Si desea una versión de perl con soporte para OpenVOS,compre el producto OpenVOS GNU Tools de Stratus Technologies,junto con un contrato de soporte (o de cualquier otra persona que le venda soporte).</target>
        </trans-unit>
        <trans-unit id="6584c0a384e584f13abe302cec979af6b67c1d61" translate="yes" xml:space="preserve">
          <source>If you want a true copy of $x, use:</source>
          <target state="translated">Si quiere una copia real de $x,úsela:</target>
        </trans-unit>
        <trans-unit id="2bd3ed425ef919c14360d525b51cc98be9af477c" translate="yes" xml:space="preserve">
          <source>If you want access to threads, you must &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; before you &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; threads::shared&lt;/code&gt; . &lt;a href=&quot;../threads&quot;&gt;threads&lt;/a&gt; will emit a warning if you use it after &lt;a href=&quot;shared&quot;&gt;threads::shared&lt;/a&gt;.</source>
          <target state="translated">Si desea acceder a los hilos, debe &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; antes de &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; threads::shared&lt;/code&gt; . &lt;a href=&quot;../threads&quot;&gt;Los subprocesos&lt;/a&gt; emitir&amp;aacute;n una advertencia si lo usas despu&amp;eacute;s de &lt;a href=&quot;shared&quot;&gt;subprocesos :: compartido&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8a2798b257a3670f42de6843d7775eac47d562b" translate="yes" xml:space="preserve">
          <source>If you want access to threads, you must &lt;code&gt;use threads&lt;/code&gt; before you &lt;code&gt;use threads::shared&lt;/code&gt;. &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; will emit a warning if you use it after &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffb4d0fb6b209221b80f1da704496ad8ce1ebe0" translate="yes" xml:space="preserve">
          <source>If you want an IDE, check the following (in alphabetical order, not order of preference):</source>
          <target state="translated">Si desea un IDE,marque lo siguiente (en orden alfabético,no en orden de preferencia):</target>
        </trans-unit>
        <trans-unit id="0cc35691082ef1d0bc8a1a1a8c2c6b40d9490aba" translate="yes" xml:space="preserve">
          <source>If you want anything fancier, consider overriding this with something that uses &lt;a href=&quot;Number::Format&quot;&gt;Number::Format&lt;/a&gt;, or does something else entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe93301108d8dca54392bf8f900a5e24a5258416" translate="yes" xml:space="preserve">
          <source>If you want anything fancier, consider overriding this with something that uses &lt;a href=&quot;http://search.cpan.org/perldoc/Number::Format&quot;&gt;Number::Format&lt;/a&gt;, or does something else entirely.</source>
          <target state="translated">Si desea algo m&amp;aacute;s elegante, considere anular esto con algo que use &lt;a href=&quot;http://search.cpan.org/perldoc/Number::Format&quot;&gt;Number :: Format&lt;/a&gt; , o haga algo completamente diferente.</target>
        </trans-unit>
        <trans-unit id="03e2f095ee9c1b96484a23c04f5e5dfef232e04c" translate="yes" xml:space="preserve">
          <source>If you want build some core extensions statically into perl's dll, specify them in the STATIC_EXT macro.</source>
          <target state="translated">Si quieres construir algunas extensiones del núcleo de forma estática en la dll de Perl,especifícalas en la macro STATIC_EXT.</target>
        </trans-unit>
        <trans-unit id="18b0e9b36c2f4eaca25552fa7c7631a4398f6336" translate="yes" xml:space="preserve">
          <source>If you want finer granularity than the 1 second that the &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; function provides, the easiest way is to use the &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; function as documented in &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;. Try the &lt;a href=&quot;time/hires&quot;&gt;Time::HiRes&lt;/a&gt; and the &lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Itimer&quot;&gt;BSD::Itimer&lt;/a&gt; modules (available from CPAN, and starting from Perl 5.8 &lt;a href=&quot;time/hires&quot;&gt;Time::HiRes&lt;/a&gt; is part of the standard distribution).</source>
          <target state="translated">Si desea una granularidad m&amp;aacute;s fina que el segundo que proporciona la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; , la forma m&amp;aacute;s sencilla es usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; como se documenta en &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt; . Pruebe los m&amp;oacute;dulos &lt;a href=&quot;time/hires&quot;&gt;Time :: HiRes&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Itimer&quot;&gt;BSD :: Itimer&lt;/a&gt; (disponibles en CPAN, y a partir de Perl 5.8 &lt;a href=&quot;time/hires&quot;&gt;Time :: HiRes&lt;/a&gt; es parte de la distribuci&amp;oacute;n est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="938f7da4d45d138e899952c66b47a7d1e1a162f3" translate="yes" xml:space="preserve">
          <source>If you want finer granularity than the 1 second that the &lt;code&gt;sleep()&lt;/code&gt; function provides, the easiest way is to use the &lt;code&gt;select()&lt;/code&gt; function as documented in &lt;a href=&quot;perlfunc#select&quot;&gt;&quot;select&quot; in perlfunc&lt;/a&gt;. Try the &lt;a href=&quot;Time::HiRes&quot;&gt;Time::HiRes&lt;/a&gt; and the &lt;a href=&quot;BSD::Itimer&quot;&gt;BSD::Itimer&lt;/a&gt; modules (available from CPAN, and starting from Perl 5.8 &lt;a href=&quot;Time::HiRes&quot;&gt;Time::HiRes&lt;/a&gt; is part of the standard distribution).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14afa459a95e2ee1097bdb5d465fc670f04bf72" translate="yes" xml:space="preserve">
          <source>If you want it to be a Unicode string (because you want character semantics with operations like regular expression matching), you need to decode the UTF8-encoded content and have Perl convert it into a Unicode string:</source>
          <target state="translated">Si quieres que sea una cadena Unicode (porque quieres semántica de caracteres con operaciones como la coincidencia de expresiones regulares),necesitas decodificar el contenido codificado en UTF8 y hacer que Perl lo convierta en una cadena Unicode:</target>
        </trans-unit>
        <trans-unit id="b68288a6982fc2b55a1d1fa4ad5b3ecc68be5d47" translate="yes" xml:space="preserve">
          <source>If you want more flexibility, you need to configure your CPAN client for your particular situation.</source>
          <target state="translated">Si quieres más flexibilidad,necesitas configurar tu cliente CPAN para tu situación particular.</target>
        </trans-unit>
        <trans-unit id="212545de9d894bed7fa89be5bf884693fe7c603b" translate="yes" xml:space="preserve">
          <source>If you want no headers or footers output in the HTML, set these options to the empty string.</source>
          <target state="translated">Si no desea que se impriman cabeceras o pies de página en el HTML,configure estas opciones en la cadena vacía.</target>
        </trans-unit>
        <trans-unit id="c2f8c74db8ed8406f2f6e08a05e2a2be5038e9a9" translate="yes" xml:space="preserve">
          <source>If you want perl to use globbing that emulates the quirks of DOS filename conventions, you might want to consider using File::DosGlob to override the internal glob() implementation. See &lt;a href=&quot;File::DosGlob&quot;&gt;File::DosGlob&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be3f922578397a2f9698c9c71abc2a55e6ed43d" translate="yes" xml:space="preserve">
          <source>If you want perl to use globbing that emulates the quirks of DOS filename conventions, you might want to consider using File::DosGlob to override the internal glob() implementation. See &lt;a href=&quot;file/dosglob&quot;&gt;File::DosGlob&lt;/a&gt; for details.</source>
          <target state="translated">Si desea que perl use globbing que emule las peculiaridades de las convenciones de nombres de archivos de DOS, puede considerar usar File :: DosGlob para anular la implementaci&amp;oacute;n interna de glob (). Consulte &lt;a href=&quot;file/dosglob&quot;&gt;Archivo :: DosGlob&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="08c46a24da2bb06c6e1c6ef38a1abe76f47d9a13" translate="yes" xml:space="preserve">
          <source>If you want read lines, you must read in list context.</source>
          <target state="translated">Si quieres leer líneas,debes leer en el contexto de la lista.</target>
        </trans-unit>
        <trans-unit id="9bfb8a43a2ce5fcca125d20e873c4c7b11aed7e7" translate="yes" xml:space="preserve">
          <source>If you want the &lt;code&gt;atexit()&lt;/code&gt; syntax (and an &lt;code&gt;rmexit()&lt;/code&gt; as well), try the &lt;code&gt;AtExit&lt;/code&gt; module available from CPAN.</source>
          <target state="translated">Si desea la sintaxis &lt;code&gt;atexit()&lt;/code&gt; (y un &lt;code&gt;rmexit()&lt;/code&gt; tambi&amp;eacute;n), pruebe el m&amp;oacute;dulo &lt;code&gt;AtExit&lt;/code&gt; disponible en CPAN.</target>
        </trans-unit>
        <trans-unit id="124ea0ab66186e4216274d303cbf33e4b47044f9" translate="yes" xml:space="preserve">
          <source>If you want the array index, use the &lt;code&gt;firstidx()&lt;/code&gt; function from &lt;code&gt;List::MoreUtils&lt;/code&gt; :</source>
          <target state="translated">Si desea el &amp;iacute;ndice de la matriz, use la funci&amp;oacute;n &lt;code&gt;firstidx()&lt;/code&gt; de &lt;code&gt;List::MoreUtils&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7239c9f8360ace04be0d87fc661805fd9a93d6bc" translate="yes" xml:space="preserve">
          <source>If you want the array index, use the &lt;code&gt;firstidx()&lt;/code&gt; function from &lt;code&gt;List::MoreUtils&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7615fa2a66b55733775cb5d887a00d84846653ee" translate="yes" xml:space="preserve">
          <source>If you want the code to die instead of falling back, use &lt;code&gt;only&lt;/code&gt; instead:</source>
          <target state="translated">Si desea que el c&amp;oacute;digo muera en lugar de retroceder, use &lt;code&gt;only&lt;/code&gt; lugar:</target>
        </trans-unit>
        <trans-unit id="5f643e51c29ad1dcf8382df154f107e9e891d49b" translate="yes" xml:space="preserve">
          <source>If you want the code to die instead, replace &quot;try&quot; with &quot;only&quot;:</source>
          <target state="translated">Si quieres que el código muera en su lugar,sustituye &quot;probar&quot; por &quot;sólo&quot;:</target>
        </trans-unit>
        <trans-unit id="444d833c4fe34c4ebf55ce0643031f3aa4615d34" translate="yes" xml:space="preserve">
          <source>If you want the equivalent of &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Foo ()&lt;/code&gt; , use a module but not import anything, use &lt;code&gt;require_ok&lt;/code&gt; .</source>
          <target state="translated">Si desea el equivalente a &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Foo ()&lt;/code&gt; , use un m&amp;oacute;dulo pero no importe nada, use &lt;code&gt;require_ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd47c89733a2d362efea4a574e386c3bfd848c97" translate="yes" xml:space="preserve">
          <source>If you want the equivalent of &lt;code&gt;use Foo ()&lt;/code&gt;, use a module but not import anything, use &lt;code&gt;require_ok&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebff181122cf920b540aa12f6f2468119acea8d" translate="yes" xml:space="preserve">
          <source>If you want the old signal behavior back despite possible memory corruption, set the environment variable &lt;code&gt;PERL_SIGNALS&lt;/code&gt; to &lt;code&gt;&quot;unsafe&quot;&lt;/code&gt; . This feature first appeared in Perl 5.8.1.</source>
          <target state="translated">Si desea recuperar el comportamiento de la se&amp;ntilde;al anterior a pesar de la posible corrupci&amp;oacute;n de la memoria, configure la variable de entorno &lt;code&gt;PERL_SIGNALS&lt;/code&gt; en &lt;code&gt;&quot;unsafe&quot;&lt;/code&gt; . Esta caracter&amp;iacute;stica apareci&amp;oacute; por primera vez en Perl 5.8.1.</target>
        </trans-unit>
        <trans-unit id="829231163ed3602e1f949c7395523d09b04596b6" translate="yes" xml:space="preserve">
          <source>If you want the old signal behavior back despite possible memory corruption, set the environment variable &lt;code&gt;PERL_SIGNALS&lt;/code&gt; to &lt;code&gt;&quot;unsafe&quot;&lt;/code&gt;. This feature first appeared in Perl 5.8.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e2e89a1af9e4f4ab883e1fb265f28d997edb48" translate="yes" xml:space="preserve">
          <source>If you want these output in a sorted order, see &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;: &quot;How do I sort a hash (optionally by value instead of key)?&quot;.</source>
          <target state="translated">Si desea estos resultados en un orden ordenado, consulte &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; : &quot;&amp;iquest;C&amp;oacute;mo clasifico un hash (opcionalmente por valor en lugar de clave)?&quot;.</target>
        </trans-unit>
        <trans-unit id="7b0e9370dc85f7e9dd08b608d45bee75d87d8584" translate="yes" xml:space="preserve">
          <source>If you want this event to cause the test to exit you should return the exit code here. Exit code of 0 means exit success, any other integer means exit with failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12a2eb6658b08fd22781ffd73216531f2e651bd" translate="yes" xml:space="preserve">
          <source>If you want this feature, check out Yanick Champoux's &lt;code&gt;Git::CPAN::Patch&lt;/code&gt; distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1340d84f704d5f6a74163cc5fe06ae9be150fb8b" translate="yes" xml:space="preserve">
          <source>If you want to &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; into a string, you just have to &amp;lt;open&amp;gt; a filehandle to a string, which Perl has been able to do since Perl 5.6:</source>
          <target state="translated">Si desea &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; en una cadena, solo tiene que &amp;lt;abrir&amp;gt; un identificador de archivo en una cadena, lo que Perl ha podido hacer desde Perl 5.6:</target>
        </trans-unit>
        <trans-unit id="1004705c5f21359bd47871c5e63f216b6160306f" translate="yes" xml:space="preserve">
          <source>If you want to &lt;code&gt;write&lt;/code&gt; into a string, you just have to &amp;lt;open&amp;gt; a filehandle to a string, which Perl has been able to do since Perl 5.6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7953e238f104e2cdb7abf22e43568bf172380a8b" translate="yes" xml:space="preserve">
          <source>If you want to CLONE all objects you will need to keep track of them per package. This is simply done using a hash and Scalar::Util::weaken().</source>
          <target state="translated">Si quieres CLONAR todos los objetos tendrás que hacer un seguimiento de ellos por paquete.Esto se hace simplemente usando un hash y Scalar::Util::weaken().</target>
        </trans-unit>
        <trans-unit id="8a750f90ba1cfc2d81f044342057667c6ac1726e" translate="yes" xml:space="preserve">
          <source>If you want to actually extract the matching elements, simply use grep in list context.</source>
          <target state="translated">Si quieres extraer realmente los elementos coincidentes,simplemente usa grep en el contexto de la lista.</target>
        </trans-unit>
        <trans-unit id="d026b5d2f0b8d0ebf6352db336c8a293bea0fac9" translate="yes" xml:space="preserve">
          <source>If you want to add your encoding to Encode's demand-loading list (so you don't have to &quot;use Encode::YourEncoding&quot;), run</source>
          <target state="translated">Si quieres añadir tu codificación a la lista de carga de Encode (para no tener que &quot;usar Encode::YourEncoding&quot;),ejecuta</target>
        </trans-unit>
        <trans-unit id="3ceac82578bb19fb50532d7256faa44ce8c265df" translate="yes" xml:space="preserve">
          <source>If you want to append something to the end of string stored in an &lt;code&gt;SV*&lt;/code&gt; , you can use the following functions:</source>
          <target state="translated">Si desea agregar algo al final de la cadena almacenada en un &lt;code&gt;SV*&lt;/code&gt; , puede usar las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="20a16bcf2cf6427a4518ce31b1b9b97af29e8c74" translate="yes" xml:space="preserve">
          <source>If you want to append something to the end of string stored in an &lt;code&gt;SV*&lt;/code&gt;, you can use the following functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abff1ef9e65ec72186150da0b667016af8485105" translate="yes" xml:space="preserve">
          <source>If you want to be sure that you're calling &lt;code&gt;isa&lt;/code&gt; as a method, not a class, check the invocand with &lt;code&gt;blessed&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt; first:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbae8e9319ec5948bcc63aa24cae46d2c786676" translate="yes" xml:space="preserve">
          <source>If you want to be sure that you're calling &lt;code&gt;isa&lt;/code&gt; as a method, not a class, check the invocand with &lt;code&gt;blessed&lt;/code&gt; from &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt; first:</source>
          <target state="translated">Si quieres estar seguro de que est&amp;aacute;s llamando a &lt;code&gt;isa&lt;/code&gt; como un m&amp;eacute;todo, no como una clase, primero verifica el invocador con &lt;code&gt;blessed&lt;/code&gt; de &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="363081145dde14f7c8fd4e2bf011a936ad34c73a" translate="yes" xml:space="preserve">
          <source>If you want to break apart an entire line of fixed columns, you can use &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; with the A (ASCII) format. By using a number after the format specifier, you can denote the column width. See the &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; entries in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for more details.</source>
          <target state="translated">Si desea dividir una l&amp;iacute;nea completa de columnas fijas, puede usar &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; con el formato A (ASCII). Al usar un n&amp;uacute;mero despu&amp;eacute;s del especificador de formato, puede indicar el ancho de la columna. Consulte las entradas del &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="619aad3b3e732995b6ff437174735944e21882dc" translate="yes" xml:space="preserve">
          <source>If you want to break apart an entire line of fixed columns, you can use &lt;code&gt;unpack&lt;/code&gt; with the A (ASCII) format. By using a number after the format specifier, you can denote the column width. See the &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;unpack&lt;/code&gt; entries in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e8c447f2a79196fb827a87399f6352fddeb35d" translate="yes" xml:space="preserve">
          <source>If you want to build the docs yourself, and have</source>
          <target state="translated">Si quieres construir los documentos tú mismo,y tener</target>
        </trans-unit>
        <trans-unit id="3016ac8f3431196221d3334c73f10b4a58c7afce" translate="yes" xml:space="preserve">
          <source>If you want to call C from Perl, start with &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, moving on to &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;xsubpp&quot;&gt;xsubpp&lt;/a&gt;, and &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;. If you want to call Perl from C, then read &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;, &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;, and &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;. Don't forget that you can learn a lot from looking at how the authors of existing extension modules wrote their code and solved their problems.</source>
          <target state="translated">Si desea llamar a C desde Perl, comience con &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; , pasando a &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; , &lt;a href=&quot;xsubpp&quot;&gt;xsubpp&lt;/a&gt; y &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; . Si desea llamar a Perl desde C, lea &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; , &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; y &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; . No olvide que puede aprender mucho observando c&amp;oacute;mo los autores de los m&amp;oacute;dulos de extensi&amp;oacute;n existentes escribieron su c&amp;oacute;digo y resolvieron sus problemas.</target>
        </trans-unit>
        <trans-unit id="315a4534923af9a32596760e1e243392c92b8033" translate="yes" xml:space="preserve">
          <source>If you want to cancel one or several commits, you can use &lt;code&gt;git reset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548a69c6108c24555301c111e716c92968ea1230" translate="yes" xml:space="preserve">
          <source>If you want to check exactly, compare the string with its NFC/NFKC/FCC.</source>
          <target state="translated">Si quieres comprobarlo con exactitud,compara la cadena con su NFC/NFKC/FCC.</target>
        </trans-unit>
        <trans-unit id="59c2fb7af17b706fe9c70e8baa09126e5a3d250b" translate="yes" xml:space="preserve">
          <source>If you want to compress all</source>
          <target state="translated">Si quieres comprimir todo</target>
        </trans-unit>
        <trans-unit id="4a7c9a973da32835e6a4f4be3eeeb0d732a06249" translate="yes" xml:space="preserve">
          <source>If you want to configure your module files for local conditions, or to automatically insert a version number, you can use EUMM's &lt;code&gt;PL_FILES&lt;/code&gt; capability, where it will automatically run each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcfdbb5379f221cca1d97f7787d1bc312424003" translate="yes" xml:space="preserve">
          <source>If you want to control warnings on the fly, do something like this. Make sure you do the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; first, or you won't be able to get at the enable() or disable() methods.</source>
          <target state="translated">Si desea controlar las advertencias sobre la marcha, haga algo como esto. Aseg&amp;uacute;rese de hacer el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; primero, o no podr&amp;aacute; acceder a los m&amp;eacute;todos enable () o disable ().</target>
        </trans-unit>
        <trans-unit id="20be3407cc52b51a764f0e8c0b7ea78b6fd0df8b" translate="yes" xml:space="preserve">
          <source>If you want to control warnings on the fly, do something like this. Make sure you do the &lt;code&gt;use&lt;/code&gt; first, or you won't be able to get at the enable() or disable() methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42c1db2cee198b239c3cde06a946cab4e064353" translate="yes" xml:space="preserve">
          <source>If you want to control what functions Test::More will export, you have to use the 'import' option. For example, to import everything but 'fail', you'd do:</source>
          <target state="translated">Si quieres controlar las funciones que Test::More exportará,tienes que usar la opción &quot;importar&quot;.Por ejemplo,para importar todo menos &quot;fallar&quot;,lo harías:</target>
        </trans-unit>
        <trans-unit id="be1e5234b80eb1f923a376bc3491ec3ca6b109b2" translate="yes" xml:space="preserve">
          <source>If you want to convert the returned map to entirely scalar numbers, you can use something like this:</source>
          <target state="translated">Si quieres convertir el mapa devuelto a números enteramente escalares,puedes usar algo como esto:</target>
        </trans-unit>
        <trans-unit id="7adae9875339a373afa10e8d5fe3748778b7c17f" translate="yes" xml:space="preserve">
          <source>If you want to convert to UTF-8 from encodings other than the native (Latin1 or EBCDIC), see &lt;a href=&quot;#sv_recode_to_utf8&quot;&gt;&quot;sv_recode_to_utf8&quot;&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba04eeea7231f6480afed51584cd45a160a944a" translate="yes" xml:space="preserve">
          <source>If you want to convert to UTF-8 from encodings other than the native (Latin1 or EBCDIC), see &lt;a href=&quot;#sv_recode_to_utf8&quot;&gt;sv_recode_to_utf8&lt;/a&gt;().</source>
          <target state="translated">Si desea convertir a UTF-8 desde codificaciones distintas de la nativa (Latin1 o EBCDIC), consulte &lt;a href=&quot;#sv_recode_to_utf8&quot;&gt;sv_recode_to_utf8&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="228fa3459a576d7c7cf5495612539d6810b0138e" translate="yes" xml:space="preserve">
          <source>If you want to create a zip64 zip file with the OO interface you must specify the &lt;code&gt;Zip64&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c24008e3ed2beeee61bb3c00b23e9cec000bd1" translate="yes" xml:space="preserve">
          <source>If you want to create many anonymous handles, you should check out the Symbol or IO::Handle modules.</source>
          <target state="translated">Si quieres crear muchos mangos anónimos,deberías mirar los módulos de Symbol o IO::Handle.</target>
        </trans-unit>
        <trans-unit id="d3f92af00462a48927ab51881cd3156c2dfab08a" translate="yes" xml:space="preserve">
          <source>If you want to create the file if it does not already exist then bitwise-OR (&lt;code&gt;|&lt;/code&gt;) &lt;code&gt;O_CREAT&lt;/code&gt; too. If you omit &lt;code&gt;O_CREAT&lt;/code&gt; and the database does not already exist then the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call will fail.</source>
          <target state="translated">Si desea crear el archivo si a&amp;uacute;n no existe, entonces bit a bit-OR ( &lt;code&gt;|&lt;/code&gt; ) &lt;code&gt;O_CREAT&lt;/code&gt; tambi&amp;eacute;n. Si omite &lt;code&gt;O_CREAT&lt;/code&gt; y la base de datos a&amp;uacute;n no existe, la llamada de &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="fc98ab804f43ba09ba7d693b95e26eb63a6ad833" translate="yes" xml:space="preserve">
          <source>If you want to create the file if it does not already exist then bitwise-OR (&lt;code&gt;|&lt;/code&gt;) &lt;code&gt;O_CREAT&lt;/code&gt; too. If you omit &lt;code&gt;O_CREAT&lt;/code&gt; and the database does not already exist then the &lt;code&gt;tie&lt;/code&gt; call will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a116b633c8c619c49052dbd9a5c72113a8975d85" translate="yes" xml:space="preserve">
          <source>If you want to create the file if it does not exist, add &lt;code&gt;O_CREAT&lt;/code&gt; to any of these, as in the example. If you omit &lt;code&gt;O_CREAT&lt;/code&gt; and the file does not already exist, the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call will fail.</source>
          <target state="translated">Si desea crear el archivo si no existe, agregue &lt;code&gt;O_CREAT&lt;/code&gt; a cualquiera de estos, como en el ejemplo. Si omite &lt;code&gt;O_CREAT&lt;/code&gt; y el archivo a&amp;uacute;n no existe, la llamada de &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="95ab7bc04f484a14dcd9279bd03d23b179493ba9" translate="yes" xml:space="preserve">
          <source>If you want to create the file if it does not exist, add &lt;code&gt;O_CREAT&lt;/code&gt; to any of these, as in the example. If you omit &lt;code&gt;O_CREAT&lt;/code&gt; and the file does not already exist, the &lt;code&gt;tie&lt;/code&gt; call will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3b712f48285cffa7900ceeb1af82270cd7a609" translate="yes" xml:space="preserve">
          <source>If you want to cycle through an array endlessly, you can increment the index modulo the number of elements in the array:</source>
          <target state="translated">Si quieres recorrer una matriz sin fin,puedes incrementar el módulo de índice el número de elementos de la matriz:</target>
        </trans-unit>
        <trans-unit id="6cfb6d26bc5df670c402213d4036f3bf58558df4" translate="yes" xml:space="preserve">
          <source>If you want to debug some other testfile, set the &lt;code&gt;TEST_FILE&lt;/code&gt; variable thusly:</source>
          <target state="translated">Si desea depurar alg&amp;uacute;n otro archivo de prueba, configure la variable &lt;code&gt;TEST_FILE&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="6048d807c79fe8c274777ea98164bb2677fd3a0f" translate="yes" xml:space="preserve">
          <source>If you want to delete your temporary branch, you may do so with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b931492f8ba265d923d9e6b394913c2adf2d8e1f" translate="yes" xml:space="preserve">
          <source>If you want to disallow any rearrangement, pass &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt; (a reference to empty list) as the value for this key.</source>
          <target state="translated">Si desea rechazar cualquier reordenamiento, pase &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;[]&lt;/code&gt; (una referencia a la lista vac&amp;iacute;a) como valor para esta clave.</target>
        </trans-unit>
        <trans-unit id="54957337acd4e58dbb0d89d2b021227b45f4fede" translate="yes" xml:space="preserve">
          <source>If you want to disallow any rearrangement, pass &lt;code&gt;undef&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt; (a reference to empty list) as the value for this key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e399c3f8eff9b2e3be1dfd1cb3c6e184f3c80005" translate="yes" xml:space="preserve">
          <source>If you want to do something when the object is destroyed, you can define a &lt;code&gt;DESTROY&lt;/code&gt; method in your class. This method will always be called by Perl at the appropriate time, unless the method is empty.</source>
          <target state="translated">Si desea hacer algo cuando se destruye el objeto, puede definir un m&amp;eacute;todo &lt;code&gt;DESTROY&lt;/code&gt; en su clase. Este m&amp;eacute;todo siempre ser&amp;aacute; llamado por Perl en el momento apropiado, a menos que el m&amp;eacute;todo est&amp;eacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="028499023abecf52141490b3dc52996a2e6540e8" translate="yes" xml:space="preserve">
          <source>If you want to do something with the REGEXP* later use SvRX instead and check for NULL.</source>
          <target state="translated">Si quieres hacer algo con el REGEXP*más tarde usa SvRX en su lugar y comprueba si hay NULL.</target>
        </trans-unit>
        <trans-unit id="5bec0b0d71b7e3b535fad4f2a98d0fdea0b5611d" translate="yes" xml:space="preserve">
          <source>If you want to do the same thing to modify the values of the hash, you can use the &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; function. As of Perl 5.6 the values are not copied, so if you modify $orbit (in this case), you modify the value.</source>
          <target state="translated">Si desea hacer lo mismo para modificar los valores del hash, puede usar la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; . A partir de Perl 5.6, los valores no se copian, por lo que si modifica $ orbit (en este caso), modifica el valor.</target>
        </trans-unit>
        <trans-unit id="935f14135388c5b598f55e1dc3d822934fdf377b" translate="yes" xml:space="preserve">
          <source>If you want to do the same thing to modify the values of the hash, you can use the &lt;code&gt;values&lt;/code&gt; function. As of Perl 5.6 the values are not copied, so if you modify $orbit (in this case), you modify the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1befe6f0c8cce90a523721cdcb6a3e759a8bf613" translate="yes" xml:space="preserve">
          <source>If you want to downgrade a warning that has been escalated into a fatal error back to a normal warning, you can use the &quot;NONFATAL&quot; keyword. For example, the code below will promote all warnings into fatal errors, except for those in the &quot;syntax&quot; category.</source>
          <target state="translated">Si quieres bajar una advertencia que se ha convertido en un error fatal a una advertencia normal,puedes usar la palabra clave &quot;NO FATAL&quot;.Por ejemplo,el código que aparece a continuación promoverá todas las advertencias a errores fatales,excepto las de la categoría &quot;sintaxis&quot;.</target>
        </trans-unit>
        <trans-unit id="aaac7464ef1e41e8e3656bb3c9f1373b9810c3d2" translate="yes" xml:space="preserve">
          <source>If you want to encode a large file, you should encode it in chunks that are a multiple of 57 bytes. This ensures that the base64 lines line up and that you do not end up with padding in the middle. 57 bytes of data fills one complete base64 line (76 == 57*4/3):</source>
          <target state="translated">Si quieres codificar un archivo grande,debes codificarlo en trozos que son un múltiplo de 57 bytes.Esto asegura que las líneas de la base64 se alineen y que no termines con un relleno en el medio.57 bytes de datos llenan una línea completa de base64 (76 ==57*4/3):</target>
        </trans-unit>
        <trans-unit id="526764856cb11f1625c51adabbc0827d170cf65b" translate="yes" xml:space="preserve">
          <source>If you want to enter a multi-line command, such as a subroutine definition with several statements or a format, escape the newline that would normally end the debugger command with a backslash. Here's an example:</source>
          <target state="translated">Si desea introducir un comando multilínea,como una definición de subrutina con varias declaraciones o un formato,escape de la nueva línea que normalmente terminaría el comando del depurador con una barra invertida.Aquí tiene un ejemplo:</target>
        </trans-unit>
        <trans-unit id="1c27e6ce335738d835ec3fdd82f6c0809ffefc5e" translate="yes" xml:space="preserve">
          <source>If you want to find out how many characters are waiting, there's also the FIONREAD ioctl call to be looked at. The</source>
          <target state="translated">Si quieres saber cuántos personajes están esperando,también está la llamada ioctl de FIONREAD para ser vista.El</target>
        </trans-unit>
        <trans-unit id="1da1084e18df9224120de5015e0f47b55cae04d1" translate="yes" xml:space="preserve">
          <source>If you want to find out how many entries have a defined value, that's a bit different. You have to check each value. A &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; is handy:</source>
          <target state="translated">Si desea saber cu&amp;aacute;ntas entradas tienen un valor definido, eso es un poco diferente. Tienes que comprobar cada valor. Un &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; es &amp;uacute;til:</target>
        </trans-unit>
        <trans-unit id="0d72620df0696cc4732b993d293ab2b11520eef6" translate="yes" xml:space="preserve">
          <source>If you want to find out how many entries have a defined value, that's a bit different. You have to check each value. A &lt;code&gt;grep&lt;/code&gt; is handy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308cd4ff0bf951ae1c4968d0825997ff4ae0e702" translate="yes" xml:space="preserve">
          <source>If you want to find the package calling your code, perhaps to give better diagnostics as &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; does, use the &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; built-in:</source>
          <target state="translated">Si desea encontrar el paquete que llama a su c&amp;oacute;digo, tal vez para brindar un mejor diagn&amp;oacute;stico como lo hace &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; , use el &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; incorporado:</target>
        </trans-unit>
        <trans-unit id="7e82876e02cb96090e26d86eedc47e176c7a8339" translate="yes" xml:space="preserve">
          <source>If you want to find the package calling your code, perhaps to give better diagnostics as &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; does, use the &lt;code&gt;caller&lt;/code&gt; built-in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3665b99091562c54c0340f04e5f55207f573bbfd" translate="yes" xml:space="preserve">
          <source>If you want to force strings to be interpreted as numbers, you could say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0a89fa31368a04df7fab37ca05a2304cb913c7" translate="yes" xml:space="preserve">
          <source>If you want to generate new style events, events that do many things at once, then you want the &lt;code&gt;*ev2*&lt;/code&gt; methods. These let you directly specify which facets you wish to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f109680f15bd3886268c0dd93d91471450a599" translate="yes" xml:space="preserve">
          <source>If you want to get at a slice (part of a row) in a multidimensional array, you're going to have to do some fancy subscripting. That's because while we have a nice synonym for single elements via the pointer arrow for dereferencing, no such convenience exists for slices.</source>
          <target state="translated">Si quieres llegar a un trozo (parte de una fila)en una matriz multidimensional,vas a tener que hacer una suscripción de lujo.Eso es porque mientras que tenemos un bonito sinónimo de elementos individuales a través de la flecha del puntero para la desreferenciación,no existe tal conveniencia para las rebanadas.</target>
        </trans-unit>
        <trans-unit id="ac8d06c0714514adee4900ccc907acf01c17734d" translate="yes" xml:space="preserve">
          <source>If you want to get warned when the fallback occurs, replace &quot;try&quot; with &quot;lib&quot;:</source>
          <target state="translated">Si quieres que te avisen cuando se produzca la retirada,sustituye &quot;try&quot; por &quot;lib&quot;:</target>
        </trans-unit>
        <trans-unit id="c34f1861cd969edfd158d72b53e2b8bf861c0838" translate="yes" xml:space="preserve">
          <source>If you want to have arrays of constant strings, note carefully the right combination of &lt;code&gt;const&lt;/code&gt; s:</source>
          <target state="translated">Si desea tener matrices de cadenas constantes, observe cuidadosamente la combinaci&amp;oacute;n correcta de &lt;code&gt;const&lt;/code&gt; s:</target>
        </trans-unit>
        <trans-unit id="356345ab0ce94a5efc2714f6ef0d68b5cc2c3066" translate="yes" xml:space="preserve">
          <source>If you want to have arrays of constant strings, note carefully the right combination of &lt;code&gt;const&lt;/code&gt;s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc85c01bbb2e5546a912901548bde68e7f312959" translate="yes" xml:space="preserve">
          <source>If you want to have static strings, make them constant:</source>
          <target state="translated">Si quieres tener cuerdas estáticas,hazlas constantes:</target>
        </trans-unit>
        <trans-unit id="5f28aad16a41ad668dc6d2a20ee81e5f9b0af321" translate="yes" xml:space="preserve">
          <source>If you want to have your cake and eat it too, you need a more complicated boilerplate.</source>
          <target state="translated">Si quieres tener tu pastel y comértelo también,necesitas una placa de calderilla más complicada.</target>
        </trans-unit>
        <trans-unit id="732754bf3b16a13d947b836156896a3b2cedc031" translate="yes" xml:space="preserve">
          <source>If you want to indent the text in the here document, you can do this:</source>
          <target state="translated">Si quieres hacer una sangría en el texto de este documento,puedes hacerlo:</target>
        </trans-unit>
        <trans-unit id="d6b9e98bf75fad13fa324d37df3fb0822a303c98" translate="yes" xml:space="preserve">
          <source>If you want to influence compilation of calls to a specific subroutine, then use &lt;a href=&quot;#cv_set_call_checker&quot;&gt;cv_set_call_checker&lt;/a&gt; rather than hooking checking of all &lt;code&gt;entersub&lt;/code&gt; ops.</source>
          <target state="translated">Si desea influir en la compilaci&amp;oacute;n de llamadas a una subrutina espec&amp;iacute;fica, utilice &lt;a href=&quot;#cv_set_call_checker&quot;&gt;cv_set_call_checker en&lt;/a&gt; lugar de enganchar la verificaci&amp;oacute;n de todas &lt;code&gt;entersub&lt;/code&gt; operaciones enterub .</target>
        </trans-unit>
        <trans-unit id="e66b9245a42c5136074f90bbcaa24c2089883633" translate="yes" xml:space="preserve">
          <source>If you want to influence compilation of calls to a specific subroutine, then use &lt;a href=&quot;#cv_set_call_checker_flags&quot;&gt;&quot;cv_set_call_checker_flags&quot;&lt;/a&gt; rather than hooking checking of all &lt;code&gt;entersub&lt;/code&gt; ops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d06034c9b20f332ef6d3aafef878e55cf37779" translate="yes" xml:space="preserve">
          <source>If you want to inherit the parent thread's locale, you can, in the parent, set a variable like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168d6eb05b72021bb2cefd5586f5642721fb25b0" translate="yes" xml:space="preserve">
          <source>If you want to install a distribution from the current directory, you can tell &lt;code&gt;CPAN.pm&lt;/code&gt; to install &lt;code&gt;.&lt;/code&gt; (the full stop):</source>
          <target state="translated">Si desea instalar una distribuci&amp;oacute;n desde el directorio actual, puede decirle a &lt;code&gt;CPAN.pm&lt;/code&gt; que lo instale &lt;code&gt;.&lt;/code&gt; (punto final):</target>
        </trans-unit>
        <trans-unit id="33e2d2f8b434b4a1cc7c6346d405264c8380bf51" translate="yes" xml:space="preserve">
          <source>If you want to install modules for your own use, the easiest way might be &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local::lib&lt;/a&gt;, which you can download from CPAN. It sets various installation settings for you, and uses those same settings within your programs.</source>
          <target state="translated">Si desea instalar m&amp;oacute;dulos para su propio uso, la forma m&amp;aacute;s sencilla podr&amp;iacute;a ser &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local :: lib&lt;/a&gt; , que puede descargar de CPAN. Establece varias configuraciones de instalaci&amp;oacute;n para usted y usa esas mismas configuraciones dentro de sus programas.</target>
        </trans-unit>
        <trans-unit id="b3dae34f8c2a04f0b25691fed783ebc83dba7816" translate="yes" xml:space="preserve">
          <source>If you want to install modules for your own use, the easiest way might be &lt;a href=&quot;local::lib&quot;&gt;local::lib&lt;/a&gt;, which you can download from CPAN. It sets various installation settings for you, and uses those same settings within your programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d2dc539671f427bbae58845aceababd0159c6c" translate="yes" xml:space="preserve">
          <source>If you want to know as little about Perl as possible but need to add a new encoding, just read this chapter and forget the rest.</source>
          <target state="translated">Si quieres saber lo menos posible sobre Perl pero necesitas añadir una nueva codificación,lee este capítulo y olvídate del resto.</target>
        </trans-unit>
        <trans-unit id="56e1fbcaca6130206229f6c3c8cb0c2d52fb54b7" translate="yes" xml:space="preserve">
          <source>If you want to know how Perl OO works under the hood, the &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; document explains the nitty gritty details.</source>
          <target state="translated">Si desea saber c&amp;oacute;mo funciona Perl OO bajo el cap&amp;oacute;, el documento de &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; explica los detalles esenciales.</target>
        </trans-unit>
        <trans-unit id="9f23a106d53e80c8c0f8d1f2b0c84d08d1054140" translate="yes" xml:space="preserve">
          <source>If you want to know how to handle automated testing for your distribution, you can check the environment. The CPAN Testers, for instance, set the value of &lt;code&gt;AUTOMATED_TESTING&lt;/code&gt; :</source>
          <target state="translated">Si desea saber c&amp;oacute;mo manejar las pruebas automatizadas para su distribuci&amp;oacute;n, puede verificar el entorno. Los probadores de CPAN, por ejemplo, establecen el valor de &lt;code&gt;AUTOMATED_TESTING&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9b495e524dc71177b8e643e1224800f20371e451" translate="yes" xml:space="preserve">
          <source>If you want to know how to handle automated testing for your distribution, you can check the environment. The CPAN Testers, for instance, set the value of &lt;code&gt;AUTOMATED_TESTING&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a57ed6abdc67a27c928054414c38fcc1c565d58" translate="yes" xml:space="preserve">
          <source>If you want to know if the scalar value is TRUE, you can use:</source>
          <target state="translated">Si quieres saber si el valor escalar es VERDADERO,puedes usar:</target>
        </trans-unit>
        <trans-unit id="f0f2be398a4f429a704b8881af39ff31858188bb" translate="yes" xml:space="preserve">
          <source>If you want to know if this variable (or any other SV) is actually &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;, you can call:</source>
          <target state="translated">Si desea saber si esta variable (o cualquier otro SV) est&amp;aacute; realmente &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; , puede llamar a:</target>
        </trans-unit>
        <trans-unit id="daea143b4968577fdbd42832858949f2fd1cdff0" translate="yes" xml:space="preserve">
          <source>If you want to know if this variable (or any other SV) is actually &lt;code&gt;defined&lt;/code&gt;, you can call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c60925561c19aa1767251e2aee467af3279de6f" translate="yes" xml:space="preserve">
          <source>If you want to know whether a particular scalar refers to an object, you can use the &lt;code&gt;blessed&lt;/code&gt; function exported by &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt;, which is shipped with the Perl core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4282549729bb35373ef94d2e2b64ea8af51a5d06" translate="yes" xml:space="preserve">
          <source>If you want to know whether a particular scalar refers to an object, you can use the &lt;code&gt;blessed&lt;/code&gt; function exported by &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;, which is shipped with the Perl core.</source>
          <target state="translated">Si desea saber si un escalar en particular se refiere a un objeto, puede usar la funci&amp;oacute;n &lt;code&gt;blessed&lt;/code&gt; exportada por &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; , que se env&amp;iacute;a con el n&amp;uacute;cleo de Perl.</target>
        </trans-unit>
        <trans-unit id="056d8ddf16a11d708261878d4f200cc28e75de75" translate="yes" xml:space="preserve">
          <source>If you want to learn more about Perl 6, or have a desire to help in the crusade to make Perl a better place then read the Perl 6 developers page at &lt;a href=&quot;http://www.perl6.org/&quot;&gt;http://www.perl6.org/&lt;/a&gt; and get involved.</source>
          <target state="translated">Si desea obtener m&amp;aacute;s informaci&amp;oacute;n sobre Perl 6, o desea ayudar en la cruzada para hacer de Perl un lugar mejor, lea la p&amp;aacute;gina de desarrolladores de Perl 6 en &lt;a href=&quot;http://www.perl6.org/&quot;&gt;http://www.perl6.org/&lt;/a&gt; y participe.</target>
        </trans-unit>
        <trans-unit id="00255f60e5cd77d55f44acd05aa25f0d59366611" translate="yes" xml:space="preserve">
          <source>If you want to learn the basics of Perl, you might start with the Llama book, which assumes that you already know a little about programming:</source>
          <target state="translated">Si quieres aprender lo básico de Perl,puedes empezar con el libro de Llama,que asume que ya sabes un poco sobre programación:</target>
        </trans-unit>
        <trans-unit id="b59f1075805db9d0b1d16e3fcdbf9d21e65a49a6" translate="yes" xml:space="preserve">
          <source>If you want to limit yourself to a much more narrow definition of what a version string constitutes, &lt;code&gt;is_strict()&lt;/code&gt; is limited to version strings like the following list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859f839c744c136d7bdf5037e58bd0e9887e2618" translate="yes" xml:space="preserve">
          <source>If you want to load a subclass from a file that &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; would not consider an eligible filename (that is, it does not end in either &lt;code&gt;.pm&lt;/code&gt; or &lt;code&gt;.pmc&lt;/code&gt;), use the following code:</source>
          <target state="translated">Si desea cargar una subclase de un archivo que &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; no considerar&amp;iacute;a un nombre de archivo elegible (es decir, no termina en &lt;code&gt;.pm&lt;/code&gt; o &lt;code&gt;.pmc&lt;/code&gt; ), use el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="1e6ddafbd419154de1f46300a143dfff13d40dbc" translate="yes" xml:space="preserve">
          <source>If you want to load a subclass from a file that &lt;code&gt;require&lt;/code&gt; would not consider an eligible filename (that is, it does not end in either &lt;code&gt;.pm&lt;/code&gt; or &lt;code&gt;.pmc&lt;/code&gt;), use the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43171de60cc7817f0c0ddd386dd67107ef6f821" translate="yes" xml:space="preserve">
          <source>If you want to load the entire file, you can use the &lt;a href=&quot;Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; module to do it in one simple and efficient step:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bacba7c0db3c9f406fbf3ba9dec50a07c74303" translate="yes" xml:space="preserve">
          <source>If you want to load the entire file, you can use the &lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; module to do it in one simple and efficient step:</source>
          <target state="translated">Si desea cargar el archivo completo, puede usar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path :: Tiny&lt;/a&gt; para hacerlo en un paso simple y eficiente:</target>
        </trans-unit>
        <trans-unit id="b17927939e60f1cedd222b2461104e02f72f02d9" translate="yes" xml:space="preserve">
          <source>If you want to make a real copy, use the following:</source>
          <target state="translated">Si quieres hacer una copia real,usa lo siguiente:</target>
        </trans-unit>
        <trans-unit id="85008415a7eb8c5259c1befce3f088e509e6063e" translate="yes" xml:space="preserve">
          <source>If you want to make changes to someone else's topic branch, you should check with its creator before making any change to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011cab076badf929a664e79819f2251ac21c5335" translate="yes" xml:space="preserve">
          <source>If you want to make the SV drop its string buffer, use &lt;code&gt;sv_force_normal_flags(sv, SV_COW_DROP_PV)&lt;/code&gt; or simply &lt;code&gt;sv_setsv(sv, NULL)&lt;/code&gt; .</source>
          <target state="translated">Si desea que el SV elimine su b&amp;uacute;fer de cadena, use &lt;code&gt;sv_force_normal_flags(sv, SV_COW_DROP_PV)&lt;/code&gt; o simplemente &lt;code&gt;sv_setsv(sv, NULL)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e876f29c89b13d2955e7ddc7b720fb71debcd99e" translate="yes" xml:space="preserve">
          <source>If you want to make the SV drop its string buffer, use &lt;code&gt;sv_force_normal_flags(sv, SV_COW_DROP_PV)&lt;/code&gt; or simply &lt;code&gt;sv_setsv(sv, NULL)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686e0dae9b58a50551e5307de1a432fa51bae3cd" translate="yes" xml:space="preserve">
          <source>If you want to make use of the new features available in Berkeley DB 2.x or greater, use the Perl module &lt;a href=&quot;https://metacpan.org/pod/BerkeleyDB&quot;&gt;BerkeleyDB&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7523637fc2645186f899696d73931e051d6c52" translate="yes" xml:space="preserve">
          <source>If you want to make use of the new features available in Berkeley DB 2.x or greater, use the Perl module &lt;b&gt;BerkeleyDB&lt;/b&gt; instead.</source>
          <target state="translated">Si desea hacer uso de las nuevas caracter&amp;iacute;sticas disponibles en Berkeley DB 2.xo superior, use el m&amp;oacute;dulo de Perl &lt;b&gt;BerkeleyDB en su&lt;/b&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="610bb38fb99d325c8e7fefe0a23a02b343634382" translate="yes" xml:space="preserve">
          <source>If you want to modify the debugger, copy</source>
          <target state="translated">Si quieres modificar el depurador,copia</target>
        </trans-unit>
        <trans-unit id="68a89277cf24a3194f901f3f723f1840c4c2f27b" translate="yes" xml:space="preserve">
          <source>If you want to open either STDIN or STDOUT with &lt;code&gt;gzopen&lt;/code&gt; , you can now optionally use the special filename &quot;&lt;code&gt;-&lt;/code&gt; &quot; as a synonym for &lt;code&gt;\*STDIN&lt;/code&gt; and &lt;code&gt;\*STDOUT&lt;/code&gt; .</source>
          <target state="translated">Si desea abrir STDIN o STDOUT con &lt;code&gt;gzopen&lt;/code&gt; , ahora puede usar opcionalmente el nombre de archivo especial &quot; &lt;code&gt;-&lt;/code&gt; &quot; como sin&amp;oacute;nimo de &lt;code&gt;\*STDIN&lt;/code&gt; y &lt;code&gt;\*STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47c9bd4478a0c2ce9ccca6507ec4f47c10afe7d5" translate="yes" xml:space="preserve">
          <source>If you want to open either STDIN or STDOUT with &lt;code&gt;gzopen&lt;/code&gt;, you can now optionally use the special filename &quot;&lt;code&gt;-&lt;/code&gt;&quot; as a synonym for &lt;code&gt;\*STDIN&lt;/code&gt; and &lt;code&gt;\*STDOUT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41fd5af244837759f6e880c0fa8c36bc7f07f26" translate="yes" xml:space="preserve">
          <source>If you want to overload a Perl operator, such as &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;**&lt;/code&gt; , then you'll want to use the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; pragma, documented in &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;.</source>
          <target state="translated">Si desea sobrecargar un operador de Perl, como &lt;code&gt;+&lt;/code&gt; o &lt;code&gt;**&lt;/code&gt; , entonces querr&amp;aacute; usar el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; , documentado en &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71a40071766dc5d5747b55ec51fa1862eac4c688" translate="yes" xml:space="preserve">
          <source>If you want to overload a Perl operator, such as &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;**&lt;/code&gt;, then you'll want to use the &lt;code&gt;use overload&lt;/code&gt; pragma, documented in &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ce9bc615c09fb69253d86037255e2b78a92d09" translate="yes" xml:space="preserve">
          <source>If you want to override a predefined function, such as open(), then you'll have to import the new definition from a different module. See &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;&quot;Overriding Built-in Functions&quot; in perlsub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945aa8bcea0076aea35d4a81e4ba840ff11ec82e" translate="yes" xml:space="preserve">
          <source>If you want to override a predefined function, such as open(), then you'll have to import the new definition from a different module. See &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;Overriding Built-in Functions in perlsub&lt;/a&gt;.</source>
          <target state="translated">Si desea anular una funci&amp;oacute;n predefinida, como open (), tendr&amp;aacute; que importar la nueva definici&amp;oacute;n desde un m&amp;oacute;dulo diferente. Consulte &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;Anulaci&amp;oacute;n de funciones integradas en perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa48921f25a631295f915526fc8a70c73af7fbf8" translate="yes" xml:space="preserve">
          <source>If you want to override the mapping of Hangul syllables, NFD and NFKD are not appropriate, since NFD and NFKD will decompose Hangul syllables before overriding. FCD may decompose Hangul syllables as the case may be.</source>
          <target state="translated">Si quieres anular el mapeo de las sílabas de Hangul,NFD y NFKD no son apropiados,ya que NFD y NFKD descompondrán las sílabas de Hangul antes de anularlas.La FCD puede descomponer las sílabas de Hangul según sea el caso.</target>
        </trans-unit>
        <trans-unit id="a2d7808a54f71b111b57ef9e68ce46ce86f7a686" translate="yes" xml:space="preserve">
          <source>If you want to package the Perl DLLs (one for WINS, one for ARMI), the headers, and the documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e047de81a230edfe4349188d5e8044f9337baa8" translate="yes" xml:space="preserve">
          <source>If you want to package the PerlApp sources:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab41e5eda5a02ddfb48b24411170b91dc8f23c72" translate="yes" xml:space="preserve">
          <source>If you want to package the perl.exe and miniperl.exe, you can use the perlexe.sis and miniperlexe.sis make targets. You also probably want the perllib.sis for the libraries and maybe even the perlapp.sis for the recognizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c827c3a5508b73a4c675d093f91220233b7dc11" translate="yes" xml:space="preserve">
          <source>If you want to pass arguments to the Perl subroutine, you can add strings to the &lt;code&gt;NULL&lt;/code&gt; -terminated &lt;code&gt;args&lt;/code&gt; list passed to</source>
          <target state="translated">Si quiere pasar argumentos a la subrutina Perl, puede agregar cadenas a la &lt;code&gt;NULL&lt;/code&gt; terminada en &lt;code&gt;args&lt;/code&gt; lista pasada a</target>
        </trans-unit>
        <trans-unit id="9fe959ed77f2d03a4c32411d66f89a3b169a2e6b" translate="yes" xml:space="preserve">
          <source>If you want to pass arguments to the Perl subroutine, you can add strings to the &lt;code&gt;NULL&lt;/code&gt;-terminated &lt;code&gt;args&lt;/code&gt; list passed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0b08e235edf0d26d308eb349b59ea3ef72cb9d" translate="yes" xml:space="preserve">
          <source>If you want to pass more than one array or hash into a function--or return them from it--and have them maintain their integrity, then you're going to have to use an explicit pass-by-reference. Before you do that, you need to understand references as detailed in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;. This section may not make much sense to you otherwise.</source>
          <target state="translated">Si desea pasar m&amp;aacute;s de una matriz o hash a una funci&amp;oacute;n, o devolverlos desde ella, y hacer que mantengan su integridad, entonces tendr&amp;aacute; que usar un paso por referencia expl&amp;iacute;cito. Antes de hacerlo, debe comprender las referencias detalladas en &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; . De lo contrario, es posible que esta secci&amp;oacute;n no tenga mucho sentido para usted.</target>
        </trans-unit>
        <trans-unit id="c8a70766df71ba2d4b4ce04954ec69dff30a7c0f" translate="yes" xml:space="preserve">
          <source>If you want to pass switches into your script, you can use one of the &lt;code&gt;Getopts&lt;/code&gt; modules or put a loop on the front like this:</source>
          <target state="translated">Si desea pasar conmutadores a su script, puede usar uno de los m&amp;oacute;dulos de &lt;code&gt;Getopts&lt;/code&gt; o poner un bucle en el frente como este:</target>
        </trans-unit>
        <trans-unit id="d40edffb04fe413946f227532d6ff1f352d417e2" translate="yes" xml:space="preserve">
          <source>If you want to port your own favourite C library for big numbers to the Math::BigInt interface, you can take any of the already existing modules as a rough guideline. You should really wrap up the latest Math::BigInt and Math::BigFloat testsuites with your module, and replace in them any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bd2c5192aedd065d255be14f3583448bb4e171" translate="yes" xml:space="preserve">
          <source>If you want to port your own favourite c-lib for big numbers to the Math::BigInt interface, you can take any of the already existing modules as a rough guideline. You should really wrap up the latest BigInt and BigFloat testsuites with your module, and replace in them any of the following:</source>
          <target state="translated">Si quieres portar tu propia c-lib favorita para grandes números a la interfaz de Math::BigInt,puedes tomar cualquiera de los módulos ya existentes como una guía aproximada.Realmente deberías terminar los últimos tests de BigInt y BigFloat con tu módulo,y reemplazar en ellos cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="edf16417cd93b7c19e3e333701fc067e37f8d0a5" translate="yes" xml:space="preserve">
          <source>If you want to position the file for &lt;a href=&quot;#sysread-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;sysread&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#syswrite-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;syswrite&lt;/code&gt;&lt;/a&gt;, don't use &lt;a href=&quot;#seek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;seek&lt;/code&gt;&lt;/a&gt;, because buffering makes its effect on the file's read-write position unpredictable and non-portable. Use &lt;a href=&quot;#sysseek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;sysseek&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376b22a241cce9ba252fd1c8a6df064f6b6eac08" translate="yes" xml:space="preserve">
          <source>If you want to position the file for &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt;, don't use &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, because buffering makes its effect on the file's read-write position unpredictable and non-portable. Use &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Si desea colocar el archivo para &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; , no use &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; , porque el almacenamiento en b&amp;uacute;fer hace que su efecto en la posici&amp;oacute;n de lectura-escritura del archivo sea impredecible y no port&amp;aacute;til. &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; lugar, utilice sysseek .</target>
        </trans-unit>
        <trans-unit id="ab53baa73269bc54f793e2d56860c5115ebd11f4" translate="yes" xml:space="preserve">
          <source>If you want to position the file for &lt;code&gt;&lt;a href=&quot;sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt;, don't use &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, because buffering makes its effect on the file's read-write position unpredictable and non-portable. Use &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Si desea colocar el archivo para &lt;code&gt;&lt;a href=&quot;sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; , no use &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; , porque el almacenamiento en b&amp;uacute;fer hace que su efecto en la posici&amp;oacute;n de lectura-escritura del archivo sea impredecible y no port&amp;aacute;til. &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; lugar, utilice sysseek .</target>
        </trans-unit>
        <trans-unit id="a0c3e6b22044730d55d9a0c06443157660dba6ef" translate="yes" xml:space="preserve">
          <source>If you want to preserve any existing contents, then you want to open the file in append mode. As in the shell, in Perl you use &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; to open an existing file in append mode. &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; creates the file if it does not already exist.</source>
          <target state="translated">Si desea preservar cualquier contenido existente, entonces desea abrir el archivo en modo anexar. Como en el shell, en Perl se usa &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; para abrir un archivo existente en modo adjuntar. &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; crea el archivo si a&amp;uacute;n no existe.</target>
        </trans-unit>
        <trans-unit id="17bd731415d5d66dc3d1ddceae18e6e16a628145" translate="yes" xml:space="preserve">
          <source>If you want to preserve the original hashes, copy one hash (&lt;code&gt;%hash1&lt;/code&gt; ) to a new hash (&lt;code&gt;%new_hash&lt;/code&gt; ), then add the keys from the other hash (&lt;code&gt;%hash2&lt;/code&gt; to the new hash. Checking that the key already exists in &lt;code&gt;%new_hash&lt;/code&gt; gives you a chance to decide what to do with the duplicates:</source>
          <target state="translated">Si desea conservar los hash originales, copie un hash ( &lt;code&gt;%hash1&lt;/code&gt; ) en un nuevo hash ( &lt;code&gt;%new_hash&lt;/code&gt; ), luego agregue las claves del otro hash ( &lt;code&gt;%hash2&lt;/code&gt; al nuevo hash. Verificando que la clave ya existe en &lt;code&gt;%new_hash&lt;/code&gt; te da la oportunidad de decidir qu&amp;eacute; hacer con los duplicados:</target>
        </trans-unit>
        <trans-unit id="63a3234ab9d086d5117080e1694d17f6063efd88" translate="yes" xml:space="preserve">
          <source>If you want to preserve the original hashes, copy one hash (&lt;code&gt;%hash1&lt;/code&gt;) to a new hash (&lt;code&gt;%new_hash&lt;/code&gt;), then add the keys from the other hash (&lt;code&gt;%hash2&lt;/code&gt; to the new hash. Checking that the key already exists in &lt;code&gt;%new_hash&lt;/code&gt; gives you a chance to decide what to do with the duplicates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f7b3c025841bfcdb1aab514c8e2d8e36fbc766" translate="yes" xml:space="preserve">
          <source>If you want to print the whole thing, though, you can't say</source>
          <target state="translated">Sin embargo,si quieres imprimirlo todo,no puedes decir</target>
        </trans-unit>
        <trans-unit id="a688a8a7ff8d4400e1c5937f70dbd49815b89f90" translate="yes" xml:space="preserve">
          <source>If you want to process all sections, even if they're not targeted for you, call this before you start parsing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f1e3a9ebfe45627e0241306de345142f514db8" translate="yes" xml:space="preserve">
          <source>If you want to provide config to the source you can use:</source>
          <target state="translated">Si desea proporcionar la configuración de la fuente que puede utilizar:</target>
        </trans-unit>
        <trans-unit id="9f3a66952ab51429c329502faae26a704977a338" translate="yes" xml:space="preserve">
          <source>If you want to read a gzip file a line at a time and have it respect the &lt;code&gt;$/&lt;/code&gt; variable (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; , or &lt;code&gt;$RS&lt;/code&gt; when &lt;code&gt;English&lt;/code&gt; is in use) see &lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO::Uncompress::Gunzip&lt;/a&gt;.</source>
          <target state="translated">Si desea leer un archivo gzip una l&amp;iacute;nea a la vez y tienen que respetar el &lt;code&gt;$/&lt;/code&gt; variable (o &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; , o &lt;code&gt;$RS&lt;/code&gt; cuando &lt;code&gt;English&lt;/code&gt; est&amp;aacute; en uso) ver &lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO :: :: Descomprimir Gunzip&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0160e4f5dbef362c1a03e51ec2cddded373c9cc7" translate="yes" xml:space="preserve">
          <source>If you want to read a gzip file a line at a time and have it respect the &lt;code&gt;$/&lt;/code&gt; variable (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt;, or &lt;code&gt;$RS&lt;/code&gt; when &lt;code&gt;English&lt;/code&gt; is in use) see &lt;a href=&quot;IO::Uncompress::Gunzip&quot;&gt;IO::Uncompress::Gunzip&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d31f53859a4168c72e90a2128210958319d4f50" translate="yes" xml:space="preserve">
          <source>If you want to read from a text file, first open it in read-only mode like this:</source>
          <target state="translated">Si quieres leer de un archivo de texto,primero ábrelo en modo de sólo lectura,así:</target>
        </trans-unit>
        <trans-unit id="87011e177a00565655904726c281857b45b374f1" translate="yes" xml:space="preserve">
          <source>If you want to rebase a personal topic branch, you will have to delete your existing topic branch and push as a new version of it. You can do this via the following formula (see the explanation about &lt;code&gt;refspec&lt;/code&gt;'s in the git push documentation for details) after you have rebased your branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ab6b15624972e8c18a42d8d83c1cd6a30cfb30" translate="yes" xml:space="preserve">
          <source>If you want to release a 'beta' or 'alpha' version of a module but don't want CPAN.pm to list it as most recent use an '_' after the regular version number followed by at least 2 digits, eg. 1.20_01. If you do this, the following idiom is recommended:</source>
          <target state="translated">Si quieres lanzar una versión 'beta' o 'alfa' de un módulo pero no quieres que CPAN.pm lo liste como el más reciente usa un '_' después del número de la versión regular seguido por al menos 2 dígitos,por ejemplo 1.20_01.Si haces esto,se recomienda el siguiente idioma:</target>
        </trans-unit>
        <trans-unit id="aec7d886a6e5c93bd394402ec290052fc195c585" translate="yes" xml:space="preserve">
          <source>If you want to remove the line terminator from your here-docs, use &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si desea eliminar el terminador de l&amp;iacute;nea de sus here-docs, use &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="272ecc9c9621686a80692664d0c1217296386dd2" translate="yes" xml:space="preserve">
          <source>If you want to remove the line terminator from your here-docs, use &lt;code&gt;chomp()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b69a42c3c7880bfb1671d398c3d54c0775a7ac" translate="yes" xml:space="preserve">
          <source>If you want to report a bug in Perl, or browse existing Perl bugs and patches, use the GitHub issue tracker at &lt;a href=&quot;https://github.com/perl/perl5/issues&quot;&gt;https://github.com/perl/perl5/issues&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db615c188722d8560c52e776e317416a34e011c1" translate="yes" xml:space="preserve">
          <source>If you want to report a bug in Perl, you must use the</source>
          <target state="translated">Si quiere reportar un error en Perl,debe usar el</target>
        </trans-unit>
        <trans-unit id="f2154f64aff6e9940c9fb796b1289c8d854d7ca5" translate="yes" xml:space="preserve">
          <source>If you want to represent quotation marks inside a quotation-mark-delimited field, escape them with backslashes (eg, &lt;code&gt;&quot;like \&quot;this\&quot;&quot;&lt;/code&gt; .</source>
          <target state="translated">Si desea representar comillas dentro de un campo delimitado por comillas, utilice el escape con barras invertidas (p. Ej., &lt;code&gt;&quot;like \&quot;this\&quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="addfd131b393c5c4b432b77bcfe15c8060aec494" translate="yes" xml:space="preserve">
          <source>If you want to represent quotation marks inside a quotation-mark-delimited field, escape them with backslashes (eg, &lt;code&gt;&quot;like \&quot;this\&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824f7654e0ed811f4acc48396871cdac5a94cdda" translate="yes" xml:space="preserve">
          <source>If you want to retain the UTF-x code points then in script form you might want to write:</source>
          <target state="translated">Si quieres retener los puntos de código UTF-x,entonces en forma de guión podrías querer escribir:</target>
        </trans-unit>
        <trans-unit id="2c2c9c1a65a810709ccd4ab8e9bc83e0091df0bc" translate="yes" xml:space="preserve">
          <source>If you want to retrieve the time at which the file was last read, written, or had its meta-data (owner, etc) changed, you use the &lt;b&gt;-A&lt;/b&gt;, &lt;b&gt;-M&lt;/b&gt;, or &lt;b&gt;-C&lt;/b&gt; file test operations as documented in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;. These retrieve the age of the file (measured against the start-time of your program) in days as a floating point number. Some platforms may not have all of these times. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for details. To retrieve the &quot;raw&quot; time in seconds since the epoch, you would call the stat function, then use &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;POSIX::strftime()&lt;/code&gt; to convert this into human-readable form.</source>
          <target state="translated">Si desea recuperar el momento en el que el archivo fue le&amp;iacute;do, escrito por &amp;uacute;ltima vez o se cambiaron sus metadatos (propietario, etc.), use las operaciones de prueba de archivos &lt;b&gt;-A&lt;/b&gt; , &lt;b&gt;-M&lt;/b&gt; o &lt;b&gt;-C&lt;/b&gt; como se documenta en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; . Estos recuperan la antig&amp;uuml;edad del archivo (comparada con la hora de inicio de su programa) en d&amp;iacute;as como un n&amp;uacute;mero de punto flotante. Es posible que algunas plataformas no tengan todos estos tiempos. Consulte &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; para m&amp;aacute;s detalles. Para recuperar el tiempo &quot;crudo&quot; en segundos desde la &amp;eacute;poca, debe llamar a la funci&amp;oacute;n stat, luego usar &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;POSIX::strftime()&lt;/code&gt; para convertir esto en una forma legible por humanos.</target>
        </trans-unit>
        <trans-unit id="3c0db177b448ef2ea4c3aecad4e767f4cc4d9798" translate="yes" xml:space="preserve">
          <source>If you want to retrieve the time at which the file was last read, written, or had its meta-data (owner, etc) changed, you use the &lt;b&gt;-A&lt;/b&gt;, &lt;b&gt;-M&lt;/b&gt;, or &lt;b&gt;-C&lt;/b&gt; file test operations as documented in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;. These retrieve the age of the file (measured against the start-time of your program) in days as a floating point number. Some platforms may not have all of these times. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for details. To retrieve the &quot;raw&quot; time in seconds since the epoch, you would call the stat function, then use &lt;code&gt;localtime()&lt;/code&gt;, &lt;code&gt;gmtime()&lt;/code&gt;, or &lt;code&gt;POSIX::strftime()&lt;/code&gt; to convert this into human-readable form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea86bc2e0842c32d086b82e0b936c78284136301" translate="yes" xml:space="preserve">
          <source>If you want to run an external command and still keep your Perl process going, look at a piped &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si desea ejecutar un comando externo y todav&amp;iacute;a mantener su proceso de Perl va, mirada a un hilo &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , o el &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3f78cfe37d3db27661bac9c838b06f1955541c1" translate="yes" xml:space="preserve">
          <source>If you want to run an external command and still keep your Perl process going, look at a piped &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;fork&lt;/code&gt;, or &lt;code&gt;system&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec243e8883915ce98e61a2fb629a6bec35df46c" translate="yes" xml:space="preserve">
          <source>If you want to run any of the tests yourself manually using e.g. valgrind, please note that by default perl &lt;b&gt;does not&lt;/b&gt; explicitly cleanup all the memory it has allocated (such as global memory arenas) but instead lets the exit() of the whole program &quot;take care&quot; of such allocations, also known as &quot;global destruction of objects&quot;.</source>
          <target state="translated">Si desea ejecutar alguna de las pruebas usted mismo manualmente utilizando, por ejemplo, valgrind, tenga en cuenta que, de forma predeterminada, perl &lt;b&gt;no&lt;/b&gt; limpia expl&amp;iacute;citamente toda la memoria que ha asignado (como las arenas de memoria global), sino que permite la salida () de todo el programa &quot; cuidar &quot;de dichas asignaciones, tambi&amp;eacute;n conocidas como&quot; destrucci&amp;oacute;n global de objetos &quot;.</target>
        </trans-unit>
        <trans-unit id="c579d4f4691b7da6dbe69f3dde05c84842ed87a2" translate="yes" xml:space="preserve">
          <source>If you want to run particular test files, set the &lt;code&gt;TEST_FILES&lt;/code&gt; variable. It is possible to use globbing with this mechanism.</source>
          <target state="translated">Si desea ejecutar archivos de prueba particulares, establezca la variable &lt;code&gt;TEST_FILES&lt;/code&gt; . Es posible utilizar globbing con este mecanismo.</target>
        </trans-unit>
        <trans-unit id="cab446873fde6bc4766b7caa4c1c83cdf5ad957d" translate="yes" xml:space="preserve">
          <source>If you want to see the command History, type an '&lt;b&gt;H&lt;/b&gt;':</source>
          <target state="translated">Si desea ver el historial de comandos, escriba una ' &lt;b&gt;H&lt;/b&gt; ':</target>
        </trans-unit>
        <trans-unit id="852c71f5265989b791fcb0bad50a31c13ad56ee6" translate="yes" xml:space="preserve">
          <source>If you want to see what perl is doing when parsing/lexing your code, you can use &lt;code&gt;BEGIN {}&lt;/code&gt; :</source>
          <target state="translated">Si desea ver lo que hace perl al analizar / lexizar su c&amp;oacute;digo, puede usar &lt;code&gt;BEGIN {}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5bcd47e1ec20a6f03629c4df1db050e464bbba10" translate="yes" xml:space="preserve">
          <source>If you want to see what perl is doing when parsing/lexing your code, you can use &lt;code&gt;BEGIN {}&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3175d2c86530c83d13669e65994d9eb74402053d" translate="yes" xml:space="preserve">
          <source>If you want to see what the parser/lexer is doing inside of &lt;code&gt;if&lt;/code&gt; blocks and the like you need to be a little trickier:</source>
          <target state="translated">Si desea ver lo que hace el analizador sint&amp;aacute;ctico / lexer dentro de los bloques &lt;code&gt;if&lt;/code&gt; y similares, debe ser un poco m&amp;aacute;s complicado:</target>
        </trans-unit>
        <trans-unit id="8bca41d076fff99126cd66f621ea4770f98d22fe" translate="yes" xml:space="preserve">
          <source>If you want to select on many filehandles, you may wish to write a subroutine like this:</source>
          <target state="translated">Si desea seleccionar en muchos manejos de archivos,puede escribir una subrutina como esta:</target>
        </trans-unit>
        <trans-unit id="933790916a521b582a0514fa93b65b7620fb02f6" translate="yes" xml:space="preserve">
          <source>If you want to separate your lines with something other than &lt;code&gt;\n&lt;/code&gt; then set &lt;code&gt;$Text::Wrap::separator&lt;/code&gt; to your preference. This replaces all newlines with &lt;code&gt;$Text::Wrap::separator&lt;/code&gt; . If you just want to preserve existing newlines but add new breaks with something else, set &lt;code&gt;$Text::Wrap::separator2&lt;/code&gt; instead.</source>
          <target state="translated">Si desea separar sus l&amp;iacute;neas con algo que no sea &lt;code&gt;\n&lt;/code&gt; , configure &lt;code&gt;$Text::Wrap::separator&lt;/code&gt; seg&amp;uacute;n sus preferencias. Esto reemplaza todas las l&amp;iacute;neas nuevas con &lt;code&gt;$Text::Wrap::separator&lt;/code&gt; . Si solo desea conservar las nuevas l&amp;iacute;neas existentes pero agregar nuevas rupturas con algo m&amp;aacute;s, configure &lt;code&gt;$Text::Wrap::separator2&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="60f1d3455cd48b5c9113f562dbd29843400fd015" translate="yes" xml:space="preserve">
          <source>If you want to separate your lines with something other than &lt;code&gt;\n&lt;/code&gt; then set &lt;code&gt;$Text::Wrap::separator&lt;/code&gt; to your preference. This replaces all newlines with &lt;code&gt;$Text::Wrap::separator&lt;/code&gt;. If you just want to preserve existing newlines but add new breaks with something else, set &lt;code&gt;$Text::Wrap::separator2&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22c0f1a9c1e2e9b3f3593f17d9d5d341e79a144" translate="yes" xml:space="preserve">
          <source>If you want to set &lt;code&gt;@ARGV&lt;/code&gt; to your own list of files, go right ahead. This sets &lt;code&gt;@ARGV&lt;/code&gt; to all plain text files if no &lt;code&gt;@ARGV&lt;/code&gt; was given:</source>
          <target state="translated">Si desea configurar &lt;code&gt;@ARGV&lt;/code&gt; en su propia lista de archivos, contin&amp;uacute;e. Esto establece &lt;code&gt;@ARGV&lt;/code&gt; en todos los archivos de texto sin formato si no se proporcion&amp;oacute; &lt;code&gt;@ARGV&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="003bfc7ab07433c173e20140a008ce04554b2602" translate="yes" xml:space="preserve">
          <source>If you want to set this to true, you should probably also set &lt;code&gt;no_whining&lt;/code&gt; or at least &lt;code&gt;no_errata_section&lt;/code&gt; to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4550a1aa8d843e1070b1e888de468d819935e7" translate="yes" xml:space="preserve">
          <source>If you want to set your encoding layers based on your locale environment variables, you can use the &lt;code&gt;:locale&lt;/code&gt; pseudo-layer. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c597fab938b142e9f257da003c8529a2b550cc0b" translate="yes" xml:space="preserve">
          <source>If you want to set your encoding layers based on your locale environment variables, you can use the &lt;code&gt;:locale&lt;/code&gt; tag. For example:</source>
          <target state="translated">Si desea configurar sus capas de codificaci&amp;oacute;n en funci&amp;oacute;n de las variables de entorno de su localidad, puede utilizar la etiqueta &lt;code&gt;:locale&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="58f89c017aa82e00c2db2aafdcc4c822b860fb98" translate="yes" xml:space="preserve">
          <source>If you want to smoke test Perl, install &lt;code&gt;Perl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56ce2ac72e38205347248835f6ba0461360176f" translate="yes" xml:space="preserve">
          <source>If you want to smoke test Perl, install &lt;code&gt;patch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51e8012104c70a0c9ac8e8247b5e7beb2e02a77" translate="yes" xml:space="preserve">
          <source>If you want to specify a full module name you use the '+' prefix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93a5a664c0fedc0848a47a9e0bdfdba8a57c6b9" translate="yes" xml:space="preserve">
          <source>If you want to specify perl options &lt;code&gt;-my_opts&lt;/code&gt; to the perl itself (as opposed to your program), use</source>
          <target state="translated">Si desea especificar las opciones de perl &lt;code&gt;-my_opts&lt;/code&gt; en el propio perl (a diferencia de su programa), use</target>
        </trans-unit>
        <trans-unit id="16a2b27e854284e5624b52325615871e56858329" translate="yes" xml:space="preserve">
          <source>If you want to specify the version of Perl, but don't care about the version of the module, pass &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for the module version:</source>
          <target state="translated">Si desea especificar la versi&amp;oacute;n de Perl, pero no le importa la versi&amp;oacute;n del m&amp;oacute;dulo, pase &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; para la versi&amp;oacute;n del m&amp;oacute;dulo:</target>
        </trans-unit>
        <trans-unit id="3e15a1112b03a30e2e96987ec4625cc5601ef943" translate="yes" xml:space="preserve">
          <source>If you want to specify the version of Perl, but don't care about the version of the module, pass &lt;code&gt;undef&lt;/code&gt; for the module version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4170c2908419d9f1f4a325cd881e413a4558b490" translate="yes" xml:space="preserve">
          <source>If you want to suppress man page installation for all modules you have to reconfigure Perl and tell it 'none' when it asks where to install man pages.</source>
          <target state="translated">Si quieres suprimir la instalación de la página de manual para todos los módulos tienes que reconfigurar Perl y decirle 'none' cuando te pregunte dónde instalar las páginas de manual.</target>
        </trans-unit>
        <trans-unit id="73be2d5223229972e63c46363d25a8b4ecd5d388" translate="yes" xml:space="preserve">
          <source>If you want to take advantage of this new implicit dereferencing behavior, go right ahead: it makes code easier on the eye and wrist. Just understand that older releases will choke on it during compilation. Whenever you make use of something that works only in some given release of Perl and later, but not earlier, you should place a prominent</source>
          <target state="translated">Si quieres aprovechar este nuevo comportamiento implícito de desreferenciación,adelante:facilita el código en el ojo y en la muñeca.Sólo entiendan que las versiones más antiguas se ahogarán con él durante la compilación.Siempre que hagas uso de algo que funciona sólo en alguna versión de Perl y más tarde,pero no antes,debes colocar un prominente</target>
        </trans-unit>
        <trans-unit id="57200b37088a74d0cf2864498f9f2df2310c106a" translate="yes" xml:space="preserve">
          <source>If you want to take into account the &lt;a href=&quot;bytes&quot;&gt;bytes&lt;/a&gt; pragma, use &lt;code&gt;&lt;a href=&quot;#DO_UTF8&quot;&gt;&quot;DO_UTF8&quot;&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1677e0d939fbca31e3c5c86eaef838b1e761cee" translate="yes" xml:space="preserve">
          <source>If you want to take into account the &lt;a href=&quot;bytes&quot;&gt;bytes&lt;/a&gt; pragma, use &lt;code&gt;&lt;a href=&quot;#DO_UTF8&quot;&gt;DO_UTF8&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Si desea tener en cuenta el pragma de &lt;a href=&quot;bytes&quot;&gt;bytes&lt;/a&gt; , utilice &lt;code&gt;&lt;a href=&quot;#DO_UTF8&quot;&gt;DO_UTF8&lt;/a&gt;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="3a26b59839e0fcf13a53cc201bc8166040a47a6c" translate="yes" xml:space="preserve">
          <source>If you want to test what the limits are, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8af06e2253191bf1cfa1761503b16d4281bf21" translate="yes" xml:space="preserve">
          <source>If you want to trap errors when loading an XS module, some problems with the binary interface (such as Perl version skew) may be fatal even with &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; unless &lt;code&gt;$ENV{PERL_DL_NONLAZY}&lt;/code&gt; is set. See &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">Si desea capturar errores al cargar un m&amp;oacute;dulo XS, algunos problemas con la interfaz binaria (como el sesgo de la versi&amp;oacute;n de Perl) pueden ser fatales incluso con &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; a menos que se establezca &lt;code&gt;$ENV{PERL_DL_NONLAZY}&lt;/code&gt; . Ver &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7dc2a0aef2f5b8c2b438b365b49a4c2f0d40f6ac" translate="yes" xml:space="preserve">
          <source>If you want to trap errors when loading an XS module, some problems with the binary interface (such as Perl version skew) may be fatal even with &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; unless &lt;code&gt;$ENV{PERL_DL_NONLAZY}&lt;/code&gt; is set. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">Si desea capturar errores al cargar un m&amp;oacute;dulo XS, algunos problemas con la interfaz binaria (como el sesgo de la versi&amp;oacute;n de Perl) pueden ser fatales incluso con &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; a menos que se establezca &lt;code&gt;$ENV{PERL_DL_NONLAZY}&lt;/code&gt; . Ver &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e07434ddfb0dc6b8d6999cae38187552629bd142" translate="yes" xml:space="preserve">
          <source>If you want to trap errors when loading an XS module, some problems with the binary interface (such as Perl version skew) may be fatal even with &lt;code&gt;eval&lt;/code&gt; unless &lt;code&gt;$ENV{PERL_DL_NONLAZY}&lt;/code&gt; is set. See &lt;a href=&quot;perlrun#PERL_DL_NONLAZY&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ffd07b12749a1692d47d579873dc74d6c4dfaf" translate="yes" xml:space="preserve">
          <source>If you want to try to install a distribution by yourself, resolving all dependencies on your own, you follow one of two possible build paths.</source>
          <target state="translated">Si quieres intentar instalar una distribución por ti mismo,resolviendo todas las dependencias por tu cuenta,sigues uno de los dos posibles caminos de construcción.</target>
        </trans-unit>
        <trans-unit id="c7b6e4ceeebb57e710804bd7d8e9ec8adbeff637" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;#alarm-SECONDS&quot;&gt;&lt;code&gt;alarm&lt;/code&gt;&lt;/a&gt; to time out a system call you need to use an &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; pair. You can't rely on the alarm causing the system call to fail with &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;EINTR&lt;/code&gt; because Perl sets up signal handlers to restart system calls on some systems. Using &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; always works, modulo the caveats given in &lt;a href=&quot;perlipc#Signals&quot;&gt;&quot;Signals&quot; in perlipc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe14747549d8ad4516b4e89ba086fe45d5bc952" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;$.&lt;/code&gt; , you can reduce it to a simple one-liner, like one of these:</source>
          <target state="translated">Si desea utilizar &lt;code&gt;$.&lt;/code&gt; , puede reducirlo a una simple frase, como una de estas:</target>
        </trans-unit>
        <trans-unit id="82a547affa563deb5ba9f50355b601f3dc49971a" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;$.&lt;/code&gt;, you can reduce it to a simple one-liner, like one of these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638caf8fdb384503ed24e0af4c2fa1fdaedcfe89" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; to time out a system call you need to use an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; pair. You can't rely on the alarm causing the system call to fail with &lt;code&gt;$!&lt;/code&gt; set to &lt;code&gt;EINTR&lt;/code&gt; because Perl sets up signal handlers to restart system calls on some systems. Using &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; always works, modulo the caveats given in &lt;a href=&quot;../perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt;.</source>
          <target state="translated">Si desea usar la &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a para detener una llamada del sistema, debe usar un par &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; . &amp;iexcl;No puede confiar en la alarma que hace que la llamada al sistema falle con &lt;code&gt;$!&lt;/code&gt; establecido en &lt;code&gt;EINTR&lt;/code&gt; porque Perl configura controladores de se&amp;ntilde;ales para reiniciar las llamadas al sistema en algunos sistemas. Usar &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; siempre funciona, modulo las advertencias dadas en &lt;a href=&quot;../perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47fc081d4f98f1098211a1c78312dbb51873804c" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; to time out a system call you need to use an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; pair. You can't rely on the alarm causing the system call to fail with &lt;code&gt;$!&lt;/code&gt; set to &lt;code&gt;EINTR&lt;/code&gt; because Perl sets up signal handlers to restart system calls on some systems. Using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; always works, modulo the caveats given in &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt;.</source>
          <target state="translated">Si desea usar la &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a para detener una llamada del sistema, debe usar un par &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; . &amp;iexcl;No puede confiar en la alarma que hace que la llamada al sistema falle con &lt;code&gt;$!&lt;/code&gt; establecido en &lt;code&gt;EINTR&lt;/code&gt; porque Perl configura controladores de se&amp;ntilde;ales para reiniciar las llamadas al sistema en algunos sistemas. Usar &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; siempre funciona, modulo las advertencias dadas en &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b5d0b0984ed944888f7b73a2ab2ac582618153b1" translate="yes" xml:space="preserve">
          <source>If you want to use Perl on a non-z/OS EBCDIC machine, please let us know at &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a0ee4afc73cc3c28bb4ee34fc5e5c78c608e7d" translate="yes" xml:space="preserve">
          <source>If you want to use Perl on a non-z/OS EBCDIC machine, please let us know by sending mail to perlbug@perl.org</source>
          <target state="translated">Si desea utilizar Perl en una máquina EBCDIC que no sea Z/OS,por favor háganoslo saber enviando un correo a perlbug@perl.org</target>
        </trans-unit>
        <trans-unit id="e5b580ca1f65ec0f5a604fbeb668e8741070d520" translate="yes" xml:space="preserve">
          <source>If you want to use Perl on the Hurd, I recommend using the Debian GNU/Hurd distribution ( see &lt;a href=&quot;http://www.debian.org/&quot;&gt;http://www.debian.org/&lt;/a&gt; ), even if an official, stable release has not yet been made. The old &quot;gnu-0.2&quot; binary distribution will most certainly have additional problems.</source>
          <target state="translated">Si desea utilizar Perl en Hurd, le recomiendo utilizar la distribuci&amp;oacute;n Debian GNU / Hurd (consulte &lt;a href=&quot;http://www.debian.org/&quot;&gt;http://www.debian.org/&lt;/a&gt; ), incluso si todav&amp;iacute;a no se ha realizado una versi&amp;oacute;n oficial y estable. La antigua distribuci&amp;oacute;n binaria &quot;gnu-0.2&quot; seguramente tendr&amp;aacute; problemas adicionales.</target>
        </trans-unit>
        <trans-unit id="189532095e3e00417c9441e09145ca9ef2976e21" translate="yes" xml:space="preserve">
          <source>If you want to use Perl on the Hurd, I recommend using the Debian GNU/Hurd distribution ( see &lt;a href=&quot;https://www.debian.org/&quot;&gt;https://www.debian.org/&lt;/a&gt; ), even if an official, stable release has not yet been made. The old &quot;gnu-0.2&quot; binary distribution will most certainly have additional problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7811171164463a43cee04445a18ab7a656878768" translate="yes" xml:space="preserve">
          <source>If you want to use a module, try the &lt;code&gt;uniq&lt;/code&gt; function from &lt;a href=&quot;List::MoreUtils&quot;&gt;List::MoreUtils&lt;/a&gt;. In list context it returns the unique elements, preserving their order in the list. In scalar context, it returns the number of unique elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7687d514ed5fdcc15efde5d3bf9ba63b53f53add" translate="yes" xml:space="preserve">
          <source>If you want to use a module, try the &lt;code&gt;uniq&lt;/code&gt; function from &lt;a href=&quot;http://search.cpan.org/perldoc/List::MoreUtils&quot;&gt;List::MoreUtils&lt;/a&gt;. In list context it returns the unique elements, preserving their order in the list. In scalar context, it returns the number of unique elements.</source>
          <target state="translated">Si desea utilizar un m&amp;oacute;dulo, pruebe la funci&amp;oacute;n &lt;code&gt;uniq&lt;/code&gt; de &lt;a href=&quot;http://search.cpan.org/perldoc/List::MoreUtils&quot;&gt;List :: MoreUtils&lt;/a&gt; . En el contexto de la lista, devuelve los elementos &amp;uacute;nicos, conservando su orden en la lista. En contexto escalar, devuelve el n&amp;uacute;mero de elementos &amp;uacute;nicos.</target>
        </trans-unit>
        <trans-unit id="655bd3463f5ce3b5ada699426719c6ddc69d4f2a" translate="yes" xml:space="preserve">
          <source>If you want to use multiple patterns, e.g. &lt;code&gt;bsd_glob(&quot;a* b*&quot;)&lt;/code&gt; , you should probably throw them in a set as in &lt;code&gt;bsd_glob(&quot;{a*,b*}&quot;)&lt;/code&gt; . This is because the argument to bsd_glob() isn't subjected to parsing by the C shell. Remember that you can use a backslash to escape things.</source>
          <target state="translated">Si desea utilizar varios patrones, por ejemplo, &lt;code&gt;bsd_glob(&quot;a* b*&quot;)&lt;/code&gt; , probablemente deber&amp;iacute;a colocarlos en un conjunto como en &lt;code&gt;bsd_glob(&quot;{a*,b*}&quot;)&lt;/code&gt; . Esto se debe a que el argumento de bsd_glob () no est&amp;aacute; sujeto a an&amp;aacute;lisis por el shell C. Recuerde que puede usar una barra invertida para escapar de las cosas.</target>
        </trans-unit>
        <trans-unit id="de3b637ffc15b7fdc6a8a524ee7e6cebe2311614" translate="yes" xml:space="preserve">
          <source>If you want to use multiple patterns, e.g. &lt;code&gt;bsd_glob(&quot;a* b*&quot;)&lt;/code&gt;, you should probably throw them in a set as in &lt;code&gt;bsd_glob(&quot;{a*,b*}&quot;)&lt;/code&gt;. This is because the argument to bsd_glob() isn't subjected to parsing by the C shell. Remember that you can use a backslash to escape things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaf83327da114b41b8c24aa71d08a4f5617620d" translate="yes" xml:space="preserve">
          <source>If you want to use non-ASCII bytes (outside the bytes 0x00..0x7f) in the &quot;source code&quot; of your code, to be portable you have to be explicit about what bytes they are. Someone might for example be using your code under a UTF-8 locale, in which case random native bytes might be illegal (&quot;Malformed UTF-8 ...&quot;) This means that for example embedding ISO 8859-1 bytes beyond 0x7f into your strings might cause trouble later. If the bytes are native 8-bit bytes, you can use the &lt;code&gt;bytes&lt;/code&gt; pragma. If the bytes are in a string (regular expressions being curious strings), you can often also use the &lt;code&gt;\xHH&lt;/code&gt; or more portably, the &lt;code&gt;\N{U+HH}&lt;/code&gt; notations instead of embedding the bytes as-is. If you want to write your code in UTF-8, you can use &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;.</source>
          <target state="translated">Si desea utilizar bytes que no son ASCII (fuera de los bytes 0x00..0x7f) en el &quot;c&amp;oacute;digo fuente&quot; de su c&amp;oacute;digo, para ser port&amp;aacute;til, debe ser expl&amp;iacute;cito acerca de qu&amp;eacute; bytes son. Alguien podr&amp;iacute;a, por ejemplo, estar usando su c&amp;oacute;digo en una configuraci&amp;oacute;n regional UTF-8, en cuyo caso los bytes nativos aleatorios podr&amp;iacute;an ser ilegales (&quot;UTF-8 con formato incorrecto ...&quot;). Esto significa que, por ejemplo, incrustar bytes ISO 8859-1 m&amp;aacute;s all&amp;aacute; de 0x7f en su las cadenas pueden causar problemas m&amp;aacute;s adelante. Si los bytes son bytes nativos de 8 bits, puede usar el pragma de &lt;code&gt;bytes&lt;/code&gt; . Si los bytes est&amp;aacute;n en una cadena (las expresiones regulares son cadenas curiosas), a menudo tambi&amp;eacute;n puede usar las &lt;code&gt;\xHH&lt;/code&gt; o de manera m&amp;aacute;s port&amp;aacute;til, &lt;code&gt;\N{U+HH}&lt;/code&gt; lugar de incrustar los bytes como est&amp;aacute;n. Si desea escribir su c&amp;oacute;digo en UTF-8, puede usar &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bfe339f2912f8f17fbf2b42472a9d509e3a576bf" translate="yes" xml:space="preserve">
          <source>If you want to use the same literal digits (644) in Perl, you have to tell Perl to treat them as octal numbers either by prefixing the digits with a &lt;code&gt;0&lt;/code&gt; or using &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Si desea usar los mismos d&amp;iacute;gitos literales (644) en Perl, debe decirle a Perl que los trate como n&amp;uacute;meros octales, ya sea prefijando los d&amp;iacute;gitos con un &lt;code&gt;0&lt;/code&gt; o usando &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1dae8918eb32c3f3b5353faf9a6fd2771293c0e6" translate="yes" xml:space="preserve">
          <source>If you want to use the same literal digits (644) in Perl, you have to tell Perl to treat them as octal numbers either by prefixing the digits with a &lt;code&gt;0&lt;/code&gt; or using &lt;code&gt;oct&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee36968e514e749df3ac1a70b3903aee1ab0ec1b" translate="yes" xml:space="preserve">
          <source>If you want to use threads, you should primarily use the Perl 5.8.0 threads model by running Configure with -Duseithreads.</source>
          <target state="translated">Si quieres usar hilos,debes usar principalmente el modelo de hilos de Perl 5.8.0 ejecutando Configurar con -Duseithreads.</target>
        </trans-unit>
        <trans-unit id="3a5e52fc579dc6791582e6cfe54da362246b660d" translate="yes" xml:space="preserve">
          <source>If you want to work with comma-separated values, don't do this since that format is a bit more complicated. Use one of the modules that handle that format, such as &lt;a href=&quot;Text::CSV&quot;&gt;Text::CSV&lt;/a&gt;, &lt;a href=&quot;Text::CSV_XS&quot;&gt;Text::CSV_XS&lt;/a&gt;, or &lt;a href=&quot;Text::CSV_PP&quot;&gt;Text::CSV_PP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b79aac4ab0e44b3e5cf20ea8795f9b26be612e" translate="yes" xml:space="preserve">
          <source>If you want to work with comma-separated values, don't do this since that format is a bit more complicated. Use one of the modules that handle that format, such as &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text::CSV&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text::CSV_XS&lt;/a&gt;, or &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_PP&quot;&gt;Text::CSV_PP&lt;/a&gt;.</source>
          <target state="translated">Si desea trabajar con valores separados por comas, no haga esto ya que ese formato es un poco m&amp;aacute;s complicado. Utilice uno de los m&amp;oacute;dulos que manejan ese formato, como &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text :: CSV&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text :: CSV_XS&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_PP&quot;&gt;Text :: CSV_PP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1eaaa5db8078515a0b75d0e6992dfcf80e5ff6b" translate="yes" xml:space="preserve">
          <source>If you want to work with formatted dates, the &lt;a href=&quot;Date::Manip&quot;&gt;Date::Manip&lt;/a&gt;, &lt;a href=&quot;Date::Calc&quot;&gt;Date::Calc&lt;/a&gt;, or &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; modules can help you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37acc7e93925635a2960bac98f19ec762c55738f" translate="yes" xml:space="preserve">
          <source>If you want to work with formatted dates, the &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Manip&quot;&gt;Date::Manip&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Calc&quot;&gt;Date::Calc&lt;/a&gt;, or &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; modules can help you.</source>
          <target state="translated">Si desea trabajar con fechas formateadas, los m&amp;oacute;dulos &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Manip&quot;&gt;Date :: Manip&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Calc&quot;&gt;Date :: Calc&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; pueden ayudarlo.</target>
        </trans-unit>
        <trans-unit id="c337db840462e094257c46f34c19710018f93799" translate="yes" xml:space="preserve">
          <source>If you want to write to an existing SV's buffer and set its value to a string, use SvPV_force() or one of its variants to force the SV to be a PV. This will remove any of various types of non-stringness from the SV while preserving the content of the SV in the PV. This can be used, for example, to append data from an API function to a buffer without extra copying:</source>
          <target state="translated">Si desea escribir en el búfer de una SV existente y establecer su valor en una cadena,utilice SvPV_force()o una de sus variantes para forzar a la SV a ser una PV.Esto eliminará cualquiera de los distintos tipos de no fuerza de la SV,preservando al mismo tiempo el contenido de la SV en la PV.Esto puede utilizarse,por ejemplo,para añadir datos de una función de la API a un búfer sin necesidad de hacer copias adicionales:</target>
        </trans-unit>
        <trans-unit id="17fab6cd5cfc4d3a8699ee4d492a9132990d5dbf" translate="yes" xml:space="preserve">
          <source>If you want to zap all predefined aliases, you can use</source>
          <target state="translated">Si quieres eliminar todos los alias predefinidos,puedes usar</target>
        </trans-unit>
        <trans-unit id="6dad17422598919d77ad32018e1ee73ac029ac1c" translate="yes" xml:space="preserve">
          <source>If you want your code to be portable, your format (&lt;code&gt;fmt&lt;/code&gt; ) argument should use only the conversion specifiers defined by the ANSI C standard (C89, to play safe). These are &lt;code&gt;aAbBcdHIjmMpSUwWxXyYZ%&lt;/code&gt; . But even then, the &lt;b&gt;results&lt;/b&gt; of some of the conversion specifiers are non-portable. For example, the specifiers &lt;code&gt;aAbBcpZ&lt;/code&gt; change according to the locale settings of the user, and both how to set locales (the locale names) and what output to expect are non-standard. The specifier &lt;code&gt;c&lt;/code&gt; changes according to the timezone settings of the user and the timezone computation rules of the operating system. The &lt;code&gt;Z&lt;/code&gt; specifier is notoriously unportable since the names of timezones are non-standard. Sticking to the numeric specifiers is the safest route.</source>
          <target state="translated">Si desea que su c&amp;oacute;digo sea port&amp;aacute;til, su argumento de formato ( &lt;code&gt;fmt&lt;/code&gt; ) debe usar solo los especificadores de conversi&amp;oacute;n definidos por el est&amp;aacute;ndar ANSI C (C89, para jugar seguro). Estos son &lt;code&gt;aAbBcdHIjmMpSUwWxXyYZ%&lt;/code&gt; . Pero incluso entonces, los &lt;b&gt;resultados&lt;/b&gt; de algunos de los especificadores de conversi&amp;oacute;n no son port&amp;aacute;tiles. Por ejemplo, los especificadores &lt;code&gt;aAbBcpZ&lt;/code&gt; cambian de acuerdo con la configuraci&amp;oacute;n regional del usuario, y tanto la forma de establecer las configuraciones regionales (los nombres de las configuraciones regionales) como la salida que se espera no son est&amp;aacute;ndar. El especificador &lt;code&gt;c&lt;/code&gt; cambia seg&amp;uacute;n la configuraci&amp;oacute;n de la zona horaria del usuario y las reglas de c&amp;aacute;lculo de la zona horaria del sistema operativo. La &lt;code&gt;Z&lt;/code&gt; El especificador es notoriamente importable ya que los nombres de las zonas horarias no son est&amp;aacute;ndar. Cumplir con los especificadores num&amp;eacute;ricos es la ruta m&amp;aacute;s segura.</target>
        </trans-unit>
        <trans-unit id="45c7504bca4d1a8d8abed6fce6e884966dc05bc6" translate="yes" xml:space="preserve">
          <source>If you want your code to be portable, your format (&lt;code&gt;fmt&lt;/code&gt;) argument should use only the conversion specifiers defined by the ANSI C standard (C89, to play safe). These are &lt;code&gt;aAbBcdHIjmMpSUwWxXyYZ%&lt;/code&gt;. But even then, the &lt;b&gt;results&lt;/b&gt; of some of the conversion specifiers are non-portable. For example, the specifiers &lt;code&gt;aAbBcpZ&lt;/code&gt; change according to the locale settings of the user, and both how to set locales (the locale names) and what output to expect are non-standard. The specifier &lt;code&gt;c&lt;/code&gt; changes according to the timezone settings of the user and the timezone computation rules of the operating system. The &lt;code&gt;Z&lt;/code&gt; specifier is notoriously unportable since the names of timezones are non-standard. Sticking to the numeric specifiers is the safest route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8922cb8873f110b4ceb1333b3f31e99ca5b2eb1" translate="yes" xml:space="preserve">
          <source>If you want your encoding to work with &lt;a href=&quot;../encoding&quot;&gt;encoding&lt;/a&gt; pragma, you should also implement the method below.</source>
          <target state="translated">Si desea que su codificaci&amp;oacute;n funcione con pragma de &lt;a href=&quot;../encoding&quot;&gt;codificaci&amp;oacute;n&lt;/a&gt; , tambi&amp;eacute;n debe implementar el m&amp;eacute;todo siguiente.</target>
        </trans-unit>
        <trans-unit id="f0a7770b35604635306837054c149681539eca02" translate="yes" xml:space="preserve">
          <source>If you want your encoding to work with &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; pragma, you should also implement the method below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbf6500eb6902acebc3435f4b4dd55c522837bc" translate="yes" xml:space="preserve">
          <source>If you want your here-docs to be indented with the rest of the code, use the &lt;code&gt;&amp;lt;&amp;lt;~FOO&lt;/code&gt; construct described under &lt;a href=&quot;#Indented-Here-docs&quot;&gt;&quot;Indented Here-docs&quot;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7210c4e7ce82b46e9e62a14e14a71ab868752cc" translate="yes" xml:space="preserve">
          <source>If you want your here-docs to be indented with the rest of the code, you'll need to remove leading whitespace from each line manually:</source>
          <target state="translated">Si quieres que tus documentos estén marcados con el resto del código,tendrás que eliminar manualmente los espacios en blanco de cada línea:</target>
        </trans-unit>
        <trans-unit id="eb763454ad4db2bd6193f7e99d444faca44a82eb" translate="yes" xml:space="preserve">
          <source>If you want your program to be compatible with versions of Perl before 5.20, you must use &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings FATAL =&amp;gt; 'all';&lt;/code&gt; instead. (In previous versions of Perl, the behavior of the statements &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings 'FATAL';&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings 'NONFATAL';&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'FATAL';&lt;/code&gt; was unspecified; they did not behave as if they included the &lt;code&gt;=&amp;gt; 'all'&lt;/code&gt; portion. As of 5.20, they do.)</source>
          <target state="translated">Si desea que su programa sea compatible con versiones de Perl anteriores a la 5.20, debe &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings FATAL =&amp;gt; 'all';&lt;/code&gt; en lugar. (En las versiones anteriores de Perl, el comportamiento de los estados &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings 'FATAL';&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings 'NONFATAL';&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'FATAL';&lt;/code&gt; no fue especificado, que no se comportan como si incluyeran el &lt;code&gt;=&amp;gt; 'all'&lt;/code&gt; la parte . A partir del 5.20, lo hacen).</target>
        </trans-unit>
        <trans-unit id="2539f4ee77683fe9463e9a882a260d320b1f9535" translate="yes" xml:space="preserve">
          <source>If you want your program to be compatible with versions of Perl before 5.20, you must use &lt;code&gt;use warnings FATAL =&amp;gt; 'all';&lt;/code&gt; instead. (In previous versions of Perl, the behavior of the statements &lt;code&gt;use warnings 'FATAL';&lt;/code&gt;, &lt;code&gt;use warnings 'NONFATAL';&lt;/code&gt; and &lt;code&gt;no warnings 'FATAL';&lt;/code&gt; was unspecified; they did not behave as if they included the &lt;code&gt;=&amp;gt; 'all'&lt;/code&gt; portion. As of 5.20, they do.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d68917c192fee56b1141df74b8f16f9fa5100fe" translate="yes" xml:space="preserve">
          <source>If you want, you may make low-level pipe() and fork() syscalls to stitch this together by hand. This example only talks to itself, but you could reopen the appropriate handles to STDIN and STDOUT and call other processes. (The following example lacks proper error checking.)</source>
          <target state="translated">Si quieres,puedes hacer llamadas de sistema de tubo()y tenedor()de bajo nivel para coser esto a mano.Este ejemplo sólo habla por sí mismo,pero podrías reabrir las manijas apropiadas para STDIN y STDOUT y llamar a otros procesos.(El siguiente ejemplo carece de una adecuada comprobación de errores).</target>
        </trans-unit>
        <trans-unit id="9a78398c052f882736bece8b1553a1b8e0dc056b" translate="yes" xml:space="preserve">
          <source>If you wanted just to append to a row, you'd have to do something a bit funnier looking:</source>
          <target state="translated">Si quisieras sólo añadir una fila,tendrías que hacer algo con un aspecto un poco más divertido:</target>
        </trans-unit>
        <trans-unit id="2260da4124856b0020df29775382e24cb7c28087" translate="yes" xml:space="preserve">
          <source>If you wanted text and not lines, you would use</source>
          <target state="translated">Si quisieras texto y no líneas,usarías</target>
        </trans-unit>
        <trans-unit id="b649b444ce3825b2b868566f3609222a2cd25baa" translate="yes" xml:space="preserve">
          <source>If you wanted the commas preserved as separate fields (i.e. like split does if your split pattern has capturing parentheses), you would just make the last parameter undefined (or remove it).</source>
          <target state="translated">Si quisiera que las comas se conservaran como campos separados (es decir,como lo hace Split si su patrón de separación tiene paréntesis de captura),sólo tendría que hacer que el último parámetro no se definiera (o eliminarlo).</target>
        </trans-unit>
        <trans-unit id="5fba67ea1fbf1509f7d61f0bae5321559a412330" translate="yes" xml:space="preserve">
          <source>If you wanted to do the same thing for lines, you wouldn't need a regular expression:</source>
          <target state="translated">Si quisieras hacer lo mismo con las líneas,no necesitarías una expresión regular:</target>
        </trans-unit>
        <trans-unit id="ed640c7d7a4ae2cd65ac815fdaa4ce3af7479470" translate="yes" xml:space="preserve">
          <source>If you wanted to have a $ref_to_AoA variable as a reference to an array, you'd have to do something like this:</source>
          <target state="translated">Si quisieras tener una variable $ref_to_AoA como referencia a un array,tendrías que hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="fed8c5d580fcbca1e699420a58d9ad3cd67321fd" translate="yes" xml:space="preserve">
          <source>If you wanted to keep track of subscripts, you might do this:</source>
          <target state="translated">Si quisieras hacer un seguimiento de las suscripciones,podrías hacer esto:</target>
        </trans-unit>
        <trans-unit id="fbf69379e2b3dc67cd59111850ee63e9c65dd9db" translate="yes" xml:space="preserve">
          <source>If you wanted to see the inverse tables, you would first have to sort on the desired numbers column as in recipes 4, 5 or 6, then take the output of the first numbers column.</source>
          <target state="translated">Si quisieras ver las tablas inversas,primero tendrías que ordenar en la columna de los números deseados como en las recetas 4,5 o 6,y luego tomar la salida de la primera columna de números.</target>
        </trans-unit>
        <trans-unit id="1d598a9db20ad75da95def7772f5c1aab9645a1d" translate="yes" xml:space="preserve">
          <source>If you were into Schwartzian Transforms, you would probably have selected map for that</source>
          <target state="translated">Si estuvieras en las Transformaciones de Schwartzian,probablemente habrías seleccionado el mapa para eso</target>
        </trans-unit>
        <trans-unit id="ad840be29267c1ff305e523c8e88cf5317d35dc5" translate="yes" xml:space="preserve">
          <source>If you were to set &lt;code&gt;$b[3] = 4&lt;/code&gt; , then instead of reporting that &quot;a and b are deep copies of each other&quot;, it now reports that &lt;code&gt;&quot;b smartmatches in a&quot;&lt;/code&gt; . That's because the corresponding position in &lt;code&gt;@a&lt;/code&gt; contains an array that (eventually) has a 4 in it.</source>
          <target state="translated">Si tuviera que establecer &lt;code&gt;$b[3] = 4&lt;/code&gt; , en lugar de informar que &quot;ayb son copias profundas entre s&amp;iacute;&quot;, ahora informa que &lt;code&gt;&quot;b smartmatches in a&quot;&lt;/code&gt; . Eso es porque la posici&amp;oacute;n correspondiente en &lt;code&gt;@a&lt;/code&gt; contiene una matriz que (eventualmente) tiene un 4 en ella.</target>
        </trans-unit>
        <trans-unit id="e625042d34a802ff63347451c799c769cd7bb028" translate="yes" xml:space="preserve">
          <source>If you were to set &lt;code&gt;$b[3] = 4&lt;/code&gt;, then instead of reporting that &quot;a and b are deep copies of each other&quot;, it now reports that &lt;code&gt;&quot;b smartmatches in a&quot;&lt;/code&gt;. That's because the corresponding position in &lt;code&gt;@a&lt;/code&gt; contains an array that (eventually) has a 4 in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e66b6a4d3408c5b81e396702004bd84b8fbf9d" translate="yes" xml:space="preserve">
          <source>If you wish to compile with the Socket extension, you need to have the TCP/IP toolkit, and you need to make sure that -lsocket locates the correct copy of socket3r.lib. Beware that the Watcom compiler ships with a stub version of socket3r.lib which has very little functionality. Also beware the order in which wlink searches directories for libraries. You may have /usr/lib/socket3r.lib pointing to the correct library, but wlink may pick up /usr/watcom/10.6/usr/lib/socket3r.lib instead. Make sure they both point to the correct library, that is, /usr/tcptk/current/usr/lib/socket3r.lib.</source>
          <target state="translated">Si desea compilar con la extensión Socket,necesita tener el conjunto de herramientas TCP/IP,y debe asegurarse de que -lsocket localice la copia correcta de socket3r.lib.Tenga cuidado de que el compilador Watcom se envía con una versión de socket3r.lib que tiene muy poca funcionalidad.También hay que tener cuidado con el orden en el que wlink busca en los directorios de las bibliotecas.Puede tener /usr/lib/socket3r.lib apuntando a la biblioteca correcta,pero wlink puede recoger /usr/watcom/10.6/usr/lib/socket3r.lib en su lugar.Asegúrate de que ambos apuntan a la biblioteca correcta,es decir,/usr/tcptk/current/usr/lib/socket3r.lib.</target>
        </trans-unit>
        <trans-unit id="743a9842bd7eb1c587a8ceb73e47cc40eff3e0ec" translate="yes" xml:space="preserve">
          <source>If you wish to install perl versions for all architectures (68020, mips, sparc and 386) run:</source>
          <target state="translated">Si desea instalar versiones de perl para todas las arquitecturas (68020,mips,sparc y 386)ejecute:</target>
        </trans-unit>
        <trans-unit id="8c3f20eaf91a5deff73dd9c45659c91402df0ac2" translate="yes" xml:space="preserve">
          <source>If you wish to supply an alternative debugger for Perl to run, invoke your script with a colon and a package argument given to the &lt;b&gt;-d&lt;/b&gt; flag. Perl's alternative debuggers include a Perl profiler, &lt;a href=&quot;Devel::NYTProf&quot;&gt;Devel::NYTProf&lt;/a&gt;, which is available separately as a CPAN distribution. To profile your Perl program in the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0f0e4408b545cb1ecebca491d9be266bb67e8f" translate="yes" xml:space="preserve">
          <source>If you wish to supply an alternative debugger for Perl to run, invoke your script with a colon and a package argument given to the &lt;b&gt;-d&lt;/b&gt; flag. Perl's alternative debuggers include a Perl profiler, &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::NYTProf&quot;&gt;Devel::NYTProf&lt;/a&gt;, which is available separately as a CPAN distribution. To profile your Perl program in the file</source>
          <target state="translated">Si desea proporcionar un depurador alternativo para que Perl lo ejecute, invoque su script con dos puntos y un argumento de paquete dado a la bandera &lt;b&gt;-d&lt;/b&gt; . Los depuradores alternativos de Perl incluyen un generador de perfiles de Perl, &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::NYTProf&quot;&gt;Devel :: NYTProf&lt;/a&gt; , que est&amp;aacute; disponible por separado como distribuci&amp;oacute;n CPAN. Para perfilar su programa Perl en el archivo</target>
        </trans-unit>
        <trans-unit id="b105ef1f647cb2687215fb2803b65285f6c51529" translate="yes" xml:space="preserve">
          <source>If you wish to turn an entire POD document into a parse-tree, that process is fairly straightforward. The &lt;b&gt;parse_text()&lt;/b&gt; method is the key to doing this successfully. Every paragraph-callback (i.e. the polymorphic methods for &lt;b&gt;command()&lt;/b&gt;, &lt;b&gt;verbatim()&lt;/b&gt;, and &lt;b&gt;textblock()&lt;/b&gt; paragraphs) takes a &lt;b&gt;Pod::Paragraph&lt;/b&gt; object as an argument. Each paragraph object has a &lt;b&gt;parse_tree()&lt;/b&gt; method that can be used to get or set a corresponding parse-tree. So for each of those paragraph-callback methods, simply call &lt;b&gt;parse_text()&lt;/b&gt; with the options you desire, and then use the returned parse-tree to assign to the given paragraph object.</source>
          <target state="translated">Si desea convertir un documento POD completo en un &amp;aacute;rbol de an&amp;aacute;lisis, ese proceso es bastante sencillo. El m&amp;eacute;todo &lt;b&gt;parse_text ()&lt;/b&gt; es la clave para hacer esto con &amp;eacute;xito. Cada devoluci&amp;oacute;n de llamada de p&amp;aacute;rrafo (es decir, los m&amp;eacute;todos polim&amp;oacute;rficos para los p&amp;aacute;rrafos &lt;b&gt;command ()&lt;/b&gt; , &lt;b&gt;verbatim ()&lt;/b&gt; y &lt;b&gt;textblock ()&lt;/b&gt; ) toma un objeto &lt;b&gt;Pod :: Paragraph&lt;/b&gt; como argumento. Cada objeto de p&amp;aacute;rrafo tiene un m&amp;eacute;todo &lt;b&gt;parse_tree ()&lt;/b&gt; que puede usarse para obtener o establecer un &amp;aacute;rbol de an&amp;aacute;lisis correspondiente. Entonces, para cada uno de esos m&amp;eacute;todos de devoluci&amp;oacute;n de llamada de p&amp;aacute;rrafo, simplemente llame a &lt;b&gt;parse_text ()&lt;/b&gt; con las opciones que desee, y luego use el &amp;aacute;rbol de an&amp;aacute;lisis devuelto para asignar al objeto de p&amp;aacute;rrafo dado.</target>
        </trans-unit>
        <trans-unit id="77c82d86f4fb285fcd145d9c870b966041509421" translate="yes" xml:space="preserve">
          <source>If you wish to use GNU ld, then you need to pass it the -Wl,-E flag. The hints/solaris_2.sh file tries to do this automatically by setting the following Configure variables:</source>
          <target state="translated">Si desea usar el ID de GNU,entonces necesita pasarle la bandera -Wl,-E.El archivo hints/solaris_2.sh intenta hacer esto automáticamente estableciendo las siguientes variables de configuración:</target>
        </trans-unit>
        <trans-unit id="5c10ef4b4d7cf77ba9367b0a5ba13535a2314b3d" translate="yes" xml:space="preserve">
          <source>If you wish to use gcc to build add-on modules for use with the perl shipped with Solaris, you should use the Solaris::PerlGcc module which is available from CPAN. The perl shipped with Solaris is configured and built with the Sun compilers, and the compiler configuration information stored in Config.pm is therefore only relevant to the Sun compilers. The Solaris:PerlGcc module contains a replacement Config.pm that is correct for gcc - see the module for details.</source>
          <target state="translated">Si desea utilizar gcc para construir módulos adicionales para su uso con el perl que se envía con Solaris,debe utilizar el módulo Solaris::PerlGcc que está disponible en CPAN.El perl enviado con Solaris se configura y construye con los compiladores de Sun,y la información de configuración del compilador almacenada en Config.pm es por lo tanto sólo relevante para los compiladores de Sun.El módulo Solaris:PerlGcc contiene un Config.pm de reemplazo que es correcto para gcc-ver el módulo para detalles.</target>
        </trans-unit>
        <trans-unit id="461c22560c9b4e2d096c9a209fc41fbc9b8e1805" translate="yes" xml:space="preserve">
          <source>If you wonder what complex numbers are, they were invented to be able to solve the following equation:</source>
          <target state="translated">Si te preguntas qué son los números complejos,se inventaron para poder resolver la siguiente ecuación:</target>
        </trans-unit>
        <trans-unit id="58f2be2cb41014bdf8c7d1f6da3d5ed7b3a57878" translate="yes" xml:space="preserve">
          <source>If you wonder why defaults for conversion are different for str() and num(), note how easy it was to write the symbolic calculator. This simplicity is due to an appropriate choice of defaults. One extra note: due to the explicit recursion num() is more fragile than sym(): we need to explicitly check for the type of $a and $b. If components $a and $b happen to be of some related type, this may lead to problems.</source>
          <target state="translated">Si te preguntas por qué los valores por defecto de la conversión son diferentes para str()y num(),observa lo fácil que fue escribir la calculadora simbólica.Esta simplicidad se debe a una adecuada elección de los valores por defecto.Una nota extra:debido a la recursividad explícita num()es más frágil que sym():necesitamos comprobar explícitamente el tipo de $a y $b.Si los componentes $a y $b resultan ser de algún tipo relacionado,esto puede llevar a problemas.</target>
        </trans-unit>
        <trans-unit id="f88d82472c17285676b32563ec0b930b79f27b19" translate="yes" xml:space="preserve">
          <source>If you would like to know about a version dependency before you start running the program, put something like this at its top:</source>
          <target state="translated">Si quieres saber sobre la dependencia de una versión antes de empezar a ejecutar el programa,pon algo como esto en su parte superior:</target>
        </trans-unit>
        <trans-unit id="c3bc63e78a724b45aa4c8fcf7d5d3a90c3663440" translate="yes" xml:space="preserve">
          <source>If you would like to print out a lot of man page continuously, you probably want to set the C and D registers to set contiguous page numbering and even/odd paging, at least on some versions of man(7).</source>
          <target state="translated">Si desea imprimir muchas páginas del hombre de forma continua,es probable que desee configurar los registros C y D para establecer la numeración de las páginas contiguas y la paginación par/variable,al menos en algunas versiones del hombre(7).</target>
        </trans-unit>
        <trans-unit id="47a4a5157ecac47010f3fc4d031a714df9cdb1ae" translate="yes" xml:space="preserve">
          <source>If you would like, you can pass in a hashref instead of pairs. When you do so the hashref will be copied, and the copy will be returned blessed as an object. There is no way to ask HashBase to bless a specific hashref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e270feabb28d65fb97bce6b5a62077129b3eed4" translate="yes" xml:space="preserve">
          <source>If you would rather see it in CCSID 1047 order then change the number 34 in the last line to 39, like this:</source>
          <target state="translated">Si prefieres verlo en el orden del CCSID 1047,entonces cambia el número 34 en la última línea a 39,así:</target>
        </trans-unit>
        <trans-unit id="7ab3cc4dd9f42b386f286d85d40432c48d4dbc0d" translate="yes" xml:space="preserve">
          <source>If you would rather see it in POSIX-BC order then change the number 34 in the last line to 44, like this:</source>
          <target state="translated">Si prefiere verlo en orden POSIX-BC,cambie el número 34 de la última línea a 44,así:</target>
        </trans-unit>
        <trans-unit id="4685079e88ddb435b412b9c5b1c049410dc612d3" translate="yes" xml:space="preserve">
          <source>If you would rather see the above table in CCSID 0037 order rather than ASCII + Latin-1 order then run the table through:</source>
          <target state="translated">Si prefieres ver la tabla anterior en el orden CCSID 0037 en lugar del orden ASCII+Latin-1,entonces pasa la tabla:</target>
        </trans-unit>
        <trans-unit id="32ccbee06ab47d2346ade36365b388768fa75f8c" translate="yes" xml:space="preserve">
          <source>If you would rather see this table listing hexadecimal values then run the table through:</source>
          <target state="translated">Si prefiere ver esta tabla con los valores hexadecimales,entonces pásela a través de la tabla:</target>
        </trans-unit>
        <trans-unit id="ee951a76c16a66932dc3802ba31a24c5d5d45366" translate="yes" xml:space="preserve">
          <source>If you write just &lt;code&gt;[]&lt;/code&gt; , you get a new, empty anonymous array. If you write just &lt;code&gt;{}&lt;/code&gt; , you get a new, empty anonymous hash.</source>
          <target state="translated">Si escribe solo &lt;code&gt;[]&lt;/code&gt; , obtendr&amp;aacute; una nueva matriz an&amp;oacute;nima vac&amp;iacute;a. Si escribe solo &lt;code&gt;{}&lt;/code&gt; , obtendr&amp;aacute; un nuevo hash an&amp;oacute;nimo vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="4638b3569a9b4f06615d1c5e8e4772e5510c4692" translate="yes" xml:space="preserve">
          <source>If you write just &lt;code&gt;[]&lt;/code&gt;, you get a new, empty anonymous array. If you write just &lt;code&gt;{}&lt;/code&gt;, you get a new, empty anonymous hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5ce930a64c177374e0a87543a2b84b1ca0633d" translate="yes" xml:space="preserve">
          <source>If you write your own test, use the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2ftestanything.org&quot;&gt;Test Anything Protocol&lt;/a&gt;.</source>
          <target state="translated">Si escribe su propia prueba, utilice el &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2ftestanything.org&quot;&gt;protocolo Test Anything&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e006dae20780e3ea05d021931a4db8875b19d01" translate="yes" xml:space="preserve">
          <source>If you write your own test, use the &lt;a href=&quot;https://testanything.org&quot;&gt;Test Anything Protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b7f29b396f8216559006548d8b8987bccc01b5" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a C or C++ programmer, you might be looking for Perl&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; keyword.</source>
          <target state="translated">Si es un programador de C o C ++, es posible que est&amp;eacute; buscando la palabra clave de &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; de Perl .</target>
        </trans-unit>
        <trans-unit id="6c0a86670223bfdb26cb68751ec4a4f37f760ea9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a C or C++ programmer, you might be looking for Perl&amp;rsquo;s &lt;code&gt;state&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65480a92112439353360a0f2410e7e3031db6948" translate="yes" xml:space="preserve">
          <source>If you'd like a graphical user interface and you have &lt;a href=&quot;http://search.cpan.org/perldoc/Tk&quot;&gt;Tk&lt;/a&gt;, you can use &lt;code&gt;ptkdb&lt;/code&gt; . It's on CPAN and available for free.</source>
          <target state="translated">Si desea una interfaz gr&amp;aacute;fica de usuario y tiene &lt;a href=&quot;http://search.cpan.org/perldoc/Tk&quot;&gt;Tk&lt;/a&gt; , puede usar &lt;code&gt;ptkdb&lt;/code&gt; . Est&amp;aacute; en CPAN y est&amp;aacute; disponible de forma gratuita.</target>
        </trans-unit>
        <trans-unit id="6666466d25080d49716b3f38912878857c8e62b2" translate="yes" xml:space="preserve">
          <source>If you'd like a graphical user interface and you have &lt;a href=&quot;tk&quot;&gt;Tk&lt;/a&gt;, you can use &lt;code&gt;ptkdb&lt;/code&gt;. It's on CPAN and available for free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82ff6955ec720dbffdb6e597947e26e8c52b3d3" translate="yes" xml:space="preserve">
          <source>If you'd like to disable the use of one or more of these utilities and/or modules, see the &lt;code&gt;$BLACKLIST&lt;/code&gt; variable further down.</source>
          <target state="translated">Si desea deshabilitar el uso de una o m&amp;aacute;s de estas utilidades y / o m&amp;oacute;dulos, consulte la variable &lt;code&gt;$BLACKLIST&lt;/code&gt; m&amp;aacute;s abajo.</target>
        </trans-unit>
        <trans-unit id="2745d17cd01ce3bb020e0554868598f0ea306839" translate="yes" xml:space="preserve">
          <source>If you'd like to make &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; (and many other bits of Perl) die on error, have a look at the &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt; pragma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52486225415552ac3d601c87ba41d238a14d5679" translate="yes" xml:space="preserve">
          <source>If you'd like to make &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; (and many other bits of Perl) die on error, have a look at the &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt; pragma.</source>
          <target state="translated">Si desea hacer que el &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; (y muchos otros bits de Perl) mueran por error, eche un vistazo al pragma &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1efbce8f9e88ed4ba8cc94bb84af468b14e5c10a" translate="yes" xml:space="preserve">
          <source>If you'd like to make &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; (and many other bits of Perl) die on error, have a look at the &lt;a href=&quot;../autodie&quot;&gt;autodie&lt;/a&gt; pragma.</source>
          <target state="translated">Si desea hacer que el &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; (y muchos otros bits de Perl) mueran por error, eche un vistazo al pragma &lt;a href=&quot;../autodie&quot;&gt;autodie&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31f9c1e59db4aaf2455c75e99d8c0e4aa26479c4" translate="yes" xml:space="preserve">
          <source>If you'd like to manually inspect &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;'s failure, you can check all possible failure modes by inspecting &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a95e0734804b8dcc4d934eb0b4ac64271a89fa" translate="yes" xml:space="preserve">
          <source>If you'd like to manually inspect &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;'s failure, you can check all possible failure modes by inspecting &lt;code&gt;$?&lt;/code&gt; like this:</source>
          <target state="translated">Si desea inspeccionar manualmente la falla del &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , puede verificar todos los posibles modos de falla inspeccionando &lt;code&gt;$?&lt;/code&gt; Me gusta esto:</target>
        </trans-unit>
        <trans-unit id="c50262b9b752d6c3a022a1f95bc5efa143b999d6" translate="yes" xml:space="preserve">
          <source>If you'd like to manually inspect &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;'s failure, you can check all possible failure modes by inspecting &lt;code&gt;$?&lt;/code&gt; like this:</source>
          <target state="translated">Si desea inspeccionar manualmente la falla del &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , puede verificar todos los posibles modos de falla inspeccionando &lt;code&gt;$?&lt;/code&gt; Me gusta esto:</target>
        </trans-unit>
        <trans-unit id="b7d0d2c6ab654703248e935ebd07682399b01f80" translate="yes" xml:space="preserve">
          <source>If you'd like to see the raw output of your tests, set the &lt;code&gt;TEST_VERBOSE&lt;/code&gt; variable to true.</source>
          <target state="translated">Si desea ver el resultado sin procesar de sus pruebas, establezca la variable &lt;code&gt;TEST_VERBOSE&lt;/code&gt; en verdadero.</target>
        </trans-unit>
        <trans-unit id="15cb39149b7ad3616c39f88b2becd39a6aed03b0" translate="yes" xml:space="preserve">
          <source>If you'd rather treat each line individually, you can do that, too, by just transforming them in-place in the code reference and returning &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Say that you don't want</source>
          <target state="translated">Si prefiere tratar cada l&amp;iacute;nea individualmente, tambi&amp;eacute;n puede hacerlo, simplemente transform&amp;aacute;ndolas en el lugar en la referencia del c&amp;oacute;digo y devolviendo &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Di que no quieres</target>
        </trans-unit>
        <trans-unit id="6e65ba1455e726ff251279d7a46229f815e23af8" translate="yes" xml:space="preserve">
          <source>If you'd rather treat each line individually, you can do that, too, by just transforming them in-place in the code reference and returning &lt;code&gt;undef&lt;/code&gt;. Say that you don't want</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c0d6d1d9d7ffd617e3fd0512c67d0a724859e3" translate="yes" xml:space="preserve">
          <source>If you're a plugin author, you'll be interested in how to &lt;a href=&quot;#register_handler&quot;&gt;&quot;register_handler&quot;&lt;/a&gt;s, how &lt;a href=&quot;#detect_source&quot;&gt;&quot;detect_source&quot;&lt;/a&gt; works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd95bdd9903099e5f9ecacdcf9a08a9aec1e1ad" translate="yes" xml:space="preserve">
          <source>If you're a plugin author, you'll be interested in how to &lt;a href=&quot;#register_handler&quot;&gt;register_handler&lt;/a&gt;s, how &lt;a href=&quot;#detect_source&quot;&gt;detect_source&lt;/a&gt; works.</source>
          <target state="translated">Si eres un autor de plugins, te interesar&amp;aacute; &lt;a href=&quot;#detect_source&quot;&gt;saber&lt;/a&gt; c&amp;oacute;mo &lt;a href=&quot;#register_handler&quot;&gt;register_handler&lt;/a&gt; s, c&amp;oacute;mo funciona detect_source .</target>
        </trans-unit>
        <trans-unit id="ec02db45e6d3a34d0a303395b0efb8490d821d7c" translate="yes" xml:space="preserve">
          <source>If you're committed to creating a temporary file by hand, use the process ID and/or the current time-value. If you need to have many temporary files in one process, use a counter:</source>
          <target state="translated">Si se compromete a crear un archivo temporal a mano,utilice el ID de proceso y/o el valor de tiempo actual.Si necesitas tener muchos archivos temporales en un proceso,usa un contador:</target>
        </trans-unit>
        <trans-unit id="6a57c8d5168852184b3e7f9eacd5e84a511755f4" translate="yes" xml:space="preserve">
          <source>If you're concerned about 8-bit textual data then see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;. If you want to deal with multibyte characters, however, there are some gotchas. See the section on Regular Expressions.</source>
          <target state="translated">Si le preocupan los datos textuales de 8 bits, consulte &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; . Sin embargo, si desea tratar con caracteres multibyte, existen algunas trampas. Consulte la secci&amp;oacute;n sobre Expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="a4a17aeb59ac658e17124a0d2eb0b805c011e3c8" translate="yes" xml:space="preserve">
          <source>If you're concerned about people profiting from your code, then the bottom line is that nothing but a restrictive license will give you legal security. License your software and pepper it with threatening statements like &quot;This is unpublished proprietary software of XYZ Corp. Your access to it does not give you permission to use it blah blah blah.&quot; We are not lawyers, of course, so you should see a lawyer if you want to be sure your license's wording will stand up in court.</source>
          <target state="translated">Si te preocupa que la gente se beneficie de tu código,entonces el resultado final es que nada más que una licencia restrictiva te dará seguridad legal.Licenciar su software y salpicarlo con declaraciones amenazantes como &quot;Este es un software propietario inédito de XYZ Corp.Su acceso a él no le da permiso para usarlo bla bla bla&quot;.No somos abogados,por supuesto,así que debería ver a un abogado si quiere estar seguro de que el texto de su licencia se sostendrá en la corte.</target>
        </trans-unit>
        <trans-unit id="20f5afeb7883b43b071ad0d90c989471842051d6" translate="yes" xml:space="preserve">
          <source>If you're concerned about people profiting from your code, then the bottom line is that nothing but a restrictive license will give you legal security. License your software and pepper it with threatening statements like &quot;This is unpublished proprietary software of XYZ Corp. Your access to it does not give you permission to use it blah blah blah.&quot; You should see a lawyer to be sure your license's wording will stand up in court.</source>
          <target state="translated">Si te preocupa que la gente se beneficie de tu código,entonces el resultado final es que nada más que una licencia restrictiva te dará seguridad legal.Licenciar su software y salpicarlo con declaraciones amenazantes como &quot;Este es un software propietario inédito de XYZ Corp.Su acceso a él no le da permiso para usarlo bla bla bla&quot;.Debería ver a un abogado para asegurarse de que el texto de su licencia se sostenga en la corte.</target>
        </trans-unit>
        <trans-unit id="28d412e72884dbac279b68cd8636bc53150a9095" translate="yes" xml:space="preserve">
          <source>If you're confused about why you use an '@' there on a hash slice instead of a '%', think of it like this. The type of bracket (square or curly) governs whether it's an array or a hash being looked at. On the other hand, the leading symbol ('$' or '@') on the array or hash indicates whether you are getting back a singular value (a scalar) or a plural one (a list).</source>
          <target state="translated">Si estás confundido acerca de por qué usas una &quot;@&quot; ahí en un trozo de hachís en lugar de un &quot;%&quot;,piensa en ello de esta manera.El tipo de paréntesis (cuadrado o rizado)gobierna si se trata de una matriz o de un hachís que se está mirando.Por otro lado,el símbolo principal ('$' o '@')en la matriz o el hash indica si se está obteniendo un valor singular (un escalar)o uno plural (una lista).</target>
        </trans-unit>
        <trans-unit id="2fdaeb94f7920871da7274b75b49a557aeabaf4a" translate="yes" xml:space="preserve">
          <source>If you're creating a completely new result</source>
          <target state="translated">Si estás creando un resultado completamente nuevo</target>
        </trans-unit>
        <trans-unit id="6e2a7b543e2f454e92700f7b1967ab94c4b894e7" translate="yes" xml:space="preserve">
          <source>If you're currently linking your perl executable to a shared</source>
          <target state="translated">Si actualmente estás enlazando tu ejecutable de perl a un</target>
        </trans-unit>
        <trans-unit id="5ae9e7742fc3a996e99839cc61f7b8352d875d18" translate="yes" xml:space="preserve">
          <source>If you're debugging a script that uses #!, and normally relies on the shell's $PATH search, the -S option causes perl to do that search, so you don't have to type the path or &lt;code&gt;`which $scriptname`&lt;/code&gt; .</source>
          <target state="translated">Si est&amp;aacute; depurando un script que usa #! Y normalmente se basa en la b&amp;uacute;squeda $ PATH del shell, la opci&amp;oacute;n -S hace que perl haga esa b&amp;uacute;squeda, por lo que no tiene que escribir la ruta o &lt;code&gt;`which $scriptname`&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51555a51b8314a910d76003d95e2f0fdc40d94bc" translate="yes" xml:space="preserve">
          <source>If you're debugging a script that uses #!, and normally relies on the shell's $PATH search, the -S option causes perl to do that search, so you don't have to type the path or &lt;code&gt;`which $scriptname`&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c253632d224aa0744dad2b2922eca154c4278dec" translate="yes" xml:space="preserve">
          <source>If you're deprecating a feature with the intent of later simplifying another bit of code, say so. If you're fixing a performance problem or adding a new feature to support some other bit of the core, mention that.</source>
          <target state="translated">Si estás desaprobando una característica con la intención de simplificar más tarde otro trozo de código,dilo.Si estás arreglando un problema de rendimiento o agregando una nueva característica para soportar otro pedazo del núcleo,menciónalo.</target>
        </trans-unit>
        <trans-unit id="b41a3856c0dbc6e888db5696272009c4533b95af" translate="yes" xml:space="preserve">
          <source>If you're developing a CPAN distribution using XS, you may add your own file called</source>
          <target state="translated">Si estás desarrollando una distribución CPAN usando XS,puedes añadir tu propio archivo llamado</target>
        </trans-unit>
        <trans-unit id="897c140e9db65d769b3515a8af2bf69889950440" translate="yes" xml:space="preserve">
          <source>If you're getting this error from a here-document, you may have included unseen whitespace before or after your closing tag or there may not be a linebreak after it. A good programmer's editor will have a way to help you find these characters (or lack of characters). See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for the full details on here-documents.</source>
          <target state="translated">Si recibe este error de un documento aqu&amp;iacute;, es posible que haya incluido un espacio en blanco no visto antes o despu&amp;eacute;s de su etiqueta de cierre o puede que no haya un salto de l&amp;iacute;nea despu&amp;eacute;s. El editor de un buen programador tendr&amp;aacute; una forma de ayudarlo a encontrar estos caracteres (o la falta de caracteres). Consulte &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; para obtener todos los detalles sobre here-documents.</target>
        </trans-unit>
        <trans-unit id="a4fd5cbfd79a1c891c020d447f65eef0d65886a8" translate="yes" xml:space="preserve">
          <source>If you're going to put your Pod at the end of the file, and you're using an &lt;code&gt;__END__&lt;/code&gt; or &lt;code&gt;__DATA__&lt;/code&gt; cut mark, make sure to put an empty line there before the first Pod command.</source>
          <target state="translated">Si va a colocar su Pod al final del archivo y est&amp;aacute; usando una marca de corte &lt;code&gt;__END__&lt;/code&gt; o &lt;code&gt;__DATA__&lt;/code&gt; , aseg&amp;uacute;rese de poner una l&amp;iacute;nea vac&amp;iacute;a all&amp;iacute; antes del primer comando de Pod.</target>
        </trans-unit>
        <trans-unit id="0fef8c8a09918fb182d2a0653d091964fe4d5654" translate="yes" xml:space="preserve">
          <source>If you're in a slow syscall (like &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt;ing, &lt;code&gt;&lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt;ing, or &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;ing from your keyboard or a socket) and haven't set up your own &lt;code&gt;$SIG{INT}&lt;/code&gt; handler, then you won't be able to CTRL-C your way back to the debugger, because the debugger's own &lt;code&gt;$SIG{INT}&lt;/code&gt; handler doesn't understand that it needs to raise an exception to longjmp(3) out of slow syscalls.</source>
          <target state="translated">Si est&amp;aacute; en una llamada al sistema lenta (como &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; desde su teclado o un conector) y no ha configurado su propio controlador &lt;code&gt;$SIG{INT}&lt;/code&gt; , entonces no podr&amp;aacute; CTRL -C su camino de regreso al depurador, porque el propio controlador &lt;code&gt;$SIG{INT}&lt;/code&gt; del depurador no entiende que necesita generar una excepci&amp;oacute;n a longjmp (3) a partir de llamadas al sistema lentas.</target>
        </trans-unit>
        <trans-unit id="d57cc5349a6b3818d37de5b1a80ef5bad92c827e" translate="yes" xml:space="preserve">
          <source>If you're in a slow syscall (like &lt;code&gt;wait&lt;/code&gt;ing, &lt;code&gt;accept&lt;/code&gt;ing, or &lt;code&gt;read&lt;/code&gt;ing from your keyboard or a socket) and haven't set up your own &lt;code&gt;$SIG{INT}&lt;/code&gt; handler, then you won't be able to CTRL-C your way back to the debugger, because the debugger's own &lt;code&gt;$SIG{INT}&lt;/code&gt; handler doesn't understand that it needs to raise an exception to longjmp(3) out of slow syscalls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f4284650d0a24b2d57ce770464abe6b8363cfa" translate="yes" xml:space="preserve">
          <source>If you're just trying to get a print out of each line of Perl code as it executes, the way that &lt;code&gt;sh -x&lt;/code&gt; provides for shell scripts, you can't use Perl's &lt;b&gt;-D&lt;/b&gt; switch. Instead do this</source>
          <target state="translated">Si solo est&amp;aacute; tratando de obtener una copia impresa de cada l&amp;iacute;nea de c&amp;oacute;digo Perl a medida que se ejecuta, de la forma en que &lt;code&gt;sh -x&lt;/code&gt; proporciona los scripts de shell, no puede usar el &lt;b&gt;modificador -D&lt;/b&gt; de Perl . En su lugar, haz esto</target>
        </trans-unit>
        <trans-unit id="e1d724a87dfd2f97b8c95cc8c3b05426d4d76542" translate="yes" xml:space="preserve">
          <source>If you're just trying to patch a binary, in many cases something as simple as this works:</source>
          <target state="translated">Si sólo estás tratando de parchear un binario,en muchos casos algo tan simple como esto funciona:</target>
        </trans-unit>
        <trans-unit id="e27c869b95726ef20f74a953d6e15ab7c271a595" translate="yes" xml:space="preserve">
          <source>If you're looking for an EBNF grammar, see &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beae682a73c10931e4ab41819afea65e05d531cf" translate="yes" xml:space="preserve">
          <source>If you're looking for an EBNF grammar, see &lt;a href=&quot;parser/grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; buscando una gram&amp;aacute;tica EBNF, consulte &lt;a href=&quot;parser/grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55c4ac9978b7084a6172dad11c1733f741ff1455" translate="yes" xml:space="preserve">
          <source>If you're looking for something a bit more rigorous, try &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">Si buscas algo un poco m&amp;aacute;s riguroso, prueba &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f56748dfc66ac6cba325f7661836f7de96b1136a" translate="yes" xml:space="preserve">
          <source>If you're looking for the information on how to use here-documents, which used to be here, that's been moved to &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;&quot;Quote and Quote-like Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7091178e821abb2a7bce9c92cae74d109146a9a0" translate="yes" xml:space="preserve">
          <source>If you're looking for the information on how to use here-documents, which used to be here, that's been moved to &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; buscando informaci&amp;oacute;n sobre c&amp;oacute;mo usar here-documents, que sol&amp;iacute;a estar aqu&amp;iacute;, se ha movido a &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote y Quote-like Operators en perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2047473a3643e10d45494d0ba2e46e4f3bb5994" translate="yes" xml:space="preserve">
          <source>If you're looking for the nitty gritty details of how the debugger is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889cd4ec91070da4d939fc8ed6a3a8c2e2067138" translate="yes" xml:space="preserve">
          <source>If you're looking to write your own object system, or you need to maintain code which implements objects from scratch then this document will help you understand exactly how Perl does object orientation.</source>
          <target state="translated">Si está buscando escribir su propio sistema de objetos,o necesita mantener el código que implementa los objetos desde cero,entonces este documento le ayudará a entender exactamente cómo Perl hace la orientación a los objetos.</target>
        </trans-unit>
        <trans-unit id="ddf0bc3794c8ee98c81f65ada98d73c84a0b3b0d" translate="yes" xml:space="preserve">
          <source>If you're lucky enough to be using a system that supports non-blocking reads (most Unixish systems do), you need only to use the &lt;code&gt;O_NDELAY&lt;/code&gt; or &lt;code&gt;O_NONBLOCK&lt;/code&gt; flag from the &lt;code&gt;Fcntl&lt;/code&gt; module in conjunction with &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Si tiene la suerte de estar usando un sistema que admite lecturas sin bloqueo (la mayor&amp;iacute;a de los sistemas Unixish lo hacen), solo necesita usar el &lt;code&gt;O_NDELAY&lt;/code&gt; u &lt;code&gt;O_NONBLOCK&lt;/code&gt; del m&amp;oacute;dulo &lt;code&gt;Fcntl&lt;/code&gt; junto con &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen()&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b92a61260d6789cb413228b4875aba877645cd63" translate="yes" xml:space="preserve">
          <source>If you're lucky enough to be using a system that supports non-blocking reads (most Unixish systems do), you need only to use the &lt;code&gt;O_NDELAY&lt;/code&gt; or &lt;code&gt;O_NONBLOCK&lt;/code&gt; flag from the &lt;code&gt;Fcntl&lt;/code&gt; module in conjunction with &lt;code&gt;sysopen()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1442d0654a360821d205030d12b7c46d2249369f" translate="yes" xml:space="preserve">
          <source>If you're lucky you should see &quot;All tests successful&quot;. But there can be a few failed subtests (less than 5 hopefully) depending on some external conditions (e.g. some subtests fail under linux/dosemu or plain dos with short filenames only).</source>
          <target state="translated">Si tienes suerte,deberías ver &quot;Todas las pruebas son exitosas&quot;.Pero puede haber unos pocos subtests fallidos (menos de 5,esperemos)dependiendo de algunas condiciones externas (por ejemplo,algunos subtests fallan bajo linux/dosemu o plain dos con nombres de archivo cortos solamente).</target>
        </trans-unit>
        <trans-unit id="81d8181270fe0a221e4cfe0273d672eeca038de7" translate="yes" xml:space="preserve">
          <source>If you're matching against &lt;code&gt;$_&lt;/code&gt; , the &lt;code&gt;$_ =~&lt;/code&gt; part can be omitted:</source>
          <target state="translated">Si coincide con &lt;code&gt;$_&lt;/code&gt; , la parte &lt;code&gt;$_ =~&lt;/code&gt; se puede omitir:</target>
        </trans-unit>
        <trans-unit id="11ac83319ace4cc9c28ca859dfddf15f3ecfbd18" translate="yes" xml:space="preserve">
          <source>If you're matching against &lt;code&gt;$_&lt;/code&gt;, the &lt;code&gt;$_ =~&lt;/code&gt; part can be omitted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dff24fd1b5ec5a9dffa27b27da41b1f996870a7" translate="yes" xml:space="preserve">
          <source>If you're matching against the special default variable &lt;code&gt;$_&lt;/code&gt; , the &lt;code&gt;$_ =~&lt;/code&gt; part can be omitted:</source>
          <target state="translated">Si coincide con la variable predeterminada especial &lt;code&gt;$_&lt;/code&gt; , la parte &lt;code&gt;$_ =~&lt;/code&gt; se puede omitir:</target>
        </trans-unit>
        <trans-unit id="8117f4845259fee2b7568d80ed0d4624414390b8" translate="yes" xml:space="preserve">
          <source>If you're matching against the special default variable &lt;code&gt;$_&lt;/code&gt;, the &lt;code&gt;$_ =~&lt;/code&gt; part can be omitted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426f58876b20aa644c87cac6d34c02796b1541e8" translate="yes" xml:space="preserve">
          <source>If you're mixing UTF-8 and non-UTF-8 strings, it is necessary to upgrade the non-UTF-8 strings to UTF-8. If you've got an SV, the easiest way to do this is:</source>
          <target state="translated">Si estás mezclando cuerdas UTF-8 y no-UTF-8,es necesario actualizar las cuerdas no-UTF-8 a UTF-8.Si tienes un SV,la forma más fácil de hacerlo es:</target>
        </trans-unit>
        <trans-unit id="adb368df84ed73d15e6f01f5748e1a829c2701dc" translate="yes" xml:space="preserve">
          <source>If you're more familiar with writing in HTML than with writing in Pod, you can try your hand at writing documentation in simple HTML, and converting it to Pod with the experimental &lt;a href=&quot;Pod::HTML2Pod&quot;&gt;Pod::HTML2Pod&lt;/a&gt; module, (available in CPAN), and looking at the resulting code. The experimental &lt;a href=&quot;Pod::PXML&quot;&gt;Pod::PXML&lt;/a&gt; module in CPAN might also be useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4dc2534030724a7fd2a22ed631de91b923d0d4" translate="yes" xml:space="preserve">
          <source>If you're more familiar with writing in HTML than with writing in Pod, you can try your hand at writing documentation in simple HTML, and converting it to Pod with the experimental &lt;a href=&quot;http://search.cpan.org/perldoc/Pod::HTML2Pod&quot;&gt;Pod::HTML2Pod&lt;/a&gt; module, (available in CPAN), and looking at the resulting code. The experimental &lt;a href=&quot;http://search.cpan.org/perldoc/Pod::PXML&quot;&gt;Pod::PXML&lt;/a&gt; module in CPAN might also be useful.</source>
          <target state="translated">Si est&amp;aacute; m&amp;aacute;s familiarizado con la escritura en HTML que con la escritura en Pod, puede intentar escribir documentaci&amp;oacute;n en HTML simple y convertirla en Pod con el m&amp;oacute;dulo experimental &lt;a href=&quot;http://search.cpan.org/perldoc/Pod::HTML2Pod&quot;&gt;Pod :: HTML2Pod&lt;/a&gt; (disponible en CPAN) y buscar en el c&amp;oacute;digo resultante. El m&amp;oacute;dulo experimental &lt;a href=&quot;http://search.cpan.org/perldoc/Pod::PXML&quot;&gt;Pod :: PXML&lt;/a&gt; en CPAN tambi&amp;eacute;n podr&amp;iacute;a ser &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="661a15733b02e1bde18a48ee6f26023806e52abe" translate="yes" xml:space="preserve">
          <source>If you're more from the object-oriented camp, you can inherit from Storable and directly store your objects by invoking &lt;code&gt;store&lt;/code&gt; as a method. The fact that the root of the to-be-stored tree is a blessed reference (i.e. an object) is special-cased so that the retrieve does not provide a reference to that object but rather the blessed object reference itself. (Otherwise, you'd get a reference to that blessed object).</source>
          <target state="translated">Si eres m&amp;aacute;s del campo orientado a objetos, puedes heredar de Storable y almacenar directamente tus objetos invocando &lt;code&gt;store&lt;/code&gt; como m&amp;eacute;todo. El hecho de que la ra&amp;iacute;z del &amp;aacute;rbol que se va a almacenar sea una referencia bendecida (es decir, un objeto) tiene un car&amp;aacute;cter especial para que la recuperaci&amp;oacute;n no proporcione una referencia a ese objeto sino m&amp;aacute;s bien la referencia del objeto bendecido en s&amp;iacute;. (De lo contrario, obtendr&amp;iacute;a una referencia a ese objeto bendito).</target>
        </trans-unit>
        <trans-unit id="f63fe5eb4649dbb1987379a78d0fe4e091aa300f" translate="yes" xml:space="preserve">
          <source>If you're new to Perl, you should start by running &lt;a href=&quot;perlintro&quot;&gt;&lt;code&gt;perldoc perlintro&lt;/code&gt;&lt;/a&gt;, which is a general intro for beginners and provides some background to help you navigate the rest of Perl's extensive documentation. Run &lt;a href=&quot;perldoc&quot;&gt;&lt;code&gt;perldoc perldoc&lt;/code&gt;&lt;/a&gt; to learn more things you can do with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c11316b76d508e073f9fc77a3e623b3eada282" translate="yes" xml:space="preserve">
          <source>If you're new to Perl, you should start by running &lt;code&gt;perldoc perlintro&lt;/code&gt; , which is a general intro for beginners and provides some background to help you navigate the rest of Perl's extensive documentation. Run &lt;code&gt;perldoc
perldoc&lt;/code&gt; to learn more things you can do with</source>
          <target state="translated">Si es nuevo en Perl, debe comenzar ejecutando &lt;code&gt;perldoc perlintro&lt;/code&gt; , que es una introducci&amp;oacute;n general para principiantes y proporciona algunos antecedentes para ayudarlo a navegar por el resto de la extensa documentaci&amp;oacute;n de Perl. Ejecute &lt;code&gt;perldoc perldoc&lt;/code&gt; para aprender m&amp;aacute;s cosas que puede hacer con</target>
        </trans-unit>
        <trans-unit id="744942d070c981ce6cf7077125a9b1fdb8807cc7" translate="yes" xml:space="preserve">
          <source>If you're new to the Perl debugger, you may prefer to read &lt;a href=&quot;perldebtut&quot;&gt;perldebtut&lt;/a&gt;, which is a tutorial introduction to the debugger.</source>
          <target state="translated">Si es nuevo en el depurador de Perl, es posible que prefiera leer &lt;a href=&quot;perldebtut&quot;&gt;perldebtut&lt;/a&gt; , que es una introducci&amp;oacute;n tutorial al depurador.</target>
        </trans-unit>
        <trans-unit id="c2727aad3001460d90c1014c2e79041ef3c0a256" translate="yes" xml:space="preserve">
          <source>If you're not running VMS, this module does nothing.</source>
          <target state="translated">Si no está ejecutando el VMS,este módulo no hace nada.</target>
        </trans-unit>
        <trans-unit id="57b30f05d7f8cbe152533a07743b1d8313aa4f82" translate="yes" xml:space="preserve">
          <source>If you're not sure what you have (the &lt;code&gt;VAL&lt;/code&gt; case), wrap the method call in an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; block to catch the exception if &lt;code&gt;VAL&lt;/code&gt; is undefined.</source>
          <target state="translated">Si no est&amp;aacute; seguro de lo que tiene (el caso de &lt;code&gt;VAL&lt;/code&gt; ), envuelva la llamada al m&amp;eacute;todo en un bloque &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; para detectar la excepci&amp;oacute;n si &lt;code&gt;VAL&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="4b417f2069d829972fc28b99377df4b969284461" translate="yes" xml:space="preserve">
          <source>If you're not sure what you have (the &lt;code&gt;VAL&lt;/code&gt; case), wrap the method call in an &lt;code&gt;eval&lt;/code&gt; block to catch the exception if &lt;code&gt;VAL&lt;/code&gt; is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ef540b5bff7fa8b60e3b8701e23d84d3552eb5" translate="yes" xml:space="preserve">
          <source>If you're not the Perl administrator you probably don't have permission to install a module to its default location. Then you should install it for your own use into your home directory like so:</source>
          <target state="translated">Si no eres el administrador de Perl,probablemente no tengas permiso para instalar un módulo en su ubicación predeterminada.Entonces debería instalarlo para su propio uso en su directorio principal de esta manera:</target>
        </trans-unit>
        <trans-unit id="247917b0ada3108323df59e4327b62f819afb4ad" translate="yes" xml:space="preserve">
          <source>If you're not the Perl administrator you probably don't have permission to install a module to its default location. Ways of handling this with a &lt;b&gt;lot&lt;/b&gt; less manual effort on your part are &lt;a href=&quot;perlbrew&quot;&gt;perlbrew&lt;/a&gt; and &lt;a href=&quot;local::lib&quot;&gt;local::lib&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33fa0120e14a08b5aff452dd882c3994193525a" translate="yes" xml:space="preserve">
          <source>If you're not used to reading BNF grammars, this is how it works: You're fed certain things by the tokeniser, which generally end up in upper case. &lt;code&gt;ADDOP&lt;/code&gt; and &lt;code&gt;ASSIGNOP&lt;/code&gt; are examples of &quot;terminal symbols&quot;, because you can't get any simpler than them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9feed406758bc42352583f962fb6765533ea27d0" translate="yes" xml:space="preserve">
          <source>If you're not used to reading BNF grammars, this is how it works: You're fed certain things by the tokeniser, which generally end up in upper case. Here, &lt;code&gt;ADDOP&lt;/code&gt; , is provided when the tokeniser sees &lt;code&gt;+&lt;/code&gt; in your code. &lt;code&gt;ASSIGNOP&lt;/code&gt; is provided when &lt;code&gt;=&lt;/code&gt; is used for assigning. These are &quot;terminal symbols&quot;, because you can't get any simpler than them.</source>
          <target state="translated">Si no est&amp;aacute; acostumbrado a leer las gram&amp;aacute;ticas BNF, as&amp;iacute; es como funciona: el tokenizador lo alimenta con ciertas cosas, que generalmente terminan en may&amp;uacute;sculas. Aqu&amp;iacute;, &lt;code&gt;ADDOP&lt;/code&gt; , se proporciona cuando el tokenizador ve &lt;code&gt;+&lt;/code&gt; en su c&amp;oacute;digo. &lt;code&gt;ASSIGNOP&lt;/code&gt; se proporciona cuando se usa &lt;code&gt;=&lt;/code&gt; para asignar. Estos son &quot;s&amp;iacute;mbolos terminales&quot;, porque no hay nada m&amp;aacute;s simple que ellos.</target>
        </trans-unit>
        <trans-unit id="d41cee3341b958945c48519633ed1e0a770e7261" translate="yes" xml:space="preserve">
          <source>If you're not writing a server/client for an existing protocol like NNTP or SMTP, you should give some thought to how your server will know when the client has finished talking, and vice-versa. Most protocols are based on one-line messages and responses (so one party knows the other has finished when a &quot;\n&quot; is received) or multi-line messages and responses that end with a period on an empty line (&quot;\n.\n&quot; terminates a message/response).</source>
          <target state="translated">Si no estás escribiendo un servidor/cliente para un protocolo existente como NNTP o SMTP,deberías pensar en cómo tu servidor sabrá cuando el cliente haya terminado de hablar,y viceversa.La mayoría de los protocolos se basan en mensajes y respuestas de una línea (para que una parte sepa que la otra ha terminado cuando se recibe una &quot;\n&quot;)o mensajes y respuestas de varias líneas que terminan con un punto en una línea vacía (&quot;\n.\N&quot; termina un mensaje/respuesta).</target>
        </trans-unit>
        <trans-unit id="1904985e3da30cf5eb915cfb278068985854bae1" translate="yes" xml:space="preserve">
          <source>If you're not writing such a tool, then whether you accept noncharacters as input is up to you (though the Standard recommends that you not). If you do strict input stream checking with Perl, these code points continue to be forbidden. This is to maintain backward compatibility (otherwise potential security holes could open up, as an unsuspecting application that was written assuming the noncharacters would be filtered out before getting to it, could now, without warning, start getting them). To do strict checking, you can use the layer &lt;code&gt;:encoding('UTF-8')&lt;/code&gt; .</source>
          <target state="translated">Si no est&amp;aacute; escribiendo una herramienta de este tipo, entonces si acepta no caracteres como entrada depende de usted (aunque el Est&amp;aacute;ndar recomienda que no lo haga). Si realiza una comprobaci&amp;oacute;n estricta del flujo de entrada con Perl, estos puntos de c&amp;oacute;digo seguir&amp;aacute;n estando prohibidos. Esto es para mantener la compatibilidad con versiones anteriores (de lo contrario, se podr&amp;iacute;an abrir posibles agujeros de seguridad, ya que una aplicaci&amp;oacute;n desprevenida que se escribi&amp;oacute; asumiendo que los no caracteres se filtrar&amp;iacute;an antes de acceder a ella, podr&amp;iacute;a ahora, sin previo aviso, comenzar a obtenerlos). Para realizar una comprobaci&amp;oacute;n estricta, puede utilizar la capa &lt;code&gt;:encoding('UTF-8')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d77310220e2c4362538cbb9513e4d5aa5a72b313" translate="yes" xml:space="preserve">
          <source>If you're not writing such a tool, then whether you accept noncharacters as input is up to you (though the Standard recommends that you not). If you do strict input stream checking with Perl, these code points continue to be forbidden. This is to maintain backward compatibility (otherwise potential security holes could open up, as an unsuspecting application that was written assuming the noncharacters would be filtered out before getting to it, could now, without warning, start getting them). To do strict checking, you can use the layer &lt;code&gt;:encoding('UTF-8')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e740be7e86f98ca86a316e7e6f108d26ec4db83" translate="yes" xml:space="preserve">
          <source>If you're on Unix, you already have an IDE--Unix itself. The Unix philosophy is the philosophy of several small tools that each do one thing and do it well. It's like a carpenter's toolbox.</source>
          <target state="translated">Si estás en Unix,ya tienes un IDE...el propio Unix.La filosofía de Unix es la filosofía de varias pequeñas herramientas que cada una hace una cosa y la hace bien.Es como una caja de herramientas de carpintero.</target>
        </trans-unit>
        <trans-unit id="27b6c4407588281e5e7fdb718dd9826644dbabc0" translate="yes" xml:space="preserve">
          <source>If you're on a POSIX system, Perl supports the &lt;code&gt;POSIX::strtod&lt;/code&gt; function for converting strings to doubles (and also &lt;code&gt;POSIX::strtol&lt;/code&gt; for longs). Its semantics are somewhat cumbersome, so here's a &lt;code&gt;getnum&lt;/code&gt; wrapper function for more convenient access. This function takes a string and returns the number it found, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for input that isn't a C float. The &lt;code&gt;is_numeric&lt;/code&gt; function is a front end to &lt;code&gt;getnum&lt;/code&gt; if you just want to say, &quot;Is this a float?&quot;</source>
          <target state="translated">Si est&amp;aacute; en un sistema POSIX, Perl admite la funci&amp;oacute;n &lt;code&gt;POSIX::strtod&lt;/code&gt; para convertir cadenas en dobles (y tambi&amp;eacute;n &lt;code&gt;POSIX::strtol&lt;/code&gt; para longs). Su sem&amp;aacute;ntica es algo engorrosa, as&amp;iacute; que aqu&amp;iacute; hay una funci&amp;oacute;n de contenedor &lt;code&gt;getnum&lt;/code&gt; para un acceso m&amp;aacute;s conveniente. Esta funci&amp;oacute;n toma una cadena y devuelve el n&amp;uacute;mero que encontr&amp;oacute;, o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; para una entrada que no es un flotante C. La funci&amp;oacute;n &lt;code&gt;is_numeric&lt;/code&gt; es una interfaz para &lt;code&gt;getnum&lt;/code&gt; si solo quiere decir, &quot;&amp;iquest;Es esto un flotante?&quot;</target>
        </trans-unit>
        <trans-unit id="47aff00cb7b46f5bee1ecbbd614c85d2d65bb4f4" translate="yes" xml:space="preserve">
          <source>If you're on a POSIX system, Perl supports the &lt;code&gt;POSIX::strtod&lt;/code&gt; function for converting strings to doubles (and also &lt;code&gt;POSIX::strtol&lt;/code&gt; for longs). Its semantics are somewhat cumbersome, so here's a &lt;code&gt;getnum&lt;/code&gt; wrapper function for more convenient access. This function takes a string and returns the number it found, or &lt;code&gt;undef&lt;/code&gt; for input that isn't a C float. The &lt;code&gt;is_numeric&lt;/code&gt; function is a front end to &lt;code&gt;getnum&lt;/code&gt; if you just want to say, &quot;Is this a float?&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe652d8671f9747b2b27fba3ba0a6953bf5a58ab" translate="yes" xml:space="preserve">
          <source>If you're only a C programmer, than this is the end of the message for you. You can quit right now, and if you care to, save off the source and run it when you feel like it. Or not.</source>
          <target state="translated">Si sólo eres un programador de C,entonces este es el final del mensaje para ti.Puedes dejarlo ahora mismo,y si quieres,guarda la fuente y ejecútalo cuando te apetezca.O no.</target>
        </trans-unit>
        <trans-unit id="5f443393381ebb2ba3b4781af2f167f994444b4f" translate="yes" xml:space="preserve">
          <source>If you're passing a filehandle to a function, you can write the function in two ways:</source>
          <target state="translated">Si le pasas un filehandle a una función,puedes escribir la función de dos maneras:</target>
        </trans-unit>
        <trans-unit id="3681c9d29e3cea8b052a12522cde089c668422cf" translate="yes" xml:space="preserve">
          <source>If you're passing around filehandles, you could usually just use the bare typeglob, like &lt;code&gt;*STDOUT&lt;/code&gt; , but typeglobs references work, too. For example:</source>
          <target state="translated">Si est&amp;aacute; pasando identificadores de archivos, generalmente podr&amp;iacute;a usar el typeglob desnudo, como &lt;code&gt;*STDOUT&lt;/code&gt; , pero las referencias de typeglobs tambi&amp;eacute;n funcionan. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="298de4014a3a85ac5b8366c5095b3672193b40a2" translate="yes" xml:space="preserve">
          <source>If you're passing around filehandles, you could usually just use the bare typeglob, like &lt;code&gt;*STDOUT&lt;/code&gt;, but typeglobs references work, too. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f816f45cbfc0eef6f9ae6c1011d3c4a6ca61924" translate="yes" xml:space="preserve">
          <source>If you're planning on generating new filehandles, you could do this. Notice to pass back just the bare *FH, not its reference.</source>
          <target state="translated">Si estás planeando generar nuevos mangos de archivos,podrías hacer esto.Aviso para pasar de nuevo sólo la *FH desnuda,no su referencia.</target>
        </trans-unit>
        <trans-unit id="e8bfd94e153d8978fbc196c7118de9fb39d2dab3" translate="yes" xml:space="preserve">
          <source>If you're planning to do more extensive work than a single small fix, we encourage you to read the documentation below. This will help you focus your work and make your patches easier to incorporate into the Perl source.</source>
          <target state="translated">Si está planeando hacer un trabajo más extenso que un simple pequeño arreglo,le animamos a leer la documentación de abajo.Esto le ayudará a enfocar su trabajo y hacer que sus parches sean más fáciles de incorporar a la fuente de Perl.</target>
        </trans-unit>
        <trans-unit id="2a89224882a8273613d6c7a7a7b1c88a5cbcd4d7" translate="yes" xml:space="preserve">
          <source>If you're planning to filetest the return values out of a &lt;a href=&quot;#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt;, you'd better prepend the directory in question. Otherwise, because we didn't &lt;a href=&quot;#chdir-EXPR&quot;&gt;&lt;code&gt;chdir&lt;/code&gt;&lt;/a&gt; there, it would have been testing the wrong file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304b9d32f29eb0f2f218ff94e8f5f53580345dcb" translate="yes" xml:space="preserve">
          <source>If you're planning to filetest the return values out of a &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, you'd better prepend the directory in question. Otherwise, because we didn't &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; there, it would have been testing the wrong file.</source>
          <target state="translated">Si planea probar los valores de retorno de un &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; , ser&amp;aacute; mejor que anteponga el directorio en cuesti&amp;oacute;n. De lo contrario, como no hicimos &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; all&amp;iacute;, habr&amp;iacute;a estado probando el archivo incorrecto.</target>
        </trans-unit>
        <trans-unit id="f907870b50e1902094cd7a51307296876f77264b" translate="yes" xml:space="preserve">
          <source>If you're planning to filetest the return values out of a &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, you'd better prepend the directory in question. Otherwise, because we didn't &lt;code&gt;&lt;a href=&quot;chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; there, it would have been testing the wrong file.</source>
          <target state="translated">Si planea probar los valores de retorno de un &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; , ser&amp;aacute; mejor que anteponga el directorio en cuesti&amp;oacute;n. De lo contrario, como no hicimos &lt;code&gt;&lt;a href=&quot;chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; all&amp;iacute;, habr&amp;iacute;a estado probando el archivo incorrecto.</target>
        </trans-unit>
        <trans-unit id="a8c4c2e820002b650e8d2ecdec056a32fb436bfd" translate="yes" xml:space="preserve">
          <source>If you're reading this document because you want to write a formatter subclass, continue reading it and then read &lt;a href=&quot;Pod::Simple::Subclassing&quot;&gt;Pod::Simple::Subclassing&lt;/a&gt;, and then possibly even read &lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; (some of which is for parser-writers, but much of which is notes to formatter-writers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcece448e0aa8ee8873fb9b13cee8077eaed1e18" translate="yes" xml:space="preserve">
          <source>If you're reading this document because you want to write a formatter subclass, continue reading it and then read &lt;a href=&quot;simple/subclassing&quot;&gt;Pod::Simple::Subclassing&lt;/a&gt;, and then possibly even read &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; (some of which is for parser-writers, but much of which is notes to formatter-writers).</source>
          <target state="translated">Si est&amp;aacute; leyendo este documento porque desea escribir una subclase de formateador, contin&amp;uacute;e ley&amp;eacute;ndolo y luego lea &lt;a href=&quot;simple/subclassing&quot;&gt;Pod :: Simple :: Subclassing&lt;/a&gt; , y luego posiblemente incluso lea &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; (algunos de los cuales son para analizadores-escritores, pero muchos de los cuales es notas para formateadores-escritores).</target>
        </trans-unit>
        <trans-unit id="3eca1cf4cac957f4047c12a2cccf4d8bf7c0618e" translate="yes" xml:space="preserve">
          <source>If you're reading this document just because you have a Pod-processing subclass that you want to use, this document (plus the documentation for the subclass) is probably all you need to read.</source>
          <target state="translated">Si estás leyendo este documento sólo porque tienes una subclase de procesamiento de Pod que quieres usar,este documento (más la documentación de la subclase)es probablemente todo lo que necesitas leer.</target>
        </trans-unit>
        <trans-unit id="b7d2d7b7f7d3b1824419996342901896caf3e1ec" translate="yes" xml:space="preserve">
          <source>If you're running Perl on a system that distinguishes between text files and binary files, then you should check out &lt;a href=&quot;#binmode&quot;&gt;binmode&lt;/a&gt; for tips for dealing with this. The key distinction between systems that need &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; and those that don't is their text file formats. Systems like Unix, Mac OS, and Plan 9, that end lines with a single character and encode that character in C as &lt;code&gt;&quot;\n&quot;&lt;/code&gt; do not need &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt;. The rest need it.</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl en un sistema que distingue entre archivos de texto y archivos binarios, deber&amp;iacute;a consultar &lt;a href=&quot;#binmode&quot;&gt;binmode&lt;/a&gt; para obtener consejos para lidiar con esto. La distinci&amp;oacute;n clave entre los sistemas que necesitan &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; y los que no lo necesitan es su formato de archivo de texto. Los sistemas como Unix, Mac OS y Plan 9, que terminan las l&amp;iacute;neas con un solo car&amp;aacute;cter y codifican ese car&amp;aacute;cter en C como &lt;code&gt;&quot;\n&quot;&lt;/code&gt; no necesitan &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; . El resto lo necesita.</target>
        </trans-unit>
        <trans-unit id="ffabd87b995f6de8b55fa057fefd0560b9ffddaf" translate="yes" xml:space="preserve">
          <source>If you're running Perl on a system that distinguishes between text files and binary files, then you should check out &lt;a href=&quot;binmode&quot;&gt;binmode&lt;/a&gt; for tips for dealing with this. The key distinction between systems that need &lt;code&gt;&lt;a href=&quot;binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; and those that don't is their text file formats. Systems like Unix, Mac OS, and Plan 9, that end lines with a single character and encode that character in C as &lt;code&gt;&quot;\n&quot;&lt;/code&gt; do not need &lt;code&gt;&lt;a href=&quot;binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt;. The rest need it.</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl en un sistema que distingue entre archivos de texto y archivos binarios, deber&amp;iacute;a consultar &lt;a href=&quot;binmode&quot;&gt;binmode&lt;/a&gt; para obtener consejos para lidiar con esto. La distinci&amp;oacute;n clave entre los sistemas que necesitan &lt;code&gt;&lt;a href=&quot;binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; y los que no lo necesitan es su formato de archivo de texto. Los sistemas como Unix, Mac OS y Plan 9, que terminan las l&amp;iacute;neas con un solo car&amp;aacute;cter y codifican ese car&amp;aacute;cter en C como &lt;code&gt;&quot;\n&quot;&lt;/code&gt; no necesitan &lt;code&gt;&lt;a href=&quot;binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; . El resto lo necesita.</target>
        </trans-unit>
        <trans-unit id="c1457648c4ce0280355f7ef1bc996151dcbc9e3b" translate="yes" xml:space="preserve">
          <source>If you're running under VMS, the routines in this package are special, in that they're automatically made available to any Perl script, whether you're running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c1b50b544a3df322b75f65dc11d5ac4c69a35f" translate="yes" xml:space="preserve">
          <source>If you're storing handles in an array or hash, or in general whenever you're using any expression more complex than a bareword handle or a plain, unsubscripted scalar variable to retrieve it, you will have to use a block returning the filehandle value instead, in which case the LIST may not be omitted:</source>
          <target state="translated">Si está almacenando mangos en un array o hash,o en general siempre que esté utilizando cualquier expresión más compleja que un mango de barra o una variable escalar simple y no suscrita para recuperarla,tendrá que utilizar un bloque que devuelva el valor del filehandle en su lugar,en cuyo caso la LISTA no podrá ser omitida:</target>
        </trans-unit>
        <trans-unit id="1ed2a4901ca871ef8cee85b2ad371ae78f316632" translate="yes" xml:space="preserve">
          <source>If you're submitting values using the GET method, create a URL and encode the form using the &lt;code&gt;query_form&lt;/code&gt; method:</source>
          <target state="translated">Si env&amp;iacute;a valores mediante el m&amp;eacute;todo GET, cree una URL y codifique el formulario con el m&amp;eacute;todo &lt;code&gt;query_form&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8589815d02edc83abce0f57d2f0a5efb5068a683" translate="yes" xml:space="preserve">
          <source>If you're submitting values using the GET method, create a URL and encode the form using the &lt;code&gt;www_form_urlencode&lt;/code&gt; method from &lt;a href=&quot;HTTP::Tiny&quot;&gt;HTTP::Tiny&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3997ad77a6ffe99bd09989a635705961b00c6f35" translate="yes" xml:space="preserve">
          <source>If you're talking about obscuring method calls in parent classes, see &lt;a href=&quot;perlootut#Overriding-methods-and-method-resolution&quot;&gt;&quot;Overriding methods and method resolution&quot; in perlootut&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f5ca288d27f19393728db02ea58b007b723ea8" translate="yes" xml:space="preserve">
          <source>If you're talking about obscuring method calls in parent classes, see &lt;a href=&quot;perlootut#Overriding-methods-and-method-resolution&quot;&gt;Overriding methods and method resolution in perlootut&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; hablando de ocultar llamadas a m&amp;eacute;todos en clases principales, consulte &lt;a href=&quot;perlootut#Overriding-methods-and-method-resolution&quot;&gt;Anulaci&amp;oacute;n de m&amp;eacute;todos y resoluci&amp;oacute;n de m&amp;eacute;todos en perlootut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9fb0313a494e266734d606dab0fb4c3f5c1638a" translate="yes" xml:space="preserve">
          <source>If you're trying to do variable interpolation, it's definitely better to use the &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt; function, because the older notation can cause people to become confused with the indirect filehandle notation.</source>
          <target state="translated">Si est&amp;aacute; intentando hacer una interpolaci&amp;oacute;n de variables, definitivamente es mejor usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt; , porque la notaci&amp;oacute;n m&amp;aacute;s antigua puede hacer que las personas se confundan con la notaci&amp;oacute;n indirecta del identificador de archivos.</target>
        </trans-unit>
        <trans-unit id="6bfd1f418444ef167b4c1d82e3071f7953fa2d61" translate="yes" xml:space="preserve">
          <source>If you're trying to do variable interpolation, it's definitely better to use the &lt;code&gt;glob()&lt;/code&gt; function, because the older notation can cause people to become confused with the indirect filehandle notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f801c8c750d6402e7dad5eddfca92a856a8093" translate="yes" xml:space="preserve">
          <source>If you're unsure of the meaning of an error message you've run across, &lt;b&gt;perldoc&lt;/b&gt;&lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; for an explanation. If the message isn't in perldiag, it probably isn't generated by Perl. You may have luck consulting your operating system documentation instead.</source>
          <target state="translated">Si no est&amp;aacute; seguro del significado de un mensaje de error con el que se ha encontrado, &lt;b&gt;perldoc &lt;/b&gt;&lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; para obtener una explicaci&amp;oacute;n. Si el mensaje no est&amp;aacute; en perldiag, probablemente no lo genere Perl. En su lugar, puede tener suerte consultando la documentaci&amp;oacute;n de su sistema operativo.</target>
        </trans-unit>
        <trans-unit id="4b93133a107f3dc1672015bebe523f72dafb6b9f" translate="yes" xml:space="preserve">
          <source>If you're uploading to CPAN, the automated gremlins will extract the README file and place that in your CPAN directory. It'll also appear in the main</source>
          <target state="translated">Si estás subiendo al CPAN,los gremlins automatizados extraerán el archivo README y lo colocarán en tu directorio CPAN.También aparecerá en el principal</target>
        </trans-unit>
        <trans-unit id="3ad89e38e60f381b4a7eacce6c02e2db727251db" translate="yes" xml:space="preserve">
          <source>If you're using &lt;code&gt;Archive::Tar&lt;/code&gt; 's &lt;code&gt;extract()&lt;/code&gt; method, &lt;code&gt;setcwd()&lt;/code&gt; will be called for you.</source>
          <target state="translated">Si est&amp;aacute; utilizando &lt;code&gt;Archive::Tar&lt;/code&gt; 's &lt;code&gt;extract()&lt;/code&gt; m&amp;eacute;todo, &lt;code&gt;setcwd()&lt;/code&gt; ser&amp;aacute; llamado para usted.</target>
        </trans-unit>
        <trans-unit id="c63cdfe81388f5792f978ef625e22f4f10866e25" translate="yes" xml:space="preserve">
          <source>If you're using &lt;code&gt;Archive::Tar&lt;/code&gt;'s &lt;code&gt;extract()&lt;/code&gt; method, &lt;code&gt;setcwd()&lt;/code&gt; will be called for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc14a892bad71218591bbe7bbef35b81fe36647" translate="yes" xml:space="preserve">
          <source>If you're using VMStar:</source>
          <target state="translated">Si estás usando VMStar:</target>
        </trans-unit>
        <trans-unit id="907bb15f43743b61b1d7e7cd7fb29070f01e69a0" translate="yes" xml:space="preserve">
          <source>If you're using a module that's not thread-safe for some reason, you can protect yourself by using it from one, and only one thread at all. If you need multiple threads to access such a module, you can use semaphores and lots of programming discipline to control access to it. Semaphores are covered in &lt;a href=&quot;#Basic-semaphores&quot;&gt;&quot;Basic semaphores&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76511f6d042eedee604ffae23aa88974c6f04729" translate="yes" xml:space="preserve">
          <source>If you're using a module that's not thread-safe for some reason, you can protect yourself by using it from one, and only one thread at all. If you need multiple threads to access such a module, you can use semaphores and lots of programming discipline to control access to it. Semaphores are covered in &lt;a href=&quot;#Basic-semaphores&quot;&gt;Basic semaphores&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; utilizando un m&amp;oacute;dulo que no es seguro para subprocesos por alguna raz&amp;oacute;n, puede protegerse us&amp;aacute;ndolo desde uno y solo un subproceso. Si necesita varios subprocesos para acceder a dicho m&amp;oacute;dulo, puede usar sem&amp;aacute;foros y mucha disciplina de programaci&amp;oacute;n para controlar el acceso a &amp;eacute;l. Los sem&amp;aacute;foros se tratan en Sem&amp;aacute;foros &lt;a href=&quot;#Basic-semaphores&quot;&gt;b&amp;aacute;sicos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9aa1259aa5ab1edcbb7c8ec755fbb7d9933607e8" translate="yes" xml:space="preserve">
          <source>If you're using a version of Perl before 5.004, you must call &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; once at the start of your program to seed the random number generator.</source>
          <target state="translated">Si est&amp;aacute; utilizando una versi&amp;oacute;n de Perl anterior a las 5.004, debe llamar a &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; una vez al inicio de su programa para iniciar el generador de n&amp;uacute;meros aleatorios.</target>
        </trans-unit>
        <trans-unit id="45f120602aeb67edc0215d28ccd9011716655e69" translate="yes" xml:space="preserve">
          <source>If you're using a version of Perl before 5.004, you must call &lt;code&gt;srand&lt;/code&gt; once at the start of your program to seed the random number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff91ee4a99e5bbc7fa9f896e9934c1f57633ce3" translate="yes" xml:space="preserve">
          <source>If you're using localization in an application that keeps a configuration file, you might consider something like this in your project class:</source>
          <target state="translated">Si utilizas la localización en una aplicación que guarda un archivo de configuración,podrías considerar algo así en tu clase de proyecto:</target>
        </trans-unit>
        <trans-unit id="e98919158b85262f93e6e1cca66f69e28561af51" translate="yes" xml:space="preserve">
          <source>If you're using references as keys within your hash tables, you're bound to be disappointed when retrieving your data. Indeed, Perl stringifies references used as hash table keys. If you later wish to access the items via another reference stringification (i.e. using the same reference that was used for the key originally to record the value into the hash table), it will work because both references stringify to the same string.</source>
          <target state="translated">Si estás usando referencias como claves dentro de tus tablas de hash,seguramente te decepcionarás al recuperar tus datos.De hecho,Perl encadena las referencias utilizadas como claves de las tablas hash.Si más adelante desea acceder a los elementos a través de otra cadena de referencia (es decir,utilizando la misma referencia que se usó para la clave originalmente para registrar el valor en la tabla de hash),funcionará porque ambas referencias se encadenan a la misma cadena.</target>
        </trans-unit>
        <trans-unit id="cda64e05edf4afefc7befad6697f98377f63d5c2" translate="yes" xml:space="preserve">
          <source>If you're using strict, you</source>
          <target state="translated">Si estás usando el estricto,tú...</target>
        </trans-unit>
        <trans-unit id="5149a95571d7bad870cf9d14644f05c40d4e4c11" translate="yes" xml:space="preserve">
          <source>If you're using the POST method, create your own user agent and encode the content appropriately.</source>
          <target state="translated">Si utiliza el método POST,cree su propio agente de usuario y codifique el contenido apropiadamente.</target>
        </trans-unit>
        <trans-unit id="aa3146750972f670c3e28f005d36e51430c4e4f6" translate="yes" xml:space="preserve">
          <source>If you're using the POST method, the &lt;code&gt;post_form&lt;/code&gt; method will encode the content appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dea5f329a320df5b1676d594bbe7ddb6af4d25" translate="yes" xml:space="preserve">
          <source>If you're using untarzipme or StuffIt, the archive should be extracted now. &lt;b&gt;Or&lt;/b&gt;, you can use the freeware &lt;b&gt;suntar&lt;/b&gt; or</source>
          <target state="translated">Si est&amp;aacute; utilizando untarzipme o StuffIt, el archivo debe extraerse ahora. &lt;b&gt;O&lt;/b&gt; puede utilizar el software gratuito &lt;b&gt;suntar&lt;/b&gt; o</target>
        </trans-unit>
        <trans-unit id="03aaa8fe5a352318fc187dc162360b47448bfe8d" translate="yes" xml:space="preserve">
          <source>If you're working with globs at runtime, and need to disambiguate *^G from *{&quot;^G&quot;}, then you should use the raw NAME method.</source>
          <target state="translated">Si estás trabajando con globs en tiempo de ejecución,y necesitas desambiguar *^G de *{&quot;^G&quot;},entonces deberías usar el método del NOMBRE en bruto.</target>
        </trans-unit>
        <trans-unit id="86326ce985c6268f6aa266be33a273db0ac99980" translate="yes" xml:space="preserve">
          <source>If you're worried about users selecting bad passwords, you should proactively check when they try to change their password (by modifying</source>
          <target state="translated">Si le preocupa que los usuarios seleccionen malas contraseñas,debería comprobar de forma proactiva cuando intenten cambiar su contraseña (modificando</target>
        </trans-unit>
        <trans-unit id="bc54d6339a6f99949e77b0d38ee469b66f200a38" translate="yes" xml:space="preserve">
          <source>If you're worried about users selecting bad passwords, you should proactively check when they try to change their password (by modifying &lt;a href=&quot;http://man.he.net/man1/passwd&quot;&gt;passwd(1)&lt;/a&gt;, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c631e014f0d55506d4df289cf9b8b44d3544afb4" translate="yes" xml:space="preserve">
          <source>If you're writing code, such as an editor, that is supposed to be able to handle any Unicode text data, then you shouldn't be using these code points yourself, and instead allow them in the input. If you need sentinels, they should instead be something that isn't legal Unicode. For UTF-8 data, you can use the bytes 0xC1 and 0xC2 as sentinels, as they never appear in well-formed UTF-8. (There are equivalents for UTF-EBCDIC). You can also store your Unicode code points in integer variables and use negative values as sentinels.</source>
          <target state="translated">Si estás escribiendo un código,como un editor,que se supone que es capaz de manejar cualquier dato de texto Unicode,entonces no deberías usar estos puntos de código tú mismo,y en su lugar permitir que entren en la entrada.Si necesitas centinelas,deberían ser algo que no sea legal para Unicode.Para los datos UTF-8,puede utilizar los bytes 0xC1 y 0xC2 como centinelas,ya que nunca aparecen en un UTF-8 bien formado.(Hay equivalentes para UTF-EBCDIC).También puedes almacenar tus puntos de código Unicode en variables enteras y usar valores negativos como centinelas.</target>
        </trans-unit>
        <trans-unit id="ddd87126ab7eec259a7e6ec167a9a1ed6e855f3d" translate="yes" xml:space="preserve">
          <source>If you're writing your own &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;, you may need to create your own iterators too. If so you'll need to subclass &lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a276dfc7f44e7268960d2975b30664b78a301f5a" translate="yes" xml:space="preserve">
          <source>If you're writing your own &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;, you may need to create your own iterators too. If so you'll need to subclass &lt;a href=&quot;parser/iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; escribiendo su propio &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; , es posible que tambi&amp;eacute;n necesite crear sus propios iteradores. Si es as&amp;iacute;, deber&amp;aacute; &lt;a href=&quot;parser/iterator&quot;&gt;crear una&lt;/a&gt; subclase de TAP :: Parser :: Iterator .</target>
        </trans-unit>
        <trans-unit id="6d3ca82cb6d85e36f098b04f831321b68f9f28ab" translate="yes" xml:space="preserve">
          <source>If you're writing your own documentation in POD, the</source>
          <target state="translated">Si estás escribiendo tu propia documentación en POD,el</target>
        </trans-unit>
        <trans-unit id="7e39071fa8860b1c165c3510aa6e985ec88eb293" translate="yes" xml:space="preserve">
          <source>If you've already got some other kind of email object, consider passing it to &lt;a href=&quot;Email::Abstract&quot;&gt;Email::Abstract&lt;/a&gt; and then using its cast method to get an &lt;a href=&quot;Email::MIME&quot;&gt;Email::MIME&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609941eec97975f4a0354cdbfbac32c60f31f261" translate="yes" xml:space="preserve">
          <source>If you've already got some other kind of email object, consider passing it to &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Abstract&quot;&gt;Email::Abstract&lt;/a&gt; and then using its cast method to get an &lt;a href=&quot;http://search.cpan.org/perldoc/Email::MIME&quot;&gt;Email::MIME&lt;/a&gt; object:</source>
          <target state="translated">Si ya tiene alg&amp;uacute;n otro tipo de objeto de correo electr&amp;oacute;nico, considere pasarlo a &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Abstract&quot;&gt;Email :: Abstract&lt;/a&gt; y luego use su m&amp;eacute;todo de transmisi&amp;oacute;n para obtener un objeto &lt;a href=&quot;http://search.cpan.org/perldoc/Email::MIME&quot;&gt;Email :: MIME&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="49b89fe4b531fe550fa8cdc2584e0b4d10940e84" translate="yes" xml:space="preserve">
          <source>If you've been around Perl a while, all this talk of escape sequences may seem familiar. Similar escape sequences are used in double-quoted strings and in fact the regexps in Perl are mostly treated as double-quoted strings. This means that variables can be used in regexps as well. Just like double-quoted strings, the values of the variables in the regexp will be substituted in before the regexp is evaluated for matching purposes. So we have:</source>
          <target state="translated">Si has estado cerca de Perl por un tiempo,toda esta charla de secuencias de escape puede parecerte familiar.Se utilizan secuencias de escape similares en cuerdas de doble cita y,de hecho,los regexps en Perl son tratados en su mayoría como cuerdas de doble cita.Esto significa que las variables pueden utilizarse también en los regexps.Al igual que las cadenas de doble cotización,los valores de las variables en el regexp serán sustituidos antes de que el regexp sea evaluado para fines de comparación.Así que lo hemos hecho:</target>
        </trans-unit>
        <trans-unit id="3fd6cd86298d336909fb8326200590d5396e0f52" translate="yes" xml:space="preserve">
          <source>If you've chosen to use vac 4, be sure to run 4.4.0.3. Older versions will turn up nasty later on. For vac 5 be sure to run at least 5.0.1.0, but vac 5.0.2.6 or up is highly recommended. Note that since IBM has removed vac 5.0.2.1 through 5.0.2.5 from the software depot, these versions should be considered obsolete.</source>
          <target state="translated">Si has elegido usar el Vac 4,asegúrate de usar el 4.4.0.3.Las versiones más viejas se volverán desagradables más tarde.Para el Vac 5 asegúrese de ejecutar al menos 5.0.1.0,pero el Vac 5.0.2.6 o superior es muy recomendable.Tenga en cuenta que,dado que IBM ha eliminado del depósito de software los vac 5.0.2.1 a 5.0.2.5,estas versiones deben considerarse obsoletas.</target>
        </trans-unit>
        <trans-unit id="d7141035b834e9d56f2958df18eb9cabc9003c5d" translate="yes" xml:space="preserve">
          <source>If you've found a bug with the perl interpreter or one of the modules in the standard library (those that come with Perl), you can submit a bug report to the GitHub issue tracker at &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f36de392e6562a98fef168bd0f4fd2b6d55a056" translate="yes" xml:space="preserve">
          <source>If you've found a bug with the perl interpreter or one of the modules in the standard library (those that come with Perl), you can use the &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; utility that comes with Perl (&amp;gt;= 5.004). It collects information about your installation to include with your message, then sends the message to the right place.</source>
          <target state="translated">Si ha encontrado un error con el int&amp;eacute;rprete de Perl o uno de los m&amp;oacute;dulos en la biblioteca est&amp;aacute;ndar (los que vienen con Perl), puede usar la utilidad &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; que viene con Perl (&amp;gt; = 5.004). Recopila informaci&amp;oacute;n sobre su instalaci&amp;oacute;n para incluirla en su mensaje y luego env&amp;iacute;a el mensaje al lugar correcto.</target>
        </trans-unit>
        <trans-unit id="b588af6702d40920fe6ce77142ddd4be23c82335" translate="yes" xml:space="preserve">
          <source>If you've just implemented a new feature, complete with doc, tests and well-commented code, a brief commit message will often suffice. If, however, you've just changed a single character deep in the parser or lexer, you might need to write a small novel to ensure that future readers understand what you did and why you did it.</source>
          <target state="translated">Si acabas de implementar una nueva característica,completa con doc,pruebas y código bien comentado,un breve mensaje de confirmación a menudo será suficiente.Sin embargo,si acabas de cambiar un solo personaje en el parser o lexer,puede que necesites escribir una pequeña novela para asegurarte de que los futuros lectores entiendan lo que hiciste y por qué lo hiciste.</target>
        </trans-unit>
        <trans-unit id="f8a6a3763262120fa20c3dbe30b8abff9d5efbc9" translate="yes" xml:space="preserve">
          <source>If you've played with the examples above and tried to embed a script that</source>
          <target state="translated">Si has jugado con los ejemplos anteriores y has intentado incrustar un guión que</target>
        </trans-unit>
        <trans-unit id="b894c5ed183f4f7ceceb8937af0c436c24867f7d" translate="yes" xml:space="preserve">
          <source>If you've read all the documentation in the document and the ones listed above, you're more than ready to hack on Perl.</source>
          <target state="translated">Si has leído toda la documentación del documento y las anteriores,estás más que listo para hackear Perl.</target>
        </trans-unit>
        <trans-unit id="f7a6adb80f0b785d2ca1e30e58d59926760d3865" translate="yes" xml:space="preserve">
          <source>If you've read this far in the docs, you've seen this:</source>
          <target state="translated">Si has leído hasta aquí en los documentos,has visto esto:</target>
        </trans-unit>
        <trans-unit id="a5397b1b280e497ccfa7136829a3dcfe46903bd5" translate="yes" xml:space="preserve">
          <source>If you've selected VMS syntax, and the file specification you pass to one of these routines contains a &quot;/&quot;, they assume you are using Unix emulation and apply the Unix syntax rules instead, for that function call only.</source>
          <target state="translated">Si ha seleccionado la sintaxis del VMS,y la especificación del archivo que pasa a una de estas rutinas contiene un &quot;/&quot;,suponen que está utilizando la emulación de Unix y aplican las reglas de la sintaxis de Unix en su lugar,sólo para esa llamada a la función.</target>
        </trans-unit>
        <trans-unit id="33caaa832315103fc3c31014628789c923502260" translate="yes" xml:space="preserve">
          <source>If you, as a user, do not need explicit access to the &quot;seen&quot; hash, then you can set the &lt;code&gt;Sparseseen&lt;/code&gt; option to allow Data::Dumper to eschew building the &quot;seen&quot; hash for scalars that are known not to possess more than one reference. This speeds up serialization considerably if you use the XS implementation.</source>
          <target state="translated">Si usted, como usuario, no necesita acceso expl&amp;iacute;cito al hash &quot;visto&quot;, entonces puede configurar la opci&amp;oacute;n &lt;code&gt;Sparseseen&lt;/code&gt; para permitir que Data :: Dumper evite construir el hash &quot;visto&quot; para escalares que se sabe que no poseen m&amp;aacute;s de una referencia. Esto acelera considerablemente la serializaci&amp;oacute;n si usa la implementaci&amp;oacute;n XS.</target>
        </trans-unit>
        <trans-unit id="5641fffcc326bff3bce0a7d7f55bb29dc536ec90" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;DESTROY&lt;/code&gt; method issues a warning during global destruction, the Perl interpreter will append the string &quot; during global destruction&quot; to the warning.</source>
          <target state="translated">Si su m&amp;eacute;todo &lt;code&gt;DESTROY&lt;/code&gt; emite una advertencia durante la destrucci&amp;oacute;n global, el int&amp;eacute;rprete de Perl agregar&amp;aacute; la cadena &quot;durante la destrucci&amp;oacute;n global&quot; a la advertencia.</target>
        </trans-unit>
        <trans-unit id="e35bc3de6478c74b3aa05b11b90d2c08a9c1eb35" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;DESTROY&lt;/code&gt; method throws an error, this error will be ignored. It will not be sent to &lt;code&gt;STDERR&lt;/code&gt; and it will not cause the program to die. However, if your destructor is running inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; block, then the error will change the value of &lt;code&gt;$@&lt;/code&gt; .</source>
          <target state="translated">Si su m&amp;eacute;todo &lt;code&gt;DESTROY&lt;/code&gt; arroja un error, este error ser&amp;aacute; ignorado. No se enviar&amp;aacute; a &lt;code&gt;STDERR&lt;/code&gt; y no provocar&amp;aacute; la muerte del programa. Sin embargo, si su destructor se est&amp;aacute; ejecutando dentro de un bloque &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , entonces el error cambiar&amp;aacute; el valor de &lt;code&gt;$@&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc569fc556abfc5922ff5d102893edd09c51cd29" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;DESTROY&lt;/code&gt; method throws an exception, this will not cause any control transfer beyond exiting the method. The exception will be reported to &lt;code&gt;STDERR&lt;/code&gt; as a warning, marked &quot;(in cleanup)&quot;, and Perl will continue with whatever it was doing before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8f1a46e80e1b05c149003c578cc17ee1529e3e" translate="yes" xml:space="preserve">
          <source>If your AIX is installed with 64-bit support, you can expect 64-bit configurations to work. In combination with threads some tests might still fail.</source>
          <target state="translated">Si su AIX se instala con soporte de 64 bits,puede esperar que las configuraciones de 64 bits funcionen.En combinación con los hilos,algunas pruebas podrían fallar.</target>
        </trans-unit>
        <trans-unit id="91cec945ceabbd679cf0509d145b2a724547b098" translate="yes" xml:space="preserve">
          <source>If your AIX system is installed with 64-bit support, you can expect 64-bit configurations to work. If you want to use 64-bit Perl on AIX 6.1 you need an APAR for a libc.a bug which affects (n)dbm_XXX functions. The APAR number for this problem is IZ39077.</source>
          <target state="translated">Si su sistema AIX está instalado con soporte de 64 bits,puede esperar que las configuraciones de 64 bits funcionen.Si quiere usar Perl de 64 bits en AIX 6.1 necesita un APAR para un bug de libc.a que afecta a las funciones (n)dbm_XXX.El número APAR para este problema es IZ39077.</target>
        </trans-unit>
        <trans-unit id="70f3f72afc2e138648aa89e71840c2969a866fbe" translate="yes" xml:space="preserve">
          <source>If your EXISTS function returns true, Memoize will try to fetch the cached value by invoking &lt;code&gt;C-&amp;gt;FETCH(key)&lt;/code&gt; . MyExpirePolicy::FETCH should return the cached value. Otherwise, Memoize will call the memoized function to compute the appropriate value, and will store it into the cache by calling &lt;code&gt;C-&amp;gt;STORE(key, value)&lt;/code&gt; .</source>
          <target state="translated">Si su funci&amp;oacute;n EXISTS devuelve verdadero, Memoize intentar&amp;aacute; recuperar el valor en cach&amp;eacute; invocando &lt;code&gt;C-&amp;gt;FETCH(key)&lt;/code&gt; . MyExpirePolicy :: FETCH deber&amp;iacute;a devolver el valor almacenado en cach&amp;eacute;. De lo contrario, Memoize llamar&amp;aacute; a la funci&amp;oacute;n memorizada para calcular el valor apropiado y lo almacenar&amp;aacute; en la cach&amp;eacute; llamando a &lt;code&gt;C-&amp;gt;STORE(key, value)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24acb5b4fe58034fbc714327d4b7fa709ac07a2e" translate="yes" xml:space="preserve">
          <source>If your EXISTS function returns true, Memoize will try to fetch the cached value by invoking &lt;code&gt;C-&amp;gt;FETCH(key)&lt;/code&gt;. MyExpirePolicy::FETCH should return the cached value. Otherwise, Memoize will call the memoized function to compute the appropriate value, and will store it into the cache by calling &lt;code&gt;C-&amp;gt;STORE(key, value)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e28af787c875d4ef84c9b0c4d899259d2721791" translate="yes" xml:space="preserve">
          <source>If your PO and MO files are under a path elsewhere than &lt;code&gt;auto/&lt;/code&gt; , you may specify it using the &lt;code&gt;Path&lt;/code&gt; option.</source>
          <target state="translated">Si sus archivos PO y MO se encuentran en una ruta que no sea &lt;code&gt;auto/&lt;/code&gt; , puede especificarla usando la opci&amp;oacute;n &lt;code&gt;Path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6409d07584753033defae54495b9d4c75a783436" translate="yes" xml:space="preserve">
          <source>If your PO and MO files are under a path elsewhere than &lt;code&gt;auto/&lt;/code&gt;, you may specify it using the &lt;code&gt;Path&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c89e96cd32d30e30553bcd6fbdd11d2690ecc7" translate="yes" xml:space="preserve">
          <source>If your Perl book isn't listed and you think it should be, let us know.</source>
          <target state="translated">Si su libro de Perl no está en la lista y cree que debería estarlo,háganoslo saber.</target>
        </trans-unit>
        <trans-unit id="6d6e9b58c49da08447f00e52e9068c5bb7576426" translate="yes" xml:space="preserve">
          <source>If your Perl script is itself encoded in &lt;a href=&quot;#Unicode-Encodings&quot;&gt;UTF-8&lt;/a&gt;, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; pragma must be explicitly included to enable recognition of that (in string or regular expression literals, or in identifier names). &lt;b&gt;This is the only time when an explicit &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
utf8&lt;/code&gt; is needed.&lt;/b&gt; (See &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;).</source>
          <target state="translated">Si su secuencia de comandos Perl est&amp;aacute; codificada en &lt;a href=&quot;#Unicode-Encodings&quot;&gt;UTF-8&lt;/a&gt; , el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; debe incluirse expl&amp;iacute;citamente para permitir el reconocimiento de eso (en cadenas de caracteres o literales de expresi&amp;oacute;n regular, o en nombres de identificadores). &lt;b&gt;Este es el &amp;uacute;nico momento en el que se necesita un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; expl&amp;iacute;cito . &lt;/b&gt;(Ver &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="17170cc5afbf6627bb42f8bd492f952db9b4e546" translate="yes" xml:space="preserve">
          <source>If your Perl script is itself encoded in &lt;a href=&quot;#Unicode-Encodings&quot;&gt;UTF-8&lt;/a&gt;, the &lt;code&gt;use utf8&lt;/code&gt; pragma must be explicitly included to enable recognition of that (in string or regular expression literals, or in identifier names). &lt;b&gt;This is the only time when an explicit &lt;code&gt;use utf8&lt;/code&gt; is needed.&lt;/b&gt; (See &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1456eed38b989e671412e5dabebc6b17a35fdee8" translate="yes" xml:space="preserve">
          <source>If your Perl success stories and testimonials may be of help to others who wish to advocate the use of Perl in their applications, or if you wish to simply express your gratitude to Larry and the Perl developers, please write to perl-thanks@perl.org .</source>
          <target state="translated">Si sus historias de éxito y testimonios sobre Perl pueden ser de ayuda para otros que deseen abogar por el uso de Perl en sus aplicaciones,o si simplemente desea expresar su gratitud a Larry y a los desarrolladores de Perl,por favor escriba a perl-thanks@perl.org.</target>
        </trans-unit>
        <trans-unit id="bb4511b53500ce7e796c6be816fd150d579ce6bd" translate="yes" xml:space="preserve">
          <source>If your Perl was configured with &lt;b&gt;-Accflags=-DPERL_MEM_LOG&lt;/b&gt;, setting the environment variable &lt;code&gt;PERL_MEM_LOG&lt;/code&gt; enables logging debug messages. The value has the form &lt;code&gt;&amp;lt;&lt;i&gt;number&lt;/i&gt;&amp;gt;[m][s][t]&lt;/code&gt;, where &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; is the file descriptor number you want to write to (2 is default), and the combination of letters specifies that you want information about (m)emory and/or (s)v, optionally with (t)imestamps. For example, &lt;code&gt;PERL_MEM_LOG=1mst&lt;/code&gt; logs all information to stdout. You can write to other opened file descriptors in a variety of ways:</source>
          <target state="translated">Si su Perl se configur&amp;oacute; con &lt;b&gt;-Accflags = -DPERL_MEM_LOG&lt;/b&gt; , configurar la variable de entorno &lt;code&gt;PERL_MEM_LOG&lt;/code&gt; habilita el registro de mensajes de depuraci&amp;oacute;n. El valor tiene la forma &lt;code&gt;&amp;lt;&lt;i&gt;number&lt;/i&gt;&amp;gt;[m][s][t]&lt;/code&gt; , donde &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; es el n&amp;uacute;mero de descriptor de archivo en el que desea escribir (2 es el predeterminado) y la combinaci&amp;oacute;n de letras especifica que desea informaci&amp;oacute;n sobre (m) emory y / o (s) v, opcionalmente con (t) sellos. Por ejemplo, &lt;code&gt;PERL_MEM_LOG=1mst&lt;/code&gt; registra toda la informaci&amp;oacute;n en stdout. Puede escribir en otros descriptores de archivos abiertos de varias formas:</target>
        </trans-unit>
        <trans-unit id="283276e9d183ad9eef7a4c2f27ba79df3995c5ec" translate="yes" xml:space="preserve">
          <source>If your algorithm requires that &lt;code&gt;reduce&lt;/code&gt; produce an identity value, then make sure that you always pass that identity value as the first argument to prevent &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; being returned</source>
          <target state="translated">Si el algoritmo requiere que &lt;code&gt;reduce&lt;/code&gt; n producir un valor de identidad, a continuaci&amp;oacute;n, aseg&amp;uacute;rese de que siempre pasa ese valor de identidad como primer argumento para evitar &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ser devueltos</target>
        </trans-unit>
        <trans-unit id="0fc2dbb19ef8bc25dbcf8ac8f222951284588b99" translate="yes" xml:space="preserve">
          <source>If your algorithm requires that &lt;code&gt;reduce&lt;/code&gt; produce an identity value, then make sure that you always pass that identity value as the first argument to prevent &lt;code&gt;undef&lt;/code&gt; being returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711905ae29609d52da565bc6443425ee76c015f8" translate="yes" xml:space="preserve">
          <source>If your application requires accepting data from untrusted sources, you are best off with a less powerful and more-likely safe serialization format and implementation. If your data is sufficiently simple, &lt;a href=&quot;Cpanel::JSON::XS&quot;&gt;Cpanel::JSON::XS&lt;/a&gt;, &lt;a href=&quot;Data::MessagePack&quot;&gt;Data::MessagePack&lt;/a&gt; or &lt;a href=&quot;sereal&quot;&gt;Sereal&lt;/a&gt; are the best choices and offer maximum interoperability, but note that Sereal is &lt;a href=&quot;Sereal::Decoder#ROBUSTNESS&quot;&gt;unsafe by default&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826651d97de1fb76050036181700ee31a9d7cf34" translate="yes" xml:space="preserve">
          <source>If your application requires accepting data from untrusted sources, you are best off with a less powerful and more-likely safe serialization format and implementation. If your data is sufficiently simple, JSON is a good choice and offers maximum interoperability.</source>
          <target state="translated">Si su aplicación requiere aceptar datos de fuentes no fiables,lo mejor es que utilice un formato y una aplicación de serialización menos potente y más segura.Si sus datos son suficientemente simples,JSON es una buena opción y ofrece la máxima interoperabilidad.</target>
        </trans-unit>
        <trans-unit id="6fedf0cadcf133b09c8efb7dc310cff7b7302cdf" translate="yes" xml:space="preserve">
          <source>If your changes are in a single git commit, run the following commands to generate the patch file and attach it to your bug report:</source>
          <target state="translated">Si tus cambios están en un solo commit git,ejecuta los siguientes comandos para generar el archivo de parche y adjuntarlo a tu informe de fallos:</target>
        </trans-unit>
        <trans-unit id="db2c1fd426ed9f2c60db2929723c4b3e4c8b99fa" translate="yes" xml:space="preserve">
          <source>If your changes are in multiple commits, generate a patch file for each one and provide them to perlbug's &lt;code&gt;-p&lt;/code&gt; option separated by commas:</source>
          <target state="translated">Si sus cambios est&amp;aacute;n en m&amp;uacute;ltiples confirmaciones, genere un archivo de parche para cada uno y proporci&amp;oacute;nelos a la opci&amp;oacute;n &lt;code&gt;-p&lt;/code&gt; de perlbug separados por comas:</target>
        </trans-unit>
        <trans-unit id="e23115cc45aeaf527b25ea3227a4ca58a4bbcf8b" translate="yes" xml:space="preserve">
          <source>If your class does have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method, we strongly recommend that you override &lt;code&gt;can&lt;/code&gt; in your class as well. Your overridden &lt;code&gt;can&lt;/code&gt; method should return a subroutine reference for any method that your &lt;code&gt;AUTOLOAD&lt;/code&gt; responds to.</source>
          <target state="translated">Si su clase tiene un m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; , le recomendamos encarecidamente que tambi&amp;eacute;n anule &lt;code&gt;can&lt;/code&gt; en su clase. Su m&amp;eacute;todo &lt;code&gt;can&lt;/code&gt; anulado deber&amp;iacute;a devolver una referencia de subrutina para cualquier m&amp;eacute;todo al que responda su &lt;code&gt;AUTOLOAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94e34cf5528ccd5dcdb342c8820f7f03af06ab35" translate="yes" xml:space="preserve">
          <source>If your class has a better way of doing roles, then you should not load this class and instead simply say that your class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7692bb0712bd055e295162eb35d771d86fcad6" translate="yes" xml:space="preserve">
          <source>If your class responds to method calls via &lt;code&gt;AUTOLOAD&lt;/code&gt; , you may want to overload &lt;code&gt;can&lt;/code&gt; to return a subroutine reference for methods which your &lt;code&gt;AUTOLOAD&lt;/code&gt; method handles.</source>
          <target state="translated">Si su clase responde a las llamadas a m&amp;eacute;todos a trav&amp;eacute;s de &lt;code&gt;AUTOLOAD&lt;/code&gt; , es posible que desee sobrecargar &lt;code&gt;can&lt;/code&gt; para devolver una referencia de subrutina para los m&amp;eacute;todos que maneja su m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2801f0953803749827f324dc366675780126e87" translate="yes" xml:space="preserve">
          <source>If your class responds to method calls via &lt;code&gt;AUTOLOAD&lt;/code&gt;, you may want to overload &lt;code&gt;can&lt;/code&gt; to return a subroutine reference for methods which your &lt;code&gt;AUTOLOAD&lt;/code&gt; method handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb0c308f5c747cd8786d190dad063cb23775dff" translate="yes" xml:space="preserve">
          <source>If your code expects an octet sequence this can be used to validate that you've received one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51ef4c74c99126a798f834a23d66ffbb341d516" translate="yes" xml:space="preserve">
          <source>If your code is destined for systems with severely constrained (or missing!) virtual memory systems then you want to be</source>
          <target state="translated">Si su código está destinado a sistemas con sistemas de memoria virtual severamente restringidos (¡o faltantes!)entonces usted quiere ser</target>
        </trans-unit>
        <trans-unit id="b8ec960b62faa8f2d9e01172beeee1747d962ecd" translate="yes" xml:space="preserve">
          <source>If your code is to run on Perl versions earlier than 5.20, it is worthwhile to note that using &lt;code&gt;$`&lt;/code&gt; and &lt;code&gt;$'&lt;/code&gt; slows down regexp matching quite a bit, while &lt;code&gt;$&amp;amp;&lt;/code&gt; slows it down to a lesser extent, because if they are used in one regexp in a program, they are generated for</source>
          <target state="translated">Si su c&amp;oacute;digo se ejecutar&amp;aacute; en versiones de Perl anteriores a la 5.20, vale la pena tener en cuenta que el uso de &lt;code&gt;$`&lt;/code&gt; y &lt;code&gt;$'&lt;/code&gt; ralentiza bastante la coincidencia de expresiones regulares, mientras que &lt;code&gt;$&amp;amp;&lt;/code&gt; ralentiza en menor medida, porque si se usan en una expresi&amp;oacute;n regular en un programa, se generan para</target>
        </trans-unit>
        <trans-unit id="4b7710e8f3ca27397097d7cc62e45c608961218a" translate="yes" xml:space="preserve">
          <source>If your code is to run on various platforms, keep in mind that the upper limit depends on the platform. It is much larger on 64-bit word sizes than 32-bit ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17494161785039e334258f44851b99624e54807" translate="yes" xml:space="preserve">
          <source>If your code is to run on various platforms, keep in mind that the upper limit depends on the platform. It is much larger on 64-bit word sizes than 32-bit ones. For 32-bit integers, &lt;code&gt;IV_MAX&lt;/code&gt; equals &lt;code&gt;0x7FFFFFFF&lt;/code&gt;, for 64-bit integers, &lt;code&gt;IV_MAX&lt;/code&gt; equals &lt;code&gt;0x7FFFFFFFFFFFFFFF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35b1b808d1504007b3ea085214451b1ee61358c" translate="yes" xml:space="preserve">
          <source>If your code just uses the 52 letters A-Z and a-z, plus SPACE, the digits 0-9, and the punctuation characters that Perl uses, plus a few controls that are denoted by escape sequences like &lt;code&gt;\n&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt; , then there's nothing special about using Perl, and your code may very well work on an ASCII machine without change.</source>
          <target state="translated">Si su c&amp;oacute;digo solo usa las 52 letras AZ y az, m&amp;aacute;s ESPACIO, los d&amp;iacute;gitos 0-9 y los caracteres de puntuaci&amp;oacute;n que usa Perl, m&amp;aacute;s algunos controles que se denotan mediante secuencias de escape como &lt;code&gt;\n&lt;/code&gt; y &lt;code&gt;\t&lt;/code&gt; , entonces no hay nada especial sobre el uso de Perl, y su c&amp;oacute;digo puede funcionar en una m&amp;aacute;quina ASCII sin cambios.</target>
        </trans-unit>
        <trans-unit id="fd44ae53a2c35816d36a21d629151afa4456598c" translate="yes" xml:space="preserve">
          <source>If your code just uses the 52 letters A-Z and a-z, plus SPACE, the digits 0-9, and the punctuation characters that Perl uses, plus a few controls that are denoted by escape sequences like &lt;code&gt;\n&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt;, then there's nothing special about using Perl, and your code may very well work on an ASCII machine without change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc20635c4dbc0c4a81b5c97270c1432edba3070f" translate="yes" xml:space="preserve">
          <source>If your code needs to be compatible with versions of perl without &lt;code&gt;use feature 'unicode_strings';&lt;/code&gt;, you can force Unicode semantics on a given string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9b4a996206aa3ecbfc36df229dca4fb6c7a7b5" translate="yes" xml:space="preserve">
          <source>If your code still needs to run on older versions, stick to &lt;code&gt;foreach&lt;/code&gt; for your topicalizer and you will be less unhappy.</source>
          <target state="translated">Si su c&amp;oacute;digo a&amp;uacute;n necesita ejecutarse en versiones anteriores, ap&amp;eacute;guese a &lt;code&gt;foreach&lt;/code&gt; para su topicalizador y ser&amp;aacute; menos infeliz.</target>
        </trans-unit>
        <trans-unit id="dcc0823ff9797cfd85918a8c234e7eca9a51dc4f" translate="yes" xml:space="preserve">
          <source>If your command contains &lt;b&gt;special characters&lt;/b&gt; (&amp;lt; &amp;gt; | &amp;amp;), it will be internally stringified before executing the command, to avoid that these special characters are escaped and passed as arguments instead of retaining their special meaning.</source>
          <target state="translated">Si su comando contiene &lt;b&gt;caracteres especiales&lt;/b&gt; (&amp;lt;&amp;gt; | &amp;amp;), se le asignar&amp;aacute; una cadena interna antes de ejecutar el comando, para evitar que estos caracteres especiales se escapen y se pasen como argumentos en lugar de conservar su significado especial.</target>
        </trans-unit>
        <trans-unit id="43394cfe59583c3fd94893ba6ef409bba1f68bbd" translate="yes" xml:space="preserve">
          <source>If your computer can grow the character set without further processing, you can go ahead and use it. This is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf42d5b15f10438a9ce2c86e1004158d46b18003" translate="yes" xml:space="preserve">
          <source>If your copy of Perl is recent enough to contain this documentation (version 5.002 or later), then the perl library (and</source>
          <target state="translated">Si su copia de Perl es lo suficientemente reciente como para contener esta documentación (versión 5.002 o posterior),entonces la biblioteca de perl (y</target>
        </trans-unit>
        <trans-unit id="2f8c2d2817394bbcc4a451c1a33b9dff96a282f0" translate="yes" xml:space="preserve">
          <source>If your device is not rooted, you may still be in luck. Try running this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc9b0cc9eec68d672ffff71ad1ff12aed25c2cc" translate="yes" xml:space="preserve">
          <source>If your encoding can work with PerlIO but needs line buffering, you MUST define this method so it returns true. 7bit ISO-2022 encodings are one example that needs this. When this method is missing, false is assumed.</source>
          <target state="translated">Si su codificación puede funcionar con PerlIO pero necesita un buffer de línea,DEBE definir este método para que vuelva a ser verdadero.Las codificaciones ISO-2022 de 7 bits son un ejemplo que necesita esto.Cuando este método no existe,se asume que es falso.</target>
        </trans-unit>
        <trans-unit id="d924438284770c83006ec82d036605b95adc1613" translate="yes" xml:space="preserve">
          <source>If your encoding does not support PerlIO for some reasons, just;</source>
          <target state="translated">Si tu codificación no es compatible con PerlIO por algunas razones,sólo..;</target>
        </trans-unit>
        <trans-unit id="67ac503167790c1d42d0fa145e05ebf3299a6484" translate="yes" xml:space="preserve">
          <source>If your event needs to have extra effects on the &lt;a href=&quot;Test2::Hub&quot;&gt;Test2::Hub&lt;/a&gt; you can override this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb14712099b199ef0cd902ac0e502361e5d3ab8" translate="yes" xml:space="preserve">
          <source>If your executables start with something like #!perl or #!/usr/bin/perl MakeMaker will change this to the path of the perl 'Makefile.PL' was invoked with so the programs will be sure to run properly even if perl is not in /usr/bin/perl.</source>
          <target state="translated">Si sus ejecutables comienzan con algo como #!perl o #!/usr/bin/perl MakeMaker lo cambiará a la ruta del perl con el que se invocó 'Makefile.PL' para que los programas se ejecuten correctamente aunque el perl no esté en /usr/bin/perl.</target>
        </trans-unit>
        <trans-unit id="0c644837e9e9bd2635823c6fa674e7d01fcd0f60" translate="yes" xml:space="preserve">
          <source>If your extension uses some features of Perl which are not available on older releases of Perl, your users would appreciate an early meaningful warning. You would probably put this information into the</source>
          <target state="translated">Si su extensión utiliza algunas características de Perl que no están disponibles en versiones anteriores de Perl,sus usuarios agradecerán una advertencia temprana y significativa.Probablemente pondrían esta información en el</target>
        </trans-unit>
        <trans-unit id="adbe147193e70e68bb2371038fd445f29bb86c7b" translate="yes" xml:space="preserve">
          <source>If your function already returns a reference, you don't need to create the reference yourself.</source>
          <target state="translated">Si su función ya devuelve una referencia,no necesita crearla usted mismo.</target>
        </trans-unit>
        <trans-unit id="8e3814e00e4bd2f311a16402f4ba979bbd48ac96" translate="yes" xml:space="preserve">
          <source>If your gcc is configured to use GNU as and ld but you want to use the Solaris ones instead to build perl, then you'll need to add -B/usr/ccs/bin/ to the gcc command line. One convenient way to do that is with</source>
          <target state="translated">Si su gcc está configurado para usar GNU as y ld pero quiere usar los de Solaris en su lugar para construir perl,entonces necesitará agregar -B/usr/ccs/bin/a la línea de comando de gcc.Una forma conveniente de hacerlo es con</target>
        </trans-unit>
        <trans-unit id="c36d951537cc72fb144d389f8c16c06615d06bc8" translate="yes" xml:space="preserve">
          <source>If your goal is purely monitoring of events use the &lt;code&gt;Test2::Hub-&amp;gt;listen()&lt;/code&gt; method exported by Test::More to watch events as they are fired. If you wish to modify results before they go to TAP look at the &lt;code&gt;Test2::Hub-&amp;gt;filter()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5872fc905315842d011082a682a6367cfb7ca9e6" translate="yes" xml:space="preserve">
          <source>If your hash could have repeated values, the methods above will only find one of the associated keys. This may or may not worry you. If it does worry you, you can always reverse the hash into a hash of arrays instead:</source>
          <target state="translated">Si su hash pudiera tener valores repetidos,los métodos anteriores sólo encontrarán una de las claves asociadas.Esto puede o no preocuparle.Si te preocupa,siempre puedes invertir el hash en un hash de matrices en su lugar:</target>
        </trans-unit>
        <trans-unit id="ef30095e54f0686dc32e619850a74327f603829f" translate="yes" xml:space="preserve">
          <source>If your host system's architecture is 32 bits, remember to change the &lt;code&gt;x86_64&lt;/code&gt;'s below to &lt;code&gt;x86&lt;/code&gt;'s. On a similar vein, the examples below use the 4.8 toolchain; if you want to use something older or newer (for example, the 4.4.3 toolchain included in the 8th revision of the NDK), just change those to the relevant version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7de42f17abf69fc8056c809db5d175a47bd9c23" translate="yes" xml:space="preserve">
          <source>If your input is binary, and is supposed to remain binary, you shouldn't decode it to a text string, of course. But in all other cases, you should decode it.</source>
          <target state="translated">Si tu entrada es binaria,y se supone que debe seguir siendo binaria,no deberías decodificarla en una cadena de texto,por supuesto.Pero en todos los demás casos,deberías decodificarlo.</target>
        </trans-unit>
        <trans-unit id="d2667a072564b25eaaca13a334f7f9d262c4dc4d" translate="yes" xml:space="preserve">
          <source>If your lexicon is a tied hash the simple act of caching the compiled value can be fatal.</source>
          <target state="translated">Si su léxico es un hash atado,el simple hecho de almacenar el valor compilado puede ser fatal.</target>
        </trans-unit>
        <trans-unit id="84a874bfb13cfbdc7a992429f47c0892596ec6c2" translate="yes" xml:space="preserve">
          <source>If your locale environment variables (&lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; ) contain the strings 'UTF-8' or 'UTF8' (case-insensitive matching), the default encoding of your &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; , and &lt;code&gt;STDERR&lt;/code&gt; , and of &lt;b&gt;any subsequent file open&lt;/b&gt;, is UTF-8.</source>
          <target state="translated">Si sus variables de entorno local ( &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; ) contienen las cadenas 'UTF-8' o 'UTF8' (coincidencia que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas), la codificaci&amp;oacute;n predeterminada de su &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; y &lt;code&gt;STDERR&lt;/code&gt; , y de &lt;b&gt;cualquier archivo posterior abierto&lt;/b&gt; , es UTF-8.</target>
        </trans-unit>
        <trans-unit id="48763bb2696546d08447fe45d15a3762e501f27c" translate="yes" xml:space="preserve">
          <source>If your locale environment variables (&lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LANG&lt;/code&gt;) contain the strings 'UTF-8' or 'UTF8' (case-insensitive matching), the default encoding of your &lt;code&gt;STDIN&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt;, and &lt;code&gt;STDERR&lt;/code&gt;, and of &lt;b&gt;any subsequent file open&lt;/b&gt;, is UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6549b9662c9333f9038a43e101cb863214588ba8" translate="yes" xml:space="preserve">
          <source>If your locale is a UTF-8 locale, starting in Perl v5.20, Perl works well for all categories except &lt;code&gt;LC_COLLATE&lt;/code&gt; dealing with sorting and the &lt;code&gt;cmp&lt;/code&gt; operator.</source>
          <target state="translated">Si su configuraci&amp;oacute;n regional es UTF-8, a partir de Perl v5.20, Perl funciona bien para todas las categor&amp;iacute;as excepto &lt;code&gt;LC_COLLATE&lt;/code&gt; que se ocupa de la ordenaci&amp;oacute;n y el operador &lt;code&gt;cmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ca7f425bac55c9b318a8c22ef06af377bf476b0" translate="yes" xml:space="preserve">
          <source>If your locale is a UTF-8 locale, starting in Perl v5.26, Perl works well for all categories; before this, starting with Perl v5.20, it works for all categories but &lt;code&gt;LC_COLLATE&lt;/code&gt;, which deals with sorting and the &lt;code&gt;cmp&lt;/code&gt; operator. But note that the standard &lt;code&gt;&lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;Unicode::Collate::Locale&quot;&gt;Unicode::Collate::Locale&lt;/a&gt;&lt;/code&gt; modules offer much more powerful solutions to collation issues, and work on earlier releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b150d3cc1b32cbef03e749b88c3f5c90012ceb" translate="yes" xml:space="preserve">
          <source>If your newly minted styles refer to any new #variables, you'll need to define a callback subroutine that will populate (or modify) those variables. They are then available for use in the style you've chosen.</source>
          <target state="translated">Si tus estilos recién acuñados se refieren a cualquier nueva #variable,necesitarás definir una subrutina de devolución de llamada que poblará (o modificará)esas variables.Entonces estarán disponibles para ser usadas en el estilo que hayas elegido.</target>
        </trans-unit>
        <trans-unit id="db09b35e2a7d627ad25d25e5e66ae789bbe364b8" translate="yes" xml:space="preserve">
          <source>If your operating system supports a proper mv(1) utility or its functional equivalent, this works:</source>
          <target state="translated">Si su sistema operativo soporta una utilidad mv(1)adecuada o su equivalente funcional,esto funciona:</target>
        </trans-unit>
        <trans-unit id="3bc865c47f68e828a2747632075834057f8b741e" translate="yes" xml:space="preserve">
          <source>If your parser object has been set to accept other formatting codes, then they will be presented like these B/C/F/I codes -- i.e., without any attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b728e9092f3f9368f8a8be6c5ce7886b0a62de25" translate="yes" xml:space="preserve">
          <source>If your patch changes code (rather than just changing documentation), you should also include one or more test cases which illustrate the bug you're fixing or validate the new functionality you're adding. In general, you should update an existing test file rather than create a new one.</source>
          <target state="translated">Si tu parche cambia de código (en lugar de sólo cambiar la documentación),también deberías incluir uno o más casos de prueba que ilustren el fallo que estás arreglando o que validen la nueva funcionalidad que estás añadiendo.En general,deberías actualizar un archivo de prueba existente en lugar de crear uno nuevo.</target>
        </trans-unit>
        <trans-unit id="1c8689164a8ea6c3d7088da54ac1d855f027a272" translate="yes" xml:space="preserve">
          <source>If your perl does not support times larger than &lt;code&gt;2^31&lt;/code&gt; seconds then this module is likely to fail at processing dates beyond the year 2038. There are moves afoot to fix that in perl. Alternatively use 64 bit perl. Or if none of those are options, use the &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; module which has support for years well into the future and past.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a3de11301e669e248cee7c9e70b2562ff6e9f5" translate="yes" xml:space="preserve">
          <source>If your perl does not support times larger than &lt;code&gt;2^31&lt;/code&gt; seconds then this module is likely to fail at processing dates beyond the year 2038. There are moves afoot to fix that in perl. Alternatively use 64 bit perl. Or if none of those are options, use the &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; module which has support for years well into the future and past.</source>
          <target state="translated">Si su perl no admite tiempos superiores a &lt;code&gt;2^31&lt;/code&gt; segundos, es probable que este m&amp;oacute;dulo falle en fechas de procesamiento posteriores al a&amp;ntilde;o 2038. Se est&amp;aacute;n tomando medidas para solucionarlo en perl. Alternativamente, use perl de 64 bits. O si ninguna de esas son opciones, use el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; que tiene soporte durante a&amp;ntilde;os en el futuro y en el pasado.</target>
        </trans-unit>
        <trans-unit id="b5f6d77f27ea6c645390efe18bf989b76fa95e9b" translate="yes" xml:space="preserve">
          <source>If your perl is compiled with &lt;code&gt;-DDEBUGGING&lt;/code&gt; , you may use the &lt;b&gt;-Dr&lt;/b&gt; flag on the command line.</source>
          <target state="translated">Si su perl est&amp;aacute; compilado con &lt;code&gt;-DDEBUGGING&lt;/code&gt; , puede usar el indicador &lt;b&gt;-Dr&lt;/b&gt; en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="4c77f5e67615687160ce5a2c5aa3da747ca2d11d" translate="yes" xml:space="preserve">
          <source>If your perl is compiled with &lt;code&gt;-DDEBUGGING&lt;/code&gt;, you may use the &lt;b&gt;-Dr&lt;/b&gt; flag on the command line, and &lt;code&gt;-Drv&lt;/code&gt; for more verbose information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb3bbcc486c0ac676b28f725bda572e8ce7d210" translate="yes" xml:space="preserve">
          <source>If your perl is using Perl's malloc() and was compiled with the necessary switches (this is the default), then it will print memory usage statistics after compiling your code when &lt;code&gt;$ENV{PERL_DEBUG_MSTATS}
&amp;gt; 1&lt;/code&gt; , and before termination of the program when &lt;code&gt;$ENV{PERL_DEBUG_MSTATS} &amp;gt;= 1&lt;/code&gt; . The report format is similar to the following example:</source>
          <target state="translated">Si su perl est&amp;aacute; usando malloc () de Perl y fue compilado con los modificadores necesarios (este es el predeterminado), entonces imprimir&amp;aacute; las estad&amp;iacute;sticas de uso de memoria despu&amp;eacute;s de compilar su c&amp;oacute;digo cuando &lt;code&gt;$ENV{PERL_DEBUG_MSTATS} &amp;gt; 1&lt;/code&gt; , y antes de la terminaci&amp;oacute;n del programa cuando &lt;code&gt;$ENV{PERL_DEBUG_MSTATS} &amp;gt;= 1&lt;/code&gt; . El formato del informe es similar al siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="3b5e6d64fef920594f60da6d6dc6a30084b30ce5" translate="yes" xml:space="preserve">
          <source>If your perl is using Perl's malloc() and was compiled with the necessary switches (this is the default), then it will print memory usage statistics after compiling your code when &lt;code&gt;$ENV{PERL_DEBUG_MSTATS} &amp;gt; 1&lt;/code&gt;, and before termination of the program when &lt;code&gt;$ENV{PERL_DEBUG_MSTATS} &amp;gt;= 1&lt;/code&gt;. The report format is similar to the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ec21abacef113106404f37c8ffeaf0991584f3" translate="yes" xml:space="preserve">
          <source>If your perl supports &lt;code&gt;PerlIO&lt;/code&gt; (which is the default), you can use a &lt;code&gt;PerlIO&lt;/code&gt; layer to decode and encode directly via a filehandle. The following two examples are fully identical in functionality:</source>
          <target state="translated">Si su perl admite &lt;code&gt;PerlIO&lt;/code&gt; (que es el predeterminado), puede usar una capa &lt;code&gt;PerlIO&lt;/code&gt; para decodificar y codificar directamente a trav&amp;eacute;s de un identificador de archivo . Los dos ejemplos siguientes son completamente id&amp;eacute;nticos en funcionalidad:</target>
        </trans-unit>
        <trans-unit id="605c431eb189340e08603e962b29cd94bebb00d6" translate="yes" xml:space="preserve">
          <source>If your platform does not support disabling this option but you still want to listen for both &lt;code&gt;AF_INET&lt;/code&gt; and &lt;code&gt;AF_INET6&lt;/code&gt; connections you will have to create two listening sockets, one bound to each protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f282d94e305f215eb5d8388f1861231e1f9e48da" translate="yes" xml:space="preserve">
          <source>If your program does not need compatibility for Perl 5.6 and earlier, the recommended approach is to apply appropriate IO disciplines, so all data in your program become unicode-strings. See &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt;, &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;perlfunc#binmode&quot;&gt;&quot;binmode&quot; in perlfunc&lt;/a&gt; for how.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b23131a86f1ea3c3da4be4496eb45f056a245b0" translate="yes" xml:space="preserve">
          <source>If your program is using the POSIX 2008 multi-thread locale functionality, you should switch into the global locale and set that up properly before starting the Perl interpreter. It will then properly switch back to using the thread-safe functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091f7db96070043c9514e8ee2a91acbe99a23b27" translate="yes" xml:space="preserve">
          <source>If your rc file contains:</source>
          <target state="translated">Si tu archivo RC contiene:</target>
        </trans-unit>
        <trans-unit id="1cc732c143d69a605c4a486fe1919dbc8511b3b7" translate="yes" xml:space="preserve">
          <source>If your routine iterates through some kind of list (such as a list of files, or records in a database) you may consider providing a callback so that users can manipulate each element of the list in turn. File::Find provides an example of this with its &lt;code&gt;find(\&amp;amp;wanted, $dir)&lt;/code&gt; syntax.</source>
          <target state="translated">Si su rutina itera a trav&amp;eacute;s de alg&amp;uacute;n tipo de lista (como una lista de archivos o registros en una base de datos), puede considerar proporcionar una devoluci&amp;oacute;n de llamada para que los usuarios puedan manipular cada elemento de la lista por turno. File :: Find proporciona un ejemplo de esto con su sintaxis de &lt;code&gt;find(\&amp;amp;wanted, $dir)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa4660b471bef6e2a6cf6ca593555a146c22ffd2" translate="yes" xml:space="preserve">
          <source>If your script works with huge numbers and Calc is too slow for them, you can also for the loading of one of these libraries and if none of them can be used, the code dies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d69711a4dff3eb5c2c54e4925f7a2d49b42d0e" translate="yes" xml:space="preserve">
          <source>If your script works with huge numbers and Calc is too slow for them, you can also for the loading of one of these libraries and if none of them can be used, the code will die:</source>
          <target state="translated">Si tu guión funciona con números enormes y Calc es demasiado lento para ellos,también puedes para la carga de una de estas librerías y si ninguna de ellas puede ser usada,el código morirá:</target>
        </trans-unit>
        <trans-unit id="686d70af0d50a3bff3e29e104e2f82c37c794acd" translate="yes" xml:space="preserve">
          <source>If your stdio requires a seek or eof between reads and writes on a particular stream, so does Perl. (This doesn't apply to sysread() and syswrite().)</source>
          <target state="translated">Si su estandarte requiere una búsqueda o eof entre las lecturas y escritos en una corriente particular,también lo hace Perl.(Esto no se aplica a sysread()y syswrite().)</target>
        </trans-unit>
        <trans-unit id="93c7fafa71ca8ecee9c4bc6ffa3da0deecf48bf5" translate="yes" xml:space="preserve">
          <source>If your sub-class does not also derive from &lt;code&gt;IO::Socket::INET&lt;/code&gt; or similar (e.g. &lt;code&gt;IO::Socket::IP&lt;/code&gt;, &lt;code&gt;IO::Socket::INET6&lt;/code&gt; or &lt;code&gt;IO::Socket::SSL&lt;/code&gt;) then you must provide the following methods by other means yourself: &lt;code&gt;close()&lt;/code&gt; and &lt;code&gt;timeout()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ff0a2e68bd649cc4624def7ce4b58902e2e24e" translate="yes" xml:space="preserve">
          <source>If your subsecond sleeping is implemented with &lt;code&gt;nanosleep()&lt;/code&gt; instead of &lt;code&gt;usleep()&lt;/code&gt; , you can mix subsecond sleeping with signals since &lt;code&gt;nanosleep()&lt;/code&gt; does not use signals. This, however, is not portable, and you should first check for the truth value of &lt;code&gt;&amp;amp;Time::HiRes::d_nanosleep&lt;/code&gt; to see whether you have nanosleep, and then carefully read your &lt;code&gt;nanosleep()&lt;/code&gt; C API documentation for any peculiarities.</source>
          <target state="translated">Si su sue&amp;ntilde;o de subsegundos se implementa con &lt;code&gt;nanosleep()&lt;/code&gt; lugar de &lt;code&gt;usleep()&lt;/code&gt; , puede mezclar el sue&amp;ntilde;o de subsegundos con se&amp;ntilde;ales ya que &lt;code&gt;nanosleep()&lt;/code&gt; no usa se&amp;ntilde;ales. Sin embargo, esto no es port&amp;aacute;til, y primero debe verificar el valor de verdad de &lt;code&gt;&amp;amp;Time::HiRes::d_nanosleep&lt;/code&gt; para ver si tiene nanosleep, y luego leer cuidadosamente la documentaci&amp;oacute;n de la API de &lt;code&gt;nanosleep()&lt;/code&gt; C para detectar cualquier peculiaridad.</target>
        </trans-unit>
        <trans-unit id="eaecaa38de7e044e0f0abcb184f5c42e588cde80" translate="yes" xml:space="preserve">
          <source>If your subsecond sleeping is implemented with &lt;code&gt;nanosleep()&lt;/code&gt; instead of &lt;code&gt;usleep()&lt;/code&gt;, you can mix subsecond sleeping with signals since &lt;code&gt;nanosleep()&lt;/code&gt; does not use signals. This, however, is not portable, and you should first check for the truth value of &lt;code&gt;&amp;amp;Time::HiRes::d_nanosleep&lt;/code&gt; to see whether you have nanosleep, and then carefully read your &lt;code&gt;nanosleep()&lt;/code&gt; C API documentation for any peculiarities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c582512684ef5d894959bd9f55e416e8035f6a" translate="yes" xml:space="preserve">
          <source>If your system does not support &lt;code&gt;sockatmark&lt;/code&gt;, the &lt;code&gt;use&lt;/code&gt; declaration will fail at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe6bd7053ca68da494e6d40d10fb833af71cceb" translate="yes" xml:space="preserve">
          <source>If your system doesn't support dynamic loading, you still probably ought to use &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;. See &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; and &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt; for more information (in brief, just use &lt;b&gt;make perl&lt;/b&gt; instead of a plain &lt;b&gt;make&lt;/b&gt; to rebuild perl with a new static extension).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7033933f15e134ae512f052ac986d8b0ac72a9af" translate="yes" xml:space="preserve">
          <source>If your system doesn't support dynamic loading, you still probably ought to use &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;. See &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; and &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt; for more information (in brief, just use &lt;b&gt;make perl&lt;/b&gt; instead of a plain &lt;b&gt;make&lt;/b&gt; to rebuild perl with a new static extension).</source>
          <target state="translated">Si su sistema no es compatible con la carga din&amp;aacute;mica, probablemente deber&amp;iacute;a utilizar &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt; . Consulte &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; y &lt;a href=&quot;extutils/makemaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n (en resumen, utilice &lt;b&gt;make perl en&lt;/b&gt; lugar de un &lt;b&gt;make&lt;/b&gt; simple para reconstruir perl con una nueva extensi&amp;oacute;n est&amp;aacute;tica).</target>
        </trans-unit>
        <trans-unit id="976a5d23704d8a7827f274e64a1b65ab7ed369e5" translate="yes" xml:space="preserve">
          <source>If your system has a strange pointer size--meaning a pointer is neither as big as an int nor as big as a long--it may not be possible to pack or unpack pointers in big- or little-endian byte order. Attempting to do so raises an exception.</source>
          <target state="translated">Si tu sistema tiene un tamaño extraño de puntero,es decir,un puntero no es ni tan grande como un int ni tan grande como un long,puede que no sea posible empaquetar o desempaquetar los punteros en orden de byte grande o pequeño.El intento de hacerlo plantea una excepción.</target>
        </trans-unit>
        <trans-unit id="c8f634435d2540d4ac325a2965a4ae17a54489a6" translate="yes" xml:space="preserve">
          <source>If your system has the &lt;code&gt;sigaction()&lt;/code&gt; function then signal handlers are installed using it. This means you get reliable signal handling.</source>
          <target state="translated">Si su sistema tiene la funci&amp;oacute;n &lt;code&gt;sigaction()&lt;/code&gt; , los manejadores de se&amp;ntilde;ales se instalan us&amp;aacute;ndola. Esto significa que obtiene un manejo de se&amp;ntilde;al confiable.</target>
        </trans-unit>
        <trans-unit id="fd4695d7aa352602cd4c4febe7f1355134b6280c" translate="yes" xml:space="preserve">
          <source>If your system lacks &lt;code&gt;gettimeofday()&lt;/code&gt; or an emulation of it you don't get &lt;code&gt;gettimeofday()&lt;/code&gt; or the one-argument form of &lt;code&gt;tv_interval()&lt;/code&gt; . If your system lacks all of &lt;code&gt;nanosleep()&lt;/code&gt; , &lt;code&gt;usleep()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;poll&lt;/code&gt; , you don't get &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; , &lt;code&gt;Time::HiRes::nanosleep()&lt;/code&gt; , or &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; . If your system lacks both &lt;code&gt;ualarm()&lt;/code&gt; and &lt;code&gt;setitimer()&lt;/code&gt; you don't get &lt;code&gt;Time::HiRes::ualarm()&lt;/code&gt; or &lt;code&gt;Time::HiRes::alarm()&lt;/code&gt; .</source>
          <target state="translated">Si su sistema carece de &lt;code&gt;gettimeofday()&lt;/code&gt; o una emulaci&amp;oacute;n del mismo, no obtiene &lt;code&gt;gettimeofday()&lt;/code&gt; o la forma de un argumento de &lt;code&gt;tv_interval()&lt;/code&gt; . Si su sistema carece de &lt;code&gt;nanosleep()&lt;/code&gt; , &lt;code&gt;usleep()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;poll&lt;/code&gt; , no obtendr&amp;aacute; &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; , &lt;code&gt;Time::HiRes::nanosleep()&lt;/code&gt; o &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; . Si su sistema carece de &lt;code&gt;ualarm()&lt;/code&gt; y &lt;code&gt;setitimer()&lt;/code&gt; , no obtiene &lt;code&gt;Time::HiRes::ualarm()&lt;/code&gt; o &lt;code&gt;Time::HiRes::alarm()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff14b6674e60e3293827358011cc8a222c542ec1" translate="yes" xml:space="preserve">
          <source>If your system lacks &lt;code&gt;gettimeofday()&lt;/code&gt; or an emulation of it you don't get &lt;code&gt;gettimeofday()&lt;/code&gt; or the one-argument form of &lt;code&gt;tv_interval()&lt;/code&gt;. If your system lacks all of &lt;code&gt;nanosleep()&lt;/code&gt;, &lt;code&gt;usleep()&lt;/code&gt;, &lt;code&gt;select()&lt;/code&gt;, and &lt;code&gt;poll&lt;/code&gt;, you don't get &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt;, &lt;code&gt;Time::HiRes::nanosleep()&lt;/code&gt;, or &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt;. If your system lacks both &lt;code&gt;ualarm()&lt;/code&gt; and &lt;code&gt;setitimer()&lt;/code&gt; you don't get &lt;code&gt;Time::HiRes::ualarm()&lt;/code&gt; or &lt;code&gt;Time::HiRes::alarm()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3404e2a55faf84740517a5a0e24d39c3bdace4c" translate="yes" xml:space="preserve">
          <source>If your system supports dynamic loading, for reasons of portability and sanity you probably ought to use &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt; (also part of the standard perl distribution). This tool converts C header files to Perl extensions. See &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; for how to get started with &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;.</source>
          <target state="translated">Si su sistema admite la carga din&amp;aacute;mica, por razones de portabilidad y cordura, probablemente deber&amp;iacute;a usar &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt; (tambi&amp;eacute;n parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl). Esta herramienta convierte archivos de encabezado C a extensiones Perl. Consulte &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; para saber c&amp;oacute;mo empezar con &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c32ad1b9a818a02634ef64d7fbd9495e5b9eebf0" translate="yes" xml:space="preserve">
          <source>If your system supports the portable operating system programming interface (POSIX), you can use the following code, which you'll note turns off echo processing as well.</source>
          <target state="translated">Si su sistema soporta la interfaz de programación del sistema operativo portátil (POSIX),puede usar el siguiente código,que,como verá,también desactiva el procesamiento del eco.</target>
        </trans-unit>
        <trans-unit id="8aa741c7264a81c87bbbe88de85bd0da9b62830f" translate="yes" xml:space="preserve">
          <source>If your version control system supports revision numbers (git doesn't easily), the simplest way to do it automatically is to use its revision number (you are using version control, right?).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf51a5f9f685e20ec9fa41065bc4bbf9f512757f" translate="yes" xml:space="preserve">
          <source>If z is a pure real number (i.e. &lt;code&gt;b == 0&lt;/code&gt; ), then the above yields:</source>
          <target state="translated">Si z es un n&amp;uacute;mero real puro (es decir, &lt;code&gt;b == 0&lt;/code&gt; ), entonces lo anterior produce:</target>
        </trans-unit>
        <trans-unit id="4b680ec7961a3ae6c6b5a4223fc07bd86a65a488" translate="yes" xml:space="preserve">
          <source>If z is a pure real number (i.e. &lt;code&gt;b == 0&lt;/code&gt;), then the above yields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866f3e73958b23adbe3e41bd3c02c8704cd81475" translate="yes" xml:space="preserve">
          <source>If, and only if, a token is a bailout token, you can get an &quot;explanation&quot; via this method. The explanation is the text after the mystical &quot;Bail out!&quot; words which appear in the tap output.</source>
          <target state="translated">Si,y sólo si,una ficha es una ficha de rescate,puedes obtener una &quot;explicación&quot; a través de este método.La explicación es el texto después de las místicas palabras &quot;¡Bail out!&quot; que aparecen en la salida de la llave.</target>
        </trans-unit>
        <trans-unit id="4f07d749cb3d9f280003a3874694f44dd0f9a196" translate="yes" xml:space="preserve">
          <source>If, at the end of a run you get the message</source>
          <target state="translated">Si al final de una carrera recibes el mensaje</target>
        </trans-unit>
        <trans-unit id="748ad1a2344142dff26b49b0321a5e20db97e62e" translate="yes" xml:space="preserve">
          <source>If, for a given file, Perl is unable to create the backup file as specified in the extension then it will skip that file and continue on with the next one (if it exists).</source>
          <target state="translated">Si,para un archivo determinado,Perl no puede crear el archivo de copia de seguridad como se especifica en la extensión,entonces se saltará ese archivo y continuará con el siguiente (si existe).</target>
        </trans-unit>
        <trans-unit id="3190be8312e8fef021a8d99a686331f02896c645" translate="yes" xml:space="preserve">
          <source>If, for some odd reason, you really want to see the whole file at once rather than processing line-by-line, you can slurp it in (as long as you can fit the whole thing in memory!):</source>
          <target state="translated">Si,por alguna extraña razón,realmente quieres ver todo el archivo de una sola vez en lugar de procesar línea por línea,puedes sorberlo (¡siempre y cuando puedas meterlo todo en la memoria!):</target>
        </trans-unit>
        <trans-unit id="8294d55294098cd1496efb3523c86ff173cf45ca" translate="yes" xml:space="preserve">
          <source>If, for some reason, you have a file descriptor instead of a filehandle (perhaps you used &lt;code&gt;POSIX::open&lt;/code&gt; ), you can use the &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; function from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module:</source>
          <target state="translated">Si, por alguna raz&amp;oacute;n, tiene un descriptor de archivo en lugar de un identificador de archivo (quiz&amp;aacute;s us&amp;oacute; &lt;code&gt;POSIX::open&lt;/code&gt; ), puede usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; del m&amp;oacute;dulo &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="47aebbdcad1bcff07c1f3a89cb274cc12375e577" translate="yes" xml:space="preserve">
          <source>If, for some reason, you have a file descriptor instead of a filehandle (perhaps you used &lt;code&gt;POSIX::open&lt;/code&gt;), you can use the &lt;code&gt;close()&lt;/code&gt; function from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7db8cc8d76b7ab2eda9890eb0170658ba11e9d0" translate="yes" xml:space="preserve">
          <source>If, surprisingly, the implementor of a Pod formatter can't find a satisfactory pre-existing table mapping from Unicode characters to escapes in the target format (e.g., a decent table of Unicode characters to *roff escapes), it will be necessary to build such a table. If you are in this circumstance, you should begin with the characters in the range 0x00A0 - 0x00FF, which is mostly the heavily used accented characters. Then proceed (as patience permits and fastidiousness compels) through the characters that the (X)HTML standards groups judged important enough to merit mnemonics for. These are declared in the (X)HTML specifications at the www.W3.org site. At time of writing (September 2001), the most recent entity declaration files are:</source>
          <target state="translated">Si,sorprendentemente,el implementador de un formateador de Pod no puede encontrar un mapeo de tablas preexistentes satisfactorio desde los caracteres Unicode hasta los escapes en el formato de destino (por ejemplo,una tabla decente de caracteres Unicode para los escapes *roff),será necesario construir dicha tabla.Si se encuentra en esta circunstancia,debería comenzar con los caracteres en el rango 0x00A0-0x00FF,que son los caracteres acentuados más utilizados.A continuación,proceda (según lo permita la paciencia y lo obligue la fastidiosidad)con los caracteres que los grupos de normas (X)HTML consideraron suficientemente importantes para merecer la mnemotécnica.Estos se declaran en las especificaciones (X)HTML en el sitio www.W3.org.En el momento de escribir este artículo (septiembre de 2001),los archivos de declaración de entidades más recientes son:</target>
        </trans-unit>
        <trans-unit id="3906f56da4298c4e536de3ebef7105b8dabd75e9" translate="yes" xml:space="preserve">
          <source>Ignore &lt;code&gt;dSP&lt;/code&gt; and &lt;code&gt;PUSHMARK(SP)&lt;/code&gt; for now. They will be discussed in the next example.</source>
          <target state="translated">Ignore &lt;code&gt;dSP&lt;/code&gt; y &lt;code&gt;PUSHMARK(SP)&lt;/code&gt; por ahora. Se analizar&amp;aacute;n en el siguiente ejemplo.</target>
        </trans-unit>
        <trans-unit id="51be86b7131a2f6dd784631a551ad5a124bca532" translate="yes" xml:space="preserve">
          <source>Ignore ASCII vs. EBCDIC sort differences.</source>
          <target state="translated">Ignora las diferencias de clasificación entre ASCII y EBCDIC.</target>
        </trans-unit>
        <trans-unit id="be1854061543f14642d8f6508b59d601baedc0d4" translate="yes" xml:space="preserve">
          <source>Ignore case.</source>
          <target state="translated">Ignora el caso.</target>
        </trans-unit>
        <trans-unit id="2e352eadd6b1808d1d1be87c9129c2b0edb3ffba" translate="yes" xml:space="preserve">
          <source>Ignore the message about missing &lt;code&gt;ln&lt;/code&gt; , and about &lt;code&gt;-c&lt;/code&gt; option to tr</source>
          <target state="translated">Ignore el mensaje sobre la falta de &lt;code&gt;ln&lt;/code&gt; y la opci&amp;oacute;n &lt;code&gt;-c&lt;/code&gt; de tr</target>
        </trans-unit>
        <trans-unit id="72b96e98da641687751a87c43bd0316c4d008be2" translate="yes" xml:space="preserve">
          <source>Ignore the message about missing &lt;code&gt;ln&lt;/code&gt;, and about &lt;code&gt;-c&lt;/code&gt; option to tr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a9d1669608fdb03cba836ec390fdcfb1aebfee" translate="yes" xml:space="preserve">
          <source>Ignore the warning.</source>
          <target state="translated">Ignora la advertencia.</target>
        </trans-unit>
        <trans-unit id="2789be88625c10d2c36088f497ee1c896ef071b5" translate="yes" xml:space="preserve">
          <source>Ignore them: in IRIX 5.3 there is no way to quieten ld about this.</source>
          <target state="translated">Ignóralos:en el IRIX 5.3 no hay manera de callar esto.</target>
        </trans-unit>
        <trans-unit id="a8788733d30e5e6ffc336904ff3697b5a05072af" translate="yes" xml:space="preserve">
          <source>Ignored if perl is run setuid or setgid. Used only for some limited startup randomization (hash keys) if &lt;code&gt;-T&lt;/code&gt; or &lt;code&gt;-t&lt;/code&gt; perl is started with tainting enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4603ab54eaf129f7b585f0908e9724e9831b25" translate="yes" xml:space="preserve">
          <source>Ignores any arguments and returns a new &lt;code&gt;TAP::Parser::Scheduler::Spinner&lt;/code&gt; object.</source>
          <target state="translated">Ignora cualquier argumento y devuelve un nuevo objeto &lt;code&gt;TAP::Parser::Scheduler::Spinner&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="870e1aa14cd979f7f1df9488b978998300179625" translate="yes" xml:space="preserve">
          <source>Ignoring A Thread</source>
          <target state="translated">Ignorar un hilo</target>
        </trans-unit>
        <trans-unit id="c345599472f697123763177ed798b710a78992e1" translate="yes" xml:space="preserve">
          <source>Ignoring zero length \N{} in character class in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e1853ac655507e727a7ecfa474945c84b582ca" translate="yes" xml:space="preserve">
          <source>Ill-formed CRTL environ value &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98f3b9adc99d6eca5487e3635466c7897d1e208" translate="yes" xml:space="preserve">
          <source>Ill-formed message in prime_env_iter: |%s|</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8d69f56b24624da5f02c3105fccc4af1aafcfd" translate="yes" xml:space="preserve">
          <source>Illegal %s digit '%c' ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e60a32732ccee2f9f27142f8031ba26b8d7dc3" translate="yes" xml:space="preserve">
          <source>Illegal binary digit '%c'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0069ddda69becb8f7b322dfab0d91887d6b38cf" translate="yes" xml:space="preserve">
          <source>Illegal character \%o (carriage return)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a9e7d5d6c79cbead9e7a219edc1cf3115b4e4c" translate="yes" xml:space="preserve">
          <source>Illegal character after '_' in prototype for %s : %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac523c566b2bdb256c5d3bdfff364808f4e23fbd" translate="yes" xml:space="preserve">
          <source>Illegal character following sigil in a subroutine signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9714b34609d4e303cabdd33bab8c4221880bccec" translate="yes" xml:space="preserve">
          <source>Illegal character in prototype for %s : %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403f39532270d448d0836526af86ee2840377440" translate="yes" xml:space="preserve">
          <source>Illegal declaration of anonymous subroutine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8441ad3dcf356cbc9055eaec17cb99c6b40b3f60" translate="yes" xml:space="preserve">
          <source>Illegal declaration of subroutine %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b402a1aef9fad4e86bc75fa0d98c8b6064013045" translate="yes" xml:space="preserve">
          <source>Illegal division by zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc34fa84665015bf956a8d0f9e7eab7f7b556cb7" translate="yes" xml:space="preserve">
          <source>Illegal modulus zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44efc0fd61ea8302183ad4e06ae2e1a20b915b53" translate="yes" xml:space="preserve">
          <source>Illegal number of bits in vec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def84612dec0b9b85613fc3abd33e76ff6143abb" translate="yes" xml:space="preserve">
          <source>Illegal octal digit '%c'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dffed7bacaff2750f20d75c00b10e5dda311cc" translate="yes" xml:space="preserve">
          <source>Illegal operator following parameter in a subroutine signature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16a63da830be887556e1c445a15cd94836e397c" translate="yes" xml:space="preserve">
          <source>Illegal pattern in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91183d6c24353dd4efc4edca2cf3d736c588f3ed" translate="yes" xml:space="preserve">
          <source>Illegal suidscript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61cca4d5acdb186d61af82a2d57012a7e14f42a" translate="yes" xml:space="preserve">
          <source>Illegal switch in PERL5OPT: -%c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579239231de5fef3bb30ece4ec0c3be4f3f8e3dc" translate="yes" xml:space="preserve">
          <source>Illegal user-defined property name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee7b0829696083ec110a0ef1b14678e7a72b39d" translate="yes" xml:space="preserve">
          <source>Illegal.</source>
          <target state="translated">Illegal.</target>
        </trans-unit>
        <trans-unit id="31b9d2eef058fc852ec75440518312fc6b32dcd0" translate="yes" xml:space="preserve">
          <source>Illinois</source>
          <target state="translated">Illinois</target>
        </trans-unit>
        <trans-unit id="817c7ffeee7200e3277cebf23a0b3dcda06d9829" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich &amp;lt;</source>
          <target state="translated">Ilya Zakharevich &amp;lt;</target>
        </trans-unit>
        <trans-unit id="91b2e058cf65f0cabffee0e92051934b87d3bc3b" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich (ilya@math.ohio-state.edu)</source>
          <target state="translated">Ilya Zakharevich (ilya@math.ohio-state.edu)</target>
        </trans-unit>
        <trans-unit id="031c817d16973027b8790762eb4b0c35cafca1e9" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich &lt;a href=&quot;mailto:ilyaz@cpan.org&quot;&gt;mailto:ilyaz@cpan.org&lt;/a&gt;.</source>
          <target state="translated">Ilya Zakharevich &lt;a href=&quot;mailto:ilyaz@cpan.org&quot;&gt;mailto: ilyaz@cpan.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afff5ba88102f80e4aa07d73498f8952aca29188" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich &lt;a href=&quot;mailto:perl-module-hash-memoize@ilyaz.org&quot;&gt;mailto:perl-module-hash-memoize@ilyaz.org&lt;/a&gt;.</source>
          <target state="translated">Ilya Zakharevich &lt;a href=&quot;mailto:perl-module-hash-memoize@ilyaz.org&quot;&gt;mailto: perl-module-hash-memoize@ilyaz.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4248a84d563fa7da7c5bae89f2669c77f908cab3" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich &lt;code&gt;ilya@math.ohio-state.edu&lt;/code&gt;</source>
          <target state="translated">Ilya Zakharevich &lt;code&gt;ilya@math.ohio-state.edu&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33d5a3e7b454b4e36eb89767df3980ae73e9890b" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich ilya@math.ohio-state.edu</source>
          <target state="translated">Ilya Zakharevich ilya@math.ohio-state.edu</target>
        </trans-unit>
        <trans-unit id="0182df78996d3eb0a76431c398a0f49f0059b1f4" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich originally extracted &lt;code&gt;XSLoader&lt;/code&gt; from &lt;code&gt;DynaLoader&lt;/code&gt; .</source>
          <target state="translated">Ilya Zakharevich extrajo originalmente &lt;code&gt;XSLoader&lt;/code&gt; de &lt;code&gt;DynaLoader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="317e8b465d1e45c2334fa7d0b49224fc7b0d2b79" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich originally extracted &lt;code&gt;XSLoader&lt;/code&gt; from &lt;code&gt;DynaLoader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5ae6dbba6c0391c239461a326224f80e808d8a" translate="yes" xml:space="preserve">
          <source>Ilya Zakharevich, cpan@ilyaz.org</source>
          <target state="translated">Ilya Zakharevich,cpan@ilyaz.org</target>
        </trans-unit>
        <trans-unit id="f84c916319b1f129948f110816b58ce5079819de" translate="yes" xml:space="preserve">
          <source>Images, Pixmap and Bitmap Manipulation, Drawing, and Graphing</source>
          <target state="translated">Imágenes,Manipulación de Pixmap y Bitmap,Dibujo y Gráficos</target>
        </trans-unit>
        <trans-unit id="6a42b9040934c9280685a56f5dc127e9e6ee5b8d" translate="yes" xml:space="preserve">
          <source>Imagine that the here-doc end marker is at the beginning of the line. Now you can use &lt;code&gt;\p{InKana}&lt;/code&gt; and &lt;code&gt;\P{InKana}&lt;/code&gt; .</source>
          <target state="translated">Imagina que el marcador de final de here-doc est&amp;aacute; al principio de la l&amp;iacute;nea. Ahora puede usar &lt;code&gt;\p{InKana}&lt;/code&gt; y &lt;code&gt;\P{InKana}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b72c2258352d34a102a5998755a0b68fcb5627e1" translate="yes" xml:space="preserve">
          <source>Imagine that the here-doc end marker is at the beginning of the line. Now you can use &lt;code&gt;\p{InKana}&lt;/code&gt; and &lt;code&gt;\P{InKana}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8481d644af6cfb14cd0962521a958539b26e54" translate="yes" xml:space="preserve">
          <source>Imagine that your task for the day is to localize a piece of software -- and luckily for you, the only output the program emits is two messages, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fae6fb5571f38013c7696bd62a49c387d5a5d68" translate="yes" xml:space="preserve">
          <source>Immediate Filters</source>
          <target state="translated">Filtros inmediatos</target>
        </trans-unit>
        <trans-unit id="8a696df97fa48af3310dcba0d55250b2371b7422" translate="yes" xml:space="preserve">
          <source>Immediate filters are useful for one-off situations. For more generic problems it can be useful to package the filter up in its own module.</source>
          <target state="translated">Los filtros inmediatos son útiles para situaciones puntuales.Para problemas más genéricos puede ser útil empaquetar el filtro en su propio módulo.</target>
        </trans-unit>
        <trans-unit id="42b04d9e2ede4faefd5e97013f894508883e5ac4" translate="yes" xml:space="preserve">
          <source>Immediately after the check routine is called the returned node is checked for being compile-time executable. If it is (the value is judged to be constant) it is immediately executed, and a</source>
          <target state="translated">Inmediatamente después de que la rutina de comprobación se llama el nodo devuelto se comprueba que es ejecutable en tiempo de compilación.Si lo es (el valor se juzga como constante)se ejecuta inmediatamente,y un</target>
        </trans-unit>
        <trans-unit id="5d2ecc7281cc6015d762f885a1871742572e70d2" translate="yes" xml:space="preserve">
          <source>Immediately after the filter has been applied to the source, Filter::Simple will pass control to Exporter, so it can do its magic too.</source>
          <target state="translated">Inmediatamente después de que el filtro ha sido aplicado a la fuente,Filter::Simple pasará el control a Exportador,para que pueda hacer su magia también.</target>
        </trans-unit>
        <trans-unit id="a1efac3e1e3b83ccf445505de1c905ec4e317003" translate="yes" xml:space="preserve">
          <source>Implement $PREFER_BIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10353737d8f43f937641dff0028a206109a7686a" translate="yes" xml:space="preserve">
          <source>Implementation can adjust its idea of number of bytes in the buffer. Do not use this - use PerlIO_fast_gets.</source>
          <target state="translated">La implementación puede ajustar su idea del número de bytes en el buffer.No use esto-use PerlIO_fast_gets.</target>
        </trans-unit>
        <trans-unit id="2c98a52672a4f466f688e44c536060b9826553e9" translate="yes" xml:space="preserve">
          <source>Implementation can return pointer to current position in the &quot;buffer&quot; and a count of bytes available in the buffer. Do not use this - use PerlIO_fast_gets.</source>
          <target state="translated">La aplicación puede devolver el puntero a la posición actual en la &quot;memoria intermedia&quot; y un recuento de los bytes disponibles en la memoria intermedia.No uses esto-usa PerlIO_fast_gets.</target>
        </trans-unit>
        <trans-unit id="81ebe12aa11cc123fdb7f8c88133ffaff6347b23" translate="yes" xml:space="preserve">
          <source>Implementation details</source>
          <target state="translated">Detalles de la implementación</target>
        </trans-unit>
        <trans-unit id="6b3873cf8e5251aa728a3e54318ec3a5f273e5f0" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;code&gt;sv_copypv&lt;/code&gt; and &lt;code&gt;sv_copypv_nomg&lt;/code&gt;. Calls get magic iff flags has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867f93d010e1413848b9511b5f08d11efe452a94" translate="yes" xml:space="preserve">
          <source>Implementation of sv_copypv and sv_copypv_nomg. Calls get magic iff flags include SV_GMAGIC.</source>
          <target state="translated">Implementación de sv_copypv y sv_copypv_nomg.Las llamadas obtienen banderas mágicas iff incluyen SV_GMAGIC.</target>
        </trans-unit>
        <trans-unit id="93a44ec01f30940976c8468009fd696e0d07c0cd" translate="yes" xml:space="preserve">
          <source>Implementations of mktemp(), tmpnam(), and tempnam() are provided, but should be used with caution since they return only a filename that was valid when function was called, so cannot guarantee that the file will not exist by the time the caller opens the filename.</source>
          <target state="translated">Se proporcionan implementaciones de mktemp(),tmpnam(),y tempnam(),pero deben utilizarse con precaución ya que sólo devuelven un nombre de archivo que era válido cuando se llamó a la función,por lo que no se puede garantizar que el archivo no existirá en el momento en que el llamador abra el nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="472357ef916af9461389e46cdf6fcf7419adc52b" translate="yes" xml:space="preserve">
          <source>Implementations should detect the error as soon as it occurs in any of the other functions and save the corresponding message for later retrieval. This will avoid problems on some platforms (such as SunOS) where the error message is very temporary (e.g., dlerror()).</source>
          <target state="translated">Las implementaciones deben detectar el error tan pronto como se produzca en cualquiera de las otras funciones y guardar el mensaje correspondiente para recuperarlo más tarde.Esto evitará problemas en algunas plataformas (como SunOS)en las que el mensaje de error es muy temporal (por ejemplo,dlerror()).</target>
        </trans-unit>
        <trans-unit id="40dac3861d28b66aac73bee4c06a53c216044f0c" translate="yes" xml:space="preserve">
          <source>Implemented as a post-test hook, this plugin writes a specfile after every successful test run. The content is also written to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7772f795eb98ffae1df16f5f22b8f9f0482251d7" translate="yes" xml:space="preserve">
          <source>Implemented on 64 bit VMS 8.3. VMS requires the symbolic link to be in Unix syntax if it is intended to resolve to a valid path.</source>
          <target state="translated">Implementado en el VMS 8.3 de 64 bits.El VMS requiere que el enlace simbólico esté en sintaxis Unix si se pretende resolver a un camino válido.</target>
        </trans-unit>
        <trans-unit id="5c327b5ffaa641fc9ab42ad686d92c062f812101" translate="yes" xml:space="preserve">
          <source>Implementing PerlIO Layers</source>
          <target state="translated">Implementación de las Capas de PerlIO</target>
        </trans-unit>
        <trans-unit id="d1d235ff6e6c8fe294165e40ee8fb7af96b238c6" translate="yes" xml:space="preserve">
          <source>Implements a customized option parser used for &lt;a href=&quot;../perldoc&quot;&gt;Pod::Perldoc&lt;/a&gt;.</source>
          <target state="translated">Implementa un analizador de opciones personalizado utilizado para &lt;a href=&quot;../perldoc&quot;&gt;Pod :: Perldoc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4749a3581afc8d4807ca8e3900d478b2535dbbee" translate="yes" xml:space="preserve">
          <source>Implements a customized option parser used for &lt;a href=&quot;Pod::Perldoc&quot;&gt;Pod::Perldoc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6d8e1ab41db2682597810f350ac0e642396e48" translate="yes" xml:space="preserve">
          <source>Implements default import method for modules</source>
          <target state="translated">Implementa el método de importación por defecto para los módulos</target>
        </trans-unit>
        <trans-unit id="10190ba45fe863f85939478d9d5bb36cd51cea87" translate="yes" xml:space="preserve">
          <source>Implements the &lt;a href=&quot;http://man.he.net/man2/fcntl&quot;&gt;fcntl(2)&lt;/a&gt; function. You'll probably have to say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78f1509e14fc5b2d56dfd77b72b8f3900e010b5" translate="yes" xml:space="preserve">
          <source>Implements the &lt;a href=&quot;http://man.he.net/man2/ioctl&quot;&gt;ioctl(2)&lt;/a&gt; function. You'll probably first have to say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600b4d0a91fb59ceef4048c760197d5c6d1f4db1" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;prove&lt;/code&gt; command.</source>
          <target state="translated">Implementa el comando de &lt;code&gt;prove&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="500351adb27caa795501b65867b0b58aab9da04f" translate="yes" xml:space="preserve">
          <source>Implements the fcntl(2) function. You'll probably have to say</source>
          <target state="translated">Implementa la función fcntl(2).Probablemente tendrás que decir</target>
        </trans-unit>
        <trans-unit id="345a4b053fd3ba6ba91b9b4a311d01970f38b745" translate="yes" xml:space="preserve">
          <source>Implements the ioctl(2) function. You'll probably first have to say</source>
          <target state="translated">Implementa la función ioctl(2).Probablemente primero tendrás que decir</target>
        </trans-unit>
        <trans-unit id="df5a374f83ddf1099a63647567a472d00b3049d5" translate="yes" xml:space="preserve">
          <source>Implicit array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a755dd53c48e0431df0fb3c83a53268941625f80" translate="yes" xml:space="preserve">
          <source>Implicit context</source>
          <target state="translated">Contexto implícito</target>
        </trans-unit>
        <trans-unit id="1590ca248f9ea87b12d0a25ed72d75a33b540b98" translate="yes" xml:space="preserve">
          <source>Implicit upgrading for byte-strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690e1538d5a86cb3fc7e71c1d7249c0d6e3e0181" translate="yes" xml:space="preserve">
          <source>Import all symbolic constants. Same as doing this</source>
          <target state="translated">Importar todas las constantes simbólicas.Lo mismo que hacer esto</target>
        </trans-unit>
        <trans-unit id="5941fc0651c5b1f4209500ab16a699a919ff2f79" translate="yes" xml:space="preserve">
          <source>Important Caveat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f641b0147eed755158e9f661a30e441db68a2b9a" translate="yes" xml:space="preserve">
          <source>Important Caveats</source>
          <target state="translated">Advertencias importantes</target>
        </trans-unit>
        <trans-unit id="49b3bb070775e7c46535f7d9ea2b7446b904f0e4" translate="yes" xml:space="preserve">
          <source>Important platform-specific changes</source>
          <target state="translated">Importantes cambios específicos de la plataforma</target>
        </trans-unit>
        <trans-unit id="cea7c754b6d173704074c0b8cc88cfc7c1f173d8" translate="yes" xml:space="preserve">
          <source>Imported with the &lt;code&gt;:sys_resource_h&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ab5ed3bb3e27748d586ad9b9b11e2ab9efaaf8" translate="yes" xml:space="preserve">
          <source>Importing</source>
          <target state="translated">Importing</target>
        </trans-unit>
        <trans-unit id="a56aac727c58f5874136fceda15607b87290a37d" translate="yes" xml:space="preserve">
          <source>Importing a particular constant may not be very portable, because the import will fail on platforms that do not have that constant. A more portable way to set &lt;code&gt;$!&lt;/code&gt; to a valid value is to use:</source>
          <target state="translated">Importar una constante en particular puede no ser muy port&amp;aacute;til, porque la importaci&amp;oacute;n fallar&amp;aacute; en plataformas que no tienen esa constante. Una forma m&amp;aacute;s port&amp;aacute;til de configurar &lt;code&gt;$!&lt;/code&gt; a un valor v&amp;aacute;lido es utilizar:</target>
        </trans-unit>
        <trans-unit id="e0f171764942008e4afa9ec8365fe319dc1a1bf4" translate="yes" xml:space="preserve">
          <source>Importing autodie into another namespace than &quot;caller&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4eab83913c9890e5e3e1ea6b76a702ac39df78f" translate="yes" xml:space="preserve">
          <source>Importing this module causes the subroutine color in Test::Builder::Tester to be called with a true value causing colour highlighting to be turned on in debug output.</source>
          <target state="translated">Importar este módulo hace que el color de la subrutina en Test::Builder::Tester sea llamado con un valor verdadero causando que el resaltado de color se active en la salida de depuración.</target>
        </trans-unit>
        <trans-unit id="b94be8f7a2bde6a23ee55b54ee8fc9eb76bd786e" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;anyinflate&lt;/code&gt; and &lt;code&gt;$AnyInflateError&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;anyinflate&lt;/code&gt; y &lt;code&gt;$AnyInflateError&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="ac0d700aba31089d6a5c86842474af1ccd35ee48" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;anyinflate&lt;/code&gt; and &lt;code&gt;$AnyInflateError&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47d4827ba5d67c837818053a8d62f3b22e590b8" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;anyuncompress&lt;/code&gt; and &lt;code&gt;$AnyUncompressError&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;anyuncompress&lt;/code&gt; y &lt;code&gt;$AnyUncompressError&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="c5f3df7452ee0e7ac2933d668a54ce6d80e2d969" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;anyuncompress&lt;/code&gt; and &lt;code&gt;$AnyUncompressError&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b77142aa14b6211216f5a16e3e213d0c392505" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;bunzip2&lt;/code&gt; and &lt;code&gt;$Bunzip2Error&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;bunzip2&lt;/code&gt; y &lt;code&gt;$Bunzip2Error&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="ed5276b55d1c3e705615754b5592030b3f86448a" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;bunzip2&lt;/code&gt; and &lt;code&gt;$Bunzip2Error&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611c05e07552b8091c699fb7c8b34e627de5035f" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;bzip2&lt;/code&gt; and &lt;code&gt;$Bzip2Error&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;bzip2&lt;/code&gt; y &lt;code&gt;$Bzip2Error&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="f33038725fdf461a70610da87643ccfeafbb78d0" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;bzip2&lt;/code&gt; and &lt;code&gt;$Bzip2Error&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1d5114934adc139dbbd5be66e7aa4d256c7031" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;deflate&lt;/code&gt; , &lt;code&gt;$DeflateError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;deflate&lt;/code&gt; , &lt;code&gt;$DeflateError&lt;/code&gt; y todas las constantes simb&amp;oacute;licas que pueden ser utilizadas por &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="0d4974d2c5596367cb5cebb1930f3c2825ac5e43" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;deflate&lt;/code&gt;, &lt;code&gt;$DeflateError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::Deflate&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b3cbf51bdd7f4f367077b86b68d9bc7e23e42e" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;gunzip&lt;/code&gt; and &lt;code&gt;$GunzipError&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;gunzip&lt;/code&gt; y &lt;code&gt;$GunzipError&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="a1c53346bb70d2ef53cbff855bff6bf49a03d218" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;gunzip&lt;/code&gt; and &lt;code&gt;$GunzipError&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34135d0717f9ce2e7a0257450b1f62fae7932dc" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;gzip&lt;/code&gt; , &lt;code&gt;$GzipError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;gzip&lt;/code&gt; , &lt;code&gt;$GzipError&lt;/code&gt; y todas las constantes simb&amp;oacute;licas que &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; puede usar . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="61371e25038e3f4ac705613da33881c8f7d476ca" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;gzip&lt;/code&gt;, &lt;code&gt;$GzipError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::Gzip&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115a4b04735017c59cebd861430122e98ed196f8" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;inflate&lt;/code&gt; and &lt;code&gt;$InflateError&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Las importaciones se &lt;code&gt;inflate&lt;/code&gt; y &lt;code&gt;$InflateError&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="4b984a68fd009c415920f89995a62d37da4180f5" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;inflate&lt;/code&gt; and &lt;code&gt;$InflateError&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee8ff5937f6a57c492292c874195f1b43a7fe78" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;rawdeflate&lt;/code&gt; , &lt;code&gt;$RawDeflateError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;rawdeflate&lt;/code&gt; , &lt;code&gt;$RawDeflateError&lt;/code&gt; y todas las constantes simb&amp;oacute;licas que pueden ser utilizadas por &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="6fb62da169da61d1904623e4014ec13f30b31ac3" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;rawdeflate&lt;/code&gt;, &lt;code&gt;$RawDeflateError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e767570633f5f871775c917a3828a5e9681f4ffd" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;rawinflate&lt;/code&gt; and &lt;code&gt;$RawInflateError&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;rawinflate&lt;/code&gt; y &lt;code&gt;$RawInflateError&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="b57975e38dfb8b63c09125b45981ce41089d4b46" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;rawinflate&lt;/code&gt; and &lt;code&gt;$RawInflateError&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce5310acfbe49b368b9871554a40ed6e277e8c4" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;unzip&lt;/code&gt; and &lt;code&gt;$UnzipError&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;unzip&lt;/code&gt; y &lt;code&gt;$UnzipError&lt;/code&gt; . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="8dce59d7727e957411b6cb73347061a330ebfafc" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;unzip&lt;/code&gt; and &lt;code&gt;$UnzipError&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2f9178eea45bfd7d471760d92c394f1bace450" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;$ZipError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::Zip&lt;/code&gt; . Same as doing this</source>
          <target state="translated">Importa &lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;$ZipError&lt;/code&gt; y todas las constantes simb&amp;oacute;licas que &lt;code&gt;IO::Compress::Zip&lt;/code&gt; puede utilizar . Igual que hacer esto</target>
        </trans-unit>
        <trans-unit id="847ef311d8decfad6e9ddb6bbcfbc5b8302cb9bd" translate="yes" xml:space="preserve">
          <source>Imports &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;$ZipError&lt;/code&gt; and all symbolic constants that can be used by &lt;code&gt;IO::Compress::Zip&lt;/code&gt;. Same as doing this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2699b28db29be60d4c03ef4c15f7b6c27c20980d" translate="yes" xml:space="preserve">
          <source>Imports all the functions.</source>
          <target state="translated">Importa todas las funciones.</target>
        </trans-unit>
        <trans-unit id="4e34e9af4ba46ea0c9c8bc6002dd0b4972427661" translate="yes" xml:space="preserve">
          <source>Imports some semantics into the current package from the named module, generally by aliasing certain subroutine or variable names into your package. It is exactly equivalent to</source>
          <target state="translated">Importa cierta semántica en el paquete actual desde el módulo nombrado,generalmente mediante el alias de ciertas subrutinas o nombres de variables en su paquete.Es exactamente equivalente a</target>
        </trans-unit>
        <trans-unit id="3c2be47729bab4d065b481df08ff204f1f40d914" translate="yes" xml:space="preserve">
          <source>Imports the selected functions.</source>
          <target state="translated">Importa las funciones seleccionadas.</target>
        </trans-unit>
        <trans-unit id="aef36502d67b0520654deb764dd055a7e905cfdd" translate="yes" xml:space="preserve">
          <source>In</source>
          <target state="translated">In</target>
        </trans-unit>
        <trans-unit id="66efb842734060cc12c6ce77c7726200d42dc777" translate="yes" xml:space="preserve">
          <source>In '(*...)', the '(' and '*' must be adjacent in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ead423246f254590da876fbfcf30de3598d538" translate="yes" xml:space="preserve">
          <source>In '(*VERB...)', the '(' and '*' must be adjacent in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281e0bcccb215aefbdb7e011061a9ea9aefb2638" translate="yes" xml:space="preserve">
          <source>In '(?...)', the '(' and '?' must be adjacent in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82367e72d0131f5c3fc8d23d0d42328c1c0cde9a" translate="yes" xml:space="preserve">
          <source>In 5.000 to 5.003 perls, trigonometry was done in the &lt;a href=&quot;Math::Complex&quot;&gt;Math::Complex&lt;/a&gt; module. With 5.004, the &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt; module (part of the standard Perl distribution) implements the trigonometric functions. Internally it uses the &lt;a href=&quot;Math::Complex&quot;&gt;Math::Complex&lt;/a&gt; module and some functions can break out from the real axis into the complex plane, for example the inverse sine of 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e283b44852c55b8cc7c5d3c10f2fb1158a34c408" translate="yes" xml:space="preserve">
          <source>In 5.000 to 5.003 perls, trigonometry was done in the &lt;a href=&quot;math/complex&quot;&gt;Math::Complex&lt;/a&gt; module. With 5.004, the &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt; module (part of the standard Perl distribution) implements the trigonometric functions. Internally it uses the &lt;a href=&quot;math/complex&quot;&gt;Math::Complex&lt;/a&gt; module and some functions can break out from the real axis into the complex plane, for example the inverse sine of 2.</source>
          <target state="translated">En 5.000 a 5.003 perls, la trigonometr&amp;iacute;a se realiz&amp;oacute; en el m&amp;oacute;dulo &lt;a href=&quot;math/complex&quot;&gt;Math :: Complex&lt;/a&gt; . Con 5.004, el m&amp;oacute;dulo &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; (parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl) implementa las funciones trigonom&amp;eacute;tricas. Internamente, utiliza el m&amp;oacute;dulo &lt;a href=&quot;math/complex&quot;&gt;Math :: Complex&lt;/a&gt; y algunas funciones pueden salir del eje real al plano complejo, por ejemplo, el seno inverso de 2.</target>
        </trans-unit>
        <trans-unit id="391231c66e45cffb8636a5bb3b30c41c9673affc" translate="yes" xml:space="preserve">
          <source>In 5.9.3, &lt;code&gt;newSV()&lt;/code&gt; replaces the older &lt;code&gt;NEWSV()&lt;/code&gt; API, and drops the first parameter,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608cccc0c9bbe325204a599a0810ba75fef50b66" translate="yes" xml:space="preserve">
          <source>In 5.9.3, Newx() and friends replace the older New() API, and drops the first parameter,</source>
          <target state="translated">En 5.9.3,Newx()y amigos reemplazan la antigua API de New(),y sueltan el primer parámetro,</target>
        </trans-unit>
        <trans-unit id="05edeadfa5f882c58e75733f9ca5c3ffa7b75300" translate="yes" xml:space="preserve">
          <source>In 5.9.3, newSV() replaces the older NEWSV() API, and drops the first parameter,</source>
          <target state="translated">En 5.9.3,newSV()reemplaza la antigua API de NEWSV(),y deja caer el primer parámetro,</target>
        </trans-unit>
        <trans-unit id="91471efa4c1c6dedd1aca89f914cfd68ba91a793" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#EXAMPLE-4&quot;&gt;&quot;EXAMPLE 4&quot;&lt;/a&gt; the second part of .xs file contained the following description of an XSUB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bd3ec2d46f47a7c53bb5eb7fb75ed665e3e0d8" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#EXAMPLE-4&quot;&gt;EXAMPLE 4&lt;/a&gt; the second part of .xs file contained the following description of an XSUB:</source>
          <target state="translated">En el &lt;a href=&quot;#EXAMPLE-4&quot;&gt;EJEMPLO 4,&lt;/a&gt; la segunda parte del archivo .xs conten&amp;iacute;a la siguiente descripci&amp;oacute;n de un XSUB:</target>
        </trans-unit>
        <trans-unit id="7e5fcf76d62ca3c453f917d125d255840ab14460" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#Use-Rule-1&quot;&gt;&lt;b&gt;Use Rule 1&lt;/b&gt;&lt;/a&gt;, you can omit the curly brackets whenever the thing inside them is an atomic scalar variable like &lt;code&gt;$aref&lt;/code&gt;. For example, &lt;code&gt;@$aref&lt;/code&gt; is the same as &lt;code&gt;@{$aref}&lt;/code&gt;, and &lt;code&gt;$$aref[1]&lt;/code&gt; is the same as &lt;code&gt;${$aref}[1]&lt;/code&gt;. If you're just starting out, you may want to adopt the habit of always including the curly brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410447fdc9620665a31407179d6df63d2c4b3f50" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;perlfunc#split&quot;&gt;&lt;code&gt;split&lt;/code&gt;'s special-case whitespace splitting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10507678ddeb0946365b72294700c17d41e824f" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;Use Rule 1&lt;/b&gt;, you can omit the curly brackets whenever the thing inside them is an atomic scalar variable like &lt;code&gt;$aref&lt;/code&gt; . For example, &lt;code&gt;@$aref&lt;/code&gt; is the same as &lt;code&gt;@{$aref}&lt;/code&gt; , and &lt;code&gt;$$aref[1]&lt;/code&gt; is the same as &lt;code&gt;${$aref}[1]&lt;/code&gt; . If you're just starting out, you may want to adopt the habit of always including the curly brackets.</source>
          <target state="translated">En &lt;b&gt;Use Rule 1&lt;/b&gt; , puede omitir las llaves siempre que lo que hay dentro de ellas sea una variable escalar at&amp;oacute;mica como &lt;code&gt;$aref&lt;/code&gt; . Por ejemplo, &lt;code&gt;@$aref&lt;/code&gt; es lo mismo que &lt;code&gt;@{$aref}&lt;/code&gt; y &lt;code&gt;$$aref[1]&lt;/code&gt; es lo mismo que &lt;code&gt;${$aref}[1]&lt;/code&gt; . Si reci&amp;eacute;n est&amp;aacute; comenzando, es posible que desee adoptar el h&amp;aacute;bito de incluir siempre las llaves.</target>
        </trans-unit>
        <trans-unit id="557547e0e5d90bb8da914cf09cde8cf85870da5a" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;shell&lt;/b&gt; programming, the syntactic combination of a program name and its arguments. More loosely, anything you type to a shell (a command interpreter) that starts it doing something. Even more loosely, a Perl &lt;b&gt;statement&lt;/b&gt;, which might start with a &lt;b&gt;label&lt;/b&gt; and typically ends with a semicolon.</source>
          <target state="translated">En la programaci&amp;oacute;n de &lt;b&gt;shell&lt;/b&gt; , la combinaci&amp;oacute;n sint&amp;aacute;ctica de un nombre de programa y sus argumentos. M&amp;aacute;s libremente, cualquier cosa que escriba en un shell (un int&amp;eacute;rprete de comandos) que lo inicie haciendo algo. A&amp;uacute;n m&amp;aacute;s libremente, una &lt;b&gt;declaraci&amp;oacute;n de&lt;/b&gt; Perl , que puede comenzar con una &lt;b&gt;etiqueta&lt;/b&gt; y normalmente termina con un punto y coma.</target>
        </trans-unit>
        <trans-unit id="53ee753ac80ffc3ee3ab0c0d4d2f6ebc840fe7cc" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;(?...)&lt;/code&gt; both absolute and relative backreferences may be used. The entire pattern can be reinserted with &lt;code&gt;(?R)&lt;/code&gt; or &lt;code&gt;(?0)&lt;/code&gt;. If you prefer to name your groups, you can use &lt;code&gt;(?&amp;amp;&lt;i&gt;name&lt;/i&gt;)&lt;/code&gt; to recurse into that group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893925583fca341ee58483bd99d5162198b9d0c6" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;(?...)&lt;/code&gt; both absolute and relative backreferences may be used. The entire pattern can be reinserted with &lt;code&gt;(?R)&lt;/code&gt; or &lt;code&gt;(?0)&lt;/code&gt;. If you prefer to name your groups, you can use &lt;code&gt;(?&amp;amp;name)&lt;/code&gt; to recurse into that group.</source>
          <target state="translated">En &lt;code&gt;(?...)&lt;/code&gt; se pueden utilizar referencias inversas tanto absolutas como relativas. El patr&amp;oacute;n completo se puede volver a insertar con &lt;code&gt;(?R)&lt;/code&gt; o &lt;code&gt;(?0)&lt;/code&gt; . Si prefiere nombrar sus grupos, puede usar &lt;code&gt;(?&amp;amp;name)&lt;/code&gt; Name ) para recurrir a ese grupo.</target>
        </trans-unit>
        <trans-unit id="b10785862bf5b38351d62f7106b1ad5b616fb632" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;::INET&lt;/code&gt;, supplying a timeout overrides the non-blocking behaviour, meaning that the &lt;code&gt;connect()&lt;/code&gt; operation will still block despite that the caller asked for a non-blocking socket. This is not explicitly specified in its documentation, nor does this author believe that is a useful behaviour - it appears to come from a quirk of implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4a1ba97b2988d6a2be557e546a113f04c6f316" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;::IP&lt;/code&gt; therefore, the &lt;code&gt;Blocking&lt;/code&gt; parameter takes precedence - if a non-blocking socket is requested, no operation will block. The &lt;code&gt;Timeout&lt;/code&gt; parameter here simply defines the maximum time that a blocking &lt;code&gt;connect()&lt;/code&gt; call will wait, if it blocks at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fa69a28fd92dcbb1d20c664855898c29a90ccb" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; or its inline equivalent &lt;code&gt;\Q&lt;/code&gt; .</source>
          <target state="translated">En &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; o su equivalente en l&amp;iacute;nea &lt;code&gt;\Q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1fe5fe4877107e3688ff937058cd386854f2587" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Compress::Zlib&lt;/code&gt; version 1.x, &lt;code&gt;gzopen&lt;/code&gt; used the zlib library to open the underlying file. This made things especially tricky when a Perl filehandle was passed to &lt;code&gt;gzopen&lt;/code&gt; . Behind the scenes the numeric C file descriptor had to be extracted from the Perl filehandle and this passed to the zlib library.</source>
          <target state="translated">En &lt;code&gt;Compress::Zlib&lt;/code&gt; versi&amp;oacute;n 1.x, &lt;code&gt;gzopen&lt;/code&gt; us&amp;oacute; la biblioteca zlib para abrir el archivo subyacente. Esto hizo las cosas especialmente complicadas cuando se pas&amp;oacute; un &lt;code&gt;gzopen&lt;/code&gt; de archivo Perl a gzopen . Detr&amp;aacute;s de escena, el descriptor de archivo C num&amp;eacute;rico tuvo que extraerse del identificador de archivo Perl y esto pas&amp;oacute; a la biblioteca zlib.</target>
        </trans-unit>
        <trans-unit id="97042f19f30bdce3cf114acbac1fee77bdb7a505" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Compress::Zlib&lt;/code&gt; version 1.x, &lt;code&gt;gzopen&lt;/code&gt; used the zlib library to open the underlying file. This made things especially tricky when a Perl filehandle was passed to &lt;code&gt;gzopen&lt;/code&gt;. Behind the scenes the numeric C file descriptor had to be extracted from the Perl filehandle and this passed to the zlib library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccc4f78696454721af791a75896e8b3d0106582" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Compress::Zlib&lt;/code&gt; version 2.x, the &lt;code&gt;gzopen&lt;/code&gt; interface has been completely rewritten to use the &lt;a href=&quot;../io/compress/gzip&quot;&gt;IO::Compress::Gzip&lt;/a&gt; for writing gzip files and &lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO::Uncompress::Gunzip&lt;/a&gt; for reading gzip files. None of the limitations mentioned above apply.</source>
          <target state="translated">En &lt;code&gt;Compress::Zlib&lt;/code&gt; versi&amp;oacute;n 2.x, la interfaz &lt;code&gt;gzopen&lt;/code&gt; se ha reescrito por completo para usar &lt;a href=&quot;../io/compress/gzip&quot;&gt;IO :: Compress :: Gzip&lt;/a&gt; para escribir archivos gzip e &lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO :: Uncompress :: Gunzip&lt;/a&gt; para leer archivos gzip. No se aplica ninguna de las limitaciones mencionadas anteriormente.</target>
        </trans-unit>
        <trans-unit id="114d7ddba5b93cb861ecd5013f29d98f83ffbb88" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Compress::Zlib&lt;/code&gt; version 2.x, the &lt;code&gt;gzopen&lt;/code&gt; interface has been completely rewritten to use the &lt;a href=&quot;IO::Compress::Gzip&quot;&gt;IO::Compress::Gzip&lt;/a&gt; for writing gzip files and &lt;a href=&quot;IO::Uncompress::Gunzip&quot;&gt;IO::Uncompress::Gunzip&lt;/a&gt; for reading gzip files. None of the limitations mentioned above apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00aec70e3db954ff900ae2d1de9b4a90ac0844b" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Encode&lt;/code&gt; 2.10 or later, &lt;code&gt;LEAVE_SRC&lt;/code&gt; is also implied.</source>
          <target state="translated">En &lt;code&gt;Encode&lt;/code&gt; 2.10 o posterior, &lt;code&gt;LEAVE_SRC&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; impl&amp;iacute;cito.</target>
        </trans-unit>
        <trans-unit id="51676bb8ef9795bee4bcbafed10516b2d6301ddf" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;native floating point --&amp;gt; native integer&lt;/code&gt; conversions the magnitude of the result is less than or equal to the magnitude of the source. (</source>
          <target state="translated">En el &lt;code&gt;native floating point --&amp;gt; native integer&lt;/code&gt; conversiones enteras nativas, la magnitud del resultado es menor o igual que la magnitud de la fuente. (</target>
        </trans-unit>
        <trans-unit id="7be347ab93d082d1dfdcfb29ae91a2b4d0db0749" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;quotemeta&lt;/code&gt; or its inline equivalent &lt;code&gt;\Q&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67145b5258ab605d487808bb8f38203833e35128" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;simple_replace&lt;/code&gt; we used the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///g&lt;/a&gt;&lt;/code&gt; modifier to replace all occurrences of the regexp on each line. (Even though the regular expression appears in a loop, Perl is smart enough to compile it only once.) As with &lt;code&gt;simple_grep&lt;/code&gt; , both the &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/$regexp/$replacement/g&lt;/a&gt;&lt;/code&gt; use &lt;code&gt;$_&lt;/code&gt; implicitly.</source>
          <target state="translated">En &lt;code&gt;simple_replace&lt;/code&gt; usamos el modificador &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///g&lt;/a&gt;&lt;/code&gt; para reemplazar todas las ocurrencias de la expresi&amp;oacute;n regular en cada l&amp;iacute;nea. (Aunque la expresi&amp;oacute;n regular aparece en un bucle, Perl es lo suficientemente inteligente como para compilarla solo una vez). Como con &lt;code&gt;simple_grep&lt;/code&gt; , tanto la &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/$regexp/$replacement/g&lt;/a&gt;&lt;/code&gt; usan &lt;code&gt;$_&lt;/code&gt; impl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="7c4415b354d21581248c9b504615aa6c75b8d907" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;simple_replace&lt;/code&gt; we used the &lt;code&gt;s///g&lt;/code&gt; modifier to replace all occurrences of the regexp on each line. (Even though the regular expression appears in a loop, Perl is smart enough to compile it only once.) As with &lt;code&gt;simple_grep&lt;/code&gt;, both the &lt;code&gt;print&lt;/code&gt; and the &lt;code&gt;s/$regexp/$replacement/g&lt;/code&gt; use &lt;code&gt;$_&lt;/code&gt; implicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d077e5ff0102748fbe2d5e45a0e1e202f0802167" translate="yes" xml:space="preserve">
          <source>In AIX 4.2 Perl extensions that use C++ functions that use statics may have problems in that the statics are not getting initialized. In newer AIX releases this has been solved by linking Perl with the libC_r library, but unfortunately in AIX 4.2 the said library has an obscure bug where the various functions related to time (such as time() and gettimeofday()) return broken values, and therefore in AIX 4.2 Perl is not linked against the libC_r.</source>
          <target state="translated">En AIX 4.2 las extensiones de Perl que usan funciones C++que usan estática pueden tener problemas en que la estática no se inicialice.En las nuevas versiones de AIX esto se ha solucionado enlazando Perl con la biblioteca libC_r,pero desafortunadamente en AIX 4.2 dicha biblioteca tiene un oscuro error en el que las diversas funciones relacionadas con el tiempo (como time()y gettimeofday())devuelven valores rotos,y por lo tanto en AIX 4.2 Perl no está enlazado contra la libC_r.</target>
        </trans-unit>
        <trans-unit id="5c64677f24dcacb245231383a983d4852fe14280" translate="yes" xml:space="preserve">
          <source>In BigInt, all numbers except &lt;code&gt;NaN&lt;/code&gt; , &lt;code&gt;+inf&lt;/code&gt; and &lt;code&gt;-inf&lt;/code&gt; are integers.</source>
          <target state="translated">En BigInt, todos los n&amp;uacute;meros excepto &lt;code&gt;NaN&lt;/code&gt; , &lt;code&gt;+inf&lt;/code&gt; y &lt;code&gt;-inf&lt;/code&gt; son enteros.</target>
        </trans-unit>
        <trans-unit id="f83bdc44eedb56878bfa30e1ea8c050d2167ca73" translate="yes" xml:space="preserve">
          <source>In BigInt, unless upgrading is in effect, the result is truncated to an integer.</source>
          <target state="translated">En la BigInt,a menos que la actualización esté en efecto,el resultado se trunca a un número entero.</target>
        </trans-unit>
        <trans-unit id="a6200922eb25a34272b79346b2b9f5be87e701ac" translate="yes" xml:space="preserve">
          <source>In CVS and RCS version 1.9 is followed by 1.10. Since CPAN compares version numbers numerically we use a sprintf() to convert 1.9 to 1.009 and 1.10 to 1.010 which compare properly.</source>
          <target state="translated">En la versión 1.9 de CVS y RCS va seguida de la 1.10.Como el CPAN compara los números de versión numéricamente usamos un sprintf()para convertir 1.9 a 1.009 y 1.10 a 1.010 que se comparan adecuadamente.</target>
        </trans-unit>
        <trans-unit id="e6d98db49c1b068959bb3c31358e246a1630b67a" translate="yes" xml:space="preserve">
          <source>In CVS, RCS and SVN you use $Revision$ (see the documentation of your version control system for details). Every time the file is checked in the $Revision$ will be updated, updating your $VERSION.</source>
          <target state="translated">En CVS,RCS y SVN usas $Revision$ (ver la documentación de tu sistema de control de versiones para más detalles).Cada vez que el archivo es revisado en el $Revision$ será actualizado,actualizando tu $VERSION.</target>
        </trans-unit>
        <trans-unit id="562c80499b9073a3905b98e95f6a9c71ca119547" translate="yes" xml:space="preserve">
          <source>In Cray UNICOS there is some strange numerical instability that results in root(), cos(), sin(), cosh(), sinh(), losing accuracy fast. Beware. The bug may be in UNICOS math libs, in UNICOS C compiler, in Math::Complex. Whatever it is, it does not manifest itself anywhere else where Perl runs.</source>
          <target state="translated">En Cray UNICOS hay una extraña inestabilidad numérica que hace que root(),cos(),sin(),cosh(),sinh(),pierdan rápidamente la precisión.Cuidado con eso.El error puede estar en las libretas de matemáticas de UNICOS,en el compilador C de UNICOS,en Math::Complex.Sea lo que sea,no se manifiesta en ningún otro lugar donde corra Perl.</target>
        </trans-unit>
        <trans-unit id="c2148313df160c8d66540765266d0deaea355ab2" translate="yes" xml:space="preserve">
          <source>In DUCET v4.0.0, primary weight of &lt;code&gt;C&lt;/code&gt; is &lt;code&gt;0E60&lt;/code&gt; and that of &lt;code&gt;D&lt;/code&gt; is &lt;code&gt;0E6D&lt;/code&gt; . So setting primary weight of &lt;code&gt;CH&lt;/code&gt; to &lt;code&gt;0E6A&lt;/code&gt; (as a value between &lt;code&gt;0E60&lt;/code&gt; and &lt;code&gt;0E6D&lt;/code&gt; ) makes ordering as &lt;code&gt;C &amp;lt; CH &amp;lt; D&lt;/code&gt; . Exactly speaking DUCET already has some characters between &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; : &lt;code&gt;small capital C&lt;/code&gt; (&lt;code&gt;U+1D04&lt;/code&gt;) with primary weight &lt;code&gt;0E64&lt;/code&gt; , &lt;code&gt;c-hook/C-hook&lt;/code&gt; (&lt;code&gt;U+0188/U+0187&lt;/code&gt;) with &lt;code&gt;0E65&lt;/code&gt; , and &lt;code&gt;c-curl&lt;/code&gt; (&lt;code&gt;U+0255&lt;/code&gt; ) with &lt;code&gt;0E69&lt;/code&gt; . Then primary weight &lt;code&gt;0E6A&lt;/code&gt; for &lt;code&gt;CH&lt;/code&gt; makes &lt;code&gt;CH&lt;/code&gt; ordered between &lt;code&gt;c-curl&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; .</source>
          <target state="translated">En DUCET v4.0.0, el peso primario de &lt;code&gt;C&lt;/code&gt; es &lt;code&gt;0E60&lt;/code&gt; y el de &lt;code&gt;D&lt;/code&gt; es &lt;code&gt;0E6D&lt;/code&gt; . Por lo tanto, establecer el peso primario de &lt;code&gt;CH&lt;/code&gt; en &lt;code&gt;0E6A&lt;/code&gt; (como un valor entre &lt;code&gt;0E60&lt;/code&gt; y &lt;code&gt;0E6D&lt;/code&gt; ) hace que el pedido sea &lt;code&gt;C &amp;lt; CH &amp;lt; D&lt;/code&gt; . Hablando exactamente, DUCET ya tiene algunos caracteres entre &lt;code&gt;C&lt;/code&gt; y &lt;code&gt;D&lt;/code&gt; : &lt;code&gt;small capital C&lt;/code&gt; ( &lt;code&gt;U+1D04&lt;/code&gt; ) con peso primario &lt;code&gt;0E64&lt;/code&gt; , &lt;code&gt;c-hook/C-hook&lt;/code&gt; ( &lt;code&gt;U+0188/U+0187&lt;/code&gt; ) con &lt;code&gt;0E65&lt;/code&gt; y &lt;code&gt;c-curl&lt;/code&gt; ( &lt;code&gt;U+0255&lt;/code&gt; ) con &lt;code&gt;0E69&lt;/code&gt; . Entonces peso primaria &lt;code&gt;0E6A&lt;/code&gt; para &lt;code&gt;CH&lt;/code&gt; hace &lt;code&gt;CH&lt;/code&gt; orden&amp;oacute; entre &lt;code&gt;c-curl&lt;/code&gt; y &lt;code&gt;D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9108a2eddf4a9c8b757bb1b0b2974cb82775ee81" translate="yes" xml:space="preserve">
          <source>In DUCET v4.0.0, primary weight of &lt;code&gt;C&lt;/code&gt; is &lt;code&gt;0E60&lt;/code&gt; and that of &lt;code&gt;D&lt;/code&gt; is &lt;code&gt;0E6D&lt;/code&gt;. So setting primary weight of &lt;code&gt;CH&lt;/code&gt; to &lt;code&gt;0E6A&lt;/code&gt; (as a value between &lt;code&gt;0E60&lt;/code&gt; and &lt;code&gt;0E6D&lt;/code&gt;) makes ordering as &lt;code&gt;C &amp;lt; CH &amp;lt; D&lt;/code&gt;. Exactly speaking DUCET already has some characters between &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt;: &lt;code&gt;small capital C&lt;/code&gt; (&lt;code&gt;U+1D04&lt;/code&gt;) with primary weight &lt;code&gt;0E64&lt;/code&gt;, &lt;code&gt;c-hook/C-hook&lt;/code&gt; (&lt;code&gt;U+0188/U+0187&lt;/code&gt;) with &lt;code&gt;0E65&lt;/code&gt;, and &lt;code&gt;c-curl&lt;/code&gt; (&lt;code&gt;U+0255&lt;/code&gt;) with &lt;code&gt;0E69&lt;/code&gt;. Then primary weight &lt;code&gt;0E6A&lt;/code&gt; for &lt;code&gt;CH&lt;/code&gt; makes &lt;code&gt;CH&lt;/code&gt; ordered between &lt;code&gt;c-curl&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbd5bc5a38769b2182dd3a8ac3c64a575d3f230" translate="yes" xml:space="preserve">
          <source>In English grammar, a short noun phrase between a verb and its direct object indicating the beneficiary or recipient of the action. In Perl, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; STDOUT &quot;$foo\n&quot;;&lt;/code&gt; can be understood as &amp;ldquo;verb indirect-object object&amp;rdquo;, where &lt;code&gt;STDOUT&lt;/code&gt; is the recipient of the &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; action, and &lt;code&gt;&quot;$foo&quot;&lt;/code&gt; is the object being printed. Similarly, when invoking a &lt;b&gt;method&lt;/b&gt;, you might place the invocant in the dative slot between the method and its arguments:</source>
          <target state="translated">En gram&amp;aacute;tica inglesa, un sintagma nominal corto entre un verbo y su objeto directo que indica el beneficiario o destinatario de la acci&amp;oacute;n. En Perl, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; STDOUT &quot;$foo\n&quot;;&lt;/code&gt; puede entenderse como &amp;ldquo;verbo objeto de objeto indirecto&amp;rdquo;, donde &lt;code&gt;STDOUT&lt;/code&gt; es el destinatario de la acci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&quot;$foo&quot;&lt;/code&gt; es el objeto que se est&amp;aacute; imprimiendo. De manera similar, al invocar un &lt;b&gt;m&amp;eacute;todo&lt;/b&gt; , puede colocar el invocador en el espacio dativo entre el m&amp;eacute;todo y sus argumentos:</target>
        </trans-unit>
        <trans-unit id="06b568eacf88b97c4f6196a1f9c16a7ddc571968" translate="yes" xml:space="preserve">
          <source>In English grammar, a short noun phrase between a verb and its direct object indicating the beneficiary or recipient of the action. In Perl, &lt;code&gt;print STDOUT &quot;$foo\n&quot;;&lt;/code&gt; can be understood as &amp;ldquo;verb indirect-object object&amp;rdquo;, where &lt;code&gt;STDOUT&lt;/code&gt; is the recipient of the &lt;code&gt;print&lt;/code&gt; action, and &lt;code&gt;&quot;$foo&quot;&lt;/code&gt; is the object being printed. Similarly, when invoking a &lt;b&gt;method&lt;/b&gt;, you might place the invocant in the dative slot between the method and its arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d7750b76c1912ccfb266e5802e9aeb1ba6b515" translate="yes" xml:space="preserve">
          <source>In February 2017 the cPanel Security Team reported an additional vulnerability in File-Path. The &lt;code&gt;chmod()&lt;/code&gt; logic to make directories traversable can be abused to set the mode on an attacker-chosen file to an attacker-chosen value. This is due to the time-of-check-to-time-of-use (TOCTTOU) race condition (&lt;a href=&quot;https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use&quot;&gt;https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use&lt;/a&gt;) between the &lt;code&gt;stat()&lt;/code&gt; that decides the inode is a directory and the &lt;code&gt;chmod()&lt;/code&gt; that tries to make it user-rwx. CPAN versions 2.13 and later incorporate a patch provided by John Lightsey to address this problem. This vulnerability has been reported as CVE-2017-6512.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217cde63e66af3805baaae8b61bf234934e3a17f" translate="yes" xml:space="preserve">
          <source>In IRIX 5.3 and with Perl 5.8.1 (Perl 5.8.0 didn't compile in IRIX 5.3) the following failures are known.</source>
          <target state="translated">En IRIX 5.3 y con Perl 5.8.1 (Perl 5.8.0 no compilado en IRIX 5.3)se conocen los siguientes fallos.</target>
        </trans-unit>
        <trans-unit id="ae875351a921c55e10385097f1ce568f0cc36c5c" translate="yes" xml:space="preserve">
          <source>In MakeMaker-based installations,</source>
          <target state="translated">En instalaciones basadas en MakeMaker,</target>
        </trans-unit>
        <trans-unit id="9c3daa3a40c6c633fa39ff2200e0ca157291c425" translate="yes" xml:space="preserve">
          <source>In Math::BigFloat, &lt;code&gt;as_float()&lt;/code&gt; has the same effect as &lt;code&gt;copy()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e41060b8b4a1259b3e9cbe537abe5b49f3f3c1c" translate="yes" xml:space="preserve">
          <source>In Math::BigInt, &lt;code&gt;as_int()&lt;/code&gt; has the same effect as &lt;code&gt;copy()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ca889adcc661187e58d592f4912a7f93ee302a" translate="yes" xml:space="preserve">
          <source>In Math::BigInt, passing a negative number precision has no effect since no numbers have digits after the dot. In &lt;a href=&quot;bigfloat&quot;&gt;Math::BigFloat&lt;/a&gt;, it will round all results to P digits after the dot.</source>
          <target state="translated">En Math :: BigInt, pasar una precisi&amp;oacute;n num&amp;eacute;rica negativa no tiene ning&amp;uacute;n efecto ya que ning&amp;uacute;n n&amp;uacute;mero tiene d&amp;iacute;gitos despu&amp;eacute;s del punto. En &lt;a href=&quot;bigfloat&quot;&gt;Math :: BigFloat&lt;/a&gt; , redondear&amp;aacute; todos los resultados a P d&amp;iacute;gitos despu&amp;eacute;s del punto.</target>
        </trans-unit>
        <trans-unit id="e908380ff562833ce5edafb0da699c167037b50c" translate="yes" xml:space="preserve">
          <source>In Math::BigInt, this method is identical to &lt;code&gt;parts()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d74a3513f84eb343c782544d1a1cd43c3880330" translate="yes" xml:space="preserve">
          <source>In Math::BigInt, unless upgrading is in effect, the result is truncated to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846e78092ad74f765fcf7c9c94ce51c84e742d1b" translate="yes" xml:space="preserve">
          <source>In Memory Databases</source>
          <target state="translated">En las bases de datos de la memoria</target>
        </trans-unit>
        <trans-unit id="3f860bffab3d111dbe427091c4d724eab7972b48" translate="yes" xml:space="preserve">
          <source>In Part 1 we mentioned that Perl compiles a regexp into a compact sequence of opcodes. Thus, a compiled regexp is a data structure that can be stored once and used again and again. The regexp quote &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; does exactly that: &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/string/&lt;/a&gt;&lt;/code&gt; compiles the &lt;code&gt;string&lt;/code&gt; as a regexp and transforms the result into a form that can be assigned to a variable:</source>
          <target state="translated">En la Parte 1 mencionamos que Perl compila una expresi&amp;oacute;n regular en una secuencia compacta de c&amp;oacute;digos de operaci&amp;oacute;n. Por lo tanto, una expresi&amp;oacute;n regular compilada es una estructura de datos que puede almacenarse una vez y usarse una y otra vez. La cita regexp &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; hace exactamente eso: &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/string/&lt;/a&gt;&lt;/code&gt; compila la &lt;code&gt;string&lt;/code&gt; como una expresi&amp;oacute;n regular y transforma el resultado en una forma que se puede asignar a una variable:</target>
        </trans-unit>
        <trans-unit id="9f422c71ad852c82f393abc6d42d6ed23387e826" translate="yes" xml:space="preserve">
          <source>In Part 1 we mentioned that Perl compiles a regexp into a compact sequence of opcodes. Thus, a compiled regexp is a data structure that can be stored once and used again and again. The regexp quote &lt;code&gt;qr//&lt;/code&gt; does exactly that: &lt;code&gt;qr/string/&lt;/code&gt; compiles the &lt;code&gt;string&lt;/code&gt; as a regexp and transforms the result into a form that can be assigned to a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e23998d4d31cf53431494db737762f35860793" translate="yes" xml:space="preserve">
          <source>In Perl 5.005, the thread model was that all data is implicitly shared, and shared access to data has to be explicitly synchronized. This model is called</source>
          <target state="translated">En Perl 5.005,el modelo de hilo era que todos los datos se comparten implícitamente,y el acceso compartido a los datos tiene que ser sincronizado explícitamente.Este modelo se llama</target>
        </trans-unit>
        <trans-unit id="0ef40fb67bd5325ef3bc9871c79bffa2a2f9def8" translate="yes" xml:space="preserve">
          <source>In Perl 5.10, declare the variable with &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; declaration creates the lexical variable that persists between calls to the subroutine:</source>
          <target state="translated">En Perl 5.10, declare la variable con &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; . La declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; crea la variable l&amp;eacute;xica que persiste entre llamadas a la subrutina:</target>
        </trans-unit>
        <trans-unit id="a8b8dc6512fddc6a912b0cbfde84c91f304428a9" translate="yes" xml:space="preserve">
          <source>In Perl 5.10, declare the variable with &lt;code&gt;state&lt;/code&gt;. The &lt;code&gt;state&lt;/code&gt; declaration creates the lexical variable that persists between calls to the subroutine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcad1e403285c6c0597be1e44d89e383fc28fe4e" translate="yes" xml:space="preserve">
          <source>In Perl 5.10, the</source>
          <target state="translated">En Perl 5.10,el</target>
        </trans-unit>
        <trans-unit id="3754647e31be439690cdc120d0f37bbfc1ee49d5" translate="yes" xml:space="preserve">
          <source>In Perl 5.10, use the &lt;code&gt;given-when&lt;/code&gt; construct described in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;:</source>
          <target state="translated">En Perl 5.10, use la construcci&amp;oacute;n &lt;code&gt;given-when&lt;/code&gt; describe en &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ef6f20b95a614e3c70a519351a658bbdee2e34af" translate="yes" xml:space="preserve">
          <source>In Perl 5.10.0 the &lt;code&gt;/p&lt;/code&gt; match operator flag and the &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; , and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; variables were introduced, that allowed you to suffer the penalties only on patterns marked with &lt;code&gt;/p&lt;/code&gt;.</source>
          <target state="translated">En Perl 5.10.0, se introdujeron la marca del operador de coincidencia &lt;code&gt;/p&lt;/code&gt; y las &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; y &lt;code&gt;${^POSTMATCH}&lt;/code&gt; , que le permitieron sufrir las penalizaciones solo en los patrones marcados con &lt;code&gt;/p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f3e250c35c16ed5beded9eecafc97e7f7748952" translate="yes" xml:space="preserve">
          <source>In Perl 5.10.0 the &lt;code&gt;/p&lt;/code&gt; match operator flag and the &lt;code&gt;${^PREMATCH}&lt;/code&gt;, &lt;code&gt;${^MATCH}&lt;/code&gt;, and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; variables were introduced, that allowed you to suffer the penalties only on patterns marked with &lt;code&gt;/p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdfceeeffa73fd56622a7e4fbcd615a7de619f1" translate="yes" xml:space="preserve">
          <source>In Perl 5.16 and earlier, copy-on-write (see the next section) shared a flag bit with read-only scalars. So the only way to test whether &lt;code&gt;sv_setsv&lt;/code&gt; , etc., will raise a &quot;Modification of a read-only value&quot; error in those versions is:</source>
          <target state="translated">En Perl 5.16 y versiones anteriores, la copia al escribir (ver la siguiente secci&amp;oacute;n) compart&amp;iacute;a un bit de bandera con escalares de solo lectura. Entonces, la &amp;uacute;nica forma de probar si &lt;code&gt;sv_setsv&lt;/code&gt; , etc., generar&amp;aacute; un error de &quot;Modificaci&amp;oacute;n de un valor de solo lectura&quot; en esas versiones es:</target>
        </trans-unit>
        <trans-unit id="2de270c18c4d05efea842690bbe0309208ec91c2" translate="yes" xml:space="preserve">
          <source>In Perl 5.16 and earlier, copy-on-write (see the next section) shared a flag bit with read-only scalars. So the only way to test whether &lt;code&gt;sv_setsv&lt;/code&gt;, etc., will raise a &quot;Modification of a read-only value&quot; error in those versions is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c29d499be725da440aa9799fa65cef604b0abdb" translate="yes" xml:space="preserve">
          <source>In Perl 5.18.0 onwards, perl started noting the presence of each of the three variables separately, and only copied that part of the string required; so in</source>
          <target state="translated">A partir de Perl 5.18.0,Perl comenzó a notar la presencia de cada una de las tres variables por separado,y sólo copió la parte de la cadena requerida;así que en</target>
        </trans-unit>
        <trans-unit id="bb6846bd814a1146dc2f695e71c44bd7e9fb3806" translate="yes" xml:space="preserve">
          <source>In Perl 5.20 and 5.22, this syntax must be enabled with &lt;code&gt;use feature 'postderef'&lt;/code&gt;. As of Perl 5.24, no feature declarations are required to make it available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac74f29244f42c123f550a223146503cf87cca65" translate="yes" xml:space="preserve">
          <source>In Perl 5.20 and earlier, the only pragmas to be completely supported are: &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; feature&lt;/code&gt; . (&lt;code&gt;$[&lt;/code&gt; , which behaves like a pragma, is also supported.)</source>
          <target state="translated">En Perl 5.20 y versiones anteriores, los &amp;uacute;nicos pragmas que son completamente compatibles son: &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; feature&lt;/code&gt; . ( &lt;code&gt;$[&lt;/code&gt; , que se comporta como un pragma, tambi&amp;eacute;n es compatible.)</target>
        </trans-unit>
        <trans-unit id="a99daea546c9fc521d28b295e0227c75c1c77163" translate="yes" xml:space="preserve">
          <source>In Perl 5.20 and higher this is ignored. Due to a new copy-on-write mechanism, ${^PREMATCH}, ${^MATCH}, and ${^POSTMATCH} will be available after the match regardless of the modifier.</source>
          <target state="translated">En Perl 5.20 y superior esto es ignorado.Debido a un nuevo mecanismo de copia en escritura,${^PREMATCH},${^MATCH},y ${^POSTMATCH}estarán disponibles después del partido sin importar el modificador.</target>
        </trans-unit>
        <trans-unit id="c2e345cc084802e472e843021a52be876a248694" translate="yes" xml:space="preserve">
          <source>In Perl 5.20 and higher this is ignored. Due to a new copy-on-write mechanism, &lt;code&gt;${^PREMATCH}&lt;/code&gt;, &lt;code&gt;${^MATCH}&lt;/code&gt;, and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; will be available after the match regardless of the modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd87335d7944293ee760ce3fce6d463be42dedd" translate="yes" xml:space="preserve">
          <source>In Perl 5.20.0 a new copy-on-write system was enabled by default, which finally fixes all performance issues with these three variables, and makes them safe to use anywhere.</source>
          <target state="translated">En Perl 5.20.0 se habilitó por defecto un nuevo sistema de copia sobre escritura,que finalmente arregla todos los problemas de rendimiento con estas tres variables,y las hace seguras para usarlas en cualquier lugar.</target>
        </trans-unit>
        <trans-unit id="f3bfdc8baf280a72c47cbbea941ae21c16b028e7" translate="yes" xml:space="preserve">
          <source>In Perl 5.20.0 this was changed so that it would be &lt;b&gt;exactly&lt;/b&gt; the same as setting &lt;code&gt;$/&lt;/code&gt; to undef, with the exception that this warning would be thrown.</source>
          <target state="translated">En Perl 5.20.0 esto se cambi&amp;oacute; para que fuera &lt;b&gt;exactamente&lt;/b&gt; lo mismo que establecer &lt;code&gt;$/&lt;/code&gt; en undef, con la excepci&amp;oacute;n de que se lanzar&amp;iacute;a esta advertencia.</target>
        </trans-unit>
        <trans-unit id="b9a5cb481a025f6680fe2e560f757bef411f0354" translate="yes" xml:space="preserve">
          <source>In Perl 5.22 and later, all groups within a regexp can be set to non-capturing by using the new &lt;code&gt;/n&lt;/code&gt; flag:</source>
          <target state="translated">En Perl 5.22 y versiones posteriores, todos los grupos dentro de una expresi&amp;oacute;n regular se pueden configurar para que no capturen mediante el uso de la nueva &lt;code&gt;/n&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8c05f57b472f3633ffbc63a5a1677bbf1fd5199a" translate="yes" xml:space="preserve">
          <source>In Perl 5.30 and earlier, lookbehind is allowed only for subexpressions whose length is fixed and known at compile time. For positive lookbehind, you can use the &lt;code&gt;\K&lt;/code&gt; regex construct as a way to get the equivalent functionality. See &lt;a href=&quot;perlre#%5CK&quot;&gt;(?&amp;lt;=pattern) and \K in perlre&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015d46ab8b3eb1374b9c9159b3586fa11c13b7fc" translate="yes" xml:space="preserve">
          <source>In Perl 5.30, it will no longer be possible to use sysread(), recv(), syswrite() or send() to read or send bytes from/to :utf8 handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829f62b5d0005de3966076a8745c273476071683" translate="yes" xml:space="preserve">
          <source>In Perl 5.6 and some books the &lt;code&gt;:raw&lt;/code&gt; layer (previously sometimes also referred to as a &quot;discipline&quot;) is documented as the inverse of the &lt;code&gt;:crlf&lt;/code&gt; layer. That is no longer the case - other layers which would alter the binary nature of the stream are also disabled. If you want UNIX line endings on a platform that normally does CRLF translation, but still want UTF-8 or encoding defaults, the appropriate thing to do is to add &lt;code&gt;:perlio&lt;/code&gt; to the PERLIO environment variable.</source>
          <target state="translated">En Perl 5.6 y en algunos libros, la capa &lt;code&gt;:raw&lt;/code&gt; (anteriormente a veces tambi&amp;eacute;n conocida como &quot;disciplina&quot;) se documenta como la inversa de la capa &lt;code&gt;:crlf&lt;/code&gt; . Ese ya no es el caso: otras capas que alterar&amp;iacute;an la naturaleza binaria de la secuencia tambi&amp;eacute;n est&amp;aacute;n deshabilitadas. Si desea finales de l&amp;iacute;nea UNIX en una plataforma que normalmente hace la traducci&amp;oacute;n CRLF, pero a&amp;uacute;n desea UTF-8 o valores predeterminados de codificaci&amp;oacute;n, lo apropiado es agregar &lt;code&gt;:perlio&lt;/code&gt; a la variable de entorno PERLIO.</target>
        </trans-unit>
        <trans-unit id="fad3da3a77d2a8e0c192dfbe3d758d620ee24b00" translate="yes" xml:space="preserve">
          <source>In Perl 5.6 and some books the &lt;code&gt;:raw&lt;/code&gt; layer is documented as the inverse of the &lt;code&gt;:crlf&lt;/code&gt; layer. That is no longer the case - other layers which would alter the binary nature of the stream are also disabled. If you want UNIX line endings on a platform that normally does CRLF translation, but still want UTF-8 or encoding defaults, the appropriate thing to do is to add &lt;code&gt;:perlio&lt;/code&gt; to the PERLIO environment variable, or open the handle explicitly with that layer, to replace the platform default of &lt;code&gt;:crlf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fac8c7e82a994285a91ea520c95723e026d4360" translate="yes" xml:space="preserve">
          <source>In Perl 5.6, a new model was introduced in which all is was thread local and shared access to data has to be explicitly declared. This model is called</source>
          <target state="translated">En Perl 5.6,se introdujo un nuevo modelo en el que todo es hilo local y el acceso compartido a los datos tiene que ser declarado explícitamente.Este modelo se llama</target>
        </trans-unit>
        <trans-unit id="c2abdf6c9d513612683e10abfef7f22af8c5271f" translate="yes" xml:space="preserve">
          <source>In Perl 5.6, the</source>
          <target state="translated">En Perl 5.6,el</target>
        </trans-unit>
        <trans-unit id="26c0c53508feac78fbf5a2c99792e045ffa03c8a" translate="yes" xml:space="preserve">
          <source>In Perl 5.6.0 the &lt;code&gt;@-&lt;/code&gt; and &lt;code&gt;@+&lt;/code&gt; dynamic arrays were introduced that supply the indices of successful matches. So you could for example do this:</source>
          <target state="translated">En Perl 5.6.0 se introdujeron las matrices din&amp;aacute;micas &lt;code&gt;@-&lt;/code&gt; y &lt;code&gt;@+&lt;/code&gt; que proporcionan los &amp;iacute;ndices de coincidencias exitosas. Entonces podr&amp;iacute;as, por ejemplo, hacer esto:</target>
        </trans-unit>
        <trans-unit id="523c10b75565b9e0e195e0700fdbbd2ed237ae32" translate="yes" xml:space="preserve">
          <source>In Perl 5.8, the</source>
          <target state="translated">En el Perl 5.8,el</target>
        </trans-unit>
        <trans-unit id="a58322d6122d01dd67612b6444328927a4d69bfc" translate="yes" xml:space="preserve">
          <source>In Perl 5.8.0 the slowness was often quite spectacular; in Perl 5.8.1 a caching scheme was introduced which improved the situation. In general, operations with UTF-8 encoded strings are still slower. As an example, the Unicode properties (character classes) like &lt;code&gt;\p{Nd}&lt;/code&gt; are known to be quite a bit slower (5-20 times) than their simpler counterparts like &lt;code&gt;[0-9]&lt;/code&gt; (then again, there are hundreds of Unicode characters matching &lt;code&gt;Nd&lt;/code&gt; compared with the 10 ASCII characters matching &lt;code&gt;[0-9]&lt;/code&gt; ).</source>
          <target state="translated">En Perl 5.8.0, la lentitud a menudo era bastante espectacular; en Perl 5.8.1 se introdujo un esquema de almacenamiento en cach&amp;eacute; que mejor&amp;oacute; la situaci&amp;oacute;n. En general, las operaciones con cadenas codificadas en UTF-8 son a&amp;uacute;n m&amp;aacute;s lentas. Como ejemplo, se sabe que las propiedades Unicode (clases de caracteres) como &lt;code&gt;\p{Nd}&lt;/code&gt; son bastante m&amp;aacute;s lentas (5-20 veces) que sus contrapartes m&amp;aacute;s simples como &lt;code&gt;[0-9]&lt;/code&gt; (de nuevo, hay cientos de Unicode caracteres que coinciden con &lt;code&gt;Nd&lt;/code&gt; en comparaci&amp;oacute;n con los 10 caracteres ASCII que coinciden con &lt;code&gt;[0-9]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e439fc7cf20010bb9655a79250e2e3dd1a376ddd" translate="yes" xml:space="preserve">
          <source>In Perl 5.8.0 the slowness was often quite spectacular; in Perl 5.8.1 a caching scheme was introduced which improved the situation. In general, operations with UTF-8 encoded strings are still slower. As an example, the Unicode properties (character classes) like &lt;code&gt;\p{Nd}&lt;/code&gt; are known to be quite a bit slower (5-20 times) than their simpler counterparts like &lt;code&gt;[0-9]&lt;/code&gt; (then again, there are hundreds of Unicode characters matching &lt;code&gt;Nd&lt;/code&gt; compared with the 10 ASCII characters matching &lt;code&gt;[0-9]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c85305fdff4b0749bfcf24c2c7a107269854de9" translate="yes" xml:space="preserve">
          <source>In Perl 6, &lt;code&gt;when()&lt;/code&gt; will always do an implicit smartmatch with its argument, while in Perl 5 it is convenient (albeit potentially confusing) to suppress this implicit smartmatch in various rather loosely-defined situations, as roughly outlined above. (The difference is largely because Perl 5 does not have, even internally, a boolean type.)</source>
          <target state="translated">En Perl 6, &lt;code&gt;when()&lt;/code&gt; siempre har&amp;aacute; un smartmatch impl&amp;iacute;cito con su argumento, mientras que en Perl 5 es conveniente (aunque potencialmente confuso) suprimir este smartmatch impl&amp;iacute;cito en varias situaciones bastante vagamente definidas, como se describi&amp;oacute; anteriormente. (La diferencia se debe en gran parte a que Perl 5 no tiene, ni siquiera internamente, un tipo booleano).</target>
        </trans-unit>
        <trans-unit id="ca97d510355543881848d3f320ae7ab2b8841db0" translate="yes" xml:space="preserve">
          <source>In Perl most objects are hashes, but the OO systems we recommend keep you from having to worry about this. In practice, it's best to consider an object's internal data structure opaque.</source>
          <target state="translated">En Perl la mayoría de los objetos son hashes,pero los sistemas OO que recomendamos evitan que te preocupes por esto.En la práctica,es mejor considerar opaca la estructura de datos interna de un objeto.</target>
        </trans-unit>
        <trans-unit id="6fcb11a99abfcbef52ae2fdd52d4cd8656bbc249" translate="yes" xml:space="preserve">
          <source>In Perl regular expressions, most regexp elements &quot;eat up&quot; a certain amount of string when they match. For instance, the regexp element &lt;code&gt;[abc]&lt;/code&gt; eats up one character of the string when it matches, in the sense that Perl moves to the next character position in the string after the match. There are some elements, however, that don't eat up characters (advance the character position) if they match. The examples we have seen so far are the anchors. The anchor &lt;code&gt;'^'&lt;/code&gt; matches the beginning of the line, but doesn't eat any characters. Similarly, the word boundary anchor &lt;code&gt;\b&lt;/code&gt; matches wherever a character matching &lt;code&gt;\w&lt;/code&gt; is next to a character that doesn't, but it doesn't eat up any characters itself. Anchors are examples of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243bad753f535e22807612697dcecab4311e323e" translate="yes" xml:space="preserve">
          <source>In Perl regular expressions, most regexp elements 'eat up' a certain amount of string when they match. For instance, the regexp element &lt;code&gt;[abc}]&lt;/code&gt; eats up one character of the string when it matches, in the sense that Perl moves to the next character position in the string after the match. There are some elements, however, that don't eat up characters (advance the character position) if they match. The examples we have seen so far are the anchors. The anchor &lt;code&gt;^&lt;/code&gt; matches the beginning of the line, but doesn't eat any characters. Similarly, the word boundary anchor &lt;code&gt;\b&lt;/code&gt; matches wherever a character matching &lt;code&gt;\w&lt;/code&gt; is next to a character that doesn't, but it doesn't eat up any characters itself. Anchors are examples of</source>
          <target state="translated">En las expresiones regulares de Perl, la mayor&amp;iacute;a de los elementos regexp 'consumen' una cierta cantidad de cadena cuando coinciden. Por ejemplo, el elemento regexp &lt;code&gt;[abc}]&lt;/code&gt; consume un car&amp;aacute;cter de la cadena cuando coincide, en el sentido de que Perl se mueve a la siguiente posici&amp;oacute;n de car&amp;aacute;cter en la cadena despu&amp;eacute;s de la coincidencia. Sin embargo, hay algunos elementos que no se comen a los personajes (avanzan la posici&amp;oacute;n del personaje) si coinciden. Los ejemplos que hemos visto hasta ahora son los anclajes. El ancla &lt;code&gt;^&lt;/code&gt; coincide con el principio de la l&amp;iacute;nea, pero no se come ning&amp;uacute;n car&amp;aacute;cter. De manera similar, la palabra l&amp;iacute;mite de anclaje &lt;code&gt;\b&lt;/code&gt; coincide siempre que un car&amp;aacute;cter que coincide con &lt;code&gt;\w&lt;/code&gt; est&amp;eacute; al lado de un car&amp;aacute;cter que no lo hace, pero no consume ning&amp;uacute;n car&amp;aacute;cter en s&amp;iacute;. Los anclajes son ejemplos de</target>
        </trans-unit>
        <trans-unit id="905e1c7e56de580fc4af4b17e4c486804586d33e" translate="yes" xml:space="preserve">
          <source>In Perl terms this means that supplying the usual Perl numbers (also known as scalars, please see &lt;a href=&quot;../perldata&quot;&gt;perldata&lt;/a&gt;) as input for the trigonometric functions might produce as output results that no more are simple real numbers: instead they are complex numbers.</source>
          <target state="translated">En t&amp;eacute;rminos de Perl, esto significa que proporcionar los n&amp;uacute;meros de Perl habituales (tambi&amp;eacute;n conocidos como escalares, consulte &lt;a href=&quot;../perldata&quot;&gt;perldata&lt;/a&gt; ) como entrada para las funciones trigonom&amp;eacute;tricas puede producir como resultados de salida que ya no son n&amp;uacute;meros reales simples: en su lugar, son n&amp;uacute;meros complejos.</target>
        </trans-unit>
        <trans-unit id="c89c1933f929227bc6d7b434996b4c3d5312db42" translate="yes" xml:space="preserve">
          <source>In Perl terms this means that supplying the usual Perl numbers (also known as scalars, please see &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;) as input for the trigonometric functions might produce as output results that no more are simple real numbers: instead they are complex numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f326f4fd32f12380a2d175a436e985d3f4c2edf" translate="yes" xml:space="preserve">
          <source>In Perl v5.14, all non-ASCII characters are quoted in non-UTF-8-encoded strings, but not quoted in UTF-8 strings.</source>
          <target state="translated">En Perl v5.14,todos los caracteres no ASCII se citan en cadenas no codificadas en UTF-8,pero no en UTF-8.</target>
        </trans-unit>
        <trans-unit id="0ffdb19ef413239753228d33908dad38e29d542e" translate="yes" xml:space="preserve">
          <source>In Perl v5.18 and earlier, it is only guaranteed to return a defined value when the pattern was compiled or executed with the &lt;code&gt;/p&lt;/code&gt; modifier. In Perl v5.20, the &lt;code&gt;/p&lt;/code&gt; modifier does nothing, so &lt;code&gt;${^MATCH}&lt;/code&gt; does the same thing as &lt;code&gt;$MATCH&lt;/code&gt; .</source>
          <target state="translated">En Perl v5.18 y anteriores, solo se garantiza que devolver&amp;aacute; un valor definido cuando el patr&amp;oacute;n se compil&amp;oacute; o ejecut&amp;oacute; con el modificador &lt;code&gt;/p&lt;/code&gt; . En Perl v5.20, el modificador &lt;code&gt;/p&lt;/code&gt; no hace nada, por lo que &lt;code&gt;${^MATCH}&lt;/code&gt; hace lo mismo que &lt;code&gt;$MATCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="057abcd6479cca74c3b9fb3d3dd6b27878d1413e" translate="yes" xml:space="preserve">
          <source>In Perl v5.18 and earlier, it is only guaranteed to return a defined value when the pattern was compiled or executed with the &lt;code&gt;/p&lt;/code&gt; modifier. In Perl v5.20, the &lt;code&gt;/p&lt;/code&gt; modifier does nothing, so &lt;code&gt;${^MATCH}&lt;/code&gt; does the same thing as &lt;code&gt;$MATCH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4dbbc56c5f11021be8e37601f6986f49dc8e148" translate="yes" xml:space="preserve">
          <source>In Perl v5.18 and earlier, it is only guaranteed to return a defined value when the pattern was compiled or executed with the &lt;code&gt;/p&lt;/code&gt; modifier. In Perl v5.20, the &lt;code&gt;/p&lt;/code&gt; modifier does nothing, so &lt;code&gt;${^POSTMATCH}&lt;/code&gt; does the same thing as &lt;code&gt;$POSTMATCH&lt;/code&gt; .</source>
          <target state="translated">En Perl v5.18 y anteriores, solo se garantiza que devolver&amp;aacute; un valor definido cuando el patr&amp;oacute;n se compil&amp;oacute; o ejecut&amp;oacute; con el modificador &lt;code&gt;/p&lt;/code&gt; . En Perl v5.20, el modificador &lt;code&gt;/p&lt;/code&gt; no hace nada, por lo que &lt;code&gt;${^POSTMATCH}&lt;/code&gt; hace lo mismo que &lt;code&gt;$POSTMATCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7db6a7a5d2c710c4176385519a525c382964c439" translate="yes" xml:space="preserve">
          <source>In Perl v5.18 and earlier, it is only guaranteed to return a defined value when the pattern was compiled or executed with the &lt;code&gt;/p&lt;/code&gt; modifier. In Perl v5.20, the &lt;code&gt;/p&lt;/code&gt; modifier does nothing, so &lt;code&gt;${^POSTMATCH}&lt;/code&gt; does the same thing as &lt;code&gt;$POSTMATCH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c22186f7acbb5a1c00ca1269cc907a18af05f8" translate="yes" xml:space="preserve">
          <source>In Perl v5.18 and earlier, it is only guaranteed to return a defined value when the pattern was compiled or executed with the &lt;code&gt;/p&lt;/code&gt; modifier. In Perl v5.20, the &lt;code&gt;/p&lt;/code&gt; modifier does nothing, so &lt;code&gt;${^PREMATCH}&lt;/code&gt; does the same thing as &lt;code&gt;$PREMATCH&lt;/code&gt; .</source>
          <target state="translated">En Perl v5.18 y anteriores, solo se garantiza que devolver&amp;aacute; un valor definido cuando el patr&amp;oacute;n se compil&amp;oacute; o ejecut&amp;oacute; con el modificador &lt;code&gt;/p&lt;/code&gt; . En Perl v5.20, el modificador &lt;code&gt;/p&lt;/code&gt; no hace nada, por lo que &lt;code&gt;${^PREMATCH}&lt;/code&gt; hace lo mismo que &lt;code&gt;$PREMATCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd3dd771da7118a3415ee7efa43387081550b359" translate="yes" xml:space="preserve">
          <source>In Perl v5.18 and earlier, it is only guaranteed to return a defined value when the pattern was compiled or executed with the &lt;code&gt;/p&lt;/code&gt; modifier. In Perl v5.20, the &lt;code&gt;/p&lt;/code&gt; modifier does nothing, so &lt;code&gt;${^PREMATCH}&lt;/code&gt; does the same thing as &lt;code&gt;$PREMATCH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5432c77569fd0514eaa8844532d6c5cc637bdaa6" translate="yes" xml:space="preserve">
          <source>In Perl versions 5.6 and earlier the quicksort algorithm was used to implement &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt;, but in Perl 5.8 a mergesort algorithm was also made available, mainly to guarantee worst case O(N log N) behaviour: the worst case of quicksort is O(N**2). In Perl 5.8 and later, quicksort defends against quadratic behaviour by shuffling large arrays before sorting.</source>
          <target state="translated">En las versiones 5.6 de Perl y anteriores, el algoritmo de &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; r&amp;aacute;pida se utiliz&amp;oacute; para implementar sort () , pero en Perl 5.8 tambi&amp;eacute;n se puso a disposici&amp;oacute;n un algoritmo de ordenaci&amp;oacute;n por fusi&amp;oacute;n, principalmente para garantizar el peor comportamiento de O (N log N): el peor caso de ordenaci&amp;oacute;n r&amp;aacute;pida es O ( N ** 2). En Perl 5.8 y posteriores, el ordenamiento r&amp;aacute;pido se defiende contra el comportamiento cuadr&amp;aacute;tico al mezclar arreglos grandes antes de ordenar.</target>
        </trans-unit>
        <trans-unit id="b8d70ec01f0ffe74da5bcdba9c1b84357d80b78c" translate="yes" xml:space="preserve">
          <source>In Perl versions prior to 5.26, this feature enabled declaration of subroutines via &lt;code&gt;my sub foo&lt;/code&gt;, &lt;code&gt;state sub foo&lt;/code&gt; and &lt;code&gt;our sub foo&lt;/code&gt; syntax. See &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;&quot;Lexical Subroutines&quot; in perlsub&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b481016607f0afb6a75f448e44a95f87a802232" translate="yes" xml:space="preserve">
          <source>In Perl you will get a floating point value if you do one of the following:</source>
          <target state="translated">En Perl obtendrás un valor de punto flotante si haces una de las siguientes cosas:</target>
        </trans-unit>
        <trans-unit id="7d663b5a48798d90608073d23eaf6d6597db1534" translate="yes" xml:space="preserve">
          <source>In Perl, &lt;code&gt;else if&lt;/code&gt; is spelled &lt;code&gt;elsif&lt;/code&gt; .</source>
          <target state="translated">En Perl, &lt;code&gt;else if&lt;/code&gt; se escribe &lt;code&gt;elsif&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a2652823d74ae993d4eef83bf52682f95c98945" translate="yes" xml:space="preserve">
          <source>In Perl, &lt;code&gt;else if&lt;/code&gt; is spelled &lt;code&gt;elsif&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49774beef30ebf83ad6beb68cfd55f59cc0e76e3" translate="yes" xml:space="preserve">
          <source>In Perl, a class is just a package, and methods are just subroutines. Perl doesn't get more formal than that and lets you set up the package just the way that you like it (that is, it doesn't set up anything for you).</source>
          <target state="translated">En Perl,una clase es sólo un paquete,y los métodos son sólo subrutinas.Perl no es más formal que eso y te permite configurar el paquete de la manera que más te guste (es decir,no configura nada para ti).</target>
        </trans-unit>
        <trans-unit id="983e915935b5fb68c2f1bb82bb4cf04272a6754a" translate="yes" xml:space="preserve">
          <source>In Perl, a sequence of statements that defines a scope is called a block. Sometimes a block is delimited by the file containing it (in the case of a required file, or the program as a whole), and sometimes a block is delimited by the extent of a string (in the case of an eval).</source>
          <target state="translated">En Perl,una secuencia de declaraciones que define un alcance se llama un bloque.A veces un bloque está delimitado por el archivo que lo contiene (en el caso de un archivo requerido,o el programa en su conjunto),y a veces un bloque está delimitado por la extensión de una cadena (en el caso de una eval).</target>
        </trans-unit>
        <trans-unit id="476c5432e1fcd1b2c55042740329df48b50efcfd" translate="yes" xml:space="preserve">
          <source>In Perl, an object is a blessed reference. The standard way of associating data with an object is to store the data inside the object's body, that is, the piece of data pointed to by the reference.</source>
          <target state="translated">En Perl,un objeto es una referencia bendita.La forma estándar de asociar datos con un objeto es almacenar los datos dentro del cuerpo del objeto,es decir,el trozo de datos al que apunta la referencia.</target>
        </trans-unit>
        <trans-unit id="6459245c83006474d0636721805e8f89399cea54" translate="yes" xml:space="preserve">
          <source>In Perl, any package can be a class. The difference between a package which is a class and one which isn't is based on how the package is used. Here's our &quot;class declaration&quot; for the &lt;code&gt;File&lt;/code&gt; class:</source>
          <target state="translated">En Perl, cualquier paquete puede ser una clase. La diferencia entre un paquete que es una clase y uno que no lo es se basa en c&amp;oacute;mo se usa el paquete. Aqu&amp;iacute; est&amp;aacute; nuestra &quot;declaraci&amp;oacute;n de clase&quot; para la clase &lt;code&gt;File&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="935b815c5b098d8ca1c1e87b1e728cb47b24fb51" translate="yes" xml:space="preserve">
          <source>In Perl, any value that would look like &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;&quot;0&quot;&lt;/code&gt; if evaluated in a string context. Since undefined values evaluate to &lt;code&gt;&quot;&quot;&lt;/code&gt; , all undefined values are false, but not all false values are undefined.</source>
          <target state="translated">En Perl, cualquier valor que se vea como &lt;code&gt;&quot;&quot;&lt;/code&gt; o &lt;code&gt;&quot;0&quot;&lt;/code&gt; si se eval&amp;uacute;a en un contexto de cadena. Dado que los valores indefinidos se eval&amp;uacute;an como &lt;code&gt;&quot;&quot;&lt;/code&gt; , todos los valores indefinidos son falsos, pero no todos los valores falsos son indefinidos.</target>
        </trans-unit>
        <trans-unit id="9c0e1a8a489587a81c3737b4c92da909aea6a8ed" translate="yes" xml:space="preserve">
          <source>In Perl, any value that would look like &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;&quot;0&quot;&lt;/code&gt; if evaluated in a string context. Since undefined values evaluate to &lt;code&gt;&quot;&quot;&lt;/code&gt;, all undefined values are false, but not all false values are undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56beb88cb62afd75b5b76cfb0ba20b6ebe456c89" translate="yes" xml:space="preserve">
          <source>In Perl, binary &lt;code&gt;+&lt;/code&gt; is always addition. &lt;code&gt;$string1 + $string2&lt;/code&gt; converts both strings to numbers and then adds them. To concatenate two strings, use the &lt;code&gt;.&lt;/code&gt; operator.</source>
          <target state="translated">En Perl, binario &lt;code&gt;+&lt;/code&gt; siempre es una suma. &lt;code&gt;$string1 + $string2&lt;/code&gt; convierte ambas cadenas en n&amp;uacute;meros y luego las agrega. Para concatenar dos cadenas, use el &lt;code&gt;.&lt;/code&gt; operador.</target>
        </trans-unit>
        <trans-unit id="45dacae9ba665d20910caab3291e37d91f82dce5" translate="yes" xml:space="preserve">
          <source>In Perl, dynamic scoping refers to the runtime nesting of things like subroutine calls, evals etc, as well as the entering and exiting of block scopes. For example, the restoring of a &lt;code&gt;local&lt;/code&gt;ised variable is determined by the dynamic scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33a4933eab4c192832e758c7f44c0a0303ba50a" translate="yes" xml:space="preserve">
          <source>In Perl, methods are simply subroutines that live in a class's package. Methods are always written to receive the object as their first argument:</source>
          <target state="translated">En Perl,los métodos son simplemente subrutinas que viven en el paquete de una clase.Los métodos siempre se escriben para recibir el objeto como su primer argumento:</target>
        </trans-unit>
        <trans-unit id="ea72a9a423acf3df90a345514eea4421a19ceb17" translate="yes" xml:space="preserve">
          <source>In Perl, the debugger is not a separate program the way it usually is in the typical compiled environment. Instead, the &lt;b&gt;-d&lt;/b&gt; flag tells the compiler to insert source information into the parse trees it's about to hand off to the interpreter. That means your code must first compile correctly for the debugger to work on it. Then when the interpreter starts up, it preloads a special Perl library file containing the debugger.</source>
          <target state="translated">En Perl, el depurador no es un programa separado como suele ser en el t&amp;iacute;pico entorno compilado. En su lugar, la bandera &lt;b&gt;-d&lt;/b&gt; le dice al compilador que inserte la informaci&amp;oacute;n de origen en los &amp;aacute;rboles de an&amp;aacute;lisis que est&amp;aacute; a punto de entregar al int&amp;eacute;rprete. Eso significa que su c&amp;oacute;digo primero debe compilarse correctamente para que el depurador funcione en &amp;eacute;l. Luego, cuando el int&amp;eacute;rprete se inicia, carga previamente un archivo de biblioteca Perl especial que contiene el depurador.</target>
        </trans-unit>
        <trans-unit id="3c642476c3d73c23016f66bc533c3f6f2db6cded" translate="yes" xml:space="preserve">
          <source>In Perl, the operator determines what operation is performed, independent of the type of the operands. For example &lt;code&gt;$x + $y&lt;/code&gt; is always a numeric addition, and if &lt;code&gt;$x&lt;/code&gt; or &lt;code&gt;$y&lt;/code&gt; do not contain numbers, an attempt is made to convert them to numbers first.</source>
          <target state="translated">En Perl, el operador determina qu&amp;eacute; operaci&amp;oacute;n se realiza, independientemente del tipo de operandos. Por ejemplo, &lt;code&gt;$x + $y&lt;/code&gt; siempre es una suma num&amp;eacute;rica, y si &lt;code&gt;$x&lt;/code&gt; o &lt;code&gt;$y&lt;/code&gt; no contienen n&amp;uacute;meros, se intenta convertirlos primero en n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="05577297c46ae0d2cd55a130e9e49792d0bf233a" translate="yes" xml:space="preserve">
          <source>In Perl, there is no special keyword for constructing an object. However, most OO modules on CPAN use a method named &lt;code&gt;new()&lt;/code&gt; to construct a new object:</source>
          <target state="translated">En Perl, no hay una palabra clave especial para construir un objeto. Sin embargo, la mayor&amp;iacute;a de los m&amp;oacute;dulos OO en CPAN usan un m&amp;eacute;todo llamado &lt;code&gt;new()&lt;/code&gt; para construir un nuevo objeto:</target>
        </trans-unit>
        <trans-unit id="5e186db9710e48217d6288a83b8e0190d6d543fb" translate="yes" xml:space="preserve">
          <source>In Perl, unlike C, a string of characters may generally contain embedded &lt;code&gt;NUL&lt;/code&gt; characters. Sometimes in the documentation a Perl string is referred to as a &quot;buffer&quot; to distinguish it from a C string, but sometimes they are both just referred to as strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4aecd76031e1346a21238102ea29667311ebe2a" translate="yes" xml:space="preserve">
          <source>In Perl, you just can't access memory at random, but the structural and representational conversion provided by &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; is an excellent alternative. The &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; function converts values to a byte sequence containing representations according to a given specification, the so-called &quot;template&quot; argument. &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; is the reverse process, deriving some values from the contents of a string of bytes. (Be cautioned, however, that not all that has been packed together can be neatly unpacked - a very common experience as seasoned travellers are likely to confirm.)</source>
          <target state="translated">En Perl, simplemente no se puede acceder a la memoria de forma aleatoria, pero la conversi&amp;oacute;n estructural y de representaci&amp;oacute;n proporcionada por &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; es una excelente alternativa. La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; convierte valores en una secuencia de bytes que contiene representaciones de acuerdo con una especificaci&amp;oacute;n dada, el llamado argumento &quot;plantilla&quot;. &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; es el proceso inverso, derivando algunos valores del contenido de una cadena de bytes. (Tenga en cuenta, sin embargo, que no todo lo que se ha empaquetado junto se puede desempacar cuidadosamente, una experiencia muy com&amp;uacute;n como es probable que confirmen los viajeros experimentados).</target>
        </trans-unit>
        <trans-unit id="6336086c91498a8e5594063230b55c879e95d340" translate="yes" xml:space="preserve">
          <source>In Perl, you just can't access memory at random, but the structural and representational conversion provided by &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;unpack&lt;/code&gt; is an excellent alternative. The &lt;code&gt;pack&lt;/code&gt; function converts values to a byte sequence containing representations according to a given specification, the so-called &quot;template&quot; argument. &lt;code&gt;unpack&lt;/code&gt; is the reverse process, deriving some values from the contents of a string of bytes. (Be cautioned, however, that not all that has been packed together can be neatly unpacked - a very common experience as seasoned travellers are likely to confirm.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a69ee0657acfe60fc783ea37121861ef3e8b2c7" translate="yes" xml:space="preserve">
          <source>In Practice</source>
          <target state="translated">En la práctica</target>
        </trans-unit>
        <trans-unit id="eb46744ebe1873e93242a02b5eecee5b509f89c1" translate="yes" xml:space="preserve">
          <source>In Raku, &lt;code&gt;when()&lt;/code&gt; will always do an implicit smartmatch with its argument, while in Perl 5 it is convenient (albeit potentially confusing) to suppress this implicit smartmatch in various rather loosely-defined situations, as roughly outlined above. (The difference is largely because Perl 5 does not have, even internally, a boolean type.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9de61f162399b6dd1501b64047f173f7ebabe0" translate="yes" xml:space="preserve">
          <source>In SVN, $Revision$ should be the same for every file in the project so they would all have the same $VERSION. CVS and RCS have a different $Revision$ per file so each file will have a different $VERSION. Distributed version control systems, such as SVK, may have a different $Revision$ based on who checks out the file, leading to a different $VERSION on each machine! Finally, some distributed version control systems, such as darcs, have no concept of revision number at all.</source>
          <target state="translated">En SVN,$Revision$ debería ser el mismo para cada archivo del proyecto,así que todos tendrían la misma $VERSION.CVS y RCS tienen un $Revision$ diferente por archivo así que cada archivo tendrá un $VERSION diferente.Los sistemas de control de versiones distribuidos,como SVK,pueden tener un $Revision$ diferente basado en quién chequea el archivo,lo que lleva a un $VERSION diferente en cada máquina! Finalmente,algunos sistemas de control de versiones distribuidos,como darcs,no tienen ningún concepto de número de revisión.</target>
        </trans-unit>
        <trans-unit id="90d2162f62558275ce1491c594305e3a7a9057a0" translate="yes" xml:space="preserve">
          <source>In Settings, add the following Package Sources:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c376db5dd46f66500036f6b8bff5133701d987" translate="yes" xml:space="preserve">
          <source>In SunOS 4.x you most probably want to use the SunOS ld, /usr/bin/ld, since the more recent versions of GNU ld (like 2.13) do not seem to work for building Perl anymore. When linking the extensions, the GNU ld gets very unhappy and spews a lot of errors like this</source>
          <target state="translated">En SunOS 4.x lo más probable es que quieras usar el SunOS ld,/usr/bin/ld,ya que las versiones más recientes de GNU ld (como la 2.13)ya no parecen funcionar para construir Perl.Al enlazar las extensiones,la GNU ld se pone muy triste y arroja muchos errores como este</target>
        </trans-unit>
        <trans-unit id="6b9fdb7061782483bb0e3d2f43e0f1d23f2b17f3" translate="yes" xml:space="preserve">
          <source>In Taiwan, Japan, and Korea, it is common for text to have a mixture of characters from their native scripts and base Chinese. Perl follows Unicode's UTS 39 (&lt;a href=&quot;https://unicode.org/reports/tr39/&quot;&gt;https://unicode.org/reports/tr39/&lt;/a&gt;) Unicode Security Mechanisms in allowing such mixtures. For example, the Japanese scripts Katakana and Hiragana are commonly mixed together in practice, along with some Chinese characters, and hence are treated as being in a single script run by Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1e3aace4bede70eba3cee6d6eb0864ab35df15" translate="yes" xml:space="preserve">
          <source>In Tru64 Perl is automatically able to use large files, that is, files larger than 2 gigabytes, there is no need to use the Configure -Duselargefiles option as described in INSTALL (though using the option is harmless).</source>
          <target state="translated">En Tru64 Perl es automáticamente capaz de utilizar archivos grandes,es decir,archivos de más de 2 gigabytes,no hay necesidad de utilizar la opción Configurar -Duselargefiles como se describe en INSTALAR (aunque utilizar la opción es inofensivo).</target>
        </trans-unit>
        <trans-unit id="cc19255447bc355361ae2f45799e7311a851742c" translate="yes" xml:space="preserve">
          <source>In Tru64 Perl's integers are automatically 64-bit wide, there is no need to use the Configure -Duse64bitint option as described in INSTALL. Similarly, there is no need for -Duse64bitall since pointers are automatically 64-bit wide.</source>
          <target state="translated">En Tru64 los enteros de Perl tienen automáticamente un ancho de 64 bits,no hay necesidad de usar la opción Configurar -Duse64bitint como se describe en INSTALAR.Del mismo modo,no hay necesidad de -Duse64bitall ya que los punteros tienen automáticamente un ancho de 64 bits.</target>
        </trans-unit>
        <trans-unit id="92e8004abe586abe7845a841b1a5b8acbf9b5035" translate="yes" xml:space="preserve">
          <source>In Tru64 V5 (at least V5.1A, V5.1B) you cannot build threaded Perl with gcc because the system header &amp;lt;pthread.h&amp;gt; explicitly checks for supported C compilers, gcc (at least 3.2.2) not being one of them. But the system C compiler should work just fine.</source>
          <target state="translated">En Tru64 V5 (al menos V5.1A, V5.1B) no puede compilar Perl con subprocesos con gcc porque el encabezado del sistema &amp;lt;pthread.h&amp;gt; comprueba expl&amp;iacute;citamente los compiladores de C compatibles, gcc (al menos 3.2.2) no es uno de ellos . Pero el compilador del sistema C deber&amp;iacute;a funcionar bien.</target>
        </trans-unit>
        <trans-unit id="6303bf4cf60f3cd73bbb5bee3d92ebf1b27db248" translate="yes" xml:space="preserve">
          <source>In UTF-8 mode, it is not guaranteed that the lexer buffer actually contains valid UTF-8. Lexing code must be robust in the face of invalid encoding.</source>
          <target state="translated">En el modo UTF-8,no se garantiza que el buffer lexer contenga realmente UTF-8 válido.El código Lexing debe ser robusto frente a una codificación inválida.</target>
        </trans-unit>
        <trans-unit id="5587dff620034120288215aaa5eec31db833ac28" translate="yes" xml:space="preserve">
          <source>In Unicode 4.1.0, the definition D2 of canonical composition (which affects NFC and NFKC) has been changed (see Public Review Issue #29 and recent UAX #15). This module has used the newer definition since the version 0.07 (Oct 31, 2001). This module will not support the normalization according to the older definition, even if the Unicode version implemented by perl is lower than 4.1.0.</source>
          <target state="translated">En Unicode 4.1.0,la definición D2 de composición canónica (que afecta a NFC y NFKC)ha sido cambiada (véase el número 29 de la revista pública y el reciente número 15 de UAX).Este módulo ha utilizado la nueva definición desde la versión 0.07 (31 de octubre de 2001).Este módulo no soportará la normalización según la definición más antigua,incluso si la versión de Unicode implementada por perl es inferior a la 4.1.0.</target>
        </trans-unit>
        <trans-unit id="4add5639cbd0356c9e63afa54113a4c2eb6433cf" translate="yes" xml:space="preserve">
          <source>In Unicode terminology a</source>
          <target state="translated">En la terminología de Unicode a</target>
        </trans-unit>
        <trans-unit id="f8ecaf55c52d72cac38172d4d214a7acd326645e" translate="yes" xml:space="preserve">
          <source>In Unicode, not just characters with the General Category of Lowercase Letter, but any character with the Lowercase property, including Modifier Letters, Letter Numbers, some Other Symbols, and one Combining Mark.</source>
          <target state="translated">En Unicode,no sólo los caracteres con la categoría general de letra minúscula,sino cualquier carácter con la propiedad de minúscula,incluyendo letras modificadas,números de letras,algunos otros símbolos y una marca de combinación.</target>
        </trans-unit>
        <trans-unit id="6d6e7c6b62a7207f53debc7941773b1adb72b5b5" translate="yes" xml:space="preserve">
          <source>In Unicode, not just characters with the General Category of Uppercase Letter, but any character with the Uppercase property, including some Letter Numbers and Symbols. Not to be confused with &lt;b&gt;titlecase&lt;/b&gt;.</source>
          <target state="translated">En Unicode, no solo los caracteres con la categor&amp;iacute;a general de letra may&amp;uacute;scula, sino cualquier car&amp;aacute;cter con la propiedad de may&amp;uacute;sculas, incluidos algunos n&amp;uacute;meros y s&amp;iacute;mbolos de letras. No confundir con &lt;b&gt;titlecase&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b113bf75921160dcb55ede1f720912618b376337" translate="yes" xml:space="preserve">
          <source>In Unix, a sequence of zero or more nonnewline characters terminated with a &lt;b&gt;newline&lt;/b&gt; character. On non-Unix machines, this is emulated by the C library even if the underlying &lt;b&gt;operating system&lt;/b&gt; has different ideas.</source>
          <target state="translated">En Unix, una secuencia de cero o m&amp;aacute;s caracteres que no eran de &lt;b&gt;nueva l&amp;iacute;nea&lt;/b&gt; terminaba con un car&amp;aacute;cter de &lt;b&gt;nueva l&amp;iacute;nea&lt;/b&gt; . En m&amp;aacute;quinas que no son Unix, esto es emulado por la biblioteca C incluso si el &lt;b&gt;sistema operativo&lt;/b&gt; subyacente tiene ideas diferentes.</target>
        </trans-unit>
        <trans-unit id="1bf9694eb8cd962c6afbe1434566f7218f970b1f" translate="yes" xml:space="preserve">
          <source>In Windows platforms, &lt;code&gt;$^O&lt;/code&gt; is not very helpful: since it is always &lt;code&gt;MSWin32&lt;/code&gt; , it doesn't tell the difference between 95/98/ME/NT/2000/XP/CE/.NET. Use &lt;code&gt;Win32::GetOSName()&lt;/code&gt; or Win32::GetOSVersion() (see &lt;a href=&quot;http://search.cpan.org/perldoc/Win32&quot;&gt;Win32&lt;/a&gt; and &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;) to distinguish between the variants.</source>
          <target state="translated">En las plataformas Windows, &lt;code&gt;$^O&lt;/code&gt; no es muy &amp;uacute;til: dado que siempre es &lt;code&gt;MSWin32&lt;/code&gt; , no marca la diferencia entre 95/98 / ME / NT / 2000 / XP / CE / .NET. Utilice &lt;code&gt;Win32::GetOSName()&lt;/code&gt; o Win32 :: GetOSVersion () (consulte &lt;a href=&quot;http://search.cpan.org/perldoc/Win32&quot;&gt;Win32&lt;/a&gt; y &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; ) para distinguir entre las variantes.</target>
        </trans-unit>
        <trans-unit id="571c9a8187f8f9b92939078e49787860d6c5b703" translate="yes" xml:space="preserve">
          <source>In Windows platforms, &lt;code&gt;$^O&lt;/code&gt; is not very helpful: since it is always &lt;code&gt;MSWin32&lt;/code&gt;, it doesn't tell the difference between 95/98/ME/NT/2000/XP/CE/.NET. Use &lt;code&gt;Win32::GetOSName()&lt;/code&gt; or Win32::GetOSVersion() (see &lt;a href=&quot;win32&quot;&gt;Win32&lt;/a&gt; and &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;) to distinguish between the variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f9d78321013250cfcb8d441316ea8cae8423a1" translate="yes" xml:space="preserve">
          <source>In XS code, use of &lt;code&gt;to_utf8_case()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab390a067e67919faf228f1feaba13aa8739d9a5" translate="yes" xml:space="preserve">
          <source>In XS code, use of to_utf8_case()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864cceec0c178a3fbde977cff7807849ea71044b" translate="yes" xml:space="preserve">
          <source>In XS code, use of various macros dealing with UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d2f9cdc2abce1c37c00210e5a99994671e5e54" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;L&amp;lt;text|...&amp;gt;&lt;/code&gt; code, text may contain formatting codes for formatting or for E&amp;lt;...&amp;gt; escapes, as in:</source>
          <target state="translated">En un c&amp;oacute;digo &lt;code&gt;L&amp;lt;text|...&amp;gt;&lt;/code&gt; , el texto puede contener c&amp;oacute;digos de formato para formatear o para E &amp;lt;...&amp;gt; escapes, como en:</target>
        </trans-unit>
        <trans-unit id="282340f2a1ffb453132562968ecc8729e762ed24" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; loop, &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;eof(ARGV)&lt;/code&gt; can be used to detect the end of each file, whereas &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof()&lt;/code&gt;&lt;/a&gt; will detect the end of the very last file only. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e19714f7b922e3746b1633bf7eecd4c7104aed" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; loop, &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof(ARGV)&lt;/a&gt;&lt;/code&gt; can be used to detect the end of each file, whereas &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; will detect the end of the very last file only. Examples:</source>
          <target state="translated">En un bucle &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof(ARGV)&lt;/a&gt;&lt;/code&gt; se pueden usar para detectar el final de cada archivo, mientras que &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; detectar&amp;aacute; solo el final del &amp;uacute;ltimo archivo. Ejemplos:</target>
        </trans-unit>
        <trans-unit id="41690d136fbd264eb140c8b8c6cc615177c5eb14" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; loop, &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(ARGV)&lt;/a&gt;&lt;/code&gt; can be used to detect the end of each file, whereas &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; will detect the end of the very last file only. Examples:</source>
          <target state="translated">En un bucle &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(ARGV)&lt;/a&gt;&lt;/code&gt; se pueden usar para detectar el final de cada archivo, mientras que &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; detectar&amp;aacute; solo el final del &amp;uacute;ltimo archivo. Ejemplos:</target>
        </trans-unit>
        <trans-unit id="bc099e33e27d3f3cccb59648c75894207f5a15fa" translate="yes" xml:space="preserve">
          <source>In a Perl built for debugging, some buckets may have negative usable size. This means that these buckets cannot (and will not) be used. For larger buckets, the memory footprint may be one page greater than a power of 2. If so, the corresponding power of two is printed in the &lt;code&gt;APPROX&lt;/code&gt; field above.</source>
          <target state="translated">En un Perl construido para depuraci&amp;oacute;n, algunos dep&amp;oacute;sitos pueden tener un tama&amp;ntilde;o utilizable negativo. Esto significa que estos dep&amp;oacute;sitos no se pueden (ni se utilizar&amp;aacute;n). Para cubos m&amp;aacute;s grandes, la huella de memoria puede ser una p&amp;aacute;gina mayor que una potencia de 2. Si es as&amp;iacute;, la potencia correspondiente de dos se imprime en el campo &lt;code&gt;APPROX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d530f843344f7a394d5586d561f13c274faa0f4" translate="yes" xml:space="preserve">
          <source>In a Perl version number such as 5.6.2, this is the 2. Values greater than 50 represent potentially unstable development subversions. This value is manually set in</source>
          <target state="translated">En un número de versión de Perl como el 5.6.2,este es el 2.Los valores superiores a 50 representan subversiones de desarrollo potencialmente inestables.Este valor se establece manualmente en</target>
        </trans-unit>
        <trans-unit id="0f808181882ea1893d708887496cf67865ae159d" translate="yes" xml:space="preserve">
          <source>In a Perl version number such as 5.6.2, this is the 5. This value is manually set in</source>
          <target state="translated">En un número de versión de Perl como el 5.6.2,este es el 5.Este valor se ajusta manualmente en</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
