<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="9adb69905ef42f7e50e2708e20623f57aec71e19" translate="yes" xml:space="preserve">
          <source>In a Perl version number such as 5.6.2, this is the 6. This value is manually set in</source>
          <target state="translated">En un número de versión de Perl como el 5.6.2,este es el 6.Este valor se ajusta manualmente en</target>
        </trans-unit>
        <trans-unit id="00e75241de38f496d3e98c78e65b223be163fce0" translate="yes" xml:space="preserve">
          <source>In a UTF-8 locale in v5.20 and later, the only visible difference between locale and non-locale in regular expressions should be tainting (see &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;).</source>
          <target state="translated">En un entorno local UTF-8 en v5.20 y posteriores, la &amp;uacute;nica diferencia visible entre el entorno local y el no local en las expresiones regulares deber&amp;iacute;a ser contaminante (ver &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="684ae84268e30b89f35130d6bd4027aeb36b7294" translate="yes" xml:space="preserve">
          <source>In a bracketed character class in a regular expression pattern, you had a range which has exactly one end of it specified using &lt;code&gt;\N{}&lt;/code&gt; , and the other end is specified using a non-portable mechanism. Perl treats the range as a Unicode range, that is, all the characters in it are considered to be the Unicode characters, and which may be different code points on some platforms Perl runs on. For example, &lt;code&gt;[\N{U+06}-\x08]&lt;/code&gt; is treated as if you had instead said &lt;code&gt;[\N{U+06}-\N{U+08}]&lt;/code&gt; , that is it matches the characters whose code points in Unicode are 6, 7, and 8. But that &lt;code&gt;\x08&lt;/code&gt; might indicate that you meant something different, so the warning gets raised.</source>
          <target state="translated">En una clase de caracteres entre corchetes en un patr&amp;oacute;n de expresi&amp;oacute;n regular, ten&amp;iacute;a un rango que tiene exactamente un extremo especificado usando &lt;code&gt;\N{}&lt;/code&gt; , y el otro extremo se especifica usando un mecanismo no port&amp;aacute;til. Perl trata el rango como un rango Unicode, es decir, todos los caracteres que contiene se consideran caracteres Unicode y que pueden ser puntos de c&amp;oacute;digo diferentes en algunas plataformas en las que se ejecuta Perl. Por ejemplo, &lt;code&gt;[\N{U+06}-\x08]&lt;/code&gt; se trata como si en su lugar hubiera dicho &lt;code&gt;[\N{U+06}-\N{U+08}]&lt;/code&gt; , es decir, coincide con los caracteres cuyos puntos de c&amp;oacute;digo en Unicode son 6, 7 y 8. Pero ese &lt;code&gt;\x08&lt;/code&gt; podr&amp;iacute;a indicar que quer&amp;iacute;a decir algo diferente, por lo que se genera la advertencia.</target>
        </trans-unit>
        <trans-unit id="56b5f943e2723e6656ff71443d600b126557a979" translate="yes" xml:space="preserve">
          <source>In a bracketed character class in a regular expression pattern, you had a range which has exactly one end of it specified using &lt;code&gt;\N{}&lt;/code&gt;, and the other end is specified using a non-portable mechanism. Perl treats the range as a Unicode range, that is, all the characters in it are considered to be the Unicode characters, and which may be different code points on some platforms Perl runs on. For example, &lt;code&gt;[\N{U+06}-\x08]&lt;/code&gt; is treated as if you had instead said &lt;code&gt;[\N{U+06}-\N{U+08}]&lt;/code&gt;, that is it matches the characters whose code points in Unicode are 6, 7, and 8. But that &lt;code&gt;\x08&lt;/code&gt; might indicate that you meant something different, so the warning gets raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d73a68cf480ae509179c7a8fbc1f901fa2e9db" translate="yes" xml:space="preserve">
          <source>In a chained comparison, each argument expression is evaluated at most once, even if it takes part in two comparisons, but the result of the evaluation is fetched for each comparison. (It is not evaluated at all if the short-circuiting means that it's not required for any comparisons.) This matters if the computation of an interior argument is expensive or non-deterministic. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1004ce202059ee590c51b52b194413677ea17ca4" translate="yes" xml:space="preserve">
          <source>In a context not requiring a list value, the value of what appears to be a list literal is simply the value of the final element, as with the C comma operator. For example,</source>
          <target state="translated">En un contexto que no requiere un valor de lista,el valor de lo que parece ser un literal de lista es simplemente el valor del elemento final,como con el operador de la coma C.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="c0a278d73a0b72613c40dbe8d0193bd356d40954" translate="yes" xml:space="preserve">
          <source>In a first-hack implementation of Maketext, each language-module's lexicon looked like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9fb939bd1697123252f0ff4192d8603d7b42ba" translate="yes" xml:space="preserve">
          <source>In a future version of Storable, we intend to provide options to disable loading modules for classes and to disable deserializing objects altogether.</source>
          <target state="translated">En una futura versión de Storable,tenemos la intención de proporcionar opciones para deshabilitar los módulos de carga de las clases y para deshabilitar completamente la deserialización de los objetos.</target>
        </trans-unit>
        <trans-unit id="7f48268e7084e302cd8de3636cf3c45d91f67d83" translate="yes" xml:space="preserve">
          <source>In a list context it returns a list of all the operator names. (Not yet implemented, use @names = opset_to_ops(full_opset).)</source>
          <target state="translated">En el contexto de la lista,devuelve una lista de todos los nombres de los operadores.(Aún no implementado,use @names=opset_to_ops(full_opset).)</target>
        </trans-unit>
        <trans-unit id="b5d9986ae8bd12e0cac8222f9f5aeaf66d07a75b" translate="yes" xml:space="preserve">
          <source>In a list context it returns the inflation object, &lt;code&gt;$i&lt;/code&gt; , and the</source>
          <target state="translated">En un contexto de lista, devuelve el objeto de inflaci&amp;oacute;n, &lt;code&gt;$i&lt;/code&gt; , y el</target>
        </trans-unit>
        <trans-unit id="a2be3d9cfb3783d19a27056a4954efa7988e1874" translate="yes" xml:space="preserve">
          <source>In a list context it returns the inflation object, &lt;code&gt;$i&lt;/code&gt;, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145c4668502bd10d7409835c5418f6cbabe20a25" translate="yes" xml:space="preserve">
          <source>In a list context it returns the inflation stream, &lt;code&gt;$i&lt;/code&gt; , and the</source>
          <target state="translated">En un contexto de lista, devuelve el flujo de inflaci&amp;oacute;n, &lt;code&gt;$i&lt;/code&gt; , y el</target>
        </trans-unit>
        <trans-unit id="19840bfce1f7d4562308d36f49b5b530cfea492a" translate="yes" xml:space="preserve">
          <source>In a list context it returns the inflation stream, &lt;code&gt;$i&lt;/code&gt;, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf4f84fa82dd8ae218d529ba322249a8b367063" translate="yes" xml:space="preserve">
          <source>In a list context, &lt;code&gt;extract_quotelike&lt;/code&gt; would return the list</source>
          <target state="translated">En un contexto de lista, &lt;code&gt;extract_quotelike&lt;/code&gt; devolver&amp;iacute;a la lista</target>
        </trans-unit>
        <trans-unit id="7602890513e241f884402d4ec0723dbc5ab2f461" translate="yes" xml:space="preserve">
          <source>In a list context, all the functions return &lt;code&gt;(&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;,$original_text)&lt;/code&gt; on failure. In a scalar context, failure is indicated by returning &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (in this case the input text is not modified in any way).</source>
          <target state="translated">En un contexto de lista, todas las funciones devuelven &lt;code&gt;(&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;,$original_text)&lt;/code&gt; en caso de error. En un contexto escalar, la falla se indica devolviendo &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (en este caso, el texto de entrada no se modifica de ninguna manera).</target>
        </trans-unit>
        <trans-unit id="d4b6138bd9c8bc770c89fa1734f707bd100e5c6b" translate="yes" xml:space="preserve">
          <source>In a list context, all the functions return &lt;code&gt;(undef,$original_text)&lt;/code&gt; on failure. In a scalar context, failure is indicated by returning &lt;code&gt;undef&lt;/code&gt; (in this case the input text is not modified in any way).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a94ef45d6203b10b750123aea4390fcb5b00e20" translate="yes" xml:space="preserve">
          <source>In a list context, all the subroutines return a list, the first three elements of which are always:</source>
          <target state="translated">En el contexto de una lista,todas las subrutinas devuelven una lista,cuyos tres primeros elementos son siempre:</target>
        </trans-unit>
        <trans-unit id="f3d0f0be64532af27f8e2b721243720c0db92d9a" translate="yes" xml:space="preserve">
          <source>In a list context, an array of 11 elements is returned. The elements are:</source>
          <target state="translated">En un contexto de lista,se devuelve un conjunto de 11 elementos.Los elementos son:</target>
        </trans-unit>
        <trans-unit id="908708042ec2a982cddb96ed31208bb8910e08cf" translate="yes" xml:space="preserve">
          <source>In a nutshell, this will check whether the output code involves calling &lt;code&gt;sv_setiv&lt;/code&gt;, &lt;code&gt;sv_setuv&lt;/code&gt;, &lt;code&gt;sv_setnv&lt;/code&gt;, &lt;code&gt;sv_setpv&lt;/code&gt; or &lt;code&gt;sv_setpvn&lt;/code&gt; to set the special &lt;code&gt;$arg&lt;/code&gt; placeholder to a new value &lt;b&gt;AT THE END OF THE OUTPUT CODE&lt;/b&gt;. If that is the case, the code is eligible for using the &lt;code&gt;TARG&lt;/code&gt;-related macros to optimize this. Thus the name of the method: &lt;code&gt;targetable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3d6cbfb7caf07ade67b0cd6e1a9dc2096892c7" translate="yes" xml:space="preserve">
          <source>In a pinch, if you cannot wait for Configure to be educated, or if you have a good hunch of where quux() might be available, you can temporarily try the following:</source>
          <target state="translated">En un apuro,si no puedes esperar a que Configure se eduque,o si tienes una buena corazonada de dónde podría estar disponible quux(),puedes intentar temporalmente lo siguiente:</target>
        </trans-unit>
        <trans-unit id="8904deace3383be6f62627ad2fa40ed65a69d2bd" translate="yes" xml:space="preserve">
          <source>In a plain &lt;code&gt;eval&lt;/code&gt; without an EXPR argument, being in &lt;code&gt;use utf8&lt;/code&gt; or not is irrelevant; the UTF-8ness of &lt;code&gt;$_&lt;/code&gt; itself determines the behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8692c1987c2bd18d4696b2de38e79ce9a490834f" translate="yes" xml:space="preserve">
          <source>In a real situation, care should be taken that all threads are finished executing before the program exits. That care has &lt;b&gt;not&lt;/b&gt; been taken in these examples in the interest of simplicity. Running these examples</source>
          <target state="translated">En una situaci&amp;oacute;n real, se debe tener cuidado de que todos los subprocesos terminen de ejecutarse antes de que salga el programa. En estos ejemplos &lt;b&gt;no se&lt;/b&gt; ha tenido ese cuidado en aras de la simplicidad. Ejecutando estos ejemplos</target>
        </trans-unit>
        <trans-unit id="81c10dc0ae0ebb18c61b259ddfe6843d666964b7" translate="yes" xml:space="preserve">
          <source>In a reciprocal fashion, an operation provides either a scalar or a list context to each of its arguments. For example, if you say</source>
          <target state="translated">De manera recíproca,una operación proporciona un contexto escalonado o de lista a cada uno de sus argumentos.Por ejemplo,si se dice</target>
        </trans-unit>
        <trans-unit id="7ae53fee8d17396b84228f6cefecffeb87519079" translate="yes" xml:space="preserve">
          <source>In a regex set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78cf6df929776e529a74a77e45234f404202f1c" translate="yes" xml:space="preserve">
          <source>In a regular expression, the backslash can perform one of two tasks: it either takes away the special meaning of the character following it (for instance, &lt;code&gt;\|&lt;/code&gt; matches a vertical bar, it's not an alternation), or it is the start of a backslash or escape sequence.</source>
          <target state="translated">En una expresi&amp;oacute;n regular, la barra invertida puede realizar una de dos tareas: quita el significado especial del car&amp;aacute;cter que la sigue (por ejemplo, &lt;code&gt;\|&lt;/code&gt; coincide con una barra vertical, no es una alternancia), o es el comienzo de una barra invertida o secuencia de escape.</target>
        </trans-unit>
        <trans-unit id="81b5d9cd571e9943815277ab89c7fe545d260e8a" translate="yes" xml:space="preserve">
          <source>In a scalar context &lt;code&gt;deflate&lt;/code&gt; will return &lt;code&gt;$out&lt;/code&gt; only.</source>
          <target state="translated">En un contexto escalar, &lt;code&gt;deflate&lt;/code&gt; devolver&amp;aacute; &lt;code&gt;$out&lt;/code&gt; solamente.</target>
        </trans-unit>
        <trans-unit id="d751225aea131e8c18607565afa032c5caedabd6" translate="yes" xml:space="preserve">
          <source>In a scalar context &lt;code&gt;flush&lt;/code&gt; will return &lt;code&gt;$out&lt;/code&gt; only.</source>
          <target state="translated">En un contexto escalar, &lt;code&gt;flush&lt;/code&gt; devolver&amp;aacute; &lt;code&gt;$out&lt;/code&gt; solamente.</target>
        </trans-unit>
        <trans-unit id="24a49c87bdb8b460c4017296f34ddb336c87c832" translate="yes" xml:space="preserve">
          <source>In a scalar context it returns the group name.</source>
          <target state="translated">En un contexto escalar devuelve el nombre del grupo.</target>
        </trans-unit>
        <trans-unit id="32d6c6f3bf39438d4047ce657137dce5d3577d7c" translate="yes" xml:space="preserve">
          <source>In a scalar context opcodes returns the number of opcodes in this version of perl (around 350 for perl-5.7.0).</source>
          <target state="translated">En un contexto escalar opcodes devuelve el número de opcodes en esta versión de perl (alrededor de 350 para perl-5.7.0).</target>
        </trans-unit>
        <trans-unit id="208f6e20787f24b907ff451f1741888a45d23759" translate="yes" xml:space="preserve">
          <source>In a scalar context the method returns the number of values associated with the key, &lt;code&gt;$key&lt;/code&gt; .</source>
          <target state="translated">En un contexto escalar, el m&amp;eacute;todo devuelve el n&amp;uacute;mero de valores asociados con la clave, &lt;code&gt;$key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9df32f544b32017f1a687d3dc29e952bea935c6" translate="yes" xml:space="preserve">
          <source>In a scalar context the method returns the number of values associated with the key, &lt;code&gt;$key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432d105e0c68a882f3e01defe90d20d01d0c26a5" translate="yes" xml:space="preserve">
          <source>In a scalar context the new socket is returned, or &lt;code&gt;undef&lt;/code&gt; upon failure. In a list context a two-element array is returned containing the new socket and the peer address; the list will be empty upon failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec0bad3cd5e75ede69094662ac02e11b4300440" translate="yes" xml:space="preserve">
          <source>In a scalar context the new socket is returned, or undef upon failure. In a list context a two-element array is returned containing the new socket and the peer address; the list will be empty upon failure.</source>
          <target state="translated">En un contexto escalar el nuevo enchufe se devuelve,o undef al fallar.En un contexto de lista,se devuelve una matriz de dos elementos que contiene el nuevo zócalo y la dirección del par;la lista estará vacía cuando se produzca un fallo.</target>
        </trans-unit>
        <trans-unit id="92d1e3370613f74b8985a6b3b39b4a2c46223d16" translate="yes" xml:space="preserve">
          <source>In a scalar context, &lt;code&gt;extract_quotelike&lt;/code&gt; returns just the complete substring that matched a quotelike operation (or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure). In a scalar or void context, the input text has the same substring (and any specified prefix) removed.</source>
          <target state="translated">En un contexto escalar, &lt;code&gt;extract_quotelike&lt;/code&gt; devuelve solo la subcadena completa que coincidi&amp;oacute; con una operaci&amp;oacute;n de tipo quotel (o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso de falla). En un contexto escalar o nulo, el texto de entrada tiene la misma subcadena (y cualquier prefijo especificado) eliminado.</target>
        </trans-unit>
        <trans-unit id="cb043da2c0d1ddbcbe23b4dfa1c70dc8d30d93aa" translate="yes" xml:space="preserve">
          <source>In a scalar context, &lt;code&gt;extract_quotelike&lt;/code&gt; returns just the complete substring that matched a quotelike operation (or &lt;code&gt;undef&lt;/code&gt; on failure). In a scalar or void context, the input text has the same substring (and any specified prefix) removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b8dc86dc00a1f2952c9a2e48c451d832e4c066" translate="yes" xml:space="preserve">
          <source>In a scalar context, &lt;code&gt;extract_tagged&lt;/code&gt; returns just the complete substring that matched a tagged text (including the start and end tags). &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned on failure. In addition, the original input text has the returned substring (and any prefix) removed from it.</source>
          <target state="translated">En un contexto escalar, &lt;code&gt;extract_tagged&lt;/code&gt; devuelve solo la subcadena completa que coincide con un texto etiquetado (incluidas las etiquetas de inicio y finalizaci&amp;oacute;n). &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devuelve en caso de error. Adem&amp;aacute;s, el texto de entrada original tiene la subcadena devuelta (y cualquier prefijo) eliminada.</target>
        </trans-unit>
        <trans-unit id="58e1b2c9f41d6622189dffef6c6b3c984f3970a5" translate="yes" xml:space="preserve">
          <source>In a scalar context, &lt;code&gt;extract_tagged&lt;/code&gt; returns just the complete substring that matched a tagged text (including the start and end tags). &lt;code&gt;undef&lt;/code&gt; is returned on failure. In addition, the original input text has the returned substring (and any prefix) removed from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9900a2af209760381e75d8f7a14615b5a9bdbec" translate="yes" xml:space="preserve">
          <source>In a scalar context, &lt;code&gt;extract_variable&lt;/code&gt; returns just the complete substring that matched a variablish expression. &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned on failure. In addition, the original input text has the returned substring (and any prefix) removed from it.</source>
          <target state="translated">En un contexto escalar, &lt;code&gt;extract_variable&lt;/code&gt; devuelve solo la subcadena completa que coincide con una expresi&amp;oacute;n de variablish. &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devuelve en caso de error. Adem&amp;aacute;s, el texto de entrada original tiene la subcadena devuelta (y cualquier prefijo) eliminada.</target>
        </trans-unit>
        <trans-unit id="29022909d0ff04a63844f8132ef7f7171aee73fe" translate="yes" xml:space="preserve">
          <source>In a scalar context, &lt;code&gt;extract_variable&lt;/code&gt; returns just the complete substring that matched a variablish expression. &lt;code&gt;undef&lt;/code&gt; is returned on failure. In addition, the original input text has the returned substring (and any prefix) removed from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945278245cb407350f6bc45cb3b502fc5ad85d58" translate="yes" xml:space="preserve">
          <source>In a scalar context, just the extracted substring is returned. In a void context, the extracted substring (and any prefix) are simply removed from the beginning of the first argument.</source>
          <target state="translated">En un contexto escalar,sólo se devuelve la subcadena extraída.En un contexto de vacío,la subcadena extraída (y cualquier prefijo)simplemente se eliminan del principio del primer argumento.</target>
        </trans-unit>
        <trans-unit id="7e3e24a2a724494140e588e3803a95e574330808" translate="yes" xml:space="preserve">
          <source>In a scalar context, the extracted string is returned, having first been removed from the input text. Thus, the following code also processes each quote-like operation, but actually removes them from $text:</source>
          <target state="translated">En un contexto escalar,la cadena extraída es devuelta,habiendo sido primero eliminada del texto de entrada.Por lo tanto,el siguiente código también procesa cada operación de tipo cita,pero en realidad las elimina del texto $:</target>
        </trans-unit>
        <trans-unit id="0d5544cfc850136e8726fbbd9c72234c9b7ae747" translate="yes" xml:space="preserve">
          <source>In a sense, perl (the C program) is a good example of embedding Perl (the language), so I'll demonstrate embedding with</source>
          <target state="translated">En cierto sentido,el perl (el programa C)es un buen ejemplo de incrustación de Perl (el lenguaje),así que demostraré la incrustación con</target>
        </trans-unit>
        <trans-unit id="ff595beb69ecf8f38b6337a9d03b24a9b262246c" translate="yes" xml:space="preserve">
          <source>In a similar fashion, overriding the &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; function also overrides the equivalent I/O operator &lt;code&gt;&amp;lt;FILEHANDLE&amp;gt;&lt;/code&gt; . Also, overriding &lt;code&gt;&lt;a href=&quot;functions/readpipe&quot;&gt;readpipe&lt;/a&gt;&lt;/code&gt; also overrides the operators &lt;code&gt;``&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">De manera similar, la anulaci&amp;oacute;n de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n anula el operador de E / S equivalente &lt;code&gt;&amp;lt;FILEHANDLE&amp;gt;&lt;/code&gt; . Adem&amp;aacute;s, anular &lt;code&gt;&lt;a href=&quot;functions/readpipe&quot;&gt;readpipe&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n anula los operadores &lt;code&gt;``&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7df5882938822589a5bd41ee1d3ff81d5d0fe68" translate="yes" xml:space="preserve">
          <source>In a similar fashion, overriding the &lt;code&gt;readline&lt;/code&gt; function also overrides the equivalent I/O operator &lt;code&gt;&amp;lt;FILEHANDLE&amp;gt;&lt;/code&gt;. Also, overriding &lt;code&gt;readpipe&lt;/code&gt; also overrides the operators &lt;code&gt;``&lt;/code&gt; and &lt;code&gt;qx//&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d250c896d3f5eb11d7a648b3bc78f5925e2fcce" translate="yes" xml:space="preserve">
          <source>In a void context the behaviour of the extraction subroutines is exactly the same as in a scalar context, except (of course) that the extracted substring is not returned.</source>
          <target state="translated">En un contexto de vacío,el comportamiento de las subrutinas de extracción es exactamente el mismo que en un contexto escalar,excepto (por supuesto)que la subcadena extraída no se devuelve.</target>
        </trans-unit>
        <trans-unit id="164ac7c993944f12e7319a81a34bfbc9042d71d4" translate="yes" xml:space="preserve">
          <source>In a void context, the input text just has the matched substring (and any specified prefix) removed.</source>
          <target state="translated">En un contexto de vacío,el texto de entrada sólo tiene la subcadena coincidente (y cualquier prefijo especificado)eliminada.</target>
        </trans-unit>
        <trans-unit id="a9b13f420194df675e5068f5af3ab2ba48ac53e8" translate="yes" xml:space="preserve">
          <source>In a word - don't, at least not without a *very* good reason. Your scripts can just as easily begin with &quot;#!/usr/local/bin/perl&quot; as with &quot;#!/usr/bin/perl&quot;. Scripts supplied by Apple and other third parties as part of installation packages and such have generally only been tested with the /usr/bin/perl that's installed by Apple.</source>
          <target state="translated">En una palabra,no lo hagas,al menos no sin una muy buena razón.Sus guiones pueden comenzar tan fácilmente con &quot;#!/usr/local/bin/perl&quot; como con &quot;#!/usr/bin/perl&quot;.Los scripts suministrados por Apple y otros terceros como parte de los paquetes de instalación y tales generalmente sólo han sido probados con el /usr/bin/perl que es instalado por Apple.</target>
        </trans-unit>
        <trans-unit id="fcf1ea0b348743b5d23b285ecea8c108896961cc" translate="yes" xml:space="preserve">
          <source>In academia, a curriculum vit&amp;aelig;, a fancy kind of r&amp;eacute;sum&amp;eacute;. In Perl, an internal &amp;ldquo;code value&amp;rdquo; typedef holding a &lt;b&gt;subroutine&lt;/b&gt;. The &lt;code&gt;CV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">En la academia, un curriculum vitae, una especie de curr&amp;iacute;culum elegante. En Perl, un &quot;valor de c&amp;oacute;digo&quot; interno typedef que contiene una &lt;b&gt;subrutina&lt;/b&gt; . El tipo &lt;code&gt;CV&lt;/code&gt; es una subclase de &lt;b&gt;SV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b2f52867b2f837c43cc5640194de947dbf1e2090" translate="yes" xml:space="preserve">
          <source>In actuality, the period and &lt;code&gt;\d\s\w\D\S\W&lt;/code&gt; abbreviations are themselves types of character classes, so the ones surrounded by brackets are just one type of character class. When we need to make a distinction, we refer to them as &quot;bracketed character classes.&quot;</source>
          <target state="translated">En realidad, el punto y las abreviaturas &lt;code&gt;\d\s\w\D\S\W&lt;/code&gt; son en s&amp;iacute; mismos tipos de clases de caracteres, por lo que los que est&amp;aacute;n entre corchetes son solo un tipo de clase de caracteres. Cuando necesitamos hacer una distinci&amp;oacute;n, nos referimos a ellos como &quot;clases de caracteres entre corchetes&quot;.</target>
        </trans-unit>
        <trans-unit id="46e3a38016d86ba7214b26757c2cfc95f05dd8d8" translate="yes" xml:space="preserve">
          <source>In addition</source>
          <target state="translated">Además...</target>
        </trans-unit>
        <trans-unit id="7e82af699df6da7e07e9ea8a98307994127655f1" translate="yes" xml:space="preserve">
          <source>In addition EXTEND will be called when perl would have pre-extended allocation in a real array.</source>
          <target state="translated">Además,se llamará EXTENDER cuando Perl tenga una asignación pre-extendida en una matriz real.</target>
        </trans-unit>
        <trans-unit id="ed2d1a9f24dc62aaee4efacb9df22dbcc5333d73" translate="yes" xml:space="preserve">
          <source>In addition it contains two fields that are intended for the private use of the regex engine that compiled the pattern. These are the &lt;code&gt;intflags&lt;/code&gt; and &lt;code&gt;pprivate&lt;/code&gt; members. &lt;code&gt;pprivate&lt;/code&gt; is a void pointer to an arbitrary structure, whose use and management is the responsibility of the compiling engine. Perl will never modify either of these values.</source>
          <target state="translated">Adem&amp;aacute;s, contiene dos campos que est&amp;aacute;n destinados al uso privado del motor de expresiones regulares que compil&amp;oacute; el patr&amp;oacute;n. Estos son los miembros &lt;code&gt;intflags&lt;/code&gt; y &lt;code&gt;pprivate&lt;/code&gt; . &lt;code&gt;pprivate&lt;/code&gt; es un puntero vac&amp;iacute;o a una estructura arbitraria, cuyo uso y gesti&amp;oacute;n es responsabilidad del motor de compilaci&amp;oacute;n. Perl nunca modificar&amp;aacute; ninguno de estos valores.</target>
        </trans-unit>
        <trans-unit id="7aa9ca3525844fd7a1f1f038ab777e0241661c46" translate="yes" xml:space="preserve">
          <source>In addition it contains two fields that are intended for the private use of the regex engine that compiled the pattern. These are the &lt;code&gt;intflags&lt;/code&gt; and pprivate members. The &lt;code&gt;pprivate&lt;/code&gt; is a void pointer to an arbitrary structure whose use and management is the responsibility of the compiling engine. perl will never modify either of these values.</source>
          <target state="translated">Adem&amp;aacute;s, contiene dos campos que est&amp;aacute;n destinados al uso privado del motor de expresiones regulares que compil&amp;oacute; el patr&amp;oacute;n. Estos son los miembros &lt;code&gt;intflags&lt;/code&gt; y pprivate. El &lt;code&gt;pprivate&lt;/code&gt; es un puntero nulo a una estructura arbitraria cuyo uso y manejo es responsabilidad del motor de compilaci&amp;oacute;n. perl nunca modificar&amp;aacute; ninguno de estos valores.</target>
        </trans-unit>
        <trans-unit id="152b5f495da9efbec00e14f0ef1bc85e80c4a061" translate="yes" xml:space="preserve">
          <source>In addition to &lt;b&gt;scripts&lt;/b&gt;, Unicode also defines &lt;b&gt;blocks&lt;/b&gt; of characters. The difference between scripts and blocks is that the concept of scripts is closer to natural languages, while the concept of blocks is more of an artificial grouping based on groups of Unicode characters with consecutive ordinal values. For example, the &lt;code&gt;&quot;Basic Latin&quot;&lt;/code&gt; block is all the characters whose ordinals are between 0 and 127, inclusive; in other words, the ASCII characters. The &lt;code&gt;&quot;Latin&quot;&lt;/code&gt; script contains some letters from this as well as several other blocks, like &lt;code&gt;&quot;Latin-1 Supplement&quot;&lt;/code&gt; , &lt;code&gt;&quot;Latin Extended-A&quot;&lt;/code&gt; ,</source>
          <target state="translated">Adem&amp;aacute;s de los &lt;b&gt;scripts&lt;/b&gt; , Unicode tambi&amp;eacute;n define &lt;b&gt;bloques&lt;/b&gt; de caracteres. La diferencia entre scripts y bloques es que el concepto de scripts est&amp;aacute; m&amp;aacute;s cerca de los lenguajes naturales, mientras que el concepto de bloques es m&amp;aacute;s una agrupaci&amp;oacute;n artificial basada en grupos de caracteres Unicode con valores ordinales consecutivos. Por ejemplo, el bloque &lt;code&gt;&quot;Basic Latin&quot;&lt;/code&gt; son todos los caracteres cuyos ordinales est&amp;aacute;n entre 0 y 127, inclusive; en otras palabras, los caracteres ASCII. La escritura &lt;code&gt;&quot;Latin&quot;&lt;/code&gt; contiene algunas letras de este, as&amp;iacute; como varios otros bloques, como &lt;code&gt;&quot;Latin-1 Supplement&quot;&lt;/code&gt; , &lt;code&gt;&quot;Latin Extended-A&quot;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="7f09088f954a7db82a8b57fd467bd7775553888e" translate="yes" xml:space="preserve">
          <source>In addition to &lt;b&gt;scripts&lt;/b&gt;, Unicode also defines &lt;b&gt;blocks&lt;/b&gt; of characters. The difference between scripts and blocks is that the concept of scripts is closer to natural languages, while the concept of blocks is more of an artificial grouping based on groups of Unicode characters with consecutive ordinal values. For example, the &lt;code&gt;&quot;Basic Latin&quot;&lt;/code&gt; block is all the characters whose ordinals are between 0 and 127, inclusive; in other words, the ASCII characters. The &lt;code&gt;&quot;Latin&quot;&lt;/code&gt; script contains some letters from this as well as several other blocks, like &lt;code&gt;&quot;Latin-1 Supplement&quot;&lt;/code&gt;, &lt;code&gt;&quot;Latin Extended-A&quot;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1471fd86b05121c975247d3ecf108832020f99" translate="yes" xml:space="preserve">
          <source>In addition to accepting the &lt;code&gt;collect_pod&lt;/code&gt; and &lt;code&gt;decode_pod&lt;/code&gt; arguments as described above, this method accepts a &lt;code&gt;inc&lt;/code&gt; argument which is a reference to an array of directories to search for the module. If none are given, the default is @INC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86a4eaf10c727caafeb64d3a643f53ff65e9454" translate="yes" xml:space="preserve">
          <source>In addition to adding seconds, there are two APIs for adding months and years:</source>
          <target state="translated">Además de sumar segundos,hay dos API para sumar meses y años:</target>
        </trans-unit>
        <trans-unit id="b2fd5a60f4cdde51801210d2d64a0096f9f11eee" translate="yes" xml:space="preserve">
          <source>In addition to an editor/IDE you might be interested in a more powerful shell environment for Win32. Your options include</source>
          <target state="translated">Además de un editor/IDE puede que te interese un entorno de shell más potente para Win32.Tus opciones incluyen</target>
        </trans-unit>
        <trans-unit id="00eb917cf5efd07f43486b691141200c354a7e24" translate="yes" xml:space="preserve">
          <source>In addition to arranging for various Encode aliases the following functions and variables are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1749590c161975b92597e609a16d593c1ab667da" translate="yes" xml:space="preserve">
          <source>In addition to being Unix, we're U/WIN.</source>
          <target state="translated">Además de ser Unix,somos U/WIN.</target>
        </trans-unit>
        <trans-unit id="59ad52f794c0c2f95e95db00a5db4b0758359fc7" translate="yes" xml:space="preserve">
          <source>In addition to computing what you expected, the last example also does &lt;b&gt;not&lt;/b&gt; &quot;taint&quot; the result with an accuracy or precision setting, which would influence any further operation.</source>
          <target state="translated">Adem&amp;aacute;s de calcular lo que se esperaba, el &amp;uacute;ltimo ejemplo tambi&amp;eacute;n hace &lt;b&gt;no&lt;/b&gt; &quot;mancha&quot; el resultado con un ajuste de precisi&amp;oacute;n o de precisi&amp;oacute;n, lo que influir&amp;iacute;a en cualquier otra operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="28f0a444647c3ca604a27ded60bf62b43ff7e031" translate="yes" xml:space="preserve">
          <source>In addition to fields allowed in &lt;a href=&quot;#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt;, you may prefix a field with a %&amp;lt;number&amp;gt; to indicate that you want a &amp;lt;number&amp;gt;-bit checksum of the items instead of the items themselves. Default is a 16-bit checksum. The checksum is calculated by summing numeric values of expanded values (for string fields the sum of &lt;code&gt;ord($char)&lt;/code&gt; is taken; for bit fields the sum of zeroes and ones).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2d9c47551f30ac79ac4fb8a4a7835684b54313" translate="yes" xml:space="preserve">
          <source>In addition to fields allowed in pack(), you may prefix a field with a %&amp;lt;number&amp;gt; to indicate that you want a &amp;lt;number&amp;gt;-bit checksum of the items instead of the items themselves. Default is a 16-bit checksum. Checksum is calculated by summing numeric values of expanded values (for string fields the sum of &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)&lt;/a&gt;&lt;/code&gt; is taken; for bit fields the sum of zeroes and ones).</source>
          <target state="translated">Adem&amp;aacute;s de los campos permitidos en pack (), puede prefijar un campo con% &amp;lt;n&amp;uacute;mero&amp;gt; para indicar que desea una suma de comprobaci&amp;oacute;n de &amp;lt;n&amp;uacute;mero&amp;gt; bits de los elementos en lugar de los elementos en s&amp;iacute;. El valor predeterminado es una suma de comprobaci&amp;oacute;n de 16 bits. La suma de comprobaci&amp;oacute;n se calcula sumando valores num&amp;eacute;ricos de valores expandidos (para los campos de cadena, se toma la suma de &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)&lt;/a&gt;&lt;/code&gt; ; para los campos de bits, la suma de ceros y unos).</target>
        </trans-unit>
        <trans-unit id="8fab1ee4cfb63b6e2e7d76c7cfd5888f6ab2e679" translate="yes" xml:space="preserve">
          <source>In addition to fields allowed in pack(), you may prefix a field with a %&amp;lt;number&amp;gt; to indicate that you want a &amp;lt;number&amp;gt;-bit checksum of the items instead of the items themselves. Default is a 16-bit checksum. Checksum is calculated by summing numeric values of expanded values (for string fields the sum of &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)&lt;/a&gt;&lt;/code&gt; is taken; for bit fields the sum of zeroes and ones).</source>
          <target state="translated">Adem&amp;aacute;s de los campos permitidos en pack (), puede prefijar un campo con% &amp;lt;n&amp;uacute;mero&amp;gt; para indicar que desea una suma de comprobaci&amp;oacute;n de &amp;lt;n&amp;uacute;mero&amp;gt; bits de los elementos en lugar de los elementos en s&amp;iacute;. El valor predeterminado es una suma de comprobaci&amp;oacute;n de 16 bits. La suma de comprobaci&amp;oacute;n se calcula sumando valores num&amp;eacute;ricos de valores expandidos (para los campos de cadena, se toma la suma de &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)&lt;/a&gt;&lt;/code&gt; ; para los campos de bits, la suma de ceros y unos).</target>
        </trans-unit>
        <trans-unit id="11a4b3be42c1bc1c34ed610faa54c6750890304a" translate="yes" xml:space="preserve">
          <source>In addition to interacting with the &lt;code&gt;(*SKIP)&lt;/code&gt; pattern, &lt;code&gt;(*MARK:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt; can be used to &quot;label&quot; a pattern branch, so that after matching, the program can determine which branches of the pattern were involved in the match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ec63aed202427c78ae99bf79365c2b0344aea9" translate="yes" xml:space="preserve">
          <source>In addition to interacting with the &lt;code&gt;(*SKIP)&lt;/code&gt; pattern, &lt;code&gt;(*MARK:NAME)&lt;/code&gt; can be used to &quot;label&quot; a pattern branch, so that after matching, the program can determine which branches of the pattern were involved in the match.</source>
          <target state="translated">Adem&amp;aacute;s de interactuar con el patr&amp;oacute;n &lt;code&gt;(*SKIP)&lt;/code&gt; , &lt;code&gt;(*MARK:NAME)&lt;/code&gt; se puede usar para &quot;etiquetar&quot; una rama del patr&amp;oacute;n, de modo que despu&amp;eacute;s de la coincidencia, el programa puede determinar qu&amp;eacute; ramas del patr&amp;oacute;n estaban involucradas en la coincidencia.</target>
        </trans-unit>
        <trans-unit id="cea68ca5519ffc8129501826ad0bb9062eef1e64" translate="yes" xml:space="preserve">
          <source>In addition to possible bugs and an inability to follow changes to the translation policy with off/on switches of TERMIO translation, this introduces a serious incompatible change: before sysread() on text-mode filehandles would go through the translation layer, now it would not.</source>
          <target state="translated">Además de los posibles errores y la incapacidad de seguir los cambios en la política de traducción con interruptores de apagado/encendido de la traducción de TERMIO,esto introduce un serio cambio incompatible:antes de que sysread()en el manejo de archivos en modo texto pasara por la capa de traducción,ahora no lo haría.</target>
        </trans-unit>
        <trans-unit id="d4d69cf9bd1e25a37f285dc63efc29fb797f0fe0" translate="yes" xml:space="preserve">
          <source>In addition to standard-like API defined so far above there is an &quot;implementation&quot; interface which allows perl to get at internals of PerlIO. The following calls correspond to the various FILE_xxx macros determined by Configure - or their equivalent in other implementations. This section is really of interest to only those concerned with detailed perl-core behaviour, implementing a PerlIO mapping or writing code which can make use of the &quot;read ahead&quot; that has been done by the IO system in the same way perl does. Note that any code that uses these interfaces must be prepared to do things the traditional way if a handle does not support them.</source>
          <target state="translated">Además de la API estándar definida hasta ahora,existe una interfaz de &quot;implementación&quot; que permite al perl llegar al interior de PerlIO.Las siguientes llamadas corresponden a las diversas macros FILE_xxx determinadas por Configure-o su equivalente en otras implementaciones.Esta sección es realmente de interés sólo para aquellos que se preocupan por el comportamiento detallado del núcleo de perl,implementando un mapeo de PerlIO o escribiendo código que pueda hacer uso del &quot;read ahead&quot; que ha sido hecho por el sistema IO de la misma manera que lo hace perl.Tenga en cuenta que cualquier código que utilice estas interfaces debe estar preparado para hacer las cosas de la manera tradicional si un mango no las soporta.</target>
        </trans-unit>
        <trans-unit id="c328df560ff213b6d17abffac103ff94284e681e" translate="yes" xml:space="preserve">
          <source>In addition to the MEDIUM security checks, also check for the possibility of ``chown() giveaway'' using the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; sysconf() function. If this is a possibility, each directory in the path is checked in turn for safeness, recursively walking back to the root directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eaea3931a67cb37ce8cb0cb3c4e8d09398b8c0" translate="yes" xml:space="preserve">
          <source>In addition to the MEDIUM security checks, also check for the possibility of ``chown() giveaway'' using the L</source>
          <target state="translated">Además de los controles de seguridad MEDIUM,compruebe también la posibilidad de ``chown()giveaway'' usando la L</target>
        </trans-unit>
        <trans-unit id="89182cb06f6668d208e0619e4cbe15cde7591879" translate="yes" xml:space="preserve">
          <source>In addition to the OVERLOAD keyword, if you need to control how Perl autogenerates missing overloaded operators, you can set the FALLBACK keyword in the module header section, like this:</source>
          <target state="translated">Además de la palabra clave SOBRECARGA,si necesitas controlar cómo Perl autogenera los operadores sobrecargados que faltan,puedes establecer la palabra clave RETROCESO en la sección de cabecera del módulo,así:</target>
        </trans-unit>
        <trans-unit id="cf43e38422f03f19f7c8bc12dfe3cf7238322b4f" translate="yes" xml:space="preserve">
          <source>In addition to the STANDARD security, the output directory is checked to make sure that it is owned either by root or the user running the program. If the directory is writable by group or by other, it is then checked to make sure that the sticky bit is set.</source>
          <target state="translated">Además de la seguridad ESTÁNDAR,se comprueba el directorio de salida para asegurarse de que es propiedad de la raíz o del usuario que ejecuta el programa.Si el directorio es escribible por grupo o por otro,entonces se comprueba para asegurarse de que el bit pegajoso está puesto.</target>
        </trans-unit>
        <trans-unit id="a6827bb11452b38549da194a0e9f946e676fb6ab" translate="yes" xml:space="preserve">
          <source>In addition to the compiler flags used to select the SDK, also add the flags for creating a universal binary:</source>
          <target state="translated">Además de las banderas del compilador utilizadas para seleccionar el SDK,también agregue las banderas para crear un binario universal:</target>
        </trans-unit>
        <trans-unit id="73c76010fe3f7536529c60cd357cfa7c8e4a0b21" translate="yes" xml:space="preserve">
          <source>In addition to the different levels of OS involvement in threads, different OSes (and different thread implementations for a particular OS) allocate CPU cycles to threads in different ways.</source>
          <target state="translated">Además de los diferentes niveles de implicación del SO en los hilos,los diferentes SO (y las diferentes implementaciones de hilos para un SO en particular)asignan ciclos de CPU a los hilos de diferentes maneras.</target>
        </trans-unit>
        <trans-unit id="79a96fb0aa6c1ca892c14d42638abd6240d03e9c" translate="yes" xml:space="preserve">
          <source>In addition to the file and subroutine-related variables mentioned above, the debugger also maintains various magical internal variables.</source>
          <target state="translated">Además de las variables relacionadas con los archivos y las subrutinas mencionadas anteriormente,el depurador también mantiene varias variables internas mágicas.</target>
        </trans-unit>
        <trans-unit id="bab0de29db31c89ae8ab9839888cf6f1bf406c03" translate="yes" xml:space="preserve">
          <source>In addition to the key-value pairs accepted by &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt;, &lt;code&gt;IO::Socket::INET&lt;/code&gt; provides.</source>
          <target state="translated">Adem&amp;aacute;s de los pares clave-valor aceptados por &lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt; , &lt;code&gt;IO::Socket::INET&lt;/code&gt; proporciona.</target>
        </trans-unit>
        <trans-unit id="7a72b31c557cda8bc1b722b2e6a26c2c901af09d" translate="yes" xml:space="preserve">
          <source>In addition to the key-value pairs accepted by &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt;, &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; provides.</source>
          <target state="translated">Adem&amp;aacute;s de los pares clave-valor aceptados por &lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt; , &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; proporciona.</target>
        </trans-unit>
        <trans-unit id="2c8512896a52a4b21163cc6634b2cdd39a0ba342" translate="yes" xml:space="preserve">
          <source>In addition to the key-value pairs accepted by &lt;a href=&quot;IO::Socket&quot;&gt;IO::Socket&lt;/a&gt;, &lt;code&gt;IO::Socket::INET&lt;/code&gt; provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27e58eddb584a8c9586d7873c892baa74f4f56d" translate="yes" xml:space="preserve">
          <source>In addition to the key-value pairs accepted by &lt;a href=&quot;IO::Socket&quot;&gt;IO::Socket&lt;/a&gt;, &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c45e877ad35106ffbe7de68a1cdc70a047e523f" translate="yes" xml:space="preserve">
          <source>In addition to the metacharacters, there are some ASCII characters which don't have printable character equivalents and are instead represented by</source>
          <target state="translated">Además de los metacaracteres,hay algunos caracteres ASCII que no tienen equivalentes de caracteres imprimibles y en su lugar están representados por</target>
        </trans-unit>
        <trans-unit id="08676326b07558d72976a15d2e5ea67b5354d4ab" translate="yes" xml:space="preserve">
          <source>In addition to the perl API described above, a C API is available for extension writers. The following C functions are available in the modglobal hash:</source>
          <target state="translated">Además de la API de perl descrita anteriormente,existe una API de C para los escritores de extensiones.Las siguientes funciones C están disponibles en el hash modglobal:</target>
        </trans-unit>
        <trans-unit id="ef88c015cd90a62555639afdea15aa945900339f" translate="yes" xml:space="preserve">
          <source>In addition to the quote delimiters &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, and &lt;code&gt;`&lt;/code&gt;, full Perl quote-like quoting (i.e. q{string}, qq{string}, etc) can be specified by including the letter 'q' as a delimiter. Hence:</source>
          <target state="translated">Adem&amp;aacute;s de los delimitadores cita &lt;code&gt;'&lt;/code&gt; , &lt;code&gt;&quot;&lt;/code&gt; y &lt;code&gt;`&lt;/code&gt; , lleno Perl cita-como citando (es decir, q {cadena}, qq {cadena}, etc) se puede especificar mediante la inclusi&amp;oacute;n de la letra 'q' como un delimitador de ah&amp;iacute;.:</target>
        </trans-unit>
        <trans-unit id="3ee26c7c2937194436d9d08c9a82ea42e06abcd1" translate="yes" xml:space="preserve">
          <source>In addition to the six exported functions there exists one function that can only be accessed with a fully qualified function call.</source>
          <target state="translated">Además de las seis funciones exportadas existe una función a la que sólo se puede acceder con una llamada de función totalmente cualificada.</target>
        </trans-unit>
        <trans-unit id="048f808ac9289a4a6c87dcb85ac0e60ea7b3a024" translate="yes" xml:space="preserve">
          <source>In addition to the tie() interface, it is also possible to access most of the functions provided in the Berkeley DB API directly. See &lt;a href=&quot;#THE-API-INTERFACE&quot;&gt;&quot;THE API INTERFACE&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd0fd0dfb0a01af1b34dd0a74cf43897f0a81ea" translate="yes" xml:space="preserve">
          <source>In addition to the tie() interface, it is also possible to access most of the functions provided in the Berkeley DB API directly. See &lt;a href=&quot;#THE-API-INTERFACE&quot;&gt;THE API INTERFACE&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de la interfaz tie (), tambi&amp;eacute;n es posible acceder directamente a la mayor&amp;iacute;a de las funciones proporcionadas en la API de Berkeley DB. Consulte &lt;a href=&quot;#THE-API-INTERFACE&quot;&gt;LA INTERFAZ API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85ce3c1d378a3aef7a0dc077cfad69336b01172a" translate="yes" xml:space="preserve">
          <source>In addition to the traditional Perl default MRO (depth first search, called &lt;code&gt;DFS&lt;/code&gt; here), Perl now offers the C3 MRO as well. Perl's support for C3 is based on the work done in Stevan Little's module &lt;a href=&quot;Class::C3&quot;&gt;Class::C3&lt;/a&gt;, and most of the C3-related documentation here is ripped directly from there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b1ffa79f559c5952d0b2eca922c0eb1fe018a7" translate="yes" xml:space="preserve">
          <source>In addition to the traditional Perl default MRO (depth first search, called &lt;code&gt;DFS&lt;/code&gt; here), Perl now offers the C3 MRO as well. Perl's support for C3 is based on the work done in Stevan Little's module &lt;a href=&quot;http://search.cpan.org/perldoc/Class::C3&quot;&gt;Class::C3&lt;/a&gt;, and most of the C3-related documentation here is ripped directly from there.</source>
          <target state="translated">Adem&amp;aacute;s del tradicional MRO predeterminado de Perl (b&amp;uacute;squeda en profundidad primero, llamado aqu&amp;iacute; &lt;code&gt;DFS&lt;/code&gt; ), Perl ahora tambi&amp;eacute;n ofrece el C3 MRO. El soporte de Perl para C3 se basa en el trabajo realizado en el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Class::C3&quot;&gt;Class :: C3 de&lt;/a&gt; Stevan Little , y la mayor parte de la documentaci&amp;oacute;n relacionada con C3 aqu&amp;iacute; se extrae directamente desde all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="8eca212407dc344e58d9927ac55df67e502679ba" translate="yes" xml:space="preserve">
          <source>In addition to the two arrays that form the inversion map, &lt;code&gt;prop_invmap&lt;/code&gt; returns two other values; one is a scalar that gives some details as to the format of the entries of the map array; the other is a default value, useful in maps whose format name begins with the letter &lt;code&gt;&quot;a&quot;&lt;/code&gt; , as described &lt;a href=&quot;#a&quot;&gt;below in its subsection&lt;/a&gt;; and for specialized purposes, such as converting to another data structure, described at the end of this main section.</source>
          <target state="translated">Adem&amp;aacute;s de las dos matrices que forman el mapa de inversi&amp;oacute;n, &lt;code&gt;prop_invmap&lt;/code&gt; devuelve otros dos valores; uno es un escalar que da algunos detalles sobre el formato de las entradas de la matriz de mapas; el otro es un valor predeterminado, &amp;uacute;til en mapas cuyo nombre de formato comienza con la letra &lt;code&gt;&quot;a&quot;&lt;/code&gt; , como se describe a &lt;a href=&quot;#a&quot;&gt;continuaci&amp;oacute;n en su subsecci&amp;oacute;n&lt;/a&gt; ; y para fines especializados, como la conversi&amp;oacute;n a otra estructura de datos, que se describe al final de esta secci&amp;oacute;n principal.</target>
        </trans-unit>
        <trans-unit id="a95287c02690513e66aa164f6a62d254e29970f0" translate="yes" xml:space="preserve">
          <source>In addition to the two arrays that form the inversion map, &lt;code&gt;prop_invmap&lt;/code&gt; returns two other values; one is a scalar that gives some details as to the format of the entries of the map array; the other is a default value, useful in maps whose format name begins with the letter &lt;code&gt;&quot;a&quot;&lt;/code&gt;, as described &lt;a href=&quot;#a&quot;&gt;below in its subsection&lt;/a&gt;; and for specialized purposes, such as converting to another data structure, described at the end of this main section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5681bb6c22a6fc5f25fa9d9c98d1119dc3e69d9b" translate="yes" xml:space="preserve">
          <source>In addition to the version objects, this modules also replaces the core UNIVERSAL::VERSION function with one that uses version objects for its comparisons. The return from this operator is always the stringified form as a simple scalar (i.e. not an object), but the warning message generated includes either the stringified form or the normal form, depending on how it was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab2897e25695e7867181ff90ba23794c8c60c0d" translate="yes" xml:space="preserve">
          <source>In addition to using the &lt;code&gt;\p{Blk=...}&lt;/code&gt; and &lt;code&gt;\P{Blk=...}&lt;/code&gt; constructs, you can also test whether a code point is in the</source>
          <target state="translated">Adem&amp;aacute;s de usar las construcciones &lt;code&gt;\p{Blk=...}&lt;/code&gt; y &lt;code&gt;\P{Blk=...}&lt;/code&gt; , tambi&amp;eacute;n puede probar si un punto de c&amp;oacute;digo est&amp;aacute; en el</target>
        </trans-unit>
        <trans-unit id="dac7bc321eb3333dc44a14f1d9acf1fbd74fd29b" translate="yes" xml:space="preserve">
          <source>In addition to what was matched, Perl also provides the positions of what was matched as contents of the &lt;code&gt;@-&lt;/code&gt; and &lt;code&gt;@+&lt;/code&gt; arrays. &lt;code&gt;$-[0]&lt;/code&gt; is the position of the start of the entire match and &lt;code&gt;$+[0]&lt;/code&gt; is the position of the end. Similarly, &lt;code&gt;$-[n]&lt;/code&gt; is the position of the start of the &lt;code&gt;$n&lt;/code&gt; match and &lt;code&gt;$+[n]&lt;/code&gt; is the position of the end. If &lt;code&gt;$n&lt;/code&gt; is undefined, so are &lt;code&gt;$-[n]&lt;/code&gt; and &lt;code&gt;$+[n]&lt;/code&gt; . Then this code</source>
          <target state="translated">Adem&amp;aacute;s de lo que se compar&amp;oacute;, Perl tambi&amp;eacute;n proporciona las posiciones de lo que se compar&amp;oacute; como contenido de las matrices &lt;code&gt;@-&lt;/code&gt; y &lt;code&gt;@+&lt;/code&gt; . &lt;code&gt;$-[0]&lt;/code&gt; es la posici&amp;oacute;n del inicio de todo el partido y &lt;code&gt;$+[0]&lt;/code&gt; es la posici&amp;oacute;n del final. De manera similar, &lt;code&gt;$-[n]&lt;/code&gt; es la posici&amp;oacute;n del inicio de la coincidencia &lt;code&gt;$n&lt;/code&gt; y &lt;code&gt;$+[n]&lt;/code&gt; es la posici&amp;oacute;n del final. Si &lt;code&gt;$n&lt;/code&gt; no est&amp;aacute; definido, tambi&amp;eacute;n lo son &lt;code&gt;$-[n]&lt;/code&gt; y &lt;code&gt;$+[n]&lt;/code&gt; . Entonces este c&amp;oacute;digo</target>
        </trans-unit>
        <trans-unit id="ccbfdb924619efe15959974a161721499fe098ee" translate="yes" xml:space="preserve">
          <source>In addition to what was matched, Perl also provides the positions of what was matched as contents of the &lt;code&gt;@-&lt;/code&gt; and &lt;code&gt;@+&lt;/code&gt; arrays. &lt;code&gt;$-[0]&lt;/code&gt; is the position of the start of the entire match and &lt;code&gt;$+[0]&lt;/code&gt; is the position of the end. Similarly, &lt;code&gt;$-[n]&lt;/code&gt; is the position of the start of the &lt;code&gt;$n&lt;/code&gt; match and &lt;code&gt;$+[n]&lt;/code&gt; is the position of the end. If &lt;code&gt;$n&lt;/code&gt; is undefined, so are &lt;code&gt;$-[n]&lt;/code&gt; and &lt;code&gt;$+[n]&lt;/code&gt;. Then this code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7741b40dbd2e708ac5c5d3ad7fd7389004debdeb" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;GetFileAttributes&lt;/code&gt; can return these constants (or INVALID_FILE_ATTRIBUTES in case of an error).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340df59f8245bd9d352756a2f3fe84ca2ba2b14a" translate="yes" xml:space="preserve">
          <source>In addition, Perl defines the following:</source>
          <target state="translated">Además,Perl define lo siguiente:</target>
        </trans-unit>
        <trans-unit id="7b18dfd70f7fb70cb969c8b7231702490b8ef572" translate="yes" xml:space="preserve">
          <source>In addition, Perl permits the following widely-supported conversions:</source>
          <target state="translated">Además,el Perl permite las siguientes conversiones ampliamente apoyadas:</target>
        </trans-unit>
        <trans-unit id="58a30b45039ea55ccfbff7c03b534706dd5f4a4e" translate="yes" xml:space="preserve">
          <source>In addition, a second package variable (&lt;code&gt;@Filter::Simple::components&lt;/code&gt; ) contains a list of the various pieces of &lt;code&gt;$_&lt;/code&gt; , as they were originally split up to allow placeholders to be inserted.</source>
          <target state="translated">Adem&amp;aacute;s, una segunda variable de paquete ( &lt;code&gt;@Filter::Simple::components&lt;/code&gt; ) contiene una lista de las distintas partes de &lt;code&gt;$_&lt;/code&gt; , ya que originalmente se dividieron para permitir la inserci&amp;oacute;n de marcadores de posici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b0ff23c18253f069733b435a5b431ccd9634d8e2" translate="yes" xml:space="preserve">
          <source>In addition, a second package variable (&lt;code&gt;@Filter::Simple::components&lt;/code&gt;) contains a list of the various pieces of &lt;code&gt;$_&lt;/code&gt;, as they were originally split up to allow placeholders to be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b824cddab0454f6fa746f5f5efb2df055e6a062" translate="yes" xml:space="preserve">
          <source>In addition, an attempt is made to recognize several common Unix library names, and filter them out or convert them to their VMS equivalents, as appropriate.</source>
          <target state="translated">Además,se procura reconocer varios nombres comunes de bibliotecas de Unix y filtrarlos o convertirlos a sus equivalentes de VMS,según proceda.</target>
        </trans-unit>
        <trans-unit id="20f0764c130ac7b7bb4ff76a14f2a6cf3a71b811" translate="yes" xml:space="preserve">
          <source>In addition, if &lt;code&gt;$input_filename_or_reference&lt;/code&gt; is a simple filename, the default values for the &lt;code&gt;Name&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; , &lt;code&gt;TextFlag&lt;/code&gt; , &lt;code&gt;ExtAttr&lt;/code&gt; , &lt;code&gt;exUnixN&lt;/code&gt; and &lt;code&gt;exTime&lt;/code&gt; options will be sourced from that file.</source>
          <target state="translated">Adem&amp;aacute;s, si &lt;code&gt;$input_filename_or_reference&lt;/code&gt; es un nombre de archivo simple, los valores predeterminados para las opciones &lt;code&gt;Name&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; , &lt;code&gt;TextFlag&lt;/code&gt; , &lt;code&gt;ExtAttr&lt;/code&gt; , &lt;code&gt;exUnixN&lt;/code&gt; y &lt;code&gt;exTime&lt;/code&gt; se obtendr&amp;aacute;n de ese archivo.</target>
        </trans-unit>
        <trans-unit id="bdc3e8410e98f27c3f135fcd34c0e133beddff18" translate="yes" xml:space="preserve">
          <source>In addition, if &lt;code&gt;$input_filename_or_reference&lt;/code&gt; is a simple filename, the default values for the &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Time&lt;/code&gt; options will be sourced from that file.</source>
          <target state="translated">Adem&amp;aacute;s, si &lt;code&gt;$input_filename_or_reference&lt;/code&gt; es un nombre de archivo simple, los valores predeterminados para las opciones de &lt;code&gt;Name&lt;/code&gt; y &lt;code&gt;Time&lt;/code&gt; obtendr&amp;aacute;n de ese archivo.</target>
        </trans-unit>
        <trans-unit id="d0ae1b4a0292104ef4e7dc7c425220d101005db4" translate="yes" xml:space="preserve">
          <source>In addition, if &lt;code&gt;$input_filename_or_reference&lt;/code&gt; is a simple filename, the default values for the &lt;code&gt;Name&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;TextFlag&lt;/code&gt;, &lt;code&gt;ExtAttr&lt;/code&gt;, &lt;code&gt;exUnixN&lt;/code&gt; and &lt;code&gt;exTime&lt;/code&gt; options will be sourced from that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ed0a2f179c5ac2d45e1e913820f71e61b32911" translate="yes" xml:space="preserve">
          <source>In addition, if the input file/buffer does contain compressed data and there is non-compressed data immediately following it, setting this option will make this module treat the whole file/buffer as a single data stream.</source>
          <target state="translated">Además,si el archivo/bufete de entrada contiene datos comprimidos y hay datos no comprimidos inmediatamente después de él,la configuración de esta opción hará que este módulo trate todo el archivo/bufete como un único flujo de datos.</target>
        </trans-unit>
        <trans-unit id="a03250cf8d36596835773013a7ed159131abe9f9" translate="yes" xml:space="preserve">
          <source>In addition, on failure in</source>
          <target state="translated">Además,al fallar en</target>
        </trans-unit>
        <trans-unit id="1d296f66c5968bb02c723c76da82a489ff4f8824" translate="yes" xml:space="preserve">
          <source>In addition, other &lt;a href=&quot;Getopt::Long&quot;&gt;Getopt::Long&lt;/a&gt; error messages may result from invalid command-line options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289227a7d3ba6bcbce57645ed49463f1d7e46764" translate="yes" xml:space="preserve">
          <source>In addition, other &lt;a href=&quot;getopt/long&quot;&gt;Getopt::Long&lt;/a&gt; error messages may result from invalid command-line options.</source>
          <target state="translated">Adem&amp;aacute;s, otros mensajes de error de &lt;a href=&quot;getopt/long&quot;&gt;Getopt :: Long&lt;/a&gt; pueden resultar de opciones de l&amp;iacute;nea de comandos no v&amp;aacute;lidas.</target>
        </trans-unit>
        <trans-unit id="147a39b11e58c10277c6a279d8224a769b9bb498" translate="yes" xml:space="preserve">
          <source>In addition, output may be piped to a subprocess, using the character '|'. Anything after this character on the command line is passed to a subprocess for execution; the subprocess takes the output of Perl as its input.</source>
          <target state="translated">Además,la salida puede ser canalizada a un subproceso,usando el carácter '|'.Cualquier cosa después de este carácter en la línea de comandos se pasa a un subproceso para su ejecución;el subproceso toma la salida de Perl como su entrada.</target>
        </trans-unit>
        <trans-unit id="99121fa175239d30527a66db54352aec9e7f4845" translate="yes" xml:space="preserve">
          <source>In addition, plenty of code in the wild does all of its OO &quot;by hand&quot;, using just the Perl built-in OO features. If you need to maintain such code, you should read &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; to understand exactly how Perl's built-in OO works.</source>
          <target state="translated">Adem&amp;aacute;s, una gran cantidad de c&amp;oacute;digo en la naturaleza hace todo su OO &quot;a mano&quot;, utilizando solo las funciones OO integradas de Perl. Si necesita mantener dicho c&amp;oacute;digo, debe leer &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; para comprender exactamente c&amp;oacute;mo funciona el OO integrado de Perl.</target>
        </trans-unit>
        <trans-unit id="df2c5f9f6d74347865f1b7d8c718b9166dce24c6" translate="yes" xml:space="preserve">
          <source>In addition, subroutines are named with an initial '&amp;amp;', though this is optional when unambiguous, just as the word &quot;do&quot; is often redundant in English. Symbol table entries can be named with an initial '*', but you don't really care about that yet (if ever :-).</source>
          <target state="translated">Adem&amp;aacute;s, las subrutinas se nombran con una '&amp;amp;' inicial, aunque esto es opcional cuando no es ambiguo, al igual que la palabra &quot;do&quot; suele ser redundante en ingl&amp;eacute;s. Las entradas de la tabla de s&amp;iacute;mbolos se pueden nombrar con un '*' inicial, pero eso realmente no te importa todav&amp;iacute;a (si es que alguna vez :-).</target>
        </trans-unit>
        <trans-unit id="e4639b7e9ac66cd60ee8c3525c4580bbed98b234" translate="yes" xml:space="preserve">
          <source>In addition, the generated &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; subroutine passes its own argument list to the filtering subroutine, so the BANG.pm filter could easily be made parametric:</source>
          <target state="translated">Adem&amp;aacute;s, la subrutina de &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n generada pasa su propia lista de argumentos a la subrutina de filtrado, por lo que el filtro BANG.pm podr&amp;iacute;a convertirse f&amp;aacute;cilmente en param&amp;eacute;trico:</target>
        </trans-unit>
        <trans-unit id="804038d4a839a29500af9574b5756d8de10f044f" translate="yes" xml:space="preserve">
          <source>In addition, the generated &lt;code&gt;import&lt;/code&gt; subroutine passes its own argument list to the filtering subroutine, so the BANG.pm filter could easily be made parametric:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9370bc00f7d65fe78c300f43b36130879db13c63" translate="yes" xml:space="preserve">
          <source>In addition, the new IO system can also be configured to read/write UTF-8 encoded characters (as noted above, this is efficient):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e36eb4b4d16be01e13411f12c4f853328d8d124" translate="yes" xml:space="preserve">
          <source>In addition, the returned value will be unique within the context of the Pod::Simple::XHTML object unless a second argument is passed a true value. ID attributes should always be unique within a single XHTML document, but pass the true value if you are creating not an ID but a URL hash to point to an ID (i.e., if you need to put the &quot;#foo&quot; in &lt;code&gt;&amp;lt;a href=&quot;#foo&quot;&amp;gt;foo&amp;lt;/a&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, el valor devuelto ser&amp;aacute; &amp;uacute;nico dentro del contexto del objeto Pod :: Simple :: XHTML a menos que se pase un segundo argumento como un valor verdadero. Los atributos de ID siempre deben ser &amp;uacute;nicos dentro de un solo documento XHTML, pero transfieren el valor verdadero si no est&amp;aacute; creando una ID sino un hash de URL para apuntar a una ID (es decir, si necesita poner el &quot;#foo&quot; en &lt;code&gt;&amp;lt;a href=&quot;#foo&quot;&amp;gt;foo&amp;lt;/a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0edea48e0434c59597ceff4d726d410f442fce" translate="yes" xml:space="preserve">
          <source>In addition, when ldopts is called with parameters, it will return the argument string rather than print it to STDOUT.</source>
          <target state="translated">Además,cuando se llama a ldopts con parámetros,devolverá la cadena de argumentos en lugar de imprimirla a STDOUT.</target>
        </trans-unit>
        <trans-unit id="3769f70780de829d878e1b8185000692b19a1f05" translate="yes" xml:space="preserve">
          <source>In addition, you must define a &lt;code&gt;AUTODIE_HINTS&lt;/code&gt; subroutine that returns a hash-reference containing the hints for your subroutines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe8a6e2911b84e5bf182d375e70d71ebf4dcde5" translate="yes" xml:space="preserve">
          <source>In all Perl versions you can use &lt;code&gt;as_number()&lt;/code&gt; or &lt;code&gt;as_int&lt;/code&gt; for the same effect:</source>
          <target state="translated">En todas las versiones de Perl puede usar &lt;code&gt;as_number()&lt;/code&gt; o &lt;code&gt;as_int&lt;/code&gt; para el mismo efecto:</target>
        </trans-unit>
        <trans-unit id="9a826c545f2fecb5bd50e173dbd7f3d696f12f03" translate="yes" xml:space="preserve">
          <source>In all Perl versions, &lt;code&gt;\s&lt;/code&gt; matches the 5 characters [\t\n\f\r ]; that is, the horizontal tab, the newline, the form feed, the carriage return, and the space. Starting in Perl v5.18, it also matches the vertical tab, &lt;code&gt;\cK&lt;/code&gt; . See note &lt;code&gt;[1]&lt;/code&gt; below for a discussion of this.</source>
          <target state="translated">En todas las versiones de Perl, &lt;code&gt;\s&lt;/code&gt; coincide con los 5 caracteres [\ t \ n \ f \ r]; es decir, la pesta&amp;ntilde;a horizontal, la nueva l&amp;iacute;nea, el avance de p&amp;aacute;gina, el retorno de carro y el espacio. A partir de Perl v5.18, tambi&amp;eacute;n coincide con la pesta&amp;ntilde;a vertical, &lt;code&gt;\cK&lt;/code&gt; . Vea la nota &lt;code&gt;[1]&lt;/code&gt; a continuaci&amp;oacute;n para una discusi&amp;oacute;n de esto.</target>
        </trans-unit>
        <trans-unit id="c841b634904e3955229cb8026fd88108b68b251d" translate="yes" xml:space="preserve">
          <source>In all Perl versions, &lt;code&gt;\s&lt;/code&gt; matches the 5 characters [\t\n\f\r ]; that is, the horizontal tab, the newline, the form feed, the carriage return, and the space. Starting in Perl v5.18, it also matches the vertical tab, &lt;code&gt;\cK&lt;/code&gt;. See note &lt;code&gt;[1]&lt;/code&gt; below for a discussion of this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781b45f1e32e901ab32d784bb9ee31c8ef4d8da4" translate="yes" xml:space="preserve">
          <source>In all but the most memory-paranoid configurations (ex: PURIFY), heads and bodies are allocated out of arenas, which by default are approximately 4K chunks of memory parcelled up into N heads or bodies. Sv-bodies are allocated by their sv-type, guaranteeing size consistency needed to allocate safely from arrays.</source>
          <target state="translated">En todas las configuraciones,excepto en las más paranoicas de memoria (por ejemplo:PURIFY),las cabezas y los cuerpos se asignan fuera de las arenas,que por defecto son aproximadamente trozos de 4K de memoria parcelados en N cabezas o cuerpos.Los cuerpos de Sv se asignan por su tipo de Sv,lo que garantiza la coherencia de tamaño necesaria para asignarlos de forma segura desde las matrices.</target>
        </trans-unit>
        <trans-unit id="82cf0166b1026f5214dc5e9dee6752fb9c70f2f9" translate="yes" xml:space="preserve">
          <source>In all cases shown above, the line indentation shows the call tree. If bit 2 of &lt;code&gt;frame&lt;/code&gt; is set, a line is printed on exit from a subroutine as well. If bit 4 is set, the arguments are printed along with the caller info. If bit 8 is set, the arguments are printed even if they are tied or references. If bit 16 is set, the return value is printed, too.</source>
          <target state="translated">En todos los casos mostrados arriba, la l&amp;iacute;nea de sangr&amp;iacute;a muestra el &amp;aacute;rbol de llamadas. Si se establece el bit 2 de la &lt;code&gt;frame&lt;/code&gt; , tambi&amp;eacute;n se imprime una l&amp;iacute;nea al salir de una subrutina. Si se establece el bit 4, los argumentos se imprimen junto con la informaci&amp;oacute;n de la persona que llama. Si se establece el bit 8, los argumentos se imprimen incluso si est&amp;aacute;n vinculados o son referencias. Si se establece el bit 16, tambi&amp;eacute;n se imprime el valor de retorno.</target>
        </trans-unit>
        <trans-unit id="6061ee2ae8dec0f2b671e0d3e14bae7a6b818d83" translate="yes" xml:space="preserve">
          <source>In all cases where the very common phenomenon of quantification (saying &quot;</source>
          <target state="translated">En todos los casos en los que el fenómeno muy común de la cuantificación (diciendo &quot;</target>
        </trans-unit>
        <trans-unit id="e3c2c7f74b86dde15a7c489ee7be1789b4697e9f" translate="yes" xml:space="preserve">
          <source>In all dealings with contributed modules, everyone maintaining Perl should keep in mind that the code belongs to the original author, that they may not be on perl5-porters at any given time, and that a patch is not official unless it has been integrated into the author's copy of the module. To aid with this, and with points #1, #2, and #3 above, contact information for the authors of all contributed modules should be kept with the Perl distribution.</source>
          <target state="translated">En todos los tratos con los módulos contribuidos,todo aquel que mantenga Perl debe tener en cuenta que el código pertenece al autor original,que no pueden estar en los portales de perl5 en un momento dado,y que un parche no es oficial a menos que se haya integrado en la copia del módulo del autor.Para ayudar con esto,y con los puntos #1,#2 y #3 anteriores,la información de contacto de los autores de todos los módulos contribuidos debe mantenerse con la distribución de Perl.</target>
        </trans-unit>
        <trans-unit id="9f633a9cd1f1e79fef8f8eaa0a6cfd15cedc67ef" translate="yes" xml:space="preserve">
          <source>In all of the above cases, option values may be inserted in the bundle. For example:</source>
          <target state="translated">En todos los casos anteriores,los valores de las opciones pueden insertarse en el paquete.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2383a8bd7489fcdd2f83ac67cbbc873796c97eb5" translate="yes" xml:space="preserve">
          <source>In all operations on %ENV, the key string is treated as if it were entirely uppercase, regardless of the case actually specified in the Perl expression.</source>
          <target state="translated">En todas las operaciones en %ENV,la cadena de claves se trata como si fuera totalmente en mayúsculas,independientemente del caso realmente especificado en la expresión de Perl.</target>
        </trans-unit>
        <trans-unit id="95b3792cd6f5e2af35835ac883e0e6a53f125114" translate="yes" xml:space="preserve">
          <source>In all the above examples, &lt;code&gt;minus()&lt;/code&gt; is required only to return the result of the subtraction: Perl takes care of the assignment to $x. In fact, such methods should</source>
          <target state="translated">En todos los ejemplos anteriores, se requiere &lt;code&gt;minus()&lt;/code&gt; solo para devolver el resultado de la resta: Perl se encarga de la asignaci&amp;oacute;n a $ x. De hecho, tales m&amp;eacute;todos deber&amp;iacute;an</target>
        </trans-unit>
        <trans-unit id="62e6398632ccd73e2b501ee72778e7e043a2eb59" translate="yes" xml:space="preserve">
          <source>In all the previous examples I have 'hard-wired' the name of the Perl subroutine to be called from C. Most of the time though, it is more convenient to be able to specify the name of the Perl subroutine from within the Perl script, and you'll want to use &lt;a href=&quot;perlapi#call_sv&quot;&gt;call_sv&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f2c173d7ed4e9aee1d1f9fb64f4d9f9b0ea2fe" translate="yes" xml:space="preserve">
          <source>In all the previous examples I have 'hard-wired' the name of the Perl subroutine to be called from C. Most of the time though, it is more convenient to be able to specify the name of the Perl subroutine from within the Perl script.</source>
          <target state="translated">En todos los ejemplos anteriores he &quot;conectado&quot; el nombre de la subrutina Perl para que se llame desde C.La mayoría de las veces,sin embargo,es más conveniente poder especificar el nombre de la subrutina Perl desde dentro del script Perl.</target>
        </trans-unit>
        <trans-unit id="ff04c34f746275001332ffb6b05f235dced368be" translate="yes" xml:space="preserve">
          <source>In all these calls, the &lt;code&gt;U32 w&lt;i&gt;n&lt;/i&gt;&lt;/code&gt; parameters are warning category constants. You can see the ones currently available in &lt;a href=&quot;warnings#Category-Hierarchy&quot;&gt;&quot;Category Hierarchy&quot; in warnings&lt;/a&gt;, just capitalize all letters in the names and prefix them by &lt;code&gt;WARN_&lt;/code&gt;. So, for example, the category &lt;code&gt;void&lt;/code&gt; used in a perl program becomes &lt;code&gt;WARN_VOID&lt;/code&gt; when used in XS code and passed to one of the calls below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaae17ed6f36eac3220705015e0ea930013f7c8e" translate="yes" xml:space="preserve">
          <source>In all these cases, the user can override this stubborn behaviour by prepending the command with the word force, for example:</source>
          <target state="translated">En todos estos casos,el usuario puede anular este comportamiento obstinado preparando el comando con la palabra fuerza,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4cbe02d68ddbd502acef7d9e9916746fae4beca6" translate="yes" xml:space="preserve">
          <source>In almost all cases like this, it's usually a far, far better idea to use the structured control flow mechanisms of &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; instead of resorting to a &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;. For certain applications, the catch and throw pair of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; and die() for exception processing can also be a prudent approach.</source>
          <target state="translated">En casi todos los casos como este, suele ser una idea mucho mejor utilizar los mecanismos de flujo de control estructurado de &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; lugar de recurrir a un &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; . Para ciertas aplicaciones, el par catch y throw de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; y die () para el procesamiento de excepciones tambi&amp;eacute;n puede ser un enfoque prudente.</target>
        </trans-unit>
        <trans-unit id="bcd7916d5198052c029284d36ab0810a786fae19" translate="yes" xml:space="preserve">
          <source>In almost all cases like this, it's usually a far, far better idea to use the structured control flow mechanisms of &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, or &lt;code&gt;redo&lt;/code&gt; instead of resorting to a &lt;code&gt;goto&lt;/code&gt;. For certain applications, the catch and throw pair of &lt;code&gt;eval{}&lt;/code&gt; and die() for exception processing can also be a prudent approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf0558a3828c482ff92b5a9786f51b397db3041" translate="yes" xml:space="preserve">
          <source>In an array context &lt;code&gt;extract_multiple&lt;/code&gt; returns an array of substrings of the original string, as extracted by the specified extractors. In a scalar context, &lt;code&gt;extract_multiple&lt;/code&gt; returns the first substring successfully extracted from the original string. In both scalar and void contexts the original string has the first successfully extracted substring removed from it. In all contexts &lt;code&gt;extract_multiple&lt;/code&gt; starts at the current &lt;code&gt;&lt;a href=&quot;../functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; of the string, and sets that &lt;code&gt;&lt;a href=&quot;../functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; appropriately after it matches.</source>
          <target state="translated">En un contexto de matriz, &lt;code&gt;extract_multiple&lt;/code&gt; devuelve una matriz de subcadenas de la cadena original, extra&amp;iacute;da por los extractores especificados. En un contexto escalar, &lt;code&gt;extract_multiple&lt;/code&gt; devuelve la primera subcadena extra&amp;iacute;da con &amp;eacute;xito de la cadena original. Tanto en contextos escalares como vac&amp;iacute;os, la cadena original tiene la primera subcadena extra&amp;iacute;da con &amp;eacute;xito eliminada. En todos los contextos &lt;code&gt;extract_multiple&lt;/code&gt; se inicia en la actual &lt;code&gt;&lt;a href=&quot;../functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; ici&amp;oacute;n de la cadena, y los conjuntos que &lt;code&gt;&lt;a href=&quot;../functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; apropiadamente despu&amp;eacute;s de que partidos.</target>
        </trans-unit>
        <trans-unit id="64f4703d98a2bbd61fb2abe591377e6cc1a8eae4" translate="yes" xml:space="preserve">
          <source>In an array context &lt;code&gt;extract_multiple&lt;/code&gt; returns an array of substrings of the original string, as extracted by the specified extractors. In a scalar context, &lt;code&gt;extract_multiple&lt;/code&gt; returns the first substring successfully extracted from the original string. In both scalar and void contexts the original string has the first successfully extracted substring removed from it. In all contexts &lt;code&gt;extract_multiple&lt;/code&gt; starts at the current &lt;code&gt;pos&lt;/code&gt; of the string, and sets that &lt;code&gt;pos&lt;/code&gt; appropriately after it matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf045366670deb82562441b69ea96760a43c736" translate="yes" xml:space="preserve">
          <source>In an array context the return value is a list containing, the number of articles in the group, the number of the first article, the number of the last article and the group name.</source>
          <target state="translated">En el contexto de una matriz,el valor de retorno es una lista que contiene el número de artículos del grupo,el número del primer artículo,el número del último artículo y el nombre del grupo.</target>
        </trans-unit>
        <trans-unit id="5a5982cddd4d8975197c2744da1608d9e4548d41" translate="yes" xml:space="preserve">
          <source>In an array context, returns a list of lines returned from the server. In a scalar context, returns a reference to a list.</source>
          <target state="translated">En el contexto de un array,devuelve una lista de líneas devueltas por el servidor.En un contexto escalar,devuelve una referencia a una lista.</target>
        </trans-unit>
        <trans-unit id="c41a798a42099e75be11d7d0369af1bc79b214a4" translate="yes" xml:space="preserve">
          <source>In an interpolated literal, whether a double-quoted string or a regex, you may specify a character by its number using the &lt;code&gt;\x{&lt;i&gt;HHHHHH&lt;/i&gt;}&lt;/code&gt; escape.</source>
          <target state="translated">En un literal interpolado, ya sea una cadena entre comillas dobles o una expresi&amp;oacute;n regular, puede especificar un car&amp;aacute;cter por su n&amp;uacute;mero usando el escape &lt;code&gt;\x{&lt;i&gt;HHHHHH&lt;/i&gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4918ab5fdbd686e859250551837a7ee9a52207eb" translate="yes" xml:space="preserve">
          <source>In ancient times, Unix was also used to refer to some code that a couple of people at Bell Labs wrote to make use of a PDP-7 computer that wasn&amp;rsquo;t doing much of anything else at the time.</source>
          <target state="translated">En la antig&amp;uuml;edad, Unix tambi&amp;eacute;n se usaba para referirse a un c&amp;oacute;digo que un par de personas en Bell Labs escribieron para hacer uso de una computadora PDP-7 que no estaba haciendo mucho m&amp;aacute;s en ese momento.</target>
        </trans-unit>
        <trans-unit id="d17b1ed4f6399a33863173b63d7cf4eeef9ce1db" translate="yes" xml:space="preserve">
          <source>In any case do not expect nanosecond resolution, or even a microsecond resolution. Also note that the modify/access timestamps might have different resolutions, and that they need not be synchronized, e.g. if the operations are</source>
          <target state="translated">En cualquier caso no esperen una resolución de nanosegundos,ni siquiera de microsegundos.Tenga en cuenta también que las marcas de tiempo de modificación/acceso pueden tener resoluciones diferentes,y que no es necesario que estén sincronizadas,por ejemplo,si las operaciones son</target>
        </trans-unit>
        <trans-unit id="a2ea48b73fadf70f92647ed4cbbc7d19e3016b8b" translate="yes" xml:space="preserve">
          <source>In any case you will be prompted with the correct invocation of the &lt;code&gt;inst_perl&lt;/code&gt; target that installs the new binary into INSTALLBIN.</source>
          <target state="translated">En cualquier caso, se le pedir&amp;aacute; la invocaci&amp;oacute;n correcta del destino &lt;code&gt;inst_perl&lt;/code&gt; que instala el nuevo binario en INSTALLBIN.</target>
        </trans-unit>
        <trans-unit id="416ebb085a2d5e940040c711d2f8d1e17ddebb19" translate="yes" xml:space="preserve">
          <source>In any way, if you're seeing failures beyond those mentioned in this document, please consider upgrading to the latest Hurd before reporting the failure as a bug.</source>
          <target state="translated">De cualquier manera,si está viendo fallos más allá de los mencionados en este documento,por favor considere actualizarse al último Hurd antes de reportar el fallo como un error.</target>
        </trans-unit>
        <trans-unit id="86069d4fc266f927b18d767a1cba7026af51c3e5" translate="yes" xml:space="preserve">
          <source>In array context returns a two-element array with the seconds and microseconds since the epoch. In scalar context returns floating seconds like &lt;code&gt;Time::HiRes::time()&lt;/code&gt; (see below).</source>
          <target state="translated">En el contexto de la matriz, devuelve una matriz de dos elementos con los segundos y microsegundos desde la &amp;eacute;poca. En contexto escalar, devuelve segundos flotantes como &lt;code&gt;Time::HiRes::time()&lt;/code&gt; (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="16582d55b272e81d53e1e61c0aba11a653333faf" translate="yes" xml:space="preserve">
          <source>In between two &lt;b&gt;subscripts&lt;/b&gt;, the arrow is optional.</source>
          <target state="translated">Entre dos &lt;b&gt;sub&amp;iacute;ndices&lt;/b&gt; , la flecha es opcional.</target>
        </trans-unit>
        <trans-unit id="e15bc0bc69692882714387f5e16ad85b014d51b1" translate="yes" xml:space="preserve">
          <source>In block mode, &lt;code&gt;filter_read&lt;/code&gt; will append a block of data which is &amp;lt;= &lt;code&gt;$size&lt;/code&gt; to the end of the &lt;code&gt;$_&lt;/code&gt; scalar. It is important to emphasise the that &lt;code&gt;filter_read&lt;/code&gt; will not necessarily read a block which is</source>
          <target state="translated">En el modo de bloque, &lt;code&gt;filter_read&lt;/code&gt; agregar&amp;aacute; un bloque de datos que es &amp;lt;= &lt;code&gt;$size&lt;/code&gt; al final del &lt;code&gt;$_&lt;/code&gt; escalar. Es importante enfatizar que &lt;code&gt;filter_read&lt;/code&gt; no necesariamente leer&amp;aacute; un bloque que es</target>
        </trans-unit>
        <trans-unit id="86311b9447535cd22a0807e557574828944f0087" translate="yes" xml:space="preserve">
          <source>In bootstrapping situations it is usually sufficient to translate only a few YAML files to Data::Dumper for crucial modules like &lt;code&gt;YAML::Syck&lt;/code&gt; , &lt;code&gt;YAML.pm&lt;/code&gt; and &lt;code&gt;Expect.pm&lt;/code&gt; . If you prefer Storable over Data::Dumper, remember to pull out a Storable version that writes an older format than all the other Storable versions that will need to read them.</source>
          <target state="translated">En situaciones de arranque, generalmente es suficiente traducir solo unos pocos archivos YAML a Data :: Dumper para m&amp;oacute;dulos cruciales como &lt;code&gt;YAML::Syck&lt;/code&gt; , &lt;code&gt;YAML.pm&lt;/code&gt; y &lt;code&gt;Expect.pm&lt;/code&gt; . Si prefiere Storable sobre Data :: Dumper, recuerde sacar una versi&amp;oacute;n Storable que escriba un formato m&amp;aacute;s antiguo que todas las otras versiones Storable que necesitar&amp;aacute;n leerlas.</target>
        </trans-unit>
        <trans-unit id="193c5d594ac73cc20a544832d2468fc8181bf983" translate="yes" xml:space="preserve">
          <source>In both cases events are generated and stored in an array. This array is eventually used to populate the &lt;code&gt;subevents&lt;/code&gt; attribute on the &lt;a href=&quot;Test2::Event::Subtest&quot;&gt;Test2::Event::Subtest&lt;/a&gt; event that is generated at the end of the subtest. This flag has no effect on this part, it always happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d32bdf3cfc0bcbd8616099443aea4c2f02bae5f" translate="yes" xml:space="preserve">
          <source>In both cases this should only be considered to be a temporary measure - you should upgrade to the later version of perl as soon as is practicable.</source>
          <target state="translated">En ambos casos,esto sólo debe considerarse como una medida temporal:hay que pasar a la versión posterior de perl tan pronto como sea posible.</target>
        </trans-unit>
        <trans-unit id="d2a841147fc72cc4482e0a7e84067a22e8db15fe" translate="yes" xml:space="preserve">
          <source>In both cases, if you want access to the original, unaltered routine, use the &lt;code&gt;CORE::&lt;/code&gt; prefix:</source>
          <target state="translated">En ambos casos, si desea acceder a la rutina original sin alterar, use el prefijo &lt;code&gt;CORE::&lt;/code&gt; :::</target>
        </trans-unit>
        <trans-unit id="3b49d045d120cddc991a05308fecf5d02438bfd9" translate="yes" xml:space="preserve">
          <source>In both cases, it is strongly recommended that you use these flags when you run Configure. If you do not use do this, but later answer the questions about 64-bit numbers when Configure asks you, you may get a configuration that cannot be compiled, or that does not function as expected.</source>
          <target state="translated">En ambos casos,se recomienda encarecidamente que utilice estas banderas cuando ejecute Configurar.Si no utiliza hacer esto,pero más tarde responde a las preguntas sobre los números de 64 bits cuando Configure le pregunte,puede obtener una configuración que no se puede compilar,o que no funciona como se espera.</target>
        </trans-unit>
        <trans-unit id="cb84a1bc50cca6fcae9507ee085502026d5e423b" translate="yes" xml:space="preserve">
          <source>In both forms, the value returned is the value of the last expression evaluated inside the mini-program; a return statement may also be used, just as with subroutines. The expression providing the return value is evaluated in void, scalar, or list context, depending on the context of the &lt;code&gt;eval&lt;/code&gt; itself. See &lt;a href=&quot;#wantarray&quot;&gt;&lt;code&gt;wantarray&lt;/code&gt;&lt;/a&gt; for more on how the evaluation context can be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f5f411ebc893dbf219e8f06f5338fdd368072e" translate="yes" xml:space="preserve">
          <source>In both forms, the value returned is the value of the last expression evaluated inside the mini-program; a return statement may be also used, just as with subroutines. The expression providing the return value is evaluated in void, scalar, or list context, depending on the context of the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; itself. See &lt;a href=&quot;wantarray&quot;&gt;wantarray&lt;/a&gt; for more on how the evaluation context can be determined.</source>
          <target state="translated">En ambas formas, el valor devuelto es el valor de la &amp;uacute;ltima expresi&amp;oacute;n evaluada dentro del miniprograma; tambi&amp;eacute;n se puede usar una declaraci&amp;oacute;n de retorno, al igual que con las subrutinas. La expresi&amp;oacute;n que proporciona el valor de retorno se eval&amp;uacute;a en contexto vac&amp;iacute;o, escalar o de lista, seg&amp;uacute;n el contexto de la &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n en s&amp;iacute;. Consulte &lt;a href=&quot;wantarray&quot;&gt;wantarray&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo se puede determinar el contexto de evaluaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4a7857febf47f6d9d7d4d6147004e7ae7af4e0b5" translate="yes" xml:space="preserve">
          <source>In both forms, the value returned is the value of the last expression evaluated inside the mini-program; a return statement may be also used, just as with subroutines. The expression providing the return value is evaluated in void, scalar, or list context, depending on the context of the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; itself. See &lt;a href=&quot;#wantarray&quot;&gt;wantarray&lt;/a&gt; for more on how the evaluation context can be determined.</source>
          <target state="translated">En ambas formas, el valor devuelto es el valor de la &amp;uacute;ltima expresi&amp;oacute;n evaluada dentro del miniprograma; tambi&amp;eacute;n se puede usar una declaraci&amp;oacute;n de retorno, al igual que con las subrutinas. La expresi&amp;oacute;n que proporciona el valor de retorno se eval&amp;uacute;a en contexto vac&amp;iacute;o, escalar o de lista, seg&amp;uacute;n el contexto de la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n en s&amp;iacute;. Consulte &lt;a href=&quot;#wantarray&quot;&gt;wantarray&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo se puede determinar el contexto de evaluaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c9f62f445147592772dba8cf7d0b7f085f6d5d1f" translate="yes" xml:space="preserve">
          <source>In both last cases, the last expression is evaluated in the context that was applied to the &lt;code&gt;given&lt;/code&gt; block.</source>
          <target state="translated">En los dos &amp;uacute;ltimos casos, la &amp;uacute;ltima expresi&amp;oacute;n se eval&amp;uacute;a en el contexto que se aplic&amp;oacute; al bloque &lt;code&gt;given&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="faca50452b363bafe8294bb759677cc9d971a027" translate="yes" xml:space="preserve">
          <source>In both the case of unquoted command line arguments or in calls to &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt; VMS wildcard expansion is performed. (csh-style wildcard expansion is available if you use &lt;code&gt;File::Glob::glob&lt;/code&gt; .) If the wildcard filespec contains a device or directory specification, then the resultant filespecs will also contain a device and directory; otherwise, device and directory information are removed. VMS-style resultant filespecs will contain a full device and directory, while Unix-style resultant filespecs will contain only as much of a directory path as was present in the input filespec. For example, if your default directory is Perl_Root:[000000], the expansion of &lt;code&gt;[.t]*.*&lt;/code&gt; will yield filespecs like &quot;perl_root:[t]base.dir&quot;, while the expansion of &lt;code&gt;t/*/*&lt;/code&gt; will yield filespecs like &quot;t/base.dir&quot;. (This is done to match the behavior of glob expansion performed by Unix shells.)</source>
          <target state="translated">Tanto en el caso de argumentos de l&amp;iacute;nea de comando sin comillas como en las llamadas a &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt; se realiza la expansi&amp;oacute;n de comodines VMS. (La expansi&amp;oacute;n comod&amp;iacute;n de estilo csh est&amp;aacute; disponible si usa &lt;code&gt;File::Glob::glob&lt;/code&gt; .) Si la especificaci&amp;oacute;n de archivo comod&amp;iacute;n contiene una especificaci&amp;oacute;n de dispositivo o directorio, las especificaciones de archivo resultantes tambi&amp;eacute;n contendr&amp;aacute;n un dispositivo y directorio; de lo contrario, se elimina la informaci&amp;oacute;n de dispositivo y directorio. Las especificaciones de archivo resultantes de estilo VMS contendr&amp;aacute;n un dispositivo y directorio completos, mientras que las especificaciones de archivo resultantes de estilo Unix contendr&amp;aacute;n solo la ruta de directorio que estaba presente en la especificaci&amp;oacute;n de archivo de entrada. Por ejemplo, si su directorio predeterminado es Perl_Root: [000000], la expansi&amp;oacute;n de &lt;code&gt;[.t]*.*&lt;/code&gt; Producir&amp;aacute; especificaciones de archivo como &quot;perl_root: [t] base.dir&quot;, mientras que la expansi&amp;oacute;n de &lt;code&gt;t/*/*&lt;/code&gt; producir&amp;aacute; especificaciones de archivo como &quot;t / base.dir&quot;. (Esto se hace para que coincida con el comportamiento de la expansi&amp;oacute;n global realizada por los shells de Unix).</target>
        </trans-unit>
        <trans-unit id="151a64667d69a6e020ca3351948ca015aaa39af7" translate="yes" xml:space="preserve">
          <source>In both the case of unquoted command line arguments or in calls to &lt;code&gt;glob()&lt;/code&gt; VMS wildcard expansion is performed. (csh-style wildcard expansion is available if you use &lt;code&gt;File::Glob::glob&lt;/code&gt;.) If the wildcard filespec contains a device or directory specification, then the resultant filespecs will also contain a device and directory; otherwise, device and directory information are removed. VMS-style resultant filespecs will contain a full device and directory, while Unix-style resultant filespecs will contain only as much of a directory path as was present in the input filespec. For example, if your default directory is Perl_Root:[000000], the expansion of &lt;code&gt;[.t]*.*&lt;/code&gt; will yield filespecs like &quot;perl_root:[t]base.dir&quot;, while the expansion of &lt;code&gt;t/*/*&lt;/code&gt; will yield filespecs like &quot;t/base.dir&quot;. (This is done to match the behavior of glob expansion performed by Unix shells.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acbdc4bab7e93326f2e293e78aa137135b956f7" translate="yes" xml:space="preserve">
          <source>In both these examples, the character being matched is non-Unicode, so Unicode doesn't define how it should match. It clearly isn't an ASCII hex digit, so the first example clearly should fail, and so it does, with no warning. But it is arguable that the second example should have an undefined, hence &lt;code&gt;FALSE&lt;/code&gt; , result. So a warning is raised for it.</source>
          <target state="translated">En ambos ejemplos, el car&amp;aacute;cter que se compara no es Unicode, por lo que Unicode no define c&amp;oacute;mo debe coincidir. Claramente no es un d&amp;iacute;gito hexadecimal ASCII, por lo que el primer ejemplo claramente deber&amp;iacute;a fallar, y lo hace, sin advertencia. Pero es discutible que el segundo ejemplo deba tener un resultado indefinido, por lo tanto &lt;code&gt;FALSE&lt;/code&gt; . As&amp;iacute; que se hace una advertencia por ello.</target>
        </trans-unit>
        <trans-unit id="ada6e60fc27e067365f9bf0a0ffb98e7d709449e" translate="yes" xml:space="preserve">
          <source>In both these examples, the character being matched is non-Unicode, so Unicode doesn't define how it should match. It clearly isn't an ASCII hex digit, so the first example clearly should fail, and so it does, with no warning. But it is arguable that the second example should have an undefined, hence &lt;code&gt;FALSE&lt;/code&gt;, result. So a warning is raised for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0223354df20f59a567232c3197191e5bff5d52" translate="yes" xml:space="preserve">
          <source>In both usages of the autosplitter, only subroutines defined following the perl</source>
          <target state="translated">En ambos usos del auto-desplegador,sólo las subrutinas definidas a continuación del perl</target>
        </trans-unit>
        <trans-unit id="406fcea7e1602f14dd1022ebb22952808a0b1f3f" translate="yes" xml:space="preserve">
          <source>In case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e541d9732ad7ef01278201444dc42735718b9c21" translate="yes" xml:space="preserve">
          <source>In case of L&amp;lt;...&amp;gt; codes with no &quot;text|&quot; part in them, older formatters have exhibited great variation in actually displaying the link or cross reference. For example, L&amp;lt;crontab(5)&amp;gt; would render as &quot;the &lt;code&gt;crontab(5)&lt;/code&gt; manpage&quot;, or &quot;in the &lt;code&gt;crontab(5)&lt;/code&gt; manpage&quot; or just &quot;&lt;code&gt;crontab(5)&lt;/code&gt; &quot;.</source>
          <target state="translated">En caso de c&amp;oacute;digos L &amp;lt;...&amp;gt; sin &quot;texto |&quot; En parte, los formateadores m&amp;aacute;s antiguos han mostrado una gran variaci&amp;oacute;n en la visualizaci&amp;oacute;n real del enlace o la referencia cruzada. Por ejemplo, L &amp;lt;crontab (5)&amp;gt; se representar&amp;iacute;a como &quot;la p&amp;aacute;gina de &lt;code&gt;crontab(5)&lt;/code&gt; &quot;, o &quot;en la p&amp;aacute;gina de &lt;code&gt;crontab(5)&lt;/code&gt; &quot; o simplemente &quot; &lt;code&gt;crontab(5)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="2814b51f24a73a872d7d804cf971bb1ce84fc6ad" translate="yes" xml:space="preserve">
          <source>In case of L&amp;lt;...&amp;gt; codes with no &quot;text|&quot; part in them, older formatters have exhibited great variation in actually displaying the link or cross reference. For example, L&amp;lt;crontab(5)&amp;gt; would render as &quot;the &lt;code&gt;crontab(5)&lt;/code&gt; manpage&quot;, or &quot;in the &lt;code&gt;crontab(5)&lt;/code&gt; manpage&quot; or just &quot;&lt;code&gt;crontab(5)&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365d296ccf4014f926ba35dfa5ea9a2c360d66e7" translate="yes" xml:space="preserve">
          <source>In case of doubt, insert the following statement in front of your Perl program:</source>
          <target state="translated">En caso de duda,inserte la siguiente declaración delante de su programa Perl:</target>
        </trans-unit>
        <trans-unit id="dfdb2521cd21a1ef333094706d67bdf22192a8cc" translate="yes" xml:space="preserve">
          <source>In case the advice in this guide has been updated recently, read the latest version directly from the perl source:</source>
          <target state="translated">En caso de que los consejos de esta guía hayan sido actualizados recientemente,lea la última versión directamente de la fuente de perl:</target>
        </trans-unit>
        <trans-unit id="23c62db8a34f2416b1d1b03ee56f5f1471c6e5f5" translate="yes" xml:space="preserve">
          <source>In case the result of one operation has more digits than specified, it is rounded. The rounding mode taken is either the default mode, or the one supplied to the operation after the</source>
          <target state="translated">En caso de que el resultado de una operación tenga más dígitos de los especificados,se redondea.El modo de redondeo tomado es el modo por defecto,o el suministrado a la operación después de la</target>
        </trans-unit>
        <trans-unit id="4ff81268a14bba4a99da29ff2559bdaaf817ec79" translate="yes" xml:space="preserve">
          <source>In case you can choose between running a Makefile.PL or a Build.PL, which installer would you prefer (EUMM or MB or RAND)?</source>
          <target state="translated">En caso de que pueda elegir entre ejecutar un Makefile.PL o un Build.PL,¿qué instalador preferiría (EUMM o MB o RAND)?</target>
        </trans-unit>
        <trans-unit id="4bcc550b219bf3be3a6806897874d6bb2e99f2b2" translate="yes" xml:space="preserve">
          <source>In case you're not familiar with the &quot;regular&quot; Version 8 regex routines, here are the pattern-matching rules not described above.</source>
          <target state="translated">En caso de que no estés familiarizado con las rutinas regex &quot;regulares&quot; de la versión 8,aquí están las reglas de concordancia de patrones no descritas anteriormente.</target>
        </trans-unit>
        <trans-unit id="62dab9a7c702990dbb833dc9d9dafc87377a09a8" translate="yes" xml:space="preserve">
          <source>In cases of exceptionally aberrant documents, Pod parsers may abort the parse. Even then, using &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;ing/&lt;code&gt;croak&lt;/code&gt; ing is to be avoided; where possible, the parser library may simply close the input file and add text like &quot;*** Formatting Aborted ***&quot; to the end of the (partial) in-memory document.</source>
          <target state="translated">En casos de documentos excepcionalmente aberrantes, los analizadores de Pod pueden abortar el an&amp;aacute;lisis. Incluso entonces, debe evitarse el uso de &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;croak&lt;/code&gt; ; siempre que sea posible, la biblioteca del analizador puede simplemente cerrar el archivo de entrada y agregar texto como &quot;*** Formateo cancelado ***&quot; al final del documento (parcial) en memoria.</target>
        </trans-unit>
        <trans-unit id="b59217a1c8a005c9ab6145ee6ec0ce18535c0415" translate="yes" xml:space="preserve">
          <source>In cases of exceptionally aberrant documents, Pod parsers may abort the parse. Even then, using &lt;code&gt;die&lt;/code&gt;ing/&lt;code&gt;croak&lt;/code&gt;ing is to be avoided; where possible, the parser library may simply close the input file and add text like &quot;*** Formatting Aborted ***&quot; to the end of the (partial) in-memory document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951ca6ae3fa63f2c3fd17e15460e33ec812d0590" translate="yes" xml:space="preserve">
          <source>In cases of links to a section in a different Pod document, there are both a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145ce40561aae9dcc1363caeb763ac38680de18e" translate="yes" xml:space="preserve">
          <source>In cases of links to a section in the current Pod document, there is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b86d710288939d8eb974b61f2bbf30d7a131a6" translate="yes" xml:space="preserve">
          <source>In cases where get_title can't find the title, it will return empty-string (&quot;&quot;).</source>
          <target state="translated">En los casos en que get_title no pueda encontrar el título,devolverá la cadena vacía (&quot;&quot;).</target>
        </trans-unit>
        <trans-unit id="973bb49bb790d075ff05520ff06dce4f9260825c" translate="yes" xml:space="preserve">
          <source>In cases where there is link-text explicitly specified, it is to be found in the content of the element (and not the attributes), just as with the L&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf9664b1f4d1fbea5b6e435c9a6c227eff0e2f3" translate="yes" xml:space="preserve">
          <source>In certain cases, the OS-level handles created by the pipe(), socket(), and accept() operators are apparently not duplicated accurately in pseudo-processes. This only happens in some situations, but where it does happen, it may result in deadlocks between the read and write ends of pipe handles, or inability to send or receive data across socket handles.</source>
          <target state="translated">En ciertos casos,las manijas de nivel OS creadas por los operadores pipe(),socket(),y accept()aparentemente no se duplican con precisión en los pseudo-procesos.Esto sólo ocurre en algunas situaciones,pero cuando ocurre,puede resultar en bloqueos entre los extremos de lectura y escritura de los &quot;pipe handles&quot;,o en la incapacidad de enviar o recibir datos a través de los &quot;socket handles&quot;.</target>
        </trans-unit>
        <trans-unit id="f0057891cced8b178aba4808a03218c5201e0280" translate="yes" xml:space="preserve">
          <source>In certain systems, the operating system's locale support is broken and cannot be fixed or used by Perl. Such deficiencies can and will result in mysterious hangs and/or Perl core dumps when &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect. When confronted with such a system, please report in excruciating detail to &amp;lt;</source>
          <target state="translated">En ciertos sistemas, la compatibilidad con la configuraci&amp;oacute;n regional del sistema operativo no funciona y Perl no puede repararla ni utilizarla. Tales deficiencias pueden y resultar&amp;aacute;n en bloqueos misteriosos y / o volcados de n&amp;uacute;cleo de Perl cuando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; est&amp;aacute; en efecto. Cuando se enfrente a un sistema de este tipo, informe con un detalle insoportable a &amp;lt;</target>
        </trans-unit>
        <trans-unit id="fc5ce54a3d04a968232d4bfde109041471f0d94a" translate="yes" xml:space="preserve">
          <source>In certain systems, the operating system's locale support is broken and cannot be fixed or used by Perl. Such deficiencies can and will result in mysterious hangs and/or Perl core dumps when &lt;code&gt;use locale&lt;/code&gt; is in effect. When confronted with such a system, please report in excruciating detail to &amp;lt;&lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;&amp;gt;, and also contact your vendor: bug fixes may exist for these problems in your operating system. Sometimes such bug fixes are called an operating system upgrade. If you have the source for Perl, include in the bug report the output of the test described above in &lt;a href=&quot;#Testing-for-broken-locales&quot;&gt;&quot;Testing for broken locales&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c7a29f6dd0bd0c499c2a79f889945240814e67" translate="yes" xml:space="preserve">
          <source>In code that currently says &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; AutoLoader; @ISA = qw(AutoLoader);&lt;/code&gt; you should remove AutoLoader from @ISA and change &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; AutoLoader;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; AutoLoader 'AUTOLOAD';&lt;/code&gt; .</source>
          <target state="translated">En el c&amp;oacute;digo que actualmente dice &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; AutoLoader; @ISA = qw(AutoLoader);&lt;/code&gt; debe eliminar el Autocargador de @ISA y cambiar el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; AutoLoader;&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; AutoLoader 'AUTOLOAD';&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="520a5e3954242a96e3ad7ef22ff14d7e52ffc0e7" translate="yes" xml:space="preserve">
          <source>In code that currently says &lt;code&gt;use AutoLoader; @ISA = qw(AutoLoader);&lt;/code&gt; you should remove AutoLoader from @ISA and change &lt;code&gt;use AutoLoader;&lt;/code&gt; to &lt;code&gt;use AutoLoader 'AUTOLOAD';&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b746a74a7b045be066091fe7c51bf38b893c45a1" translate="yes" xml:space="preserve">
          <source>In comparison to the standard implementation where the object is a hash and the fields correspond to hash keys, here the fields correspond to hashes, and the object determines the hash key. Thus the hashes appear to be turned</source>
          <target state="translated">En comparación con la implementación estándar donde el objeto es un hash y los campos corresponden a claves hash,aquí los campos corresponden a hashes,y el objeto determina la clave hash.Por lo tanto,los hashes parecen estar girados</target>
        </trans-unit>
        <trans-unit id="402b2ae815c1f3f49820717ee0f679511f29fbf5" translate="yes" xml:space="preserve">
          <source>In connection with &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; simply adds bits, and this can be put to good use to count set bits efficiently:</source>
          <target state="translated">En relaci&amp;oacute;n con &lt;code&gt;b&lt;/code&gt; o &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; simplemente a&amp;ntilde;ade los bits, y esto se puede poner a buen uso para contar bits fijados de manera eficiente:</target>
        </trans-unit>
        <trans-unit id="f5310c67f357a7a6bdb19f2c82ce4734dee7eee5" translate="yes" xml:space="preserve">
          <source>In connection with &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt; simply adds bits, and this can be put to good use to count set bits efficiently:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed09b7a66d2eaa93bbb9724cd18388dac9e53c52" translate="yes" xml:space="preserve">
          <source>In consequence, if two or more classes want to access an object they</source>
          <target state="translated">En consecuencia,si dos o más clases quieren acceder a un objeto...</target>
        </trans-unit>
        <trans-unit id="f69c1a7795cd05f1f7a1c806e629e11c671e5598" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;code&gt;\b{...}&lt;/code&gt; and &lt;code&gt;\B{...}&lt;/code&gt; may or may not match at the beginning and end of the line, depending on the boundary type. These implement the Unicode default boundaries, specified in &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;. The boundary types currently available are:</source>
          <target state="translated">Por el contrario, &lt;code&gt;\b{...}&lt;/code&gt; y &lt;code&gt;\B{...}&lt;/code&gt; pueden coincidir o no al principio y al final de la l&amp;iacute;nea, seg&amp;uacute;n el tipo de l&amp;iacute;mite. Estos implementan los l&amp;iacute;mites predeterminados de Unicode, especificados en &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt; . Los tipos de l&amp;iacute;mites actualmente disponibles son:</target>
        </trans-unit>
        <trans-unit id="dc44b4fc0c973a2fe9378a9f6c2bc3a5ba5d5988" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;code&gt;\b{...}&lt;/code&gt; and &lt;code&gt;\B{...}&lt;/code&gt; may or may not match at the beginning and end of the line, depending on the boundary type. These implement the Unicode default boundaries, specified in &lt;a href=&quot;https://www.unicode.org/reports/tr14/&quot;&gt;https://www.unicode.org/reports/tr14/&lt;/a&gt; and &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/&lt;/a&gt;. The boundary types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01521aaa27588449bcad287436418e3fa90af89f" translate="yes" xml:space="preserve">
          <source>In contrast, INSTALL_BASE has predictable, easy to explain installation locations. Now that Module::Build and MakeMaker both have INSTALL_BASE there is little reason to use PREFIX other than to preserve your existing installation locations. If you are starting a fresh Perl installation we encourage you to use INSTALL_BASE. If you have an existing installation installed via PREFIX, consider moving it to an installation structure matching INSTALL_BASE and using that instead.</source>
          <target state="translated">Por el contrario,INSTALL_BASE tiene lugares de instalación predecibles y fáciles de explicar.Ahora que tanto Module::Build como MakeMaker tienen INSTALL_BASE hay pocas razones para usar PREFIX aparte de preservar sus lugares de instalación existentes.Si está comenzando una nueva instalación en Perl,le recomendamos que use INSTALL_BASE.Si tiene una instalación existente instalada a través de PREFIX,considere moverla a una estructura de instalación que coincida con INSTALL_BASE y usarla en su lugar.</target>
        </trans-unit>
        <trans-unit id="b83a5099aeab352d7a9903a13c782e0d912d2e78" translate="yes" xml:space="preserve">
          <source>In contrast, hard references are more like hard links in a Unix file system: They are used to access an underlying object without concern for what its (other) name is. When the word &quot;reference&quot; is used without an adjective, as in the following paragraph, it is usually talking about a hard reference.</source>
          <target state="translated">Por el contrario,las referencias duras son más como enlaces duros en un sistema de archivos Unix:Se utilizan para acceder a un objeto subyacente sin preocuparse de cuál es su (otro)nombre.Cuando la palabra &quot;referencia&quot; se utiliza sin un adjetivo,como en el párrafo siguiente,se suele hablar de una referencia dura.</target>
        </trans-unit>
        <trans-unit id="4fefb1775bf2d6d801dc0e18387b980f80b2a1f8" translate="yes" xml:space="preserve">
          <source>In contrast, modules in the</source>
          <target state="translated">En cambio,los módulos de la</target>
        </trans-unit>
        <trans-unit id="d9d8046b6af82f0d0498eb1133f08ab96606ff69" translate="yes" xml:space="preserve">
          <source>In corporate life, to grant official approval to a thing, as in, &amp;ldquo;The VP of Engineering has blessed our WebCruncher project.&amp;rdquo; Similarly, in Perl, to grant official approval to a &lt;b&gt;referent&lt;/b&gt; so that it can function as an &lt;b&gt;object&lt;/b&gt;, such as a WebCruncher object. See the &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; function in Camel chapter 27, &amp;ldquo;Functions&amp;rdquo;.</source>
          <target state="translated">En la vida empresarial, otorgar aprobaci&amp;oacute;n oficial a algo, como en &quot;El vicepresidente de ingenier&amp;iacute;a ha bendecido nuestro proyecto WebCruncher&quot;. De manera similar, en Perl, para otorgar aprobaci&amp;oacute;n oficial a un &lt;b&gt;referente&lt;/b&gt; para que pueda funcionar como un &lt;b&gt;objeto&lt;/b&gt; , como un objeto WebCruncher. Vea la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; en el cap&amp;iacute;tulo 27 de Camel, &amp;ldquo;Funciones&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="4625f6aedb66ab6c0cd003200a635f106d69fe95" translate="yes" xml:space="preserve">
          <source>In corporate life, to grant official approval to a thing, as in, &amp;ldquo;The VP of Engineering has blessed our WebCruncher project.&amp;rdquo; Similarly, in Perl, to grant official approval to a &lt;b&gt;referent&lt;/b&gt; so that it can function as an &lt;b&gt;object&lt;/b&gt;, such as a WebCruncher object. See the &lt;code&gt;bless&lt;/code&gt; function in Camel chapter 27, &amp;ldquo;Functions&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790c2868d3d66b4c19140a7f88a9ac87243f5c3f" translate="yes" xml:space="preserve">
          <source>In deep binding, lexical variables mentioned in anonymous subroutines are the same ones that were in scope when the subroutine was created. In shallow binding, they are whichever variables with the same names happen to be in scope when the subroutine is called. Perl always uses deep binding of lexical variables (i.e., those created with my()). However, dynamic variables (aka global, local, or package variables) are effectively shallowly bound. Consider this just one more reason not to use them. See the answer to &lt;a href=&quot;#What%27s-a-closure%3F&quot;&gt;&quot;What's a closure?&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b2433b690bbfb6a8d4a6c1783fb717c5f969db" translate="yes" xml:space="preserve">
          <source>In deep binding, lexical variables mentioned in anonymous subroutines are the same ones that were in scope when the subroutine was created. In shallow binding, they are whichever variables with the same names happen to be in scope when the subroutine is called. Perl always uses deep binding of lexical variables (i.e., those created with my()). However, dynamic variables (aka global, local, or package variables) are effectively shallowly bound. Consider this just one more reason not to use them. See the answer to &lt;a href=&quot;#What's-a-closure%3f&quot;&gt;What's a closure?&lt;/a&gt;.</source>
          <target state="translated">En el enlace profundo, las variables l&amp;eacute;xicas mencionadas en subrutinas an&amp;oacute;nimas son las mismas que estaban dentro del alcance cuando se cre&amp;oacute; la subrutina. En el enlace superficial, son las variables con los mismos nombres que se encuentran en el alcance cuando se llama a la subrutina. Perl siempre usa un enlace profundo de variables l&amp;eacute;xicas (es decir, aquellas creadas con my ()). Sin embargo, las variables din&amp;aacute;micas (tambi&amp;eacute;n conocidas como variables globales, locales o de paquete) est&amp;aacute;n limitadas de manera superficial. Considere esto como una raz&amp;oacute;n m&amp;aacute;s para no usarlos. Vea la respuesta a &lt;a href=&quot;#What's-a-closure%3f&quot;&gt;&amp;iquest;Qu&amp;eacute; es un cierre?&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99e7fbb09770b6f32c5f70c75d8aea1be23012f2" translate="yes" xml:space="preserve">
          <source>In default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fadc3ec5ca97e1da30f076e8b9de4f5b9c66b4" translate="yes" xml:space="preserve">
          <source>In directories where either &lt;code&gt;Makefile.PL&lt;/code&gt; or &lt;code&gt;Build.PL&lt;/code&gt; exist, &lt;code&gt;perldoc&lt;/code&gt; will add &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;lib&lt;/code&gt; first to its search path, and as long as you're not the superuser will add &lt;code&gt;blib&lt;/code&gt; too. This is really helpful if you're working inside of a build directory and want to read through the docs even if you have a version of a module previously installed.</source>
          <target state="translated">En directorios donde existan &lt;code&gt;Makefile.PL&lt;/code&gt; o &lt;code&gt;Build.PL&lt;/code&gt; , &lt;code&gt;perldoc&lt;/code&gt; agregar&amp;aacute; &lt;code&gt;.&lt;/code&gt; y &lt;code&gt;lib&lt;/code&gt; primero en su ruta de b&amp;uacute;squeda, y mientras no sea usted, el superusuario agregar&amp;aacute; &lt;code&gt;blib&lt;/code&gt; tambi&amp;eacute;n. Esto es realmente &amp;uacute;til si est&amp;aacute; trabajando dentro de un directorio de compilaci&amp;oacute;n y desea leer los documentos incluso si tiene una versi&amp;oacute;n de un m&amp;oacute;dulo previamente instalado.</target>
        </trans-unit>
        <trans-unit id="ea11b5cca3eecd37f4df3d54042b48987e1a258f" translate="yes" xml:space="preserve">
          <source>In double-quotish context, as is usually the case, you need to be careful about &lt;code&gt;&quot;$&quot;&lt;/code&gt; and the non-metacharacter &lt;code&gt;&quot;@&quot;&lt;/code&gt;. Those could interpolate variables, which may or may not be what you intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd19cad20b9e59643f15ee87358174035c99ef1" translate="yes" xml:space="preserve">
          <source>In each case, the port or service name (e.g. &lt;code&gt;80&lt;/code&gt;) is passed as the &lt;code&gt;LocalService&lt;/code&gt; or &lt;code&gt;PeerService&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98ec9678a77351791b177991b84c25fc1205921" translate="yes" xml:space="preserve">
          <source>In each of the following groups, there may be many more constants provided than just the ones given as examples in the section heading. If the heading ends &lt;code&gt;...&lt;/code&gt; then this means there are likely more; the exact constants provided will depend on the OS and headers found at compile-time.</source>
          <target state="translated">En cada uno de los siguientes grupos, puede haber muchas m&amp;aacute;s constantes que las que se dan como ejemplos en el encabezado de la secci&amp;oacute;n. Si el t&amp;iacute;tulo termina &lt;code&gt;...&lt;/code&gt; entonces esto significa que probablemente haya m&amp;aacute;s; las constantes exactas proporcionadas depender&amp;aacute;n del sistema operativo y los encabezados que se encuentren en tiempo de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b68e75d7a1476c3ad7fa38606ac2d7ce5e34258a" translate="yes" xml:space="preserve">
          <source>In earlier Perl versions, when byte and character data were concatenated, the new string was sometimes created by decoding the byte strings as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85963e44254facb2c74a4ad36d06d1d324a0415d" translate="yes" xml:space="preserve">
          <source>In earlier Perls, this bit was named &lt;code&gt;UTF8_GOT_ABOVE_31_BIT&lt;/code&gt;, which you still may use for backward compatibility. That name is misleading, as this flag may be set when the code point actually does fit in 31 bits. This happens on EBCDIC platforms, and sometimes when the &lt;a href=&quot;#UTF8_GOT_LONG&quot;&gt;overlong malformation&lt;/a&gt; is also present. The new name accurately describes the situation in all cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd886bd81b2389456301c1edaca970f0fd117a3" translate="yes" xml:space="preserve">
          <source>In earlier versions, when byte and character data were concatenated, the new string was sometimes created by decoding the byte strings as</source>
          <target state="translated">En versiones anteriores,cuando los datos de bytes y caracteres se concatenaban,la nueva cadena se creaba a veces decodificando las cadenas de bytes como</target>
        </trans-unit>
        <trans-unit id="7dc7a0656f22946eb4e770e46a3f69e5d6f40e31" translate="yes" xml:space="preserve">
          <source>In effect, your search prefix is ignored and $Config{vms_prefix} is used instead.</source>
          <target state="translated">En efecto,su prefijo de búsqueda es ignorado y en su lugar se utiliza $Config{vms_prefix}.</target>
        </trans-unit>
        <trans-unit id="94c2468a1701c5657c0fd595d96849c8e021725b" translate="yes" xml:space="preserve">
          <source>In either case, please &lt;b&gt;attach&lt;/b&gt; patches to the bug report rather than including them inline in the web post or the body of the email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c62ad53bb4b783795294732eef580256b60e336" translate="yes" xml:space="preserve">
          <source>In either case, you should still be able to run the scripts with perl explicitly:</source>
          <target state="translated">En cualquier caso,deberías ser capaz de ejecutar los guiones con Perl explícitamente:</target>
        </trans-unit>
        <trans-unit id="10204eb47c47fbf1753216a2fbda8ce2e5713135" translate="yes" xml:space="preserve">
          <source>In extreme cases, &lt;b&gt;perlbug&lt;/b&gt; may not work well enough on your system to guide you through composing a bug report. In those cases, you may be able to use &lt;b&gt;perlbug -d&lt;/b&gt; or &lt;b&gt;perl -V&lt;/b&gt; to get system configuration information to include in your issue report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb41a30683f07ad432fb7627b6f4d0b50b059664" translate="yes" xml:space="preserve">
          <source>In extreme cases, &lt;b&gt;perlbug&lt;/b&gt; may not work well enough on your system to guide you through composing a bug report. In those cases, you may be able to use &lt;b&gt;perlbug -d&lt;/b&gt; to get system configuration information to include in a manually composed bug report to &lt;b&gt;perlbug@perl.org&lt;/b&gt;.</source>
          <target state="translated">En casos extremos, &lt;b&gt;es&lt;/b&gt; posible que &lt;b&gt;perlbug&lt;/b&gt; no funcione lo suficientemente bien en su sistema como para guiarlo en la redacci&amp;oacute;n de un informe de error. En esos casos, es posible que pueda usar &lt;b&gt;perlbug -d&lt;/b&gt; para obtener informaci&amp;oacute;n de configuraci&amp;oacute;n del sistema para incluirla en un informe de error compuesto manualmente a &lt;b&gt;perlbug@perl.org&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="937f09e779144f446b6eecefbcdc1c71e24ac90e" translate="yes" xml:space="preserve">
          <source>In fact if you want to update your local repository without touching your working directory you do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe9c1f86e0ce32785f02f8f2556f43d9ccd3599" translate="yes" xml:space="preserve">
          <source>In fact it is not 100% true that a compiled unit contains a pointer to the scratchpad AV. In fact it contains a pointer to an AV of (initially) one element, and this element is the scratchpad AV. Why do we need an extra level of indirection?</source>
          <target state="translated">De hecho,no es 100% cierto que una unidad compilada contenga un puntero al scratchpad AV.De hecho,contiene un puntero a un AV de (inicialmente)un elemento,y este elemento es el scratchpad AV.¿Por qué necesitamos un nivel extra de indirección?</target>
        </trans-unit>
        <trans-unit id="e844204f376cced819af429b122503a8c0eba54a" translate="yes" xml:space="preserve">
          <source>In fact mangling of</source>
          <target state="translated">De hecho,la destrucción de</target>
        </trans-unit>
        <trans-unit id="3370e0fda40977698cd4fccd53b4e05e504a7a69" translate="yes" xml:space="preserve">
          <source>In fact numbers stored in the native integer format may be stored either in the signed native form, or in the unsigned native form. Thus the limits for Perl numbers stored as native integers would typically be -2**31..2**32-1, with appropriate modifications in the case of 64-bit integers. Again, this does not mean that Perl can do operations only over integers in this range: it is possible to store many more integers in floating point format.</source>
          <target state="translated">De hecho,los números almacenados en el formato de números enteros nativos pueden almacenarse en la forma nativa con firma o en la forma nativa sin firma.Así pues,los límites de los números de Perl almacenados como números enteros nativos serían típicamente -2**31..2**32-1,con las modificaciones apropiadas en el caso de los números enteros de 64 bits.Una vez más,esto no significa que Perl pueda hacer operaciones sólo sobre números enteros en este rango:es posible almacenar muchos más números enteros en formato de coma flotante.</target>
        </trans-unit>
        <trans-unit id="58c12119d45a0a6b7a7d70173ad8a47276ea5e91" translate="yes" xml:space="preserve">
          <source>In fact, a dynamic variable (also known as package or global variables) are still accessible using the fully qualified &lt;code&gt;::&lt;/code&gt; notation even while a lexical of the same name is also visible:</source>
          <target state="translated">De hecho, una variable din&amp;aacute;mica (tambi&amp;eacute;n conocida como paquete o variables globales) todav&amp;iacute;a es accesible usando la notaci&amp;oacute;n &lt;code&gt;::&lt;/code&gt; completamente calificada incluso cuando un l&amp;eacute;xico del mismo nombre tambi&amp;eacute;n es visible:</target>
        </trans-unit>
        <trans-unit id="43fe617e28edf5522d6d7a7c2fe5c4bc3af16527" translate="yes" xml:space="preserve">
          <source>In fact, a simple identifier within such curlies is forced to be a string, and likewise within a hash subscript. Neither need quoting. Our earlier example, &lt;code&gt;$days{'Feb'}&lt;/code&gt; can be written as &lt;code&gt;$days{Feb}&lt;/code&gt; and the quotes will be assumed automatically. But anything more complicated in the subscript will be interpreted as an expression. This means for example that &lt;code&gt;$version{2.0}++&lt;/code&gt; is equivalent to &lt;code&gt;$version{2}++&lt;/code&gt; , not to &lt;code&gt;$version{'2.0'}++&lt;/code&gt; .</source>
          <target state="translated">De hecho, un identificador simple dentro de tales curlies est&amp;aacute; obligado a ser una cadena, y tambi&amp;eacute;n dentro de un sub&amp;iacute;ndice hash. No es necesario citar. Nuestro ejemplo anterior, &lt;code&gt;$days{'Feb'}&lt;/code&gt; se puede escribir como &lt;code&gt;$days{Feb}&lt;/code&gt; y las cotizaciones se asumir&amp;aacute;n autom&amp;aacute;ticamente. Pero cualquier cosa m&amp;aacute;s complicada en el sub&amp;iacute;ndice se interpretar&amp;aacute; como una expresi&amp;oacute;n. Esto significa, por ejemplo, que &lt;code&gt;$version{2.0}++&lt;/code&gt; es equivalente a &lt;code&gt;$version{2}++&lt;/code&gt; , no a &lt;code&gt;$version{'2.0'}++&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="870d18d0761d61a25a30e29a5f77ba577a01c448" translate="yes" xml:space="preserve">
          <source>In fact, a simple identifier within such curlies is forced to be a string, and likewise within a hash subscript. Neither need quoting. Our earlier example, &lt;code&gt;$days{'Feb'}&lt;/code&gt; can be written as &lt;code&gt;$days{Feb}&lt;/code&gt; and the quotes will be assumed automatically. But anything more complicated in the subscript will be interpreted as an expression. This means for example that &lt;code&gt;$version{2.0}++&lt;/code&gt; is equivalent to &lt;code&gt;$version{2}++&lt;/code&gt;, not to &lt;code&gt;$version{'2.0'}++&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721f4b0102ec5d45627b4acee4d7283205201fd1" translate="yes" xml:space="preserve">
          <source>In fact, if you predeclare functions you want to call that way, you don't even need parentheses:</source>
          <target state="translated">De hecho,si predeclara funciones que quiere llamar así,ni siquiera necesita paréntesis:</target>
        </trans-unit>
        <trans-unit id="84798f732a21afa219bddab775dec767e752c195" translate="yes" xml:space="preserve">
          <source>In fact, one can put this check into a POSTCALL: section as well. Together with PREINIT: simplifications, this leads to:</source>
          <target state="translated">De hecho,uno puede poner este cheque en una sección POSTCALL:también.Junto con las simplificaciones de PREINIT:,esto lleva a:</target>
        </trans-unit>
        <trans-unit id="ebdfc7c600521f2938c49c5c2856e2e2b5dd3018" translate="yes" xml:space="preserve">
          <source>In fact, the above is a specific instance of a more general problem: we can't guarantee to produce BEGIN blocks or &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; declarations in exactly the right place. So if you use a module which affects compilation (such as by over-riding keywords, overloading constants or whatever) then the output code might not work as intended.</source>
          <target state="translated">De hecho, lo anterior es una instancia espec&amp;iacute;fica de un problema m&amp;aacute;s general: no podemos garantizar la producci&amp;oacute;n de bloques BEGIN o el &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; declaraciones exactamente en el lugar correcto. Por lo tanto, si usa un m&amp;oacute;dulo que afecta la compilaci&amp;oacute;n (por ejemplo, al anular palabras clave, sobrecargar constantes o lo que sea), es posible que el c&amp;oacute;digo de salida no funcione como se esperaba.</target>
        </trans-unit>
        <trans-unit id="c1ab69392f6a1419564af0b0e6efcb82e0db27bf" translate="yes" xml:space="preserve">
          <source>In fact, the above is a specific instance of a more general problem: we can't guarantee to produce BEGIN blocks or &lt;code&gt;use&lt;/code&gt; declarations in exactly the right place. So if you use a module which affects compilation (such as by over-riding keywords, overloading constants or whatever) then the output code might not work as intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e1b83f62468f002550abce8cac5172e95bf62f" translate="yes" xml:space="preserve">
          <source>In fact, the context stack is actually part of a stack-of-stacks system; whenever something unusual is done such as calling a &lt;code&gt;DESTROY&lt;/code&gt; or tie handler, a new stack is pushed, then popped at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7429eb30ff20d649952850c91750d9f7b5208e" translate="yes" xml:space="preserve">
          <source>In fact, the skeleton modules shown above are fully functional</source>
          <target state="translated">De hecho,los módulos del esqueleto que se muestran arriba son completamente funcionales</target>
        </trans-unit>
        <trans-unit id="c08ff00d22228fb68d08d8dbc97cd530161909a6" translate="yes" xml:space="preserve">
          <source>In fact, what can happen is that the Perl subroutine you have called can access the &lt;code&gt;@_&lt;/code&gt; array from a previous Perl subroutine. This will occur when the code that is executing the</source>
          <target state="translated">De hecho, lo que puede suceder es que la subrutina Perl que ha llamado pueda acceder a la matriz &lt;code&gt;@_&lt;/code&gt; desde una subrutina Perl anterior. Esto ocurrir&amp;aacute; cuando el c&amp;oacute;digo que est&amp;aacute; ejecutando el</target>
        </trans-unit>
        <trans-unit id="5159536cbfaf213ba408ca2109f0a550ad3339ea" translate="yes" xml:space="preserve">
          <source>In fact, you can use as many repeated angle-brackets as you like so long as you have the same number of them in the opening and closing delimiters, and make sure that whitespace immediately follows the last '&amp;lt;' of the opening delimiter, and immediately precedes the first '&amp;gt;' of the closing delimiter. (The whitespace is ignored.) So the following will also work:</source>
          <target state="translated">De hecho, puede usar tantos corchetes angulares repetidos como desee siempre que tenga el mismo n&amp;uacute;mero de ellos en los delimitadores de apertura y cierre, y aseg&amp;uacute;rese de que el espacio en blanco siga inmediatamente al &amp;uacute;ltimo '&amp;lt;' del delimitador de apertura, y precede inmediatamente al primer '&amp;gt;' del delimitador de cierre. (El espacio en blanco se ignora). Por lo tanto, lo siguiente tambi&amp;eacute;n funcionar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="eeef4cfd76862c3bdd64f8624b59be39f324bbb5" translate="yes" xml:space="preserve">
          <source>In former versions of FindBin there was no &lt;code&gt;again&lt;/code&gt; function. The workaround was to force the &lt;code&gt;BEGIN&lt;/code&gt; block to be executed again:</source>
          <target state="translated">En versiones anteriores de FindBin no hab&amp;iacute;a funci&amp;oacute;n de &lt;code&gt;again&lt;/code&gt; . La soluci&amp;oacute;n alternativa fue forzar la ejecuci&amp;oacute;n del bloque &lt;code&gt;BEGIN&lt;/code&gt; nuevamente:</target>
        </trans-unit>
        <trans-unit id="81bdf0d224677096b960b752cf09cb19f280de31" translate="yes" xml:space="preserve">
          <source>In function definitions, name starts in column 0 (return value-type is on previous line)</source>
          <target state="translated">En las definiciones de las funciones,el nombre comienza en la columna 0 (el tipo de valor de retorno está en la línea anterior)</target>
        </trans-unit>
        <trans-unit id="bd418e3b4eaab23d82d37560db5e07798de430bc" translate="yes" xml:space="preserve">
          <source>In general the flags should be preserved in &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; after compilation, although the regex engine might want to add or delete some of them to invoke or disable some special behavior in Perl. The flags along with any special behavior they cause are documented below:</source>
          <target state="translated">En general, los indicadores deben conservarse en &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; despu&amp;eacute;s de la compilaci&amp;oacute;n, aunque el motor de expresiones regulares puede querer agregar o eliminar algunos de ellos para invocar o deshabilitar alg&amp;uacute;n comportamiento especial en Perl. Las banderas junto con cualquier comportamiento especial que causan se documentan a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="1f8c3a47d2c8a27c27215b79122a4036f3b68a20" translate="yes" xml:space="preserve">
          <source>In general you will not be creating contexts directly. To obtain a context you should always use &lt;code&gt;context()&lt;/code&gt; which is exported by the &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fd7f62eb6b7876bb97cdf2307bf8323fe78e66" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;#binmode-FILEHANDLE%2C-LAYER&quot;&gt;&lt;code&gt;binmode&lt;/code&gt;&lt;/a&gt; should be called after &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; but before any I/O is done on the filehandle. Calling &lt;a href=&quot;#binmode-FILEHANDLE%2C-LAYER&quot;&gt;&lt;code&gt;binmode&lt;/code&gt;&lt;/a&gt; normally flushes any pending buffered output data (and perhaps pending input data) on the handle. An exception to this is the &lt;code&gt;:encoding&lt;/code&gt; layer that changes the default character encoding of the handle. The &lt;code&gt;:encoding&lt;/code&gt; layer sometimes needs to be called in mid-stream, and it doesn't flush the stream. &lt;code&gt;:encoding&lt;/code&gt; also implicitly pushes on top of itself the &lt;code&gt;:utf8&lt;/code&gt; layer because internally Perl operates on UTF8-encoded Unicode characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0fc22fd30f9556953173964854405f4701bcb8" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Module ()&lt;/code&gt; is recommended over &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Module&lt;/code&gt; , because it determines module availability at compile time, not in the middle of your program's execution. An exception would be if two modules each tried to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; each other, and each also called a function from that other module. In that case, it's easy to use &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">En general, se recomienda &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Module ()&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Module&lt;/code&gt; , porque determina la disponibilidad del m&amp;oacute;dulo en tiempo de compilaci&amp;oacute;n, no en medio de la ejecuci&amp;oacute;n de su programa. Una excepci&amp;oacute;n ser&amp;iacute;a si dos m&amp;oacute;dulos intentaran &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; entre s&amp;iacute;, y cada uno tambi&amp;eacute;n llamara a una funci&amp;oacute;n de ese otro m&amp;oacute;dulo. En ese caso, es f&amp;aacute;cil de usar &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3cf26c1ed42bf5b3d9ea8691cda05dc89cb71bf" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;use Module ()&lt;/code&gt; is recommended over &lt;code&gt;require Module&lt;/code&gt;, because it determines module availability at compile time, not in the middle of your program's execution. An exception would be if two modules each tried to &lt;code&gt;use&lt;/code&gt; each other, and each also called a function from that other module. In that case, it's easy to use &lt;code&gt;require&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781b20a886715083a2a3027ccb146131c22fb0e2" translate="yes" xml:space="preserve">
          <source>In general, Dotted-Decimal Versions permit the greatest amount of freedom to specify a version, whereas Decimal Versions enforce a certain uniformity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f587f957aa9f0d170955c8740a69ee20fd8f9433" translate="yes" xml:space="preserve">
          <source>In general, a value of 256MB (or &quot;256*1024*1024&quot;) is sufficient for Perl to compile at maximum optimization.</source>
          <target state="translated">En general,un valor de 256MB (o &quot;256*1024*1024&quot;)es suficiente para que Perl compile con la máxima optimización.</target>
        </trans-unit>
        <trans-unit id="131ff1b059b6e02af211bb33de067db4f34cad70" translate="yes" xml:space="preserve">
          <source>In general, any generated Makefile checks for the current version of MakeMaker and the version the Makefile was built under. If NO_VC is set, the version check is neglected. Do not write this into your Makefile.PL, use it interactively instead.</source>
          <target state="translated">En general,cualquier Makefile generado comprueba la versión actual de MakeMaker y la versión bajo la que se construyó el Makefile.Si se establece NO_VC,el chequeo de la versión se descuida.No escriba esto en su Makefile.PL,utilícelo de forma interactiva en su lugar.</target>
        </trans-unit>
        <trans-unit id="ed1c758f94f821404f1b8e30ece4cfe61ee49211" translate="yes" xml:space="preserve">
          <source>In general, binmode() should be called after open() but before any I/O is done on the filehandle. Calling binmode() normally flushes any pending buffered output data (and perhaps pending input data) on the handle. An exception to this is the &lt;code&gt;:encoding&lt;/code&gt; layer that changes the default character encoding of the handle; see &lt;a href=&quot;#open&quot;&gt;open&lt;/a&gt;. The &lt;code&gt;:encoding&lt;/code&gt; layer sometimes needs to be called in mid-stream, and it doesn't flush the stream. The &lt;code&gt;:encoding&lt;/code&gt; also implicitly pushes on top of itself the &lt;code&gt;:utf8&lt;/code&gt; layer because internally Perl operates on UTF8-encoded Unicode characters.</source>
          <target state="translated">En general, binmode () debe llamarse despu&amp;eacute;s de open () pero antes de que se realice cualquier E / S en el identificador de archivo. Llamar a binmode () normalmente vac&amp;iacute;a cualquier dato de salida almacenado en b&amp;uacute;fer pendiente (y quiz&amp;aacute;s datos de entrada pendientes) en el identificador. Una excepci&amp;oacute;n a esto es &lt;code&gt;:encoding&lt;/code&gt; capa de codificaci&amp;oacute;n que cambia la codificaci&amp;oacute;n de caracteres predeterminada del identificador; ver &lt;a href=&quot;#open&quot;&gt;abierto&lt;/a&gt; . La capa de &lt;code&gt;:encoding&lt;/code&gt; veces debe llamarse en medio de la transmisi&amp;oacute;n y no vac&amp;iacute;a la transmisi&amp;oacute;n. La &lt;code&gt;:encoding&lt;/code&gt; tambi&amp;eacute;n empuja impl&amp;iacute;citamente sobre s&amp;iacute; misma la capa &lt;code&gt;:utf8&lt;/code&gt; porque internamente Perl opera en caracteres Unicode codificados en UTF8.</target>
        </trans-unit>
        <trans-unit id="fcb23e7c19f51e6c8ab203413d609cc6c59591a8" translate="yes" xml:space="preserve">
          <source>In general, binmode() should be called after open() but before any I/O is done on the filehandle. Calling binmode() normally flushes any pending buffered output data (and perhaps pending input data) on the handle. An exception to this is the &lt;code&gt;:encoding&lt;/code&gt; layer that changes the default character encoding of the handle; see &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;. The &lt;code&gt;:encoding&lt;/code&gt; layer sometimes needs to be called in mid-stream, and it doesn't flush the stream. The &lt;code&gt;:encoding&lt;/code&gt; also implicitly pushes on top of itself the &lt;code&gt;:utf8&lt;/code&gt; layer because internally Perl operates on UTF8-encoded Unicode characters.</source>
          <target state="translated">En general, binmode () debe llamarse despu&amp;eacute;s de open () pero antes de que se realice cualquier E / S en el identificador de archivo. Llamar a binmode () normalmente vac&amp;iacute;a cualquier dato de salida almacenado en b&amp;uacute;fer pendiente (y quiz&amp;aacute;s datos de entrada pendientes) en el identificador. Una excepci&amp;oacute;n a esto es &lt;code&gt;:encoding&lt;/code&gt; capa de codificaci&amp;oacute;n que cambia la codificaci&amp;oacute;n de caracteres predeterminada del identificador; ver &lt;a href=&quot;open&quot;&gt;abierto&lt;/a&gt; . La capa de &lt;code&gt;:encoding&lt;/code&gt; veces debe llamarse en medio de la transmisi&amp;oacute;n y no vac&amp;iacute;a la transmisi&amp;oacute;n. La &lt;code&gt;:encoding&lt;/code&gt; tambi&amp;eacute;n empuja impl&amp;iacute;citamente sobre s&amp;iacute; misma la capa &lt;code&gt;:utf8&lt;/code&gt; porque internamente Perl opera en caracteres Unicode codificados en UTF8.</target>
        </trans-unit>
        <trans-unit id="9112f219636184c8537b2886b966af1ac78ce610" translate="yes" xml:space="preserve">
          <source>In general, documentation should describe what Perl does &quot;now&quot; rather than what it used to do. It's perfectly reasonable to include notes in documentation about how behaviour has changed from previous releases, but, with very few exceptions, documentation isn't &quot;dual-life&quot; -- it doesn't need to fully describe how all old versions used to work.</source>
          <target state="translated">En general,la documentación debería describir lo que Perl hace &quot;ahora&quot; en lugar de lo que solía hacer.Es perfectamente razonable incluir notas en la documentación sobre cómo ha cambiado el comportamiento de las versiones anteriores,pero,con muy pocas excepciones,la documentación no es &quot;de doble vida&quot;,no necesita describir completamente cómo funcionaban todas las versiones antiguas.</target>
        </trans-unit>
        <trans-unit id="a074510bee3b614b8e7a71cd1b464639580f9e03" translate="yes" xml:space="preserve">
          <source>In general, don't directly access the system in code meant to be portable. That means, no &lt;a href=&quot;perlfunc#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#fork&quot;&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#pipe-READHANDLE%2CWRITEHANDLE&quot;&gt;&lt;code&gt;pipe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlop#qx%2FSTRING%2F&quot;&gt;&lt;code&gt;``&lt;/code&gt; or &lt;code&gt;qx//&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;|&lt;/code&gt;, nor any of the other things that makes being a Perl hacker worth being.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bded401bb84dc2978238aa4ca8d1e409847f99" translate="yes" xml:space="preserve">
          <source>In general, don't directly access the system in code meant to be portable. That means, no &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;``&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with a &lt;code&gt;|&lt;/code&gt;, nor any of the other things that makes being a Perl hacker worth being.</source>
          <target state="translated">En general, no acceda directamente al sistema en un c&amp;oacute;digo destinado a ser port&amp;aacute;til. Eso significa que no &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;``&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; con un &lt;code&gt;|&lt;/code&gt; , ni ninguna de las otras cosas que hacen que valga la pena ser un hacker de Perl.</target>
        </trans-unit>
        <trans-unit id="0d0cabae10db7de03b357778791ebb3ae57baf9a" translate="yes" xml:space="preserve">
          <source>In general, functions in Perl that serve as wrappers for system calls (&quot;syscalls&quot;) of the same name (like &lt;a href=&quot;http://man.he.net/man2/chown&quot;&gt;chown(2)&lt;/a&gt;, &lt;a href=&quot;http://man.he.net/man2/fork&quot;&gt;fork(2)&lt;/a&gt;, &lt;a href=&quot;http://man.he.net/man2/closedir&quot;&gt;closedir(2)&lt;/a&gt;, etc.) return true when they succeed and &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; otherwise, as is usually mentioned in the descriptions below. This is different from the C interfaces, which return &lt;code&gt;-1&lt;/code&gt; on failure. Exceptions to this rule include &lt;a href=&quot;#wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#waitpid-PID%2CFLAGS&quot;&gt;&lt;code&gt;waitpid&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#syscall-NUMBER%2C-LIST&quot;&gt;&lt;code&gt;syscall&lt;/code&gt;&lt;/a&gt;. System calls also set the special &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; variable on failure. Other functions do not, except accidentally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4812a1f34a0b31a652cad991bba82f8957d788f2" translate="yes" xml:space="preserve">
          <source>In general, functions in Perl that serve as wrappers for system calls (&quot;syscalls&quot;) of the same name (like chown(2), fork(2), closedir(2), etc.) return true when they succeed and &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; otherwise, as is usually mentioned in the descriptions below. This is different from the C interfaces, which return &lt;code&gt;-1&lt;/code&gt; on failure. Exceptions to this rule include &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;. System calls also set the special &lt;code&gt;$!&lt;/code&gt; variable on failure. Other functions do not, except accidentally.</source>
          <target state="translated">En general, las funciones en Perl que sirven como envoltorios para llamadas al sistema (&quot;syscalls&quot;) del mismo nombre (como chown (2), fork (2), closedir (2), etc.) devuelven true cuando tienen &amp;eacute;xito y &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso contrario. , como se suele mencionar en las descripciones siguientes. Esto es diferente de las interfaces C, que devuelven &lt;code&gt;-1&lt;/code&gt; en caso de falla. Las excepciones a esta regla incluyen &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; . Las llamadas al sistema tambi&amp;eacute;n establecen el &lt;code&gt;$!&lt;/code&gt; variable en caso de falla. Otras funciones no, excepto accidentalmente.</target>
        </trans-unit>
        <trans-unit id="2c889b6cf9a5ef75bf23f5e723b8633717436597" translate="yes" xml:space="preserve">
          <source>In general, if something strange has gone wrong with your program and you're not sure where you should look for help, try making your code comply with &lt;b&gt;use &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;use &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;&lt;/b&gt;. These will often point out exactly where the trouble is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d920741739edbfdbddc6a5906e0b7d1f697b74b" translate="yes" xml:space="preserve">
          <source>In general, if something strange has gone wrong with your program and you're not sure where you should look for help, try making your code comply with &lt;b&gt;use strict&lt;/b&gt; and &lt;b&gt;use warnings&lt;/b&gt;. These will often point out exactly where the trouble is.</source>
          <target state="translated">En general, si algo extra&amp;ntilde;o ha salido mal con su programa y no est&amp;aacute; seguro de d&amp;oacute;nde debe buscar ayuda, intente hacer que su c&amp;oacute;digo cumpla con &lt;b&gt;use estricto&lt;/b&gt; y &lt;b&gt;use advertencias&lt;/b&gt; . Estos a menudo se&amp;ntilde;alar&amp;aacute;n exactamente d&amp;oacute;nde est&amp;aacute; el problema.</target>
        </trans-unit>
        <trans-unit id="4f338449d4134d94449e7a10434356d790a883d8" translate="yes" xml:space="preserve">
          <source>In general, it is better to create directories with a permissive MASK and let the user modify that with their &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; than it is to supply a restrictive MASK and give the user no way to be more permissive. The exceptions to this rule are when the file or directory should be kept private (mail files, for instance). The perlfunc(1) entry on &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; discusses the choice of MASK in more detail.</source>
          <target state="translated">En general, es mejor crear directorios con una MASK permisiva y dejar que el usuario modifique eso con su &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; que proporcionar una MASK restrictiva y no darle al usuario forma de ser m&amp;aacute;s permisivo. Las excepciones a esta regla son cuando el archivo o directorio debe mantenerse privado (archivos de correo, por ejemplo). La entrada perlfunc (1) en &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; analiza la elecci&amp;oacute;n de MASK con m&amp;aacute;s detalle.</target>
        </trans-unit>
        <trans-unit id="859fd0676cfab168da7696f014146535cbe0534d" translate="yes" xml:space="preserve">
          <source>In general, it is better to create directories with a permissive MASK and let the user modify that with their &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; than it is to supply a restrictive MASK and give the user no way to be more permissive. The exceptions to this rule are when the file or directory should be kept private (mail files, for instance). The perlfunc(1) entry on &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; discusses the choice of MASK in more detail.</source>
          <target state="translated">En general, es mejor crear directorios con una MASK permisiva y dejar que el usuario modifique eso con su &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; que proporcionar una MASK restrictiva y no darle al usuario forma de ser m&amp;aacute;s permisivo. Las excepciones a esta regla son cuando el archivo o directorio debe mantenerse privado (archivos de correo, por ejemplo). La entrada perlfunc (1) en &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; analiza la elecci&amp;oacute;n de MASK con m&amp;aacute;s detalle.</target>
        </trans-unit>
        <trans-unit id="545124287118e73717798516d78a3a8f08195676" translate="yes" xml:space="preserve">
          <source>In general, it is better to create directories with a permissive MODE and let the user modify that with their &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt; than it is to supply a restrictive MODE and give the user no way to be more permissive. The exceptions to this rule are when the file or directory should be kept private (mail files, for instance). The documentation for &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt; discusses the choice of MODE in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa73f4a0bd2efbebe02160b7edc4173916c47a23" translate="yes" xml:space="preserve">
          <source>In general, it is necessary to evaluate the suitaility of a script to run under &lt;code&gt;sudo&lt;/code&gt; specifically with that kind of execution environment in mind. It is neither necessary nor sufficient for the same script to be suitable to run in a traditional set-id arrangement, though many of the issues overlap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad59e50fb94fade64091c926ff1356d37dc6324" translate="yes" xml:space="preserve">
          <source>In general, it's not a good idea to write extensions that modify their input parameters, as in Example 3. Instead, you should probably return multiple values in an array and let the caller handle them (we'll do this in a later example). However, in order to better accommodate calling pre-existing C routines, which often do modify their input parameters, this behavior is tolerated.</source>
          <target state="translated">En general,no es una buena idea escribir extensiones que modifiquen sus parámetros de entrada,como en el ejemplo 3.En su lugar,probablemente deberías devolver múltiples valores en un array y dejar que la persona que llama los maneje (haremos esto en un ejemplo posterior).Sin embargo,para acomodar mejor las llamadas a rutinas C preexistentes,que a menudo modifican sus parámetros de entrada,este comportamiento es tolerado.</target>
        </trans-unit>
        <trans-unit id="183640340bc430e8d749b47027dff4d3c19e6dde" translate="yes" xml:space="preserve">
          <source>In general, memory allocation and de-allocation isn't something you can or should be worrying about much in Perl.</source>
          <target state="translated">En general,la asignación y des-asignación de la memoria no es algo de lo que puedas o debas preocuparte mucho en Perl.</target>
        </trans-unit>
        <trans-unit id="694bbd0c5ca4e3fe0dcb487e904ca0b8ccaba6cd" translate="yes" xml:space="preserve">
          <source>In general, please follow the particular style of the code you are patching.</source>
          <target state="translated">En general,por favor siga el estilo particular del código que está parcheando.</target>
        </trans-unit>
        <trans-unit id="76448cd179f9ee3d08189e3b4f4ab1ba0deb68f0" translate="yes" xml:space="preserve">
          <source>In general, production code should not have file paths hardcoded. Making them user-supplied or read from a configuration file is better, keeping in mind that file path syntax varies on different machines.</source>
          <target state="translated">En general,el código de producción no debe tener rutas de archivo codificadas.Es mejor hacerlos suministrados por el usuario o leerlos desde un archivo de configuración,teniendo en cuenta que la sintaxis de las rutas de los archivos varía en las diferentes máquinas.</target>
        </trans-unit>
        <trans-unit id="15ebd5f7d0f38eb2ba1e333ec5e5f7197b5f77f7" translate="yes" xml:space="preserve">
          <source>In general, the VMS version of ext() should properly handle input from extensions originally designed for a Unix or VMS environment. If you encounter problems, or discover cases where the search could be improved, please let us know.</source>
          <target state="translated">En general,la versión VMS de ext()debería manejar adecuadamente la entrada de las extensiones originalmente diseñadas para un entorno Unix o VMS.Si encuentra problemas,o descubre casos en los que la búsqueda podría ser mejorada,por favor háganoslo saber.</target>
        </trans-unit>
        <trans-unit id="6fd9faf570da706152bccbfe022ff5b9665bb3b0" translate="yes" xml:space="preserve">
          <source>In general, the benefit of a language is closely related to the skill of the people using that language. If you or your team can be faster, better, and stronger through Perl, you'll deliver more value. Remember, people often respond better to what they get out of it. If you run into resistance, figure out what those people get out of the other choice and how Perl might satisfy that requirement.</source>
          <target state="translated">En general,el beneficio de un idioma está estrechamente relacionado con la habilidad de las personas que lo utilizan.Si tú o tu equipo pueden ser más rápidos,mejores y más fuertes a través de Perl,entregarán más valor.Recuerda,la gente a menudo responde mejor a lo que obtiene de él.Si te encuentras con resistencia,averigua lo que esas personas obtienen de la otra opción y cómo Perl podría satisfacer ese requisito.</target>
        </trans-unit>
        <trans-unit id="c1872d2ad517d8a6c01a447283eab0112566170f" translate="yes" xml:space="preserve">
          <source>In general, the distributed kit for a Perl extension includes a file named Makefile.PL, which is a Perl program which is used to create a</source>
          <target state="translated">En general,el kit distribuido para una extensión Perl incluye un archivo llamado Makefile.PL,que es un programa Perl que se utiliza para crear un</target>
        </trans-unit>
        <trans-unit id="f86589e39189e52cad67f339850bc9ac0faa4d19" translate="yes" xml:space="preserve">
          <source>In general, the easiest path to portability is always to specify filenames in Unix format unless they will need to be processed by native commands or utilities. Because of this latter consideration, the &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt; module by default returns native format specifications regardless of input format. This default may be reversed so that filenames are always reported in Unix format by specifying the &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; feature logical in the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3997a59e30d7c4c978daa07218b367eb8d7c9173" translate="yes" xml:space="preserve">
          <source>In general, the easiest path to portability is always to specify filenames in Unix format unless they will need to be processed by native commands or utilities. Because of this latter consideration, the File::Spec module by default returns native format specifications regardless of input format. This default may be reversed so that filenames are always reported in Unix format by specifying the &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; feature logical in the environment.</source>
          <target state="translated">En general, el camino m&amp;aacute;s f&amp;aacute;cil hacia la portabilidad es siempre especificar nombres de archivo en formato Unix, a menos que necesiten ser procesados ​​por comandos o utilidades nativas. Debido a esta &amp;uacute;ltima consideraci&amp;oacute;n, el m&amp;oacute;dulo File :: Spec de forma predeterminada devuelve especificaciones de formato nativo independientemente del formato de entrada. Este valor predeterminado se puede revertir para que los nombres de archivo siempre se informen en formato Unix especificando la caracter&amp;iacute;stica &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; l&amp;oacute;gica en el entorno.</target>
        </trans-unit>
        <trans-unit id="28770c3025c0aede638f676bb8209a09acd6f0b6" translate="yes" xml:space="preserve">
          <source>In general, the perl interpreter views itself as the center of the universe as far as the Perl program goes. XS code is viewed as a help-mate, to accomplish things that perl doesn't do, or doesn't do fast enough, but always subservient to perl. The closer XS code adheres to this model, the less likely conflicts will occur.</source>
          <target state="translated">En general,el intérprete de perl se ve a sí mismo como el centro del universo en lo que respecta al programa de Perl.El código XS es visto como un compañero de ayuda,para lograr cosas que Perl no hace,o no lo hace lo suficientemente rápido,pero siempre subordinado a Perl.Cuanto más se adhiera el código XS a este modelo,menos probable es que se produzcan conflictos.</target>
        </trans-unit>
        <trans-unit id="0cb5716a5153b7e57dae5aef701221e438dfda22" translate="yes" xml:space="preserve">
          <source>In general, the standard modules work across platforms. Notable exceptions are the &lt;a href=&quot;cpan&quot;&gt;&lt;code&gt;CPAN&lt;/code&gt;&lt;/a&gt; module (which currently makes connections to external programs that may not be available), platform-specific modules (like &lt;a href=&quot;ExtUtils::MM_VMS&quot;&gt;&lt;code&gt;ExtUtils::MM_VMS&lt;/code&gt;&lt;/a&gt;), and DBM modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d0e4d941599d8b8058171587801ee612197c61" translate="yes" xml:space="preserve">
          <source>In general, the standard modules work across platforms. Notable exceptions are the &lt;code&gt;CPAN&lt;/code&gt; module (which currently makes connections to external programs that may not be available), platform-specific modules (like &lt;code&gt;ExtUtils::MM_VMS&lt;/code&gt; ), and DBM modules.</source>
          <target state="translated">En general, los m&amp;oacute;dulos est&amp;aacute;ndar funcionan en todas las plataformas. Las excepciones notables son el m&amp;oacute;dulo &lt;code&gt;CPAN&lt;/code&gt; (que actualmente hace conexiones a programas externos que pueden no estar disponibles), m&amp;oacute;dulos espec&amp;iacute;ficos de la plataforma (como &lt;code&gt;ExtUtils::MM_VMS&lt;/code&gt; ) y m&amp;oacute;dulos DBM.</target>
        </trans-unit>
        <trans-unit id="95121980b89b7a9fb796f03c8d74599823515afb" translate="yes" xml:space="preserve">
          <source>In general, there's no need to worry about the order of calls. They will be left-to-right, breadth-first, most-derived-first. This works perfectly for most inherited methods (including destructors), but is inappropriate for some kinds of methods (such as constructors, cloners, debuggers, and initializers) where it's more appropriate that the least-derived methods be called first (as more-derived methods may rely on the behaviour of their &quot;ancestors&quot;). In that case, instead of using the &lt;code&gt;EVERY&lt;/code&gt; pseudo-class:</source>
          <target state="translated">En general, no hay necesidad de preocuparse por el orden de las llamadas. Ser&amp;aacute;n de izquierda a derecha, primero en amplitud, primero en la mayor&amp;iacute;a derivada. Esto funciona perfectamente para la mayor&amp;iacute;a de los m&amp;eacute;todos heredados (incluidos los destructores), pero es inapropiado para algunos tipos de m&amp;eacute;todos (como constructores, clonadores, depuradores e inicializadores) donde es m&amp;aacute;s apropiado que los m&amp;eacute;todos menos derivados se llamen primero (como m&amp;aacute;s derivados los m&amp;eacute;todos pueden depender del comportamiento de sus &quot;antepasados&quot;). En ese caso, en lugar de usar &lt;code&gt;EVERY&lt;/code&gt; pseudoclase:</target>
        </trans-unit>
        <trans-unit id="294f7f9dd3d63c6c658291241c38389ef5522490" translate="yes" xml:space="preserve">
          <source>In general, though, it's best to use the &lt;code&gt;Sv*V&lt;/code&gt; macros.</source>
          <target state="translated">Sin embargo, en general, es mejor usar las macros &lt;code&gt;Sv*V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aabaf80efaeb23cca024ae206403fa19e6f8a255" translate="yes" xml:space="preserve">
          <source>In general, with &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; enabled, more detailed information will be available in the exit status for DCL scripts or other native VMS tools, and will give the expected information for Posix programs. It has not been made the default in order to preserve backward compatibility.</source>
          <target state="translated">En general, con &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; habilitado, estar&amp;aacute; disponible informaci&amp;oacute;n m&amp;aacute;s detallada en el estado de salida para scripts DCL u otras herramientas VMS nativas, y dar&amp;aacute; la informaci&amp;oacute;n esperada para los programas Posix. No se ha establecido como predeterminado para preservar la compatibilidad con versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="1d7815f81eaaf88a2d89c1f351c700ea10be85e9" translate="yes" xml:space="preserve">
          <source>In general, you can't do this. There are some things that may work for your situation though. People usually ask this question because they want to distribute their works without giving away the source code, and most solutions trade disk space for convenience. You probably won't see much of a speed increase either, since most solutions simply bundle a Perl interpreter in the final product (but see &lt;a href=&quot;#How-can-I-make-my-Perl-program-run-faster%3F&quot;&gt;&quot;How can I make my Perl program run faster?&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d941c018a8912081ee9a18eaddf237ed10e20a20" translate="yes" xml:space="preserve">
          <source>In general, you can't do this. There are some things that may work for your situation though. People usually ask this question because they want to distribute their works without giving away the source code, and most solutions trade disk space for convenience. You probably won't see much of a speed increase either, since most solutions simply bundle a Perl interpreter in the final product (but see &lt;a href=&quot;#How-can-I-make-my-Perl-program-run-faster%3f&quot;&gt;How can I make my Perl program run faster?&lt;/a&gt;).</source>
          <target state="translated">En general, no puede hacer esto. Sin embargo, hay algunas cosas que pueden funcionar para su situaci&amp;oacute;n. La gente suele hacer esta pregunta porque quiere distribuir sus trabajos sin revelar el c&amp;oacute;digo fuente, y la mayor&amp;iacute;a de las soluciones intercambian espacio en disco por conveniencia. Probablemente tampoco ver&amp;aacute; mucho aumento de velocidad, ya que la mayor&amp;iacute;a de las soluciones simplemente incluyen un int&amp;eacute;rprete de Perl en el producto final (pero consulte &lt;a href=&quot;#How-can-I-make-my-Perl-program-run-faster%3f&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo hacer que mi programa Perl se ejecute m&amp;aacute;s r&amp;aacute;pido?&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a9eadd2908a4639d8decf9b9f18aef810c6f9990" translate="yes" xml:space="preserve">
          <source>In general, you don't &quot;declare&quot; a structure. Just use a (probably anonymous) hash reference. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; and &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; for details. Here's an example:</source>
          <target state="translated">En general, no &quot;declaras&quot; una estructura. Simplemente use una referencia hash (probablemente an&amp;oacute;nima). Consulte &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; y &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; para obtener m&amp;aacute;s detalles. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="70d4ca9b1495d90b59e6399e064486d24aa6cc52" translate="yes" xml:space="preserve">
          <source>In general, you don't, because you don't know whether the recipient has a color-aware display device. If you know that they have an ANSI terminal that understands color, you can use the &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; module from CPAN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f00c5d5b02fc95d1502392b2b9783083f707dee" translate="yes" xml:space="preserve">
          <source>In general, you don't, because you don't know whether the recipient has a color-aware display device. If you know that they have an ANSI terminal that understands color, you can use the &lt;a href=&quot;term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; module from CPAN:</source>
          <target state="translated">En general, no lo sabe, porque no sabe si el destinatario tiene un dispositivo de visualizaci&amp;oacute;n con reconocimiento de colores. Si sabe que tienen un terminal ANSI que entiende el color, puede usar el m&amp;oacute;dulo &lt;a href=&quot;term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; de CPAN:</target>
        </trans-unit>
        <trans-unit id="2f87cb8b42da40e06ddcf5b3026af1eac6aa3d5a" translate="yes" xml:space="preserve">
          <source>In general, you either have to know what you're dealing with, or you have to guess. The API function &lt;code&gt;is_utf8_string&lt;/code&gt; can help; it'll tell you if a string contains only valid UTF-8 characters, and the chances of a non-UTF-8 string looking like valid UTF-8 become very small very quickly with increasing string length. On a character-by-character basis, &lt;code&gt;isUTF8_CHAR&lt;/code&gt; will tell you whether the current character in a string is valid UTF-8.</source>
          <target state="translated">En general, tienes que saber con qu&amp;eacute; est&amp;aacute;s lidiando o tienes que adivinar. La funci&amp;oacute;n API &lt;code&gt;is_utf8_string&lt;/code&gt; puede ayudar; le dir&amp;aacute; si una cadena contiene solo caracteres UTF-8 v&amp;aacute;lidos, y las posibilidades de que una cadena que no sea UTF-8 parezca UTF-8 v&amp;aacute;lida se reduzcan muy r&amp;aacute;pidamente al aumentar la longitud de la cadena. Car&amp;aacute;cter por car&amp;aacute;cter, &lt;code&gt;isUTF8_CHAR&lt;/code&gt; le dir&amp;aacute; si el car&amp;aacute;cter actual en una cadena es UTF-8 v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="0f7f43b24f7b332fad6c89f7cd9bd3e7d7da5112" translate="yes" xml:space="preserve">
          <source>In hints/os390.sh, selecting -Dusedl will default to *also* select -Duseshrplib. Having a shared plib not only requires LIBPATH to be set to the correct location of libperl.so but also makes it close to impossible to run more than one different perl that was built this way at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ea48aedd1cf988ca4c353ab67e2113694ba714" translate="yes" xml:space="preserve">
          <source>In human terms, it's a funny way of passing arguments to a subroutine when you define it as well as when you call it. It's useful for setting up little bits of code to run later, such as callbacks. You can even do object-oriented stuff with it, though Perl already provides a different mechanism to do that--see &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">En t&amp;eacute;rminos humanos, es una forma divertida de pasar argumentos a una subrutina tanto cuando la define como cuando la llama. Es &amp;uacute;til para configurar peque&amp;ntilde;os fragmentos de c&amp;oacute;digo para que se ejecuten m&amp;aacute;s tarde, como devoluciones de llamada. Incluso puede hacer cosas orientadas a objetos con &amp;eacute;l, aunque Perl ya proporciona un mecanismo diferente para hacerlo: consulte &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ba4c53f21b8779523425f16e680264ebae0decb" translate="yes" xml:space="preserve">
          <source>In inverted bracketed character classes, Perl ignores the Unicode rules that normally say that named sequence, and certain characters should match a sequence of multiple characters use under caseless &lt;code&gt;/i&lt;/code&gt; matching. Following those rules could lead to highly confusing situations:</source>
          <target state="translated">En las clases de caracteres entre corchetes invertidos, Perl ignora las reglas Unicode que normalmente dicen que la secuencia con nombre, y ciertos caracteres deben coincidir con una secuencia de varios caracteres utilizados bajo coincidencia &lt;code&gt;/i&lt;/code&gt; sin may&amp;uacute;sculas y min&amp;uacute;sculas . Seguir esas reglas podr&amp;iacute;a llevar a situaciones muy confusas:</target>
        </trans-unit>
        <trans-unit id="60a70875c03150cbfc8e14e2cc2dec49ecd50454" translate="yes" xml:space="preserve">
          <source>In its most basic usage, &lt;code&gt;ok(...)&lt;/code&gt; simply takes a single scalar expression. If its value is true, the test passes; if false, the test fails. Examples:</source>
          <target state="translated">En su uso m&amp;aacute;s b&amp;aacute;sico, &lt;code&gt;ok(...)&lt;/code&gt; simplemente toma una sola expresi&amp;oacute;n escalar. Si su valor es verdadero, la prueba pasa; si es falso, la prueba falla. Ejemplos:</target>
        </trans-unit>
        <trans-unit id="4d817298c353371e9d0b73c75cf1950195e64063" translate="yes" xml:space="preserve">
          <source>In its second form, &lt;code&gt;cond_wait&lt;/code&gt; takes a shared, &lt;b&gt;unlocked&lt;/b&gt; variable followed by a shared, &lt;b&gt;locked&lt;/b&gt; variable. The second variable is unlocked and thread execution suspended until another thread signals the first variable.</source>
          <target state="translated">En su segunda forma, &lt;code&gt;cond_wait&lt;/code&gt; toma una variable &lt;b&gt;desbloqueada&lt;/b&gt; compartida seguida de una variable &lt;b&gt;bloqueada&lt;/b&gt; compartida . La segunda variable se desbloquea y la ejecuci&amp;oacute;n del hilo se suspende hasta que otro hilo se&amp;ntilde;ala la primera variable.</target>
        </trans-unit>
        <trans-unit id="4c9702efe584ddf3df38f0a305879394e6c945fd" translate="yes" xml:space="preserve">
          <source>In its two-argument form, &lt;code&gt;cond_timedwait&lt;/code&gt; takes a &lt;b&gt;locked&lt;/b&gt; variable and an absolute timeout in</source>
          <target state="translated">En su forma de dos argumentos, &lt;code&gt;cond_timedwait&lt;/code&gt; toma una variable &lt;b&gt;bloqueada&lt;/b&gt; y un tiempo de espera absoluto en</target>
        </trans-unit>
        <trans-unit id="fbaa31119043f388b0d536e0c6af6beff83b01ef" translate="yes" xml:space="preserve">
          <source>In its two-argument form, &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;arg2&lt;/i&gt;)&lt;/code&gt; compares the two scalar values to see if they match. They match if both are undefined, or if</source>
          <target state="translated">En su forma de dos argumentos, &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;arg2&lt;/i&gt;)&lt;/code&gt; compara los dos valores escalares para ver si coinciden. Coinciden si ambos son indefinidos, o si</target>
        </trans-unit>
        <trans-unit id="463cd3fb9dde14730ac60103e974616f5a19b70d" translate="yes" xml:space="preserve">
          <source>In late 2009, David Golden organized the version 2 proposal review process. David and Ricardo Signes drafted the final version 2 spec in April 2010 based on the version 1.4 spec and patches contributed during the proposal process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278b05f5c861132c7f4bc86f277c1645adbbdf57" translate="yes" xml:space="preserve">
          <source>In less grandiose terms, the first part of the job is to turn a pattern into something the computer can efficiently use to find the matching point in the string, and the second part is performing the search itself.</source>
          <target state="translated">En términos menos grandiosos,la primera parte del trabajo es convertir un patrón en algo que la computadora pueda usar eficientemente para encontrar el punto de coincidencia en la cadena,y la segunda parte es realizar la búsqueda por sí misma.</target>
        </trans-unit>
        <trans-unit id="f53ef23dfb1a32e84061a4ee3198583f6963d3be" translate="yes" xml:space="preserve">
          <source>In line 7, we make sure that the SV will have enough room to accommodate the old string, the new string and the null terminator. If &lt;code&gt;LEN&lt;/code&gt; isn't big enough, &lt;code&gt;SvGROW&lt;/code&gt; will reallocate space for us.</source>
          <target state="translated">En la l&amp;iacute;nea 7, nos aseguramos de que el SV tenga suficiente espacio para acomodar la cadena antigua, la nueva y el terminador nulo. Si &lt;code&gt;LEN&lt;/code&gt; no es lo suficientemente grande, &lt;code&gt;SvGROW&lt;/code&gt; reasignar&amp;aacute; espacio para nosotros.</target>
        </trans-unit>
        <trans-unit id="6338eafb38b19e3533d3d49a05621b9aaa4f97d8" translate="yes" xml:space="preserve">
          <source>In line mode, &lt;code&gt;filter_read&lt;/code&gt; will append the next source line to the end of the &lt;code&gt;$_&lt;/code&gt; scalar.</source>
          <target state="translated">En el modo de l&amp;iacute;nea, &lt;code&gt;filter_read&lt;/code&gt; agregar&amp;aacute; la siguiente l&amp;iacute;nea fuente al final del escalar &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a450e27bd36ea332e7d75f6381cc8a12782b5b7a" translate="yes" xml:space="preserve">
          <source>In list context (which is usually what you want), the function returns a (possibly empty) list of language tags representing (best first) what languages the user apparently would accept output in. You will probably want to pass the output of this through &lt;code&gt;I18N::LangTags::implicate_supers_tightly(...)&lt;/code&gt; or &lt;code&gt;I18N::LangTags::implicate_supers(...)&lt;/code&gt; , like so:</source>
          <target state="translated">En el contexto de la lista (que suele ser lo que desea), la funci&amp;oacute;n devuelve una lista (posiblemente vac&amp;iacute;a) de etiquetas de idioma que representan (lo mejor primero) los idiomas en los que el usuario aparentemente aceptar&amp;iacute;a la salida. &lt;code&gt;I18N::LangTags::implicate_supers_tightly(...)&lt;/code&gt; o &lt;code&gt;I18N::LangTags::implicate_supers(...)&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="b8b769bcccabaec9629d49138a4947e089422ab4" translate="yes" xml:space="preserve">
          <source>In list context (which is usually what you want), the function returns a (possibly empty) list of language tags representing (best first) what languages the user apparently would accept output in. You will probably want to pass the output of this through &lt;code&gt;I18N::LangTags::implicate_supers_tightly(...)&lt;/code&gt; or &lt;code&gt;I18N::LangTags::implicate_supers(...)&lt;/code&gt;, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239ff52c002bacbd9ef8a650976d52e44cb1392b" translate="yes" xml:space="preserve">
          <source>In list context it returns a two element list, the first element containing the pattern and the second containing the modifiers used when the pattern was compiled.</source>
          <target state="translated">En el contexto de la lista,devuelve una lista de dos elementos,el primero de los cuales contiene la pauta y el segundo los modificadores utilizados cuando se compiló la pauta.</target>
        </trans-unit>
        <trans-unit id="a8954af69f3e9417a81eb4843c66328678eb290e" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;//g&lt;/code&gt; returns a list of matched groupings, or if there are no groupings, a list of matches to the whole regex. So</source>
          <target state="translated">En el contexto de la lista, &lt;code&gt;//g&lt;/code&gt; devuelve una lista de agrupaciones coincidentes, o si no hay agrupaciones, una lista de coincidencias con toda la expresi&amp;oacute;n regular. Entonces</target>
        </trans-unit>
        <trans-unit id="4a59e7f9e300ced2156a7bfdcb5c2ed656175ffd" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;//g&lt;/code&gt; returns a list of matched groupings, or if there are no groupings, a list of matches to the whole regexp. So if we wanted just the words, we could use</source>
          <target state="translated">En el contexto de la lista, &lt;code&gt;//g&lt;/code&gt; devuelve una lista de agrupaciones coincidentes, o si no hay agrupaciones, una lista de coincidencias con toda la expresi&amp;oacute;n regular. Entonces, si solo quisi&amp;eacute;ramos las palabras, podr&amp;iacute;amos usar</target>
        </trans-unit>
        <trans-unit id="6e2b15caf8e0e18f5890e016db28894ce2475850" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;/g&lt;/code&gt; returns a list of matched groupings, or if there are no groupings, a list of matches to the whole regex. So</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa78ab0459f0c546f62a6ba44d40e5cfcd5ba381" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;/g&lt;/code&gt; returns a list of matched groupings, or if there are no groupings, a list of matches to the whole regexp. So if we wanted just the words, we could use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce23af9639d689001f6ad6f1b438efaee509bdfe" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;extract_delimited&lt;/code&gt; returns a array of three elements, the extracted substring (</source>
          <target state="translated">En el contexto de la lista, &lt;code&gt;extract_delimited&lt;/code&gt; devuelve una matriz de tres elementos, la subcadena extra&amp;iacute;da (</target>
        </trans-unit>
        <trans-unit id="e472cb823d18651b8bfb2582f84acfb33002068c" translate="yes" xml:space="preserve">
          <source>In list context, F(0) and F(n) is the first and last number in the output, respectively. For example, if $n is 12, then &lt;code&gt;@F = $n-&amp;gt;bfib()&lt;/code&gt; returns the following values, F(0) to F(12):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5889fdbc3b684f4564d298e03582627a0f1d67cc" translate="yes" xml:space="preserve">
          <source>In list context, L(0) and L(n) is the first and last number in the output, respectively. For example, if $n is 12, then &lt;code&gt;@L = $n-&amp;gt;blucas()&lt;/code&gt; returns the following values, L(0) to L(12):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fefe43cf3ce99aee8bf62db2fc923ea0e22144" translate="yes" xml:space="preserve">
          <source>In list context, a match &lt;code&gt;/regex/&lt;/code&gt; with groupings will return the list of matched values &lt;code&gt;($1,$2,...)&lt;/code&gt; . So we could rewrite it as</source>
          <target state="translated">En el contexto de la lista, una coincidencia &lt;code&gt;/regex/&lt;/code&gt; con agrupaciones devolver&amp;aacute; la lista de valores coincidentes &lt;code&gt;($1,$2,...)&lt;/code&gt; . Entonces podr&amp;iacute;amos reescribirlo como</target>
        </trans-unit>
        <trans-unit id="939fd917e535aec01742cc126c0bd35df43aa502" translate="yes" xml:space="preserve">
          <source>In list context, a match &lt;code&gt;/regex/&lt;/code&gt; with groupings will return the list of matched values &lt;code&gt;($1,$2,...)&lt;/code&gt;. So we could rewrite it as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c008355e8673133191ef9e0d9724c780f81e596e" translate="yes" xml:space="preserve">
          <source>In list context, both the remaining time and the interval are returned.</source>
          <target state="translated">En el contexto de la lista,se devuelve tanto el tiempo restante como el intervalo.</target>
        </trans-unit>
        <trans-unit id="4ff8ef7b7f3933511d227abc0760c6958871615f" translate="yes" xml:space="preserve">
          <source>In list context, both the remaining time and the interval are returned. The interval is always what you put in using &lt;code&gt;setitimer()&lt;/code&gt; .</source>
          <target state="translated">En el contexto de la lista, se devuelven tanto el tiempo restante como el intervalo. El intervalo es siempre lo que pones usando &lt;code&gt;setitimer()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfe9012620873b36aaee603ca083e0f3f3500013" translate="yes" xml:space="preserve">
          <source>In list context, both the remaining time and the interval are returned. The interval is always what you put in using &lt;code&gt;setitimer()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f52db4aa7cef4591f6ad21954e80ef3d1ce4ff3" translate="yes" xml:space="preserve">
          <source>In list context, if the second parameter is present and evaluates TRUE, the method returns an associative array. The keys of the associative array correspond to the values that matched in the BTREE and the values of the array are a count of the number of times that particular value occurred in the BTREE.</source>
          <target state="translated">En el contexto de la lista,si el segundo parámetro está presente y evalúa VERDADERO,el método devuelve una matriz asociativa.Las claves de la matriz asociativa corresponden a los valores que coincidieron en el BTREE y los valores de la matriz son un recuento del número de veces que ese valor particular ocurrió en el BTREE.</target>
        </trans-unit>
        <trans-unit id="611c9c24bc1f7655268ae0a922a1bafe9f75484e" translate="yes" xml:space="preserve">
          <source>In list context, it returns all the values which match &lt;code&gt;$key&lt;/code&gt; . Note that the values will be returned in an apparently random order.</source>
          <target state="translated">En el contexto de la lista, devuelve todos los valores que coinciden con &lt;code&gt;$key&lt;/code&gt; . Tenga en cuenta que los valores se devolver&amp;aacute;n en un orden aparentemente aleatorio.</target>
        </trans-unit>
        <trans-unit id="ae580f37b964b097156f3a709cd209fec9b4b0f5" translate="yes" xml:space="preserve">
          <source>In list context, it returns all the values which match &lt;code&gt;$key&lt;/code&gt;. Note that the values will be returned in an apparently random order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e8a08a17d7e9ccb66ceef8551ab60c5578a3cb" translate="yes" xml:space="preserve">
          <source>In list context, it's just the list argument separator, and inserts both its arguments into the list. These arguments are also evaluated from left to right.</source>
          <target state="translated">En el contexto de la lista,es sólo el separador de argumentos de la lista,e inserta sus dos argumentos en la lista.Estos argumentos también se evalúan de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="d53a53afd4d30e8bf9ee4f38d18899b7c7ca7c4f" translate="yes" xml:space="preserve">
          <source>In list context, returns a (possibly empty) list of filename expansions on the value of EXPR such as the standard Unix shell</source>
          <target state="translated">En el contexto de la lista,devuelve una lista (posiblemente vacía)de expansiones de nombres de archivos en el valor de EXPR como el shell estándar de Unix</target>
        </trans-unit>
        <trans-unit id="6f4ce95673df56dca54efc694ff26b54d19e3c4c" translate="yes" xml:space="preserve">
          <source>In list context, returns a list consisting of all the values of the named hash. In Perl 5.12 or later only, will also return a list of the values of an array; prior to that release, attempting to use an array argument will produce a syntax error. In scalar context, returns the number of values.</source>
          <target state="translated">En el contexto de la lista,devuelve una lista que consiste en todos los valores del hash nombrado.Sólo en Perl 5.12 o posterior,también devuelve una lista de los valores de una matriz;antes de esa publicación,intentar utilizar un argumento de matriz producirá un error de sintaxis.En contexto escalar,devuelve el número de valores.</target>
        </trans-unit>
        <trans-unit id="7bcc561bb33b529c7d0fa7662daf305595924e45" translate="yes" xml:space="preserve">
          <source>In list context, returns a list value consisting of the elements of LIST in the opposite order. In scalar context, concatenates the elements of LIST and returns a string value with all characters in the opposite order.</source>
          <target state="translated">En el contexto de la lista,devuelve un valor de lista que consiste en los elementos de LIST en el orden contrario.En contexto escalar,concatena los elementos de LIST y devuelve un valor de cadena con todos los caracteres en el orden opuesto.</target>
        </trans-unit>
        <trans-unit id="8b48751518b742e90690dec941b028dbd41c2485" translate="yes" xml:space="preserve">
          <source>In list context, returns the value or values deleted, or the last such element in scalar context. The return list's length always matches that of the argument list: deleting non-existent elements returns the undefined value in their corresponding positions.</source>
          <target state="translated">En el contexto de la lista,devuelve el valor o los valores suprimidos,o el último de esos elementos en el contexto escalar.La longitud de la lista de retorno siempre coincide con la de la lista de argumentos:la eliminación de elementos inexistentes devuelve el valor indefinido en sus posiciones correspondientes.</target>
        </trans-unit>
        <trans-unit id="a341489f824f6b17a2a55f993696ad829ad19868" translate="yes" xml:space="preserve">
          <source>In list context, this sorts the LIST and returns the sorted list value. In scalar context, the behaviour of &lt;a href=&quot;#sort-SUBNAME-LIST&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt; is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dda5a0315cd38b494f1396d6549e05a88ce769" translate="yes" xml:space="preserve">
          <source>In list context, this sorts the LIST and returns the sorted list value. In scalar context, the behaviour of &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; is undefined.</source>
          <target state="translated">En el contexto de la lista, esto ordena la LISTA y devuelve el valor de la lista ordenada. En contexto escalar, el comportamiento de &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="c275967193060ed0f99b2fe8baeb485ea49b9b81" translate="yes" xml:space="preserve">
          <source>In list context, this sorts the LIST and returns the sorted list value. In scalar context, the behaviour of &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; is undefined.</source>
          <target state="translated">En el contexto de la lista, esto ordena la LISTA y devuelve el valor de la lista ordenada. En contexto escalar, el comportamiento de &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="b0c91abf023bc70153195871169298db2bcd959f" translate="yes" xml:space="preserve">
          <source>In list context, usually returns the value or values deleted, or the last such element in scalar context. The return list's length corresponds to that of the argument list: deleting non-existent elements returns the undefined value in their corresponding positions. When a &lt;a href=&quot;perldata#Key%2FValue-Hash-Slices&quot;&gt;key/value hash slice&lt;/a&gt; is passed to &lt;code&gt;delete&lt;/code&gt;, the return value is a list of key/value pairs (two elements for each item deleted from the hash).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04d016b9064bf9bf9d2d6da3b96e6acf6fd1521" translate="yes" xml:space="preserve">
          <source>In literal patterns, the code is parsed at the same time as the surrounding code. While within the pattern, control is passed temporarily back to the perl parser, until the logically-balancing closing brace is encountered. This is similar to the way that an array index expression in a literal string is handled, for example</source>
          <target state="translated">En los patrones literales,el código se analiza al mismo tiempo que el código circundante.Mientras que dentro del patrón,el control se pasa temporalmente de nuevo al analizador de perlas,hasta que se encuentra el cierre de equilibrio lógico.Esto es similar a la forma en que se maneja una expresión de índice de matriz en una cadena literal,por ejemplo</target>
        </trans-unit>
        <trans-unit id="887e3136c0061f6a2d087f339773eb48207aff6c" translate="yes" xml:space="preserve">
          <source>In many applications it's wise to let Perl use Unicode for the strings it processes. Most of the interfaces Perl has to the outside world are still byte based. Programs therefore need to decode byte strings that enter the program from the outside and encode them again on the way out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a35afb8085f46becc13477af444009e4d377a40" translate="yes" xml:space="preserve">
          <source>In many cases, methods that are used to set the internal state of the object will return the object itself, so method calls can be conveniently chained together.</source>
          <target state="translated">En muchos casos,los métodos que se utilizan para establecer el estado interno del objeto devolverán el objeto mismo,por lo que las llamadas a los métodos pueden ser convenientemente encadenadas.</target>
        </trans-unit>
        <trans-unit id="2fe4577dec3e6223467649ed832dbc4e6a555dd0" translate="yes" xml:space="preserve">
          <source>In many systems the &lt;code&gt;O_EXCL&lt;/code&gt; flag is available for opening files in exclusive mode. This is &lt;b&gt;not&lt;/b&gt; locking: exclusiveness means here that if the file already exists, &lt;a href=&quot;#sysopen-FILEHANDLE%2CFILENAME%2CMODE&quot;&gt;&lt;code&gt;sysopen&lt;/code&gt;&lt;/a&gt; fails. &lt;code&gt;O_EXCL&lt;/code&gt; may not work on network filesystems, and has no effect unless the &lt;code&gt;O_CREAT&lt;/code&gt; flag is set as well. Setting &lt;code&gt;O_CREAT|O_EXCL&lt;/code&gt; prevents the file from being opened if it is a symbolic link. It does not protect against symbolic links in the file's path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b8eb0a3ccf1ee1e198f508015d1976e62c80e9" translate="yes" xml:space="preserve">
          <source>In many systems the &lt;code&gt;O_EXCL&lt;/code&gt; flag is available for opening files in exclusive mode. This is &lt;b&gt;not&lt;/b&gt; locking: exclusiveness means here that if the file already exists, sysopen() fails. &lt;code&gt;O_EXCL&lt;/code&gt; may not work on network filesystems, and has no effect unless the &lt;code&gt;O_CREAT&lt;/code&gt; flag is set as well. Setting &lt;code&gt;O_CREAT|O_EXCL&lt;/code&gt; prevents the file from being opened if it is a symbolic link. It does not protect against symbolic links in the file's path.</source>
          <target state="translated">En muchos sistemas, la bandera &lt;code&gt;O_EXCL&lt;/code&gt; est&amp;aacute; disponible para abrir archivos en modo exclusivo. Esto &lt;b&gt;no&lt;/b&gt; es bloqueo: exclusividad significa aqu&amp;iacute; que si el archivo ya existe, sysopen () falla. &lt;code&gt;O_EXCL&lt;/code&gt; posible que O_EXCL no funcione en sistemas de archivos de red y no tiene ning&amp;uacute;n efecto a menos que tambi&amp;eacute;n se establezca el indicador &lt;code&gt;O_CREAT&lt;/code&gt; . La configuraci&amp;oacute;n de &lt;code&gt;O_CREAT|O_EXCL&lt;/code&gt; evita que el archivo se abra si es un enlace simb&amp;oacute;lico. No protege contra enlaces simb&amp;oacute;licos en la ruta del archivo.</target>
        </trans-unit>
        <trans-unit id="8450d241305d74878facdc73fccc0a1c6ea4d3de" translate="yes" xml:space="preserve">
          <source>In module</source>
          <target state="translated">En el módulo</target>
        </trans-unit>
        <trans-unit id="286bdc943117014c33efb93a016a5d1869678221" translate="yes" xml:space="preserve">
          <source>In module filtering context, it can be used as Perl version filter.</source>
          <target state="translated">En el contexto del filtrado de módulos,puede utilizarse como filtro de la versión Perl.</target>
        </trans-unit>
        <trans-unit id="a173a70aa245271ccb4f943a053fd8f7539c03d6" translate="yes" xml:space="preserve">
          <source>In more practical terms, the typemap is a collection of code fragments which are used by the &lt;b&gt;xsubpp&lt;/b&gt; compiler to map C function parameters and values to Perl values. The typemap file may consist of three sections labelled &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; , and &lt;code&gt;OUTPUT&lt;/code&gt; . An unlabelled initial section is assumed to be a &lt;code&gt;TYPEMAP&lt;/code&gt; section. The INPUT section tells the compiler how to translate Perl values into variables of certain C types. The OUTPUT section tells the compiler how to translate the values from certain C types into values Perl can understand. The TYPEMAP section tells the compiler which of the INPUT and OUTPUT code fragments should be used to map a given C type to a Perl value. The section labels &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; , or &lt;code&gt;OUTPUT&lt;/code&gt; must begin in the first column on a line by themselves, and must be in uppercase.</source>
          <target state="translated">En t&amp;eacute;rminos m&amp;aacute;s pr&amp;aacute;cticos, el typemap es una colecci&amp;oacute;n de fragmentos de c&amp;oacute;digo que son usados ​​por el compilador &lt;b&gt;xsubpp&lt;/b&gt; para mapear los par&amp;aacute;metros y valores de la funci&amp;oacute;n C a los valores Perl. El archivo de mapa de tipos puede constar de tres secciones etiquetadas como &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; y &lt;code&gt;OUTPUT&lt;/code&gt; . Se supone que una secci&amp;oacute;n inicial sin etiquetar es una secci&amp;oacute;n &lt;code&gt;TYPEMAP&lt;/code&gt; . La secci&amp;oacute;n INPUT le dice al compilador c&amp;oacute;mo traducir los valores de Perl en variables de ciertos tipos de C. La secci&amp;oacute;n OUTPUT le dice al compilador c&amp;oacute;mo traducir los valores de ciertos tipos de C en valores que Perl pueda entender. La secci&amp;oacute;n TYPEMAP le dice al compilador cu&amp;aacute;l de los fragmentos de c&amp;oacute;digo INPUT y OUTPUT debe usarse para mapear un tipo C dado a un valor Perl. Las etiquetas de secci&amp;oacute;n &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; o &lt;code&gt;OUTPUT&lt;/code&gt; deben comenzar en la primera columna de una l&amp;iacute;nea por s&amp;iacute; mismos y deben estar en may&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="a2596ab70d131727b8db450d6439c8e749db46f7" translate="yes" xml:space="preserve">
          <source>In more practical terms, the typemap is a collection of code fragments which are used by the &lt;b&gt;xsubpp&lt;/b&gt; compiler to map C function parameters and values to Perl values. The typemap file may consist of three sections labelled &lt;code&gt;TYPEMAP&lt;/code&gt;, &lt;code&gt;INPUT&lt;/code&gt;, and &lt;code&gt;OUTPUT&lt;/code&gt;. An unlabelled initial section is assumed to be a &lt;code&gt;TYPEMAP&lt;/code&gt; section. The INPUT section tells the compiler how to translate Perl values into variables of certain C types. The OUTPUT section tells the compiler how to translate the values from certain C types into values Perl can understand. The TYPEMAP section tells the compiler which of the INPUT and OUTPUT code fragments should be used to map a given C type to a Perl value. The section labels &lt;code&gt;TYPEMAP&lt;/code&gt;, &lt;code&gt;INPUT&lt;/code&gt;, or &lt;code&gt;OUTPUT&lt;/code&gt; must begin in the first column on a line by themselves, and must be in uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3dbb912233fbf5258ce4b83a5eac5057d0b3f5" translate="yes" xml:space="preserve">
          <source>In most cases people have reported better results with GNU make rather than the system's /bin/make program, whether for plain modules or for XS based extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428ffc575a57b1bff79640b48a60fb8f688d9deb" translate="yes" xml:space="preserve">
          <source>In most cases people have reported better results with GNU make rather than the system's /bin/make program, whether for plain modules or for xs based extensions.</source>
          <target state="translated">En la mayoría de los casos la gente ha reportado mejores resultados con GNU make en lugar del programa /bin/make del sistema,ya sea para módulos simples o para extensiones basadas en xs.</target>
        </trans-unit>
        <trans-unit id="ddebdad5fbd20cefe48a1c3287d455763963e1d8" translate="yes" xml:space="preserve">
          <source>In most cases you just need to load the desired IPC driver to make it work. You should load this driver as early as possible. A warning will be issued if you load it too late for it to be effective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5afec4e8618986f557789f84e21b385879c2564" translate="yes" xml:space="preserve">
          <source>In most cases you want to make sure that the $io_handle is in &quot;binmode&quot; before you pass it as argument to the addfile() method.</source>
          <target state="translated">En la mayoría de los casos quieres asegurarte de que $io_handle está en &quot;binmode&quot; antes de pasarlo como argumento al método addfile().</target>
        </trans-unit>
        <trans-unit id="c59025c8c8f5462c9fb0d9eec8118a96c3e872c2" translate="yes" xml:space="preserve">
          <source>In most cases you want to make sure that the $io_handle is in &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; before you pass it as argument to the addfile() method.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, desea asegurarse de que $ io_handle est&amp;eacute; en modo &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; antes de pasarlo como argumento al m&amp;eacute;todo addfile ().</target>
        </trans-unit>
        <trans-unit id="295ff2e93e3edb18812fcf358a08839cc337a030" translate="yes" xml:space="preserve">
          <source>In most cases you want to make sure that the $io_handle is in &lt;code&gt;binmode&lt;/code&gt; before you pass it as argument to the addfile() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525f40bb529483f51193d29f821ebe7da0a52cf3" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; is implemented via the undocumented system service &lt;code&gt;$SIGPRC&lt;/code&gt; , which has the same calling sequence as &lt;code&gt;$FORCEX&lt;/code&gt; , but throws an exception in the target process rather than forcing it to call &lt;code&gt;$EXIT&lt;/code&gt; . Generally speaking, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; follows the behavior of the CRTL's &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; function, but unlike that function can be called from within a signal handler. Also, unlike the &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; in some versions of the CRTL, Perl's &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; checks the validity of the signal passed in and returns an error rather than attempting to send an unrecognized signal.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; se implementa a trav&amp;eacute;s del servicio del sistema no documentado &lt;code&gt;$SIGPRC&lt;/code&gt; , que tiene la misma secuencia de llamada que &lt;code&gt;$FORCEX&lt;/code&gt; , pero genera una excepci&amp;oacute;n en el proceso de destino en lugar de forzarlo a llamar a &lt;code&gt;$EXIT&lt;/code&gt; . En t&amp;eacute;rminos generales, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; sigue el comportamiento de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; CRTL, pero a diferencia de esa funci&amp;oacute;n, se puede llamar desde un controlador de se&amp;ntilde;ales. Adem&amp;aacute;s, a diferencia del &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; en algunas versiones de CRTL, el &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; de Perl verifica la validez de la se&amp;ntilde;al pasada y devuelve un error en lugar de intentar enviar una se&amp;ntilde;al no reconocida.</target>
        </trans-unit>
        <trans-unit id="df94ec9676af59ec6113f48e169109d0b6d9385f" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;kill&lt;/code&gt; is implemented via the undocumented system service &lt;code&gt;$SIGPRC&lt;/code&gt;, which has the same calling sequence as &lt;code&gt;$FORCEX&lt;/code&gt;, but throws an exception in the target process rather than forcing it to call &lt;code&gt;$EXIT&lt;/code&gt;. Generally speaking, &lt;code&gt;kill&lt;/code&gt; follows the behavior of the CRTL's &lt;code&gt;kill()&lt;/code&gt; function, but unlike that function can be called from within a signal handler. Also, unlike the &lt;code&gt;kill&lt;/code&gt; in some versions of the CRTL, Perl's &lt;code&gt;kill&lt;/code&gt; checks the validity of the signal passed in and returns an error rather than attempting to send an unrecognized signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eede988897716aa1422cf3adeb53444b2cab13f0" translate="yes" xml:space="preserve">
          <source>In most cases, it is probably easier to simply use string concatenation, which also forces scalar context.</source>
          <target state="translated">En la mayoría de los casos,probablemente sea más fácil utilizar simplemente la concatenación de cuerdas,lo que también fuerza el contexto escalar.</target>
        </trans-unit>
        <trans-unit id="ace8b1ddef61865f0aa48c02a6d220e56f6740dd" translate="yes" xml:space="preserve">
          <source>In most cases, patches to modules in</source>
          <target state="translated">En la mayoría de los casos,los parches de los módulos de</target>
        </trans-unit>
        <trans-unit id="3d608639121073b361e23e425be9ba9c84646ab9" translate="yes" xml:space="preserve">
          <source>In most cases, you can just run it interactively from a command line without any special arguments and follow the prompts.</source>
          <target state="translated">En la mayoría de los casos,puedes ejecutarlo de forma interactiva desde una línea de comandos sin ningún argumento especial y seguir las instrucciones.</target>
        </trans-unit>
        <trans-unit id="2f1846566ce8422fbda676e86cc15846d05061a2" translate="yes" xml:space="preserve">
          <source>In most cases, you should probably round the results explicitly using one of &lt;a href=&quot;#round()&quot;&gt;round()&lt;/a&gt;, &lt;a href=&quot;#bround()&quot;&gt;bround()&lt;/a&gt; or &lt;a href=&quot;#bfround()&quot;&gt;bfround()&lt;/a&gt; or by passing the desired accuracy to the math operation as additional parameter:</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, probablemente deber&amp;iacute;a redondear los resultados expl&amp;iacute;citamente usando uno de &lt;a href=&quot;#round()&quot;&gt;round ()&lt;/a&gt; , &lt;a href=&quot;#bround()&quot;&gt;bround ()&lt;/a&gt; o &lt;a href=&quot;#bfround()&quot;&gt;bfround ()&lt;/a&gt; o pasando la precisi&amp;oacute;n deseada a la operaci&amp;oacute;n matem&amp;aacute;tica como par&amp;aacute;metro adicional:</target>
        </trans-unit>
        <trans-unit id="33cd688bb41635445ecc1419591038ede4e8360f" translate="yes" xml:space="preserve">
          <source>In most cases, you should probably round the results explicitly using one of &lt;a href=&quot;Math::BigInt#round%28%29&quot;&gt;&quot;round()&quot; in Math::BigInt&lt;/a&gt;, &lt;a href=&quot;Math::BigInt#bround%28%29&quot;&gt;&quot;bround()&quot; in Math::BigInt&lt;/a&gt; or &lt;a href=&quot;Math::BigInt#bfround%28%29&quot;&gt;&quot;bfround()&quot; in Math::BigInt&lt;/a&gt; or by passing the desired accuracy to the math operation as additional parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf91aec7f60195ab2e4c16d72de4bd0b0dad318" translate="yes" xml:space="preserve">
          <source>In most cases, you should probably round the results explicitly using one of &lt;a href=&quot;bigint#round()&quot;&gt;round() in Math::BigInt&lt;/a&gt;, &lt;a href=&quot;bigint#bround()&quot;&gt;bround() in Math::BigInt&lt;/a&gt; or &lt;a href=&quot;bigint#bfround()&quot;&gt;bfround() in Math::BigInt&lt;/a&gt; or by passing the desired accuracy to the math operation as additional parameter:</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, probablemente deber&amp;iacute;a redondear los resultados expl&amp;iacute;citamente usando uno de &lt;a href=&quot;bigint#round()&quot;&gt;round () en Math :: BigInt&lt;/a&gt; , &lt;a href=&quot;bigint#bround()&quot;&gt;bround () en Math :: BigInt&lt;/a&gt; o &lt;a href=&quot;bigint#bfround()&quot;&gt;bfround () en Math :: BigInt&lt;/a&gt; o pasando la precisi&amp;oacute;n deseada a la operaci&amp;oacute;n matem&amp;aacute;tica como par&amp;aacute;metro adicional:</target>
        </trans-unit>
        <trans-unit id="a42b298f707283d45326f409618401d12bc90d6e" translate="yes" xml:space="preserve">
          <source>In most cases, you write an external module to do it--see the answer to &quot;Where can I learn about linking C with Perl? [h2xs, xsubpp]&quot;. However, if the function is a system call, and your system supports &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall()&lt;/a&gt;&lt;/code&gt;, you can use the &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; function (documented in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;).</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, escribe un m&amp;oacute;dulo externo para hacerlo - vea la respuesta a &quot;&amp;iquest;D&amp;oacute;nde puedo aprender sobre c&amp;oacute;mo vincular C con Perl? [H2xs, xsubpp]&quot;. Sin embargo, si la funci&amp;oacute;n es una llamada al sistema y su sistema admite &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall()&lt;/a&gt;&lt;/code&gt; , puede usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; (documentada en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="65cdcdedc88950930966f20f06c6f6a1bc834c3d" translate="yes" xml:space="preserve">
          <source>In most cases, you write an external module to do it--see the answer to &quot;Where can I learn about linking C with Perl? [h2xs, xsubpp]&quot;. However, if the function is a system call, and your system supports &lt;code&gt;syscall()&lt;/code&gt;, you can use the &lt;code&gt;syscall&lt;/code&gt; function (documented in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f196207a99eece1cc9a419701bff50faa9e469c" translate="yes" xml:space="preserve">
          <source>In most instances, the function that discovers the issue sets the causal flag and returns failure immediately. &lt;a href=&quot;#Parsing-complications&quot;&gt;&quot;Parsing complications&quot;&lt;/a&gt; contains an explicit example of how this works. In other cases, such as a forward reference to a numbered parenthetical grouping, we need to finish the parse to know if that numbered grouping actually appears in the pattern. In those cases, the parse is just redone at the end, with the knowledge of how many groupings occur in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19f51a558abe46dfdc218b96bc734b3c276b079" translate="yes" xml:space="preserve">
          <source>In most operating systems, lines in files are terminated by newlines. Just what is used as a newline may vary from OS to OS. Unix traditionally uses &lt;code&gt;\012&lt;/code&gt; , one type of DOSish I/O uses &lt;code&gt;\015\012&lt;/code&gt; , Mac OS uses &lt;code&gt;\015&lt;/code&gt; , and z/OS uses &lt;code&gt;\025&lt;/code&gt; .</source>
          <target state="translated">En la mayor&amp;iacute;a de los sistemas operativos, las l&amp;iacute;neas de los archivos terminan con nuevas l&amp;iacute;neas. Lo que se utiliza como nueva l&amp;iacute;nea puede variar de un sistema operativo a otro. Unix usa tradicionalmente &lt;code&gt;\012&lt;/code&gt; , un tipo de E / S de DOS utiliza &lt;code&gt;\015\012&lt;/code&gt; , Mac OS usa &lt;code&gt;\015&lt;/code&gt; yz / OS usa &lt;code&gt;\025&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f67379f4e94f10ca981b8e2ea0b0a789ca5f65aa" translate="yes" xml:space="preserve">
          <source>In most operating systems, lines in files are terminated by newlines. Just what is used as a newline may vary from OS to OS. Unix traditionally uses &lt;code&gt;\012&lt;/code&gt;, one type of DOSish I/O uses &lt;code&gt;\015\012&lt;/code&gt;, Mac OS uses &lt;code&gt;\015&lt;/code&gt;, and z/OS uses &lt;code&gt;\025&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c4293bfbaf72968d51c71aab642ca2822c9579" translate="yes" xml:space="preserve">
          <source>In multithreaded scripts Perl coordinates the threads so that any thread may modify its copy of the &lt;code&gt;$0&lt;/code&gt; and the change becomes visible to ps(1) (assuming the operating system plays along). Note that the view of &lt;code&gt;$0&lt;/code&gt; the other threads have will not change since they have their own copies of it.</source>
          <target state="translated">En los scripts multiproceso, Perl coordina los hilos de modo que cualquier hilo pueda modificar su copia del &lt;code&gt;$0&lt;/code&gt; y el cambio se vuelve visible para ps (1) (asumiendo que el sistema operativo sigue el juego). Tenga en cuenta que la vista de &lt;code&gt;$0&lt;/code&gt; los otros hilos no cambiar&amp;aacute;, ya que tienen sus propias copias.</target>
        </trans-unit>
        <trans-unit id="2ff5aa25fe59ffebaa3d9b983e6ed41dcfbb4c10" translate="yes" xml:space="preserve">
          <source>In networking, a &lt;b&gt;process&lt;/b&gt; that either advertises a &lt;b&gt;service&lt;/b&gt; or just hangs around at a known location and waits for &lt;b&gt;clients&lt;/b&gt; who need service to get in touch with it.</source>
          <target state="translated">En redes, un &lt;b&gt;proceso&lt;/b&gt; que anuncia un &lt;b&gt;servicio&lt;/b&gt; o simplemente se queda en una ubicaci&amp;oacute;n conocida y espera a que los &lt;b&gt;clientes&lt;/b&gt; que necesitan el servicio se pongan en contacto con &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="fe020f31c58d30517974e8b54ebe9cc4a8fb1397" translate="yes" xml:space="preserve">
          <source>In networking, a &lt;b&gt;process&lt;/b&gt; that initiates contact with a &lt;b&gt;server&lt;/b&gt; process in order to exchange data and perhaps receive a service.</source>
          <target state="translated">En redes, un &lt;b&gt;proceso&lt;/b&gt; que inicia el contacto con un proceso de &lt;b&gt;servidor&lt;/b&gt; para intercambiar datos y quiz&amp;aacute;s recibir un servicio.</target>
        </trans-unit>
        <trans-unit id="b7faa009c2918d4804b660feca8b23ad35925a6e" translate="yes" xml:space="preserve">
          <source>In networking, an agreed-upon way of sending messages back and forth so that neither correspondent will get too confused.</source>
          <target state="translated">En la red,una forma acordada de enviar mensajes de ida y vuelta para que ninguno de los corresponsales se confunda demasiado.</target>
        </trans-unit>
        <trans-unit id="c0e4746f4dfd5f8f65267b46eb6ee2bd94d9dce3" translate="yes" xml:space="preserve">
          <source>In non-UTF-8 locales (hence single byte), code points above 0xFF are technically invalid. But if present, again starting in v5.26, they will collate to the same position as the highest valid code point does. This generally gives good results, but the collation order may be skewed if the valid code point gets special treatment when it forms particular sequences with other characters as defined by the locale. When two strings collate identically, the code point order is used as a tie breaker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b3fd1615492dc9bf230d9f033afbf83da86082" translate="yes" xml:space="preserve">
          <source>In normal &amp;ldquo;computerese&amp;rdquo;, the piece of data of the size most efficiently handled by your computer, typically 32 bits or so, give or take a few powers of 2. In Perl culture, it more often refers to an alphanumeric &lt;b&gt;identifier&lt;/b&gt; (including underscores), or to a string of nonwhitespace &lt;b&gt;characters&lt;/b&gt; bounded by whitespace or string boundaries.</source>
          <target state="translated">En &quot;computerese&quot; normal, el dato del tama&amp;ntilde;o manejado de manera m&amp;aacute;s eficiente por su computadora, t&amp;iacute;picamente 32 bits m&amp;aacute;s o menos, m&amp;aacute;s o menos algunas potencias de 2. En la cultura Perl, m&amp;aacute;s a menudo se refiere a un &lt;b&gt;identificador&lt;/b&gt; alfanum&amp;eacute;rico (incluidos guiones bajos ), oa una cadena de &lt;b&gt;caracteres que&lt;/b&gt; no son espacios en blanco delimitados por espacios en blanco o l&amp;iacute;mites de cadena.</target>
        </trans-unit>
        <trans-unit id="2b1437a6901ce1f87cee7f4d6385fbba76b51c73" translate="yes" xml:space="preserve">
          <source>In object-oriented code, we often find that one object references another object. This is called &lt;b&gt;composition&lt;/b&gt;, or a &lt;b&gt;has-a&lt;/b&gt; relationship.</source>
          <target state="translated">En el c&amp;oacute;digo orientado a objetos, a menudo encontramos que un objeto hace referencia a otro objeto. A esto se le llama &lt;b&gt;composici&amp;oacute;n&lt;/b&gt; o relaci&amp;oacute;n &lt;b&gt;tiene-una&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="0840885f4ae0e15a9e1a64e6e2f2e63bb6055bf6" translate="yes" xml:space="preserve">
          <source>In olden days, the act of looking up a &lt;b&gt;key&lt;/b&gt; in an actual index (such as a phone book). But now it's merely the act of using any kind of key or position to find the corresponding &lt;b&gt;value&lt;/b&gt;, even if no index is involved. Things have degenerated to the point that Perl&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; function merely locates the position (index) of one string in another.</source>
          <target state="translated">En la antig&amp;uuml;edad, el acto de buscar una &lt;b&gt;clave&lt;/b&gt; en un &amp;iacute;ndice real (como una gu&amp;iacute;a telef&amp;oacute;nica). Pero ahora es simplemente el acto de usar cualquier tipo de clave o posici&amp;oacute;n para encontrar el &lt;b&gt;valor&lt;/b&gt; correspondiente , incluso si no hay ning&amp;uacute;n &amp;iacute;ndice involucrado. Las cosas han degenerado hasta el punto de que la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; de Perl simplemente localiza la posici&amp;oacute;n (&amp;iacute;ndice) de una cadena en otra.</target>
        </trans-unit>
        <trans-unit id="b754306ff2e4bb5b2e3f0917babd038de6c2bb80" translate="yes" xml:space="preserve">
          <source>In olden days, the act of looking up a &lt;b&gt;key&lt;/b&gt; in an actual index (such as a phone book). But now it's merely the act of using any kind of key or position to find the corresponding &lt;b&gt;value&lt;/b&gt;, even if no index is involved. Things have degenerated to the point that Perl&amp;rsquo;s &lt;code&gt;index&lt;/code&gt; function merely locates the position (index) of one string in another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8954164487b10a1a06bdaedbfbaa22faf258c328" translate="yes" xml:space="preserve">
          <source>In older Unicode versions, a small number of characters (all of which are CJK compatibility ideographs as far as they have been found) may have an erroneous decomposition mapping (see</source>
          <target state="translated">En versiones anteriores de Unicode,un pequeño número de caracteres (todos los cuales son ideogramas de compatibilidad CJK en la medida en que se han encontrado)pueden tener una cartografía de descomposición errónea (ver</target>
        </trans-unit>
        <trans-unit id="25564a5fe1398dbc91939b7e3cb0a5bccfb1e2c1" translate="yes" xml:space="preserve">
          <source>In one sense, what you are asking doesn't make much sense: encodings are for characters, and binary data are not &quot;characters&quot;, so converting &quot;data&quot; into some encoding isn't meaningful unless you know in what character set and encoding the binary data is in, in which case it's not just binary data, now is it?</source>
          <target state="translated">En cierto sentido,lo que está pidiendo no tiene mucho sentido:las codificaciones son para los caracteres,y los datos binarios no son &quot;caracteres&quot;,por lo que convertir &quot;datos&quot; en alguna codificación no tiene sentido a menos que sepa en qué conjunto de caracteres y codificación están los datos binarios,en cuyo caso no son sólo datos binarios,¿verdad?</target>
        </trans-unit>
        <trans-unit id="0665aadb9203e48ab11fdbdc61f426bdf069c8ef" translate="yes" xml:space="preserve">
          <source>In one's own MANIFEST.SKIP file, certain directives can be used to include the contents of other MANIFEST.SKIP files. At present two such directives are recognized.</source>
          <target state="translated">En el propio archivo MANIFEST.SKIP se pueden usar ciertas directivas para incluir el contenido de otros archivos MANIFEST.SKIP.En la actualidad se reconocen dos directivas de este tipo.</target>
        </trans-unit>
        <trans-unit id="775d518fe37c14b3f79041d34b5efaca033dd3ab" translate="yes" xml:space="preserve">
          <source>In one-liner form:</source>
          <target state="translated">En forma de una sola línea:</target>
        </trans-unit>
        <trans-unit id="3a599813be17001915e0601602237bd798d15d3b" translate="yes" xml:space="preserve">
          <source>In one-shot mode this flag will be set to true if the Perl &lt;code&gt;-T&lt;/code&gt; operator thinks the file contains text.</source>
          <target state="translated">En el modo one-shot, este indicador se establecer&amp;aacute; en verdadero si el operador Perl &lt;code&gt;-T&lt;/code&gt; cree que el archivo contiene texto.</target>
        </trans-unit>
        <trans-unit id="0a387689b89f7b0ad51aa990a4b2c214ffa94375" translate="yes" xml:space="preserve">
          <source>In order for object method lookup and/or prototype checking to operate correctly even when methods have not yet been defined it is necessary to &quot;forward declare&quot; each subroutine (as in &lt;code&gt;sub NAME;&lt;/code&gt; ). See &lt;a href=&quot;perlsub#SYNOPSIS&quot;&gt;SYNOPSIS in perlsub&lt;/a&gt;. Such forward declaration creates &quot;subroutine stubs&quot;, which are place holders with no code.</source>
          <target state="translated">Para que la b&amp;uacute;squeda de m&amp;eacute;todos de objetos y / o la verificaci&amp;oacute;n de prototipos funcionen correctamente incluso cuando los m&amp;eacute;todos a&amp;uacute;n no se han definido, es necesario &quot;declarar hacia adelante&quot; cada subrutina (como en el &lt;code&gt;sub NAME;&lt;/code&gt; ). Ver &lt;a href=&quot;perlsub#SYNOPSIS&quot;&gt;SINOPSIS en perlsub&lt;/a&gt; . Dicha declaraci&amp;oacute;n hacia adelante crea &quot;stubs de subrutina&quot;, que son marcadores de posici&amp;oacute;n sin c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="90345d24344bda0288805e106343fe2f95bd2679" translate="yes" xml:space="preserve">
          <source>In order for object method lookup and/or prototype checking to operate correctly even when methods have not yet been defined it is necessary to &quot;forward declare&quot; each subroutine (as in &lt;code&gt;sub NAME;&lt;/code&gt;). See &lt;a href=&quot;perlsub#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot; in perlsub&lt;/a&gt;. Such forward declaration creates &quot;subroutine stubs&quot;, which are place holders with no code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0241ec9af4c551ca21dc35ad3b6791e44a33543" translate="yes" xml:space="preserve">
          <source>In order to allow for multiple big integer libraries, Math::BigInt was rewritten to use a plug-in library for core math routines. Any module which conforms to the API can be used by Math::BigInt by using this in your program:</source>
          <target state="translated">Para permitir múltiples bibliotecas de números enteros grandes,Math::BigInt fue reescrito para usar una biblioteca de plugins para rutinas matemáticas básicas.Cualquier módulo que se ajuste a la API puede ser usado por Math::BigInt usando esto en su programa:</target>
        </trans-unit>
        <trans-unit id="db68f3a19f1d4b1da9de666e4465352494a86e3b" translate="yes" xml:space="preserve">
          <source>In order to allow for multiple big integer libraries, Math::BigInt was rewritten to use library modules for core math routines. Any module which follows the same API as this can be used instead by using the following:</source>
          <target state="translated">Para permitir múltiples bibliotecas de números enteros grandes,Math::BigInt fue reescrito para usar módulos de biblioteca para rutinas matemáticas básicas.Cualquier módulo que siga la misma API que este puede ser usado en su lugar usando lo siguiente:</target>
        </trans-unit>
        <trans-unit id="79f9d107daff2d5afbf356c8809d8a77ed4fb993" translate="yes" xml:space="preserve">
          <source>In order to build your own version of Perl you will need 'make', which is part of Apple's developer tools - also known as Xcode. From Mac OS X 10.7 &quot;Lion&quot; onwards, it can be downloaded separately as the 'Command Line Tools' bundle directly from &lt;a href=&quot;https://developer.apple.com/downloads/&quot;&gt;https://developer.apple.com/downloads/&lt;/a&gt; (you will need a free account to log in), or as a part of the Xcode suite, freely available at the App Store. Xcode is a pretty big app, so unless you already have it or really want it, you are advised to get the 'Command Line Tools' bundle separately from the link above. If you want to do it from within Xcode, go to Xcode -&amp;gt; Preferences -&amp;gt; Downloads and select the 'Command Line Tools' option.</source>
          <target state="translated">Para crear su propia versi&amp;oacute;n de Perl, necesitar&amp;aacute; 'make', que forma parte de las herramientas de desarrollo de Apple, tambi&amp;eacute;n conocidas como Xcode. Desde Mac OS X 10.7 &quot;Lion&quot; en adelante, se puede descargar por separado como el paquete 'Herramientas de l&amp;iacute;nea de comandos' directamente desde &lt;a href=&quot;https://developer.apple.com/downloads/&quot;&gt;https://developer.apple.com/downloads/&lt;/a&gt; (necesitar&amp;aacute; una cuenta gratuita para iniciar sesi&amp;oacute;n), o como parte de la suite Xcode, disponible gratuitamente en la App Store. Xcode es una aplicaci&amp;oacute;n bastante grande, por lo que, a menos que ya la tenga o realmente la desee, le recomendamos que obtenga el paquete 'Herramientas de l&amp;iacute;nea de comandos' por separado del enlace anterior. Si desea hacerlo desde Xcode, vaya a Xcode -&amp;gt; Preferencias -&amp;gt; Descargas y seleccione la opci&amp;oacute;n 'Herramientas de l&amp;iacute;nea de comandos'.</target>
        </trans-unit>
        <trans-unit id="a93cd8781d8e041e8355a0aefc4276597d7a98e8" translate="yes" xml:space="preserve">
          <source>In order to convert a string of characters from one character set to another a simple list of numbers, such as in the right columns in the above table, along with Perl's &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; operator is all that is needed. The data in the table are in ASCII/Latin1 order, hence the EBCDIC columns provide easy-to-use ASCII/Latin1 to EBCDIC operations that are also easily reversed.</source>
          <target state="translated">Para convertir una cadena de caracteres de un juego de caracteres a otro, todo lo que se necesita es una lista simple de n&amp;uacute;meros, como en las columnas de la derecha en la tabla anterior, junto con el operador &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; Perl . Los datos en la tabla est&amp;aacute;n en orden ASCII / Latin1, por lo tanto, las columnas EBCDIC proporcionan operaciones ASCII / Latin1 a EBCDIC f&amp;aacute;ciles de usar que tambi&amp;eacute;n se pueden revertir f&amp;aacute;cilmente.</target>
        </trans-unit>
        <trans-unit id="2705e74e9648fc4b957e6b22cc815af6c67ac538" translate="yes" xml:space="preserve">
          <source>In order to convert a string of characters from one character set to another a simple list of numbers, such as in the right columns in the above table, along with Perl's &lt;code&gt;tr///&lt;/code&gt; operator is all that is needed. The data in the table are in ASCII/Latin1 order, hence the EBCDIC columns provide easy-to-use ASCII/Latin1 to EBCDIC operations that are also easily reversed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614dd2adb3410a9f885520f92ddaaafdc83205d2" translate="yes" xml:space="preserve">
          <source>In order to facilitate this feature, the following code can be employed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5fa67b20e8cfe8e347f59bf69babb07bc272aa" translate="yes" xml:space="preserve">
          <source>In order to install a new regexp handler, &lt;code&gt;$^H{regcomp}&lt;/code&gt; is set to an integer which (when casted appropriately) resolves to one of these structures. When compiling, the &lt;code&gt;comp&lt;/code&gt; method is executed, and the resulting &lt;code&gt;regexp&lt;/code&gt; structure's engine field is expected to point back at the same structure.</source>
          <target state="translated">Para instalar un nuevo controlador de &lt;code&gt;$^H{regcomp}&lt;/code&gt; , $ ^ H {regcomp} se establece en un n&amp;uacute;mero entero que (cuando se convierte de manera apropiada) se resuelve en una de estas estructuras. Al compilar, el &lt;code&gt;comp&lt;/code&gt; se ejecute el m&amp;eacute;todo, y la consiguiente &lt;code&gt;regexp&lt;/code&gt; se espera que el motor del campo de estructura a punto de volver a la misma estructura.</target>
        </trans-unit>
        <trans-unit id="437d80cea54e562ec941100e6a72df58383866f9" translate="yes" xml:space="preserve">
          <source>In order to keep lib.pm small and simple, it only works with Unix filepaths. This doesn't mean it only works on Unix, but non-Unix users must first translate their file paths to Unix conventions.</source>
          <target state="translated">Para mantener el lib.pm pequeño y simple,sólo funciona con filepaths de Unix.Esto no significa que sólo funciona en Unix,pero los no usuarios de Unix deben primero traducir sus rutas de archivos a las convenciones de Unix.</target>
        </trans-unit>
        <trans-unit id="364bb5f6d99dcae74466742fdf303cf213f25184" translate="yes" xml:space="preserve">
          <source>In order to maintain maximum compatibility with earlier versions of Perl, this function will return either the floating point notation or the multiple dotted notation, depending on whether the original version contained 1 or more dots, respectively.</source>
          <target state="translated">A fin de mantener la máxima compatibilidad con las versiones anteriores de Perl,esta función devolverá la notación de punto flotante o la notación de puntos múltiples,dependiendo de si la versión original contenía 1 o más puntos,respectivamente.</target>
        </trans-unit>
        <trans-unit id="ff0a513e88ce791d6cb047a72ff030f3cd3db74e" translate="yes" xml:space="preserve">
          <source>In order to maintain portability of attributes with older versions of MakeMaker you may want to use &lt;a href=&quot;App::EUMM::Upgrade&quot;&gt;App::EUMM::Upgrade&lt;/a&gt; with your &lt;code&gt;Makefile.PL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381ea4e1bb108f2a93fb8d7c5edae34da5e15c66" translate="yes" xml:space="preserve">
          <source>In order to maintain portability of attributes with older versions of MakeMaker you may want to use &lt;a href=&quot;http://search.cpan.org/perldoc/App::EUMM::Upgrade&quot;&gt;App::EUMM::Upgrade&lt;/a&gt; with your &lt;code&gt;Makefile.PL&lt;/code&gt; .</source>
          <target state="translated">Para mantener la portabilidad de los atributos con versiones anteriores de MakeMaker, es posible que desee utilizar &lt;a href=&quot;http://search.cpan.org/perldoc/App::EUMM::Upgrade&quot;&gt;App :: EUMM :: Upgrade&lt;/a&gt; con su &lt;code&gt;Makefile.PL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9248f937d9955a6043a592d635bc82f1867f0186" translate="yes" xml:space="preserve">
          <source>In order to make RECNO more compatible with Perl, the array offset for all RECNO arrays begins at 0 rather than 1 as in Berkeley DB.</source>
          <target state="translated">Para que RECNO sea más compatible con Perl,el desplazamiento de la matriz para todas las matrices de RECNO comienza en 0 en lugar de 1 como en la base de datos de Berkeley.</target>
        </trans-unit>
        <trans-unit id="a134e96e551361d71e9403326bccc706fc907e08" translate="yes" xml:space="preserve">
          <source>In order to make it impossible to know what seed to generate an attack key set for, this seed is randomly initialized at process start. This may be overridden by using the PERL_HASH_SEED environment variable, see &lt;a href=&quot;perlrun#PERL_HASH_SEED&quot;&gt;&quot;PERL_HASH_SEED&quot; in perlrun&lt;/a&gt;. This environment variable controls how items are actually stored, not how they are presented via &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt; and &lt;code&gt;each&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f50d2afd74c2c616567dbb29c3d95a6bbbba68" translate="yes" xml:space="preserve">
          <source>In order to make it impossible to know what seed to generate an attack key set for, this seed is randomly initialized at process start. This may be overridden by using the PERL_HASH_SEED environment variable, see &lt;a href=&quot;perlrun#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED in perlrun&lt;/a&gt;. This environment variable controls how items are actually stored, not how they are presented via &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Para que sea imposible saber para qu&amp;eacute; semilla generar un conjunto de claves de ataque, esta semilla se inicializa aleatoriamente al inicio del proceso. Esto se puede anular utilizando la variable de entorno PERL_HASH_SEED, consulte &lt;a href=&quot;perlrun#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED en perlrun&lt;/a&gt; . Esta variable de entorno controla c&amp;oacute;mo se almacenan realmente los elementos, no c&amp;oacute;mo se presentan mediante &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ee499e6bf85d10a6d431bac5ed2b0a2689595e9" translate="yes" xml:space="preserve">
          <source>In order to make sense of Maketext and how all its components fit together, you should probably go read &lt;a href=&quot;Locale::Maketext::TPJ13&quot;&gt;Locale::Maketext::TPJ13&lt;/a&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1eda6692f2f4e28d3303c1b91852403d3cf17be" translate="yes" xml:space="preserve">
          <source>In order to make sense of Maketext and how all its components fit together, you should probably go read &lt;a href=&quot;maketext/tpj13&quot;&gt;Locale::Maketext::TPJ13&lt;/a&gt;, and</source>
          <target state="translated">Para entender Maketext y c&amp;oacute;mo encajan todos sus componentes, probablemente deber&amp;iacute;a leer &lt;a href=&quot;maketext/tpj13&quot;&gt;Locale :: Maketext :: TPJ13&lt;/a&gt; , y</target>
        </trans-unit>
        <trans-unit id="5ff6fc777d96f10921d74c27d5ed5e70b4334507" translate="yes" xml:space="preserve">
          <source>In order to make use of the rot13 filter we need some way of encoding the source file in rot13 format. The script below, &lt;code&gt;mkrot13&lt;/code&gt; , does just that.</source>
          <target state="translated">Para hacer uso del filtro rot13 necesitamos alguna forma de codificar el archivo fuente en formato rot13. El siguiente script, &lt;code&gt;mkrot13&lt;/code&gt; , hace precisamente eso.</target>
        </trans-unit>
        <trans-unit id="e5ce5aaa659273d789866dcaf152404f645eca91" translate="yes" xml:space="preserve">
          <source>In order to make use of the rot13 filter we need some way of encoding the source file in rot13 format. The script below, &lt;code&gt;mkrot13&lt;/code&gt;, does just that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f6e1960069058479b2fc6d8a1c1c5f09a5d874" translate="yes" xml:space="preserve">
          <source>In order to preserve backward compatibility, Perl does not turn on full internal Unicode support unless the pragma &lt;a href=&quot;feature#The-%27unicode_strings%27-feature&quot;&gt;&lt;code&gt;use feature 'unicode_strings'&lt;/code&gt;&lt;/a&gt; is specified. (This is automatically selected if you &lt;code&gt;use 5.012&lt;/code&gt; or higher.) Failure to do this can trigger unexpected surprises. See &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;&quot;The &quot;Unicode Bug&quot;&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d2fc600dcdd5c6cb297e557194c37b7f0f485a" translate="yes" xml:space="preserve">
          <source>In order to preserve backward compatibility, Perl does not turn on full internal Unicode support unless the pragma &lt;a href=&quot;feature#The-'unicode_strings'-feature&quot;&gt;use feature 'unicode_strings' &lt;/a&gt; is specified. (This is automatically selected if you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; or higher.) Failure to do this can trigger unexpected surprises. See &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt; below.</source>
          <target state="translated">Para preservar la compatibilidad con versiones anteriores, Perl no &lt;a href=&quot;feature#The-'unicode_strings'-feature&quot;&gt;activa el&lt;/a&gt; soporte interno completo de Unicode a menos que se especifique la funci&amp;oacute;n de uso de pragma 'unicode_strings' . (Esto se selecciona autom&amp;aacute;ticamente si &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; o superior). Si no lo hace, puede desencadenar sorpresas inesperadas. Consulte &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;El error Unicode a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b671fb091ffbe602fd70383514c67045115109bc" translate="yes" xml:space="preserve">
          <source>In order to preserve the meaning of the processed version, the normalized representation will always contain at least three sub terms. In other words, the following is guaranteed to always be true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd47550c4a48b602de1804d810fabdd19f1a7062" translate="yes" xml:space="preserve">
          <source>In order to process interior sequences, subclasses implementations of this method will probably want to invoke either &lt;b&gt;interpolate()&lt;/b&gt; or &lt;b&gt;parse_text()&lt;/b&gt;, passing it the text block &lt;code&gt;$text&lt;/code&gt; , and the corresponding line number in &lt;code&gt;$line_num&lt;/code&gt; , and then perform any desired processing upon the returned result.</source>
          <target state="translated">Para procesar secuencias interiores, las implementaciones de subclases de este m&amp;eacute;todo probablemente querr&amp;aacute;n invocar &lt;b&gt;interpolate ()&lt;/b&gt; o &lt;b&gt;parse_text ()&lt;/b&gt; , pas&amp;aacute;ndole el bloque &lt;code&gt;$text&lt;/code&gt; y el n&amp;uacute;mero de l&amp;iacute;nea correspondiente en &lt;code&gt;$line_num&lt;/code&gt; , y luego realizar cualquier procesamiento deseado en el resultado devuelto.</target>
        </trans-unit>
        <trans-unit id="c302db0fb7a3da4f6c22dd771e513397179c92f5" translate="yes" xml:space="preserve">
          <source>In order to specifically obtain the &quot;blocking connect then non-blocking send and receive&quot; behaviour of specifying this combination of options to &lt;code&gt;::INET&lt;/code&gt; when using &lt;code&gt;::IP&lt;/code&gt;, perform first a blocking connect, then afterwards turn the socket into nonblocking mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a9bbcaad8032f3708be9f9aad29a52e4a152b3" translate="yes" xml:space="preserve">
          <source>In order to test that our extension works, we now need to look at the file Mytest.t. This file is set up to imitate the same kind of testing structure that Perl itself has. Within the test script, you perform a number of tests to confirm the behavior of the extension, printing &quot;ok&quot; when the test is correct, &quot;not ok&quot; when it is not.</source>
          <target state="translated">Para probar que nuestra extensión funciona,ahora tenemos que mirar el archivo Mytest.t.Este archivo está configurado para imitar el mismo tipo de estructura de pruebas que tiene el propio Perl.Dentro del script de prueba,se realizan una serie de pruebas para confirmar el comportamiento de la extensión,imprimiendo &quot;ok&quot; cuando la prueba es correcta,&quot;no ok&quot; cuando no lo es.</target>
        </trans-unit>
        <trans-unit id="e8108d3bcd39eeb2141d68d5707c2daf6f01568e" translate="yes" xml:space="preserve">
          <source>In order to understand Perl objects, you first need to understand references in Perl. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for details.</source>
          <target state="translated">Para comprender los objetos de Perl, primero debe comprender las referencias en Perl. Consulte &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="27839c8923c39400f0c61162217f01b584f16173" translate="yes" xml:space="preserve">
          <source>In order to understand Perl objects, you first need to understand references in Perl. See &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769d36508232140bd94018f22812d43183fa9db1" translate="yes" xml:space="preserve">
          <source>In order to use &lt;b&gt;AutoLoader&lt;/b&gt;'s AUTOLOAD subroutine you</source>
          <target state="translated">Para utilizar la subrutina AUTOLOAD del &lt;b&gt;Autocargador&lt;/b&gt; ,</target>
        </trans-unit>
        <trans-unit id="af99082b46921b802ae95263001ef07cb7aa2040" translate="yes" xml:space="preserve">
          <source>In ordinary paragraphs and in some command paragraphs, various formatting codes (a.k.a. &quot;interior sequences&quot;) can be used:</source>
          <target state="translated">En los párrafos ordinarios y en algunos párrafos de comando,pueden utilizarse varios códigos de formato (también conocidos como &quot;secuencias interiores&quot;):</target>
        </trans-unit>
        <trans-unit id="de5a0be2abf85a22324ace726b3f113f3ddb049b" translate="yes" xml:space="preserve">
          <source>In other boolean contexts, &lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; without an explicit &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; test or comparison elicits a warning if the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; command-line switch (the &lt;code&gt;$^W&lt;/code&gt; variable) is in effect.</source>
          <target state="translated">En otros contextos booleanos, &lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; sin una prueba o comparaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;citamente &lt;i&gt;genera&lt;/i&gt; una advertencia si el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; o el &lt;b&gt;modificador -w&lt;/b&gt; de la l&amp;iacute;nea de comandos (la variable &lt;code&gt;$^W&lt;/code&gt; ) est&amp;aacute; en efecto.</target>
        </trans-unit>
        <trans-unit id="db1110375e2390784483badecec61d64d1163ab0" translate="yes" xml:space="preserve">
          <source>In other boolean contexts, &lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; without an explicit &lt;code&gt;defined&lt;/code&gt; test or comparison elicits a warning if the &lt;code&gt;use warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; command-line switch (the &lt;code&gt;$^W&lt;/code&gt; variable) is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1fabb50ebfaee65dd88358116ce7e544578fdb" translate="yes" xml:space="preserve">
          <source>In other cases, it is the program's responsibility to transform characters into bytes using the API above before doing writes, and to transform the bytes read from a handle into characters before doing &quot;character operations&quot; (e.g. &lt;code&gt;lc&lt;/code&gt;, &lt;code&gt;/\W+/&lt;/code&gt;, ...).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633c40ae3272eb641ed90a2b64f933bcfc1ab4fa" translate="yes" xml:space="preserve">
          <source>In other cases, the patch will need more work or discussion. That will happen on the p5p list.</source>
          <target state="translated">En otros casos,el parche necesitará más trabajo o discusión.Eso ocurrirá en la lista p5p.</target>
        </trans-unit>
        <trans-unit id="c74f18e17145b68ed08eb57bab88ef99e0da3c9f" translate="yes" xml:space="preserve">
          <source>In other cases, the patch will need more work or discussion. You are encouraged to participate in the discussion and advocate for your patch. Sometimes your patch may get lost in the shuffle. It's appropriate to send a reminder email to p5p if no action has been taken in a month. Please remember that the Perl 5 developers are all volunteers, and be polite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3796099c87e59fc24644465a4e8f63a8bac8d4" translate="yes" xml:space="preserve">
          <source>In other files which wish to use &lt;code&gt;YourModule&lt;/code&gt; :</source>
          <target state="translated">En otros archivos que deseen utilizar &lt;code&gt;YourModule&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3361910c0a44a8f06143bc3e2135d6b5df3e75a8" translate="yes" xml:space="preserve">
          <source>In other files which wish to use &lt;code&gt;YourModule&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8bb595443598bbfebd43734b72b246e5109db8" translate="yes" xml:space="preserve">
          <source>In other files which wish to use your module there are three basic ways for them to load your module and import its symbols:</source>
          <target state="translated">En otros archivos que deseen utilizar su módulo hay tres formas básicas para que carguen su módulo e importen sus símbolos:</target>
        </trans-unit>
        <trans-unit id="2a62d5a9fb2b01aecc3f16e0f5d8dbd83913e66d" translate="yes" xml:space="preserve">
          <source>In other words this returns TRUE if &lt;code&gt;s&lt;/code&gt; points to a partial UTF-8-encoded code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac5b44cbcccec7c46874f1c0dae34c3e4179f83" translate="yes" xml:space="preserve">
          <source>In other words, a call to &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; resumes the depth-first, left-to-right search of &lt;code&gt;$self&lt;/code&gt; 's class hierarchy that resulted in the original call to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">En otras palabras, una llamada a &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; reanuda la b&amp;uacute;squeda en profundidad de izquierda a derecha de &lt;code&gt;$self&lt;/code&gt; jerarqu&amp;iacute;a de clases de $ self que result&amp;oacute; en la llamada original a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43077ef64c7bdb380f466e9ffbd60672fc125c18" translate="yes" xml:space="preserve">
          <source>In other words, a call to &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; resumes the depth-first, left-to-right search of &lt;code&gt;$self&lt;/code&gt;'s class hierarchy that resulted in the original call to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc23fa173938b1012fd5950a9ca473499f233be7" translate="yes" xml:space="preserve">
          <source>In other words, a phrasebook entry takes some values as parameters (the things that you fill in the blank or blanks), and provides a value based on these parameters, where the way you get that final value from the given values can, properly speaking, involve an arbitrarily complex series of operations. (In the case of Chinese, it'd be not at all complex, at least in cases like the examples at the beginning of this article; whereas in the case of Russian it'd be a rather complex series of operations. And in some languages, the complexity could be spread around differently: while the act of putting a number-expression in front of a noun phrase might not be complex by itself, it may change how you have to, for example, inflect a verb elsewhere in the sentence. This is what in syntax is called &quot;long-distance dependencies&quot;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52dac3e16942362561bc185e3a6885901f3c2e9" translate="yes" xml:space="preserve">
          <source>In other words, do not &lt;code&gt;use encoding&lt;/code&gt; unless you are certain that the program will not deal with any raw, 8-bit binary data at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4828bb0cda42f406a7ca05570f3e0910c8f19571" translate="yes" xml:space="preserve">
          <source>In other words, each type of bracket specified as a delimiter must be balanced and correctly nested within the substring, and any other kind of (&quot;non-delimiter&quot;) bracket in the substring is ignored.</source>
          <target state="translated">En otras palabras,cada tipo de corchete especificado como delimitador debe estar equilibrado y correctamente anidado dentro de la subcadena,y se ignora cualquier otro tipo de corchete (&quot;no delimitador&quot;)en la subcadena.</target>
        </trans-unit>
        <trans-unit id="74fd5671e652ca312e8092bc1ce538f5b223a43a" translate="yes" xml:space="preserve">
          <source>In other words, if you try this:</source>
          <target state="translated">En otras palabras,si intentas esto:</target>
        </trans-unit>
        <trans-unit id="877ca893c0d0ee5563d6603bca839b1fc7617192" translate="yes" xml:space="preserve">
          <source>In other words, implicate_supers_strictly takes a list of strings (which are presumed to be language-tags; strings that aren't, are ignored) and after the whole given list, it inserts the super-ordinate forms of all given tags, minus any tags that already appear in the input list.</source>
          <target state="translated">En otras palabras,implicate_supers_strictly toma una lista de cadenas (que se presume son etiquetas de lenguaje;las cadenas que no lo son,son ignoradas)y después de toda la lista dada,inserta las formas superordinadas de todas las etiquetas dadas,menos las etiquetas que ya aparecen en la lista de entrada.</target>
        </trans-unit>
        <trans-unit id="25d319aebdebcd5625f4059cfe98447477589bac" translate="yes" xml:space="preserve">
          <source>In other words, in the &quot;C&quot; (or English) locale the above will probably print something like:</source>
          <target state="translated">En otras palabras,en el lugar de la &quot;C&quot; (o inglés)lo anterior probablemente imprimirá algo como:</target>
        </trans-unit>
        <trans-unit id="550ff39ed161b9edd0e84b02fed3dec9d30c2e67" translate="yes" xml:space="preserve">
          <source>In other words, it does not check the full recursion stack.</source>
          <target state="translated">En otras palabras,no comprueba la pila de recursividad completa.</target>
        </trans-unit>
        <trans-unit id="e0fc4bff9ab6a124fdea1a036cef443002eab13f" translate="yes" xml:space="preserve">
          <source>In other words, it takes this:</source>
          <target state="translated">En otras palabras,se necesita esto:</target>
        </trans-unit>
        <trans-unit id="9c65668195992fe68f06679feb8eacf4cd2f8800" translate="yes" xml:space="preserve">
          <source>In other words, it's the character whose code point has had 64 xor'd with its uppercase. &lt;code&gt;\c?&lt;/code&gt; is DELETE on ASCII platforms because &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;?&quot;) ^ 64&lt;/code&gt; is 127, and &lt;code&gt;\c@&lt;/code&gt; is NULL because the ord of &lt;code&gt;&quot;@&quot;&lt;/code&gt; is 64, so xor'ing 64 itself produces 0.</source>
          <target state="translated">En otras palabras, es el car&amp;aacute;cter cuyo punto de c&amp;oacute;digo ha tenido 64 xor con su may&amp;uacute;scula. &lt;code&gt;\c?&lt;/code&gt; es DELETE en plataformas ASCII porque &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;?&quot;) ^ 64&lt;/code&gt; es 127, y &lt;code&gt;\c@&lt;/code&gt; es NULL porque el ord de &lt;code&gt;&quot;@&quot;&lt;/code&gt; es 64, por lo que xor'ing 64 produce 0.</target>
        </trans-unit>
        <trans-unit id="3b1f13df18bf646ce1ea690c89b90d0f23fa7742" translate="yes" xml:space="preserve">
          <source>In other words, it's the character whose code point has had 64 xor'd with its uppercase. &lt;code&gt;\c?&lt;/code&gt; is DELETE on ASCII platforms because &lt;code&gt;ord(&quot;?&quot;) ^ 64&lt;/code&gt; is 127, and &lt;code&gt;\c@&lt;/code&gt; is NULL because the ord of &lt;code&gt;&quot;@&quot;&lt;/code&gt; is 64, so xor'ing 64 itself produces 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7ead3432ce6ef0a214c631da3fb65f28ad59d4" translate="yes" xml:space="preserve">
          <source>In other words, it's the projection of the vector onto the</source>
          <target state="translated">En otras palabras,es la proyección del vector sobre el</target>
        </trans-unit>
        <trans-unit id="173982625284de4ecdaf57b42d11dd41503a3a62" translate="yes" xml:space="preserve">
          <source>In other words, once the &lt;code&gt;(*COMMIT)&lt;/code&gt; has been entered, and if the pattern does not match, the regex engine will not try any further matching on the rest of the string.</source>
          <target state="translated">En otras palabras, una vez que se ha ingresado &lt;code&gt;(*COMMIT)&lt;/code&gt; , y si el patr&amp;oacute;n no coincide, el motor de expresiones regulares no intentar&amp;aacute; m&amp;aacute;s coincidencias en el resto de la cadena.</target>
        </trans-unit>
        <trans-unit id="080def995649dc7c78c927509a6265da0f050d82" translate="yes" xml:space="preserve">
          <source>In other words, text outside bracket groups is turned into string literals. Text in brackets is rather more complex, and currently follows these rules:</source>
          <target state="translated">En otras palabras,el texto fuera de los grupos de corchetes se convierte en literales de cadena.El texto entre corchetes es bastante más complejo,y actualmente sigue estas reglas:</target>
        </trans-unit>
        <trans-unit id="f68e3679fc5753d52f8311d0156c23ac089d43c6" translate="yes" xml:space="preserve">
          <source>In other words, the Pod processing handler for &quot;head1&quot; will apply the same processing to &quot;Did You Remember to C&amp;lt;use strict;&amp;gt;?&quot; that it would to an ordinary paragraph (i.e., formatting codes like &quot;C&amp;lt;...&amp;gt;&quot;) are parsed and presumably formatted appropriately, and whitespace in the form of literal spaces and/or tabs is not significant.</source>
          <target state="translated">En otras palabras, el controlador de procesamiento de Pod para &quot;head1&quot; aplicar&amp;aacute; el mismo procesamiento a &quot;&amp;iquest;Recordaste C &amp;lt;usar estricto;&amp;gt;?&quot; que para un p&amp;aacute;rrafo ordinario (es decir, c&amp;oacute;digos de formato como &quot;C &amp;lt;...&amp;gt;&quot;) se analizan y presumiblemente se formatean de forma adecuada, y los espacios en blanco en forma de espacios literales y / o tabulaciones no son significativos.</target>
        </trans-unit>
        <trans-unit id="d0443748797b84576038c7f78a4ac322e4d4dc07" translate="yes" xml:space="preserve">
          <source>In other words, the author of a module should be considered to have final say on modifications to their module whenever possible (bearing in mind that it's expected that everyone involved will work together and arrive at reasonable compromises when there are disagreements).</source>
          <target state="translated">En otras palabras,se debe considerar que el autor de un módulo tiene la última palabra sobre las modificaciones de su módulo siempre que sea posible (teniendo en cuenta que se espera que todos los involucrados trabajen juntos y lleguen a compromisos razonables cuando haya desacuerdos).</target>
        </trans-unit>
        <trans-unit id="585a94d48c61cb81b39fc84dfe81f19ca97413b7" translate="yes" xml:space="preserve">
          <source>In other words, the implementation of &lt;code&gt;extract_tagged&lt;/code&gt; is exactly equivalent to:</source>
          <target state="translated">En otras palabras, la implementaci&amp;oacute;n de &lt;code&gt;extract_tagged&lt;/code&gt; es exactamente equivalente a:</target>
        </trans-unit>
        <trans-unit id="6437ac2d46829a1156ddedffd3475d352ba0e256" translate="yes" xml:space="preserve">
          <source>In other words, the previous example, would become:</source>
          <target state="translated">En otras palabras,el ejemplo anterior,se convertiría:</target>
        </trans-unit>
        <trans-unit id="bb35ba757de61444a9e16187e2167074637a80ae" translate="yes" xml:space="preserve">
          <source>In other words, the two zero-width assertions next to each other work as though they're ANDed together, just as you'd use any built-in assertions: &lt;code&gt;/^$/&lt;/code&gt; matches only if you're at the beginning of the line AND the end of the line simultaneously. The deeper underlying truth is that juxtaposition in regular expressions always means AND, except when you write an explicit OR using the vertical bar. &lt;code&gt;/ab/&lt;/code&gt; means match &quot;a&quot; AND (then) match &quot;b&quot;, although the attempted matches are made at different positions because &quot;a&quot; is not a zero-width assertion, but a one-width assertion.</source>
          <target state="translated">En otras palabras, las dos aserciones de ancho cero una al lado de la otra funcionan como si estuvieran unidas por AND, tal como usar&amp;iacute;a cualquier aserci&amp;oacute;n incorporada: &lt;code&gt;/^$/&lt;/code&gt; coincide solo si est&amp;aacute; al comienzo de la l&amp;iacute;nea Y el final de la l&amp;iacute;nea simult&amp;aacute;neamente. La verdad subyacente m&amp;aacute;s profunda es que la yuxtaposici&amp;oacute;n en las expresiones regulares siempre significa Y, excepto cuando escribe un O expl&amp;iacute;cito usando la barra vertical. &lt;code&gt;/ab/&lt;/code&gt; significa coincidir con &quot;a&quot; Y (luego) coincidir con &quot;b&quot;, aunque las coincidencias intentadas se realizan en diferentes posiciones porque &quot;a&quot; no es una aserci&amp;oacute;n de ancho cero, sino una aserci&amp;oacute;n de un ancho.</target>
        </trans-unit>
        <trans-unit id="b22de3fc0445ea5201a62f3ef67fff0c1b919420" translate="yes" xml:space="preserve">
          <source>In other words, the version will be automatically parsed out of the string, and it will be quoted to preserve the meaning CVS normally carries for versions. The CVS $Revision$ increments differently from Decimal versions (i.e. 1.10 follows 1.9), so it must be handled as if it were a Dotted-Decimal Version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459d5640fff6f70049a1cb4e21dd9d95f811c50c" translate="yes" xml:space="preserve">
          <source>In other words, this is valid:</source>
          <target state="translated">En otras palabras,esto es válido:</target>
        </trans-unit>
        <trans-unit id="b1e37082db8f86fab9970e0f78a995b4a26a2a25" translate="yes" xml:space="preserve">
          <source>In other words, you can write:</source>
          <target state="translated">En otras palabras,puedes escribir:</target>
        </trans-unit>
        <trans-unit id="8aa186b5e0e574c2c9765bd09cdce944830c9ba2" translate="yes" xml:space="preserve">
          <source>In other words: regardless of platform, use &lt;a href=&quot;#binmode-FILEHANDLE%2C-LAYER&quot;&gt;&lt;code&gt;binmode&lt;/code&gt;&lt;/a&gt; on binary data, like images, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760e520ac926fbcbcf184f0f289efd734964ab6f" translate="yes" xml:space="preserve">
          <source>In other words: regardless of platform, use binmode() on binary data, like images, for example.</source>
          <target state="translated">En otras palabras:independientemente de la plataforma,use binmode()en los datos binarios,como las imágenes,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="9c34e83f6eab1310b3613a944eb5e27cd7e611dd" translate="yes" xml:space="preserve">
          <source>In other words: replace &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; DynaLoader&lt;/code&gt; by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; XSLoader&lt;/code&gt; , remove &lt;code&gt;DynaLoader&lt;/code&gt; from &lt;code&gt;@ISA&lt;/code&gt; , change &lt;code&gt;bootstrap&lt;/code&gt; by &lt;code&gt;XSLoader::load&lt;/code&gt; . Do not forget to quote the name of your package on the &lt;code&gt;XSLoader::load&lt;/code&gt; line, and add comma (&lt;code&gt;,&lt;/code&gt; ) before the arguments (&lt;code&gt;$VERSION&lt;/code&gt; above).</source>
          <target state="translated">En otras palabras: reemplazar &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; DynaLoader&lt;/code&gt; por &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; XSLoader&lt;/code&gt; , retire &lt;code&gt;DynaLoader&lt;/code&gt; de &lt;code&gt;@ISA&lt;/code&gt; , el cambio &lt;code&gt;bootstrap&lt;/code&gt; por &lt;code&gt;XSLoader::load&lt;/code&gt; . No olvide citar el nombre de su paquete en la l&amp;iacute;nea &lt;code&gt;XSLoader::load&lt;/code&gt; y agregue una coma ( &lt;code&gt;,&lt;/code&gt; ) antes de los argumentos ( &lt;code&gt;$VERSION&lt;/code&gt; arriba).</target>
        </trans-unit>
        <trans-unit id="4b5c137fe49cb774422851c667c514342acdc0cc" translate="yes" xml:space="preserve">
          <source>In other words: replace &lt;code&gt;require DynaLoader&lt;/code&gt; by &lt;code&gt;use XSLoader&lt;/code&gt;, remove &lt;code&gt;DynaLoader&lt;/code&gt; from &lt;code&gt;@ISA&lt;/code&gt;, change &lt;code&gt;bootstrap&lt;/code&gt; by &lt;code&gt;XSLoader::load&lt;/code&gt;. Do not forget to quote the name of your package on the &lt;code&gt;XSLoader::load&lt;/code&gt; line, and add comma (&lt;code&gt;,&lt;/code&gt;) before the arguments (&lt;code&gt;$VERSION&lt;/code&gt; above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc33d1c173d87ad8a862029ec4420d308b38832f" translate="yes" xml:space="preserve">
          <source>In our case, Mytest.pm tells perl that it will need the Exporter and Dynamic Loader extensions. It then sets the &lt;code&gt;@ISA&lt;/code&gt; and &lt;code&gt;@EXPORT&lt;/code&gt; arrays and the &lt;code&gt;$VERSION&lt;/code&gt; scalar; finally it tells perl to bootstrap the module. Perl will call its dynamic loader routine (if there is one) and load the shared library.</source>
          <target state="translated">En nuestro caso, Mytest.pm le dice a perl que necesitar&amp;aacute; las extensiones Exporter y Dynamic Loader. Luego, establece las matrices &lt;code&gt;@ISA&lt;/code&gt; y &lt;code&gt;@EXPORT&lt;/code&gt; y el escalar &lt;code&gt;$VERSION&lt;/code&gt; ; finalmente le dice a perl que arranque el m&amp;oacute;dulo. Perl llamar&amp;aacute; a su rutina de carga din&amp;aacute;mica (si hay una) y cargar&amp;aacute; la biblioteca compartida.</target>
        </trans-unit>
        <trans-unit id="a50979678185f172c0b3a9e65775a69eef6dc7e9" translate="yes" xml:space="preserve">
          <source>In our example there is no reason to implement this method, so we leave it as a no-op. This method is only relevant to tied array implementations where there is the possibility of having the allocated size of the array be larger than is visible to a perl programmer inspecting the size of the array. Many tied array implementations will have no reason to implement it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b4893cf24b728e0fae1966639d9078e63fc3f7" translate="yes" xml:space="preserve">
          <source>In our example we can just call &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; on the underlying hash referenced by &lt;code&gt;$self-&amp;gt;{LIST}&lt;/code&gt; :</source>
          <target state="translated">En nuestro ejemplo, podemos simplemente llamar a &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; en el hash subyacente al que hace referencia &lt;code&gt;$self-&amp;gt;{LIST}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb7cff901b6f0144e1ee9b6dc1a0e390ab74d831" translate="yes" xml:space="preserve">
          <source>In our example we can just call &lt;code&gt;scalar&lt;/code&gt; on the underlying hash referenced by &lt;code&gt;$self-&amp;gt;{LIST}&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1f779d9a34032474fc9a65f77cb8d2776cbce1" translate="yes" xml:space="preserve">
          <source>In our example we're going to create a shouting handle.</source>
          <target state="translated">En nuestro ejemplo vamos a crear una manija para gritar.</target>
        </trans-unit>
        <trans-unit id="a13dbabebbc5437dccc50e5be8ddf3c33a642ee8" translate="yes" xml:space="preserve">
          <source>In our example, 'undef' is really an element containing &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; number of spaces. Observe:</source>
          <target state="translated">En nuestro ejemplo, 'undef' es realmente un elemento que contiene &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; n&amp;uacute;mero de espacios. Observar:</target>
        </trans-unit>
        <trans-unit id="aabcb2149f4617fcf7efa6bbc92a17b687ef3353" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is really &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; number of spaces so we have a little more work to do here:</source>
          <target state="translated">En nuestro ejemplo, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; es realmente &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; n&amp;uacute;mero de espacios, as&amp;iacute; que tenemos un poco m&amp;aacute;s de trabajo por hacer aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="d967da8f9ad72b6996f76cb7869dbad1f32de0ee" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;undef&lt;/code&gt; is really &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; number of spaces so we have a little more work to do here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1787ee08eebed75ede8020208e3ff9eccca1a6" translate="yes" xml:space="preserve">
          <source>In our example, a deleted item is &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; spaces:</source>
          <target state="translated">En nuestro ejemplo, un elemento eliminado es &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; espacios:</target>
        </trans-unit>
        <trans-unit id="91424799b59a91080c214218f5e7f8c9b0b084d8" translate="yes" xml:space="preserve">
          <source>In our example, just to show you that you don't</source>
          <target state="translated">En nuestro ejemplo,sólo para mostrarte que no</target>
        </trans-unit>
        <trans-unit id="11b35d0e0b09647c243a787b95c24ae27233aecd" translate="yes" xml:space="preserve">
          <source>In our example, that would remove all the user's dot files! It's such a dangerous thing that they'll have to set CLOBBER to something higher than 1 to make it happen.</source>
          <target state="translated">En nuestro ejemplo,eso eliminaría todos los archivos de puntos del usuario.Es algo tan peligroso que tendrán que poner CLOBBER a algo más alto que 1 para que suceda.</target>
        </trans-unit>
        <trans-unit id="8f92d427a1809586b396dc516bf348aaa08bbed7" translate="yes" xml:space="preserve">
          <source>In our example, we want to make sure there are no blank (&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;) entries, so &lt;code&gt;EXTEND&lt;/code&gt; will make use of &lt;code&gt;STORESIZE&lt;/code&gt; to fill elements as needed:</source>
          <target state="translated">En nuestro ejemplo, queremos asegurarnos de que no &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; entradas en blanco ( indef ), por lo que &lt;code&gt;EXTEND&lt;/code&gt; har&amp;aacute; uso de &lt;code&gt;STORESIZE&lt;/code&gt; para completar los elementos seg&amp;uacute;n sea necesario:</target>
        </trans-unit>
        <trans-unit id="24d1f4e04fd957695cb0fc036193c59fca0468cd" translate="yes" xml:space="preserve">
          <source>In our example, we will determine that if an element consists of &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; spaces only, it does not exist:</source>
          <target state="translated">En nuestro ejemplo, determinaremos que si un elemento consta de espacios &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; &amp;uacute;nicamente, no existe:</target>
        </trans-unit>
        <trans-unit id="9241072dd02f63704e06d0e4788fd47ef3eca294" translate="yes" xml:space="preserve">
          <source>In our example, we'll use a little shortcut if there is a</source>
          <target state="translated">En nuestro ejemplo,usaremos un pequeño atajo si hay un</target>
        </trans-unit>
        <trans-unit id="6a2c73ee683cc447274fd115e41a8a6212c0860c" translate="yes" xml:space="preserve">
          <source>In our intranet, we have many modules for internal use. How can I integrate these modules with CPAN.pm but without uploading the modules to CPAN?</source>
          <target state="translated">En nuestra intranet,tenemos muchos módulos para uso interno.¿Cómo puedo integrar estos módulos con CPAN.pm pero sin subir los módulos a CPAN?</target>
        </trans-unit>
        <trans-unit id="e3d33b8a8cd9ee1cbb39097ccf83087f357647e8" translate="yes" xml:space="preserve">
          <source>In our tied hash DotFiles example, we use a regular hash for the object containing several important fields, of which only the &lt;code&gt;{LIST}&lt;/code&gt; field will be what the user thinks of as the real hash.</source>
          <target state="translated">En nuestro ejemplo de DotFiles de hash vinculado, usamos un hash regular para el objeto que contiene varios campos importantes, de los cuales solo el campo &lt;code&gt;{LIST}&lt;/code&gt; ser&amp;aacute; lo que el usuario considere el hash real.</target>
        </trans-unit>
        <trans-unit id="07709450f49a2785357dceda9bbcd6e033ef5380" translate="yes" xml:space="preserve">
          <source>In paragraphs where formatting codes (like E&amp;lt;...&amp;gt;, B&amp;lt;...&amp;gt;) are understood (i.e.,</source>
          <target state="translated">En los p&amp;aacute;rrafos donde se entienden los c&amp;oacute;digos de formato (como E &amp;lt;...&amp;gt;, B &amp;lt;...&amp;gt;) (es decir,</target>
        </trans-unit>
        <trans-unit id="fb0742f46f732e81f9ef6b26f9dd077a50514538" translate="yes" xml:space="preserve">
          <source>In parsing Pod, a notably tricky part is the correct parsing of (potentially nested!) formatting codes. Implementors should consult the code in the &lt;code&gt;parse_text&lt;/code&gt; routine in Pod::Parser as an example of a correct implementation.</source>
          <target state="translated">Al analizar Pod, una parte notablemente complicada es el an&amp;aacute;lisis correcto de los c&amp;oacute;digos de formato (&amp;iexcl;potencialmente anidados!). Los implementadores deben consultar el c&amp;oacute;digo en la rutina &lt;code&gt;parse_text&lt;/code&gt; en Pod :: Parser como un ejemplo de una implementaci&amp;oacute;n correcta.</target>
        </trans-unit>
        <trans-unit id="e44b2915e9ebcfa80eaf0cd0b8fc6a537b378a7a" translate="yes" xml:space="preserve">
          <source>In parsing an L&amp;lt;...&amp;gt; code, Pod parsers must distinguish at least four attributes:</source>
          <target state="translated">Al analizar un c&amp;oacute;digo L &amp;lt;...&amp;gt;, los analizadores de pod deben distinguir al menos cuatro atributos:</target>
        </trans-unit>
        <trans-unit id="173ae1b4c7abf280ed9de2a2e4233e82968c1ade" translate="yes" xml:space="preserve">
          <source>In parsing these constructs, Perl always ignores Upper/lower case differences everywhere within the {braces}. Thus &lt;code&gt;\p{Greek}&lt;/code&gt; means the same thing as &lt;code&gt;\p{greek}&lt;/code&gt; . But note that changing the case of the &lt;code&gt;&quot;p&quot;&lt;/code&gt; or &lt;code&gt;&quot;P&quot;&lt;/code&gt; before the left brace completely changes the meaning of the construct, from &quot;match&quot; (for &lt;code&gt;\p{}&lt;/code&gt; ) to &quot;doesn't match&quot; (for &lt;code&gt;\P{}&lt;/code&gt; ). Casing in this document is for improved legibility.</source>
          <target state="translated">Al analizar estas construcciones, Perl siempre ignora las diferencias entre may&amp;uacute;sculas y min&amp;uacute;sculas en todas partes dentro de las {llaves}. Por tanto, &lt;code&gt;\p{Greek}&lt;/code&gt; significa lo mismo que &lt;code&gt;\p{greek}&lt;/code&gt; . Pero tenga en cuenta que cambiar el caso de la &lt;code&gt;&quot;p&quot;&lt;/code&gt; o &lt;code&gt;&quot;P&quot;&lt;/code&gt; antes de la llave izquierda cambia completamente el significado de la construcci&amp;oacute;n, de &quot;coincide&quot; (para &lt;code&gt;\p{}&lt;/code&gt; ) a &quot;no coincide&quot; (para &lt;code&gt;\P{}&lt;/code&gt; ). La carcasa de este documento es para mejorar la legibilidad.</target>
        </trans-unit>
        <trans-unit id="567197a99a2b6b0fd77102ccbee0d1f2509d1634" translate="yes" xml:space="preserve">
          <source>In parsing these constructs, Perl always ignores Upper/lower case differences everywhere within the {braces}. Thus &lt;code&gt;\p{Greek}&lt;/code&gt; means the same thing as &lt;code&gt;\p{greek}&lt;/code&gt;. But note that changing the case of the &lt;code&gt;&quot;p&quot;&lt;/code&gt; or &lt;code&gt;&quot;P&quot;&lt;/code&gt; before the left brace completely changes the meaning of the construct, from &quot;match&quot; (for &lt;code&gt;\p{}&lt;/code&gt;) to &quot;doesn't match&quot; (for &lt;code&gt;\P{}&lt;/code&gt;). Casing in this document is for improved legibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aaf8e25ca7ca9dd8d4b03a35ad6a47a7f371c04" translate="yes" xml:space="preserve">
          <source>In particular</source>
          <target state="translated">En particular</target>
        </trans-unit>
        <trans-unit id="2f4b20effb603658d4594f20068f3202a019f207" translate="yes" xml:space="preserve">
          <source>In particular have a hunt around for the following:</source>
          <target state="translated">En particular,tener una caza en torno a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="549a73d37bd647b3d02bdfb1ed4587a94e6c791c" translate="yes" xml:space="preserve">
          <source>In particular the following metacharacters have their standard</source>
          <target state="translated">En particular,los siguientes metacaracteres tienen su estándar</target>
        </trans-unit>
        <trans-unit id="d9ca3d8c112df43cded72f31c7db395214aede20" translate="yes" xml:space="preserve">
          <source>In particular,</source>
          <target state="translated">En particular,</target>
        </trans-unit>
        <trans-unit id="ef80eb5daee93a0d4fde8126fc49aefdc4e89c82" translate="yes" xml:space="preserve">
          <source>In particular, &lt;code&gt;Tie::File&lt;/code&gt; will</source>
          <target state="translated">En particular, &lt;code&gt;Tie::File&lt;/code&gt; voluntad</target>
        </trans-unit>
        <trans-unit id="2db3c0671aba0d3ee80c31fffb1da43c83f4160e" translate="yes" xml:space="preserve">
          <source>In particular, braces do not need to be balanced:</source>
          <target state="translated">En particular,los frenos no necesitan ser equilibrados:</target>
        </trans-unit>
        <trans-unit id="2cbf0bbf93ed5b0e470ae4c77978f151618da6e4" translate="yes" xml:space="preserve">
          <source>In particular, follow these general guidelines for patching Perl sources:</source>
          <target state="translated">En particular,siga estas directrices generales para parchear las fuentes de Perl:</target>
        </trans-unit>
        <trans-unit id="588a69fc1734910196fa33dcc3398592c9c2b486" translate="yes" xml:space="preserve">
          <source>In particular, if you are using Info-Zip you need to have zip version 3.x or better to update a Zip64 archive and unzip version 6.x to read a zip64 archive.</source>
          <target state="translated">En particular,si usas Info-Zip necesitas tener la versión 3.x o mejor para actualizar un archivo Zip64 y descomprimir la versión 6.x para leer un archivo Zip64.</target>
        </trans-unit>
        <trans-unit id="b8504eca27d4d7dd980e055d06368ef344507bf5" translate="yes" xml:space="preserve">
          <source>In particular, if you opened the pipe using &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , then you cannot simply use close() in the parent process to close an unwanted writer. Consider this code:</source>
          <target state="translated">En particular, si abri&amp;oacute; la tuber&amp;iacute;a usando &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , entonces no puede simplemente usar close () en el proceso padre para cerrar un escritor no deseado. Considere este c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="617f0768594e1a999044d2a759bf8abcc2e11a58" translate="yes" xml:space="preserve">
          <source>In particular, if you opened the pipe using &lt;code&gt;open $fh, &quot;|-&quot;&lt;/code&gt;, then you cannot simply use close() in the parent process to close an unwanted writer. Consider this code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f883bf0e56efd410000618d8c0d414be5f0032" translate="yes" xml:space="preserve">
          <source>In particular, it is not possible to write general-purpose classes in this technique, classes that can advertise themselves as &quot;Put me on your @ISA list and use my methods&quot;. If the other class has different ideas about how the object body is used, there is trouble.</source>
          <target state="translated">En particular,no es posible escribir clases de propósito general en esta técnica,clases que pueden anunciarse como &quot;Póngame en su lista @ISA y use mis métodos&quot;.Si la otra clase tiene ideas diferentes sobre cómo se usa el cuerpo del objeto,hay problemas.</target>
        </trans-unit>
        <trans-unit id="03344b04b4c0d7615be3556f843e83b5fe66f49c" translate="yes" xml:space="preserve">
          <source>In particular, matches in the Block property have single forms defined by Perl that begin with &lt;code&gt;&quot;In_&quot;&lt;/code&gt;, &lt;code&gt;&quot;Is_&lt;/code&gt;, or even with no prefix at all, Like all &lt;b&gt;DISCOURAGED&lt;/b&gt; forms, these are not stable. For example, &lt;code&gt;\p{Block=Deseret}&lt;/code&gt; can currently be written as &lt;code&gt;\p{In_Deseret}&lt;/code&gt;, &lt;code&gt;\p{Is_Deseret}&lt;/code&gt;, or &lt;code&gt;\p{Deseret}&lt;/code&gt;. But, a new Unicode version may come along that would force Perl to change the meaning of one or more of these, and your program would no longer be correct. Currently there are no such conflicts with the form that begins &lt;code&gt;&quot;In_&quot;&lt;/code&gt;, but there are many with the other two shortcuts, and Unicode continues to define new properties that begin with &lt;code&gt;&quot;In&quot;&lt;/code&gt;, so it's quite possible that a conflict will occur in the future. The compound form is guaranteed to not become obsolete, and its meaning is clearer anyway. See &lt;a href=&quot;perlunicode#Blocks&quot;&gt;&quot;Blocks&quot; in perlunicode&lt;/a&gt; for more information about this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd11e0201dc297df1cba370809db0d5939f0ec0" translate="yes" xml:space="preserve">
          <source>In particular, the extensions &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; and &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; are not supported under EBCDIC; likewise for the (now deprecated) &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; pragma.</source>
          <target state="translated">En particular, las extensiones &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; y &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt; no son compatibles con EBCDIC; lo mismo ocurre con el pragma de &lt;a href=&quot;encoding&quot;&gt;codificaci&amp;oacute;n&lt;/a&gt; (ahora en desuso) .</target>
        </trans-unit>
        <trans-unit id="b491336832fe24926f813912697f1c74d79ed48d" translate="yes" xml:space="preserve">
          <source>In particular, the special &lt;code&gt;${^_XYZ}&lt;/code&gt; variables are always taken to be in package &lt;code&gt;main&lt;/code&gt; , regardless of any &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declarations presently in scope.</source>
          <target state="translated">En particular, las variables especiales &lt;code&gt;${^_XYZ}&lt;/code&gt; siempre se consideran en el paquete &lt;code&gt;main&lt;/code&gt; , independientemente de las declaraciones de &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; que se encuentren actualmente en el alcance.</target>
        </trans-unit>
        <trans-unit id="8a1a5cc8fc75fe5ee962a5cf753fa9e49875cad8" translate="yes" xml:space="preserve">
          <source>In particular, the special &lt;code&gt;${^_XYZ}&lt;/code&gt; variables are always taken to be in package &lt;code&gt;main&lt;/code&gt;, regardless of any &lt;code&gt;package&lt;/code&gt; declarations presently in scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adbc38d169db3c0edbc488274012a781b34d025" translate="yes" xml:space="preserve">
          <source>In particular, this API does &lt;b&gt;not&lt;/b&gt; provide the following functions:</source>
          <target state="translated">En particular, esta API &lt;b&gt;no&lt;/b&gt; proporciona las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="26d259999f6bd5eabc0e32bc92fd018cffcba101" translate="yes" xml:space="preserve">
          <source>In particular, this is applicable to the structure of &lt;code&gt;@INC&lt;/code&gt; used for testing not-yet-installed extensions. This means that running uninstalled extensions may have much more overhead than running the same extensions after &lt;code&gt;make install&lt;/code&gt; .</source>
          <target state="translated">En particular, esto es aplicable a la estructura de &lt;code&gt;@INC&lt;/code&gt; usada para probar extensiones a&amp;uacute;n no instaladas. Esto significa que ejecutar extensiones desinstaladas puede tener mucha m&amp;aacute;s sobrecarga que ejecutar las mismas extensiones despu&amp;eacute;s de &lt;code&gt;make install&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1aaa91f92ed68961c96b411d0f088a1a8511e37d" translate="yes" xml:space="preserve">
          <source>In particular, this is applicable to the structure of &lt;code&gt;@INC&lt;/code&gt; used for testing not-yet-installed extensions. This means that running uninstalled extensions may have much more overhead than running the same extensions after &lt;code&gt;make install&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2e58986eb4f3be556785c248e50c152e1a4485" translate="yes" xml:space="preserve">
          <source>In particular, this means that you shouldn't use this for selecting between two aggregates for assignment:</source>
          <target state="translated">En particular,esto significa que no se debe utilizar para seleccionar entre dos agregados para la asignación:</target>
        </trans-unit>
        <trans-unit id="6b654969e8b0fb9bedec078843fc01697a0cd123" translate="yes" xml:space="preserve">
          <source>In particular:</source>
          <target state="translated">En particular:</target>
        </trans-unit>
        <trans-unit id="f7e08b6bdc00b0694ecd1bf1d445c34c08eeec2b" translate="yes" xml:space="preserve">
          <source>In patterns where the text of the code is derived from run-time information rather than appearing literally in a source code /pattern/, the code is compiled at the same time that the pattern is compiled, and for reasons of security, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; must be in scope. This is to stop user-supplied patterns containing code snippets from being executable.</source>
          <target state="translated">En patrones donde el texto del c&amp;oacute;digo se deriva de informaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n en lugar de aparecer literalmente en un c&amp;oacute;digo fuente / patr&amp;oacute;n /, el c&amp;oacute;digo se compila al mismo tiempo que se compila el patr&amp;oacute;n y, por razones de seguridad, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; debe estar dentro del alcance. Esto es para evitar que los patrones proporcionados por el usuario que contienen fragmentos de c&amp;oacute;digo sean ejecutables.</target>
        </trans-unit>
        <trans-unit id="e276d91a0e58a0322954e2290f2d425e6220be43" translate="yes" xml:space="preserve">
          <source>In patterns where the text of the code is derived from run-time information rather than appearing literally in a source code /pattern/, the code is compiled at the same time that the pattern is compiled, and for reasons of security, &lt;code&gt;use re 'eval'&lt;/code&gt; must be in scope. This is to stop user-supplied patterns containing code snippets from being executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea88d26430c6d46158be27b80e4634d3a9d07c0" translate="yes" xml:space="preserve">
          <source>In perl 5.14 and higher, on systems other than Windows that do not support the &lt;code&gt;fchdir&lt;/code&gt; C function, directory handles (see &lt;a href=&quot;functions/opendir&quot;&gt;opendir DIRHANDLE,EXPR&lt;/a&gt;) will not be copied to new threads. You can use the &lt;code&gt;d_fchdir&lt;/code&gt; variable in &lt;a href=&quot;config&quot;&gt;Config.pm&lt;/a&gt; to determine whether your system supports it.</source>
          <target state="translated">En perl 5.14 y superior, en sistemas distintos de Windows que no admiten la funci&amp;oacute;n &lt;code&gt;fchdir&lt;/code&gt; C, los identificadores de directorio (consulte &lt;a href=&quot;functions/opendir&quot;&gt;opendir DIRHANDLE, EXPR&lt;/a&gt; ) no se copiar&amp;aacute;n en nuevos hilos. Puede utilizar la variable &lt;code&gt;d_fchdir&lt;/code&gt; en &lt;a href=&quot;config&quot;&gt;Config.pm&lt;/a&gt; para determinar si su sistema la admite.</target>
        </trans-unit>
        <trans-unit id="75d927412f420eb0f10ead4e75910cbe7eab7430" translate="yes" xml:space="preserve">
          <source>In perl 5.14 and higher, on systems other than Windows that do not support the &lt;code&gt;fchdir&lt;/code&gt; C function, directory handles (see &lt;a href=&quot;perlfunc#opendir-DIRHANDLE%2CEXPR&quot;&gt;opendir&lt;/a&gt;) will not be copied to new threads. You can use the &lt;code&gt;d_fchdir&lt;/code&gt; variable in &lt;a href=&quot;config&quot;&gt;Config.pm&lt;/a&gt; to determine whether your system supports it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978dbedfe97270c6d04770e8f1b09ed5adf8e8d1" translate="yes" xml:space="preserve">
          <source>In perl 5.8.0, &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; was also used to mark placeholders in restricted hashes. This caused such hash entries not to appear when iterating over the hash or when checking for the keys with the &lt;code&gt;hv_exists&lt;/code&gt; function.</source>
          <target state="translated">En perl 5.8.0, &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; tambi&amp;eacute;n se utiliz&amp;oacute; para marcar marcadores de posici&amp;oacute;n en hashes restringidos. Esto provoc&amp;oacute; que tales entradas hash no aparecieran al iterar sobre el hash o al verificar las claves con la funci&amp;oacute;n &lt;code&gt;hv_exists&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d10ca79661f6cd0c4cfd21cf2e8aa0ee582a6a" translate="yes" xml:space="preserve">
          <source>In perl 5.8.1 and later, Test::Builder is thread-safe. The test number is shared amongst all threads. This means if one thread sets the test number using &lt;code&gt;current_test()&lt;/code&gt; they will all be effected.</source>
          <target state="translated">En perl 5.8.1 y posteriores, Test :: Builder es seguro para subprocesos. El n&amp;uacute;mero de prueba se comparte entre todos los hilos. Esto significa que si un hilo establece el n&amp;uacute;mero de prueba usando &lt;code&gt;current_test()&lt;/code&gt; , todos se ver&amp;aacute;n afectados.</target>
        </trans-unit>
        <trans-unit id="3a5a7894f13b3108e48548883e8c5856a72ec473" translate="yes" xml:space="preserve">
          <source>In perl 5.8.1 and later, Test::Builder is thread-safe. The test number is shared by all threads. This means if one thread sets the test number using &lt;code&gt;current_test()&lt;/code&gt; they will all be effected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8e3efeeef1db05dc1739fc816278f8bdf67e0a" translate="yes" xml:space="preserve">
          <source>In perl namespaces are called &quot;packages&quot; and the &lt;code&gt;package&lt;/code&gt; declaration tells the compiler which namespace to prefix to &lt;code&gt;our&lt;/code&gt; variables and unqualified dynamic names. This both protects against accidental stomping and provides an interface for deliberately clobbering global dynamic variables declared and used in other scopes or packages, when that is what you want to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1269cc2ad1ea6f2d742e35bd480e05b3838a6225" translate="yes" xml:space="preserve">
          <source>In perl v5.8.0, you can work around this as follows;</source>
          <target state="translated">En perl v5.8.0,puedes trabajar alrededor de esto de la siguiente manera;</target>
        </trans-unit>
        <trans-unit id="3903f5f9bb5ec2db6467ae7e05ade21cf24078e9" translate="yes" xml:space="preserve">
          <source>In perls older than 5.8.1, map suffers from this problem as well. But since 5.8.1, this has been fixed, and map is context aware - in void context, no lists are constructed.</source>
          <target state="translated">En las perlas mayores de 5.8.1,el mapa también sufre este problema.Pero desde 5.8.1,esto se ha arreglado,y el mapa es consciente del contexto-en el contexto vacío,no se construyen listas.</target>
        </trans-unit>
        <trans-unit id="ea278e7090fabecd692fd4230b81818704c298d3" translate="yes" xml:space="preserve">
          <source>In perls without multi-thread locale support, some alien libraries, such as &lt;code&gt;Gtk&lt;/code&gt; change locales. This can cause problems for the Perl core and other modules. For these, before control is returned to perl, starting in v5.20.1, calling the function &lt;a href=&quot;perlapi#sync_locale&quot;&gt;sync_locale()&lt;/a&gt; from XS should be sufficient to avoid most of these problems. Prior to this, you need a pure Perl statement that does this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201c993ba430d2b34780a5f6bce751f372ee2124" translate="yes" xml:space="preserve">
          <source>In portable Perl code, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(9, $child)&lt;/code&gt; must not be used on forked processes. Killing a forked process is unsafe and has unpredictable results. See &lt;a href=&quot;#kill()&quot;&gt;kill()&lt;/a&gt;, above.</source>
          <target state="translated">En el c&amp;oacute;digo Perl port&amp;aacute;til, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(9, $child)&lt;/code&gt; no debe usarse en procesos bifurcados. Matar un proceso bifurcado no es seguro y tiene resultados impredecibles. Vea &lt;a href=&quot;#kill()&quot;&gt;kill ()&lt;/a&gt; , arriba.</target>
        </trans-unit>
        <trans-unit id="1e83f0a235b98e42c7720cdbf4e5b9c914546580" translate="yes" xml:space="preserve">
          <source>In portable Perl code, &lt;code&gt;kill(9, $child)&lt;/code&gt; must not be used on forked processes. Killing a forked process is unsafe and has unpredictable results. See &lt;a href=&quot;#kill%28%29&quot;&gt;&quot;kill()&quot;&lt;/a&gt;, above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c591de97ad94e43f8f39a0a83433ac7e94d500" translate="yes" xml:space="preserve">
          <source>In practice people have come to depend on these over the years, despite being historically undocumented, so we will provide some level of forward compatibility for some time. Nevertheless you can assume that any routine documented here is experimental or deprecated and you should find alternatives to their use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47486744068ceb35eb15ff07d8adf80ccffc0917" translate="yes" xml:space="preserve">
          <source>In practice this logic is better performed by &lt;a href=&quot;IO::Socket::IP&quot;&gt;IO::Socket::IP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e70c5c9f546a348d8be9f13ed9b3d5b217325e" translate="yes" xml:space="preserve">
          <source>In practice this logic is better performed by &lt;a href=&quot;io/socket/ip&quot;&gt;IO::Socket::IP&lt;/a&gt;.</source>
          <target state="translated">En la pr&amp;aacute;ctica, esta l&amp;oacute;gica se realiza mejor con &lt;a href=&quot;io/socket/ip&quot;&gt;IO :: Socket :: IP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f10d5bbc85368eaaed58b49509d8d5537fcea2c6" translate="yes" xml:space="preserve">
          <source>In practice this makes seldom a difference as &lt;b&gt;parts and results&lt;/b&gt; of expressions will be truncated anyway, but this can, for instance, affect the return value of subroutines:</source>
          <target state="translated">En la pr&amp;aacute;ctica, esto rara vez hace una diferencia, ya que las &lt;b&gt;partes y los resultados&lt;/b&gt; de las expresiones se truncar&amp;aacute;n de todos modos, pero esto puede, por ejemplo, afectar el valor de retorno de las subrutinas:</target>
        </trans-unit>
        <trans-unit id="2c8bdda291d4d16e099108c0540471c243257c86" translate="yes" xml:space="preserve">
          <source>In practice, Perl scripts that call programs that return _POSIX_EXIT type status values will be expecting those values, and programs that call traditional VMS programs will either be expecting the previous behavior or just checking for a non-zero status.</source>
          <target state="translated">En la práctica,los scripts Perl que llaman a los programas que devuelven valores de estado de tipo _POSIX_EXIT estarán esperando esos valores,y los programas que llaman a los programas tradicionales de VMS estarán esperando el comportamiento anterior o simplemente comprobando si el estado es distinto de cero.</target>
        </trans-unit>
        <trans-unit id="1a4189d0a08fe1510a9bb56d98f077ee7698c8fc" translate="yes" xml:space="preserve">
          <source>In practice, however, one can generally expect such prerequisites to be one of two things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed326b6d59e850419b57af366a49ca220934029" translate="yes" xml:space="preserve">
          <source>In practice, it is anticipated that this character will not be used often, but formatters should either support it, or delete it.</source>
          <target state="translated">En la práctica,se prevé que este carácter no se utilice con frecuencia,pero los formateadores deberían apoyarlo o eliminarlo.</target>
        </trans-unit>
        <trans-unit id="1ef0975bd5345aa7b1f7b096896a28cbd99bcab1" translate="yes" xml:space="preserve">
          <source>In pre-Sierra macOS (pre-10.12, OS X) clock_getres(), clock_gettime() and clock_nanosleep() are emulated using the Mach timers; as a side effect of being emulated the CLOCK_REALTIME and CLOCK_MONOTONIC are the same timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796550631a5df07b05a560a67d63d7ad67fdf7c5" translate="yes" xml:space="preserve">
          <source>In previous sections we have seen how to pack numbers and character strings. If it were not for a couple of snags we could conclude this section right away with the terse remark that C structures don't contain anything else, and therefore you already know all there is to it. Sorry, no: read on, please.</source>
          <target state="translated">En secciones anteriores hemos visto cómo empaquetar números y cadenas de caracteres.Si no fuera por un par de inconvenientes,podríamos concluir esta sección de inmediato con el breve comentario de que las estructuras C no contienen nada más,y por lo tanto ya sabes todo lo que hay que hacer.Lo siento,no:sigue leyendo,por favor.</target>
        </trans-unit>
        <trans-unit id="692b842adc759f56816c9c058cae643b8a51086a" translate="yes" xml:space="preserve">
          <source>In principle the unpack() command can be used to convert the bytes back to a number (if the underlying type is known to be a number).</source>
          <target state="translated">En principio,el comando unpack()puede utilizarse para convertir los bytes de nuevo en un número (si se sabe que el tipo subyacente es un número).</target>
        </trans-unit>
        <trans-unit id="1221515422031848620efe6d264c7054adcd4f04" translate="yes" xml:space="preserve">
          <source>In prior perl versions, spawning threads with open directory handles would crash the interpreter. &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2frt.perl.org%2frt3%2fPublic%2fBug%2fDisplay.html%3fid%3d75154&quot;&gt;[perl #75154]&lt;/a&gt;</source>
          <target state="translated">En versiones anteriores de Perl, la generaci&amp;oacute;n de subprocesos con identificadores de directorio abiertos bloqueaba el int&amp;eacute;rprete. &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2frt.perl.org%2frt3%2fPublic%2fBug%2fDisplay.html%3fid%3d75154&quot;&gt;[perl # 75154]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e963293b700fb96161131daf0471b9f677f48564" translate="yes" xml:space="preserve">
          <source>In prior perl versions, spawning threads with open directory handles would crash the interpreter. &lt;a href=&quot;https://rt.perl.org/rt3/Public/Bug/Display.html?id=75154&quot;&gt;[perl #75154]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d807cc153636cb39c76e4cb0277ef6012694dae7" translate="yes" xml:space="preserve">
          <source>In programs:</source>
          <target state="translated">En los programas:</target>
        </trans-unit>
        <trans-unit id="48c74c56dfa96426cf79d4567af2599b0fde094e" translate="yes" xml:space="preserve">
          <source>In recent years, vendors have begun to supply systems free of this inherent security bug. On such systems, when the kernel passes the name of the set-id script to open to the interpreter, rather than using a pathname subject to meddling, it instead passes</source>
          <target state="translated">En los últimos años,los vendedores han empezado a suministrar sistemas libres de este inherente fallo de seguridad.En tales sistemas,cuando el núcleo pasa el nombre del script de identificación para abrirse al intérprete,en lugar de usar una ruta sujeta a la intromisión,pasa en cambio</target>
        </trans-unit>
        <trans-unit id="fc7a0ac9fe9f163678a08865a8ae2ec22fbc06ff" translate="yes" xml:space="preserve">
          <source>In regex speak, a word boundary (\b) is a &quot;zero width assertion&quot;, meaning that it doesn't represent a character in the string, but a condition at a certain position.</source>
          <target state="translated">En lenguaje regex,una palabra límite (\b)es una &quot;afirmación de ancho cero&quot;,lo que significa que no representa un carácter en la cadena,sino una condición en una determinada posición.</target>
        </trans-unit>
        <trans-unit id="1b5ca67e58e909ea0b763b445166b0dc50f9fff9" translate="yes" xml:space="preserve">
          <source>In regular expressions, the &lt;code&gt;${foo[2]}&lt;/code&gt; syntax is sometimes necessary to disambiguate between array subscripts and character classes. &lt;code&gt;/$length[2345]/&lt;/code&gt; , for instance, will be interpreted as &lt;code&gt;$length&lt;/code&gt; followed by the character class &lt;code&gt;[2345]&lt;/code&gt; . If an array subscript is what you want, you can avoid the warning by changing &lt;code&gt;/${length[2345]}/&lt;/code&gt; to the unsightly &lt;code&gt;/${\$length[2345]}/&lt;/code&gt; , by renaming your array to something that does not coincide with a built-in keyword, or by simply turning off warnings with &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'ambiguous';&lt;/code&gt; .</source>
          <target state="translated">En expresiones regulares, la sintaxis &lt;code&gt;${foo[2]}&lt;/code&gt; veces es necesaria para eliminar la ambig&amp;uuml;edad entre los sub&amp;iacute;ndices de matriz y las clases de caracteres. &lt;code&gt;/$length[2345]/&lt;/code&gt; , por ejemplo, se interpretar&amp;aacute; como &lt;code&gt;$length&lt;/code&gt; seguido de la clase de caracteres &lt;code&gt;[2345]&lt;/code&gt; . Si lo que desea es un sub&amp;iacute;ndice de matriz, puede evitar la advertencia cambiando &lt;code&gt;/${length[2345]}/&lt;/code&gt; por el antiest&amp;eacute;tico &lt;code&gt;/${\$length[2345]}/&lt;/code&gt; , cambiando el nombre de su matriz a algo que no coincida con una palabra clave incorporada, o simplemente desactivando las advertencias &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'ambiguous';&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd333dd1f620232f5d53f75438d1fbecd387c044" translate="yes" xml:space="preserve">
          <source>In regular expressions, the &lt;code&gt;${foo[2]}&lt;/code&gt; syntax is sometimes necessary to disambiguate between array subscripts and character classes. &lt;code&gt;/$length[2345]/&lt;/code&gt;, for instance, will be interpreted as &lt;code&gt;$length&lt;/code&gt; followed by the character class &lt;code&gt;[2345]&lt;/code&gt;. If an array subscript is what you want, you can avoid the warning by changing &lt;code&gt;/${length[2345]}/&lt;/code&gt; to the unsightly &lt;code&gt;/${\$length[2345]}/&lt;/code&gt;, by renaming your array to something that does not coincide with a built-in keyword, or by simply turning off warnings with &lt;code&gt;no warnings 'ambiguous';&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870f19d24df4b4eee6c062f874fd2afacdfc9f30" translate="yes" xml:space="preserve">
          <source>In scalar context it returns the same as perl would when stringifying a raw &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; with the same pattern inside. If the argument is not a compiled reference then this routine returns false but defined in scalar context, and the empty list in list context. Thus the following</source>
          <target state="translated">En contexto escalar, devuelve lo mismo que perl cuando se encadena un &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; crudo con el mismo patr&amp;oacute;n en su interior. Si el argumento no es una referencia compilada, esta rutina devuelve falso pero definido en contexto escalar y la lista vac&amp;iacute;a en contexto de lista. As&amp;iacute; lo siguiente</target>
        </trans-unit>
        <trans-unit id="63b198727926386f9c90953cc658aa09102f11ba" translate="yes" xml:space="preserve">
          <source>In scalar context it returns the same as perl would when stringifying a raw &lt;code&gt;qr//&lt;/code&gt; with the same pattern inside. If the argument is not a compiled reference then this routine returns false but defined in scalar context, and the empty list in list context. Thus the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d798e2857dfe13a30f68c169a5217a15884e07bf" translate="yes" xml:space="preserve">
          <source>In scalar context returns the name of the Win32 operating system being used. In list context returns a two element list of the OS name and whatever edition information is known about the particular build (for Win9X boxes) and whatever service packs have been installed. The latter is roughly equivalent to the first item returned by GetOSVersion() in list context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a19f93e8a70aa3709a4c5eb5c497d67c74952ec" translate="yes" xml:space="preserve">
          <source>In scalar context will return just the IP address.</source>
          <target state="translated">En contexto escalar devolverá sólo la dirección IP.</target>
        </trans-unit>
        <trans-unit id="1370034b95e83c1602601f8f2c93a5f4f13c28ad" translate="yes" xml:space="preserve">
          <source>In scalar context without arguments, this method returns the number of parsers aggregated. In list context without arguments, returns the parsers in the order they were added.</source>
          <target state="translated">En un contexto escalar sin argumentos,este método devuelve el número de analizadores agregados.En contexto de lista sin argumentos,devuelve los analizadores en el orden en que fueron añadidos.</target>
        </trans-unit>
        <trans-unit id="408e422198127b367c2df3b98eea7ea06f9026b1" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;a href=&quot;#localtime-EXPR&quot;&gt;&lt;code&gt;localtime&lt;/code&gt;&lt;/a&gt; returns the &lt;a href=&quot;http://man.he.net/man3/ctime&quot;&gt;ctime(3)&lt;/a&gt; value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd842934d85c69674953e0bf0440bc470724af8" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; returns a boolean value indicating success or failure, and, if successful, sets the information associated with the special filehandle &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4062294e689c1833bcdae539d23c73d6b5a0887d" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;a href=&quot;#times&quot;&gt;&lt;code&gt;times&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;$user&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e333b48f248d91366426a74dfbbc3da65c8ea7d" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&quot;..&quot;&lt;/code&gt; returns a boolean value. The operator is bistable, like a flip-flop, and emulates the line-range (comma) operator of &lt;b&gt;sed&lt;/b&gt;, &lt;b&gt;awk&lt;/b&gt;, and various editors. Each &lt;code&gt;&quot;..&quot;&lt;/code&gt; operator maintains its own boolean state, even across calls to a subroutine that contains it. It is false as long as its left operand is false. Once the left operand is true, the range operator stays true until the right operand is true,</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&quot;..&quot;&lt;/code&gt; devuelve un valor booleano. El operador es biestable, como un flip-flop, y emula el operador de rango de l&amp;iacute;nea (coma) de &lt;b&gt;sed&lt;/b&gt; , &lt;b&gt;awk&lt;/b&gt; y varios editores. Cada operador &lt;code&gt;&quot;..&quot;&lt;/code&gt; mantiene su propio estado booleano, incluso a trav&amp;eacute;s de llamadas a una subrutina que lo contiene. Es falso siempre que su operando izquierdo sea falso. Una vez que el operando izquierdo es verdadero, el operador de rango permanece verdadero hasta que el operando derecho es verdadero,</target>
        </trans-unit>
        <trans-unit id="4702696bd1a6606f8c00bfa48b7462e238b219f8" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; returns the ctime(3) value:</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; devuelve el valor ctime (3):</target>
        </trans-unit>
        <trans-unit id="50ab8480db61cacd9dd3820b8d1635a7c8fbf2e8" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; returns a boolean value indicating success or failure, and, if successful, sets the information associated with the special filehandle &lt;code&gt;_&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; devuelve un valor booleano que indica &amp;eacute;xito o fracaso y, si tiene &amp;eacute;xito, establece la informaci&amp;oacute;n asociada con el identificador de archivo especial &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1818a475de168c2b1a7d2bb086c2af5a3f3a97b" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;$user&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;$user&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d16f2c8ac24f3fef816016a050127e8baea1e4f0" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; returns the ctime(3) value:</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; devuelve el valor ctime (3):</target>
        </trans-unit>
        <trans-unit id="c038fe7af8fd4fba37237e821dee5726e03d9bcf" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; returns a boolean value indicating success or failure, and, if successful, sets the information associated with the special filehandle &lt;code&gt;_&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; devuelve un valor booleano que indica &amp;eacute;xito o fracaso y, si tiene &amp;eacute;xito, establece la informaci&amp;oacute;n asociada con el identificador de archivo especial &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f361652bf48a4a2a1736272eaacbdbdece5ad741" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;$user&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;$user&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1674eb64be9587ce137d56ac70c490cdb01951f2" translate="yes" xml:space="preserve">
          <source>In scalar context, divides $x by $y and returns the result to the given or default accuracy/precision. In list context, does floored division (F-division), returning an integer $q and a remainder $r so that $x = $q * $y + $r. The remainer (modulo) is equal to what is returned by &lt;code&gt;$x-&amp;gt;bmod($y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907f0666cff82b9d0476cd5d474908eaefafe8db" translate="yes" xml:space="preserve">
          <source>In scalar context, divides $x by $y and returns the result. In list context, does floored division (F-division), returning an integer $q and a remainder $r so that $x = $q * $y + $r. The remainer (modulo) is equal to what is returned by &lt;code&gt;$x-&lt;/code&gt;bmod($y)&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f63380dd91d8509df2b85f67d144a31345d453" translate="yes" xml:space="preserve">
          <source>In scalar context, each execution of &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; finds the next match, returning true if it matches, and false if there is no further match. The position after the last match can be read or set using the &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; function; see &lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;. A failed match normally resets the search position to the beginning of the string, but you can avoid that by adding the &lt;code&gt;/c&lt;/code&gt; modifier (for example, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt;). Modifying the target string also resets the search position.</source>
          <target state="translated">En contexto escalar, cada ejecuci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; encuentra la siguiente coincidencia, devolviendo verdadero si coincide y falso si no hay m&amp;aacute;s coincidencia. La posici&amp;oacute;n despu&amp;eacute;s de la &amp;uacute;ltima coincidencia se puede leer o establecer usando la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; ; ver &lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt; . Una coincidencia fallida normalmente restablece la posici&amp;oacute;n de b&amp;uacute;squeda al principio de la cadena, pero puede evitarlo agregando el modificador &lt;code&gt;/c&lt;/code&gt; (por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; ). La modificaci&amp;oacute;n de la cadena de destino tambi&amp;eacute;n restablece la posici&amp;oacute;n de b&amp;uacute;squeda.</target>
        </trans-unit>
        <trans-unit id="4a6e0628ceeeb02c47448d71e6cf72d4e6e644eb" translate="yes" xml:space="preserve">
          <source>In scalar context, each execution of &lt;code&gt;m//g&lt;/code&gt; finds the next match, returning true if it matches, and false if there is no further match. The position after the last match can be read or set using the &lt;code&gt;pos()&lt;/code&gt; function; see &lt;a href=&quot;perlfunc#pos&quot;&gt;&quot;pos&quot; in perlfunc&lt;/a&gt;. A failed match normally resets the search position to the beginning of the string, but you can avoid that by adding the &lt;code&gt;/c&lt;/code&gt; modifier (for example, &lt;code&gt;m//gc&lt;/code&gt;). Modifying the target string also resets the search position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8800b54c59ca34fbb2fd00902e130cb43eb3acc5" translate="yes" xml:space="preserve">
          <source>In scalar context, evaluating a filehandle in angle brackets yields the next line from that file (the newline, if any, included), or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; at end-of-file or on error. When &lt;code&gt;$/&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (sometimes known as file-slurp mode) and the file is empty, it returns &lt;code&gt;''&lt;/code&gt; the first time, followed by &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; subsequently.</source>
          <target state="translated">En contexto escalar, la evaluaci&amp;oacute;n de un identificador de archivo entre par&amp;eacute;ntesis angulares produce la siguiente l&amp;iacute;nea de ese archivo (la nueva l&amp;iacute;nea, si la hay, incluida), o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; al final del archivo o en caso de error. Cuando &lt;code&gt;$/&lt;/code&gt; se establece en &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (a veces conocido como modo file-slurp) y el archivo est&amp;aacute; vac&amp;iacute;o, devuelve &lt;code&gt;''&lt;/code&gt; la primera vez, seguido de &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; posteriormente.</target>
        </trans-unit>
        <trans-unit id="03380a29fdbee6fa1870baa930432527d010a246" translate="yes" xml:space="preserve">
          <source>In scalar context, evaluating a filehandle in angle brackets yields the next line from that file (the newline, if any, included), or &lt;code&gt;undef&lt;/code&gt; at end-of-file or on error. When &lt;code&gt;$/&lt;/code&gt; is set to &lt;code&gt;undef&lt;/code&gt; (sometimes known as file-slurp mode) and the file is empty, it returns &lt;code&gt;''&lt;/code&gt; the first time, followed by &lt;code&gt;undef&lt;/code&gt; subsequently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d5e99280edc013a52bda47119a081391fd852e" translate="yes" xml:space="preserve">
          <source>In scalar context, just the filehandle is returned.</source>
          <target state="translated">En el contexto escalar,sólo se devuelve el filehandle.</target>
        </trans-unit>
        <trans-unit id="e8180b7134edf387de3ba20adf4f7b9e0d9a09d4" translate="yes" xml:space="preserve">
          <source>In scalar context, returns a boolean indicating if SSL is available. In list context, returns the boolean and a (possibly multi-line) string of errors indicating why SSL isn't available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5c0aafd8e8839028ecc16b9e49ead2fb7551ce" translate="yes" xml:space="preserve">
          <source>In scalar context, returns a single Fibonacci number. In list context, returns a list of Fibonacci numbers. The invocand is the last element in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae996766d8949391f4258a78d5552412d910e1ec" translate="yes" xml:space="preserve">
          <source>In scalar context, returns a single Lucas number. In list context, returns a list of Lucas numbers. The invocand is the last element in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b41a148fc8880eed7038e400dbf7ebdd585912a" translate="yes" xml:space="preserve">
          <source>In scalar context, returns the nth Fibonacci number: _fib(0) returns 0, _fib(1) returns 1, _fib(2) returns 1, _fib(3) returns 2 etc. In list context, returns the Fibonacci numbers from F(0) to F(n): 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88b23f1542291b640449137479d5bbdeb5b3c4f" translate="yes" xml:space="preserve">
          <source>In scalar context, returns the nth Lucas number: _lucas(0) returns 2, _lucas(1) returns 1, _lucas(2) returns 3, etc. In list context, returns the Lucas numbers from L(0) to L(n): 2, 1, 3, 4, 7, 11, 18, 29,47, 76, ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc406c89894a3609e93b6be654bf8c26772c5a5" translate="yes" xml:space="preserve">
          <source>In scalar context, returns the number of elements that would have been returned as a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fe50c921958ecaf606c5e87e67fc368c7bde2e" translate="yes" xml:space="preserve">
          <source>In scalar context, returns the peer host and port, joined with a colon, or &lt;code&gt;undef&lt;/code&gt; (if no peer is connected). In list context, returns the peer host and port or an empty list (if no peer is connected).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7670efb624f43827626a2d7abe8ac56200cd57f1" translate="yes" xml:space="preserve">
          <source>In scalar context, returns the quotient after dividing OBJ1 by OBJ2 and truncating the result to an integer. In list context, return the quotient and the remainder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e7b891880cf2546cd4182b9d0f0a5ab5924094" translate="yes" xml:space="preserve">
          <source>In scalar context, the function returns the most preferred language tag (or undef if no preference was seen).</source>
          <target state="translated">En el contexto escalar,la función devuelve la etiqueta del idioma más preferido (o undef si no se ha visto ninguna preferencia).</target>
        </trans-unit>
        <trans-unit id="b1d9f6c7ff92d9e4431c44fd49623f31abe26893" translate="yes" xml:space="preserve">
          <source>In scalar context, the remaining time in the timer is returned.</source>
          <target state="translated">En el contexto escalar,se devuelve el tiempo restante en el temporizador.</target>
        </trans-unit>
        <trans-unit id="f286b508bea32b55376de76bb51800a879183e4c" translate="yes" xml:space="preserve">
          <source>In scalar context, the remaining time is returned.</source>
          <target state="translated">En el contexto escalar,se devuelve el tiempo restante.</target>
        </trans-unit>
        <trans-unit id="1fc032fde56245f910fbc6d13638ce22e45ea79e" translate="yes" xml:space="preserve">
          <source>In scalar context, you get the name, unless the function was a lookup by name, in which case you get the other thing, whatever it is. (If the entry doesn't exist you get the undefined value.) For example:</source>
          <target state="translated">En el contexto escalar,obtienes el nombre,a menos que la función fuera una búsqueda por nombre,en cuyo caso obtienes la otra cosa,sea lo que sea.(Si la entrada no existe,se obtiene el valor indefinido.)Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="070ead24adcf97bbf0458e41cddfaf9060fd1c75" translate="yes" xml:space="preserve">
          <source>In scopes where &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; is in force, nearly all the operators listed above will force their argument(s) into integer format, and return an integer result. The exceptions, &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; , do not change their behavior with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt;</source>
          <target state="translated">En &amp;aacute;mbitos donde &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; est&amp;aacute; en vigor, casi todos los operadores enumerados anteriormente forzar&amp;aacute;n su (s) argumento (s) en formato entero y devolver&amp;aacute;n un resultado entero. Las excepciones, &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;++&lt;/code&gt; y &lt;code&gt;--&lt;/code&gt; , no cambian su comportamiento con &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6e91894f56bfff94294bd3277c1eafb159dcee4" translate="yes" xml:space="preserve">
          <source>In scopes where &lt;code&gt;use integer;&lt;/code&gt; is in force, nearly all the operators listed above will force their argument(s) into integer format, and return an integer result. The exceptions, &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt;, do not change their behavior with &lt;code&gt;use integer;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fd63b759e64d942882eb1c88a05afcfdaffadf" translate="yes" xml:space="preserve">
          <source>In searching for &lt;code&gt;/\bfoo\b/&lt;/code&gt; , only locations in &lt;code&gt;$_&lt;/code&gt; that contain &lt;code&gt;f&lt;/code&gt; will be looked at, because &lt;code&gt;f&lt;/code&gt; is rarer than &lt;code&gt;o&lt;/code&gt; . In general, this is a big win except in pathological cases. The only question is whether it saves you more time than it took to build the linked list in the first place.</source>
          <target state="translated">Al buscar &lt;code&gt;/\bfoo\b/&lt;/code&gt; , solo se ver&amp;aacute;n las ubicaciones en &lt;code&gt;$_&lt;/code&gt; que contengan &lt;code&gt;f&lt;/code&gt; , porque &lt;code&gt;f&lt;/code&gt; es m&amp;aacute;s raro que &lt;code&gt;o&lt;/code&gt; . En general, esta es una gran victoria, excepto en casos patol&amp;oacute;gicos. La &amp;uacute;nica pregunta es si le ahorra m&amp;aacute;s tiempo del que tom&amp;oacute; para crear la lista vinculada en primer lugar.</target>
        </trans-unit>
        <trans-unit id="d510b9d55974c5ad5785f6cfe4077983c695078d" translate="yes" xml:space="preserve">
          <source>In short, Perl 4 is the parent to both Perl 5 and Perl 6. Perl 5 is the older sibling, and though they are different languages, someone who knows one will spot many similarities in the other.</source>
          <target state="translated">En resumen,el Perl 4 es el padre del Perl 5 y del Perl 6.Perl 5 es el hermano mayor,y aunque son idiomas diferentes,alguien que conoce uno notará muchas similitudes en el otro.</target>
        </trans-unit>
        <trans-unit id="ed75eeeb8979a82ac73d297c5e1f3634bea45872" translate="yes" xml:space="preserve">
          <source>In short, Perl 4 is the parent to both Perl 5 and Raku (formerly known as Perl 6). Perl 5 is the older sibling, and though they are different languages, someone who knows one will spot many similarities in the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c26dcc733ecda091da4a3f15918e2cc3eb4955" translate="yes" xml:space="preserve">
          <source>In short: If the module exports anything that should be run directly by a test script it should probably NOT go directly into &lt;code&gt;Test2::XXX&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a022deee593194afb675e77892be1749073d500f" translate="yes" xml:space="preserve">
          <source>In simple cases, it is equivalent to:</source>
          <target state="translated">En casos sencillos,es equivalente a:</target>
        </trans-unit>
        <trans-unit id="ffcc65b4ec59c10cd981321f645c18e2c2833005" translate="yes" xml:space="preserve">
          <source>In simple terms, this is what happens:</source>
          <target state="translated">En términos simples,esto es lo que sucede:</target>
        </trans-unit>
        <trans-unit id="8d3443fd7f0c08a6561ba5f63f633adb2afde771" translate="yes" xml:space="preserve">
          <source>In situations where it doesn't make sense for a particular metacharacter to mean what it normally does, it automatically loses its metacharacter-ness and becomes an ordinary character that is to be matched literally. For example, the &lt;code&gt;'}'&lt;/code&gt; is a metacharacter only when it is the mate of a &lt;code&gt;'{'&lt;/code&gt; metacharacter. Otherwise it is treated as a literal RIGHT CURLY BRACKET. This may lead to unexpected results. &lt;a href=&quot;re#%27strict%27-mode&quot;&gt;&lt;code&gt;use re 'strict'&lt;/code&gt;&lt;/a&gt; can catch some of these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d121139946109160493990901ec9a05c62500b61" translate="yes" xml:space="preserve">
          <source>In situations where you need to enable this with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; , you should also have taint checking enabled. Better yet, use the carefully constrained evaluation within a Safe compartment. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; for details about both these mechanisms.</source>
          <target state="translated">En situaciones en las que necesite habilitar esto con &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; , tambi&amp;eacute;n debe tener habilitada la verificaci&amp;oacute;n de corrupci&amp;oacute;n. Mejor a&amp;uacute;n, utilice la evaluaci&amp;oacute;n cuidadosamente restringida dentro de un compartimento seguro. Consulte &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; para obtener detalles sobre estos dos mecanismos.</target>
        </trans-unit>
        <trans-unit id="890a195db1801db98e427898d4624b5cd0fd0e61" translate="yes" xml:space="preserve">
          <source>In situations where you need to enable this with &lt;code&gt;use re 'eval'&lt;/code&gt;, you should also have taint checking enabled. Better yet, use the carefully constrained evaluation within a Safe compartment. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; for details about both these mechanisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2046d35bd71cc3166ad97adddb890d2444c1f0f" translate="yes" xml:space="preserve">
          <source>In some cases (starting server processes, for instance) you'll want to completely dissociate the child process from the parent. This is often called daemonization. A well-behaved daemon will also chdir() to the root directory so it doesn't prevent unmounting the filesystem containing the directory from which it was launched, and redirect its standard file descriptors from and to</source>
          <target state="translated">En algunos casos (iniciando procesos de servidor,por ejemplo)querrá disociar completamente el proceso hijo del padre.A esto se le llama a menudo demonización.Un demonio que se comporte bien también chdir()al directorio raíz para que no impida desmontar el sistema de archivos que contiene el directorio desde el que se lanzó,y redirigir sus descriptores de archivo estándar desde y hacia</target>
        </trans-unit>
        <trans-unit id="a5b5fb7e89a60fc9793673e892211f18421217cb" translate="yes" xml:space="preserve">
          <source>In some cases an object may only have 1 or 2 attributes, in which case a hashref may be too verbose for your liking. In these cases you can pass in an arrayref with only values. The values will be assigned to attributes in the order the attributes were listed. When there is inheritance involved the attributes from parent classes will come before subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9396ca88545422246dd73162e905f2e472202a6" translate="yes" xml:space="preserve">
          <source>In some cases files created by File::Temp are removed from within an END block. Since END blocks are triggered when a child process exits (unless &lt;code&gt;POSIX::_exit()&lt;/code&gt; is used by the child) File::Temp takes care to only remove those temp files created by a particular process ID. This means that a child will not attempt to remove temp files created by the parent process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4562e3425450ab12fc121ff9cd696fd05153a4" translate="yes" xml:space="preserve">
          <source>In some cases files created by File::Temp are removed from within an END block. Since END blocks are triggered when a child process exits (unless C&amp;lt;:_exit&amp;gt; is used by the child) File::Temp takes care to only remove those temp files created by a particular process ID. This means that a child will not attempt to remove temp files created by the parent process.</source>
          <target state="translated">En algunos casos, los archivos creados por File :: Temp se eliminan de un bloque END. Dado que los bloques END se activan cuando un proceso hijo sale (a menos que el hijo utilice C &amp;lt;: _ exit&amp;gt;), File :: Temp se encarga de eliminar solo los archivos temporales creados por un ID de proceso en particular. Esto significa que un ni&amp;ntilde;o no intentar&amp;aacute; eliminar los archivos temporales creados por el proceso principal.</target>
        </trans-unit>
        <trans-unit id="4cd284f272380bf09ca4f9468d05eb334cb95414" translate="yes" xml:space="preserve">
          <source>In some cases the 'application' can then be reduced to a small</source>
          <target state="translated">En algunos casos,la &quot;aplicación&quot; puede entonces reducirse a una pequeña</target>
        </trans-unit>
        <trans-unit id="df381c2814bde8cd15795ab2d100f8c130800cb5" translate="yes" xml:space="preserve">
          <source>In some cases this</source>
          <target state="translated">En algunos casos esto</target>
        </trans-unit>
        <trans-unit id="cde62ba475df964750a3cdf495be48e1d052051b" translate="yes" xml:space="preserve">
          <source>In some cases, files will only be retained if this variable is true when the file is created. This means that you can not create a temporary file, set this variable and expect the temp file to still be around when the program exits.</source>
          <target state="translated">En algunos casos,los archivos sólo se conservarán si esta variable es verdadera cuando se crea el archivo.Esto significa que no puedes crear un archivo temporal,establece esta variable y espera que el archivo temporal siga estando presente cuando el programa salga.</target>
        </trans-unit>
        <trans-unit id="833bad25b1c7e7dcf3b679328d88bdc7a807854c" translate="yes" xml:space="preserve">
          <source>In some cases, it doesn't make practical sense for elements to be supported earlier than they already are. For example, UTF-8 functionality isn't provided prior to the release where it was first introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82de4f66144949e592925ee2402c722d415cd5ed" translate="yes" xml:space="preserve">
          <source>In some cases, there is the need for incremental parsing of JSON texts. While this module always has to keep both JSON text and resulting Perl data structure in memory at one time, it does allow you to parse a JSON stream incrementally. It does so by accumulating text until it has a full JSON object, which it then can decode. This process is similar to using &lt;code&gt;decode_prefix&lt;/code&gt; to see if a full JSON object is available, but is much more efficient (and can be implemented with a minimum of method calls).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3905e6a37b63c12afc3763addc4e36a653fc636f" translate="yes" xml:space="preserve">
          <source>In some cases, using substr() or vec() to simulate arrays can be highly beneficial. For example, an array of a thousand booleans will take at least 20,000 bytes of space, but it can be turned into one 125-byte bit vector--a considerable memory savings. The standard Tie::SubstrHash module can also help for certain types of data structure. If you're working with specialist data structures (matrices, for instance) modules that implement these in C may use less memory than equivalent Perl modules.</source>
          <target state="translated">En algunos casos,el uso de substr()o vec()para simular matrices puede ser muy beneficioso.Por ejemplo,una matriz de mil booleanos tomará al menos 20.000 bytes de espacio,pero puede ser convertida en un vector de 125 bytes...un considerable ahorro de memoria.El módulo estándar Tie::SubstrHash también puede ayudar para ciertos tipos de estructura de datos.Si se trabaja con estructuras de datos especializadas (matrices,por ejemplo)los módulos que las implementan en C pueden usar menos memoria que los módulos equivalentes de Perl.</target>
        </trans-unit>
        <trans-unit id="24e84c8e00f2a5bb70e605cd2c69e1dd80d922f5" translate="yes" xml:space="preserve">
          <source>In some cases, yes. You can use the &lt;code&gt;iter&lt;/code&gt; class method to iterate over the files in the tarball without reading them all in memory at once.</source>
          <target state="translated">En algunos casos, s&amp;iacute;. Puede usar el m&amp;eacute;todo de la clase &lt;code&gt;iter&lt;/code&gt; para iterar sobre los archivos en el tarball sin leerlos todos en la memoria a la vez.</target>
        </trans-unit>
        <trans-unit id="da7c53f5c4edfd54be873e35b150cbb2e0f64102" translate="yes" xml:space="preserve">
          <source>In some cases, you may be able to make several patterns into a single regular expression. Beware of situations that require backtracking though.</source>
          <target state="translated">En algunos casos,puede ser capaz de hacer varios patrones en una sola expresión regular.Pero ten cuidado con las situaciones que requieren retroceder.</target>
        </trans-unit>
        <trans-unit id="55ed1ae3a3af36b978490ace319abb286ca584e8" translate="yes" xml:space="preserve">
          <source>In some cases, you'll want to completely skip an entire testing script.</source>
          <target state="translated">En algunos casos,querrás saltarte completamente un guión de prueba completo.</target>
        </trans-unit>
        <trans-unit id="37bab3244974f03d4bcb3b02a30c6dfe56b096d6" translate="yes" xml:space="preserve">
          <source>In some contexts, a backslash followed by two or even one octal digits may be interpreted as an octal escape, sometimes with a warning, and because of some bugs, sometimes with surprising results. Also, if you are creating a regex out of smaller snippets concatenated together, and you use fewer than three digits, the beginning of one snippet may be interpreted as adding digits to the ending of the snippet before it. See &lt;a href=&quot;#Absolute-referencing&quot;&gt;&quot;Absolute referencing&quot;&lt;/a&gt; for more discussion and examples of the snippet problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b444fb6bd755ce68abe6b0c45e2101b6fb938848" translate="yes" xml:space="preserve">
          <source>In some contexts, a backslash followed by two or even one octal digits may be interpreted as an octal escape, sometimes with a warning, and because of some bugs, sometimes with surprising results. Also, if you are creating a regex out of smaller snippets concatenated together, and you use fewer than three digits, the beginning of one snippet may be interpreted as adding digits to the ending of the snippet before it. See &lt;a href=&quot;#Absolute-referencing&quot;&gt;Absolute referencing&lt;/a&gt; for more discussion and examples of the snippet problem.</source>
          <target state="translated">En algunos contextos, una barra invertida seguida de dos o incluso un d&amp;iacute;gito octal puede interpretarse como un escape octal, a veces con una advertencia, y debido a algunos errores, a veces con resultados sorprendentes. Adem&amp;aacute;s, si est&amp;aacute; creando una expresi&amp;oacute;n regular a partir de fragmentos m&amp;aacute;s peque&amp;ntilde;os concatenados, y usa menos de tres d&amp;iacute;gitos, el comienzo de un fragmento se puede interpretar como la adici&amp;oacute;n de d&amp;iacute;gitos al final del fragmento anterior. Consulte &lt;a href=&quot;#Absolute-referencing&quot;&gt;Referencia absoluta&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n y ejemplos del problema del fragmento.</target>
        </trans-unit>
        <trans-unit id="941b228759db0ad2f21515f9edebce99234327a5" translate="yes" xml:space="preserve">
          <source>In some future version of I18N::LangTags, I plan to include support for RFC2482-style language tags -- which are basically just normal language tags with their ASCII characters shifted into Plane 14.</source>
          <target state="translated">En alguna futura versión de I18N::LangTags,planeo incluir soporte para etiquetas de lenguaje al estilo RFC2482 --que son básicamente etiquetas de lenguaje normal con sus caracteres ASCII cambiados al Plano 14.</target>
        </trans-unit>
        <trans-unit id="b0260d31b907a523df71ffe831436a5256c0c0bb" translate="yes" xml:space="preserve">
          <source>In some literature this construct is called &quot;atomic matching&quot; or &quot;possessive matching&quot;.</source>
          <target state="translated">En alguna literatura este constructo se llama &quot;emparejamiento atómico&quot; o &quot;emparejamiento posesivo&quot;.</target>
        </trans-unit>
        <trans-unit id="79419ef5fc7d87682a2736d33053a4e99ddcc17b" translate="yes" xml:space="preserve">
          <source>In some platforms it is not possible to get an alarm with subsecond resolution and later than one second.</source>
          <target state="translated">En algunas plataformas no es posible obtener una alarma con una resolución de subsegundo y más de un segundo.</target>
        </trans-unit>
        <trans-unit id="6aef2a6b389cc51b9d270ade7d87dfa403f876dd" translate="yes" xml:space="preserve">
          <source>In some platforms there may be arbitrary amount of padding, for example space characters, after the modified name as shown by &lt;code&gt;ps&lt;/code&gt; . In some platforms this padding may extend all the way to the original length of the argument area, no matter what you do (this is the case for example with Linux 2.2).</source>
          <target state="translated">En algunas plataformas puede haber una cantidad arbitraria de relleno, por ejemplo, caracteres de espacio, despu&amp;eacute;s del nombre modificado como se muestra en &lt;code&gt;ps&lt;/code&gt; . En algunas plataformas, este relleno puede extenderse hasta la longitud original del &amp;aacute;rea de argumentos, sin importar lo que haga (este es el caso, por ejemplo, de Linux 2.2).</target>
        </trans-unit>
        <trans-unit id="7f1ea5fc2fd23321facda4d50fc1cbae08642e40" translate="yes" xml:space="preserve">
          <source>In some platforms there may be arbitrary amount of padding, for example space characters, after the modified name as shown by &lt;code&gt;ps&lt;/code&gt;. In some platforms this padding may extend all the way to the original length of the argument area, no matter what you do (this is the case for example with Linux 2.2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08216ba09095e01bafc1d8f5f89aaf1f507c0440" translate="yes" xml:space="preserve">
          <source>In some situations you may want to prevent certain symbols from being exported. Typically this applies to extensions which have functions or constants that may not exist on some systems.</source>
          <target state="translated">En algunas situaciones puede que desee evitar que se exporten ciertos símbolos.Esto se aplica típicamente a las extensiones que tienen funciones o constantes que pueden no existir en algunos sistemas.</target>
        </trans-unit>
        <trans-unit id="8e21d6f7b1ac2792e8d9bd0f52e8f29c7e8c027c" translate="yes" xml:space="preserve">
          <source>In some special cases, from_bytes() matches the conversion done by unpack():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2b095943328b792355034f8226aaf120447210" translate="yes" xml:space="preserve">
          <source>In specific, version numbers initialized as &lt;a href=&quot;#Decimal-Versions&quot;&gt;&quot;Decimal Versions&quot;&lt;/a&gt; will stringify as they were originally created (i.e. the same string that was passed to &lt;code&gt;new()&lt;/code&gt;. Version numbers initialized as &lt;a href=&quot;#Dotted-Decimal-Versions&quot;&gt;&quot;Dotted-Decimal Versions&quot;&lt;/a&gt; will be stringified as &lt;a href=&quot;#Normal-Form&quot;&gt;&quot;Normal Form&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0ffd2574e55bd73781b2f238993d92b6b53578" translate="yes" xml:space="preserve">
          <source>In spite of its name,</source>
          <target state="translated">A pesar de su nombre,</target>
        </trans-unit>
        <trans-unit id="9dba8e2fdad7dbac2aaec75e6f6e84418a6299a9" translate="yes" xml:space="preserve">
          <source>In spite of the name, this macro gives the correct result if the input string from which &lt;code&gt;c&lt;/code&gt; comes is not encoded in UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8cbd2876234fb0eafe4d9966f4f375e97df144" translate="yes" xml:space="preserve">
          <source>In such cases, to force an additional variable to be declared together with declarations of other variables, place the declaration into a PREINIT: section. The PREINIT: keyword may be used one or more times within an XSUB.</source>
          <target state="translated">En tales casos,para forzar a que se declare una variable adicional junto con las declaraciones de otras variables,coloque la declaración en una sección PREINIT:.La palabra clave PREINIT:puede ser usada una o más veces dentro de un XSUB.</target>
        </trans-unit>
        <trans-unit id="ac9198f5929b9dd8df4d3b09d9577116cbbad276" translate="yes" xml:space="preserve">
          <source>In such cases, you are advised to either split the test file into smaller ones, or use a reverse approach, doing &quot;normal&quot; (code) compares and triggering &lt;code&gt;fail()&lt;/code&gt; should anything go unexpected.</source>
          <target state="translated">En tales casos, se recomienda dividir el archivo de prueba en archivos m&amp;aacute;s peque&amp;ntilde;os o usar un enfoque inverso, haciendo comparaciones &quot;normales&quot; (c&amp;oacute;digo) y activando &lt;code&gt;fail()&lt;/code&gt; si algo sale inesperado.</target>
        </trans-unit>
        <trans-unit id="a4b3a6172283064c4d2c38bcdfc1abf019578af1" translate="yes" xml:space="preserve">
          <source>In summary, Perl now normally treats non-Unicode code points as typical Unicode unassigned code points for regular expression matches, raising a warning only when it is arguable what the result should be. However, if this warning has been made fatal, it isn't skipped.</source>
          <target state="translated">En resumen,Perl ahora trata normalmente los puntos de código no Unicode como típicos puntos de código no asignados Unicode para coincidencias de expresiones regulares,levantando una advertencia sólo cuando es discutible cuál debería ser el resultado.Sin embargo,si esta advertencia se ha hecho fatal,no se salta.</target>
        </trans-unit>
        <trans-unit id="bdfe847eef52d0f5e340cab498d8b20a1e1ac3a3" translate="yes" xml:space="preserve">
          <source>In summary, a compiler backend module should be called &quot;B::Foo&quot; for some foo and live in the appropriate directory for that name. It should define a function called &lt;code&gt;compile&lt;/code&gt; . When the user types</source>
          <target state="translated">En resumen, un m&amp;oacute;dulo de backend del compilador deber&amp;iacute;a llamarse &quot;B :: Foo&quot; para algunos foo y vivir en el directorio apropiado para ese nombre. Deber&amp;iacute;a definir una funci&amp;oacute;n llamada &lt;code&gt;compile&lt;/code&gt; . Cuando el usuario escribe</target>
        </trans-unit>
        <trans-unit id="3b0a8b9a8c95f6fb4ee0c747c5c13c70148a1fb6" translate="yes" xml:space="preserve">
          <source>In summary, a compiler backend module should be called &quot;B::Foo&quot; for some foo and live in the appropriate directory for that name. It should define a function called &lt;code&gt;compile&lt;/code&gt;. When the user types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc74db358d542b3438f19ea437ddcca2306a63f1" translate="yes" xml:space="preserve">
          <source>In summary, local() doesn't make what you think of as private, local variables. It gives a global variable a temporary value. my() is what you're looking for if you want private variables.</source>
          <target state="translated">En resumen,local()no hace lo que usted piensa que son variables privadas,locales.Le da a una variable global un valor temporal.my()es lo que buscas si quieres variables privadas.</target>
        </trans-unit>
        <trans-unit id="ec6a62285f67e2d7161b800ebd3c834d396ca9bd" translate="yes" xml:space="preserve">
          <source>In summary:</source>
          <target state="translated">En resumen:</target>
        </trans-unit>
        <trans-unit id="f27d5775b98cc1edc00b71d0a359c25acea44018" translate="yes" xml:space="preserve">
          <source>In telephony, the temporary electrical circuit between the caller&amp;rsquo;s and the callee&amp;rsquo;s phone. In networking, the same kind of temporary circuit between a &lt;b&gt;client&lt;/b&gt; and a &lt;b&gt;server&lt;/b&gt;.</source>
          <target state="translated">En telefon&amp;iacute;a, el circuito el&amp;eacute;ctrico temporal entre el tel&amp;eacute;fono de la persona que llama y el de la persona que llama. En redes, el mismo tipo de circuito temporal entre un &lt;b&gt;cliente&lt;/b&gt; y un &lt;b&gt;servidor&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c823f59ff2dd302aca99cff2c9b13c16174b9151" translate="yes" xml:space="preserve">
          <source>In that case, the value of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a961ce11a5972421c4f26b07fe69c91b0c3c7f5" translate="yes" xml:space="preserve">
          <source>In the .xs file, there's now a #include directive with the absolute path to the mylib.h header file. We changed this to a relative path so that we could move the extension directory if we wanted to.</source>
          <target state="translated">En el archivo .xs,ahora hay una directiva #include con la ruta absoluta al archivo de cabecera mylib.h.Cambiamos esto a una ruta relativa para poder mover el directorio de extensión si queremos.</target>
        </trans-unit>
        <trans-unit id="f2ed93444f2e4f61ea8ed89fb84f5492a5e66658" translate="yes" xml:space="preserve">
          <source>In the 5.9.x development version of perl you can &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re Debug =&amp;gt; 'PARSE'&lt;/code&gt; to see some trace information about the parse process. We will start with some simple patterns and build up to more complex patterns.</source>
          <target state="translated">En la versi&amp;oacute;n de desarrollo 5.9.x de perl, puede &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re Debug =&amp;gt; 'PARSE'&lt;/code&gt; para ver informaci&amp;oacute;n de seguimiento sobre el proceso de an&amp;aacute;lisis. Comenzaremos con algunos patrones simples y avanzaremos hasta patrones m&amp;aacute;s complejos.</target>
        </trans-unit>
        <trans-unit id="79df17d32e87b2b81dcedf27e568b372a500063c" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;..&lt;/code&gt; or &lt;a href=&quot;perlop#Range-Operators&quot;&gt;range&lt;/a&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695cc6d82e9a098f429aaf4feaee8cd47933f5d7" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Encode&lt;/code&gt; module, &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; is actually a canonical name for &lt;code&gt;&quot;utf-8-strict&quot;&lt;/code&gt; . That hyphen between the &lt;code&gt;&quot;UTF&quot;&lt;/code&gt; and the &lt;code&gt;&quot;8&quot;&lt;/code&gt; is critical; without it, &lt;code&gt;Encode&lt;/code&gt; goes &quot;liberal&quot; and (perhaps overly-)permissive:</source>
          <target state="translated">En el m&amp;oacute;dulo &lt;code&gt;Encode&lt;/code&gt; , &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; es en realidad un nombre can&amp;oacute;nico para &lt;code&gt;&quot;utf-8-strict&quot;&lt;/code&gt; . Ese gui&amp;oacute;n entre el &lt;code&gt;&quot;UTF&quot;&lt;/code&gt; y el &lt;code&gt;&quot;8&quot;&lt;/code&gt; es fundamental; sin &amp;eacute;l, &lt;code&gt;Encode&lt;/code&gt; se vuelve &quot;liberal&quot; y (quiz&amp;aacute;s demasiado) permisivo:</target>
        </trans-unit>
        <trans-unit id="36d48d477c6e12e1ea532cffd25bfde82fe49f5d" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Encode&lt;/code&gt; module, &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; is actually a canonical name for &lt;code&gt;&quot;utf-8-strict&quot;&lt;/code&gt;. That hyphen between the &lt;code&gt;&quot;UTF&quot;&lt;/code&gt; and the &lt;code&gt;&quot;8&quot;&lt;/code&gt; is critical; without it, &lt;code&gt;Encode&lt;/code&gt; goes &quot;liberal&quot; and (perhaps overly-)permissive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4feedfc56c9ca92e3c18dcd179dd65dfefb5217" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;SvPV&lt;/code&gt; macro, the length of the string returned is placed into the variable &lt;code&gt;len&lt;/code&gt; (this is a macro, so you do</source>
          <target state="translated">En la macro &lt;code&gt;SvPV&lt;/code&gt; , la longitud de la cadena devuelta se coloca en la variable &lt;code&gt;len&lt;/code&gt; (esta es una macro, as&amp;iacute; que lo hace</target>
        </trans-unit>
        <trans-unit id="070901afbf1f09255274e8877eb8bc2c70b45164" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; form,</source>
          <target state="translated">En la forma &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="ee3da4d146e84bbefdc7f3a8d2819d53f2a9270e" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;use VERSION&lt;/code&gt; form, VERSION may be either a v-string such as v5.24.1, which will be compared to &lt;a href=&quot;perlvar#%24%5EV&quot;&gt;&lt;code&gt;$^V&lt;/code&gt;&lt;/a&gt; (aka $PERL_VERSION), or a numeric argument of the form 5.024001, which will be compared to &lt;a href=&quot;perlvar#%24%5D&quot;&gt;&lt;code&gt;$]&lt;/code&gt;&lt;/a&gt;. An exception is raised if VERSION is greater than the version of the current Perl interpreter; Perl will not attempt to parse the rest of the file. Compare with &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt;, which can do a similar check at run time. Symmetrically, &lt;code&gt;no VERSION&lt;/code&gt; allows you to specify that you want a version of Perl older than the specified one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cc687da96e0b7f7623a95a00b37de925f9f2e9" translate="yes" xml:space="preserve">
          <source>In the C part of the XS file (above the first MODULE line) you have</source>
          <target state="translated">En la parte C del archivo XS (encima de la primera línea del MÓDULO)tienes</target>
        </trans-unit>
        <trans-unit id="9da81592ea409347d5f06bd8bb3e9dfa81794242" translate="yes" xml:space="preserve">
          <source>In the RE above, which is intentionally obfuscated for illustration, the delimiter is &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;, the modifier is &lt;code&gt;mx&lt;/code&gt; , and after delimiter-removal the RE is the same as for &lt;code&gt;m/ ^ a \s* b /mx&lt;/code&gt; . There's more than one reason you're encouraged to restrict your delimiters to non-alphanumeric, non-whitespace choices.</source>
          <target state="translated">En el RE anterior, que est&amp;aacute; ofuscado intencionalmente para ilustrar, el delimitador es &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; , el modificador es &lt;code&gt;mx&lt;/code&gt; , y despu&amp;eacute;s de eliminar el delimitador, el RE es el mismo que para &lt;code&gt;m/ ^ a \s* b /mx&lt;/code&gt; . Hay m&amp;aacute;s de una raz&amp;oacute;n por la que le recomendamos que restrinja sus delimitadores a opciones que no sean alfanum&amp;eacute;ricas ni espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="4cfa0dc8147e78f76fb03859acf432fb6d2aa234" translate="yes" xml:space="preserve">
          <source>In the RE above, which is intentionally obfuscated for illustration, the delimiter is &lt;code&gt;m&lt;/code&gt;, the modifier is &lt;code&gt;mx&lt;/code&gt;, and after delimiter-removal the RE is the same as for &lt;code&gt;m/ ^ a \s* b /mx&lt;/code&gt;. There's more than one reason you're encouraged to restrict your delimiters to non-alphanumeric, non-whitespace choices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13a699e1847e4e4560a850a3ff6592656db6884" translate="yes" xml:space="preserve">
          <source>In the above &quot;TAP&quot;, the second and fourth lines will generate &quot;Unknown&quot; tokens.</source>
          <target state="translated">En el &quot;TAP&quot; anterior,la segunda y la cuarta línea generarán fichas &quot;Desconocidas&quot;.</target>
        </trans-unit>
        <trans-unit id="058e91307a10961fd993a819105cb638818d3bdd" translate="yes" xml:space="preserve">
          <source>In the above [A, C] example, the &lt;code&gt;STORABLE_freeze&lt;/code&gt; hook could return:</source>
          <target state="translated">En el ejemplo [A, C] anterior, el gancho &lt;code&gt;STORABLE_freeze&lt;/code&gt; podr&amp;iacute;a devolver:</target>
        </trans-unit>
        <trans-unit id="eb159de765838e35dcdde7356fd1bd005beb7684" translate="yes" xml:space="preserve">
          <source>In the above, the threads object is returned to the parent thread in scalar context, and the thread's entry point function &lt;code&gt;foo&lt;/code&gt; will be called in list (array) context such that the parent thread can receive a list (array) from the &lt;code&gt;-&amp;gt;join()&lt;/code&gt; call. (&lt;code&gt;'array'&lt;/code&gt; is synonymous with &lt;code&gt;'list'&lt;/code&gt; .)</source>
          <target state="translated">En lo anterior, el objeto de subprocesos se devuelve al subproceso principal en el contexto escalar, y la funci&amp;oacute;n de punto de entrada del subproceso &lt;code&gt;foo&lt;/code&gt; se llamar&amp;aacute; en el contexto de lista (matriz) de modo que el subproceso principal pueda recibir una lista (matriz) de la &lt;code&gt;-&amp;gt;join()&lt;/code&gt; llamar. ( &lt;code&gt;'array'&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;'list'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e897db5f465666236003f392b985996d3d9611d4" translate="yes" xml:space="preserve">
          <source>In the above, the threads object is returned to the parent thread in scalar context, and the thread's entry point function &lt;code&gt;foo&lt;/code&gt; will be called in list (array) context such that the parent thread can receive a list (array) from the &lt;code&gt;-&amp;gt;join()&lt;/code&gt; call. (&lt;code&gt;'array'&lt;/code&gt; is synonymous with &lt;code&gt;'list'&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d73b10ae1520507352b424e24dd93e5f334c96c" translate="yes" xml:space="preserve">
          <source>In the above, your &lt;code&gt;frobnicate&lt;/code&gt; function has been changed to be made aware of whether or not it's dealing with UTF-8 data, so that it can handle the string appropriately.</source>
          <target state="translated">En lo anterior, su funci&amp;oacute;n &lt;code&gt;frobnicate&lt;/code&gt; se ha cambiado para saber si se trata o no de datos UTF-8, de modo que pueda manejar la cadena de forma adecuada.</target>
        </trans-unit>
        <trans-unit id="e3c7cb8befa26cf8853246bc9e4f9d7c53539559" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_COLLATE&lt;/code&gt; chooses the collation (sorting) locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_COLLATE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the collation locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_COLLATE&lt;/code&gt; elige la ubicaci&amp;oacute;n de colaci&amp;oacute;n (clasificaci&amp;oacute;n). En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_COLLATE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional de clasificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="15ce031d9fce06ed575c3914c8c9ea6101622d1e" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; chooses the character type locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the character type locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; elige la configuraci&amp;oacute;n regional del tipo de car&amp;aacute;cter. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional del tipo de car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="6468a6eaf61ca1746bc5af34d7e2d7db949b3755" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_MONETARY&lt;/code&gt; chooses the monetary formatting locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_MONETARY&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the monetary formatting locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_MONETARY&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato monetario. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_MONETARY&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato monetario.</target>
        </trans-unit>
        <trans-unit id="aa4035e23872d9d83606fa0ea98c9a044e6d0674" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_NUMERIC&lt;/code&gt; chooses the numeric format locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_NUMERIC&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the numeric format.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_NUMERIC&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato num&amp;eacute;rico. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_NUMERIC&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige el formato num&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="6ab8079d22785df117a0b766ea8b7c3baae6e9c3" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_TIME&lt;/code&gt; chooses the date and time formatting locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the date and time formatting locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_TIME&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato de fecha y hora. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_TIME&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato de fecha y hora.</target>
        </trans-unit>
        <trans-unit id="baa7ea095dc5ac2ae935e08f3403e4b2247a827b" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_COLLATE&lt;/code&gt; chooses the collation (sorting) locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_COLLATE&lt;/code&gt;, &lt;code&gt;LANG&lt;/code&gt; chooses the collation locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ec2099f7545c8e9b202ce433f85529dedee2a2" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_CTYPE&lt;/code&gt; chooses the character type locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_CTYPE&lt;/code&gt;, &lt;code&gt;LANG&lt;/code&gt; chooses the character type locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17060ec8d669313b51e7970818eee9376316ad91" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_MONETARY&lt;/code&gt; chooses the monetary formatting locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_MONETARY&lt;/code&gt;, &lt;code&gt;LANG&lt;/code&gt; chooses the monetary formatting locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9caf17cd1367aa2fadeb5cf40ede5223f42444e" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_NUMERIC&lt;/code&gt; chooses the numeric format locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_NUMERIC&lt;/code&gt;, &lt;code&gt;LANG&lt;/code&gt; chooses the numeric format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da232ff7cb7add5ab8264508686db664433513b3" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt;, &lt;code&gt;LC_TIME&lt;/code&gt; chooses the date and time formatting locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt;, &lt;code&gt;LANG&lt;/code&gt; chooses the date and time formatting locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e71f53c7f8acf89933bfc63a04da9641a2aa37" translate="yes" xml:space="preserve">
          <source>In the absence of parentheses, the precedence of list operators such as &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; is either very high or very low depending on whether you are looking at the left side or the right side of the operator. For example, in</source>
          <target state="translated">En ausencia de par&amp;eacute;ntesis, la prioridad de los operadores de lista como &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; es muy alta o muy baja dependiendo de si est&amp;aacute; mirando el lado izquierdo o el lado derecho del operador. Por ejemplo, en</target>
        </trans-unit>
        <trans-unit id="f77bc2d6be8faa985f9454517bf2c7fdaf4bd39e" translate="yes" xml:space="preserve">
          <source>In the absence of parentheses, the precedence of list operators such as &lt;code&gt;print&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, or &lt;code&gt;chmod&lt;/code&gt; is either very high or very low depending on whether you are looking at the left side or the right side of the operator. For example, in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8c77934a4391ccf6a1b211036cc4430a6aec4a" translate="yes" xml:space="preserve">
          <source>In the argument hashref,</source>
          <target state="translated">En el argumento hashref,</target>
        </trans-unit>
        <trans-unit id="c8faecb0e00885cd9d3471fff022824b0e193793" translate="yes" xml:space="preserve">
          <source>In the beginning there was ASCII, the &quot;American Standard Code for Information Interchange&quot;, which works quite well for Americans with their English alphabet and dollar-denominated currency. But it doesn't work so well even for other English speakers, who may use different currencies, such as the pound sterling (as the symbol for that currency is not in ASCII); and it's hopelessly inadequate for many of the thousands of the world's other languages.</source>
          <target state="translated">Al principio existía el ASCII,el &quot;Código Estándar Americano para el Intercambio de Información&quot;,que funciona bastante bien para los americanos con su alfabeto inglés y su moneda denominada en dólares.Pero no funciona tan bien ni siquiera para otros angloparlantes,que pueden usar diferentes monedas,como la libra esterlina (ya que el símbolo de esa moneda no está en ASCII);y es irremediablemente inadecuado para muchos de los miles de otros idiomas del mundo.</target>
        </trans-unit>
        <trans-unit id="4d58fb76f14dae3b712c2d1ef16b33d41abd7aa5" translate="yes" xml:space="preserve">
          <source>In the case of &lt;b&gt;-M&lt;/b&gt; and &lt;b&gt;-m&lt;/b&gt;, this is an error because those options are not intended for use inside scripts. Use the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; pragma instead.</source>
          <target state="translated">En el caso de &lt;b&gt;-M&lt;/b&gt; y &lt;b&gt;-m&lt;/b&gt; , esto es un error porque esas opciones no est&amp;aacute;n dise&amp;ntilde;adas para usarse dentro de scripts. Utilice el pragma de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="aa2dc1d853a0888a9b4beead512f4c24741b70d4" translate="yes" xml:space="preserve">
          <source>In the case of &lt;b&gt;-M&lt;/b&gt; and &lt;b&gt;-m&lt;/b&gt;, this is an error because those options are not intended for use inside scripts. Use the &lt;code&gt;use&lt;/code&gt; pragma instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468d95254e2569de4c93c44e90ecaaab6e1c8a96" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;(normalization =&amp;gt; &quot;prenormalized&quot;)&lt;/code&gt; , any normalization is not performed, but discontiguous contractions with combining characters are performed. Therefore &lt;code&gt;(normalization =&amp;gt; 'prenormalized', preprocess =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; { NFD(&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;) })&lt;/code&gt;&lt;b&gt;is&lt;/b&gt; equivalent to &lt;code&gt;(normalization =&amp;gt; 'NFD')&lt;/code&gt; . If source strings are finely prenormalized, &lt;code&gt;(normalization =&amp;gt; 'prenormalized')&lt;/code&gt; may save time for normalization.</source>
          <target state="translated">En el caso de &lt;code&gt;(normalization =&amp;gt; &quot;prenormalized&quot;)&lt;/code&gt; , no se realiza ninguna normalizaci&amp;oacute;n, pero se realizan contracciones no contiguas con caracteres combinados. Por lo tanto &lt;code&gt;(normalization =&amp;gt; 'prenormalized', preprocess =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; { NFD(&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;) })&lt;/code&gt; &lt;b&gt;es&lt;/b&gt; equivalente a &lt;code&gt;(normalization =&amp;gt; 'NFD')&lt;/code&gt; . Si las cadenas de origen est&amp;aacute;n finamente prenormalizadas, &lt;code&gt;(normalization =&amp;gt; 'prenormalized')&lt;/code&gt; puede ahorrar tiempo para la normalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e14cf0303bff15e63f1d4bb8fb829c422640cba4" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;(normalization =&amp;gt; &quot;prenormalized&quot;)&lt;/code&gt;, any normalization is not performed, but discontiguous contractions with combining characters are performed. Therefore &lt;code&gt;(normalization =&amp;gt; 'prenormalized', preprocess =&amp;gt; sub { NFD(shift) })&lt;/code&gt;&lt;b&gt;is&lt;/b&gt; equivalent to &lt;code&gt;(normalization =&amp;gt; 'NFD')&lt;/code&gt;. If source strings are finely prenormalized, &lt;code&gt;(normalization =&amp;gt; 'prenormalized')&lt;/code&gt; may save time for normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5830f7641c2c9f00de57771005c708cf9a4d5c74" translate="yes" xml:space="preserve">
          <source>In the case of a perl test suite, typically</source>
          <target state="translated">En el caso de un conjunto de pruebas de perl,típicamente</target>
        </trans-unit>
        <trans-unit id="93b5501796f0c8e106f09c3c3a171aba6b8b3835" translate="yes" xml:space="preserve">
          <source>In the case of a shared array, all the array's elements are shared, and for a shared hash, all the keys and values are shared. This places restrictions on what may be assigned to shared array and hash elements: only simple values or references to shared variables are allowed - this is so that a private variable can't accidentally become shared. A bad assignment will cause the thread to die. For example:</source>
          <target state="translated">En el caso de una matriz compartida,todos los elementos de la matriz son compartidos,y para un hash compartido,todas las claves y valores son compartidos.Esto impone restricciones sobre lo que puede asignarse a los elementos de la matriz y el hash compartidos:sólo se permiten valores simples o referencias a variables compartidas,de modo que una variable privada no pueda ser compartida accidentalmente.Una mala asignación causará que el hilo muera.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2e771b6edcf0a67e48248188d99cc8c1ee77f6d9" translate="yes" xml:space="preserve">
          <source>In the case of a string, &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; assumes you are wanting to load a file. But in the case of a bareword, it assumes you mean a module.</source>
          <target state="translated">En el caso de una cadena, &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; asume que desea cargar un archivo. Pero en el caso de una palabra b&amp;aacute;sica, se supone que se refiere a un m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="ac24b60f2e88b7aed91e2ca7c78a3affc1277034" translate="yes" xml:space="preserve">
          <source>In the case of a string, &lt;code&gt;require&lt;/code&gt; assumes you are wanting to load a file. But in the case of a bareword, it assumes you mean a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d133184cc1d94941d92f9ddbb74be254d7536c" translate="yes" xml:space="preserve">
          <source>In the case of an unrestricted hash this will be equivalent to</source>
          <target state="translated">En el caso de un hash no restringido,esto equivaldrá a</target>
        </trans-unit>
        <trans-unit id="9c7996f6bbe611631e0062a5b0c8688fa0df75c4" translate="yes" xml:space="preserve">
          <source>In the case of an unrestricted hash this will return an empty list.</source>
          <target state="translated">En el caso de un hachís sin restricciones,esto devolverá una lista vacía.</target>
        </trans-unit>
        <trans-unit id="bbcb89949ef30fa331653e26c292cc6bfd5402d5" translate="yes" xml:space="preserve">
          <source>In the case of branching constructs like the following:</source>
          <target state="translated">En el caso de las construcciones de ramificación como las siguientes:</target>
        </trans-unit>
        <trans-unit id="f5299444f09060df2c8b59facc0396320022caaf" translate="yes" xml:space="preserve">
          <source>In the case of sharing phrases, consider that you have an interface already localized for American English (probably by having been written with that as the native locale, but that's incidental). Localizing it for UK English should, in practical terms, be just a matter of running it past a British person with the instructions to indicate what few phrases would benefit from a change in spelling or possibly minor rewording. In that case, you should be able to put in the UK English localization module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235ed9f8205c1cb0e0f0c89543ab0c301b45cc8b" translate="yes" xml:space="preserve">
          <source>In the case where bsd_glob() has found some matching paths, but is interrupted by an error, it will return a list of filenames &lt;b&gt;and&lt;/b&gt; set &amp;amp;File::Glob::ERROR.</source>
          <target state="translated">En el caso de que bsd_glob () haya encontrado algunas rutas coincidentes, pero sea interrumpido por un error, devolver&amp;aacute; una lista de nombres de archivo &lt;b&gt;y&lt;/b&gt; establecer&amp;aacute; &amp;amp; File :: Glob :: ERROR.</target>
        </trans-unit>
        <trans-unit id="ab44e54a843289d8fb48be15296e74831fd77123" translate="yes" xml:space="preserve">
          <source>In the cases of NFD, NFKD, and FCD, the answer must be either &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt; . The answer &lt;code&gt;MAYBE&lt;/code&gt; may be returned in the cases of NFC, NFKC, and FCC.</source>
          <target state="translated">En los casos de NFD, NFKD y FCD, la respuesta debe ser &lt;code&gt;YES&lt;/code&gt; o &lt;code&gt;NO&lt;/code&gt; . La respuesta &lt;code&gt;MAYBE&lt;/code&gt; se pueda devolver en los casos de NFC, NFKC y FCC.</target>
        </trans-unit>
        <trans-unit id="a9290433a82e6cf3e26db0b835cf369ebaa80c05" translate="yes" xml:space="preserve">
          <source>In the cases of NFD, NFKD, and FCD, the answer must be either &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt;. The answer &lt;code&gt;MAYBE&lt;/code&gt; may be returned in the cases of NFC, NFKC, and FCC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e0ab2727afbd4185da2de81e38250408bd5cc4" translate="yes" xml:space="preserve">
          <source>In the code below, the use of &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; can all produce a &lt;code&gt;&quot;Useless use of xxx in void context&quot;&lt;/code&gt; warning.</source>
          <target state="translated">En el c&amp;oacute;digo siguiente, el uso de &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; pueden producir una advertencia de &lt;code&gt;&quot;Useless use of xxx in void context&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83084455671be2342089bb45fada8c84af832860" translate="yes" xml:space="preserve">
          <source>In the code below, the use of &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; can all produce a &lt;code&gt;&quot;Useless use of xxx in void context&quot;&lt;/code&gt; warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd1596cdd97dc35baf217614ea25fccb283e4de" translate="yes" xml:space="preserve">
          <source>In the consideration of speed against memory requirements the balance has been tilted in favor of faster execution. This has influenced the way C compilers allocate memory for structures: On architectures where a 16-bit or 32-bit operand can be moved faster between places in memory, or to or from a CPU register, if it is aligned at an even or multiple-of-four or even at a multiple-of eight address, a C compiler will give you this speed benefit by stuffing extra bytes into structures. If you don't cross the C shoreline this is not likely to cause you any grief (although you should care when you design large data structures, or you want your code to be portable between architectures (you do want that, don't you?)).</source>
          <target state="translated">En la consideración de la velocidad contra los requerimientos de memoria la balanza se ha inclinado a favor de una ejecución más rápida.Esto ha influido en la forma en que los compiladores C asignan la memoria para las estructuras:En las arquitecturas en las que un operando de 16 o 32 bits puede moverse más rápidamente entre lugares de la memoria,o hacia o desde un registro de la CPU,si está alineado en una dirección par o múltiplo de cuatro o incluso en un múltiplo de ocho,un compilador de C le dará este beneficio de velocidad rellenando las estructuras con bytes adicionales.Si no cruza la línea de costa de C,no es probable que esto le cause ningún problema (aunque debería preocuparse cuando diseña grandes estructuras de datos,o quiere que su código sea portátil entre arquitecturas (¿lo quiere,verdad?)).</target>
        </trans-unit>
        <trans-unit id="9d33a076ef77a2ea3c1cd018606852167138e6c8" translate="yes" xml:space="preserve">
          <source>In the context of the</source>
          <target state="translated">En el contexto de la</target>
        </trans-unit>
        <trans-unit id="36e06d755cd3fd5bf54637378805e22f4acd5720" translate="yes" xml:space="preserve">
          <source>In the course of hacking on the Perl core distribution, you may have occasion to configure, build and test perl at an old commit. Sometimes &lt;code&gt;make&lt;/code&gt; will fail during this process. If that happens, you may be able to salvage the situation by using the Devel::PatchPerl library from CPAN (not included in the core) to bring the source code at that commit to a buildable state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4abaa133201d3b086e220fd2a8825f9d8810e3d" translate="yes" xml:space="preserve">
          <source>In the current implementation, scalar constants are actually inlinable subroutines. As of version 5.004 of Perl, the appropriate scalar constant is inserted directly in place of some subroutine calls, thereby saving the overhead of a subroutine call. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;&quot;Constant Functions&quot; in perlsub&lt;/a&gt; for details about how and when this happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d491c48b25f3ad65e82b4c5c2097be0b50a9588c" translate="yes" xml:space="preserve">
          <source>In the current implementation, scalar constants are actually inlinable subroutines. As of version 5.004 of Perl, the appropriate scalar constant is inserted directly in place of some subroutine calls, thereby saving the overhead of a subroutine call. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for details about how and when this happens.</source>
          <target state="translated">En la implementaci&amp;oacute;n actual, las constantes escalares son en realidad subrutinas insertables. A partir de la versi&amp;oacute;n 5.004 de Perl, la constante escalar apropiada se inserta directamente en lugar de algunas llamadas de subrutina, ahorrando as&amp;iacute; la sobrecarga de una llamada de subrutina. Consulte &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Funciones constantes en perlsub&lt;/a&gt; para obtener detalles sobre c&amp;oacute;mo y cu&amp;aacute;ndo sucede esto.</target>
        </trans-unit>
        <trans-unit id="3c0455a3b2b53d95f4e20ec0b4340a717b68f76c" translate="yes" xml:space="preserve">
          <source>In the default case where no value is explicitly assigned to &lt;code&gt;fallback&lt;/code&gt; , magic autogeneration is enabled.</source>
          <target state="translated">En el caso predeterminado en el que no se asigna expl&amp;iacute;citamente ning&amp;uacute;n valor al &lt;code&gt;fallback&lt;/code&gt; , la generaci&amp;oacute;n autom&amp;aacute;tica m&amp;aacute;gica est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="c9f523dc0714c247e84ee8251b5363ace685ef46" translate="yes" xml:space="preserve">
          <source>In the default case where no value is explicitly assigned to &lt;code&gt;fallback&lt;/code&gt;, magic autogeneration is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9458e90e2a5f3acd753b6153a03f2c183bb3d3dd" translate="yes" xml:space="preserve">
          <source>In the default case, the events corresponding to &lt;code&gt;=encoding&lt;/code&gt; directives are not emitted. They are emitted if &lt;code&gt;keep_encoding_directive&lt;/code&gt; is true. In that case they produce event structures like &lt;a href=&quot;#events-with-an-element_name-of-head1-..-head4&quot;&gt;&quot;events with an element_name of head1 .. head4&quot;&lt;/a&gt; above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23054b89eefbfee4eec8f7b57971efe41724413f" translate="yes" xml:space="preserve">
          <source>In the default configuration, options names may be abbreviated to uniqueness, case does not matter, and a single dash is sufficient, even for long option names. Also, options may be placed between non-option arguments. See &lt;a href=&quot;#Configuring-Getopt%3A%3ALong&quot;&gt;&quot;Configuring Getopt::Long&quot;&lt;/a&gt; for more details on how to configure Getopt::Long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4e78aa2b33a6d6dac51bbc3211d37de72733b0" translate="yes" xml:space="preserve">
          <source>In the default configuration, options names may be abbreviated to uniqueness, case does not matter, and a single dash is sufficient, even for long option names. Also, options may be placed between non-option arguments. See &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuring Getopt::Long&lt;/a&gt; for more details on how to configure Getopt::Long.</source>
          <target state="translated">En la configuraci&amp;oacute;n predeterminada, los nombres de las opciones se pueden abreviar a unicidad, el caso no importa y un solo gui&amp;oacute;n es suficiente, incluso para nombres de opciones largos. Adem&amp;aacute;s, las opciones se pueden colocar entre argumentos que no sean de opci&amp;oacute;n. Consulte &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuraci&amp;oacute;n de Getopt :: Long&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre c&amp;oacute;mo configurar Getopt :: Long.</target>
        </trans-unit>
        <trans-unit id="e72101fd159fd0afaf983f558f5b87febb7113ce" translate="yes" xml:space="preserve">
          <source>In the description it is mentioned that</source>
          <target state="translated">En la descripción se menciona que</target>
        </trans-unit>
        <trans-unit id="ef03d8c00322da2ed4dc98f0803a382ee30a4ed1" translate="yes" xml:space="preserve">
          <source>In the diagram, the further right you go the more deeply nested the scope is. It is only when control is back with perl on the extreme left of the diagram that you will have dropped back to the enclosing scope and any temporaries you have left hanging around will be freed.</source>
          <target state="translated">En el diagrama,cuanto más a la derecha vayas,más profundamente anidado estará el telescopio.Sólo cuando el control esté de vuelta con el perl en el extremo izquierdo del diagrama,habrás vuelto al telescopio adjunto y cualquier temporal que hayas dejado colgando será liberado.</target>
        </trans-unit>
        <trans-unit id="a19348facef1eccdb0bfe0058ba391b435c7d989" translate="yes" xml:space="preserve">
          <source>In the directory where you unpacked the sources, issue the familiar commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f416a980a416e375bc66bc2d4fa36e45d3dee04" translate="yes" xml:space="preserve">
          <source>In the event that your XS code may need the underlying &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale, there are macros available to access this; see &lt;a href=&quot;perlapi#Locale-related-functions-and-macros&quot;&gt;Locale-related functions and macros in perlapi&lt;/a&gt;.</source>
          <target state="translated">En el caso de que su c&amp;oacute;digo XS pueda necesitar la &lt;code&gt;LC_NUMERIC&lt;/code&gt; regional LC_NUMERIC subyacente , hay macros disponibles para acceder a esto; consulte &lt;a href=&quot;perlapi#Locale-related-functions-and-macros&quot;&gt;Funciones y macros relacionadas con la configuraci&amp;oacute;n regional en perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf76bf6bac3fdd00f94042b70f25cd2c0127da6a" translate="yes" xml:space="preserve">
          <source>In the example above $DB_HASH is actually a pre-defined reference to a hash object. &lt;b&gt;DB_File&lt;/b&gt; has three of these pre-defined references. Apart from $DB_HASH, there is also $DB_BTREE and $DB_RECNO.</source>
          <target state="translated">En el ejemplo anterior, $ DB_HASH es en realidad una referencia predefinida a un objeto hash. &lt;b&gt;DB_File&lt;/b&gt; tiene tres de estas referencias predefinidas. Aparte de $ DB_HASH, tambi&amp;eacute;n hay $ DB_BTREE y $ DB_RECNO.</target>
        </trans-unit>
        <trans-unit id="f9fdb8bfd43fe6e2a44475d6d573995092816442" translate="yes" xml:space="preserve">
          <source>In the example above for &lt;code&gt;no_index&lt;/code&gt;, &lt;code&gt;My::Module::Sample::Foo&lt;/code&gt; would be ignored, but &lt;code&gt;My::Module::Sample&lt;/code&gt; would not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383bad82dbf36df5fcbc2607474fc2833874c49f" translate="yes" xml:space="preserve">
          <source>In the example above, no file in</source>
          <target state="translated">En el ejemplo anterior,ningún archivo en</target>
        </trans-unit>
        <trans-unit id="a6fdb80f186445ea957d140c9ee93d85c7f7bc67" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; method returns as soon as the thread ends. In addition to waiting for a thread to finish and gathering up any values that the thread might have returned, &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; also performs any OS cleanup necessary for the thread. That cleanup might be important, especially for long-running programs that spawn lots of threads. If you don't want the return values and don't want to wait for the thread to finish, you should call the &lt;code&gt;detach()&lt;/code&gt; method instead, as described next.</source>
          <target state="translated">En el ejemplo anterior, el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; regresa tan pronto como termina el hilo. Adem&amp;aacute;s de esperar a que finalice un hilo y recopilar los valores que el hilo podr&amp;iacute;a haber devuelto, &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n realiza cualquier limpieza del sistema operativo necesaria para el hilo. Esa limpieza puede ser importante, especialmente para programas de larga ejecuci&amp;oacute;n que generan muchos hilos. Si no desea los valores de retorno y no desea esperar a que termine el hilo, debe llamar al m&amp;eacute;todo &lt;code&gt;detach()&lt;/code&gt; lugar, como se describe a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="95d3b55907325681c5f8c375c41d335ffa7d8ded" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;join()&lt;/code&gt; method returns as soon as the thread ends. In addition to waiting for a thread to finish and gathering up any values that the thread might have returned, &lt;code&gt;join()&lt;/code&gt; also performs any OS cleanup necessary for the thread. That cleanup might be important, especially for long-running programs that spawn lots of threads. If you don't want the return values and don't want to wait for the thread to finish, you should call the &lt;code&gt;detach()&lt;/code&gt; method instead, as described next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0aec8a73878fae65e2fc321ef79436b2e98a6ee" translate="yes" xml:space="preserve">
          <source>In the example above, the true parent does not want to write to the $writer filehandle, so it closes it. However, because $writer was opened using &lt;code&gt;open $fh, &quot;|-&quot;&lt;/code&gt;, it has a special behavior: closing it calls waitpid() (see &lt;a href=&quot;perlfunc#waitpid&quot;&gt;&quot;waitpid&quot; in perlfunc&lt;/a&gt;), which waits for the subprocess to exit. If the child process ends up waiting for something happening in the section marked &quot;do something else&quot;, you have deadlock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fb9b67eb5a1d7e86fa97df408aad4ebc6c2e68" translate="yes" xml:space="preserve">
          <source>In the example above, the true parent does not want to write to the WRITER filehandle, so it closes it. However, because WRITER was opened using &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , it has a special behavior: closing it calls waitpid() (see &lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;), which waits for the subprocess to exit. If the child process ends up waiting for something happening in the section marked &quot;do something else&quot;, you have deadlock.</source>
          <target state="translated">En el ejemplo anterior, el padre verdadero no quiere escribir en el identificador de archivo WRITER, por lo que lo cierra. Sin embargo, debido a que WRITER se abri&amp;oacute; usando &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , tiene un comportamiento especial: al cerrarlo, llama a waitpid () (ver &lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt; ), que espera a que el subproceso salga. Si el proceso hijo termina esperando a que suceda algo en la secci&amp;oacute;n marcada &quot;hacer algo m&amp;aacute;s&quot;, tiene un punto muerto.</target>
        </trans-unit>
        <trans-unit id="e18ac50c69f2e5daf082fad97b93479b32118e7a" translate="yes" xml:space="preserve">
          <source>In the example above, we've created a global variable to temporarily store the computed value of our eval'ed expression. It is also possible and in most cases a better strategy to fetch the return value from</source>
          <target state="translated">En el ejemplo anterior,hemos creado una variable global para almacenar temporalmente el valor calculado de nuestra expresión evaluada.También es posible,y en la mayoría de los casos una mejor estrategia para obtener el valor de retorno de</target>
        </trans-unit>
        <trans-unit id="215f011f187069670df6baefac97d219cfd4d544" translate="yes" xml:space="preserve">
          <source>In the example above, you can see that we passed &lt;code&gt;isa =&amp;gt; 'Bool'&lt;/code&gt; to &lt;code&gt;has()&lt;/code&gt; when creating our &lt;code&gt;is_on&lt;/code&gt; attribute. This tells &lt;code&gt;Moose&lt;/code&gt; that this attribute must be a boolean value. If we try to set it to an invalid value, our code will throw an error.</source>
          <target state="translated">En el ejemplo anterior, puede ver que pasamos &lt;code&gt;isa =&amp;gt; 'Bool'&lt;/code&gt; a &lt;code&gt;has()&lt;/code&gt; al crear nuestro atributo &lt;code&gt;is_on&lt;/code&gt; . Esto le dice a &lt;code&gt;Moose&lt;/code&gt; que este atributo debe ser un valor booleano. Si intentamos establecerlo en un valor no v&amp;aacute;lido, nuestro c&amp;oacute;digo arrojar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="7091546bde153dd7889f18e20c48c8bc55eaa567" translate="yes" xml:space="preserve">
          <source>In the example filter, the object (&lt;code&gt;$ref&lt;/code&gt; ) is blessed just like any other Perl object. Our example uses an anonymous array, but this isn't a requirement. Because this example doesn't need to store any context information, we could have used a scalar or hash reference just as well. The next section demonstrates context data.</source>
          <target state="translated">En el filtro de ejemplo, el objeto ( &lt;code&gt;$ref&lt;/code&gt; ) est&amp;aacute; bendecido como cualquier otro objeto de Perl. Nuestro ejemplo usa una matriz an&amp;oacute;nima, pero esto no es un requisito. Debido a que este ejemplo no necesita almacenar ninguna informaci&amp;oacute;n de contexto, tambi&amp;eacute;n podr&amp;iacute;amos haber usado una referencia escalar o hash. La siguiente secci&amp;oacute;n muestra datos de contexto.</target>
        </trans-unit>
        <trans-unit id="21a83782fbb9be8126f7468757dd72bbc0bf6692" translate="yes" xml:space="preserve">
          <source>In the example filter, the object (&lt;code&gt;$ref&lt;/code&gt;) is blessed just like any other Perl object. Our example uses an anonymous array, but this isn't a requirement. Because this example doesn't need to store any context information, we could have used a scalar or hash reference just as well. The next section demonstrates context data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cad79aaf9d1ce6eabd545156fa679d72897f6d5" translate="yes" xml:space="preserve">
          <source>In the example script below, the &lt;code&gt;match&lt;/code&gt; sub uses this feature to find and print the first matching key/value pair given a partial key.</source>
          <target state="translated">En el script de ejemplo a continuaci&amp;oacute;n, el sub de &lt;code&gt;match&lt;/code&gt; utiliza esta funci&amp;oacute;n para buscar e imprimir el primer par clave / valor coincidente con una clave parcial.</target>
        </trans-unit>
        <trans-unit id="874b0ca5f6d74bc36f1a8bf750e4d758cb8b0d1e" translate="yes" xml:space="preserve">
          <source>In the examples above, we assigned the filehandle to a scalar variable before using it. That is because only simple scalar variables, not expressions or subscripts of hashes or arrays, can be used with built-ins like &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the diamond operator. Using something other than a simple scalar variable as a filehandle is illegal and won't even compile:</source>
          <target state="translated">En los ejemplos anteriores, asignamos el identificador de archivo a una variable escalar antes de usarlo. Esto se debe a que solo se pueden usar variables escalares simples, no expresiones o sub&amp;iacute;ndices de hashes o matrices, con elementos integrados como &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; o el operador de diamante. Usar algo que no sea una variable escalar simple como un identificador de archivo es ilegal y ni siquiera se compilar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="3c7dfe54f4652ddbd0ee59dd84dc74edf8984d67" translate="yes" xml:space="preserve">
          <source>In the examples above, we assigned the filehandle to a scalar variable before using it. That is because only simple scalar variables, not expressions or subscripts of hashes or arrays, can be used with built-ins like &lt;code&gt;print&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, or the diamond operator. Using something other than a simple scalar variable as a filehandle is illegal and won't even compile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5cb1050428e1b3c39a6dbeac5fa82c4e3ee30c" translate="yes" xml:space="preserve">
          <source>In the examples given to date, any temporaries created in the callback (i.e., parameters passed on the stack to the</source>
          <target state="translated">En los ejemplos dados hasta la fecha,cualquier temporal creado en la llamada de retorno (es decir,los parámetros pasados en la pila a la</target>
        </trans-unit>
        <trans-unit id="52df5ff09c57ff6bd4a65152023282e8e3fdf423" translate="yes" xml:space="preserve">
          <source>In the extended usage form, the references to be dumped can be given user-specified names. If a name begins with a &lt;code&gt;*&lt;/code&gt; , the output will describe the dereferenced type of the supplied reference for hashes and arrays, and coderefs. Output of names will be avoided where possible if the &lt;code&gt;Terse&lt;/code&gt; flag is set.</source>
          <target state="translated">En el formulario de uso extendido, las referencias que se van a descargar pueden recibir nombres especificados por el usuario. Si un nombre comienza con &lt;code&gt;*&lt;/code&gt; , la salida describir&amp;aacute; el tipo desreferenciado de la referencia proporcionada para hashes y matrices, y coderefs. La salida de nombres se evitar&amp;aacute; siempre que sea posible si se establece la bandera &lt;code&gt;Terse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8be4e12f45149670637e90a3aa95e43448b1b2ae" translate="yes" xml:space="preserve">
          <source>In the extended usage form, the references to be dumped can be given user-specified names. If a name begins with a &lt;code&gt;*&lt;/code&gt;, the output will describe the dereferenced type of the supplied reference for hashes and arrays, and coderefs. Output of names will be avoided where possible if the &lt;code&gt;Terse&lt;/code&gt; flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e093183cde30fbf5834bc8c2f2306668f0a93ab" translate="yes" xml:space="preserve">
          <source>In the eyes of the operating system, pseudo-processes created via the fork() emulation are simply threads in the same process. This means that any process-level limits imposed by the operating system apply to all pseudo-processes taken together. This includes any limits imposed by the operating system on the number of open file, directory and socket handles, limits on disk space usage, limits on memory size, limits on CPU utilization etc.</source>
          <target state="translated">A los ojos del sistema operativo,los pseudo-procesos creados mediante la emulación de fork()son simplemente hilos en el mismo proceso.Esto significa que cualquier límite a nivel de proceso impuesto por el sistema operativo se aplica a todos los seudoprocesos tomados en conjunto.Esto incluye cualquier límite impuesto por el sistema operativo en el número de archivos abiertos,directorios y manejadores de sockets,límites en el uso de espacio en disco,límites en el tamaño de la memoria,límites en la utilización de la CPU,etc.</target>
        </trans-unit>
        <trans-unit id="c87855f737ebcf54612bd0d985e7951567552bdc" translate="yes" xml:space="preserve">
          <source>In the final example above, the first ASCII Hex digit is code point 48, the character &quot;0&quot;, and all code points from it through 57 (a &quot;9&quot;) are ASCII hex digits. Code points 58 through 64 aren't, but 65 (an &quot;A&quot;) through 70 (an &quot;F&quot;) are, as are 97 (&quot;a&quot;) through 102 (&quot;f&quot;). 103 starts a range of code points that aren't ASCII hex digits. That range extends to infinity, which on your computer can be found in the variable &lt;code&gt;$Unicode::UCD::MAX_CP&lt;/code&gt; . (This variable is as close to infinity as Perl can get on your platform, and may be too high for some operations to work; you may wish to use a smaller number for your purposes.)</source>
          <target state="translated">En el ejemplo final anterior, el primer d&amp;iacute;gito hexadecimal ASCII es el punto de c&amp;oacute;digo 48, el car&amp;aacute;cter &quot;0&quot; y todos los puntos de c&amp;oacute;digo desde &amp;eacute;l hasta el 57 (un &quot;9&quot;) son d&amp;iacute;gitos hexadecimales ASCII. Los puntos de c&amp;oacute;digo 58 a 64 no lo son, pero 65 (una &quot;A&quot;) a 70 (una &quot;F&quot;) lo son, al igual que 97 (&quot;a&quot;) a 102 (&quot;f&quot;). 103 inicia un rango de puntos de c&amp;oacute;digo que no son d&amp;iacute;gitos hexadecimales ASCII. Ese rango se extiende hasta el infinito, que en su computadora se puede encontrar en la variable &lt;code&gt;$Unicode::UCD::MAX_CP&lt;/code&gt; . (Esta variable es lo m&amp;aacute;s cercana al infinito que Perl puede conseguir en su plataforma, y ​​puede ser demasiado alta para que funcionen algunas operaciones; es posible que desee utilizar un n&amp;uacute;mero menor para sus prop&amp;oacute;sitos).</target>
        </trans-unit>
        <trans-unit id="94e9a81f285a566a35b6b1d438008270601b9a19" translate="yes" xml:space="preserve">
          <source>In the final example above, the first ASCII Hex digit is code point 48, the character &quot;0&quot;, and all code points from it through 57 (a &quot;9&quot;) are ASCII hex digits. Code points 58 through 64 aren't, but 65 (an &quot;A&quot;) through 70 (an &quot;F&quot;) are, as are 97 (&quot;a&quot;) through 102 (&quot;f&quot;). 103 starts a range of code points that aren't ASCII hex digits. That range extends to infinity, which on your computer can be found in the variable &lt;code&gt;$Unicode::UCD::MAX_CP&lt;/code&gt;. (This variable is as close to infinity as Perl can get on your platform, and may be too high for some operations to work; you may wish to use a smaller number for your purposes.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc9782ed3f3e2b680013d144689804f90d54bf6" translate="yes" xml:space="preserve">
          <source>In the first example, an error handler, the flow of control could be as follows. You have created an interface to an external library. Control can reach the external library like this</source>
          <target state="translated">En el primer ejemplo,un manejador de errores,el flujo de control podría ser el siguiente.Ha creado una interfaz con una biblioteca externa.El control puede llegar a la biblioteca externa de esta manera</target>
        </trans-unit>
        <trans-unit id="837426c8f21e7781853f5f83912529e607900661" translate="yes" xml:space="preserve">
          <source>In the first form, often referred to as a &quot;string eval&quot;, the return value of EXPR is parsed and executed as if it were a little Perl program. The value of the expression (which is itself determined within scalar context) is first parsed, and if there were no errors, executed as a block within the lexical context of the current Perl program. This means, that in particular, any outer lexical variables are visible to it, and any package variable settings or subroutine and format definitions remain afterwards.</source>
          <target state="translated">En la primera forma,a menudo llamada &quot;evaluación de cadena&quot;,el valor de retorno de EXPR es analizado y ejecutado como si fuera un pequeño programa de Perl.El valor de la expresión (que a su vez se determina en un contexto escalar)se analiza primero y,si no hay errores,se ejecuta como un bloque en el contexto léxico del programa Perl actual.Esto significa,en particular,que todas las variables léxicas externas son visibles para él,y los ajustes de las variables del paquete o las definiciones de subrutinas y formatos permanecen después.</target>
        </trans-unit>
        <trans-unit id="9907ef81620f333168bdff52969249681c5309f5" translate="yes" xml:space="preserve">
          <source>In the first form, registers an object to work with for the function &lt;code&gt;id_2obj()&lt;/code&gt; . In the second form, it additionally marks the given hashrefs down for garbage collection. This means that when the object goes out of scope, any entries in the given hashes under the key of &lt;code&gt;id($obj)&lt;/code&gt; will be deleted from the hashes.</source>
          <target state="translated">En la primera forma, registra un objeto con el que trabajar para la funci&amp;oacute;n &lt;code&gt;id_2obj()&lt;/code&gt; . En la segunda forma, adem&amp;aacute;s marca los hashrefs dados para la recolecci&amp;oacute;n de basura. Esto significa que cuando el objeto sale del alcance, cualquier entrada en los hash dados bajo la clave de &lt;code&gt;id($obj)&lt;/code&gt; se eliminar&amp;aacute; de los hash.</target>
        </trans-unit>
        <trans-unit id="82daad9f8422b91114fc168e8a72aa6a69bd4b7c" translate="yes" xml:space="preserve">
          <source>In the first form, registers an object to work with for the function &lt;code&gt;id_2obj()&lt;/code&gt;. In the second form, it additionally marks the given hashrefs down for garbage collection. This means that when the object goes out of scope, any entries in the given hashes under the key of &lt;code&gt;id($obj)&lt;/code&gt; will be deleted from the hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886a42840b4db0f0804225c4bdd1da338f8eaea4" translate="yes" xml:space="preserve">
          <source>In the first form, the anonymous hash is being blessed into the class in &lt;code&gt;$class&lt;/code&gt; . In the second form, the anonymous hash is blessed into the current package.</source>
          <target state="translated">En la primera forma, el hash an&amp;oacute;nimo est&amp;aacute; siendo bendecido en la clase en &lt;code&gt;$class&lt;/code&gt; . En la segunda forma, el hash an&amp;oacute;nimo se incorpora al paquete actual.</target>
        </trans-unit>
        <trans-unit id="241819a9fd13f09ae7d3eb578ecbc5ee2d6a8a15" translate="yes" xml:space="preserve">
          <source>In the first form, the anonymous hash is being blessed into the class in &lt;code&gt;$class&lt;/code&gt;. In the second form, the anonymous hash is blessed into the current package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba19d40237087370736921c2b055d0f9f4e8621" translate="yes" xml:space="preserve">
          <source>In the first two versions, the body of the subroutine is lexically in the main package,</source>
          <target state="translated">En las dos primeras versiones,el cuerpo de la subrutina está léxicamente en el paquete principal,</target>
        </trans-unit>
        <trans-unit id="78475acfd51fd678e0727a44ada7dcef5de0bc33" translate="yes" xml:space="preserve">
          <source>In the first version above, you let the appropriate encoding layer handle the conversion. In the second, you explicitly translate from one encoding to the other.</source>
          <target state="translated">En la primera versión de arriba,dejas que la capa de codificación apropiada se encargue de la conversión.En la segunda,traduces explícitamente de una codificación a la otra.</target>
        </trans-unit>
        <trans-unit id="2414010bede2999a6fc168db89c621d8bb7bb77d" translate="yes" xml:space="preserve">
          <source>In the following all questions and explanations regarding config variables are collected.</source>
          <target state="translated">A continuación se recogen todas las preguntas y explicaciones sobre las variables de configuración.</target>
        </trans-unit>
        <trans-unit id="33eb6a227648440eaeed500f955607df47c5aa25" translate="yes" xml:space="preserve">
          <source>In the following examples, &lt;code&gt;$pad_len&lt;/code&gt; is the length to which you wish to pad the string, &lt;code&gt;$text&lt;/code&gt; or &lt;code&gt;$num&lt;/code&gt; contains the string to be padded, and &lt;code&gt;$pad_char&lt;/code&gt; contains the padding character. You can use a single character string constant instead of the &lt;code&gt;$pad_char&lt;/code&gt; variable if you know what it is in advance. And in the same way you can use an integer in place of &lt;code&gt;$pad_len&lt;/code&gt; if you know the pad length in advance.</source>
          <target state="translated">En los siguientes ejemplos, &lt;code&gt;$pad_len&lt;/code&gt; es la longitud a la que desea rellenar la cadena, &lt;code&gt;$text&lt;/code&gt; o &lt;code&gt;$num&lt;/code&gt; contiene la cadena a rellenar y &lt;code&gt;$pad_char&lt;/code&gt; contiene el car&amp;aacute;cter de relleno. Puede utilizar una constante de cadena de un solo car&amp;aacute;cter en lugar de la variable &lt;code&gt;$pad_char&lt;/code&gt; si sabe de antemano cu&amp;aacute;l es. Y de la misma manera, puede usar un n&amp;uacute;mero entero en lugar de &lt;code&gt;$pad_len&lt;/code&gt; si conoce la longitud del pad de antemano.</target>
        </trans-unit>
        <trans-unit id="fc65931a92616454753f1a0ca267288397762366" translate="yes" xml:space="preserve">
          <source>In the following section, we use XML to represent the event structure associated with a particular construct. That is, an opening tag represents the element start, the attributes of that opening tag are the attributes given to the callback, and the closing tag represents the end element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a479078b9cedbc887640e0bba65b952ff07c579b" translate="yes" xml:space="preserve">
          <source>In the following sections, these operators are covered in detail, in the same order in which they appear in the table above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ac42f7d8b0a7d53378ec8bb6883cc947c8612a" translate="yes" xml:space="preserve">
          <source>In the following sections, these operators are covered in precedence order.</source>
          <target state="translated">En las secciones siguientes,estos operadores se tratan en orden de precedencia.</target>
        </trans-unit>
        <trans-unit id="4b178b275b86ca37ae6642cdcf850388ebe0add6" translate="yes" xml:space="preserve">
          <source>In the following tables, numbers indicate priority. For example, the table below states that, if no implementation for &lt;code&gt;'!'&lt;/code&gt; has been defined then Perl will implement it using &lt;code&gt;'bool'&lt;/code&gt; (that is, by inverting the value returned by the method for &lt;code&gt;'bool'&lt;/code&gt; ); if boolean conversion is also unimplemented then Perl will use &lt;code&gt;'0+'&lt;/code&gt; or, failing that, &lt;code&gt;'&quot;&quot;'&lt;/code&gt; .</source>
          <target state="translated">En las siguientes tablas, los n&amp;uacute;meros indican prioridad. Por ejemplo, la siguiente tabla indica que, si no hay implementaci&amp;oacute;n para &lt;code&gt;'!'&lt;/code&gt; se ha definido, entonces Perl lo implementar&amp;aacute; usando &lt;code&gt;'bool'&lt;/code&gt; (es decir, invirtiendo el valor devuelto por el m&amp;eacute;todo para &lt;code&gt;'bool'&lt;/code&gt; ); si la conversi&amp;oacute;n booleana tampoco est&amp;aacute; implementada, Perl usar&amp;aacute; &lt;code&gt;'0+'&lt;/code&gt; o, en su defecto, &lt;code&gt;'&quot;&quot;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f242ec2577ee075f67a91be886c834c96f1626f" translate="yes" xml:space="preserve">
          <source>In the following tables, numbers indicate priority. For example, the table below states that, if no implementation for &lt;code&gt;'!'&lt;/code&gt; has been defined then Perl will implement it using &lt;code&gt;'bool'&lt;/code&gt; (that is, by inverting the value returned by the method for &lt;code&gt;'bool'&lt;/code&gt;); if boolean conversion is also unimplemented then Perl will use &lt;code&gt;'0+'&lt;/code&gt; or, failing that, &lt;code&gt;'&quot;&quot;'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a38bcdad9de0c83d52fd95f8565a94b07788e8" translate="yes" xml:space="preserve">
          <source>In the following tables:</source>
          <target state="translated">En las siguientes tablas:</target>
        </trans-unit>
        <trans-unit id="8d00c0473cd774a465a212e290a62a3d57987f7d" translate="yes" xml:space="preserve">
          <source>In the form of pipe opens taking three or more arguments, if LIST is specified (extra arguments after the command name) then LIST becomes arguments to the command invoked if the platform supports it. The meaning of &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; with more than three arguments for non-pipe modes is not yet defined, but experimental &quot;layers&quot; may give extra LIST arguments meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770598786b9fb05b86d05d808ab206b9dce08c07" translate="yes" xml:space="preserve">
          <source>In the form of pipe opens taking three or more arguments, if LIST is specified (extra arguments after the command name) then LIST becomes arguments to the command invoked if the platform supports it. The meaning of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with more than three arguments for non-pipe modes is not yet defined, but experimental &quot;layers&quot; may give extra LIST arguments meaning.</source>
          <target state="translated">En forma de tuber&amp;iacute;a se abre tomando tres o m&amp;aacute;s argumentos, si se especifica LIST (argumentos adicionales despu&amp;eacute;s del nombre del comando), entonces LIST se convierte en argumentos para el comando invocado si la plataforma lo admite. El significado de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; con m&amp;aacute;s de tres argumentos para los modos sin tuber&amp;iacute;a a&amp;uacute;n no est&amp;aacute; definido, pero las &quot;capas&quot; experimentales pueden dar un significado adicional a los argumentos LIST.</target>
        </trans-unit>
        <trans-unit id="351023ba55a42928810e8ea146d7f9a69c7e4007" translate="yes" xml:space="preserve">
          <source>In the form of pipe opens taking three or more arguments, if LIST is specified (extra arguments after the command name) then LIST becomes arguments to the command invoked if the platform supports it. The meaning of &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with more than three arguments for non-pipe modes is not yet defined, but experimental &quot;layers&quot; may give extra LIST arguments meaning.</source>
          <target state="translated">En forma de tuber&amp;iacute;a se abre tomando tres o m&amp;aacute;s argumentos, si se especifica LIST (argumentos adicionales despu&amp;eacute;s del nombre del comando), entonces LIST se convierte en argumentos para el comando invocado si la plataforma lo admite. El significado de &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; con m&amp;aacute;s de tres argumentos para los modos sin tuber&amp;iacute;a a&amp;uacute;n no est&amp;aacute; definido, pero las &quot;capas&quot; experimentales pueden dar un significado adicional a los argumentos LIST.</target>
        </trans-unit>
        <trans-unit id="d0c6eb4ba4d293106779dbeb28a115c48d149f15" translate="yes" xml:space="preserve">
          <source>In the function descriptions below the term</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9756e636c498fe9304eb168ab8f26e641d5c72" translate="yes" xml:space="preserve">
          <source>In the future, this module will likely use File::Spec for determining paths, as it does now for Mac OS (where Unix-style or Mac-style paths work, and Unix-style paths are converted properly to Mac-style paths before being added to @INC).</source>
          <target state="translated">En el futuro,es probable que este módulo utilice File::Spec para determinar las rutas,como lo hace ahora para Mac OS (donde las rutas de estilo Unix o de estilo Mac funcionan,y las rutas de estilo Unix se convierten correctamente en rutas de estilo Mac antes de ser añadidas a @INC).</target>
        </trans-unit>
        <trans-unit id="46cedf56be184729e0d91d65fc9c0d53cad92704" translate="yes" xml:space="preserve">
          <source>In the last example, the end of the string is considered a word boundary.</source>
          <target state="translated">En el último ejemplo,el final de la cadena se considera un límite de palabra.</target>
        </trans-unit>
        <trans-unit id="6405a42cdbbb08be1356ae610a2c353a3021f6e3" translate="yes" xml:space="preserve">
          <source>In the last example, the whole string was matched, but only the part inside the single quotes was grouped. With the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; operator, the matched variables &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. are immediately available for use in the replacement expression, so we use &lt;code&gt;$1&lt;/code&gt; to replace the quoted string with just what was quoted. With the global modifier, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///g&lt;/a&gt;&lt;/code&gt; will search and replace all occurrences of the regexp in the string:</source>
          <target state="translated">En el &amp;uacute;ltimo ejemplo, se hizo coincidir toda la cadena, pero solo se agrup&amp;oacute; la parte dentro de las comillas simples. Con el operador &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , las variables coincidentes &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. est&amp;aacute;n inmediatamente disponibles para su uso en la expresi&amp;oacute;n de reemplazo, por lo que usamos &lt;code&gt;$1&lt;/code&gt; para reemplazar la cadena entre comillas con solo lo que se cit&amp;oacute;. Con el modificador global, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///g&lt;/a&gt;&lt;/code&gt; buscar&amp;aacute; y reemplazar&amp;aacute; todas las apariciones de la expresi&amp;oacute;n regular en la cadena:</target>
        </trans-unit>
        <trans-unit id="083adc541bcebeae1c40187264f802274bed10c9" translate="yes" xml:space="preserve">
          <source>In the last example, the whole string was matched, but only the part inside the single quotes was grouped. With the &lt;code&gt;s///&lt;/code&gt; operator, the matched variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c06ffd743a05cb45342ceadd66f34d1f6c47cc" translate="yes" xml:space="preserve">
          <source>In the last regex, the forward slash &lt;code&gt;'/'&lt;/code&gt; is also backslashed, because it is used to delimit the regex.</source>
          <target state="translated">En la &amp;uacute;ltima expresi&amp;oacute;n regular, la barra inclinada &lt;code&gt;'/'&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; invertida, porque se usa para delimitar la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="11c4a29ccb7ab2ebd1eeaf108124208b060d0f4a" translate="yes" xml:space="preserve">
          <source>In the last regexp, the forward slash &lt;code&gt;'/'&lt;/code&gt; is also backslashed, because it is used to delimit the regexp. This can lead to LTS (leaning toothpick syndrome), however, and it is often more readable to change delimiters.</source>
          <target state="translated">En la &amp;uacute;ltima expresi&amp;oacute;n regular, la barra inclinada &lt;code&gt;'/'&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; invertida, porque se usa para delimitar la expresi&amp;oacute;n regular. Sin embargo, esto puede provocar LTS (s&amp;iacute;ndrome del palillo inclinado) y, a menudo, es m&amp;aacute;s legible cambiar los delimitadores.</target>
        </trans-unit>
        <trans-unit id="3c351aa56c66843f422f8613ab5ba80764ad66e0" translate="yes" xml:space="preserve">
          <source>In the last statement, even though &lt;code&gt;'c'&lt;/code&gt; is the first character in the class, &lt;code&gt;'a'&lt;/code&gt; matches because the first character position in the string is the earliest point at which the regexp can match.</source>
          <target state="translated">En la &amp;uacute;ltima declaraci&amp;oacute;n, aunque &lt;code&gt;'c'&lt;/code&gt; es el primer car&amp;aacute;cter de la clase, &lt;code&gt;'a'&lt;/code&gt; coincide porque la posici&amp;oacute;n del primer car&amp;aacute;cter en la cadena es el punto m&amp;aacute;s temprano en el que la expresi&amp;oacute;n regular puede coincidir.</target>
        </trans-unit>
        <trans-unit id="eb7827ba059fba337cd380ecde1e864bd7488e84" translate="yes" xml:space="preserve">
          <source>In the last statement, even though &lt;code&gt;'c'&lt;/code&gt; is the first character in the class, the earliest point at which the regex can match is &lt;code&gt;'a'&lt;/code&gt; .</source>
          <target state="translated">En la &amp;uacute;ltima declaraci&amp;oacute;n, aunque &lt;code&gt;'c'&lt;/code&gt; es el primer car&amp;aacute;cter de la clase, el punto m&amp;aacute;s temprano en el que la expresi&amp;oacute;n regular puede coincidir es &lt;code&gt;'a'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb0e131732b0d0f21b5019af566fe7f7ba1531a8" translate="yes" xml:space="preserve">
          <source>In the last statement, even though &lt;code&gt;'c'&lt;/code&gt; is the first character in the class, the earliest point at which the regex can match is &lt;code&gt;'a'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9813d8232f26905286fe72c0fb88aaeece44db" translate="yes" xml:space="preserve">
          <source>In the latter case, characters that map to 0212 are first converted to U+3013 (0xA2AE in EUC-JP; a white square also known as 'Tofu' or 'geta mark') then fed to the decoding engine. U+FFFD is not used, in order to preserve text layout as much as possible.</source>
          <target state="translated">En este último caso,los caracteres que se asignan al 0212 se convierten primero en U+3013 (0xA2AE en EUC-JP;un cuadrado blanco también conocido como 'Tofu' o 'marca geta')y luego se alimentan al motor de decodificación.El U+FFFD no se utiliza,para preservar la disposición del texto tanto como sea posible.</target>
        </trans-unit>
        <trans-unit id="a8f8d594e47a7aed4b47d21c04c8b5fc5ac50b38" translate="yes" xml:space="preserve">
          <source>In the latter, foo.h is taken as</source>
          <target state="translated">En este último,foo.h se toma como</target>
        </trans-unit>
        <trans-unit id="9b81dfce26cb69eddfbb13b42d7a921ee8ba05af" translate="yes" xml:space="preserve">
          <source>In the list of parameters for an XSUB, one can precede parameter names by the &lt;code&gt;IN&lt;/code&gt; /&lt;code&gt;OUTLIST&lt;/code&gt; /&lt;code&gt;IN_OUTLIST&lt;/code&gt; /&lt;code&gt;OUT&lt;/code&gt; /&lt;code&gt;IN_OUT&lt;/code&gt; keywords. &lt;code&gt;IN&lt;/code&gt; keyword is the default, the other keywords indicate how the Perl interface should differ from the C interface.</source>
          <target state="translated">En la lista de par&amp;aacute;metros para un XSUB, se pueden preceder los nombres de los par&amp;aacute;metros con las palabras clave &lt;code&gt;IN&lt;/code&gt; / &lt;code&gt;OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; . &lt;code&gt;IN&lt;/code&gt; palabra clave IN es la predeterminada, las otras palabras clave indican en qu&amp;eacute; debe diferir la interfaz Perl de la interfaz C.</target>
        </trans-unit>
        <trans-unit id="eaa86694f038fb390a6437b7cfb383ab6f33e503" translate="yes" xml:space="preserve">
          <source>In the list of parameters for an XSUB, one can precede parameter names by the &lt;code&gt;IN&lt;/code&gt;/&lt;code&gt;OUTLIST&lt;/code&gt;/&lt;code&gt;IN_OUTLIST&lt;/code&gt;/&lt;code&gt;OUT&lt;/code&gt;/&lt;code&gt;IN_OUT&lt;/code&gt; keywords. &lt;code&gt;IN&lt;/code&gt; keyword is the default, the other keywords indicate how the Perl interface should differ from the C interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c32d4238ee6ff96fa8bb06b99ee3f8b0689422e" translate="yes" xml:space="preserve">
          <source>In the method descriptions below</source>
          <target state="translated">En las descripciones de los métodos que figuran a continuación</target>
        </trans-unit>
        <trans-unit id="1b237b2ec2e195bf52f7f15f0ad99e5a2c78e4b1" translate="yes" xml:space="preserve">
          <source>In the more general case, you can use the &lt;code&gt;/g&lt;/code&gt; modifier in a &lt;code&gt;while&lt;/code&gt; loop, keeping count of matches.</source>
          <target state="translated">En el caso m&amp;aacute;s general, se puede utilizar el &lt;code&gt;/g&lt;/code&gt; modificador en un &lt;code&gt;while&lt;/code&gt; bucle, llevar la cuenta de los partidos.</target>
        </trans-unit>
        <trans-unit id="4effaa0b6c8c5116ec13300ff6598d1e650296b0" translate="yes" xml:space="preserve">
          <source>In the most common case, the simple case of a L&amp;lt;podpage&amp;gt; code produces this event structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784f063825aaf77ec4d5f9b15d7c0e7efc2377c9" translate="yes" xml:space="preserve">
          <source>In the mylib directory, create a file mylib.h that looks like this:</source>
          <target state="translated">En el directorio mylib,crea un archivo mylib.h que se vea así:</target>
        </trans-unit>
        <trans-unit id="8fae5d3b394459ca514c1ba039cdb1ef56a38f82" translate="yes" xml:space="preserve">
          <source>In the next example, the expression is evaluated only once, and the tied scalar is fetched once as part of the operation within the expression. The result of that operation is fetched for each comparison, which normally doesn't matter unless that expression result is also magical due to operator overloading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fbf0c13d713302225cff8f61abd9dd7ac74b43" translate="yes" xml:space="preserve">
          <source>In the next paragraph follows a short description of terms used here (because these may differ from terms used by others people or documentation).</source>
          <target state="translated">En el párrafo siguiente sigue una breve descripción de los términos utilizados aquí (porque pueden diferir de los términos utilizados por otras personas o por la documentación).</target>
        </trans-unit>
        <trans-unit id="5152e34177e8a3d4c184b97093704f88de6ca9db" translate="yes" xml:space="preserve">
          <source>In the notation discussed so far, the characters &quot;[&quot; and &quot;]&quot; are given special meaning, for opening and closing bracket groups, and &quot;,&quot; has a special meaning inside bracket groups, where it separates items in the group. This begs the question of how you'd express a literal &quot;[&quot; or &quot;]&quot; in a Bracket Notation string, and how you'd express a literal comma inside a bracket group. For this purpose I've adopted &quot;~&quot; (tilde) as an escape character: &quot;~[&quot; means a literal '[' character anywhere in Bracket Notation (i.e., regardless of whether you're in a bracket group or not), and ditto for &quot;~]&quot; meaning a literal ']', and &quot;~,&quot; meaning a literal comma. (Altho &quot;,&quot; means a literal comma outside of bracket groups -- it's only inside bracket groups that commas are special.)</source>
          <target state="translated">En la notación discutida hasta ahora,los caracteres &quot;[&quot; y &quot;]&quot; tienen un significado especial,para abrir y cerrar los grupos de corchetes,y &quot;,&quot; tiene un significado especial dentro de los grupos de corchetes,donde separa los elementos del grupo.Esto plantea la cuestión de cómo se expresaría una &quot;[&quot; o &quot;]&quot; literal en una cadena de notación entre corchetes,y cómo se expresaría una coma literal dentro de un grupo de corchetes.Para este propósito he adoptado &quot;~&quot; (tilde)como un personaje de escape:&quot;~[&quot; significa un carácter literal '[' en cualquier parte de la notación de corchetes (es decir,independientemente de si estás en un grupo de corchetes o no),e igual para &quot;~]&quot; que significa un literal ']',y &quot;~&quot; que significa una coma literal.(Altho &quot;,&quot; significa una coma literal fuera de los grupos de paréntesis --es sólo dentro de los grupos de paréntesis que las comas son especiales.)</target>
        </trans-unit>
        <trans-unit id="9c42fcbdbf3cd24cfb1dac2e8ba1cbc829f18933" translate="yes" xml:space="preserve">
          <source>In the olden, less enlightened times, we all used to use ASCII. Most of us did, anyway. The big problem with ASCII is that it's American. Well, no, that's not actually the problem; the problem is that it's not particularly useful for people who don't use the Roman alphabet. What used to happen was that particular languages would stick their own alphabet in the upper range of the sequence, between 128 and 255. Of course, we then ended up with plenty of variants that weren't quite ASCII, and the whole point of it being a standard was lost.</source>
          <target state="translated">En los viejos tiempos,menos iluminados,todos solíamos usar ASCII.La mayoría de nosotros lo hacía,de todos modos.El gran problema con el ASCII es que es americano.Bueno,no,ese no es realmente el problema;el problema es que no es particularmente útil para la gente que no usa el alfabeto romano.Lo que solía suceder era que determinados idiomas pegaban su propio alfabeto en el rango superior de la secuencia,entre 128 y 255.Por supuesto,terminamos con muchas variantes que no eran del todo ASCII,y se perdió todo el sentido de que fuera un estándar.</target>
        </trans-unit>
        <trans-unit id="50b947f69a6b2d22a725a2d7ba0813fc1f66f21b" translate="yes" xml:space="preserve">
          <source>In the one case the code, which does exactly the same thing as far as outputting any debugging information is concerned, in other words nothing, takes 14 seconds, and in the other case the code takes one hundredth of a second. Looks fairly definitive. Use a &lt;code&gt;$DEBUG&lt;/code&gt; variable BEFORE you call the subroutine, rather than relying on the smart functionality inside it.</source>
          <target state="translated">En un caso, el c&amp;oacute;digo, que hace exactamente lo mismo en cuanto a la salida de cualquier informaci&amp;oacute;n de depuraci&amp;oacute;n, en otras palabras, nada, toma 14 segundos, y en el otro caso el c&amp;oacute;digo toma una cent&amp;eacute;sima de segundo. Parece bastante definitivo. Utilice una variable &lt;code&gt;$DEBUG&lt;/code&gt; ANTES de llamar a la subrutina, en lugar de confiar en la funcionalidad inteligente que contiene.</target>
        </trans-unit>
        <trans-unit id="9cd2461949e5dab65a2af380d7f878aad8f12946" translate="yes" xml:space="preserve">
          <source>In the one- and two-argument forms of the call, the mode and filename should be concatenated (in that order), preferably separated by white space. You can--but shouldn't--omit the mode in these forms when that mode is &lt;code&gt;&amp;lt;&lt;/code&gt; . It is always safe to use the two-argument form of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; if the filename argument is a known literal.</source>
          <target state="translated">En las formas de uno y dos argumentos de la llamada, el modo y el nombre del archivo deben concatenarse (en ese orden), preferiblemente separados por espacios en blanco. Puede, pero no debe, omitir el modo en estos formularios cuando ese modo es &lt;code&gt;&amp;lt;&lt;/code&gt; . Siempre es seguro utilizar la forma de dos argumentos de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; si el argumento del nombre de archivo es un literal conocido.</target>
        </trans-unit>
        <trans-unit id="6c1895cc93a277f17a7d9aa8c8fca89d99b0c8a2" translate="yes" xml:space="preserve">
          <source>In the one- and two-argument forms of the call, the mode and filename should be concatenated (in that order), preferably separated by white space. You can--but shouldn't--omit the mode in these forms when that mode is &lt;code&gt;&amp;lt;&lt;/code&gt; . It is always safe to use the two-argument form of &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; if the filename argument is a known literal.</source>
          <target state="translated">En las formas de uno y dos argumentos de la llamada, el modo y el nombre del archivo deben concatenarse (en ese orden), preferiblemente separados por espacios en blanco. Puede, pero no debe, omitir el modo en estos formularios cuando ese modo es &lt;code&gt;&amp;lt;&lt;/code&gt; . Siempre es seguro utilizar la forma de dos argumentos de &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; si el argumento del nombre de archivo es un literal conocido.</target>
        </trans-unit>
        <trans-unit id="ece5db37f09d793410ad6532c80d07a8dc5b931d" translate="yes" xml:space="preserve">
          <source>In the one- and two-argument forms of the call, the mode and filename should be concatenated (in that order), preferably separated by white space. You can--but shouldn't--omit the mode in these forms when that mode is &lt;code&gt;&amp;lt;&lt;/code&gt;. It is safe to use the two-argument form of &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; if the filename argument is a known literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baa512a702be95a00f5cdfa9d3fa8d7a2a0b696" translate="yes" xml:space="preserve">
          <source>In the opposite way, to resolve a hostname to the IP address you can write this:</source>
          <target state="translated">De la manera opuesta,para resolver un nombre de host a la dirección IP puedes escribir esto:</target>
        </trans-unit>
        <trans-unit id="ecb2e91137fed6da0013b83630021f3d72198be0" translate="yes" xml:space="preserve">
          <source>In the option specification, the option name is followed by an equals sign &lt;code&gt;=&lt;/code&gt; and the letter &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. The equals sign indicates that this option requires a value. The letter &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; indicates that this value is an arbitrary string. Other possible value types are &lt;code&gt;i&lt;/code&gt; for integer values, and &lt;code&gt;f&lt;/code&gt; for floating point values. Using a colon &lt;code&gt;:&lt;/code&gt; instead of the equals sign indicates that the option value is optional. In this case, if no suitable value is supplied, string valued options get an empty string &lt;code&gt;''&lt;/code&gt; assigned, while numeric options are set to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">En la especificaci&amp;oacute;n de la opci&amp;oacute;n, el nombre de la opci&amp;oacute;n va seguido de un signo igual &lt;code&gt;=&lt;/code&gt; y la letra &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; . El signo igual indica que esta opci&amp;oacute;n requiere un valor. La letra &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; indica que este valor es una cadena arbitraria. Otros tipos de valores posibles son &lt;code&gt;i&lt;/code&gt; para valores enteros y &lt;code&gt;f&lt;/code&gt; para valores de coma flotante. El uso de dos puntos &lt;code&gt;:&lt;/code&gt; en lugar del signo igual indica que el valor de la opci&amp;oacute;n es opcional. En este caso, si no se proporciona un valor adecuado, las opciones con valor de cadena obtienen una cadena vac&amp;iacute;a &lt;code&gt;''&lt;/code&gt; asignada, mientras que las opciones num&amp;eacute;ricas se establecen en &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2973e9ef2ea1b82ed03c1ee6b61fab3e0195c205" translate="yes" xml:space="preserve">
          <source>In the option specification, the option name is followed by an equals sign &lt;code&gt;=&lt;/code&gt; and the letter &lt;code&gt;s&lt;/code&gt;. The equals sign indicates that this option requires a value. The letter &lt;code&gt;s&lt;/code&gt; indicates that this value is an arbitrary string. Other possible value types are &lt;code&gt;i&lt;/code&gt; for integer values, and &lt;code&gt;f&lt;/code&gt; for floating point values. Using a colon &lt;code&gt;:&lt;/code&gt; instead of the equals sign indicates that the option value is optional. In this case, if no suitable value is supplied, string valued options get an empty string &lt;code&gt;''&lt;/code&gt; assigned, while numeric options are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53db56988ad2d32c572da0df498153024ad7a10e" translate="yes" xml:space="preserve">
          <source>In the past, the Perl community experimented with a technique called &quot;inside-out objects&quot;. An inside-out object stores its data outside of the object's reference, indexed on a unique property of the object, such as its memory address, rather than in the object itself. This has the advantage of enforcing the encapsulation of object attributes, since their data is not stored in the object itself.</source>
          <target state="translated">En el pasado,la comunidad de Perl experimentó con una técnica llamada &quot;objetos de adentro hacia afuera&quot;.Un objeto inside-out almacena sus datos fuera de la referencia del objeto,indexados en una propiedad única del objeto,como su dirección de memoria,en lugar de en el propio objeto.Esto tiene la ventaja de reforzar el encapsulamiento de los atributos del objeto,ya que sus datos no se almacenan en el propio objeto.</target>
        </trans-unit>
        <trans-unit id="b5906a56cbc722b4f6580ce6c1001f48ce79b661" translate="yes" xml:space="preserve">
          <source>In the past, the distribution metadata structure had been packed with distributions as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3a725cb056826efb62b17fb21f5a5c69a3ce79" translate="yes" xml:space="preserve">
          <source>In the past, the leading &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;m?&lt;i&gt;PATTERN&lt;/i&gt;?&lt;/code&gt; was optional, but omitting it would produce a deprecation warning. As of v5.22.0, omitting it produces a syntax error. If you encounter this construct in older code, you can just add &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">En el pasado, la &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; principal en &lt;code&gt;m?&lt;i&gt;PATTERN&lt;/i&gt;?&lt;/code&gt; era opcional, pero omitirlo producir&amp;iacute;a una advertencia de obsolescencia. A partir de la versi&amp;oacute;n 5.22.0, omitirlo produce un error de sintaxis. Si encuentra esta construcci&amp;oacute;n en c&amp;oacute;digo anterior, simplemente puede agregar &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6491315a7266db76aa8c4f0b2210eb7af26bbb35" translate="yes" xml:space="preserve">
          <source>In the past, the leading &lt;code&gt;m&lt;/code&gt; in &lt;code&gt;m?&lt;i&gt;PATTERN&lt;/i&gt;?&lt;/code&gt; was optional, but omitting it would produce a deprecation warning. As of v5.22.0, omitting it produces a syntax error. If you encounter this construct in older code, you can just add &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a63857af592db7e75d88e816c7c7a1180f9eb89" translate="yes" xml:space="preserve">
          <source>In the pathological case that a script is called via a relative path</source>
          <target state="translated">En el caso patológico de que un guión se llame a través de un camino relativo</target>
        </trans-unit>
        <trans-unit id="b5cb98f00aa6aaa22eb71c271690cbb1ebc9df81" translate="yes" xml:space="preserve">
          <source>In the pattern /\Bam\B/, there must be a word character before the &quot;a&quot; and after the &quot;m&quot;. These patterns match /\Bam\B/:</source>
          <target state="translated">En el patrón /\Bam\B/,debe haber un personaje de la palabra antes de la &quot;a&quot; y después de la &quot;m&quot;.Estos patrones coinciden con /\Bam\B/:</target>
        </trans-unit>
        <trans-unit id="d454ee791b9ae0c5bbb81657f656033f3c0c5a24" translate="yes" xml:space="preserve">
          <source>In the peculiar &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; form, VERSION may be either a positive decimal fraction such as 5.006, which will be compared to &lt;code&gt;$]&lt;/code&gt; , or a v-string of the form v5.6.1, which will be compared to &lt;code&gt;$^V&lt;/code&gt; (aka $PERL_VERSION). An exception is raised if VERSION is greater than the version of the current Perl interpreter; Perl will not attempt to parse the rest of the file. Compare with &lt;a href=&quot;#require&quot;&gt;require&lt;/a&gt;, which can do a similar check at run time. Symmetrically, &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; allows you to specify that you want a version of Perl older than the specified one.</source>
          <target state="translated">En la forma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; peculiar , VERSION puede ser una fracci&amp;oacute;n decimal positiva como 5.006, que se comparar&amp;aacute; con &lt;code&gt;$]&lt;/code&gt; , o una cadena v de la forma v5.6.1, que se comparar&amp;aacute; con &lt;code&gt;$^V&lt;/code&gt; (tambi&amp;eacute;n conocida como $ PERL_VERSION). Se genera una excepci&amp;oacute;n si VERSION es mayor que la versi&amp;oacute;n del int&amp;eacute;rprete de Perl actual; Perl no intentar&amp;aacute; analizar el resto del archivo. Compare con &lt;a href=&quot;#require&quot;&gt;require&lt;/a&gt; , que puede hacer una verificaci&amp;oacute;n similar en tiempo de ejecuci&amp;oacute;n. Sim&amp;eacute;tricamente, &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; permite especificar que desea una versi&amp;oacute;n de Perl m&amp;aacute;s antigua que la especificada.</target>
        </trans-unit>
        <trans-unit id="74d3b7e92857ff92a78ee1a11cb1e6022b249cb3" translate="yes" xml:space="preserve">
          <source>In the peculiar &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; form, VERSION may be either a positive decimal fraction such as 5.006, which will be compared to &lt;code&gt;$]&lt;/code&gt; , or a v-string of the form v5.6.1, which will be compared to &lt;code&gt;$^V&lt;/code&gt; (aka $PERL_VERSION). An exception is raised if VERSION is greater than the version of the current Perl interpreter; Perl will not attempt to parse the rest of the file. Compare with &lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;, which can do a similar check at run time. Symmetrically, &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; allows you to specify that you want a version of Perl older than the specified one.</source>
          <target state="translated">En la forma &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;uso&lt;/a&gt; peculiar , VERSION puede ser una fracci&amp;oacute;n decimal positiva como 5.006, que se comparar&amp;aacute; con &lt;code&gt;$]&lt;/code&gt; , o una cadena v de la forma v5.6.1, que se comparar&amp;aacute; con &lt;code&gt;$^V&lt;/code&gt; (tambi&amp;eacute;n conocida como $ PERL_VERSION). Se genera una excepci&amp;oacute;n si VERSION es mayor que la versi&amp;oacute;n del int&amp;eacute;rprete de Perl actual; Perl no intentar&amp;aacute; analizar el resto del archivo. Compare con &lt;a href=&quot;require&quot;&gt;require&lt;/a&gt; , que puede hacer una verificaci&amp;oacute;n similar en tiempo de ejecuci&amp;oacute;n. Sim&amp;eacute;tricamente, &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; permite especificar que desea una versi&amp;oacute;n de Perl m&amp;aacute;s antigua que la especificada.</target>
        </trans-unit>
        <trans-unit id="a5da666074fc2ec75362b3b68f86858be734f6e9" translate="yes" xml:space="preserve">
          <source>In the presence of multiple classes it can be non-trivial to make sure that every relevant destructor is called for every object. Perl calls the first one it finds on the inheritance tree (if any) and that's it.</source>
          <target state="translated">En presencia de múltiples clases puede ser no trivial asegurarse de que cada destructor relevante sea llamado para cada objeto.Perl llama al primero que encuentra en el árbol genealógico (si lo hay)y eso es todo.</target>
        </trans-unit>
        <trans-unit id="cd34d34a3c68755abc29d11ed297638bd9fdb29d" translate="yes" xml:space="preserve">
          <source>In the presence of the &lt;code&gt;REXEC_COPY_STR&lt;/code&gt; flag, but with the addition of the &lt;code&gt;REXEC_COPY_SKIP_PRE&lt;/code&gt; or &lt;code&gt;REXEC_COPY_SKIP_POST&lt;/code&gt; flags, an engine can choose not to copy the full buffer (although it must still do so in the presence of &lt;code&gt;RXf_PMf_KEEPCOPY&lt;/code&gt; or the relevant bits being set in &lt;code&gt;PL_sawampersand&lt;/code&gt; ). In this case, it may set &lt;code&gt;suboffset&lt;/code&gt; to indicate the number of bytes from the logical start of the buffer to the physical start (i.e. &lt;code&gt;subbeg&lt;/code&gt; ). It should also set &lt;code&gt;subcoffset&lt;/code&gt; , the number of characters in the offset. The latter is needed to support &lt;code&gt;@-&lt;/code&gt; and &lt;code&gt;@+&lt;/code&gt; which work in characters, not bytes.</source>
          <target state="translated">En presencia del indicador &lt;code&gt;REXEC_COPY_STR&lt;/code&gt; , pero con la adici&amp;oacute;n de los &lt;code&gt;REXEC_COPY_SKIP_PRE&lt;/code&gt; o &lt;code&gt;REXEC_COPY_SKIP_POST&lt;/code&gt; , un motor puede optar por no copiar el b&amp;uacute;fer completo (aunque a&amp;uacute;n debe hacerlo en presencia de &lt;code&gt;RXf_PMf_KEEPCOPY&lt;/code&gt; o los bits relevantes configurados en &lt;code&gt;PL_sawampersand&lt;/code&gt; ) . En este caso, puede establecer &lt;code&gt;suboffset&lt;/code&gt; para indicar el n&amp;uacute;mero de bytes desde el inicio l&amp;oacute;gico del b&amp;uacute;fer hasta el inicio f&amp;iacute;sico (es decir, &lt;code&gt;subbeg&lt;/code&gt; ). Tambi&amp;eacute;n debe establecer &lt;code&gt;subcoffset&lt;/code&gt; , el n&amp;uacute;mero de caracteres en el desplazamiento. Este &amp;uacute;ltimo es necesario para admitir &lt;code&gt;@-&lt;/code&gt; y &lt;code&gt;@+&lt;/code&gt; que funcionan en caracteres, no en bytes.</target>
        </trans-unit>
        <trans-unit id="e824f56cbef986827e73fc6c293b5f1b6c0ceaea" translate="yes" xml:space="preserve">
          <source>In the presence of the &lt;code&gt;REXEC_COPY_STR&lt;/code&gt; flag, but with the addition of the &lt;code&gt;REXEC_COPY_SKIP_PRE&lt;/code&gt; or &lt;code&gt;REXEC_COPY_SKIP_POST&lt;/code&gt; flags, an engine can choose not to copy the full buffer (although it must still do so in the presence of &lt;code&gt;RXf_PMf_KEEPCOPY&lt;/code&gt; or the relevant bits being set in &lt;code&gt;PL_sawampersand&lt;/code&gt;). In this case, it may set &lt;code&gt;suboffset&lt;/code&gt; to indicate the number of bytes from the logical start of the buffer to the physical start (i.e. &lt;code&gt;subbeg&lt;/code&gt;). It should also set &lt;code&gt;subcoffset&lt;/code&gt;, the number of characters in the offset. The latter is needed to support &lt;code&gt;@-&lt;/code&gt; and &lt;code&gt;@+&lt;/code&gt; which work in characters, not bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b073c0a34c41b3ba5f06418d694ba351020d4acc" translate="yes" xml:space="preserve">
          <source>In the previous example, you created a function-private variable because only one function remembered its reference. You could define multiple functions while the variable is in scope, and each function can share the &quot;private&quot; variable. It's not really &quot;static&quot; because you can access it outside the function while the lexical variable is in scope, and even create references to it. In this example, &lt;code&gt;increment_count&lt;/code&gt; and &lt;code&gt;return_count&lt;/code&gt; share the variable. One function adds to the value and the other simply returns the value. They can both access &lt;code&gt;$count&lt;/code&gt; , and since it has gone out of scope, there is no other way to access it.</source>
          <target state="translated">En el ejemplo anterior, cre&amp;oacute; una variable privada de funci&amp;oacute;n porque solo una funci&amp;oacute;n recordaba su referencia. Puede definir varias funciones mientras la variable est&amp;aacute; dentro del alcance, y cada funci&amp;oacute;n puede compartir la variable &quot;privada&quot;. No es realmente &quot;est&amp;aacute;tico&quot; porque puede acceder a &amp;eacute;l fuera de la funci&amp;oacute;n mientras la variable l&amp;eacute;xica est&amp;aacute; dentro del alcance, e incluso crear referencias a ella. En este ejemplo, &lt;code&gt;increment_count&lt;/code&gt; y &lt;code&gt;return_count&lt;/code&gt; comparten la variable. Una funci&amp;oacute;n se suma al valor y la otra simplemente devuelve el valor. Ambos pueden acceder a &lt;code&gt;$count&lt;/code&gt; y, dado que se ha salido del alcance, no hay otra forma de acceder a &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="d2b9d6cad21d85345ac4d94d7af37ac664ad662a" translate="yes" xml:space="preserve">
          <source>In the previous example, you created a function-private variable because only one function remembered its reference. You could define multiple functions while the variable is in scope, and each function can share the &quot;private&quot; variable. It's not really &quot;static&quot; because you can access it outside the function while the lexical variable is in scope, and even create references to it. In this example, &lt;code&gt;increment_count&lt;/code&gt; and &lt;code&gt;return_count&lt;/code&gt; share the variable. One function adds to the value and the other simply returns the value. They can both access &lt;code&gt;$count&lt;/code&gt;, and since it has gone out of scope, there is no other way to access it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d099eddc17fd02123a62f3b5a7b0e3fc3ac46d20" translate="yes" xml:space="preserve">
          <source>In the previous examples, the &lt;code&gt;{}&lt;/code&gt; code creates a reference to an empty anonymous hash. The &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; function then takes that reference and associates the hash with the class in &lt;code&gt;$class&lt;/code&gt; . In the simplest case, the &lt;code&gt;$class&lt;/code&gt; variable will end up containing the string &quot;File&quot;.</source>
          <target state="translated">En los ejemplos anteriores, el c&amp;oacute;digo &lt;code&gt;{}&lt;/code&gt; crea una referencia a un hash an&amp;oacute;nimo vac&amp;iacute;o. La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; luego toma esa referencia y asocia el hash con la clase en &lt;code&gt;$class&lt;/code&gt; . En el caso m&amp;aacute;s simple, la variable &lt;code&gt;$class&lt;/code&gt; terminar&amp;aacute; conteniendo la cadena &quot;Archivo&quot;.</target>
        </trans-unit>
        <trans-unit id="a5350392ddebfffc20c7f17feabf4ccae1793367" translate="yes" xml:space="preserve">
          <source>In the previous examples, the &lt;code&gt;{}&lt;/code&gt; code creates a reference to an empty anonymous hash. The &lt;code&gt;bless&lt;/code&gt; function then takes that reference and associates the hash with the class in &lt;code&gt;$class&lt;/code&gt;. In the simplest case, the &lt;code&gt;$class&lt;/code&gt; variable will end up containing the string &quot;File&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1001ba58ff0530a993f349b4836f78782ab43f8" translate="yes" xml:space="preserve">
          <source>In the previous section we've seen a network message that was constructed by prefixing the binary message length to the actual message. You'll find that packing a length followed by so many bytes of data is a frequently used recipe since appending a null byte won't work if a null byte may be part of the data. Here is an example where both techniques are used: after two null terminated strings with source and destination address, a Short Message (to a mobile phone) is sent after a length byte:</source>
          <target state="translated">En la sección anterior hemos visto un mensaje de red que se construyó prefijando la longitud del mensaje binario al mensaje real.Encontrará que empaquetar una longitud seguida de tantos bytes de datos es una receta frecuentemente utilizada ya que añadir un byte nulo no funcionará si un byte nulo puede ser parte de los datos.He aquí un ejemplo en el que se utilizan ambas técnicas:después de dos cadenas terminadas nulas con dirección de origen y destino,se envía un mensaje corto (a un teléfono móvil)después de un byte de longitud:</target>
        </trans-unit>
        <trans-unit id="4d306b4b58fb980badf24b06473c4af8a30ac12e" translate="yes" xml:space="preserve">
          <source>In the previous sections we've learned how to use &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt; to pack and unpack integers with big- or little-endian byte-order. While this is nice, it's still rather limited because it leaves out all kinds of signed integers as well as 64-bit integers. For example, if you wanted to unpack a sequence of signed big-endian 16-bit integers in a platform-independent way, you would have to write:</source>
          <target state="translated">En las secciones anteriores, hemos aprendido c&amp;oacute;mo usar &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; y &lt;code&gt;V&lt;/code&gt; para empaquetar y descomprimir enteros con orden de bytes big o little-endian. Si bien esto es bueno, todav&amp;iacute;a es bastante limitado porque omite todo tipo de enteros con signo y enteros de 64 bits. Por ejemplo, si quisiera descomprimir una secuencia de enteros big-endian firmados de 16 bits de forma independiente de la plataforma, tendr&amp;iacute;a que escribir:</target>
        </trans-unit>
        <trans-unit id="7c615499a4424a37edb78ee5b923ce59bdd024d2" translate="yes" xml:space="preserve">
          <source>In the previous sections we've learned how to use &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt; to pack and unpack integers with big- or little-endian byte-order. While this is nice, it's still rather limited because it leaves out all kinds of signed integers as well as 64-bit integers. For example, if you wanted to unpack a sequence of signed big-endian 16-bit integers in a platform-independent way, you would have to write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb18f0a7b082417093abe50cb091ae0ce9d7c1a" translate="yes" xml:space="preserve">
          <source>In the rare case in which you need to discover at run time whether a particular constant has been declared via this module, you may use this function to examine the hash &lt;code&gt;%constant::declared&lt;/code&gt; . If the given constant name does not include a package name, the current package is used.</source>
          <target state="translated">En el caso poco com&amp;uacute;n en el que necesite descubrir en tiempo de ejecuci&amp;oacute;n si una constante en particular ha sido declarada a trav&amp;eacute;s de este m&amp;oacute;dulo, puede usar esta funci&amp;oacute;n para examinar el &lt;code&gt;%constant::declared&lt;/code&gt; hash constante :: declarado . Si el nombre de la constante proporcionado no incluye un nombre de paquete, se utiliza el paquete actual.</target>
        </trans-unit>
        <trans-unit id="9a85e53a816aad498e6024b9d058168f37940833" translate="yes" xml:space="preserve">
          <source>In the rare case in which you need to discover at run time whether a particular constant has been declared via this module, you may use this function to examine the hash &lt;code&gt;%constant::declared&lt;/code&gt;. If the given constant name does not include a package name, the current package is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fa00fdc801acdaeaeaafa7c77b5e93974f8b30" translate="yes" xml:space="preserve">
          <source>In the rare case where the Pod document has code like L&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8dca1a84eab639eb1c11dec6ee3458c3d80e63" translate="yes" xml:space="preserve">
          <source>In the rare cases where a man page link has a section specified, that text appears in a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3168d71bbd1d6362a03e87b3b6357cbc463ee97" translate="yes" xml:space="preserve">
          <source>In the scalar context, returns the modified collator (but it is &lt;b&gt;not&lt;/b&gt; a clone from the original).</source>
          <target state="translated">En el contexto escalar, devuelve la alzadora modificada (pero es &lt;b&gt;no&lt;/b&gt; un clon de la original).</target>
        </trans-unit>
        <trans-unit id="4e123d33b9c36acd15c038a592d06bccf26e5a4c" translate="yes" xml:space="preserve">
          <source>In the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; , Perl obeys the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale setting. This controls the application's notion of which characters are alphabetic, numeric, punctuation,</source>
          <target state="translated">En el &amp;aacute;mbito de un formulario de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; que incluye &lt;code&gt;LC_CTYPE&lt;/code&gt; , Perl obedece a la configuraci&amp;oacute;n regional &lt;code&gt;LC_CTYPE&lt;/code&gt; . Esto controla la noci&amp;oacute;n de la aplicaci&amp;oacute;n de qu&amp;eacute; caracteres son alfab&amp;eacute;ticos, num&amp;eacute;ricos, puntuaci&amp;oacute;n,</target>
        </trans-unit>
        <trans-unit id="ea3c9a616e33a3cad4631e8af654cde72ce4e1bd" translate="yes" xml:space="preserve">
          <source>In the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes collation, Perl looks to the &lt;code&gt;LC_COLLATE&lt;/code&gt; environment variable to determine the application's notions on collation (ordering) of characters. For example, &quot;b&quot; follows &quot;a&quot; in Latin alphabets, but where do &quot;&amp;aacute;&quot; and &quot;&amp;aring;&quot; belong? And while &quot;color&quot; follows &quot;chocolate&quot; in English, what about in traditional Spanish?</source>
          <target state="translated">En el &amp;aacute;mbito de un formulario de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; que incluye la intercalaci&amp;oacute;n, Perl busca en la variable de entorno &lt;code&gt;LC_COLLATE&lt;/code&gt; para determinar las nociones de la aplicaci&amp;oacute;n sobre la intercalaci&amp;oacute;n (ordenaci&amp;oacute;n) de caracteres. Por ejemplo, &quot;b&quot; sigue a &quot;a&quot; en los alfabetos latinos, pero &amp;iquest;a d&amp;oacute;nde pertenecen &quot;&amp;aacute;&quot; y &quot;&amp;aring;&quot;? Y mientras que &quot;color&quot; sigue a &quot;chocolate&quot; en ingl&amp;eacute;s, &amp;iquest;qu&amp;eacute; pasa en el espa&amp;ntilde;ol tradicional?</target>
        </trans-unit>
        <trans-unit id="42610118c4c59300a5cb5815d6a9dfee51cae833" translate="yes" xml:space="preserve">
          <source>In the scope of a &lt;code&gt;use locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt;, Perl obeys the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale setting. This controls the application's notion of which characters are alphabetic, numeric, punctuation,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d056d856cee45cf14c89294fd2e1cd2905d97a0" translate="yes" xml:space="preserve">
          <source>In the scope of a &lt;code&gt;use locale&lt;/code&gt; form that includes collation, Perl looks to the &lt;code&gt;LC_COLLATE&lt;/code&gt; environment variable to determine the application's notions on collation (ordering) of characters. For example, &quot;b&quot; follows &quot;a&quot; in Latin alphabets, but where do &quot;&amp;aacute;&quot; and &quot;&amp;aring;&quot; belong? And while &quot;color&quot; follows &quot;chocolate&quot; in English, what about in traditional Spanish?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dc6b4df5881b7609167c49737d8fd061975bdc" translate="yes" xml:space="preserve">
          <source>In the second example, an event driven program, the flow of control will be more like this</source>
          <target state="translated">En el segundo ejemplo,un programa impulsado por eventos,el flujo de control será más como esto</target>
        </trans-unit>
        <trans-unit id="0aec5f41df04fa608d73972b5b60d0e21665dd44" translate="yes" xml:space="preserve">
          <source>In the second example, however, we have stored another reference to the tied object in $x. That means that when untie() gets called there will still be a valid reference to the object in existence, so the destructor is not called at that time, and thus the file is not closed. The reason there is no output is because the file buffers have not been flushed to disk.</source>
          <target state="translated">En el segundo ejemplo,sin embargo,hemos almacenado otra referencia al objeto atado en $x.Esto significa que cuando se llame a untie()seguirá habiendo una referencia válida al objeto existente,por lo que no se llama al destructor en ese momento,y por lo tanto el archivo no se cierra.La razón por la que no hay salida es porque los búferes de los archivos no han sido vaciados en el disco.</target>
        </trans-unit>
        <trans-unit id="69631891c8053c89e0b6bca3447bddf1c255a6c7" translate="yes" xml:space="preserve">
          <source>In the second form, the code within the BLOCK is parsed only once--at the same time the code surrounding the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; itself was parsed--and executed within the context of the current Perl program. This form is typically used to trap exceptions more efficiently than the first (see below), while also providing the benefit of checking the code within BLOCK at compile time.</source>
          <target state="translated">En la segunda forma, el c&amp;oacute;digo dentro del BLOQUE se analiza solo una vez (al mismo tiempo que se analiza el c&amp;oacute;digo que rodea a la &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n ) y se ejecuta dentro del contexto del programa Perl actual. Este formulario se usa generalmente para capturar excepciones de manera m&amp;aacute;s eficiente que el primero (ver m&amp;aacute;s abajo), mientras que tambi&amp;eacute;n brinda la ventaja de verificar el c&amp;oacute;digo dentro de BLOCK en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4a4b1f50ba31b2407de5a923935b79599705457e" translate="yes" xml:space="preserve">
          <source>In the second form, the code within the BLOCK is parsed only once--at the same time the code surrounding the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; itself was parsed--and executed within the context of the current Perl program. This form is typically used to trap exceptions more efficiently than the first (see below), while also providing the benefit of checking the code within BLOCK at compile time.</source>
          <target state="translated">En la segunda forma, el c&amp;oacute;digo dentro del BLOQUE se analiza solo una vez (al mismo tiempo que se analiza el c&amp;oacute;digo que rodea a la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n ) y se ejecuta dentro del contexto del programa Perl actual. Este formulario se usa generalmente para capturar excepciones de manera m&amp;aacute;s eficiente que el primero (ver m&amp;aacute;s abajo), mientras que tambi&amp;eacute;n brinda la ventaja de verificar el c&amp;oacute;digo dentro de BLOCK en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1201aa9883bceff61ceee62acff043056d093395" translate="yes" xml:space="preserve">
          <source>In the second match, &lt;code&gt;$`&lt;/code&gt; equals &lt;code&gt;''&lt;/code&gt; because the regexp matched at the first character position in the string and stopped; it never saw the second &quot;the&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9a2ff0446afe648b7cb9385c3e87c463ddf6fa" translate="yes" xml:space="preserve">
          <source>In the second match, &lt;code&gt;$`&lt;/code&gt; equals &lt;code&gt;''&lt;/code&gt; because the regexp matched at the first character position in the string and stopped; it never saw the second 'the'.</source>
          <target state="translated">En la segunda coincidencia, &lt;code&gt;$`&lt;/code&gt; es igual a &lt;code&gt;''&lt;/code&gt; porque la expresi&amp;oacute;n regular coincidi&amp;oacute; con la posici&amp;oacute;n del primer car&amp;aacute;cter en la cadena y se detuvo; nunca vio el segundo 'el'.</target>
        </trans-unit>
        <trans-unit id="37e9c3cdd59dd9ca84f70e11b37a63713067a365" translate="yes" xml:space="preserve">
          <source>In the second step, the free inheritability of the implementation (or lack thereof) is demonstrated. For this purpose it constructs a class called &lt;code&gt;NamedFile&lt;/code&gt; which is a common subclass of &lt;code&gt;Name&lt;/code&gt; and the standard class &lt;code&gt;IO::File&lt;/code&gt; . This puts inheritability to the test because objects of &lt;code&gt;IO::File&lt;/code&gt;</source>
          <target state="translated">En el segundo paso, se demuestra la libre heredabilidad de la implementaci&amp;oacute;n (o la falta de ella). Para este prop&amp;oacute;sito, construye una clase llamada &lt;code&gt;NamedFile&lt;/code&gt; que es una subclase com&amp;uacute;n de &lt;code&gt;Name&lt;/code&gt; y la clase est&amp;aacute;ndar &lt;code&gt;IO::File&lt;/code&gt; . Esto pone a prueba la heredabilidad porque los objetos de &lt;code&gt;IO::File&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0af589bc3ee5e35834b2ae0ea25f9b4768b209d4" translate="yes" xml:space="preserve">
          <source>In the second step, the free inheritability of the implementation (or lack thereof) is demonstrated. For this purpose it constructs a class called &lt;code&gt;NamedFile&lt;/code&gt; which is a common subclass of &lt;code&gt;Name&lt;/code&gt; and the standard class &lt;code&gt;IO::File&lt;/code&gt;. This puts inheritability to the test because objects of &lt;code&gt;IO::File&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979450caa584768989298a5e328245eeac253de3" translate="yes" xml:space="preserve">
          <source>In the strictest sense, it can't be done--the script executes as a different process from the shell it was started from. Changes to a process are not reflected in its parent--only in any children created after the change. There is shell magic that may allow you to fake it by &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;ing the script's output in your shell; check out the comp.unix.questions FAQ for details.</source>
          <target state="translated">En el sentido m&amp;aacute;s estricto, no se puede hacer: el script se ejecuta como un proceso diferente del shell desde el que se inici&amp;oacute;. Los cambios en un proceso no se reflejan en su padre, solo en los hijos creados despu&amp;eacute;s del cambio. Hay magia de shell que puede permitirle falsificarla &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; la salida del script en su shell; consulte las preguntas frecuentes de comp.unix.questions para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="860fc9235e7c86163e85788bda311e6bc6c6ab87" translate="yes" xml:space="preserve">
          <source>In the strictest sense, it can't be done--the script executes as a different process from the shell it was started from. Changes to a process are not reflected in its parent--only in any children created after the change. There is shell magic that may allow you to fake it by &lt;code&gt;eval()&lt;/code&gt;ing the script's output in your shell; check out the comp.unix.questions FAQ for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5c6294b971049c13607515864de8d9b4202e94" translate="yes" xml:space="preserve">
          <source>In the symbian subdirectory there is</source>
          <target state="translated">En el subdirectorio simbólico hay</target>
        </trans-unit>
        <trans-unit id="a6664c3e7887f18c07bf996abcbf98da47057e7d" translate="yes" xml:space="preserve">
          <source>In the syntax descriptions that follow, list operators that expect a list (and provide list context for elements of the list) are shown with LIST as an argument. Such a list may consist of any combination of scalar arguments or list values; the list values will be included in the list as if each individual element were interpolated at that point in the list, forming a longer single-dimensional list value. Commas should separate literal elements of the LIST.</source>
          <target state="translated">En las descripciones sintácticas que siguen,los operadores de listas que esperan una lista (y proporcionan un contexto de lista para los elementos de la lista)se muestran con LIST como argumento.Esa lista puede consistir en cualquier combinación de argumentos escalares o valores de lista;los valores de lista se incluirán en la lista como si cada elemento individual se interpolara en ese punto de la lista,formando un valor de lista unidimensional más largo.Las comas deben separar los elementos literales de la LISTA.</target>
        </trans-unit>
        <trans-unit id="fe67245ac84887f626543e24a3e6a624b4a7332b" translate="yes" xml:space="preserve">
          <source>In the tie() call, &lt;code&gt;VARIABLE&lt;/code&gt; is the name of the variable to be enchanted. &lt;code&gt;CLASSNAME&lt;/code&gt; is the name of a class implementing objects of the correct type. Any additional arguments in the &lt;code&gt;LIST&lt;/code&gt; are passed to the appropriate constructor method for that class--meaning TIESCALAR(), TIEARRAY(), TIEHASH(), or TIEHANDLE(). (Typically these are arguments such as might be passed to the dbminit() function of C.) The object returned by the &quot;new&quot; method is also returned by the tie() function, which would be useful if you wanted to access other methods in &lt;code&gt;CLASSNAME&lt;/code&gt; . (You don't actually have to return a reference to a right &quot;type&quot; (e.g., HASH or &lt;code&gt;CLASSNAME&lt;/code&gt; ) so long as it's a properly blessed object.) You can also retrieve a reference to the underlying object using the tied() function.</source>
          <target state="translated">En la llamada a tie (), &lt;code&gt;VARIABLE&lt;/code&gt; es el nombre de la variable que se va a encantar. &lt;code&gt;CLASSNAME&lt;/code&gt; es el nombre de una clase que implementa objetos del tipo correcto. Cualquier argumento adicional en la &lt;code&gt;LIST&lt;/code&gt; A se pasa al m&amp;eacute;todo constructor apropiado para esa clase, es decir, TIESCALAR (), TIEARRAY (), TIEHASH () o TIEHANDLE (). (Por lo general, estos son argumentos que se pueden pasar a la funci&amp;oacute;n dbminit () de C.) El objeto devuelto por el m&amp;eacute;todo &quot;nuevo&quot; tambi&amp;eacute;n es devuelto por la funci&amp;oacute;n tie (), que ser&amp;iacute;a &amp;uacute;til si quisiera acceder a otros m&amp;eacute;todos en &lt;code&gt;CLASSNAME&lt;/code&gt; . (En realidad, no es necesario que devuelva una referencia a un &quot;tipo&quot; correcto (por ejemplo, HASH o &lt;code&gt;CLASSNAME&lt;/code&gt; ) siempre que sea un objeto debidamente bendecido.) Tambi&amp;eacute;n puede recuperar una referencia al objeto subyacente utilizando la funci&amp;oacute;n atada ().</target>
        </trans-unit>
        <trans-unit id="c85e139a9d34793e56b9fe2b00c4a278f893619e" translate="yes" xml:space="preserve">
          <source>In the tie() call, &lt;code&gt;VARIABLE&lt;/code&gt; is the name of the variable to be enchanted. &lt;code&gt;CLASSNAME&lt;/code&gt; is the name of a class implementing objects of the correct type. Any additional arguments in the &lt;code&gt;LIST&lt;/code&gt; are passed to the appropriate constructor method for that class--meaning TIESCALAR(), TIEARRAY(), TIEHASH(), or TIEHANDLE(). (Typically these are arguments such as might be passed to the dbminit() function of C.) The object returned by the &quot;new&quot; method is also returned by the tie() function, which would be useful if you wanted to access other methods in &lt;code&gt;CLASSNAME&lt;/code&gt;. (You don't actually have to return a reference to a right &quot;type&quot; (e.g., HASH or &lt;code&gt;CLASSNAME&lt;/code&gt;) so long as it's a properly blessed object.) You can also retrieve a reference to the underlying object using the tied() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e605f529d11854bba56a166fe10700b1dd88fb" translate="yes" xml:space="preserve">
          <source>In the two-argument (and one-argument) form, opening &lt;code&gt;&amp;lt;-&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; opens STDIN and opening &lt;code&gt;&amp;gt;-&lt;/code&gt; opens STDOUT.</source>
          <target state="translated">En la forma de dos argumentos (y un argumento), abrir &lt;code&gt;&amp;lt;-&lt;/code&gt; o &lt;code&gt;-&lt;/code&gt; abre STDIN y abrir &lt;code&gt;&amp;gt;-&lt;/code&gt; abre STDOUT.</target>
        </trans-unit>
        <trans-unit id="43780fa78aa7e37a1a813f3169ce3533b0cbb0cd" translate="yes" xml:space="preserve">
          <source>In the two-argument form of open(), a pipe open can be achieved by either appending or prepending a pipe symbol to the second argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305b7a93b43681322f3469e0f0cb84a704ec6817" translate="yes" xml:space="preserve">
          <source>In the unlikely case of a SV requiring more complex initialization, you can create an empty SV with newSV(len). If &lt;code&gt;len&lt;/code&gt; is 0 an empty SV of type NULL is returned, else an SV of type PV is returned with len + 1 (for the &lt;code&gt;NUL&lt;/code&gt; ) bytes of storage allocated, accessible via SvPVX. In both cases the SV has the undef value.</source>
          <target state="translated">En el caso poco probable de un SV que requiera una inicializaci&amp;oacute;n m&amp;aacute;s compleja, puede crear un SV vac&amp;iacute;o con newSV (len). Si &lt;code&gt;len&lt;/code&gt; es 0, se devuelve un SV vac&amp;iacute;o de tipo NULL; de lo contrario, se devuelve un SV de tipo PV con len + 1 (para el &lt;code&gt;NUL&lt;/code&gt; ) bytes de almacenamiento asignados, accesibles a trav&amp;eacute;s de SvPVX. En ambos casos, el SV tiene el valor indefinido.</target>
        </trans-unit>
        <trans-unit id="a7cf307c9a8a074b8b42ee12dd010c5730718073" translate="yes" xml:space="preserve">
          <source>In the unlikely case of a SV requiring more complex initialization, you can create an empty SV with newSV(len). If &lt;code&gt;len&lt;/code&gt; is 0 an empty SV of type NULL is returned, else an SV of type PV is returned with len + 1 (for the &lt;code&gt;NUL&lt;/code&gt;) bytes of storage allocated, accessible via SvPVX. In both cases the SV has the undef value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65702a5086ab6fd62074e14eca8df9ddcb2f9f3" translate="yes" xml:space="preserve">
          <source>In the unlikely situation that you need to tell the parser that you will accept additional directives (&quot;=foo&quot; things), you need to first set the parser to treat its content as data (i.e., not really processed at all), or as verbatim (mostly just expanding tabs), or as processed text (parsing formatting codes like B&amp;lt;...&amp;gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08f73822da4db28b0244d63be2806e6742a13f9" translate="yes" xml:space="preserve">
          <source>In the words of Chaim Frenkel: &quot;Perl's grammar can not be reduced to BNF. The work of parsing perl is distributed between yacc, the lexer, smoke and mirrors.&quot;</source>
          <target state="translated">En palabras de Chaim Frenkel:&quot;La gramática de Perl no puede ser reducida a BNF.El trabajo de analizar perl se distribuye entre el yacc,el lexer,el humo y los espejos&quot;.</target>
        </trans-unit>
        <trans-unit id="eea8935b77be896004ea3b86596d8c4b9f389127" translate="yes" xml:space="preserve">
          <source>In the work crew model, several threads are created that do essentially the same thing to different pieces of data. It closely mirrors classical parallel processing and vector processors, where a large array of processors do the exact same thing to many pieces of data.</source>
          <target state="translated">En el modelo de la tripulación de trabajo,se crean varios hilos que hacen esencialmente lo mismo con diferentes piezas de datos.Refleja de cerca el procesamiento paralelo clásico y los procesadores vectoriales,donde una gran variedad de procesadores hacen exactamente lo mismo a muchas piezas de datos.</target>
        </trans-unit>
        <trans-unit id="c55ef95af3c2d0a3702a06238a73d0da82b1e62b" translate="yes" xml:space="preserve">
          <source>In the year 2010 App::cpanminus was launched as a new approach to a cpan shell with a considerably smaller footprint. Very cool stuff.</source>
          <target state="translated">En el año 2010 se lanzó App::cpanminus como un nuevo enfoque de una carcasa de cpan con una huella considerablemente más pequeña.Un material muy bueno.</target>
        </trans-unit>
        <trans-unit id="113762dd3316218250364ac4d21aa3eda82fed63" translate="yes" xml:space="preserve">
          <source>In theory &lt;code&gt;Strtol&lt;/code&gt; and &lt;code&gt;Strtoul&lt;/code&gt; may not be defined if the machine perl is built on doesn't actually have strtol and strtoul. But as those 2 functions are part of the 1989 ANSI C spec we suspect you'll find them everywhere by now.</source>
          <target state="translated">En teor&amp;iacute;a, &lt;code&gt;Strtol&lt;/code&gt; y &lt;code&gt;Strtoul&lt;/code&gt; pueden no definirse si la m&amp;aacute;quina en la que se basa perl no tiene strtol y strtoul. Pero como esas 2 funciones son parte de la especificaci&amp;oacute;n ANSI C de 1989, sospechamos que ya las encontrar&amp;aacute; en todas partes.</target>
        </trans-unit>
        <trans-unit id="04c962eb376205914b3738a1df3cdb3251c93666" translate="yes" xml:space="preserve">
          <source>In theory these routines were not and are not intended to be used outside of the perl core, and are subject to change and removal at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d524f396baff67e45d81dc7f8d13d5cf1e77d980" translate="yes" xml:space="preserve">
          <source>In theory, &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; is reliable from -2**63 to 2**63-1. However, because work arounds in the implementation use floating point numbers, it will become inaccurate as the time gets larger. This is a bug and will be fixed in the future.</source>
          <target state="translated">En teor&amp;iacute;a, &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; es confiable de -2 ** 63 a 2 ** 63-1. Sin embargo, debido a que las soluciones alternativas en la implementaci&amp;oacute;n usan n&amp;uacute;meros de punto flotante, se volver&amp;aacute; inexacto a medida que aumenta el tiempo. Esto es un error y se solucionar&amp;aacute; en el futuro.</target>
        </trans-unit>
        <trans-unit id="6b03e06382fed416572947e88ed120d6b2caf5ff" translate="yes" xml:space="preserve">
          <source>In theory, &lt;code&gt;gmtime&lt;/code&gt; is reliable from -2**63 to 2**63-1. However, because work-arounds in the implementation use floating point numbers, it will become inaccurate as the time gets larger. This is a bug and will be fixed in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe5df9e111a076eb83a7b1ca2b907e2c293b988" translate="yes" xml:space="preserve">
          <source>In these loop constructs, the assigned value (whether assignment is automatic or explicit) is then tested to see whether it is defined. The defined test avoids problems where the line has a string value that would be treated as false by Perl; for example a &quot;&quot; or a &lt;code&gt;&quot;0&quot;&lt;/code&gt; with no trailing newline. If you really mean for such values to terminate the loop, they should be tested for explicitly:</source>
          <target state="translated">En estas construcciones de bucle, el valor asignado (si la asignaci&amp;oacute;n es autom&amp;aacute;tica o expl&amp;iacute;cita) luego se prueba para ver si est&amp;aacute; definido. La prueba definida evita problemas en los que la l&amp;iacute;nea tiene un valor de cadena que Perl tratar&amp;iacute;a como falso; por ejemplo, un &quot;&quot; o un &lt;code&gt;&quot;0&quot;&lt;/code&gt; sin nueva l&amp;iacute;nea final. Si realmente quiere que tales valores terminen el ciclo, deben probarse expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="6e44b8059bd25cac80d7a80701ceeb87c0cc485a" translate="yes" xml:space="preserve">
          <source>In this -exec rendering, each opcode is executed in the order shown. The add opcode, marked with '*', is discussed in more detail.</source>
          <target state="translated">En esta representación ejecutiva,cada código de operación se ejecuta en el orden que se muestra.El opcode de adición,marcado con '*',se discute con más detalle.</target>
        </trans-unit>
        <trans-unit id="fd1f4af2f36f22296f6e12cb734299d228fd203a" translate="yes" xml:space="preserve">
          <source>In this alternation, it is important to put &lt;code&gt;'\d+\.\d+'&lt;/code&gt; before &lt;code&gt;'\d+\.'&lt;/code&gt; . If &lt;code&gt;'\d+\.'&lt;/code&gt; were first, the regexp would happily match that and ignore the fractional part of the number.</source>
          <target state="translated">En esta alternancia, es importante poner &lt;code&gt;'\d+\.\d+'&lt;/code&gt; antes de &lt;code&gt;'\d+\.'&lt;/code&gt; . Si &lt;code&gt;'\d+\.'&lt;/code&gt; fueran primero, la expresi&amp;oacute;n regular coincidir&amp;iacute;a felizmente con eso e ignorar&amp;iacute;a la parte fraccionaria del n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="4d8fb7dabadcf5fdf3a7d10f33d4299f66b99d0d" translate="yes" xml:space="preserve">
          <source>In this alternation, it is important to put &lt;code&gt;'\d+\.\d+'&lt;/code&gt; before &lt;code&gt;'\d+\.'&lt;/code&gt;. If &lt;code&gt;'\d+\.'&lt;/code&gt; were first, the regexp would happily match that and ignore the fractional part of the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e19afab75cca33f669db41034484d08b958820" translate="yes" xml:space="preserve">
          <source>In this call,</source>
          <target state="translated">En esta llamada,</target>
        </trans-unit>
        <trans-unit id="4ecf4a828b4af8d398e7cb607aebb3e775eec012" translate="yes" xml:space="preserve">
          <source>In this call, &lt;code&gt;entersubop&lt;/code&gt; is a pointer to the &lt;code&gt;entersub&lt;/code&gt; op, which may be replaced by the check function, and &lt;code&gt;namegv&lt;/code&gt; supplies the name that should be used by the check function to refer to the callee of the &lt;code&gt;entersub&lt;/code&gt; op if it needs to emit any diagnostics. It is permitted to apply the check function in non-standard situations, such as to a call to a different subroutine or to a method call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f085ed6c4e3052eb0bb052f156e9a4157a1fe5d" translate="yes" xml:space="preserve">
          <source>In this call, the two arrays will be populated as shown below (for Unicode 6.0):</source>
          <target state="translated">En esta llamada,las dos matrices se poblarán como se muestra a continuación (para Unicode 6.0):</target>
        </trans-unit>
        <trans-unit id="9ebdd72fd702032acef9641f741ed417c8e827d9" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;IO::Compress::Zip&lt;/code&gt; will check that &lt;code&gt;$rawdata&lt;/code&gt; consists of zero or more conformant sub-fields.</source>
          <target state="translated">En este caso, &lt;code&gt;IO::Compress::Zip&lt;/code&gt; comprobar&amp;aacute; que &lt;code&gt;$rawdata&lt;/code&gt; consta de cero o m&amp;aacute;s subcampos conformes.</target>
        </trans-unit>
        <trans-unit id="7445390dec364c96fb636b6c3a3e08bbc004467f" translate="yes" xml:space="preserve">
          <source>In this case a possible way around this problem is to predefine a series of C functions to act as the interface to Perl, thus</source>
          <target state="translated">En este caso una posible solución a este problema es predefinir una serie de funciones C para que actúen como interfaz con Perl,así</target>
        </trans-unit>
        <trans-unit id="e58eeb1fce65fa0151692bc12dbf74ccd83c8127" translate="yes" xml:space="preserve">
          <source>In this case it is possible to speed up the routine (often quite substantially) by using the lightweight callback API. The idea is that the calling context only needs to be created and destroyed once, and the sub can be called arbitrarily many times in between.</source>
          <target state="translated">En este caso es posible acelerar la rutina (a menudo bastante sustancialmente)utilizando el API de retrollamada ligera.La idea es que el contexto de llamada sólo necesita ser creado y destruido una vez,y el submarino puede ser llamado arbitrariamente muchas veces entremedio.</target>
        </trans-unit>
        <trans-unit id="befe7f5d777ad4551126d4a3070f7f52a7093b40" translate="yes" xml:space="preserve">
          <source>In this case the extra input files will be passed to the program after the target file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a45b342cd0260187347347f25fa6f1ce0fc4500" translate="yes" xml:space="preserve">
          <source>In this case the flow of control can consist of only the repeated sequence</source>
          <target state="translated">En este caso el flujo de control puede consistir sólo en la secuencia repetida</target>
        </trans-unit>
        <trans-unit id="de52280d051bfe1e84ce26c045f4bd463f4ae0ee" translate="yes" xml:space="preserve">
          <source>In this case the functions &lt;code&gt;fn1&lt;/code&gt; , &lt;code&gt;fn2&lt;/code&gt; , and &lt;code&gt;fn3&lt;/code&gt; are used to remember the Perl subroutine to be called. Each of the functions holds a separate hard-wired index which is used in the function &lt;code&gt;Pcb&lt;/code&gt; to access the &lt;code&gt;Map&lt;/code&gt; array and actually call the Perl subroutine.</source>
          <target state="translated">En este caso las funciones &lt;code&gt;fn1&lt;/code&gt; , &lt;code&gt;fn2&lt;/code&gt; y &lt;code&gt;fn3&lt;/code&gt; se utilizan para recordar la subrutina Perl para ser llamado. Cada una de las funciones contiene un &amp;iacute;ndice cableado independiente que se utiliza en la funci&amp;oacute;n &lt;code&gt;Pcb&lt;/code&gt; para acceder a la matriz de &lt;code&gt;Map&lt;/code&gt; y llamar a la subrutina Perl.</target>
        </trans-unit>
        <trans-unit id="a32656bde8fd76ba84b5248615b4f3d9ae23b187" translate="yes" xml:space="preserve">
          <source>In this case the functions &lt;code&gt;fn1&lt;/code&gt;, &lt;code&gt;fn2&lt;/code&gt;, and &lt;code&gt;fn3&lt;/code&gt; are used to remember the Perl subroutine to be called. Each of the functions holds a separate hard-wired index which is used in the function &lt;code&gt;Pcb&lt;/code&gt; to access the &lt;code&gt;Map&lt;/code&gt; array and actually call the Perl subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba717b73fce507fddc399244f240ef5b6f054dd" translate="yes" xml:space="preserve">
          <source>In this case the input fileglob &lt;code&gt;*.tar.gz&lt;/code&gt; will be transformed into this Perl regular expression</source>
          <target state="translated">En este caso, el archivo de entrada glob &lt;code&gt;*.tar.gz&lt;/code&gt; se transformar&amp;aacute; en esta expresi&amp;oacute;n regular de Perl</target>
        </trans-unit>
        <trans-unit id="779676f9752f28e10579e10de2beca329de72fea" translate="yes" xml:space="preserve">
          <source>In this case the main point to note is that only the last item in the list is returned from the subroutine.</source>
          <target state="translated">En este caso,el principal punto a tener en cuenta es que sólo se devuelve de la subrutina el último elemento de la lista.</target>
        </trans-unit>
        <trans-unit id="570da359699c43b4bafeef5621d77b9bbf97eae1" translate="yes" xml:space="preserve">
          <source>In this case the program will be run multiple times using each target file.</source>
          <target state="translated">En este caso el programa se ejecutará varias veces usando cada archivo de destino.</target>
        </trans-unit>
        <trans-unit id="2b0f3bc0334984124b9519a2c06691727251a21f" translate="yes" xml:space="preserve">
          <source>In this case we know that the string must contain a &lt;code&gt;foo&lt;/code&gt; which must be followed by &lt;code&gt;bar&lt;/code&gt; . We can use Fast Boyer-Moore matching as implemented in &lt;code&gt;fbm_instr()&lt;/code&gt; to find the location of these strings. If they don't exist then we don't need to resort to the much more expensive regex engine. Even better, if they do exist then we can use their positions to reduce the search space that the regex engine needs to cover to determine if the entire pattern matches.</source>
          <target state="translated">En este caso sabemos que la cadena debe contener un &lt;code&gt;foo&lt;/code&gt; que debe ir seguido de &lt;code&gt;bar&lt;/code&gt; . Podemos usar la coincidencia r&amp;aacute;pida de Boyer-Moore como se implement&amp;oacute; en &lt;code&gt;fbm_instr()&lt;/code&gt; para encontrar la ubicaci&amp;oacute;n de estas cadenas. Si no existen, entonces no es necesario recurrir al motor de expresiones regulares mucho m&amp;aacute;s caro. A&amp;uacute;n mejor, si existen, podemos usar sus posiciones para reducir el espacio de b&amp;uacute;squeda que el motor de expresiones regulares necesita cubrir para determinar si todo el patr&amp;oacute;n coincide.</target>
        </trans-unit>
        <trans-unit id="69f3e109a5f7360c04fda6b9c374a7b2aee30c55" translate="yes" xml:space="preserve">
          <source>In this case we know that the string must contain a &lt;code&gt;foo&lt;/code&gt; which must be followed by &lt;code&gt;bar&lt;/code&gt;. We can use Fast Boyer-Moore matching as implemented in &lt;code&gt;fbm_instr()&lt;/code&gt; to find the location of these strings. If they don't exist then we don't need to resort to the much more expensive regex engine. Even better, if they do exist then we can use their positions to reduce the search space that the regex engine needs to cover to determine if the entire pattern matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adf1e07cf7e2de470c351018728e0b1e6d507de" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be substituted for the item to be cloned. If set to zero:</source>
          <target state="translated">En este caso, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; sustituir&amp;aacute; al art&amp;iacute;culo a clonar. Si se establece en cero:</target>
        </trans-unit>
        <trans-unit id="fd0174890e09efbb34e87a3b7a337a821e192e2c" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;JSON::PP&lt;/code&gt; creates a tagged JSON value, using a nonstandard extension to the JSON syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3e63cc6861b8f9065b2614b3c8a800786d3119" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;undef&lt;/code&gt; will be substituted for the item to be cloned. If set to zero:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c66364cb0f3415ad0b76d2776349bcfcc95f50e" translate="yes" xml:space="preserve">
          <source>In this case, because the &lt;code&gt;JMPENV&lt;/code&gt; level recorded in the &lt;code&gt;CxEVAL&lt;/code&gt; differs from the current one, &lt;code&gt;docatch&lt;/code&gt; just does a &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; and the C stack unwinds to:</source>
          <target state="translated">En este caso, debido a que el nivel de &lt;code&gt;JMPENV&lt;/code&gt; registrado en el &lt;code&gt;CxEVAL&lt;/code&gt; difiere del actual, &lt;code&gt;docatch&lt;/code&gt; solo hace un &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; y la pila de C se desenrolla para:</target>
        </trans-unit>
        <trans-unit id="38ba605349bb20448e174208a445c574b3bbbe89" translate="yes" xml:space="preserve">
          <source>In this case, if</source>
          <target state="translated">En este caso,si</target>
        </trans-unit>
        <trans-unit id="bb541d2c2f3bc8d3faf27ff1a86aae9a349b1c56" translate="yes" xml:space="preserve">
          <source>In this case, it finds a &lt;code&gt;save()&lt;/code&gt; method in the &lt;code&gt;File&lt;/code&gt; class. Note that the object passed to &lt;code&gt;save()&lt;/code&gt; in this case is still a &lt;code&gt;File::MP3&lt;/code&gt; object, even though the method is found in the &lt;code&gt;File&lt;/code&gt; class.</source>
          <target state="translated">En este caso, encuentra un m&amp;eacute;todo &lt;code&gt;save()&lt;/code&gt; en la clase &lt;code&gt;File&lt;/code&gt; . Tenga en cuenta que el objeto pasado a &lt;code&gt;save()&lt;/code&gt; en este caso sigue siendo un objeto &lt;code&gt;File::MP3&lt;/code&gt; , aunque el m&amp;eacute;todo se encuentra en la clase &lt;code&gt;File&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="904227a42dd6a4688cfaf025d7e725bbdfcba9cb" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;TO_JSON&lt;/code&gt; method of the object is invoked in scalar context. It must return a single scalar that can be directly encoded into JSON. This scalar replaces the object in the JSON text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ed12158dee993299753ff9f1084ddd79644a4a" translate="yes" xml:space="preserve">
          <source>In this case, the BEGIN is freed immediately after execution since there are no active references to it: the anon sub prototype has &lt;code&gt;CvWEAKOUTSIDE&lt;/code&gt; set since it's not a closure, and $a points to the same CV, so it doesn't contribute to BEGIN's refcount either. When $a is executed, the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; '$x'&lt;/code&gt; causes the chain of &lt;code&gt;CvOUTSIDE&lt;/code&gt; s to be followed, and the freed BEGIN is accessed.</source>
          <target state="translated">En este caso, el BEGIN se libera inmediatamente despu&amp;eacute;s de la ejecuci&amp;oacute;n, ya que no hay referencias activas a &amp;eacute;l: el &lt;code&gt;CvWEAKOUTSIDE&lt;/code&gt; anon tiene CvWEAKOUTSIDE configurado ya que no es un cierre, y $ a apunta al mismo CV, por lo que no contribuye a BEGIN's refcount tampoco. Cuando se ejecuta $ a, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; '$x'&lt;/code&gt; hace que se &lt;code&gt;CvOUTSIDE&lt;/code&gt; la cadena de CvOUTSIDE s, y se accede al BEGIN liberado.</target>
        </trans-unit>
        <trans-unit id="2d6feeb3d0329a363666ad3d9cc4549891bf4b38" translate="yes" xml:space="preserve">
          <source>In this case, the BEGIN is freed immediately after execution since there are no active references to it: the anon sub prototype has &lt;code&gt;CvWEAKOUTSIDE&lt;/code&gt; set since it's not a closure, and $a points to the same CV, so it doesn't contribute to BEGIN's refcount either. When $a is executed, the &lt;code&gt;eval '$x'&lt;/code&gt; causes the chain of &lt;code&gt;CvOUTSIDE&lt;/code&gt;s to be followed, and the freed BEGIN is accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a3c5178883306c2188aa48aea362372e427fd0" translate="yes" xml:space="preserve">
          <source>In this case, the behavior is problematic and is not so easily described. Here are two bugs that cannot easily be fixed without breaking existing programs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445e238a2cf161c353789dd6ff6ac3c0dc14cd3f" translate="yes" xml:space="preserve">
          <source>In this case, the data flow from the pipeline can be represented as follows:</source>
          <target state="translated">En este caso,el flujo de datos del oleoducto puede representarse de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="76ef174320084e5b9df3d70ddc86b3f46c5bccd4" translate="yes" xml:space="preserve">
          <source>In this case, the function will overload both of the three way comparison operators. For all overload operations using non-alpha characters, you must type the parameter without quoting, separating multiple overloads with whitespace. Note that &quot;&quot; (the stringify overload) should be entered as \&quot;\&quot; (i.e. escaped).</source>
          <target state="translated">En este caso,la función sobrecargará a los dos operadores de comparación de tres vías.Para todas las operaciones de sobrecarga que utilicen caracteres no alfa,debe escribir el parámetro sin comillas,separando las múltiples sobrecargas con espacios en blanco.Tenga en cuenta que &quot;&quot; (el stringify overload)debe ser introducido como \&quot;\N&quot;\N-escape&quot; (es decir,escapado).</target>
        </trans-unit>
        <trans-unit id="b8364049e54a9d18ffd4855b1a0b1335cff126ce" translate="yes" xml:space="preserve">
          <source>In this case, the name (&lt;code&gt;http&lt;/code&gt;) will be tried first, but if the resolver does not understand it then the port number (&lt;code&gt;80&lt;/code&gt;) will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4b7be359855c6b427d300bbc65846d64f8cf9d" translate="yes" xml:space="preserve">
          <source>In this case, the reference count for the variables will never reach 0, and the references will never be garbage-collected. This can lead to memory leaks.</source>
          <target state="translated">En este caso,la cuenta de referencia de las variables nunca llegará a 0,y las referencias nunca serán recogidas por la basura.Esto puede conducir a fugas de memoria.</target>
        </trans-unit>
        <trans-unit id="cc6f51a2de8f8d888eeb99016141d99a3d195bd9" translate="yes" xml:space="preserve">
          <source>In this case, the yes-pattern is never directly executed, and no no-pattern is allowed. Similar in spirit to &lt;code&gt;(?{0})&lt;/code&gt; but more efficient. See below for details.</source>
          <target state="translated">En este caso, el patr&amp;oacute;n yes nunca se ejecuta directamente y no se permite ning&amp;uacute;n patr&amp;oacute;n no. Similar en esp&amp;iacute;ritu a &lt;code&gt;(?{0})&lt;/code&gt; pero m&amp;aacute;s eficiente. Consulte los detalles a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c85c8e55100a9206350f3d9de1af13e8521e9423" translate="yes" xml:space="preserve">
          <source>In this case, the yes-pattern is never directly executed, and no no-pattern is allowed. Similar in spirit to &lt;code&gt;(?{0})&lt;/code&gt; but more efficient. See below for details. Full syntax: &lt;code&gt;(?(DEFINE)&lt;i&gt;definitions&lt;/i&gt;...)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c031d44e01689714a7d1be31709243cd683ac5" translate="yes" xml:space="preserve">
          <source>In this case, there's not much to see, but of course normally there's pages of stuff to wade through, and 'l' can be very useful. To reset your view to the line we're about to execute, type a lone period '.':</source>
          <target state="translated">En este caso,no hay mucho que ver,pero por supuesto normalmente hay páginas de cosas para vadear,y &quot;l&quot; puede ser muy útil.Para reajustar la vista a la línea que estamos a punto de ejecutar,escriba un punto único '.':</target>
        </trans-unit>
        <trans-unit id="d6cf564bd8d8897a564d43efb035ccf8128bfa59" translate="yes" xml:space="preserve">
          <source>In this case, you cannot omit the first</source>
          <target state="translated">En este caso,no se puede omitir la primera</target>
        </trans-unit>
        <trans-unit id="c6ff251bc24fa4db8e24130b2fd6042c3837352e" translate="yes" xml:space="preserve">
          <source>In this case, you use the &lt;code&gt;detach()&lt;/code&gt; method. Once a thread is detached, it'll run until it's finished; then Perl will clean up after it automatically.</source>
          <target state="translated">En este caso, usa el m&amp;eacute;todo &lt;code&gt;detach()&lt;/code&gt; . Una vez que se separa un hilo, se ejecutar&amp;aacute; hasta que finalice; luego Perl lo limpiar&amp;aacute; autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="f06a2a722f183edc4aa583848f94d04c7c5ace33" translate="yes" xml:space="preserve">
          <source>In this document, &quot;must&quot; / &quot;must not&quot;, &quot;should&quot; / &quot;should not&quot;, and &quot;may&quot; have their conventional (cf. RFC 2119) meanings: &quot;X must do Y&quot; means that if X doesn't do Y, it's against this specification, and should really be fixed. &quot;X should do Y&quot; means that it's recommended, but X may fail to do Y, if there's a good reason. &quot;X may do Y&quot; is merely a note that X can do Y at will (although it is up to the reader to detect any connotation of &quot;and I think it would be</source>
          <target state="translated">En este documento,&quot;debe&quot;/&quot;no debe&quot;,&quot;debe&quot;/&quot;no debe&quot; y &quot;puede&quot; tienen sus significados convencionales (cf.RFC 2119):&quot;X debe hacer Y&quot; significa que si X no hace Y,va en contra de esta especificación,y realmente debe ser fijado.&quot;X debe hacer Y&quot; significa que es recomendable,pero X puede no hacer Y,si hay una buena razón.&quot;X puede hacer Y&quot; es simplemente una nota que X puede hacer Y a voluntad (aunque depende del lector detectar cualquier connotación de &quot;y creo que sería</target>
        </trans-unit>
        <trans-unit id="f65b8f5200f2d0ab93731dfb5d397ad4f5889d0a" translate="yes" xml:space="preserve">
          <source>In this documentation, &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; on the first line of the program will stand in for whatever method works on your system. You are advised to use a specific path if you care about a specific version.</source>
          <target state="translated">En esta documentaci&amp;oacute;n, &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; en la primera l&amp;iacute;nea del programa reemplazar&amp;aacute; cualquier m&amp;eacute;todo que funcione en su sistema. Se le recomienda utilizar una ruta espec&amp;iacute;fica si le interesa una versi&amp;oacute;n espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="317bfd052c319e12e1dcc797f6ad498f8171149f" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;--all&lt;/code&gt; will</source>
          <target state="translated">En este ejemplo, &lt;code&gt;--all&lt;/code&gt; voluntad</target>
        </trans-unit>
        <trans-unit id="e92bf3ad9ffe37a0d52db0112f7aacb357e3a712" translate="yes" xml:space="preserve">
          <source>In this example, a new &lt;code&gt;$x&lt;/code&gt; is created when &lt;code&gt;whatever&lt;/code&gt; is called, and also a new &lt;code&gt;inner&lt;/code&gt; , which can see the new &lt;code&gt;$x&lt;/code&gt; . A &quot;state&quot; sub will only see the &lt;code&gt;$x&lt;/code&gt; from the first call to &lt;code&gt;whatever&lt;/code&gt; .</source>
          <target state="translated">En este ejemplo, se crea un nuevo &lt;code&gt;$x&lt;/code&gt; cuando se llama &lt;code&gt;whatever&lt;/code&gt; sea, y tambi&amp;eacute;n un nuevo &lt;code&gt;inner&lt;/code&gt; , que puede ver el nuevo &lt;code&gt;$x&lt;/code&gt; . Un sub &quot;estado&quot; solo ver&amp;aacute; el &lt;code&gt;$x&lt;/code&gt; de la primera llamada a &lt;code&gt;whatever&lt;/code&gt; que sea .</target>
        </trans-unit>
        <trans-unit id="03a782210b8b5b9d56172f6b6115f6aa3cd92695" translate="yes" xml:space="preserve">
          <source>In this example, a new &lt;code&gt;$x&lt;/code&gt; is created when &lt;code&gt;whatever&lt;/code&gt; is called, and also a new &lt;code&gt;inner&lt;/code&gt;, which can see the new &lt;code&gt;$x&lt;/code&gt;. A &quot;state&quot; sub will only see the &lt;code&gt;$x&lt;/code&gt; from the first call to &lt;code&gt;whatever&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd205d2b3e2dec6816acf70e5f088db6d1ebf4c2" translate="yes" xml:space="preserve">
          <source>In this example, only the first two assignments will be done immediately; after this, all the changes to the file will be deferred up to the user-specified memory limit.</source>
          <target state="translated">En este ejemplo,sólo las dos primeras asignaciones se harán inmediatamente;después de esto,todos los cambios en el archivo se aplazarán hasta el límite de memoria especificado por el usuario.</target>
        </trans-unit>
        <trans-unit id="5a4ab6947e272be82ce081150ade300e39621eac" translate="yes" xml:space="preserve">
          <source>In this example, the expression is evaluated only once, and the tied scalar (the result of the expression) is fetched for each comparison that uses it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c920ce6f8f3e81b20912d17931330182ad0a53" translate="yes" xml:space="preserve">
          <source>In this example, we will accept a reference to an array as an input parameter, and return a reference to an array of hashes. This will demonstrate manipulation of complex Perl data types from an XSUB.</source>
          <target state="translated">En este ejemplo,aceptaremos una referencia a una matriz como parámetro de entrada,y devolveremos una referencia a una matriz de hashes.Esto demostrará la manipulación de tipos de datos complejos de Perl desde un XSUB.</target>
        </trans-unit>
        <trans-unit id="b22f4e4bd19dab41fd1e0219238248b0317aa35c" translate="yes" xml:space="preserve">
          <source>In this example, we will get the following output:</source>
          <target state="translated">En este ejemplo,obtendremos la siguiente salida:</target>
        </trans-unit>
        <trans-unit id="ee2620c9071c60e99d08be588513a407e9d8d25d" translate="yes" xml:space="preserve">
          <source>In this example, we'll do some more work with the argument stack. The previous examples have all returned only a single value. We'll now create an extension that returns an array.</source>
          <target state="translated">En este ejemplo,trabajaremos un poco más con la pila de argumentos.Todos los ejemplos anteriores han devuelto un solo valor.Ahora crearemos una extensión que devuelva una matriz.</target>
        </trans-unit>
        <trans-unit id="bc42a21b3f25368390b359d2c6a1e02f5038d3de" translate="yes" xml:space="preserve">
          <source>In this example, we'll now begin to write XSUBs that will interact with pre-defined C libraries. To begin with, we will build a small library of our own, then let h2xs write our .pm and .xs files for us.</source>
          <target state="translated">En este ejemplo,ahora comenzaremos a escribir XSUB que interactuarán con las bibliotecas C predefinidas.Para empezar,construiremos una pequeña biblioteca propia,luego dejaremos que los h2xs escriban nuestros archivos .pm y .xs por nosotros.</target>
        </trans-unit>
        <trans-unit id="955bf75951fa8c51c57a77cb9f4962e2f9fbe8e1" translate="yes" xml:space="preserve">
          <source>In this facet the &lt;code&gt;details&lt;/code&gt; field overrides the &quot;failed at test_file.t line 42.&quot; message provided on assertion failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfbfd9001b68d4bb9123e9a75f5be994042b170" translate="yes" xml:space="preserve">
          <source>In this form, it is easier to see a way to simplify the alternation. Alternatives 1, 2, and 4 all start with &lt;code&gt;\d+&lt;/code&gt; , so it could be factored out:</source>
          <target state="translated">De esta forma, es m&amp;aacute;s f&amp;aacute;cil ver una forma de simplificar la alternancia. Las alternativas 1, 2 y 4 comienzan con &lt;code&gt;\d+&lt;/code&gt; , por lo que podr&amp;iacute;a factorizarse:</target>
        </trans-unit>
        <trans-unit id="8872fe0affc69c9606769a8a65343eca2f4676ad" translate="yes" xml:space="preserve">
          <source>In this form, it is easier to see a way to simplify the alternation. Alternatives 1, 2, and 4 all start with &lt;code&gt;\d+&lt;/code&gt;, so it could be factored out:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b24fb7d07c9db355f07769493a9de293acc8111" translate="yes" xml:space="preserve">
          <source>In this hash each key represents a category of functions and the value is a short description of that category.</source>
          <target state="translated">En este hash cada tecla representa una categoría de funciones y el valor es una breve descripción de esa categoría.</target>
        </trans-unit>
        <trans-unit id="3f56d8b8bdb8c26426f0b6660b2be0710caeb9c2" translate="yes" xml:space="preserve">
          <source>In this hash each key represents a function and the value is a short description of that function.</source>
          <target state="translated">En este hash cada tecla representa una función y el valor es una breve descripción de esa función.</target>
        </trans-unit>
        <trans-unit id="4112ec477caea48107dc76ca327ecc26b9559568" translate="yes" xml:space="preserve">
          <source>In this hash each key represents a function and the value is the category. The category can be a comma separated list.</source>
          <target state="translated">En este hash cada tecla representa una función y el valor es la categoría.La categoría puede ser una lista separada por comas.</target>
        </trans-unit>
        <trans-unit id="5b991cc90d42bab8c037a6310ce95c7fd23aada4" translate="yes" xml:space="preserve">
          <source>In this instance the &quot;Store&quot; and &quot;Fetch&quot; methods are encapsulated inside a &quot;Filter&quot; method.</source>
          <target state="translated">En este caso los métodos &quot;Store&quot; y &quot;Fetch&quot; están encapsulados dentro de un método &quot;Filter&quot;.</target>
        </trans-unit>
        <trans-unit id="d35ad5c2c0618e945079ac0ca929cf4d613d24d9" translate="yes" xml:space="preserve">
          <source>In this library, the numbers are represented in base B = 10**N, where N is the largest possible value that does not cause overflow in the intermediate computations. The base B elements are stored in an array, with the least significant element stored in array element zero. There are no leading zero elements, except a single zero element when the number is zero.</source>
          <target state="translated">En esta biblioteca,los números están representados en la base B=10**N,donde N es el mayor valor posible que no causa desbordamiento en los cálculos intermedios.Los elementos de la base B se almacenan en una matriz,con el elemento menos significativo almacenado en el elemento cero de la matriz.No hay elementos cero principales,excepto un único elemento cero cuando el número es cero.</target>
        </trans-unit>
        <trans-unit id="df68cfd3648ab58a91a7f368ccaceffbf7d1f325" translate="yes" xml:space="preserve">
          <source>In this particular case we don't have to call</source>
          <target state="translated">En este caso en particular no tenemos que llamar</target>
        </trans-unit>
        <trans-unit id="dad6a924b2e38abcfe4b4ffded7acf8266a85c31" translate="yes" xml:space="preserve">
          <source>In this pass the input pattern is parsed in order to calculate how much space is needed for each regop we would need to emit. The size is also used to determine whether long jumps will be required in the program.</source>
          <target state="translated">En este paso se analiza el patrón de entrada para calcular cuánto espacio se necesita para cada regop que tendríamos que emitir.El tamaño también se utiliza para determinar si se necesitarán saltos largos en el programa.</target>
        </trans-unit>
        <trans-unit id="41f31a4be766288871cf075eb0ef8be8f75f8e7b" translate="yes" xml:space="preserve">
          <source>In this pod section each line obeys the format</source>
          <target state="translated">En esta sección de la vaina cada línea obedece al formato</target>
        </trans-unit>
        <trans-unit id="64cfb9e395c018a6592c08f321f44ebdc6f304df" translate="yes" xml:space="preserve">
          <source>In this regexp, you might expect the first minimal quantifier &lt;code&gt;.*?&lt;/code&gt; to match the empty string, because it is not constrained by a &lt;code&gt;'^'&lt;/code&gt; anchor to match the beginning of the word. Principle 0 applies here, however. Because it is possible for the whole regexp to match at the start of the string, it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a40391b3aa03b91dc32950cbb01e23eafc7a333" translate="yes" xml:space="preserve">
          <source>In this regexp, you might expect the first minimal quantifier &lt;code&gt;.*?&lt;/code&gt; to match the empty string, because it is not constrained by a &lt;code&gt;^&lt;/code&gt; anchor to match the beginning of the word. Principle 0 applies here, however. Because it is possible for the whole regexp to match at the start of the string, it</source>
          <target state="translated">En esta expresi&amp;oacute;n regular, podr&amp;iacute;a esperar el primer cuantificador m&amp;iacute;nimo &lt;code&gt;.*?&lt;/code&gt; para que coincida con la cadena vac&amp;iacute;a, porque no est&amp;aacute; limitada por un ancla &lt;code&gt;^&lt;/code&gt; para que coincida con el comienzo de la palabra. Sin embargo, aqu&amp;iacute; se aplica el principio 0. Debido a que es posible que toda la expresi&amp;oacute;n regular coincida con el inicio de la cadena,</target>
        </trans-unit>
        <trans-unit id="1677ca4d68d5b3cd757901e02552a2ca6071fc8c" translate="yes" xml:space="preserve">
          <source>In this regular expression, the alternation matches either at the beginning or the end of the string since the anchors have a lower precedence than the alternation. With the &lt;code&gt;/g&lt;/code&gt; flag, the substitution makes all possible matches, so it gets both. Remember, the trailing newline matches the &lt;code&gt;\s+&lt;/code&gt;, and the &lt;code&gt;$&lt;/code&gt; anchor can match to the absolute end of the string, so the newline disappears too. Just add the newline to the output, which has the added benefit of preserving &quot;blank&quot; (consisting entirely of whitespace) lines which the &lt;code&gt;^\s+&lt;/code&gt; would remove all by itself:</source>
          <target state="translated">En esta expresi&amp;oacute;n regular, la alternancia coincide al principio o al final de la cadena, ya que los anclajes tienen una precedencia menor que la alternancia. Con la bandera &lt;code&gt;/g&lt;/code&gt; , la sustituci&amp;oacute;n hace todas las coincidencias posibles, por lo que obtiene ambas. Recuerde, el salto de l&amp;iacute;nea final coincide con &lt;code&gt;\s+&lt;/code&gt; , y el ancla &lt;code&gt;$&lt;/code&gt; puede coincidir con el final absoluto de la cadena, por lo que el salto de l&amp;iacute;nea tambi&amp;eacute;n desaparece. Simplemente agregue la nueva l&amp;iacute;nea a la salida, que tiene el beneficio adicional de preservar las l&amp;iacute;neas &quot;en blanco&quot; (que consisten enteramente en espacios en blanco) que el &lt;code&gt;^\s+&lt;/code&gt; eliminar&amp;iacute;a por s&amp;iacute; solo:</target>
        </trans-unit>
        <trans-unit id="77b676e373d337a1558a3681668f6ee37714295f" translate="yes" xml:space="preserve">
          <source>In this statement, &lt;code&gt;World&lt;/code&gt; is a regex and the &lt;code&gt;//&lt;/code&gt; enclosing &lt;code&gt;/World/&lt;/code&gt; tells Perl to search a string for a match. The operator &lt;code&gt;=~&lt;/code&gt; associates the string with the regex match and produces a true value if the regex matched, or false if the regex did not match. In our case, &lt;code&gt;World&lt;/code&gt; matches the second word in &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; , so the expression is true. This idea has several variations.</source>
          <target state="translated">En esta declaraci&amp;oacute;n, &lt;code&gt;World&lt;/code&gt; es una expresi&amp;oacute;n regular y &lt;code&gt;//&lt;/code&gt; que encierra &lt;code&gt;/World/&lt;/code&gt; le dice a Perl que busque una cadena para encontrar una coincidencia. El operador &lt;code&gt;=~&lt;/code&gt; asocia la cadena con la expresi&amp;oacute;n regular y produce un valor verdadero si la expresi&amp;oacute;n regular coincide, o falso si la expresi&amp;oacute;n regular no coincide. En nuestro caso, &lt;code&gt;World&lt;/code&gt; coincide con la segunda palabra en &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; , por lo que la expresi&amp;oacute;n es verdadera. Esta idea tiene varias variaciones.</target>
        </trans-unit>
        <trans-unit id="cb6960dd1a14a1f651e7be335db315d0fa175d1d" translate="yes" xml:space="preserve">
          <source>In this statement, &lt;code&gt;World&lt;/code&gt; is a regex and the &lt;code&gt;//&lt;/code&gt; enclosing &lt;code&gt;/World/&lt;/code&gt; tells Perl to search a string for a match. The operator &lt;code&gt;=~&lt;/code&gt; associates the string with the regex match and produces a true value if the regex matched, or false if the regex did not match. In our case, &lt;code&gt;World&lt;/code&gt; matches the second word in &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;, so the expression is true. This idea has several variations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c818981124c0efd397c772e8c5a5bccf099d60f4" translate="yes" xml:space="preserve">
          <source>In this way (as for perl's scalars) a pointer to a PerlIOBuf can be treated as a pointer to a PerlIOl.</source>
          <target state="translated">De esta manera (como en el caso de los escalares de perlino)un puntero a un PerlIOBuf puede ser tratado como un puntero a un PerlIOl.</target>
        </trans-unit>
        <trans-unit id="47c607bae4c1c842072097188930b7f5e712b730" translate="yes" xml:space="preserve">
          <source>In those 8 cases above, the value of EXPR is used directly as a boolean, so no smartmatching is done. You may think of &lt;code&gt;when&lt;/code&gt; as a smartsmartmatch.</source>
          <target state="translated">En los 8 casos anteriores, el valor de EXPR se usa directamente como booleano, por lo que no se realiza ninguna comparaci&amp;oacute;n inteligente. Puede pensar en &lt;code&gt;when&lt;/code&gt; como un smartsmartmatch.</target>
        </trans-unit>
        <trans-unit id="9186d74e76b80422b13adb44366ed78c8afac4f7" translate="yes" xml:space="preserve">
          <source>In those cases, it is easier to just append the filtering subroutine and any terminator specification directly to the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement that loads Filter::Simple, like so:</source>
          <target state="translated">En esos casos, es m&amp;aacute;s f&amp;aacute;cil agregar la subrutina de filtrado y cualquier especificaci&amp;oacute;n de terminador directamente a la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; que carga Filter :: Simple, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="db9ccecefd39facec4b439c7bf015dafd9285f67" translate="yes" xml:space="preserve">
          <source>In those cases, it is easier to just append the filtering subroutine and any terminator specification directly to the &lt;code&gt;use&lt;/code&gt; statement that loads Filter::Simple, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95167fe0e36a49f5080da73352ed44710a152f26" translate="yes" xml:space="preserve">
          <source>In those cases, you would turn off &lt;code&gt;strict 'refs'&lt;/code&gt; temporarily so you can play around with the symbol table. For example:</source>
          <target state="translated">En esos casos, desactivar&amp;iacute;a los &lt;code&gt;strict 'refs'&lt;/code&gt; temporalmente para poder jugar con la tabla de s&amp;iacute;mbolos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c6200c4c82d6daee49dcd17953c7919b7352b65f" translate="yes" xml:space="preserve">
          <source>In time-critical applications, it is worthwhile to avoid splitting into more fields than necessary. Thus, when assigning to a list, if LIMIT is omitted (or zero), then LIMIT is treated as though it were one larger than the number of variables in the list; for the following, LIMIT is implicitly 3:</source>
          <target state="translated">En las aplicaciones en las que el tiempo es un factor crítico,vale la pena evitar la división en más campos de los necesarios.Así,cuando se asigna a una lista,si se omite el LÍMITE (o cero),entonces el LÍMITE se trata como si fuera uno más que el número de variables de la lista;para lo siguiente,el LÍMITE es implícitamente 3:</target>
        </trans-unit>
        <trans-unit id="d371abf0abc6f35041f85b45c9387a28fef727f3" translate="yes" xml:space="preserve">
          <source>In turning &lt;a href=&quot;Foo::Bar&quot;&gt;Foo::Bar&lt;/a&gt; into http://whatever/Foo%3a%3aBar, what to put before the &quot;Foo%3a%3aBar&quot;. The default value is &quot;https://metacpan.org/pod/&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61aec1693f3cca77d878f9993860b197db04ab69" translate="yes" xml:space="preserve">
          <source>In turning &lt;a href=&quot;http://search.cpan.org/perldoc/Foo::Bar&quot;&gt;Foo::Bar&lt;/a&gt; into &lt;a href=&quot;http://whatever/Foo%3a%3aBar&quot;&gt;http://whatever/Foo%3a%3aBar&lt;/a&gt;, what to put before the &quot;Foo%3a%3aBar&quot;. The default value is &quot;&lt;a href=&quot;http://search.cpan.org/perldoc&quot;&gt;http://search.cpan.org/perldoc&lt;/a&gt;?&quot;.</source>
          <target state="translated">Al convertir &lt;a href=&quot;http://search.cpan.org/perldoc/Foo::Bar&quot;&gt;Foo :: Bar&lt;/a&gt; en &lt;a href=&quot;http://whatever/Foo%3a%3aBar&quot;&gt;http: // lo que sea / Foo% 3a% 3aBar&lt;/a&gt; , qu&amp;eacute; poner antes de &quot;Foo% 3a% 3aBar&quot;. El valor predeterminado es &quot; &lt;a href=&quot;http://search.cpan.org/perldoc&quot;&gt;http://search.cpan.org/perldoc&lt;/a&gt; ?&quot;.</target>
        </trans-unit>
        <trans-unit id="2f2439be782d8b7a999e11dc7c3353fae2805425" translate="yes" xml:space="preserve">
          <source>In turning &lt;code&gt;&lt;a href=&quot;http://man.he.net/man5/crontab&quot;&gt;crontab(5)&lt;/a&gt;&lt;/code&gt; into http://whatever/man/1/crontab, what to put before the &quot;1/crontab&quot;. The default value is &quot;http://man.he.net/man&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe66d5d405c8ef8a7eac08fc91eff0a843fd6e3f" translate="yes" xml:space="preserve">
          <source>In turning &lt;code&gt;&lt;i&gt;crontab(5)&lt;/i&gt;&lt;/code&gt; into &lt;a href=&quot;http://whatever/man/1/crontab&quot;&gt;http://whatever/man/1/crontab&lt;/a&gt;, what to put before the &quot;1/crontab&quot;. The default value is &quot;&lt;a href=&quot;http://man.he.net/man&quot;&gt;http://man.he.net/man&lt;/a&gt;&quot;.</source>
          <target state="translated">Al convertir &lt;code&gt;&lt;i&gt;crontab(5)&lt;/i&gt;&lt;/code&gt; en &lt;a href=&quot;http://whatever/man/1/crontab&quot;&gt;http: // lo que sea / man / 1 / crontab&lt;/a&gt; , qu&amp;eacute; poner antes de &quot;1 / crontab&quot;. El valor predeterminado es &quot; &lt;a href=&quot;http://man.he.net/man&quot;&gt;http://man.he.net/man&lt;/a&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="43281809d91fd31f1807b9436030386775e6651b" translate="yes" xml:space="preserve">
          <source>In typical VMS style, only the first letter of the value of this logical name is actually checked in a case insensitive mode, and it is considered enabled if it is the value &quot;T&quot;,&quot;1&quot; or &quot;E&quot;.</source>
          <target state="translated">En el estilo típico de VMS,sólo la primera letra del valor de este nombre lógico se comprueba realmente en un modo que no distingue entre mayúsculas y minúsculas,y se considera activada si es el valor &quot;T&quot;,&quot;1&quot; o &quot;E&quot;.</target>
        </trans-unit>
        <trans-unit id="573e7b50018345b4e76799c05af940dc27c74f2b" translate="yes" xml:space="preserve">
          <source>In ualarm() you tried to use number of microseconds or interval (also in microseconds) more than 1_000_000 and setitimer() is not available in your system to emulate that case.</source>
          <target state="translated">En ualarm()intentaste usar el número de microsegundos o intervalo (también en microsegundos)más de 1_000_000 y setimer()no está disponible en tu sistema para emular ese caso.</target>
        </trans-unit>
        <trans-unit id="f02423b74e4b6df478931aa6ac2f4633241db988" translate="yes" xml:space="preserve">
          <source>In verbose mode, a warning is printed if shadows are found (i.e., more than one POD file with the same POD name is found, e.g.</source>
          <target state="translated">En el modo verborreico,se imprime una advertencia si se encuentran sombras (es decir,si se encuentra más de un archivo POD con el mismo nombre POD,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="8a3ebab20ae57eb43347721d9e5a409b1ce17a43" translate="yes" xml:space="preserve">
          <source>In version 2.37 the first argument to the callback function was changed from string to object. This was done to make room for extensions and more detailed control. The object stringifies to the option name so this change should not introduce compatibility problems.</source>
          <target state="translated">En la versión 2.37 el primer argumento de la función de devolución de llamada se cambió de cadena a objeto.Esto se hizo para hacer espacio para las extensiones y un control más detallado.El objeto se encadena al nombre de la opción,por lo que este cambio no debería introducir problemas de compatibilidad.</target>
        </trans-unit>
        <trans-unit id="880a8be23ba2ee8779ff63078e49dfc5216b39eb" translate="yes" xml:space="preserve">
          <source>In versions 5.000 and 5.001, instead of using the above line, you will need to use the following line:</source>
          <target state="translated">En las versiones 5.000 y 5.001,en lugar de usar la línea anterior,tendrá que usar la siguiente línea:</target>
        </trans-unit>
        <trans-unit id="1cc474b32c69cb459158c3dcaef8e4f4b651d874" translate="yes" xml:space="preserve">
          <source>In versions 5.6 and later, Perl won't recompile the regular expression if the variable hasn't changed, so you probably don't need the &lt;code&gt;/o&lt;/code&gt; option. It doesn't hurt, but it doesn't help either. If you want any version of Perl to compile the regular expression only once even if the variable changes (thus, only using its initial value), you still need the &lt;code&gt;/o&lt;/code&gt;.</source>
          <target state="translated">En las versiones 5.6 y posteriores, Perl no recompilar&amp;aacute; la expresi&amp;oacute;n regular si la variable no ha cambiado, por lo que probablemente no necesite la opci&amp;oacute;n &lt;code&gt;/o&lt;/code&gt; . No duele, pero tampoco ayuda. Si desea que cualquier versi&amp;oacute;n de Perl compile la expresi&amp;oacute;n regular solo una vez, incluso si la variable cambia (por lo tanto, solo usa su valor inicial), a&amp;uacute;n necesita la &lt;code&gt;/o&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb448bdd461c35050663768e40f737fb69d01266" translate="yes" xml:space="preserve">
          <source>In versions of 5.002 prior to the gamma version, the test script in Example 1 will not function properly. You need to change the &quot;use lib&quot; line to read:</source>
          <target state="translated">En las versiones de 5.002 anteriores a la versión gamma,el guión de prueba del ejemplo 1 no funcionará correctamente.Necesitas cambiar la línea de &quot;use lib&quot; para leer:</target>
        </trans-unit>
        <trans-unit id="47fb4d46b782f60712d6e476480e232acaeda83d" translate="yes" xml:space="preserve">
          <source>In versions of 5.002 prior to version 5.002b1h, the test.pl file was not automatically created by h2xs. This means that you cannot say &quot;make test&quot; to run the test script. You will need to add the following line before the &quot;use extension&quot; statement:</source>
          <target state="translated">En las versiones de 5.002 anteriores a la 5.002b1h,el archivo test.pl no fue creado automáticamente por h2xs.Esto significa que no se puede decir &quot;hacer la prueba&quot; para ejecutar el script de prueba.Tendrá que añadir la siguiente línea antes de la declaración &quot;use extension&quot;:</target>
        </trans-unit>
        <trans-unit id="ac1080be96df0c995d03afc96266140d8a96249c" translate="yes" xml:space="preserve">
          <source>In versions of Perl prior to 5.004, per-locale collation was possible using the &lt;code&gt;I18N::Collate&lt;/code&gt; library module. This module is now mildly obsolete and should be avoided in new applications. The &lt;code&gt;LC_COLLATE&lt;/code&gt; functionality is now integrated into the Perl core language: One can use locale-specific scalar data completely normally with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , so there is no longer any need to juggle with the scalar references of &lt;code&gt;I18N::Collate&lt;/code&gt; .</source>
          <target state="translated">En versiones de Perl anteriores a la 5.004, la clasificaci&amp;oacute;n por configuraci&amp;oacute;n regional era posible utilizando el m&amp;oacute;dulo de biblioteca &lt;code&gt;I18N::Collate&lt;/code&gt; . Este m&amp;oacute;dulo ahora est&amp;aacute; ligeramente obsoleto y debe evitarse en nuevas aplicaciones. La funcionalidad &lt;code&gt;LC_COLLATE&lt;/code&gt; ahora est&amp;aacute; integrada en el lenguaje central de Perl: se pueden usar datos escalares espec&amp;iacute;ficos de la configuraci&amp;oacute;n regional de forma completamente normal con la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; , por lo que ya no es necesario hacer malabarismos con las referencias escalares de &lt;code&gt;I18N::Collate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="643eb53656f3778cf6551882e9802bdd3c4faa37" translate="yes" xml:space="preserve">
          <source>In versions of Perl prior to 5.004, per-locale collation was possible using the &lt;code&gt;I18N::Collate&lt;/code&gt; library module. This module is now mildly obsolete and should be avoided in new applications. The &lt;code&gt;LC_COLLATE&lt;/code&gt; functionality is now integrated into the Perl core language: One can use locale-specific scalar data completely normally with &lt;code&gt;use locale&lt;/code&gt;, so there is no longer any need to juggle with the scalar references of &lt;code&gt;I18N::Collate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0768c48f4e49e936d5436a0c1bb338303666576" translate="yes" xml:space="preserve">
          <source>In void context no args are returned, so it's more efficient to skip calling &lt;code&gt;leave_adjust_stacks()&lt;/code&gt;. Also in void context, a &lt;code&gt;nextstate&lt;/code&gt; op is likely to be imminently called which will do a &lt;code&gt;FREETMPS&lt;/code&gt;, so there's no need to do that either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a813c6d738225545b449a151bcdc156058f932" translate="yes" xml:space="preserve">
          <source>In your XS code, when you define an argument with a C type or when you are using a &lt;code&gt;CODE:&lt;/code&gt; and an &lt;code&gt;OUTPUT:&lt;/code&gt; section together with a C return type of your XSUB, it'll be the typemapping mechanism that makes this easy.</source>
          <target state="translated">En su c&amp;oacute;digo XS, cuando defina un argumento con un tipo C o cuando est&amp;eacute; usando una secci&amp;oacute;n &lt;code&gt;CODE:&lt;/code&gt; y una &lt;code&gt;OUTPUT:&lt;/code&gt; junto con un tipo de retorno C de su XSUB, ser&amp;aacute; el mecanismo de mapeo de tipos el que lo haga f&amp;aacute;cil.</target>
        </trans-unit>
        <trans-unit id="9357861451f0b2f036dafa4da40d9ece429bcae6" translate="yes" xml:space="preserve">
          <source>In-line functions that are in headers that are accessible to XS code need to be able to compile without warnings with commonly used extra compilation flags, such as gcc's &lt;code&gt;-Wswitch-default&lt;/code&gt; which warns whenever a switch statement does not have a &quot;default&quot; case. The use of these extra flags is to catch potential problems in legal C code, and is often used by Perl aggregators, such as Linux distributors.</source>
          <target state="translated">Las funciones en l&amp;iacute;nea que se encuentran en los encabezados que son accesibles al c&amp;oacute;digo XS deben poder compilarse sin advertencias con indicadores de compilaci&amp;oacute;n adicionales de uso com&amp;uacute;n, como gcc's &lt;code&gt;-Wswitch-default&lt;/code&gt; , que advierte siempre que una declaraci&amp;oacute;n de cambio no tiene un caso &quot;predeterminado&quot; . El uso de estos indicadores adicionales es para detectar problemas potenciales en el c&amp;oacute;digo C legal, y los agregadores de Perl, como los distribuidores de Linux, lo utilizan a menudo.</target>
        </trans-unit>
        <trans-unit id="1fac261b8677bb294fa8e76c7f44d73a02d84ebb" translate="yes" xml:space="preserve">
          <source>In-memory IO, scalar IO</source>
          <target state="translated">IO en memoria,IO escalar</target>
        </trans-unit>
        <trans-unit id="103334731df65dd74f84e4f87f0649c004460a4d" translate="yes" xml:space="preserve">
          <source>In-place sort an array of SV pointers with the given comparison routine, with various SORTf_* flag options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2427ea8046d416f8b78bbc872c1a8336130b5f" translate="yes" xml:space="preserve">
          <source>In-place sort an array of SV pointers with the given comparison routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022b1dbe77251c047456c4feb5d0409e122d6848" translate="yes" xml:space="preserve">
          <source>In-place upgrade of the supplied SV to a version object.</source>
          <target state="translated">Actualización in situ del SV suministrado a un objeto de la versión.</target>
        </trans-unit>
        <trans-unit id="1930e5219f1534978185f9ba376df01339047154" translate="yes" xml:space="preserve">
          <source>Inappropriate documentation</source>
          <target state="translated">Documentación inapropiada</target>
        </trans-unit>
        <trans-unit id="72a5f6c42a6c39ea891ecb24d22128fd281d0e18" translate="yes" xml:space="preserve">
          <source>Inc</source>
          <target state="translated">Inc</target>
        </trans-unit>
        <trans-unit id="70b0bede26554e7ae42316f8d3fd932a7cdc066c" translate="yes" xml:space="preserve">
          <source>Incidentally, note that each class's &lt;code&gt;%Lexicon&lt;/code&gt; inherits-and-extends the lexicons in its superclasses. This is not because these are special hashes</source>
          <target state="translated">Por cierto, tenga en cuenta que el &lt;code&gt;%Lexicon&lt;/code&gt; cada clase hereda y ampl&amp;iacute;a los l&amp;eacute;xicos de sus superclases. Esto no se debe a que estos sean hash especiales.</target>
        </trans-unit>
        <trans-unit id="56c1bcd0fe0c175606142de66e47a332c19454ad" translate="yes" xml:space="preserve">
          <source>Incidentally, note that there's no easy way to express a data paragraph starting with something that looks like a command. Consider:</source>
          <target state="translated">A propósito,note que no hay una forma fácil de expresar un párrafo de datos que comienza con algo que parece un comando.Considere:</target>
        </trans-unit>
        <trans-unit id="f4d888a4b6d2de9b573a52498056bdfd61c34932" translate="yes" xml:space="preserve">
          <source>Incidentally, note that we do not distinguish between these syntaxes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af23144864617d68a82ad427e6d70d917f0fe977" translate="yes" xml:space="preserve">
          <source>Incidentally, note the variance in the result values between the two examples; this is typical of benchmarking. If this were a real benchmark, you would probably want to run a lot more iterations.</source>
          <target state="translated">Por cierto,observe la variación de los valores de los resultados entre los dos ejemplos;esto es típico de los puntos de referencia.Si esto fuera un verdadero punto de referencia,probablemente querrías hacer muchas más iteraciones.</target>
        </trans-unit>
        <trans-unit id="11c54a59d8a9668fa20146e40c46116f6e7acc35" translate="yes" xml:space="preserve">
          <source>Include</source>
          <target state="translated">Include</target>
        </trans-unit>
        <trans-unit id="7f36757a0ff9e21d096da46852dca59689517203" translate="yes" xml:space="preserve">
          <source>Include /usr/ccs/bin/ in your PATH.</source>
          <target state="translated">Incluya /usr/ccs/bin/en su PATH.</target>
        </trans-unit>
        <trans-unit id="5f7213221d8f17a14d6c7b8882fe3f1c79362499" translate="yes" xml:space="preserve">
          <source>Include a &quot;POD ERRORS&quot; section in the outfile if there were any POD errors in the infile (default behaviour).</source>
          <target state="translated">Incluya una sección de &quot;ERRORES POD&quot; en el archivo de salida si hubo algún error POD en el archivo de entrada (comportamiento por defecto).</target>
        </trans-unit>
        <trans-unit id="1f63d3adcc78e2a751c9de88b5a592a5d6f05fed" translate="yes" xml:space="preserve">
          <source>Include a &quot;POD ERRORS&quot; section in the outfile if there were any POD errors in the infile. This section is included by default.</source>
          <target state="translated">Incluya una sección de &quot;ERRORES POD&quot; en el archivo de salida si hubo algún error POD en el archivo de entrada.Esta sección se incluye por defecto.</target>
        </trans-unit>
        <trans-unit id="1be836334b7992bf64bdd66feaf2cdd670e862a6" translate="yes" xml:space="preserve">
          <source>Include a single css source in the header:</source>
          <target state="translated">Incluya una sola fuente css en el encabezado:</target>
        </trans-unit>
        <trans-unit id="82da13ca7b8da7d4d7bd6d25f32b5e4df5ab790d" translate="yes" xml:space="preserve">
          <source>Include a single javascript source:</source>
          <target state="translated">Incluya una sola fuente de javascript:</target>
        </trans-unit>
        <trans-unit id="dacfcf246f0e94f511558260bbdd933b10ed8af6" translate="yes" xml:space="preserve">
          <source>Include any non-POD text from the input file in the output as well. Useful for viewing code documented with POD blocks with the POD rendered and the code left intact.</source>
          <target state="translated">Incluya cualquier texto no POD del archivo de entrada en la salida también.Útil para ver el código documentado con bloques POD con el POD renderizado y el código dejado intacto.</target>
        </trans-unit>
        <trans-unit id="b3aefa9c8a28918cfdeb274cb63c2499f4f13ccf" translate="yes" xml:space="preserve">
          <source>Include code for safely storing static data in the .xs file. Extensions that do no make use of static data can ignore this option.</source>
          <target state="translated">Incluya el código para almacenar de forma segura los datos estáticos en el archivo .xs.Las extensiones que no hacen uso de los datos estáticos pueden ignorar esta opción.</target>
        </trans-unit>
        <trans-unit id="73830e720872f365cfd2f2dbd3697deb29a3d139" translate="yes" xml:space="preserve">
          <source>Include file dirs eg: &lt;code&gt;&quot;-I/usr/5include -I/path/to/inc&quot;&lt;/code&gt;</source>
          <target state="translated">Incluir directorios de archivos, por ejemplo: &lt;code&gt;&quot;-I/usr/5include -I/path/to/inc&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a46c6bf1682df8e2b9b455d4e2e63979aa173ed" translate="yes" xml:space="preserve">
          <source>Include list of valid licenses from &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; 0.17 rather than linking to the module, with minor updates to text and links to reflect versions at the time of publication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233868d9365dc18e1add2e1bf54ab892c2b257e4" translate="yes" xml:space="preserve">
          <source>Include list of valid licenses from &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; 0.18 rather than linking to the module, with minor updates to text and links to reflect versions at the time of publication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40111b47c700ae2f5642d997d209744f7e18b0e6" translate="yes" xml:space="preserve">
          <source>Include list of valid licenses from &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; 0.2611 rather than linking to the module, with minor updates to text and links to reflect versions at the time of publication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758b345104d352569d53c61623a248e076a8b20f" translate="yes" xml:space="preserve">
          <source>Include list of valid licenses from &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; 0.2805 rather than linking to the module, with minor updates to text and links to reflect versions at the time of publication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f157fc1eac4aa33c6e19320dad9c45ca1ddace2f" translate="yes" xml:space="preserve">
          <source>Include list of valid licenses from &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; 0.2807 rather than linking to the module, with minor updates to text and links to reflect versions at the time of publication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca280b8dc9676e12b899416fb9b80aa66ff24f11" translate="yes" xml:space="preserve">
          <source>Include recommended modules?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acbf3f254752a10abcbbc0af380ce1701ab1294" translate="yes" xml:space="preserve">
          <source>Include suggested modules?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7dea1bf3fcc056eca7b649b6605fbf3217e27a" translate="yes" xml:space="preserve">
          <source>Include tests with your module</source>
          <target state="translated">Incluya pruebas con su módulo</target>
        </trans-unit>
        <trans-unit id="44cae264b95e40204b6c9817100d817393044faa" translate="yes" xml:space="preserve">
          <source>Include the `nstore' option to have the &lt;code&gt;Storable&lt;/code&gt; database written in `network order'. (See &lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt; for more details about this.)</source>
          <target state="translated">Incluya la opci&amp;oacute;n &quot;nstore&quot; para que la base de datos &lt;code&gt;Storable&lt;/code&gt; escriba en &quot;orden de red&quot;. (Consulte &lt;a href=&quot;storable&quot;&gt;Almacenable&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre esto).</target>
        </trans-unit>
        <trans-unit id="428c39cb578db360bfc5803c8ec5f4e60b61ea16" translate="yes" xml:space="preserve">
          <source>Include the code from the &lt;b&gt;.h&lt;/b&gt; file as a comment in the &lt;b&gt;.ph&lt;/b&gt; file. This is primarily used for debugging</source>
          <target state="translated">Incluya el c&amp;oacute;digo del archivo &lt;b&gt;.h&lt;/b&gt; como comentario en el archivo &lt;b&gt;.ph&lt;/b&gt; . Esto se usa principalmente para depurar</target>
        </trans-unit>
        <trans-unit id="5318c44a39f5f77944d683ed2f0ae1a7ab04539f" translate="yes" xml:space="preserve">
          <source>Include the following line in the XS section of your XS file: (don't break the line)</source>
          <target state="translated">Incluya la siguiente línea en la sección XS de su archivo XS:(no rompa la línea)</target>
        </trans-unit>
        <trans-unit id="eb7645ad7831d7d6fd6181e27396b77155390482" translate="yes" xml:space="preserve">
          <source>Include the main program in the output, even if subroutines were also specified. This rendering is normally suppressed when a subroutine name or reference is given.</source>
          <target state="translated">Incluir el programa principal en la salida,aunque también se hayan especificado subrutinas.Esta representación se suprime normalmente cuando se da un nombre o una referencia de subrutina.</target>
        </trans-unit>
        <trans-unit id="39d690d519d42e4c1222e708f1a7882603060ecf" translate="yes" xml:space="preserve">
          <source>Include verbose configuration data in the report.</source>
          <target state="translated">Incluya datos de configuración verbosos en el informe.</target>
        </trans-unit>
        <trans-unit id="520eeda3e72b576dbaab99011b2e61a86a377e9b" translate="yes" xml:space="preserve">
          <source>Included 'name', 'version', 'license', 'distribution_type', 'requires', 'recommends', 'build_requires', 'conflicts', 'dynamic_config', 'generated_by'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af107d55e07795d28db937bc5e2e6b3d1acdce5" translate="yes" xml:space="preserve">
          <source>Included in the official Perl distribution, as in a standard module, a standard tool, or a standard Perl &lt;b&gt;manpage&lt;/b&gt;.</source>
          <target state="translated">Incluido en la distribuci&amp;oacute;n oficial de Perl, como en un m&amp;oacute;dulo est&amp;aacute;ndar, una herramienta est&amp;aacute;ndar o una p&amp;aacute;gina de &lt;b&gt;manual de&lt;/b&gt; Perl est&amp;aacute;ndar .</target>
        </trans-unit>
        <trans-unit id="0c36d5529b0434732ae50f5c4cfddc9ab638ebdc" translate="yes" xml:space="preserve">
          <source>Included recommended modules?</source>
          <target state="translated">¿Incluyó los módulos recomendados?</target>
        </trans-unit>
        <trans-unit id="2d5cfde693773293f9c93c5da459379d1390e74a" translate="yes" xml:space="preserve">
          <source>Included suggested modules?</source>
          <target state="translated">¿Incluyó los módulos sugeridos?</target>
        </trans-unit>
        <trans-unit id="fd1eb7c27a0ef162dc3c74b06bcd124d36810aee" translate="yes" xml:space="preserve">
          <source>Included with the standard Cygwin netrelease is the inetutils package which includes libutil.a.</source>
          <target state="translated">El paquete de inetutils,que incluye libutil.a,está incluido en la versión estándar de Cygwin netrelease.</target>
        </trans-unit>
        <trans-unit id="5d99a8e54557c65faa85e976aa75857ac0de5775" translate="yes" xml:space="preserve">
          <source>Includes &lt;code&gt;FSCTL_SET_REPARSE_POINT&lt;/code&gt;, &lt;code&gt;FSCTL_GET_REPARSE_POINT&lt;/code&gt;, &lt;code&gt;FSCTL_DELETE_REPARSE_POINT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb2c4473fcc6d850527caa45adfc81f1b873a15" translate="yes" xml:space="preserve">
          <source>Includes &lt;code&gt;IOCTL_DISK_FORMAT_TRACKS&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_FORMAT_TRACKS_EX&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_GET_DRIVE_GEOMETRY&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_GET_DRIVE_LAYOUT&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_GET_MEDIA_TYPES&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_GET_PARTITION_INFO&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_HISTOGRAM_DATA&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_HISTOGRAM_RESET&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_HISTOGRAM_STRUCTURE&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_IS_WRITABLE&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_LOGGING&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_PERFORMANCE&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_REASSIGN_BLOCKS&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_REQUEST_DATA&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_REQUEST_STRUCTURE&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_SET_DRIVE_LAYOUT&lt;/code&gt;, &lt;code&gt;IOCTL_DISK_SET_PARTITION_INFO&lt;/code&gt;, and &lt;code&gt;IOCTL_DISK_VERIFY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62deb9b6c9960c6cf27bcef72a0cb725d958b5ee" translate="yes" xml:space="preserve">
          <source>Includes the closing tag of &amp;lt;/title&amp;gt; and through the rest of the head till the opening of the body</source>
          <target state="translated">Incluye la etiqueta de cierre de &amp;lt;/title&amp;gt; y a trav&amp;eacute;s del resto de la cabeza hasta la apertura del cuerpo.</target>
        </trans-unit>
        <trans-unit id="33e824f5c1da8228b52bc56b109b9797a650528d" translate="yes" xml:space="preserve">
          <source>Inclusion of library modules is better done with the &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; operators, which also do automatic error checking and raise an exception if there's a problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abdbb8c9871ea5d015e2e60e10f71a6f7c5bffa" translate="yes" xml:space="preserve">
          <source>Inclusion of library modules is better done with the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; operators, which also do automatic error checking and raise an exception if there's a problem.</source>
          <target state="translated">La inclusi&amp;oacute;n de m&amp;oacute;dulos de biblioteca se realiza mejor con los operadores de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , que tambi&amp;eacute;n realizan una verificaci&amp;oacute;n autom&amp;aacute;tica de errores y generan una excepci&amp;oacute;n si hay un problema.</target>
        </trans-unit>
        <trans-unit id="fc7468d33bdeb93695da594528f2501435fe4708" translate="yes" xml:space="preserve">
          <source>Inclusion of library modules is better done with the &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; operators, which also do automatic error checking and raise an exception if there's a problem.</source>
          <target state="translated">La inclusi&amp;oacute;n de m&amp;oacute;dulos de biblioteca se realiza mejor con los operadores de &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , que tambi&amp;eacute;n realizan una verificaci&amp;oacute;n autom&amp;aacute;tica de errores y generan una excepci&amp;oacute;n si hay un problema.</target>
        </trans-unit>
        <trans-unit id="d536a03f0c3143f6e1f810634a3c64f1cee1463a" translate="yes" xml:space="preserve">
          <source>Incompatibility with AIX Toolbox lib gdbm</source>
          <target state="translated">Incompatibilidad con AIX Toolbox lib gdbm</target>
        </trans-unit>
        <trans-unit id="e8ee16b208edc6448df6fc055ab0018eee84b8c5" translate="yes" xml:space="preserve">
          <source>Incomplete expression within '(?[ ])' in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53d2a95e2a16580ce48c32385151c299f727d6f" translate="yes" xml:space="preserve">
          <source>Inconsistent hierarchy during C3 merge of class '%s': merging failed on parent '%s'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53b7251c10e4fb16639ff0eb74e48d3fdb255f3" translate="yes" xml:space="preserve">
          <source>Increment OBJ by one.</source>
          <target state="translated">Incrementar OBJ por uno.</target>
        </trans-unit>
        <trans-unit id="a3b00269821fb57d8ea2de1fc824b0f5f9a60902" translate="yes" xml:space="preserve">
          <source>Increment an SV's reference count. Use the &lt;code&gt;SvREFCNT_inc()&lt;/code&gt; wrapper instead.</source>
          <target state="translated">Incrementar el recuento de referencia de un SV. En su lugar, utilice el &lt;code&gt;SvREFCNT_inc()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e74e496959812fcc073992ca705206317cb9544" translate="yes" xml:space="preserve">
          <source>Increment the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt; . The pointer to the &lt;code&gt;refcounted_he&lt;/code&gt; is also returned. It is safe to pass a null pointer to this function: no action occurs and a null pointer is returned.</source>
          <target state="translated">Incrementa el recuento de referencias de un &lt;code&gt;refcounted_he&lt;/code&gt; . Tambi&amp;eacute;n se devuelve el puntero a &lt;code&gt;refcounted_he&lt;/code&gt; . Es seguro pasar un puntero nulo a esta funci&amp;oacute;n: no se produce ninguna acci&amp;oacute;n y se devuelve un puntero nulo.</target>
        </trans-unit>
        <trans-unit id="9858409e70adfac3f5375aa7bf5fb0c442d68e13" translate="yes" xml:space="preserve">
          <source>Increment the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt;. The pointer to the &lt;code&gt;refcounted_he&lt;/code&gt; is also returned. It is safe to pass a null pointer to this function: no action occurs and a null pointer is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3802b6aa343742e73ae6047c081fca9075a08d1" translate="yes" xml:space="preserve">
          <source>Increment the version number for every change, no matter how small</source>
          <target state="translated">Incrementar el número de versión para cada cambio,no importa cuán pequeño sea</target>
        </trans-unit>
        <trans-unit id="2478eca32c2a75c27f5473c45c519262b31bc3ab" translate="yes" xml:space="preserve">
          <source>Increments $x by 1 and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c98c7bfa60bc9d7d9626649411d920868a3e57d" translate="yes" xml:space="preserve">
          <source>Increments &lt;code&gt;PL_sub_generation&lt;/code&gt; , which invalidates method caching in all packages.</source>
          <target state="translated">Incrementa &lt;code&gt;PL_sub_generation&lt;/code&gt; , lo que invalida el almacenamiento en cach&amp;eacute; del m&amp;eacute;todo en todos los paquetes.</target>
        </trans-unit>
        <trans-unit id="bef0acad6c664dfddc6d4ee1b5ec03b4981c74c9" translate="yes" xml:space="preserve">
          <source>Increments &lt;code&gt;PL_sub_generation&lt;/code&gt;, which invalidates method caching in all packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3272c368109726f88d497737f134b46e95de8369" translate="yes" xml:space="preserve">
          <source>Increments the reference count of the given SV, returning the SV.</source>
          <target state="translated">Incrementa la cuenta de referencia del SV dado,devolviendo el SV.</target>
        </trans-unit>
        <trans-unit id="b3fb59bb686d8260401f92a3aa6f2bbde8cfdc66" translate="yes" xml:space="preserve">
          <source>Indeed, a negative real number can be noted &lt;code&gt;[x,pi]&lt;/code&gt; (the modulus</source>
          <target state="translated">De hecho, se puede observar un n&amp;uacute;mero real negativo &lt;code&gt;[x,pi]&lt;/code&gt; (el m&amp;oacute;dulo</target>
        </trans-unit>
        <trans-unit id="a04774d4b73d320e20f71b059e1b914a71747c31" translate="yes" xml:space="preserve">
          <source>Indeed, to terminate the cycle, the $cnt should become false. However, the operator &lt;code&gt;bool&lt;/code&gt; for checking falsity is overloaded (this time via overloaded &lt;code&gt;&quot;&quot;&lt;/code&gt; ), and returns a long string, thus any object of type &lt;code&gt;symbolic&lt;/code&gt; is true. To overcome this, we need a way to compare an object to 0. In fact, it is easier to write a numeric conversion routine.</source>
          <target state="translated">De hecho, para terminar el ciclo, $ cnt deber&amp;iacute;a volverse falso. Sin embargo, el operador &lt;code&gt;bool&lt;/code&gt; para verificar la falsedad est&amp;aacute; sobrecargado (esta vez a trav&amp;eacute;s de sobrecargado &lt;code&gt;&quot;&quot;&lt;/code&gt; ) y devuelve una cadena larga, por lo que cualquier objeto de tipo &lt;code&gt;symbolic&lt;/code&gt; es verdadero. Para superar esto, necesitamos una forma de comparar un objeto con 0. De hecho, es m&amp;aacute;s f&amp;aacute;cil escribir una rutina de conversi&amp;oacute;n num&amp;eacute;rica.</target>
        </trans-unit>
        <trans-unit id="35950a01017cb2dc9bdf8ca69f4b06c266fec7af" translate="yes" xml:space="preserve">
          <source>Indeed, to terminate the cycle, the $cnt should become false. However, the operator &lt;code&gt;bool&lt;/code&gt; for checking falsity is overloaded (this time via overloaded &lt;code&gt;&quot;&quot;&lt;/code&gt;), and returns a long string, thus any object of type &lt;code&gt;symbolic&lt;/code&gt; is true. To overcome this, we need a way to compare an object to 0. In fact, it is easier to write a numeric conversion routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ba8e1b3397c92c36fc4b8d835f19b0c882946b" translate="yes" xml:space="preserve">
          <source>Indent lines by multiples of</source>
          <target state="translated">Líneas de sangría por múltiplos de</target>
        </trans-unit>
        <trans-unit id="af112fcfab59a5128ecdee5791e9c1c13e552da5" translate="yes" xml:space="preserve">
          <source>Indentation on line %d of here-doc doesn't match delimiter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc3818470788f955b725157028fb28b522ca6be" translate="yes" xml:space="preserve">
          <source>Indented Here-docs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62114f3245956b96ef644ac166335fb4a4e9a90b" translate="yes" xml:space="preserve">
          <source>Independent of which seed is used in the hash function, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; return items in a per-hash randomized order. Modifying a hash by insertion will change the iteration order of that hash. This behavior can be overridden by using &lt;code&gt;hash_traversal_mask()&lt;/code&gt; from &lt;a href=&quot;hash/util&quot;&gt;Hash::Util&lt;/a&gt; or by using the PERL_PERTURB_KEYS environment variable, see &lt;a href=&quot;perlrun#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS in perlrun&lt;/a&gt;. Note that this feature controls the &quot;visible&quot; order of the keys, and not the actual order they are stored in.</source>
          <target state="translated">Independientemente de la semilla que se utilice en la funci&amp;oacute;n hash, las &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , los &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; elemento devuelve en un orden aleatorio por hash. La modificaci&amp;oacute;n de un hash por inserci&amp;oacute;n cambiar&amp;aacute; el orden de iteraci&amp;oacute;n de ese hash. Este comportamiento se puede anular usando &lt;code&gt;hash_traversal_mask()&lt;/code&gt; de &lt;a href=&quot;hash/util&quot;&gt;Hash :: Util&lt;/a&gt; o usando la variable de entorno PERL_PERTURB_KEYS, vea &lt;a href=&quot;perlrun#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS en perlrun&lt;/a&gt; . Tenga en cuenta que esta funci&amp;oacute;n controla el orden &quot;visible&quot; de las claves, y no el orden real en el que se almacenan.</target>
        </trans-unit>
        <trans-unit id="e0d3b18e6e5a02cb47428995e30bd3cf0aea8164" translate="yes" xml:space="preserve">
          <source>Independent of which seed is used in the hash function, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, and &lt;code&gt;each&lt;/code&gt; return items in a per-hash randomized order. Modifying a hash by insertion will change the iteration order of that hash. This behavior can be overridden by using &lt;code&gt;hash_traversal_mask()&lt;/code&gt; from &lt;a href=&quot;Hash::Util&quot;&gt;Hash::Util&lt;/a&gt; or by using the PERL_PERTURB_KEYS environment variable, see &lt;a href=&quot;perlrun#PERL_PERTURB_KEYS&quot;&gt;&quot;PERL_PERTURB_KEYS&quot; in perlrun&lt;/a&gt;. Note that this feature controls the &quot;visible&quot; order of the keys, and not the actual order they are stored in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074fa110a121b41d1fc8547d15dc9f9c647ba94b" translate="yes" xml:space="preserve">
          <source>Independent subexpressions</source>
          <target state="translated">Subexpresiones independientes</target>
        </trans-unit>
        <trans-unit id="af34ac32829575a31a5420b259a403615ce25ff8" translate="yes" xml:space="preserve">
          <source>Index.txt</source>
          <target state="translated">Index.txt</target>
        </trans-unit>
        <trans-unit id="f095033a2da35066ce69235bfd888bf108da82db" translate="yes" xml:space="preserve">
          <source>Index/Value Array Slices</source>
          <target state="translated">Cortes de la matriz de índice/valor</target>
        </trans-unit>
        <trans-unit id="ea194faeed183e57e74609dce9cd3c08f293d1f1" translate="yes" xml:space="preserve">
          <source>Indexing distributions a la PAUSE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967ce367d89dccc133d71049f1197d29561b3726" translate="yes" xml:space="preserve">
          <source>India</source>
          <target state="translated">India</target>
        </trans-unit>
        <trans-unit id="9376bb53130ade1b5bef94ae526efe4afa9ba571" translate="yes" xml:space="preserve">
          <source>India Pale Ale. Also the International Phonetic Alphabet, the standard alphabet used for phonetic notation worldwide. Draws heavily on Unicode, including many combining characters.</source>
          <target state="translated">India Pale Ale.También el Alfabeto Fonético Internacional,el alfabeto estándar utilizado para la notación fonética en todo el mundo.Se basa en gran medida en el Unicode,incluyendo muchos caracteres de combinación.</target>
        </trans-unit>
        <trans-unit id="5d00be2150a7a2970ecf83338644746fe69f68bc" translate="yes" xml:space="preserve">
          <source>Indiana</source>
          <target state="translated">Indiana</target>
        </trans-unit>
        <trans-unit id="7939b23cc59e5fecb713c284b9570bf5c06bc4a8" translate="yes" xml:space="preserve">
          <source>Indicate if List::Util was compiled with a C compiler</source>
          <target state="translated">Indique si la lista::Util fue compilada con un compilador C</target>
        </trans-unit>
        <trans-unit id="257f1f56edc7d22d13ca3e932a232d7b1ce1cb6a" translate="yes" xml:space="preserve">
          <source>Indicates how many bits are produced by the function used to generate normalized random numbers.</source>
          <target state="translated">Indica cuántos bits produce la función utilizada para generar números aleatorios normalizados.</target>
        </trans-unit>
        <trans-unit id="f59dd948b843172b40aa09dfd5bd724d214b6e0d" translate="yes" xml:space="preserve">
          <source>Indicates if SSL support is available. When called as a class object, it checks for the correct version of &lt;a href=&quot;Net::SSLeay&quot;&gt;Net::SSLeay&lt;/a&gt; and &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt;. When called as an object methods, if &lt;code&gt;SSL_verify&lt;/code&gt; is true or if &lt;code&gt;SSL_verify_mode&lt;/code&gt; is set in &lt;code&gt;SSL_options&lt;/code&gt;, it checks that a CA file is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc34d4e90099631370d69b93d5e19f62c32c10d" translate="yes" xml:space="preserve">
          <source>Indicates if a connection to a peer is being kept alive, per the &lt;code&gt;keep_alive&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e61b5d3c6d9951043a7c42ee4ac908615e6dda5" translate="yes" xml:space="preserve">
          <source>Indicates if the test suite is currently passing.</source>
          <target state="translated">Indica si el conjunto de pruebas está pasando actualmente.</target>
        </trans-unit>
        <trans-unit id="ef01c58c919f2b098417df7378a5f02c4c2d45a0" translate="yes" xml:space="preserve">
          <source>Indicates that &lt;code&gt;$sTargetPath&lt;/code&gt; will be a raw Windows NT object name. This usually means that &lt;code&gt;$sTargetPath&lt;/code&gt; starts with &lt;code&gt;&quot;\\Device\\&quot;&lt;/code&gt;. Note that you cannot use &lt;code&gt;&quot;/&quot;&lt;/code&gt; in place of &lt;code&gt;&quot;\\&quot;&lt;/code&gt; in raw target path names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4520cd78eb8d8cd3353abddf71f5cfdf3e0ea242" translate="yes" xml:space="preserve">
          <source>Indicates that Ctrl/U, Ctrl/R, and DELETE are not to be considered control commands on terminal input, but are to be passed to the application program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c8d4afc13dccaac0824429842e2b3486822df1" translate="yes" xml:space="preserve">
          <source>Indicates that a user-supplied typemap should take precedence over the default typemaps. A single typemap may be specified as a string, or multiple typemaps can be specified in an array reference, with the last typemap having the highest precedence.</source>
          <target state="translated">Indica que un mapa tipográfico suministrado por el usuario debe tener prioridad sobre los mapas tipográficos predeterminados.Se puede especificar un solo mapa tipográfico como una cadena,o se pueden especificar múltiples mapas tipográficos en una referencia de matriz,teniendo el último mapa tipográfico la mayor precedencia.</target>
        </trans-unit>
        <trans-unit id="a07031906aeffe3119baa721e29202522fd91917" translate="yes" xml:space="preserve">
          <source>Indicates that a user-supplied typemap should take precedence over the default typemaps. This option may be used multiple times, with the last typemap having the highest precedence.</source>
          <target state="translated">Indica que un mapa tipográfico suministrado por el usuario debe tener prioridad sobre los mapas tipográficos predeterminados.Esta opción puede utilizarse varias veces,teniendo el último mapa de caracteres la mayor precedencia.</target>
        </trans-unit>
        <trans-unit id="2a6c6be6a26747d93fbb6c3ceadc3f2de48a2c99" translate="yes" xml:space="preserve">
          <source>Indicates that arguments returned from a callback should be discarded. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Indica que los argumentos devueltos por una devoluci&amp;oacute;n de llamada deben descartarse. Ver &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0527e8a268302f8a5a261750f72fb958d828bf1d" translate="yes" xml:space="preserve">
          <source>Indicates that no arguments are being sent to a callback. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Indica que no se env&amp;iacute;an argumentos a una devoluci&amp;oacute;n de llamada. Ver &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1a4d2b29fe4bc866080992a5b7a34bdbecb2aeb" translate="yes" xml:space="preserve">
          <source>Indicates that the caller is not interested in the hostname of the result, so it does not have to be converted. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned as the hostname.</source>
          <target state="translated">Indica que la persona que llama no est&amp;aacute; interesada en el nombre de host del resultado, por lo que no es necesario convertirlo. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devolver&amp;aacute; como nombre de host.</target>
        </trans-unit>
        <trans-unit id="91d2892aa8952e09a191501575b51fbbf525086f" translate="yes" xml:space="preserve">
          <source>Indicates that the caller is not interested in the hostname of the result, so it does not have to be converted. &lt;code&gt;undef&lt;/code&gt; will be returned as the hostname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ec72841bfda828e77f110fabfe3b01a8c116ba" translate="yes" xml:space="preserve">
          <source>Indicates that the caller is not interested in the service name of the result, so it does not have to be converted. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned as the service name.</source>
          <target state="translated">Indica que la persona que llama no est&amp;aacute; interesada en el nombre de servicio del resultado, por lo que no es necesario convertirlo. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devolver&amp;aacute; como el nombre del servicio.</target>
        </trans-unit>
        <trans-unit id="52065ec2a07be88eb3f6bb4c9b96986da981df93" translate="yes" xml:space="preserve">
          <source>Indicates that the caller is not interested in the service name of the result, so it does not have to be converted. &lt;code&gt;undef&lt;/code&gt; will be returned as the service name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f532e8b4a0494e58b3d4e84b40bc705bd9387b6c" translate="yes" xml:space="preserve">
          <source>Indicates that the caller will pass a numeric address, rather than a hostname, and that getaddrinfo() must not perform a resolve operation on this name. This flag will prevent a possibly-slow network lookup operation, and instead return an error if a hostname is passed.</source>
          <target state="translated">Indica que el llamante pasará una dirección numérica,en lugar de un nombre de host,y que getaddrinfo()no debe realizar una operación de resolución sobre este nombre.Este indicador evitará una posible operación de búsqueda de red lenta,y en su lugar devolverá un error si se pasa un nombre de host.</target>
        </trans-unit>
        <trans-unit id="3c8087750e8c32a23d6ccd2949d0b7dadc5ebeea" translate="yes" xml:space="preserve">
          <source>Indicates that the caller wishes the canonical hostname (&lt;code&gt;canonname&lt;/code&gt; ) field of the result to be filled in.</source>
          <target state="translated">Indica que la persona que llama desea que se &lt;code&gt;canonname&lt;/code&gt; campo can&amp;oacute;nico de nombre de host ( canonname ) del resultado.</target>
        </trans-unit>
        <trans-unit id="765c5439c71bb5dd46ae2b457c3aebf852e2ce63" translate="yes" xml:space="preserve">
          <source>Indicates that the caller wishes the canonical hostname (&lt;code&gt;canonname&lt;/code&gt;) field of the result to be filled in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a02454d6f3918d6c495eef14a92688abca3837e" translate="yes" xml:space="preserve">
          <source>Indicates that the referenced subroutine is a method. A subroutine so marked will not trigger the &quot;Ambiguous call resolved as CORE::%s&quot; warning.</source>
          <target state="translated">Indica que la subrutina de referencia es un método.Una subrutina así marcada no activará la advertencia &quot;Llamada ambigua resuelta como CORE::%s&quot;.</target>
        </trans-unit>
        <trans-unit id="1c805274f5974d7ec81414a21a79ac4005ac17f0" translate="yes" xml:space="preserve">
          <source>Indicates that the referenced subroutine is a valid lvalue and can be assigned to. The subroutine must return a modifiable value such as a scalar variable, as described in &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Indica que la subrutina a la que se hace referencia es un valor l v&amp;aacute;lido y se puede asignar. La subrutina debe devolver un valor modificable, como una variable escalar, como se describe en &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="945cc6067d92cdd88f1d4d49015ca5f672222998" translate="yes" xml:space="preserve">
          <source>Indicates that the referenced variable can be shared across different threads when used in conjunction with the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; and &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt; modules.</source>
          <target state="translated">Indica que la variable a la que se hace referencia se puede compartir entre diferentes subprocesos cuando se utiliza junto con los &lt;a href=&quot;threads&quot;&gt;subprocesos&lt;/a&gt; y &lt;a href=&quot;threads/shared&quot;&gt;subprocesos ::&lt;/a&gt; m&amp;oacute;dulos compartidos .</target>
        </trans-unit>
        <trans-unit id="11cf21dbf5fe03fde0078615e81d4953585daf83" translate="yes" xml:space="preserve">
          <source>Indicates that the referenced variable can be shared across different threads when used in conjunction with the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; and &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt; modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dc796b3c6e09f2adbe1df261ece3a878874b6e" translate="yes" xml:space="preserve">
          <source>Indicates that the socket address relates to a &lt;code&gt;SOCK_DGRAM&lt;/code&gt; socket, for the services whose name differs between TCP and UDP protocols.</source>
          <target state="translated">Indica que la direcci&amp;oacute;n del socket se relaciona con un socket &lt;code&gt;SOCK_DGRAM&lt;/code&gt; , para los servicios cuyo nombre difiere entre los protocolos TCP y UDP.</target>
        </trans-unit>
        <trans-unit id="d2c743e25365a9bdf3ff9b009f1ca948b97e6afb" translate="yes" xml:space="preserve">
          <source>Indicates that this resolution is for a local bind() for a passive (i.e. listening) socket, rather than an active (i.e. connecting) socket.</source>
          <target state="translated">Indica que esta resolución es para un bind()local para una toma pasiva (es decir,de escucha),en lugar de una toma activa (es decir,de conexión).</target>
        </trans-unit>
        <trans-unit id="1f10eaccf1b997cf7e5e0f8a8f4fab0ca55e7525" translate="yes" xml:space="preserve">
          <source>Indicates the macro to be used to generate normalized random numbers. Uses randfunc, often divided by (double) (((unsigned long) 1 &amp;lt;&amp;lt; randbits)) in order to normalize the result. In C programs, the macro &lt;code&gt;Drand01&lt;/code&gt; is mapped to drand01.</source>
          <target state="translated">Indica la macro que se utilizar&amp;aacute; para generar n&amp;uacute;meros aleatorios normalizados. Utiliza randfunc, a menudo dividido por (double) (((unsigned long) 1 &amp;lt;&amp;lt; randbits)) para normalizar el resultado. En los programas C, la macro &lt;code&gt;Drand01&lt;/code&gt; se asigna a drand01.</target>
        </trans-unit>
        <trans-unit id="46fbaffe89877f1dd0586f026a063f6bfd1ece0d" translate="yes" xml:space="preserve">
          <source>Indicates the name of the random number function to use. Values include drand48, random, and rand. In C programs, the &lt;code&gt;Drand01&lt;/code&gt; macro is defined to generate uniformly distributed random numbers over the range [0., 1.[ (see drand01 and nrand).</source>
          <target state="translated">Indica el nombre de la funci&amp;oacute;n de n&amp;uacute;mero aleatorio que se utilizar&amp;aacute;. Los valores incluyen drand48, random y rand. En los programas C, la macro &lt;code&gt;Drand01&lt;/code&gt; se define para generar n&amp;uacute;meros aleatorios distribuidos uniformemente en el rango [0., 1. [(ver drand01 y nrand).</target>
        </trans-unit>
        <trans-unit id="0e9d38aea41337c4a340bd6ff37e0fceaaf530c7" translate="yes" xml:space="preserve">
          <source>Indicates the random number generating seed function. Values include srand48, srandom, and srand.</source>
          <target state="translated">Indica la función de generación de números aleatorios de semillas.Los valores incluyen srand48,srandom y srand.</target>
        </trans-unit>
        <trans-unit id="cd655229f991b7aec42a78f98c296efa6aab20f6" translate="yes" xml:space="preserve">
          <source>Indicates the tool that was used to create this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e351cd851905a73031d78312feecb33ffe731a" translate="yes" xml:space="preserve">
          <source>Indicates the type of the argument of the seedfunc.</source>
          <target state="translated">Indica el tipo de argumento de la semilla.</target>
        </trans-unit>
        <trans-unit id="157e831f2a32e9a34450598504f4e81bdfe93334" translate="yes" xml:space="preserve">
          <source>Indicates to the &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; that things are going so badly all testing should terminate. This includes running any additional test scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2261f14a4235af1795b8d1185c5372fb55826237" translate="yes" xml:space="preserve">
          <source>Indicates to the &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; that things are going so badly all testing should terminate. This includes running any additional test scripts.</source>
          <target state="translated">Indica al &lt;a href=&quot;harness&quot;&gt;Test :: Harness&lt;/a&gt; que las cosas van tan mal que todas las pruebas deber&amp;iacute;an terminar. Esto incluye ejecutar cualquier script de prueba adicional.</target>
        </trans-unit>
        <trans-unit id="fe441aac507416c2ecf5fefc2720f5a5e7cc6991" translate="yes" xml:space="preserve">
          <source>Indicates to the harness that things are going so badly all testing should terminate. This includes the running of any additional test scripts.</source>
          <target state="translated">Indica al arnés que las cosas van tan mal que todas las pruebas deberían terminar.Esto incluye la ejecución de cualquier guión de prueba adicional.</target>
        </trans-unit>
        <trans-unit id="bdde223b122eaee17c31cfd6ef76f52ec58ce6f0" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the current item is a YAML block.</source>
          <target state="translated">Indica si el elemento actual es o no un bloque YAML.</target>
        </trans-unit>
        <trans-unit id="2ac3f8f7cb3f69c816245189833fb5047e4be353" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the current line could be parsed.</source>
          <target state="translated">Indica si la línea actual puede ser analizada o no.</target>
        </trans-unit>
        <trans-unit id="765249e9b3e3ba66799eb3c3e692065e2ef4bdde" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the given result has a SKIP directive.</source>
          <target state="translated">Indica si el resultado dado tiene o no una directiva SKIP.</target>
        </trans-unit>
        <trans-unit id="1e5feadbfd972a9ef3f2203c437baf1b81be3303" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the given result has a TODO directive.</source>
          <target state="translated">Indica si el resultado dado tiene o no una directiva TODO.</target>
        </trans-unit>
        <trans-unit id="5ae3ac2f7146f745d483818a88c053580ae4ad1e" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the given result has a TODO or SKIP directive.</source>
          <target state="translated">Indica si el resultado dado tiene o no una directiva de TODO o SALTO.</target>
        </trans-unit>
        <trans-unit id="33c1162df0e994c2dba92771958227447c3c8740" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a TAP version line.</source>
          <target state="translated">Indica si es o no una línea de la versión TAP.</target>
        </trans-unit>
        <trans-unit id="82a274793f5ee26247829ddf91f4a9bd5a24bbd9" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a YAML chunk.</source>
          <target state="translated">Indica si es o no un trozo de YAML.</target>
        </trans-unit>
        <trans-unit id="551b037463cdc6d8ee7a155c709c206438a14ea9" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a comment.</source>
          <target state="translated">Indica si se trata de un comentario o no.</target>
        </trans-unit>
        <trans-unit id="fa47f2a4b95862bdf9eb043bb9b755ecb73bbd6f" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a comment. Comments will generally only appear in the TAP stream if STDERR is merged to STDOUT. See the &lt;code&gt;merge&lt;/code&gt; option.</source>
          <target state="translated">Indica si se trata de un comentario o no. Los comentarios generalmente solo aparecer&amp;aacute;n en la secuencia TAP si STDERR se fusiona con STDOUT. Vea la opci&amp;oacute;n de &lt;code&gt;merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5add899043fa2f2909dd47a1020e2ad33a37e66d" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a pragma line.</source>
          <target state="translated">Indica si es o no una línea pragmática.</target>
        </trans-unit>
        <trans-unit id="7023aeaf089510f19833c997992b3c941c8dc92d" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a test line.</source>
          <target state="translated">Indica si se trata de una línea de prueba o no.</target>
        </trans-unit>
        <trans-unit id="9f9b15b44f69cccc124e6789e9d93a4a06a7d51c" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is bailout line.</source>
          <target state="translated">Indica si esto es o no una línea de rescate.</target>
        </trans-unit>
        <trans-unit id="7a3a5d84e52530eeac47fceba7db01f6e0dcbe22" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is the test plan line.</source>
          <target state="translated">Indica si esta es o no la línea del plan de pruebas.</target>
        </trans-unit>
        <trans-unit id="53a07ae6433afd9e304cca7c30208aa346f95b4e" translate="yes" xml:space="preserve">
          <source>Indicates whether the octets in the lexer buffer (&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt;) should be interpreted as the UTF-8 encoding of Unicode characters. If not, they should be interpreted as Latin-1 characters. This is analogous to the &lt;code&gt;SvUTF8&lt;/code&gt; flag for scalars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9010b0739ea277aa1257ee6d74e58336f2039de7" translate="yes" xml:space="preserve">
          <source>Indicates whether the octets in the lexer buffer (&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;) should be interpreted as the UTF-8 encoding of Unicode characters. If not, they should be interpreted as Latin-1 characters. This is analogous to the &lt;code&gt;SvUTF8&lt;/code&gt; flag for scalars.</source>
          <target state="translated">Indica si los octetos en el b&amp;uacute;fer de &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;lexer&lt;/a&gt; ( PL_parser-&amp;gt; linestr ) deben interpretarse como la codificaci&amp;oacute;n UTF-8 de caracteres Unicode. En caso contrario, deben interpretarse como caracteres latinos 1. Esto es an&amp;aacute;logo al indicador &lt;code&gt;SvUTF8&lt;/code&gt; para escalares.</target>
        </trans-unit>
        <trans-unit id="6add24acec866ad90335d7337161ba97a738a82e" translate="yes" xml:space="preserve">
          <source>Indicating the Film::Rating() method is broken.</source>
          <target state="translated">Indicando que el método Film::Rating()está roto.</target>
        </trans-unit>
        <trans-unit id="065a6d5ea3be3a587038269a904d146bb9a0a3c1" translate="yes" xml:space="preserve">
          <source>Indirect Object Syntax</source>
          <target state="translated">Sintaxis indirecta de objetos</target>
        </trans-unit>
        <trans-unit id="3fba9ca2a9139d262136aa9779aba86f7f14b1e8" translate="yes" xml:space="preserve">
          <source>Individual Results</source>
          <target state="translated">Resultados individuales</target>
        </trans-unit>
        <trans-unit id="9cee924720451366321a5d77a5bce661294a6372" translate="yes" xml:space="preserve">
          <source>Individual committers should create topic branches under &lt;b&gt;yourname&lt;/b&gt;/&lt;b&gt;some_descriptive_name&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb52fbb620cf2997c4aa4b5107c331f4b77d2de2" translate="yes" xml:space="preserve">
          <source>Individual test results.</source>
          <target state="translated">Los resultados de las pruebas individuales.</target>
        </trans-unit>
        <trans-unit id="a6118403aceb71cf86308ba3cff213cbc8856dc0" translate="yes" xml:space="preserve">
          <source>Individual test suite results.</source>
          <target state="translated">Resultados de la serie de pruebas individuales.</target>
        </trans-unit>
        <trans-unit id="35536a41b209715d9e3ad440431fef2672f20bbe" translate="yes" xml:space="preserve">
          <source>Indonesia</source>
          <target state="translated">Indonesia</target>
        </trans-unit>
        <trans-unit id="a1d71ca242908209d7ea479076e7d5102e909486" translate="yes" xml:space="preserve">
          <source>Inf</source>
          <target state="translated">Inf</target>
        </trans-unit>
        <trans-unit id="fcefc0b17d205c1c65f4c51d0fe902c4a064f2d7" translate="yes" xml:space="preserve">
          <source>Infinite recursion in regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4367ace45c63bdb1f549a2a2f7dd6cdd72c8dfb1" translate="yes" xml:space="preserve">
          <source>Infinite recursion via empty pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dcf262960464f7812ef1f6844ea3187d8ab76d" translate="yes" xml:space="preserve">
          <source>Infinity and Not a Number</source>
          <target state="translated">Infinito y no un número</target>
        </trans-unit>
        <trans-unit id="ec4c72e2c7996edd7fe98bac862051d171e8f331" translate="yes" xml:space="preserve">
          <source>Inflate Interface</source>
          <target state="translated">Inflar la interfaz</target>
        </trans-unit>
        <trans-unit id="ae8803342c993280c888b28837c9da6527d39370" translate="yes" xml:space="preserve">
          <source>Inflates the complete contents of &lt;code&gt;$buffer&lt;/code&gt; . The buffer can either be a scalar or a scalar reference.</source>
          <target state="translated">Infla el contenido completo de &lt;code&gt;$buffer&lt;/code&gt; . El b&amp;uacute;fer puede ser una referencia escalar o escalar.</target>
        </trans-unit>
        <trans-unit id="7d9b46b317dca1e834a024c29757ee0f8a5e027e" translate="yes" xml:space="preserve">
          <source>Inflates the complete contents of &lt;code&gt;$buffer&lt;/code&gt;. The buffer can either be a scalar or a scalar reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beedaffabd6b03c265ffb648f984a13e030e2063" translate="yes" xml:space="preserve">
          <source>Inflates the complete contents of &lt;code&gt;$input&lt;/code&gt; and writes the uncompressed data to &lt;code&gt;$output&lt;/code&gt; . The &lt;code&gt;$input&lt;/code&gt; and &lt;code&gt;$output&lt;/code&gt; parameters can either be scalars or scalar references.</source>
          <target state="translated">Infla el contenido completo de &lt;code&gt;$input&lt;/code&gt; y escribe los datos sin comprimir en &lt;code&gt;$output&lt;/code&gt; . Los par&amp;aacute;metros &lt;code&gt;$input&lt;/code&gt; y &lt;code&gt;$output&lt;/code&gt; pueden ser escalares o referencias escalares.</target>
        </trans-unit>
        <trans-unit id="6a474d8e337dea1030c8c9f1ba0d71abcee898bb" translate="yes" xml:space="preserve">
          <source>Inflates the complete contents of &lt;code&gt;$input&lt;/code&gt; and writes the uncompressed data to &lt;code&gt;$output&lt;/code&gt;. The &lt;code&gt;$input&lt;/code&gt; and &lt;code&gt;$output&lt;/code&gt; parameters can either be scalars or scalar references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424924a8af9c413db917d51e67110d95dea81788" translate="yes" xml:space="preserve">
          <source>Information about true color support in various terminal emulators and test programs you can run to check the true color support in your terminal emulator are available at &lt;a href=&quot;https://gist.github.com/XVilka/8346728&quot;&gt;https://gist.github.com/XVilka/8346728&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ddcc47830d9749b1f6958774d6b7383d928afa" translate="yes" xml:space="preserve">
          <source>Information on installing the Perl documentation in HTML format can be found in the</source>
          <target state="translated">La información sobre la instalación de la documentación de Perl en formato HTML se puede encontrar en el</target>
        </trans-unit>
        <trans-unit id="63a11938f1b7522fad4baac591e5655e30cc1a15" translate="yes" xml:space="preserve">
          <source>Information on the git commit from which the current perl binary was compiled can be found in the variable &lt;code&gt;$Config::Git_Data&lt;/code&gt; . The variable is a structured string that looks something like this:</source>
          <target state="translated">La informaci&amp;oacute;n sobre la confirmaci&amp;oacute;n de git desde la que se compil&amp;oacute; el binario de perl actual se puede encontrar en la variable &lt;code&gt;$Config::Git_Data&lt;/code&gt; . La variable es una cadena estructurada que se parece a esto:</target>
        </trans-unit>
        <trans-unit id="a0e7d716e288cb7e639286453bea0a95db3d58e1" translate="yes" xml:space="preserve">
          <source>Information on the git commit from which the current perl binary was compiled can be found in the variable &lt;code&gt;$Config::Git_Data&lt;/code&gt;. The variable is a structured string that looks something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa18069a4aed5716a8df64d9e082aca15aa5195" translate="yes" xml:space="preserve">
          <source>Informative call that array is likely to grow to have</source>
          <target state="translated">Llamada informativa de que la matriz es probable que crezca para tener</target>
        </trans-unit>
        <trans-unit id="4002d66fcc252c8f943869f47b18239871e5a38c" translate="yes" xml:space="preserve">
          <source>Informative names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1c216b5b3374ee549f4e7ce25195c9cfb38752" translate="yes" xml:space="preserve">
          <source>Ingy's suggestions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="fdd8dbf1164cff77c53c1fcf6f05a5248f3597e3" translate="yes" xml:space="preserve">
          <source>Inheritance allows two classes to share code. By default, every method in the parent class is also available in the child. The child can explicitly &lt;b&gt;override&lt;/b&gt; a parent's method to provide its own implementation. For example, if we have an &lt;code&gt;File::MP3&lt;/code&gt; object, it has the &lt;code&gt;print_info()&lt;/code&gt; method from &lt;code&gt;File&lt;/code&gt; :</source>
          <target state="translated">La herencia permite que dos clases compartan c&amp;oacute;digo. De forma predeterminada, todos los m&amp;eacute;todos de la clase principal tambi&amp;eacute;n est&amp;aacute;n disponibles en la secundaria. El ni&amp;ntilde;o puede &lt;b&gt;anular&lt;/b&gt; expl&amp;iacute;citamente el m&amp;eacute;todo de un padre para proporcionar su propia implementaci&amp;oacute;n. Por ejemplo, si tenemos un objeto &lt;code&gt;File::MP3&lt;/code&gt; , tiene el m&amp;eacute;todo &lt;code&gt;print_info()&lt;/code&gt; de &lt;code&gt;File&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fbc39f4531ecbce98b377fac6454c84ec2034707" translate="yes" xml:space="preserve">
          <source>Inheritance allows two classes to share code. By default, every method in the parent class is also available in the child. The child can explicitly &lt;b&gt;override&lt;/b&gt; a parent's method to provide its own implementation. For example, if we have an &lt;code&gt;File::MP3&lt;/code&gt; object, it has the &lt;code&gt;print_info()&lt;/code&gt; method from &lt;code&gt;File&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc41c48400edb2d66f46abd2eeeb9f193aa61fe" translate="yes" xml:space="preserve">
          <source>Inheritance and Overloading</source>
          <target state="translated">Herencia y sobrecarga</target>
        </trans-unit>
        <trans-unit id="73b13d6576dee61ad6c9a67be3c5fd56748eb8f1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt; which allows you to change the trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae06620429d483baf3958f6460d3cab1b8f1403" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;, overridden to also vivify/mutate the 'about' facet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5c47bbe5bffb87fdc63768d24cbdd7ac233292" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;. This can be used to add 'amnesty' facets to an existing event. Each new item is added to the &lt;b&gt;END&lt;/b&gt; of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c5f1d372c49633a5f800879863d9084768bf54" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;. This is used by hubs to stamp events as they pass through. New items are added to the &lt;b&gt;START&lt;/b&gt; of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4102e1cbc70e34f207d4b05daf2f7d154eb2cce" translate="yes" xml:space="preserve">
          <source>Inheriting from *Tie::ExtraHash*</source>
          <target state="translated">Heredando de *Tie::ExtraHash*</target>
        </trans-unit>
        <trans-unit id="07845e4fa81351b41e3aca0473590f0745f203e3" translate="yes" xml:space="preserve">
          <source>Inheriting from *Tie::Memoize*</source>
          <target state="translated">Heredando de *Tie::Memoize*</target>
        </trans-unit>
        <trans-unit id="c5a788b89ced595ecbe83baf444c015d5af4ed62" translate="yes" xml:space="preserve">
          <source>Inheriting from *Tie::StdHash*</source>
          <target state="translated">Heredando de *Tie::StdHash*</target>
        </trans-unit>
        <trans-unit id="2af015f1a7a88588d2bedaaf274af7c154500941" translate="yes" xml:space="preserve">
          <source>Inheriting from &lt;b&gt;Tie::ExtraHash&lt;/b&gt;</source>
          <target state="translated">Herencia de &lt;b&gt;Tie :: ExtraHash&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0ee435be5e637cbc759b674414f3dfaaeaa6a310" translate="yes" xml:space="preserve">
          <source>Inheriting from &lt;b&gt;Tie::Memoize&lt;/b&gt;</source>
          <target state="translated">Herencia de &lt;b&gt;Tie :: Memoize&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0942164c538c56917cf82fee8d95de867370af98" translate="yes" xml:space="preserve">
          <source>Inheriting from &lt;b&gt;Tie::StdHash&lt;/b&gt;</source>
          <target state="translated">Herencia de &lt;b&gt;Tie :: StdHash&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="48240d94f1e40cb4a0ce31e0d0412d7b8f4b76ab" translate="yes" xml:space="preserve">
          <source>Inheriting from Tie::ExtraHash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb8e208cadd5346ff9c4a40511d1dbe6081d340" translate="yes" xml:space="preserve">
          <source>Inheriting from Tie::Memoize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6d1eeae612ef4f96a499b488d3c738fd7b2bd5" translate="yes" xml:space="preserve">
          <source>Inheriting from Tie::StdHash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87f7c07fa0f8ea9a950efcf13bc372319f2a9a4" translate="yes" xml:space="preserve">
          <source>Inherits from &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;. Also defines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b78aab8730ee025153421cab4a6381c4215485" translate="yes" xml:space="preserve">
          <source>Inherits some evil code from &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697bba69426638bf8ad3245a38ff2084b17b3805" translate="yes" xml:space="preserve">
          <source>Init methods</source>
          <target state="translated">Métodos de inicio</target>
        </trans-unit>
        <trans-unit id="469d92ba331e1f193a058b9d59b36d9c2695f1be" translate="yes" xml:space="preserve">
          <source>Init.U</source>
          <target state="translated">Init.U</target>
        </trans-unit>
        <trans-unit id="188fedc6f79203e40eb5a91d186ec6c30916e7f9" translate="yes" xml:space="preserve">
          <source>Initial discussion of the ability to modify IO streams behaviour used the term &quot;discipline&quot; for the entities which were added. This came (I believe) from the use of the term in &quot;sfio&quot;, which in turn borrowed it from &quot;line disciplines&quot; on Unix terminals. However, this document (and the C code) uses the term &quot;layer&quot;.</source>
          <target state="translated">En el debate inicial sobre la capacidad de modificar el comportamiento de las corrientes de IO se utilizó el término &quot;disciplina&quot; para las entidades que se añadieron.Esto vino (creo)del uso del término en &quot;sfio&quot;,que a su vez lo tomó prestado de &quot;disciplinas de línea&quot; en los terminales Unix.Sin embargo,en este documento (y en el código C)se utiliza el término &quot;capa&quot;.</target>
        </trans-unit>
        <trans-unit id="af26189aae099c8b0074103f2d4d6fbc19c70e2f" translate="yes" xml:space="preserve">
          <source>Initial port of perl to WinCE. It was performed in separate directory named</source>
          <target state="translated">Puerto inicial de Perl a WinCE.Se realizó en un directorio separado llamado</target>
        </trans-unit>
        <trans-unit id="fcb1ddc45496d5bd9bbb1d0e3e24a58c56f33281" translate="yes" xml:space="preserve">
          <source>Initial value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a1cc8196dec5ffb0b6abf423df9a7b0c6e0219" translate="yes" xml:space="preserve">
          <source>Initial version (GSAR 20-FEB-97)</source>
          <target state="translated">Versión inicial (GSAR 20-FEB-97)</target>
        </trans-unit>
        <trans-unit id="681e3458dd2b1a02b6b17850e74b7b6f830be8ea" translate="yes" xml:space="preserve">
          <source>Initialisation in &lt;code&gt;pregcomp()&lt;/code&gt; mostly involves the creation and data-filling of a special structure, &lt;code&gt;RExC_state_t&lt;/code&gt; (defined in</source>
          <target state="translated">La inicializaci&amp;oacute;n en &lt;code&gt;pregcomp()&lt;/code&gt; implica principalmente la creaci&amp;oacute;n y el llenado de datos de una estructura especial, &lt;code&gt;RExC_state_t&lt;/code&gt; (definida en</target>
        </trans-unit>
        <trans-unit id="c7a9076545ffc08af19383275c9bb0a670aaa64a" translate="yes" xml:space="preserve">
          <source>Initialises a deflation object.</source>
          <target state="translated">Inicializa un objeto de deflación.</target>
        </trans-unit>
        <trans-unit id="b36a0f0079e64fa2a033c629779d3f623a057d8c" translate="yes" xml:space="preserve">
          <source>Initialises a deflation stream.</source>
          <target state="translated">Inicializa un flujo de deflación.</target>
        </trans-unit>
        <trans-unit id="6050c58e3e77b97a8c7a9c2f34e629bf70ca3f1a" translate="yes" xml:space="preserve">
          <source>Initialises an inflation object.</source>
          <target state="translated">Inicializa un objeto de inflación.</target>
        </trans-unit>
        <trans-unit id="d6dc7f91e03e45468b8ef5863382d6fe3515a834" translate="yes" xml:space="preserve">
          <source>Initialises an inflation stream.</source>
          <target state="translated">Inicializa un flujo de inflación.</target>
        </trans-unit>
        <trans-unit id="925a3411c38d467154e067193b51fb11192479d2" translate="yes" xml:space="preserve">
          <source>Initialization of certain non-subroutine variables in ExtUtils::ParseXS and some of its supporting packages has been moved into this package so that those values can be defined exactly once and then re-used in any package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f93bcd9e79c47792da25c51c98403872611fece" translate="yes" xml:space="preserve">
          <source>Initialization of state variables in list currently forbidden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08fb78f0ee25d9e540249a9eb4c3ec2aebf86f6" translate="yes" xml:space="preserve">
          <source>Initialization values for some globals</source>
          <target state="translated">Valores de inicialización para algunos globos</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
