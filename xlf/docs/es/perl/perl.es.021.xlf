<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="392b98f93ad8202dded2a8fa791f059571fc8d3a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{te} : Telugu&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{te}: telugu&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="71cd04c16967aeca2b990f7a59d5d30c75c531c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tg} : Tajik&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tg}: tayiko&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ba4795139fe436d86b04e95fecf6f5c90917f78d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{th} : Thai&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{th}: tailand&amp;eacute;s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="2f1e4bf338d6758a7de2df7e2b0239fd628b2579" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tig} : Tigre&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tig}: Tigre&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0b4950231c870330ed33b418f676ea6d89eb91c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tiv} : Tiv&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tiv}: Tiv&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f249d52c78efcc8c758f9b477ede8586e28f6889" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{ti} : Tigrinya&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{ti}: Tigrinya&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="9aa08d26481b7342582a7062b552daf7578e52e2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tkl} : Tokelau&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tkl}: Tokelau&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f04a879f29b5c8668f76f2c459b3eca248c94ece" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tk} : Turkmen&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tk}: turcomano&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4971d3a5d0ccd95c55986a67efee468cd4c962d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tli} : Tlingit&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tli}: Tlingit&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="10957b966d9bdaa20ad194bef5a1e945f421362d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tl} : Tagalog&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tl}: tagalo&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="df25d49c680e84c49e59007f94bdd0d672eebf5c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tmh} : Tamashek&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tmh}: Tamashek&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5cc04f65e0f41e6d474727c7d6c3319e0f498b41" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tn} : Tswana&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tn}: Tswana&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f58466fa1701a8b45999736742f5eab996e78bfc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tog} : Tonga (Nyasa)&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tog}: Tonga (Nyasa)&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a762b8091de3f54a632fc4430fe431451892b680" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{to} : Tonga (Tonga Islands)&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{to}: Tonga (Islas Tonga)&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f4899a93bd0bdde882ff356789d5a30827916adb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tpi} : Tok Pisin&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tpi}: Tok Pisin&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="298444b14cbe920c923ff1ac6dabf1ae79464f4e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tr} : Turkish&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tr}: turco&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a6f3be7ea460ec5affc62cec721467ae543cb1c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tsi} : Tsimshian&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tsi}: Tsimshian&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ee848631733be7abd2d669ab1334428eefe5dad6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{ts} : Tsonga&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{ts}: Tsonga&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="86534ece0ad261662b793d795c3a597a2b5913fd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tt} : Tatar&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tt}: t&amp;aacute;rtaro&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="616f741c4ddbcb783635cbed5bb27662eacef4c2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tum} : Tumbuka&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tum}: Tumbuka&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="07227a15237a9832e1b5b33d7006360dcf5a0ed0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tvl} : Tuvalu&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tvl}: Tuvalu&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="24504707edc67fefb0b39f91a946c3d9c89683a5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tw} : Twi&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tw}: Twi&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="47f28fe94e837c634676c214bc9748e591258030" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{tyv} : Tuvinian&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{tyv}: tuviniano&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c684c58927b18e190168e19fab0f5d8f8467921d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{ty} : Tahitian&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{ty}: tahitiano&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc28e0de9cad09832164393d66ffa62eb16e9933" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{udm} : Udmurt&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{udm}: Udmurt&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="18a50fbd079858fe15886c4520cab32f95976b73" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{uga} : Ugaritic&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{uga}: ugar&amp;iacute;tico&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5cb1d8398d0925be51e3312e4965c45aa4bd573b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{ug} : Uighur&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{ug}: uigur&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="75f9e292587cbd9b1f7f6a1398eede893683c055" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{uk} : Ukrainian&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{uk}: ucraniano&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b1de43432c703dce25a2cfb87c5fa9734ed0b6cc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{umb} : Umbundu&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{umb}: Umbundu&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="478c501fd450ee05a07236cb4f2df0a9231981d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{und} : Undetermined&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{und}: Indeterminado&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="cd63793d7259679e1cf9ce14affa8edf213609b7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{ur} : Urdu&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{ur}: urdu&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="36d8a80cb7fb86fbbeafb1b4fc2b45c6e6ba12ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{uz} : Uzbek&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{uz}: uzbeko&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e3331ac6546c6700d377ca986d52d8dac42f38b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{vai} : Vai&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{vai}: Vai&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7f9c6e9f8900739284a6c73744530b3798f086c7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{ve} : Venda&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{ve}: Venda&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bed96a42cdd4c8bdd0933c95e69d9f6ec9cedfca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{vi} : Vietnamese&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{vi}: vietnamita&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7a9bf1125e5f111161b809e673d5ec7d34049c7f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{vot} : Votic&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{vot}: V&amp;oacute;tico&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f42cd4365ac2d0da0782d949195bcdfeb4e2c900" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{vo} : Volapuk&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{vo}: Volapuk&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="82a56695fb0a5eff93e062c1ab230fd9fb5b7b3e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{wal} : Walamo&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{wal}: Walamo&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4367523683ec5280176bbf66df442f7e01c761c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{war} : Waray&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{guerra}: Waray&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="709812ce5915fe87c9ff5fc87d71ff0860ed5a6f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{was} : Washo&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{era}: Washo&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3d1e4b83cd0fa8bc0b5cf2f320882a0f7aa637c9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{wa} : Walloon&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{wa}: Val&amp;oacute;n&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="15a236decc8cd26e69755c1eb62a9acb6836f62d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{wen} : Sorbian languages&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{wen}: idiomas sorabo&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="28069e8f97ea000528873a9c4259a899b5fc2e43" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{wo} : Wolof&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{wo}: wolof&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5404fdcf0b87ba3356d855bdf02b8fc8216c1756" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{x-...} : Unregistered (Semi-Private Use)&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{x -...}: no registrado (uso semiprivado)&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0a89c8ef6ff4b1fa29b46b51f46a570a2b04d40a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{xal} : Kalmyk&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{xal}: Kalmyk&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6eb25f1da10df9d06d3feb1bca73c6491e670ad4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{xh} : Xhosa&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{xh}: Xhosa&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4be7a8286795b777079f3e380062b65c46ce936a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{yao} : Yao&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{yao}: Yao&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc8d506ef98bd5b32ff2e37c2ebef25b23a8fe10" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{yap} : Yapese&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{yap}: Yapese&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4f8148f610e7a3b4d574c76cc24b2346113eadfb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{yi} : Yiddish&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{yi}: yiddish&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0b400574f8a008fda824965dca8cad935da2e7ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{yo} : Yoruba&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{yo}: yoruba&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="473abb45325d48c116d71bd913d8d555be7f4cfe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{za} : Zhuang&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{za}: Zhuang&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="cbbb90ed9a0f9b1a7a1e7eec3a54bbf61513bf48" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{zen} : Zenaga&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{zen}: Zenaga&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="87a62240c22ab4ab12105b6b53e5464ad6a5cfde" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{zh} : Chinese&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{zh}: chino&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b43dca2cbe4e37a5bb4ad637051dce5b82d09380" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{znd} : Zande&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{znd}: Zande&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="91e2c623510460287c2ccdc09f2e595c0d6deed9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{zun} : Zuni&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{zun}: Zuni&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6d180522ae377a38c1075e0d39c98240fe35c552" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{zu} : Zulu&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{zu}: zul&amp;uacute;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="33bd8c8e2517263c028395659cece1a1631c55ee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;{{ command &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;{{comando &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5aeec52476d3387fac8ecf0ff3d152603ca2c981" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;|0&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;|0&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0f712bd74a669165fc378376cf89b6c56058dacd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;|1&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;|1&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="71b19d09de8d99d993bccbc46345780e318237b4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;|2&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;|2&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b4ffb48d05f4cfab829471d0411bed4087679bb4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;|3&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;|3&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="05817e9b3f2c0f20e5804980061c94b1fc6738fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;|dbcmd &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;|dbcmd &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d67e292cb103820a229dc79e5e040cf9164335ce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;||dbcmd &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;||dbcmd &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="118542f44a06eb7833ff5c1fa640d12f7898aafc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;~&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;~&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="13da3da7747dde794878f284e0c7fc2aec9d614a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;~user&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;~user&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="799d85edb61f1bc77ff31e5a9b738cdee3f7f2db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!~&lt;/code&gt; determines to which variable the regex is applied, and negates the result of the match; it returns false if the match succeeds, and true if it fails.</source>
          <target state="translated">&lt;code&gt;!~&lt;/code&gt; determina a qu&amp;eacute; variable se aplica la expresi&amp;oacute;n regular y niega el resultado de la coincidencia; devuelve falso si la coincidencia tiene &amp;eacute;xito y verdadero si falla.</target>
        </trans-unit>
        <trans-unit id="73035c0b4075c864c347d2b489028060ac5810fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;``&lt;/code&gt;, &lt;code&gt;qq//&lt;/code&gt;, &lt;code&gt;qx//&lt;/code&gt;, &lt;code&gt;&amp;lt;file*glob&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&quot;EOF&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfaf4547bff37a003f11c0f2f0f08d29f5e3984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;+&quot;&lt;/code&gt; for union, &lt;code&gt;&quot;-&quot;&lt;/code&gt; for removal (set-difference), &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; for intersection</source>
          <target state="translated">&lt;code&gt;&quot;+&quot;&lt;/code&gt; para uni&amp;oacute;n, &lt;code&gt;&quot;-&quot;&lt;/code&gt; para eliminaci&amp;oacute;n (diferencia establecida), &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; para intersecci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="d0fec0837aa14b0d1ab2c03194bdc99159d93d94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;++&quot;&lt;/code&gt; and &lt;code&gt;&quot;--&quot;&lt;/code&gt; work as in C. That is, if placed before a variable, they increment or decrement the variable by one before returning the value, and if placed after, increment or decrement after returning the value.</source>
          <target state="translated">&lt;code&gt;&quot;++&quot;&lt;/code&gt; y &lt;code&gt;&quot;--&quot;&lt;/code&gt; funcionan como en C. Es decir, si se colocan antes de una variable, aumentan o disminuyen la variable en uno antes de devolver el valor, y si se colocan despu&amp;eacute;s, aumentan o disminuyen despu&amp;eacute;s de devolver el valor.</target>
        </trans-unit>
        <trans-unit id="d9260c74ad4f9b80c1823708facbbd192849b359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;:loose&quot;&lt;/code&gt; has no effect with these. Input names must match exactly, using &lt;code&gt;&quot;:full&quot;&lt;/code&gt; rules.</source>
          <target state="translated">&lt;code&gt;&quot;:loose&quot;&lt;/code&gt; no tiene ning&amp;uacute;n efecto con estos. Los nombres de entrada deben coincidir exactamente con las reglas &lt;code&gt;&quot;:full&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb5bfca7502439fc864589ad6e001f6ba12358cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;=&quot;&lt;/code&gt; is the ordinary assignment operator.</source>
          <target state="translated">&lt;code&gt;&quot;=&quot;&lt;/code&gt; es el operador de asignaci&amp;oacute;n ordinario.</target>
        </trans-unit>
        <trans-unit id="2e4b258c683c13a75e42267c5f739d9212b41a45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;LATIN CAPITAL LETTER E WITH ACUTE&quot;&lt;/code&gt; is called a &quot;pre-composed&quot; character, and its equivalence with the &quot;E&quot; and the &quot;COMBINING ACCENT&quot; sequence is called canonical equivalence. All pre-composed characters are said to have a decomposition (into the equivalent sequence), and the decomposition type is also called canonical. A string may be comprised as much as possible of precomposed characters, or it may be comprised of entirely decomposed characters. Unicode calls these respectively, &quot;Normalization Form Composed&quot; (NFC) and &quot;Normalization Form Decomposed&quot;. The &lt;code&gt;&lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;&lt;/code&gt; module contains functions that convert between the two. A string may also have both composed characters and decomposed characters; this module can be used to make it all one or the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c39ca979109e5646ce99ce3fe80c8c04a04dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;LATIN CAPITAL LETTER E WITH ACUTE&quot;&lt;/code&gt; is called a &quot;pre-composed&quot; character, and its equivalence with the &quot;E&quot; and the &quot;COMBINING ACCENT&quot; sequence is called canonical equivalence. All pre-composed characters are said to have a decomposition (into the equivalent sequence), and the decomposition type is also called canonical. A string may be comprised as much as possible of precomposed characters, or it may be comprised of entirely decomposed characters. Unicode calls these respectively, &quot;Normalization Form Composed&quot; (NFC) and &quot;Normalization Form Decomposed&quot;. The &lt;code&gt;&lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;&lt;/code&gt; module contains functions that convert between the two. A string may also have both composed characters and decomposed characters; this module can be used to make it all one or the other.</source>
          <target state="translated">&lt;code&gt;&quot;LATIN CAPITAL LETTER E WITH ACUTE&quot;&lt;/code&gt; se denomina car&amp;aacute;cter &quot;precompuesto&quot;, y su equivalencia con la secuencia &quot;E&quot; y &quot;ACENTO COMBINADO&quot; se denomina equivalencia can&amp;oacute;nica. Se dice que todos los caracteres precompuestos tienen una descomposici&amp;oacute;n (en la secuencia equivalente), y el tipo de descomposici&amp;oacute;n tambi&amp;eacute;n se llama can&amp;oacute;nico. Una cadena puede estar compuesta tanto como sea posible por caracteres precompuestos, o puede estar compuesta por caracteres completamente descompuestos. Unicode los llama, respectivamente, &quot;Forma de normalizaci&amp;oacute;n compuesta&quot; (NFC) y &quot;Forma de normalizaci&amp;oacute;n descompuesta&quot;. El m&amp;oacute;dulo &lt;code&gt;&lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;&lt;/code&gt; contiene funciones que convierten entre los dos. Una cadena tambi&amp;eacute;n puede tener tanto caracteres compuestos como caracteres descompuestos;este m&amp;oacute;dulo se puede utilizar para hacer todo uno o el otro.</target>
        </trans-unit>
        <trans-unit id="8c181c2f3dc4bbb4607828179494a1bbead07460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;console&quot;&lt;/code&gt; - send messages directly to the console, as for the &lt;code&gt;&quot;cons&quot;&lt;/code&gt; option of &lt;code&gt;openlog()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&quot;console&quot;&lt;/code&gt; : env&amp;iacute;a mensajes directamente a la consola, como para la opci&amp;oacute;n &lt;code&gt;&quot;cons&quot;&lt;/code&gt; de &lt;code&gt;openlog()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eaf7c23c66bee1bd9366202b5b44e30257ab3528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;console&quot;&lt;/code&gt; - send messages directly to the console, as for the &lt;code&gt;&quot;cons&quot;&lt;/code&gt; option of &lt;code&gt;openlog()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb965f90f9de0978253a988f2f4f0932e46f5411" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;eventlog&quot;&lt;/code&gt; - send messages to the Win32 events logger (Win32 only; added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.19).</source>
          <target state="translated">&lt;code&gt;&quot;eventlog&quot;&lt;/code&gt; : env&amp;iacute;a mensajes al registrador de eventos Win32 (solo Win32; agregado en &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.19).</target>
        </trans-unit>
        <trans-unit id="6aa9016bca6620d5e5fb835b2efdb6c314c4781b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;inet&quot;&lt;/code&gt; - connect to an INET socket, either TCP or UDP, tried in that order. See also the &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;&quot;inet&quot;&lt;/code&gt; : con&amp;eacute;ctese a un conector INET, ya sea TCP o UDP, intentado en ese orden. Consulte tambi&amp;eacute;n las opciones de &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; y &lt;code&gt;timeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5134cd73a4d69b5e7d80469c857c58feb4b0ede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;inet&quot;&lt;/code&gt; - connect to an INET socket, either TCP or UDP, tried in that order. See also the &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e15b1216d884d8fa2746439849ef216ad17505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;lt&quot;&lt;/code&gt; , &lt;code&gt;&quot;le&quot;&lt;/code&gt; , &lt;code&gt;&quot;ge&quot;&lt;/code&gt; , &lt;code&gt;&quot;gt&quot;&lt;/code&gt; and &lt;code&gt;&quot;cmp&quot;&lt;/code&gt; use the collation (sort) order specified by the current &lt;code&gt;LC_COLLATE&lt;/code&gt; locale if a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
locale&lt;/code&gt; form that includes collation is in effect. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;. Do not mix these with Unicode, only use them with legacy 8-bit locale encodings. The standard &lt;code&gt;&lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;unicode/collate/locale&quot;&gt;Unicode::Collate::Locale&lt;/a&gt;&lt;/code&gt; modules offer much more powerful solutions to collation issues.</source>
          <target state="translated">&lt;code&gt;&quot;lt&quot;&lt;/code&gt; , &lt;code&gt;&quot;le&quot;&lt;/code&gt; , &lt;code&gt;&quot;ge&quot;&lt;/code&gt; , &lt;code&gt;&quot;gt&quot;&lt;/code&gt; y &lt;code&gt;&quot;cmp&quot;&lt;/code&gt; usan el orden de clasificaci&amp;oacute;n (clasificaci&amp;oacute;n) especificado por la &lt;code&gt;LC_COLLATE&lt;/code&gt; regional LC_COLLATE actual si est&amp;aacute; en vigor un formulario de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; que incluye la clasificaci&amp;oacute;n. Ver &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; . No los mezcle con Unicode, solo util&amp;iacute;celos con codificaciones de configuraci&amp;oacute;n regional de 8 bits heredadas. Los m&amp;oacute;dulos est&amp;aacute;ndar &lt;code&gt;&lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;unicode/collate/locale&quot;&gt;Unicode::Collate::Locale&lt;/a&gt;&lt;/code&gt; ofrecen soluciones mucho m&amp;aacute;s poderosas para los problemas de clasificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2a32351c457af1893b2283d973afbd14556ef936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;lt&quot;&lt;/code&gt;, &lt;code&gt;&quot;le&quot;&lt;/code&gt;, &lt;code&gt;&quot;ge&quot;&lt;/code&gt;, &lt;code&gt;&quot;gt&quot;&lt;/code&gt; and &lt;code&gt;&quot;cmp&quot;&lt;/code&gt; use the collation (sort) order specified by the current &lt;code&gt;LC_COLLATE&lt;/code&gt; locale if a &lt;code&gt;use locale&lt;/code&gt; form that includes collation is in effect. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;. Do not mix these with Unicode, only use them with legacy 8-bit locale encodings. The standard &lt;code&gt;&lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;Unicode::Collate::Locale&quot;&gt;Unicode::Collate::Locale&lt;/a&gt;&lt;/code&gt; modules offer much more powerful solutions to collation issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a044b5ace2fb89b86436761a290762f80d6875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;native&quot;&lt;/code&gt; - use the native C functions from your &lt;code&gt;syslog(3)&lt;/code&gt; library (added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.15).</source>
          <target state="translated">&lt;code&gt;&quot;native&quot;&lt;/code&gt; : use las funciones nativas de C de su biblioteca &lt;code&gt;syslog(3)&lt;/code&gt; (agregadas en &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.15).</target>
        </trans-unit>
        <trans-unit id="ccc7dd40cbd7242d718f8a32d656b21f7d92ba93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;pipe&quot;&lt;/code&gt; - connect to the named pipe indicated by the &lt;code&gt;path&lt;/code&gt; option, or, if omitted, to the value returned by the &lt;code&gt;_PATH_LOG&lt;/code&gt; macro (if your system defines it), or</source>
          <target state="translated">&lt;code&gt;&quot;pipe&quot;&lt;/code&gt; : con&amp;eacute;ctese a la tuber&amp;iacute;a con nombre indicada por la opci&amp;oacute;n de &lt;code&gt;path&lt;/code&gt; o, si se omite, al valor devuelto por la macro &lt;code&gt;_PATH_LOG&lt;/code&gt; (si su sistema lo define), o</target>
        </trans-unit>
        <trans-unit id="91faae17ddaedf839164b79d6033346de1d6fe40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;r&quot;&lt;/code&gt; sets the &lt;code&gt;FILE_SHARE_READ&lt;/code&gt; bit which allows other processes to have read access to the file. &lt;code&gt;&quot;w&quot;&lt;/code&gt; sets the &lt;code&gt;FILE_SHARE_WRITE&lt;/code&gt; bit which allows other processes to have write access to the file. &lt;code&gt;&quot;d&quot;&lt;/code&gt; sets the &lt;code&gt;FILE_SHARE_DELETE&lt;/code&gt; bit which allows other processes to have delete access to the file [ignored under Windows 95].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f2c9ef9fa3aab8d6a2f37b98f9a8292a7af5c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;stream&quot;&lt;/code&gt; - connect to the stream indicated by the &lt;code&gt;path&lt;/code&gt; option, or, if omitted, the value returned by the &lt;code&gt;_PATH_LOG&lt;/code&gt; macro (if your system defines it),</source>
          <target state="translated">&lt;code&gt;&quot;stream&quot;&lt;/code&gt; : con&amp;eacute;ctese al flujo indicado por la opci&amp;oacute;n de &lt;code&gt;path&lt;/code&gt; o, si se omite, al valor devuelto por la macro &lt;code&gt;_PATH_LOG&lt;/code&gt; (si su sistema lo define),</target>
        </trans-unit>
        <trans-unit id="7e84cf31e4ac31c0250c764fcce9d445c648ba5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;tcp&quot;&lt;/code&gt; - connect to a TCP socket, on the &lt;code&gt;syslog/tcp&lt;/code&gt; or &lt;code&gt;syslogng/tcp&lt;/code&gt; service. See also the &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;&quot;tcp&quot;&lt;/code&gt; : con&amp;eacute;ctese a un socket TCP, en el servicio &lt;code&gt;syslog/tcp&lt;/code&gt; o &lt;code&gt;syslogng/tcp&lt;/code&gt; . Consulte tambi&amp;eacute;n las opciones de &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; y &lt;code&gt;timeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62c4da84f1130a05349ec11bee18b7c624091908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;tcp&quot;&lt;/code&gt; - connect to a TCP socket, on the &lt;code&gt;syslog/tcp&lt;/code&gt; or &lt;code&gt;syslogng/tcp&lt;/code&gt; service. See also the &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af17e1d046a72760e83fb814e645698e91790d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;udp&quot;&lt;/code&gt; - connect to a UDP socket, on the &lt;code&gt;syslog/udp&lt;/code&gt; service. See also the &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;&quot;udp&quot;&lt;/code&gt; : con&amp;eacute;ctese a un conector UDP, en el servicio &lt;code&gt;syslog/udp&lt;/code&gt; . Consulte tambi&amp;eacute;n las opciones de &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; y &lt;code&gt;timeout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ae02a8140cae4f3b89bbf4e91e37a3ef7e0a296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;udp&quot;&lt;/code&gt; - connect to a UDP socket, on the &lt;code&gt;syslog/udp&lt;/code&gt; service. See also the &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2406f08c80833b104cb546b562930ab2753bb152" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;unix&quot;&lt;/code&gt; - connect to a UNIX domain socket (in some systems a character special device). The name of that socket is given by the &lt;code&gt;path&lt;/code&gt; option or, if omitted, the value returned by the &lt;code&gt;_PATH_LOG&lt;/code&gt; macro (if your system defines it),</source>
          <target state="translated">&lt;code&gt;&quot;unix&quot;&lt;/code&gt; : con&amp;eacute;ctese a un conector de dominio UNIX (en algunos sistemas, un dispositivo especial de caracteres). El nombre de ese conector viene dado por la opci&amp;oacute;n de &lt;code&gt;path&lt;/code&gt; o, si se omite, el valor devuelto por la macro &lt;code&gt;_PATH_LOG&lt;/code&gt; (si su sistema lo define),</target>
        </trans-unit>
        <trans-unit id="23ca0cba57a3ff33b270c60f0063f65f7c9e5e42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$#&lt;/code&gt; is no longer supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d4858fc99b300b0a9238685aee525fce03924f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$#&lt;/code&gt; was a variable that could be used to format printed numbers. After a deprecation cycle, its magic was removed in Perl v5.10.0 and using it now triggers a warning: &lt;code&gt;$# is no longer supported&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$#&lt;/code&gt; era una variable que se pod&amp;iacute;a usar para formatear n&amp;uacute;meros impresos. Despu&amp;eacute;s de un ciclo de obsolescencia, su magia se elimin&amp;oacute; en Perl v5.10.0 y su uso ahora genera una advertencia: &lt;code&gt;$# is no longer supported&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb5f2502299e4726a00c7622a4d725a9e5004d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;amp;&lt;/code&gt; is the same as &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[0], $+[0] - $-[0])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$&amp;amp;&lt;/code&gt; es lo mismo que &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[0], $+[0] - $-[0])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64b533301cdb8d811d9f85629f75448f0734e23c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;amp;&lt;/code&gt; is the same as &lt;code&gt;substr($var, $-[0], $+[0] - $-[0])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83bc1c6919643c8bdffd21e2aa7ff4b97cdb232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;lt;&lt;/code&gt; , &lt;code&gt;$&amp;gt;&lt;/code&gt; , &lt;code&gt;$(&lt;/code&gt; and &lt;code&gt;$)&lt;/code&gt; can be set only on machines that support the corresponding</source>
          <target state="translated">&lt;code&gt;$&amp;lt;&lt;/code&gt; , &lt;code&gt;$&amp;gt;&lt;/code&gt; , &lt;code&gt;$(&lt;/code&gt; y &lt;code&gt;$)&lt;/code&gt; solo se pueden configurar en m&amp;aacute;quinas que admitan el correspondiente</target>
        </trans-unit>
        <trans-unit id="8ece0b6adb83e2cf741bcc1fe2618ad9ea3a3dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;lt;&lt;/code&gt; and &lt;code&gt;$&amp;gt;&lt;/code&gt; can be swapped only on machines supporting &lt;code&gt;setreuid()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$&amp;lt;&lt;/code&gt; y &lt;code&gt;$&amp;gt;&lt;/code&gt; solo se pueden intercambiar en m&amp;aacute;quinas que &lt;code&gt;setreuid()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea96ea29064209e105bddd76af337d66d6269220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;lt;&lt;/code&gt; and &lt;code&gt;$&amp;gt;&lt;/code&gt; can be swapped only on machines supporting &lt;code&gt;setreuid()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83724a962d2cc2ee53695bf226d921825ef3578b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&amp;lt;&lt;/code&gt;, &lt;code&gt;$&amp;gt;&lt;/code&gt;, &lt;code&gt;$(&lt;/code&gt; and &lt;code&gt;$)&lt;/code&gt; can be set only on machines that support the corresponding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73ac0c44a78bee8c1967e337cb66f942f6efc03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$'&lt;/code&gt; is the same as &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $+[0])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$'&lt;/code&gt; es lo mismo que &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $+[0])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5352d32027ae8b76d57e3b1d227335e635ef45c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$'&lt;/code&gt; is the same as &lt;code&gt;substr($var, $+[0])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b4c1318012ead9ddcfad74247f02f33587edb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$*&lt;/code&gt; is no longer supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b5140a2d1e2b99e204932424924c03a1b171cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$*&lt;/code&gt; was a variable that you could use to enable multiline matching. After a deprecation cycle, its magic was removed in Perl v5.10.0. Using it now triggers a warning: &lt;code&gt;$* is no longer supported&lt;/code&gt;. You should use the &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; regexp modifiers instead.</source>
          <target state="translated">&lt;code&gt;$*&lt;/code&gt; era una variable que se pod&amp;iacute;a utilizar para habilitar la coincidencia de varias l&amp;iacute;neas. Despu&amp;eacute;s de un ciclo de obsolescencia, su magia se elimin&amp;oacute; en Perl v5.10.0. Su uso ahora genera una advertencia: &lt;code&gt;$* is no longer supported&lt;/code&gt; . Deber&amp;iacute;a utilizar los modificadores de expresiones regulares &lt;code&gt;/s&lt;/code&gt; y &lt;code&gt;/m&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="aeba813b83202368440ed158ae5ae83e14bc37bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$+{foo}&lt;/code&gt; will be the same as &lt;code&gt;$2&lt;/code&gt;, and &lt;code&gt;$3&lt;/code&gt; will contain 'z' instead of the opposite which is what a .NET regex hacker might expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8b0459fe4a3b734029897c61525c05804d4919" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$-[0]&lt;/code&gt; is the offset of the start of the last successful match. &lt;code&gt;$-[&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$-[0]&lt;/code&gt; es el desplazamiento del inicio de la &amp;uacute;ltima coincidencia exitosa. &lt;code&gt;$-[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5548e1259409b7ffe8c24f26f40dcce383ddcaff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$-[0]&lt;/code&gt; is the offset of the start of the last successful match. &lt;code&gt;$-[&lt;i&gt;n&lt;/i&gt;]&lt;/code&gt; is the offset of the start of the substring matched by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed49285641976323c92a385cd3002f789390179e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$.&lt;/code&gt; is reset when the filehandle is closed, but &lt;b&gt;not&lt;/b&gt; when an open filehandle is reopened without an intervening &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt;. For more details, see &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;. Because &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; never does an explicit close, line numbers increase across &lt;code&gt;ARGV&lt;/code&gt; files (but see examples in &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;$.&lt;/code&gt; se restablece cuando se cierra el identificador de archivo, pero &lt;b&gt;no&lt;/b&gt; cuando se vuelve a abrir un identificador de archivo abierto sin un &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; intermedio () . Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;Operadores de E / S en perlop&lt;/a&gt; . Debido a que &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; nunca realiza un cierre expl&amp;iacute;cito, los n&amp;uacute;meros de l&amp;iacute;nea aumentan en los archivos &lt;code&gt;ARGV&lt;/code&gt; (pero vea los ejemplos en &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="514fa5454c131fa507c12b62789cf3dcc76a001f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$.&lt;/code&gt; is reset when the filehandle is closed, but &lt;b&gt;not&lt;/b&gt; when an open filehandle is reopened without an intervening &lt;code&gt;close()&lt;/code&gt;. For more details, see &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;. Because &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; never does an explicit close, line numbers increase across &lt;code&gt;ARGV&lt;/code&gt; files (but see examples in &lt;a href=&quot;perlfunc#eof&quot;&gt;&quot;eof&quot; in perlfunc&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5daf0ffc5b3598ed1432b8c7ea06610470d79ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... should only be used outside of a regex, and &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; , ... only inside a regex.</source>
          <target state="translated">&lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , ... solo deben usarse fuera de una expresi&amp;oacute;n regular, y &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; , ... solo dentro de una expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="0685de0f8a131a55db16625373a0144bf9c04ac5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$1&lt;/code&gt; is the same as &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[1], $+[1] - $-[1])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$1&lt;/code&gt; es lo mismo que &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[1], $+[1] - $-[1])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a52d07647ef2cf8316def515f713262df3d1e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$1&lt;/code&gt; is the same as &lt;code&gt;substr($var, $-[1], $+[1] - $-[1])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd5593c29231d2b382c1e497b04c547d084b077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, ... should only be used outside of a regex, and &lt;code&gt;\g1&lt;/code&gt;, &lt;code&gt;\g2&lt;/code&gt;, ... only inside a regex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f085ace39da0e52e4af6bf1bd67da77b20c54d30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$2&lt;/code&gt; is the same as &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[2], $+[2] - $-[2])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$2&lt;/code&gt; es lo mismo que &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[2], $+[2] - $-[2])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51cbaa7a285d8504992ec381e2eebb7190aa1e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$2&lt;/code&gt; is the same as &lt;code&gt;substr($var, $-[2], $+[2] - $-[2])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1538eb984d74ff4720e41e9afb3ae5063faebfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$3&lt;/code&gt; is the same as &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[3], $+[3] - $-[3])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$3&lt;/code&gt; es lo mismo que &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, $-[3], $+[3] - $-[3])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef752fab5f2815771e439ae1826c1f6470aadfd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$3&lt;/code&gt; is the same as &lt;code&gt;substr($var, $-[3], $+[3] - $-[3])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad0059b725e875beae7a0dea0f1cc1c57a4c2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$@&lt;/code&gt; is set if the string to be &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;-ed did not compile (this may happen if &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; were imported with bad prototypes), or if Perl code executed during evaluation &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt;d. In these cases the value of &lt;code&gt;$@&lt;/code&gt; is the compile error, or the argument to &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; (which will interpolate &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$?&lt;/code&gt; ). (See also &lt;a href=&quot;fatal&quot;&gt;Fatal&lt;/a&gt;, though.)</source>
          <target state="translated">&lt;code&gt;$@&lt;/code&gt; se establece si la cadena a &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uar -ed no se compil&amp;oacute; (esto puede suceder si &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; se importaron con prototipos incorrectos), o si el c&amp;oacute;digo Perl se ejecut&amp;oacute; durante la evaluaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; d. En estos casos, el valor de &lt;code&gt;$@&lt;/code&gt; es el error de compilaci&amp;oacute;n, o el argumento para &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; (que interpolar&amp;aacute; &lt;code&gt;$!&lt;/code&gt; Y &lt;code&gt;$?&lt;/code&gt; ). (Ver tambi&amp;eacute;n &lt;a href=&quot;fatal&quot;&gt;Fatal&lt;/a&gt; , sin embargo).</target>
        </trans-unit>
        <trans-unit id="b4f7c26408ecd7741a287ed4f31e83ff10f555a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$@&lt;/code&gt; is set if the string to be &lt;code&gt;eval&lt;/code&gt;-ed did not compile (this may happen if &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;close&lt;/code&gt; were imported with bad prototypes), or if Perl code executed during evaluation &lt;code&gt;die()&lt;/code&gt;d. In these cases the value of &lt;code&gt;$@&lt;/code&gt; is the compile error, or the argument to &lt;code&gt;die&lt;/code&gt; (which will interpolate &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$?&lt;/code&gt;). (See also &lt;a href=&quot;fatal&quot;&gt;Fatal&lt;/a&gt;, though.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c742122f2a0ffa1823850642f11cbc6f095ed1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$Carp::CarpLevel&lt;/code&gt; can be set to skip a fixed number of additional call levels. Using this is not recommended because it is very difficult to get it to behave correctly.</source>
          <target state="translated">&lt;code&gt;$Carp::CarpLevel&lt;/code&gt; se puede configurar para omitir un n&amp;uacute;mero fijo de niveles de llamada adicionales. No se recomienda su uso porque es muy dif&amp;iacute;cil conseguir que se comporte correctamente.</target>
        </trans-unit>
        <trans-unit id="284acfcc0e63812680a1dc0fff18be693334eaeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$Config{longlongsize}&lt;/code&gt; is undefined on systems without long long support.</source>
          <target state="translated">&lt;code&gt;$Config{longlongsize}&lt;/code&gt; no est&amp;aacute; definido en sistemas sin un soporte prolongado.</target>
        </trans-unit>
        <trans-unit id="17232d23f9e7a3f6fa67e37518ac8b1b328a60b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$Config{privlib}&lt;/code&gt;/unicore/README.perl</source>
          <target state="translated">&lt;code&gt;$Config{privlib}&lt;/code&gt;/unicore/README.perl</target>
        </trans-unit>
        <trans-unit id="4df0b85334e1e0faef78ac7593ec94eaf0e95f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ExtUtils::Manifest::Debug&lt;/code&gt; defaults to 0. If set to a true value, or if PERL_MM_MANIFEST_DEBUG is true, debugging output will be produced.</source>
          <target state="translated">&lt;code&gt;$ExtUtils::Manifest::Debug&lt;/code&gt; predeterminado 0. Si se establece en un valor verdadero, o si PERL_MM_MANIFEST_DEBUG es verdadero, se generar&amp;aacute; una salida de depuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="47b5499efcdd5a8c5b4ce4c6227655babe3185d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ExtUtils::Manifest::MANIFEST&lt;/code&gt; defaults to &lt;code&gt;MANIFEST&lt;/code&gt; . Changing it results in both a different &lt;code&gt;MANIFEST&lt;/code&gt; and a different &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; file. This is useful if you want to maintain different distributions for different audiences (say a user version and a developer version including RCS).</source>
          <target state="translated">&lt;code&gt;$ExtUtils::Manifest::MANIFEST&lt;/code&gt; predeterminado &lt;code&gt;MANIFEST&lt;/code&gt; . Cambiarlo da como resultado un archivo &lt;code&gt;MANIFEST&lt;/code&gt; y un archivo &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; diferente . Esto es &amp;uacute;til si desea mantener diferentes distribuciones para diferentes audiencias (por ejemplo, una versi&amp;oacute;n de usuario y una versi&amp;oacute;n de desarrollador que incluye RCS).</target>
        </trans-unit>
        <trans-unit id="d20680bd5d4e8119a53051e31e03245386d96b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ExtUtils::Manifest::MANIFEST&lt;/code&gt; defaults to &lt;code&gt;MANIFEST&lt;/code&gt;. Changing it results in both a different &lt;code&gt;MANIFEST&lt;/code&gt; and a different &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; file. This is useful if you want to maintain different distributions for different audiences (say a user version and a developer version including RCS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3d13f46166310f8721911df5043a39d56de609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ExtUtils::Manifest::Quiet&lt;/code&gt; defaults to 0. If set to a true value, all functions act silently.</source>
          <target state="translated">&lt;code&gt;$ExtUtils::Manifest::Quiet&lt;/code&gt; toma el valor predeterminado de 0. Si se establece en un valor verdadero, todas las funciones act&amp;uacute;an silenciosamente.</target>
        </trans-unit>
        <trans-unit id="b5163078ffcb2a43f913ea529ecbce5839e10118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$File::Find::dir&lt;/code&gt; is the current directory name,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab451fac8df64e128b20e69f14caf88f5126a8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; now defaults to 1 on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacb8699d2dc21ed1d114886acf8ef38dc62a06c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$File::Find::name&lt;/code&gt; is the complete pathname to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebf923d8b34fa98334826e596e8fae393389fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$^V&lt;/code&gt; can be used to determine whether the Perl interpreter executing a script is in the right range of versions. For example:</source>
          <target state="translated">&lt;code&gt;$^V&lt;/code&gt; se puede utilizar para determinar si el int&amp;eacute;rprete de Perl que ejecuta un script est&amp;aacute; en el rango correcto de versiones. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9881337fe94979478ca72c8cbd8ce70ff0a89fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$^X&lt;/code&gt; doesn't always contain a full path in FreeBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639786abfce247104f33915b36e5a8305df426dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$_&lt;/code&gt; is a global variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f1f500a22860b78736b915b3082ff8ed95ba30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$_&lt;/code&gt; is by default a global variable. However, as of perl v5.10.0, you can use a lexical version of &lt;code&gt;$_&lt;/code&gt; by declaring it in a file or in a block with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;. Moreover, declaring &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; $_&lt;/code&gt; restores the global &lt;code&gt;$_&lt;/code&gt; in the current scope. Though this seemed like a good idea at the time it was introduced, lexical &lt;code&gt;$_&lt;/code&gt; actually causes more problems than it solves. If you call a function that expects to be passed information via &lt;code&gt;$_&lt;/code&gt; , it may or may not work, depending on how the function is written, there not being any easy way to solve this. Just avoid lexical &lt;code&gt;$_&lt;/code&gt; , unless you are feeling particularly masochistic. For this reason lexical &lt;code&gt;$_&lt;/code&gt; is still experimental and will produce a warning unless warnings have been disabled. As with other experimental features, the behavior of lexical &lt;code&gt;$_&lt;/code&gt; is subject to change without notice, including change into a fatal error.</source>
          <target state="translated">&lt;code&gt;$_&lt;/code&gt; es por defecto una variable global. Sin embargo, a partir de perl v5.10.0, puede usar una versi&amp;oacute;n l&amp;eacute;xica de &lt;code&gt;$_&lt;/code&gt; declar&amp;aacute;ndola en un archivo o en un bloque con &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; . Adem&amp;aacute;s, declarar &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; $_&lt;/code&gt; restaura el &lt;code&gt;$_&lt;/code&gt; global en el &amp;aacute;mbito actual. Aunque esto parec&amp;iacute;a una buena idea en el momento en que se introdujo, el l&amp;eacute;xico &lt;code&gt;$_&lt;/code&gt; en realidad causa m&amp;aacute;s problemas de los que resuelve. Si llama a una funci&amp;oacute;n que espera que se le pase informaci&amp;oacute;n a trav&amp;eacute;s de &lt;code&gt;$_&lt;/code&gt; , puede que funcione o no, dependiendo de c&amp;oacute;mo est&amp;eacute; escrita la funci&amp;oacute;n, no hay una manera f&amp;aacute;cil de resolver esto. Simplemente evite el l&amp;eacute;xico &lt;code&gt;$_&lt;/code&gt; , a menos que se sienta particularmente masoquista. Por esta raz&amp;oacute;n l&amp;eacute;xico &lt;code&gt;$_&lt;/code&gt; todav&amp;iacute;a es experimental y producir&amp;aacute; una advertencia a menos que se hayan desactivado las advertencias. Al igual que con otras caracter&amp;iacute;sticas experimentales, el comportamiento del l&amp;eacute;xico &lt;code&gt;$_&lt;/code&gt; est&amp;aacute; sujeto a cambios sin previo aviso, incluido el cambio a un error fatal.</target>
        </trans-unit>
        <trans-unit id="e0fad02c20941570e63e18bfd1485e4fe487438c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$_&lt;/code&gt; is the current filename within that directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b1519804b24165cacd9afcf4cb354a13f8bc79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$`&lt;/code&gt; is the same as &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, 0, $-[0])&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$`&lt;/code&gt; es lo mismo que &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;($var, 0, $-[0])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08ba8213b141e1e524cbb8f1a8902ed77739bf52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$`&lt;/code&gt; is the same as &lt;code&gt;substr($var, 0, $-[0])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78726539a393f61e788d3df6ef78580d9921d9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; are implicitly local to the sort() execution and regain their former values upon completing the sort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a67b14ac44e94f2e98f802980241cab0c688214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; are set as package globals in the package the sort() is called from. That means &lt;code&gt;$main::a&lt;/code&gt; and &lt;code&gt;$main::b&lt;/code&gt; (or &lt;code&gt;$::a&lt;/code&gt; and &lt;code&gt;$::b&lt;/code&gt;) in the &lt;code&gt;main&lt;/code&gt; package, &lt;code&gt;$FooPack::a&lt;/code&gt; and &lt;code&gt;$FooPack::b&lt;/code&gt; in the &lt;code&gt;FooPack&lt;/code&gt; package, etc. If the sort block is in scope of a &lt;code&gt;my&lt;/code&gt; or &lt;code&gt;state&lt;/code&gt; declaration of &lt;code&gt;$a&lt;/code&gt; and/or &lt;code&gt;$b&lt;/code&gt;, you</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164e38ceaa33d58e4e297e6727f87621365f4868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$a[1]&lt;/code&gt; is one of these references. It refers to an array, the array containing &lt;code&gt;(4, 5, 6)&lt;/code&gt; , and because it is a reference to an array, &lt;b&gt;Use Rule 2&lt;/b&gt; says that we can write &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; to get the third element from that array. &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; is the 6. Similarly, &lt;code&gt;$a[0]-&amp;gt;[1]&lt;/code&gt; is the 2. What we have here is like a two-dimensional array; you can write &lt;code&gt;$a[ROW]-&amp;gt;[COLUMN]&lt;/code&gt; to get or set the element in any row and any column of the array.</source>
          <target state="translated">&lt;code&gt;$a[1]&lt;/code&gt; es una de estas referencias. Se refiere a una matriz, la matriz que contiene &lt;code&gt;(4, 5, 6)&lt;/code&gt; , y debido a que es una referencia a una matriz, &lt;b&gt;Use Rule 2&lt;/b&gt; dice que podemos escribir &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; para obtener el tercer elemento de esa matriz. &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; es el 6. De manera similar, &lt;code&gt;$a[0]-&amp;gt;[1]&lt;/code&gt; es el 2. Lo que tenemos aqu&amp;iacute; es como una matriz bidimensional; puede escribir &lt;code&gt;$a[ROW]-&amp;gt;[COLUMN]&lt;/code&gt; para obtener o establecer el elemento en cualquier fila y columna de la matriz.</target>
        </trans-unit>
        <trans-unit id="17db6b3d1d196e97c26d2e222d2dc7f619a639e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$a[1]&lt;/code&gt; is one of these references. It refers to an array, the array containing &lt;code&gt;(4, 5, 6)&lt;/code&gt;, and because it is a reference to an array, &lt;a href=&quot;#Use-Rule-2&quot;&gt;&lt;b&gt;Use Rule 2&lt;/b&gt;&lt;/a&gt; says that we can write &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; to get the third element from that array. &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; is the 6. Similarly, &lt;code&gt;$a[0]-&amp;gt;[1]&lt;/code&gt; is the 2. What we have here is like a two-dimensional array; you can write &lt;code&gt;$a[ROW]-&amp;gt;[COLUMN]&lt;/code&gt; to get or set the element in any row and any column of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aab82f51ddb7f399649a3d5972393b28924ddc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$bar&lt;/code&gt; . The one that was stuffed away by &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; and which will be restored when the block ends. Because variables are accessed through the typeglob, you can use &lt;code&gt;*foo = *bar&lt;/code&gt; to create an alias which can be localized. (But be aware that this means you can't have a separate &lt;code&gt;@foo&lt;/code&gt; and &lt;code&gt;@bar&lt;/code&gt; , etc.)</source>
          <target state="translated">&lt;code&gt;$bar&lt;/code&gt; . El que fue eliminado por &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; y que se restaurar&amp;aacute; cuando finalice el bloque. Debido a que se accede a las variables a trav&amp;eacute;s de typeglob, puede usar &lt;code&gt;*foo = *bar&lt;/code&gt; para crear un alias que se puede localizar. (Pero tenga en cuenta que esto significa que no puede tener un &lt;code&gt;@foo&lt;/code&gt; y &lt;code&gt;@bar&lt;/code&gt; separados , etc.)</target>
        </trans-unit>
        <trans-unit id="e4075d206d647487aec88e4142a35d4729e7bc18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$bar&lt;/code&gt;. The one that was stuffed away by &lt;code&gt;local()&lt;/code&gt; and which will be restored when the block ends. Because variables are accessed through the typeglob, you can use &lt;code&gt;*foo = *bar&lt;/code&gt; to create an alias which can be localized. (But be aware that this means you can't have a separate &lt;code&gt;@foo&lt;/code&gt; and &lt;code&gt;@bar&lt;/code&gt;, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dc4a5afc0ff01b425ce8767eafa069b4b648aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$basename&lt;/code&gt; is the base filename for the database. The database is two files with &quot;.dir&quot; and &quot;.pag&quot; extensions appended to &lt;code&gt;$basename&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;$basename&lt;/code&gt; es el nombre de archivo base para la base de datos. La base de datos son dos archivos con las extensiones &quot;.dir&quot; y &quot;.pag&quot; agregadas a &lt;code&gt;$basename&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="a19c9c326e3d8528b872740b173b4d83490ce32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$basename&lt;/code&gt; is the base filename for the database. The database is two files with &quot;.dir&quot; and &quot;.pag&quot; extensions appended to &lt;code&gt;$basename&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffff3ca4c444e17cedfdeff3744d7d3faec9cc80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$code_point&lt;/code&gt; should be an unsigned integer representing a Unicode code point.</source>
          <target state="translated">&lt;code&gt;$code_point&lt;/code&gt; debe ser un n&amp;uacute;mero entero sin signo que represente un punto de c&amp;oacute;digo Unicode.</target>
        </trans-unit>
        <trans-unit id="00be2668f9fee45a53d34157056b4023ad5eb111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; works like &lt;code&gt;$coll-&amp;gt;lt($str, &quot;abd&quot;)&lt;/code&gt; almost, but the latter has a problem that you should know which letter is next to &lt;code&gt;c&lt;/code&gt; . For a certain language where &lt;code&gt;ch&lt;/code&gt; as the next letter, &lt;code&gt;&quot;abch&quot;&lt;/code&gt; is greater than &lt;code&gt;&quot;abc\x{FFFF}&quot;&lt;/code&gt; , but less than &lt;code&gt;&quot;abd&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; funciona como &lt;code&gt;$coll-&amp;gt;lt($str, &quot;abd&quot;)&lt;/code&gt; casi, pero este &amp;uacute;ltimo tiene un problema de que debes saber qu&amp;eacute; letra est&amp;aacute; al lado &lt;code&gt;c&lt;/code&gt; . Para un determinado idioma en el que &lt;code&gt;ch&lt;/code&gt; es la siguiente letra, &lt;code&gt;&quot;abch&quot;&lt;/code&gt; es mayor que &lt;code&gt;&quot;abc\x{FFFF}&quot;&lt;/code&gt; , pero menor que &lt;code&gt;&quot;abd&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1352e5a9592c7ad791be8a1fb10a0df94b557f05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; works like &lt;code&gt;$coll-&amp;gt;lt($str, &quot;abd&quot;)&lt;/code&gt; almost, but the latter has a problem that you should know which letter is next to &lt;code&gt;c&lt;/code&gt;. For a certain language where &lt;code&gt;ch&lt;/code&gt; as the next letter, &lt;code&gt;&quot;abch&quot;&lt;/code&gt; is greater than &lt;code&gt;&quot;abc\x{FFFF}&quot;&lt;/code&gt;, but less than &lt;code&gt;&quot;abd&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a895a24778f9b7226fb72a643ac2d866c37fcb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$compressedLength&lt;/code&gt; bytes of compressed data will be read from the &lt;code&gt;$fh&lt;/code&gt; filehandle (The only exception is for an error case like a truncated file or a corrupt data stream).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a0d78f203fe8e833b224c8e9cd95037c775a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$config&lt;/code&gt; is optional. If given, sets &lt;a href=&quot;#config&quot;&gt;&quot;config&quot;&lt;/a&gt; and calls &lt;a href=&quot;#load_handlers&quot;&gt;&quot;load_handlers&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f992ec8417fca4acad9bbb8422cb5ffdf5a18f07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$config&lt;/code&gt; is optional. If given, sets &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt; and calls &lt;a href=&quot;#load_handlers&quot;&gt;load_handlers&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$config&lt;/code&gt; es opcional. Si se proporciona, establece &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt; y llama a &lt;a href=&quot;#load_handlers&quot;&gt;load_handlers&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28557b7429a0d4b6367debe739b1a3d12cab4c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$directories&lt;/code&gt; must be only the directory portion of the path on systems that have the concept of a volume or that have path syntax that differentiates files from directories.</source>
          <target state="translated">&lt;code&gt;$directories&lt;/code&gt; debe ser solo la parte del directorio de la ruta en sistemas que tienen el concepto de volumen o que tienen una sintaxis de ruta que diferencia los archivos de los directorios.</target>
        </trans-unit>
        <trans-unit id="c96505ed2404cf4e43990f3f64c8cb57746967e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$equal_in_locale&lt;/code&gt; will be true if the collation locale specifies a dictionary-like ordering that ignores space characters completely and which folds case.</source>
          <target state="translated">&lt;code&gt;$equal_in_locale&lt;/code&gt; ser&amp;aacute; verdadero si la configuraci&amp;oacute;n regional de intercalaci&amp;oacute;n especifica un orden similar a un diccionario que ignora completamente los caracteres de espacio y que dobla el caso.</target>
        </trans-unit>
        <trans-unit id="92dfd6e2b77443792822ef29362562458caa6a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$events&lt;/code&gt; in this case will contain 3 items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e793a80c803fcff08246fda8ebd1ffa5eb9ea431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$failed&lt;/code&gt; is a hash ref of all the test scripts that failed. Each key is the name of a test script, each value is another hash representing how that script failed. Its keys are these:</source>
          <target state="translated">&lt;code&gt;$failed&lt;/code&gt; es una referencia hash de todos los scripts de prueba que fallaron. Cada clave es el nombre de un script de prueba, cada valor es otro hash que representa c&amp;oacute;mo fall&amp;oacute; ese script. Sus claves son estas:</target>
        </trans-unit>
        <trans-unit id="c1ed274ba91bdf79efe093dcb658437999a53c1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$failed&lt;/code&gt; should be empty if everything passed.</source>
          <target state="translated">&lt;code&gt;$failed&lt;/code&gt; deber&amp;iacute;a estar vac&amp;iacute;o si todo pas&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="f3f93b2c6ee742963cbf8da79410a960143abba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$filename&lt;/code&gt; should be given in unix format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e46282e0da0709c2f5c435fa96079c7729da7ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$filepath&lt;/code&gt; is the input POD to read and &lt;code&gt;$outputpath&lt;/code&gt; is where to write POD syntax error messages. Either argument may be a scalar indicating a file-path, or else a reference to an open filehandle. If unspecified, the input-file it defaults to &lt;code&gt;\*STDIN&lt;/code&gt; , and the output-file defaults to &lt;code&gt;\*STDERR&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$filepath&lt;/code&gt; es el POD de entrada para leer y &lt;code&gt;$outputpath&lt;/code&gt; es donde escribir los mensajes de error de sintaxis del POD. Cualquiera de los dos argumentos puede ser un escalar que indique una ruta de archivo, o bien una referencia a un identificador de archivo abierto. Si no se especifica, el archivo de entrada tiene el valor predeterminado de &lt;code&gt;\*STDIN&lt;/code&gt; y el archivo de salida el valor predeterminado de &lt;code&gt;\*STDERR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ef7f1dec456b6b805d5ac647134a70ee7ce8db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$filepath&lt;/code&gt; is the input POD to read and &lt;code&gt;$outputpath&lt;/code&gt; is where to write POD syntax error messages. Either argument may be a scalar indicating a file-path, or else a reference to an open filehandle. If unspecified, the input-file it defaults to &lt;code&gt;\*STDIN&lt;/code&gt;, and the output-file defaults to &lt;code&gt;\*STDERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a545f6409f188207c03846eda4cd453fb6d975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hDevice&lt;/code&gt; is a Win32 native file handle to a device [return value from &lt;code&gt;CreateFile&lt;/code&gt;].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf7332da5eb5a18601d2ffa1939546b19653688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hFile&lt;/code&gt; is a Win32 native file handle that is already open to the file or device to be written to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ebdecc51423cbae2efab2216eff2711b74ad20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hFile&lt;/code&gt; is a Win32 native file handle that is already open to the file or device to read from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea534be808afdf739bf7eb325354197115896656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hFile&lt;/code&gt; is a Win32 native file handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226f1e0f031a1db08dff9c6da8ed69830558d087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hModel&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; [or &lt;code&gt;[]&lt;/code&gt;, both of which mean &lt;code&gt;NULL&lt;/code&gt;] or a Win32 native handle opened with &lt;code&gt;GENERIC_READ&lt;/code&gt; access to a model file from which file attributes and extended attributes are to be copied if a new file gets created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f045568d5e8431197d10da9a0e32611150122e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hModelFile&lt;/code&gt; should contain a handle opened with &lt;code&gt;GENERIC_READ&lt;/code&gt; access to a model file from which file attributes and extended attributes are to be copied. Or &lt;code&gt;$hModelFile&lt;/code&gt; can be &lt;code&gt;0&lt;/code&gt; [the default].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076d713aa110b7c64853e5d5228343a0122ce446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hNativeHandle&lt;/code&gt; is an open Win32 native file handle, probably the return value from &lt;code&gt;CreateFile&lt;/code&gt; or &lt;code&gt;createFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d0bc40627cd5114097dccb628455c44b9c715b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hNativeHandle&lt;/code&gt; is set to &lt;code&gt;INVALID_HANDLE_VALUE&lt;/code&gt; [and &lt;code&gt;lastFileError()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; are set] if &lt;code&gt;FdGetOsFHandle&lt;/code&gt; fails. See also &lt;code&gt;GetOsFHandle&lt;/code&gt; which provides a friendlier interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cb930d2fb14884e020b3acbbf8d7b58634a824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hNativeHandle&lt;/code&gt; is set to a false value [and &lt;code&gt;lastFileError()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; are set] if &lt;code&gt;GetOsFHandle&lt;/code&gt; fails. &lt;code&gt;GetOsFHandle&lt;/code&gt; returns &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; in the impossible(?) case of the handle having a value of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fc1248a222c775072a8ac42b9c5d499cacad6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hObject&lt;/code&gt; is an open Win32 native file handle or an open Win32 native handle to some other type of object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3f902394fb19060c65726c441dccc8f880bdec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hashref&lt;/code&gt; would contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bb03dabc25ee496026789ce50d0d591d14dfe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$height&lt;/code&gt; will be added to the &lt;code&gt;level()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$height&lt;/code&gt; se agregar&amp;aacute; al &lt;code&gt;level()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f54de996f43a2738b1804adbf389604aeb2a0d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$height&lt;/code&gt; will be added to the &lt;code&gt;level()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f779e1da8c2834f3dc3f0041c88e808e56aeb7f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hinthash&lt;/code&gt; is a reference to a hash containing the value of &lt;a href=&quot;perlvar#%25%5EH&quot;&gt;&lt;code&gt;%^H&lt;/code&gt;&lt;/a&gt; when the caller was compiled, or &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;perlvar#%25%5EH&quot;&gt;&lt;code&gt;%^H&lt;/code&gt;&lt;/a&gt; was empty. Do not modify the values of this hash, as they are the actual values stored in the optree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d105ab7b511988fca9af1046af2a456f7418a9fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hinthash&lt;/code&gt; is a reference to a hash containing the value of &lt;code&gt;%^H&lt;/code&gt; when the caller was compiled, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;%^H&lt;/code&gt; was empty. Do not modify the values of this hash, as they are the actual values stored in the optree.</source>
          <target state="translated">&lt;code&gt;$hinthash&lt;/code&gt; es una referencia a un hash que contiene el valor de &lt;code&gt;%^H&lt;/code&gt; cuando se compil&amp;oacute; el llamador, o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si &lt;code&gt;%^H&lt;/code&gt; estaba vac&amp;iacute;o. No modifique los valores de este hash, ya que son los valores reales almacenados en el optree.</target>
        </trans-unit>
        <trans-unit id="b6cd375dd385928054a5a4e58c090a7c433bfb0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$hinthash&lt;/code&gt; is a reference to a hash containing the value of &lt;code&gt;%^H&lt;/code&gt; when the caller was compiled, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;%^H&lt;/code&gt; was empty. Do not modify the values of this hash, as they are the actual values stored in the optree.</source>
          <target state="translated">&lt;code&gt;$hinthash&lt;/code&gt; es una referencia a un hash que contiene el valor de &lt;code&gt;%^H&lt;/code&gt; cuando se compil&amp;oacute; el llamador, o &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si &lt;code&gt;%^H&lt;/code&gt; estaba vac&amp;iacute;o. No modifique los valores de este hash, ya que son los valores reales almacenados en el optree.</target>
        </trans-unit>
        <trans-unit id="94c4d74f968856dcc21f0e8f9222eb2683dae04b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ioivOffsetHigh&lt;/code&gt; can be &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;] to indicate that you are only specifying a 4-byte offset and the resulting file position will be 0xFFFFFFFE or less [just under 4GB]. Otherwise &lt;code&gt;$ioivOfffsetHigh&lt;/code&gt; starts out with the high-order 4 bytes [signed] of the offset and gets set to the [unsigned] high-order 4 bytes of the resulting file position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555d98e49a27979e59c93cc4fb2db8fba8474055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$isdst&lt;/code&gt; is true if the specified time occurs during Daylight Saving Time, false otherwise.</source>
          <target state="translated">&lt;code&gt;$isdst&lt;/code&gt; es verdadero si la hora especificada ocurre durante el horario de verano, falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="e63b631e49d287fbfcc99be82070e29300ed9094" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ivFD&lt;/code&gt; will be non-negative if the open operation was successful. For failure, &lt;code&gt;-1&lt;/code&gt; is returned and &lt;code&gt;$!&lt;/code&gt; [and possibly &lt;code&gt;fileLastError()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt;] is set to the reason for the failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef183c6829a521736a989a34a4024a6948f7d1ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ivOffset&lt;/code&gt; is [if &lt;code&gt;$ioivOffsetHigh&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt;] the offset [in bytes] to the new file position from the position specified via &lt;code&gt;$uFromWhere&lt;/code&gt;. If &lt;code&gt;$ioivOffsetHigh&lt;/code&gt; is not &lt;code&gt;[]&lt;/code&gt;, then &lt;code&gt;$ivOffset&lt;/code&gt; is converted to an unsigned value to be used as the low-order 4 bytes of the offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4548cedf4f0ad38013cada4649500c971a006e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$lBufSize&lt;/code&gt; is the size of the buffer to allocate to store this list of strings. &lt;code&gt;26*4+1&lt;/code&gt; is always sufficient and should usually be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc1c68f01dd8c2e5e87396710f5f13e9ac09ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$lBytes&lt;/code&gt; is the number of bytes you would like to read. &lt;code&gt;$opBuffer&lt;/code&gt; is automatically initialized to have a buffer large enough to hold that many bytes. Unlike other buffer sizes, &lt;code&gt;$lBytes&lt;/code&gt; does not need to have a &lt;code&gt;&quot;=&quot;&lt;/code&gt; prepended to it to prevent a larger value to be passed to the underlying Win32 &lt;code&gt;ReadFile&lt;/code&gt; API. However, a leading &lt;code&gt;&quot;=&quot;&lt;/code&gt; will be silently ignored, even if Perl warnings are enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f250ab063fd3f82b3985cf0f95ab4158c77cc30b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$lBytes&lt;/code&gt; is the number of bytes you would like to write. If &lt;code&gt;$pBuffer&lt;/code&gt; is not at least &lt;code&gt;$lBytes&lt;/code&gt; long, &lt;code&gt;WriteFile&lt;/code&gt; croaks. You can specify &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;$lBytes&lt;/code&gt; to write &lt;code&gt;length($pBuffer)&lt;/code&gt; bytes. A leading &lt;code&gt;&quot;=&quot;&lt;/code&gt; on &lt;code&gt;$lBytes&lt;/code&gt; will be silently ignored, even if Perl warnings are enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fb03f654491dff73e67a6a9dc080dfb2c3b196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$lTargetBuf&lt;/code&gt; is the size [in bytes] of the buffer to allocate for &lt;code&gt;$osTargetPath&lt;/code&gt;. See &lt;a href=&quot;#Buffer-Sizes&quot;&gt;&quot;Buffer Sizes&quot;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83efa3d29e5637c79c642285dd3530e0f22c58ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$length&lt;/code&gt; bytes. The only circumstances that this function will not is if end-of-file or an IO error is encountered.</source>
          <target state="translated">&lt;code&gt;$length&lt;/code&gt; bytes. Las &amp;uacute;nicas circunstancias en las que esta funci&amp;oacute;n no lo har&amp;aacute; es si se encuentra un error de fin de archivo o de E / S.</target>
        </trans-unit>
        <trans-unit id="9ee01c1952b86c42869a7efb510549f20025c565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$locale_name&lt;/code&gt; may be suffixed with a Unicode script code (four-letter), a Unicode region (territory) code, a Unicode language variant code. These codes are case-insensitive, and separated with &lt;code&gt;'_'&lt;/code&gt; or &lt;code&gt;'-'&lt;/code&gt;. E.g. &lt;code&gt;en_US&lt;/code&gt; for English in USA, &lt;code&gt;az_Cyrl&lt;/code&gt; for Azerbaijani in the Cyrillic script, &lt;code&gt;es_ES_traditional&lt;/code&gt; for Spanish in Spain (Traditional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da3a700efa05325817988e7228f2435762220d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$m&lt;/code&gt; is currently just a copy of the original number. The relation between &lt;code&gt;$e&lt;/code&gt; and &lt;code&gt;$m&lt;/code&gt; will stay always the same, though their real values might change.</source>
          <target state="translated">&lt;code&gt;$m&lt;/code&gt; es actualmente solo una copia del n&amp;uacute;mero original. La relaci&amp;oacute;n entre &lt;code&gt;$e&lt;/code&gt; y &lt;code&gt;$m&lt;/code&gt; permanecer&amp;aacute; siempre igual, aunque sus valores reales pueden cambiar.</target>
        </trans-unit>
        <trans-unit id="49d7e18c107aa3b0fae11b4d0e4e7f8d0bef1ac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$mday&lt;/code&gt; is the day of the month and &lt;code&gt;$mon&lt;/code&gt; the month in the range &lt;code&gt;0..11&lt;/code&gt; , with 0 indicating January and 11 indicating December. This makes it easy to get a month name from a list:</source>
          <target state="translated">&lt;code&gt;$mday&lt;/code&gt; es el d&amp;iacute;a del mes y &lt;code&gt;$mon&lt;/code&gt; el mes en el rango &lt;code&gt;0..11&lt;/code&gt; , donde 0 indica enero y 11 indica diciembre. Esto hace que sea f&amp;aacute;cil obtener el nombre de un mes de una lista:</target>
        </trans-unit>
        <trans-unit id="e3ccc1f04c1f163f41a69d11f2e753a8a6797667" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$mday&lt;/code&gt; is the day of the month and &lt;code&gt;$mon&lt;/code&gt; the month in the range &lt;code&gt;0..11&lt;/code&gt;, with 0 indicating January and 11 indicating December. This makes it easy to get a month name from a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5785130e7d9015279e1c121e1125e4216e276b70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$modeflags&lt;/code&gt; can be the following constants from the &lt;code&gt;Fcntl&lt;/code&gt; module (in the style of the</source>
          <target state="translated">&lt;code&gt;$modeflags&lt;/code&gt; pueden ser las siguientes constantes del m&amp;oacute;dulo &lt;code&gt;Fcntl&lt;/code&gt; (en el estilo del</target>
        </trans-unit>
        <trans-unit id="7750d8ddb4eb819352dc578367b672a062a3c06a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$modeflags&lt;/code&gt; can be the following constants from the &lt;code&gt;Fcntl&lt;/code&gt; module (in the style of the &lt;a href=&quot;http://man.he.net/man2/open&quot;&gt;open(2)&lt;/a&gt; system call),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acf2ea9b6d10ae54935c06d611f716fbdb1aaec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$name&lt;/code&gt; is always optional.</source>
          <target state="translated">&lt;code&gt;$name&lt;/code&gt; siempre es opcional.</target>
        </trans-unit>
        <trans-unit id="aa3225d7a46a15452f758ef0d16d4d0692667b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$olOutLength&lt;/code&gt; is the number of bytes actually written to &lt;code&gt;$osBuffer&lt;/code&gt; but &lt;code&gt;length($osBuffer)&lt;/code&gt; can also be used to determine this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d679662cd372a1559841b9937df3d782f8a474b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$olRetBytes&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; or is a scalar to receive the number of bytes written to &lt;code&gt;$opOutBuf&lt;/code&gt;. Even when &lt;code&gt;$olRetBytes&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt;, a valid pointer to a &lt;code&gt;DWORD&lt;/code&gt; [and not &lt;code&gt;NULL&lt;/code&gt;] is passed to &lt;code&gt;DeviceIoControl&lt;/code&gt;. In this case, &lt;code&gt;[]&lt;/code&gt; just means that you don't care about the value that might be written to &lt;code&gt;$olRetBytes&lt;/code&gt;, which is usually the case since you can usually use &lt;code&gt;length($opOutBuf)&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5761538922f568dc3aa366aff6df8bd4cea873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$olTargetLen&lt;/code&gt; is set to the number of bytes written to &lt;code&gt;$osTargetPath&lt;/code&gt; but you can also use &lt;code&gt;length($osTargetPath)&lt;/code&gt; to determine this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da747babf046e1caaf295089bb1d860b2f78caf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$opBuffer&lt;/code&gt; will be set to a string containing the bytes read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c229000c7397986bde4ca014805242b02e82a70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$opOutBuf&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;] or will be set to contain a returned data structure packed into a string. &lt;code&gt;$lOutBuf&lt;/code&gt; indicates how much space to allocate in &lt;code&gt;$opOutBuf&lt;/code&gt; for &lt;code&gt;DeviceIoControl&lt;/code&gt; to store the data structure. If &lt;code&gt;$lOutBuf&lt;/code&gt; is a number and &lt;code&gt;$opOutBuf&lt;/code&gt; already has a buffer allocated for it that is larger than &lt;code&gt;$lOutBuf&lt;/code&gt; bytes, then this larger buffer size will be passed to &lt;code&gt;DeviceIoControl&lt;/code&gt;. However, you can force a specific buffer size to be passed to &lt;code&gt;DeviceIoControl&lt;/code&gt; by prepending a &lt;code&gt;&quot;=&quot;&lt;/code&gt; to the front of &lt;code&gt;$lOutBuf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5226904be9c70f7502b0559f9da72e4afae5b888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$osBuffer&lt;/code&gt; is a scalar to be set to contain the constructed string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62102f6816affbe4badf7668f9c1c5f87009a06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$osFsType&lt;/code&gt; is a scalar to be set to the string representing the file system type, such as &lt;code&gt;&quot;FAT&quot;&lt;/code&gt; or &lt;code&gt;&quot;NTFS&quot;&lt;/code&gt;. &lt;code&gt;$lFsType&lt;/code&gt; is the number of bytes to allocate for the &lt;code&gt;$osFsType&lt;/code&gt; buffer [see &lt;a href=&quot;#Buffer-Sizes&quot;&gt;&quot;Buffer Sizes&quot;&lt;/a&gt; for more information].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8be617de2f77d79de5f8186fee2409bf021f7d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$osTargetPath&lt;/code&gt; will be assigned a string containing the list of definitions. The definitions are each &lt;code&gt;'\0'&lt;/code&gt;-terminate and are concatenated into the string, most recent first, with an extra &lt;code&gt;'\0'&lt;/code&gt; at the end of the whole string [see &lt;code&gt;GetLogicalDriveStrings&lt;/code&gt; for a sample of this format].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4f932a4ed46fbead4ec5e02fe5e252937d38f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$osVolName&lt;/code&gt; is a scalar to be set to the string representing the volume name, also called the file system label. &lt;code&gt;$lVolName&lt;/code&gt; is the number of bytes to allocate for the &lt;code&gt;$osVolName&lt;/code&gt; buffer [see &lt;a href=&quot;#Buffer-Sizes&quot;&gt;&quot;Buffer Sizes&quot;&lt;/a&gt; for more information].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e096eb7061520be9cdee6467cfaaf0c6c9a30f2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ouBytesWritten&lt;/code&gt; will be set to the actual number of bytes written unless you specify it as &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f544fc5d4090bab651720849b0f078abc7a4e42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ouFlags&lt;/code&gt; will be set to an unsigned value having zero or more of the bits &lt;code&gt;HANDLE_FLAG_INHERIT&lt;/code&gt; and &lt;code&gt;HANDLE_FLAG_PROTECT_FROM_CLOSE&lt;/code&gt; set. See the &lt;code&gt;&quot;:HANDLE_FLAG_&quot;&lt;/code&gt; export class for the meanings of these bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c617048738ed9432833ed80932517f2bdba9e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ouFsFlags&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;] or will be set to an unsigned integer with bits set indicating properties of the file system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87073e47074b293dc14016663fc4bfa79c41b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ouMaxNameLen&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;] or will be set to the maximum length allowed for a file name or directory name within the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5463326b2991e0ea183aa1827ffcbd7a6bb000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$ouSerialNum&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;] or will be set to the numeric value of the volume's serial number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9a64d619ca8f4a2679bb6c5e414e7aea4cf6a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$pBuffer&lt;/code&gt; is a string containing the bytes to be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d52e1256753a681740936d5da28e4353f7c0952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$pInBuf&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;] or a data structure packed into a string. The type of data structure depends on the &lt;code&gt;$uIoControlCode&lt;/code&gt; value. &lt;code&gt;$lInBuf&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; or the length of the structure in &lt;code&gt;$pInBuf&lt;/code&gt;. If &lt;code&gt;$pInBuf&lt;/code&gt; is not &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;$lInBuf&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, then &lt;code&gt;$lInBuf&lt;/code&gt; will automatically be set to &lt;code&gt;length($pInBuf)&lt;/code&gt; for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3aa259c33e17c2855e923bed54d98da1923dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$pOverlapped&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; or is a &lt;code&gt;OVERLAPPED&lt;/code&gt; structure packed into a string. This is only useful if &lt;code&gt;$hDevice&lt;/code&gt; was opened with the &lt;code&gt;FILE_FLAG_OVERLAPPED&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8372cee334f34cc89b8365782a04d4b8e02c7a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$pOverlapped&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; or is a &lt;code&gt;OVERLAPPED&lt;/code&gt; structure packed into a string. This is only useful if &lt;code&gt;$hFile&lt;/code&gt; was opened with the &lt;code&gt;FILE_FLAG_OVERLAPPED&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f8700912df3c69b625dd43bfe42a25b5cdca08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$pOverlapped&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; or is an &lt;code&gt;OVERLAPPED&lt;/code&gt; structure packed into a string. This is only useful if &lt;code&gt;$hFile&lt;/code&gt; was opened with the &lt;code&gt;FILE_FLAG_OVERLAPPED&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3543721e5ad1b338128ddd5eb26b6e51e597a3fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$pSecAttr&lt;/code&gt; should either be &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;] or a &lt;code&gt;SECURITY_ATTRIBUTES&lt;/code&gt; data structure packed into a string. For example, if &lt;code&gt;$pSecDesc&lt;/code&gt; contains a &lt;code&gt;SECURITY_DESCRIPTOR&lt;/code&gt; structure packed into a string, perhaps via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7819b4039912ccb63bc12cf0d2cfa2a729525b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$pSecurityAttributes&lt;/code&gt; should contain a &lt;code&gt;SECURITY_ATTRIBUTES&lt;/code&gt; structure packed into a string or &lt;code&gt;[]&lt;/code&gt; [the default].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb507cbf6b5e45462950676f822291eab2968371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$path&lt;/code&gt; defines the file name (which need not exist), &lt;code&gt;$data&lt;/code&gt; the file contents, and &lt;code&gt;$opt&lt;/code&gt; is a reference to a hash of attributes which may be used to override the default attributes (fields in the tar header), which are described above in the Accessors section.</source>
          <target state="translated">&lt;code&gt;$path&lt;/code&gt; define el nombre del archivo (que no necesita existir), &lt;code&gt;$data&lt;/code&gt; el contenido del archivo, y &lt;code&gt;$opt&lt;/code&gt; es una referencia a un hash de atributos que se pueden usar para anular los atributos predeterminados (campos en el encabezado tar), que se describen arriba en la secci&amp;oacute;n Accesores.</target>
        </trans-unit>
        <trans-unit id="792b0d67b119a03fdfa00f0d381963928e8acf0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$perms&lt;/code&gt; is the file permissions bits to use if new database files are created. This parameter is mandatory even when not creating a new database. The permissions will be reduced by the user's umask so the usual value here would be 0666, or if some very private data then 0600. (See &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;.)</source>
          <target state="translated">&lt;code&gt;$perms&lt;/code&gt; son los bits de permisos de archivo que se utilizar&amp;aacute;n si se crean nuevos archivos de base de datos. Este par&amp;aacute;metro es obligatorio incluso cuando no se crea una nueva base de datos. Los permisos se reducir&amp;aacute;n por la umask del usuario, por lo que el valor habitual aqu&amp;iacute; ser&amp;iacute;a 0666, o si algunos datos son muy privados, entonces 0600. (Consulte &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e7665628899a005326a32fc04f2e51f26d221132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$perms&lt;/code&gt; is the file permissions bits to use if new database files are created. This parameter is mandatory even when not creating a new database. The permissions will be reduced by the user's umask so the usual value here would be 0666, or if some very private data then 0600. (See &lt;a href=&quot;perlfunc#umask&quot;&gt;&quot;umask&quot; in perlfunc&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6996916e131ffdd2099b6960e83cf47a766c5cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$priority&lt;/code&gt; can specify a level, or a level and a facility. Levels and facilities can be given as strings or as macros. When using the &lt;code&gt;eventlog&lt;/code&gt; mechanism, priorities &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;INFO&lt;/code&gt; are mapped to event type &lt;code&gt;informational&lt;/code&gt; , &lt;code&gt;NOTICE&lt;/code&gt; and &lt;code&gt;WARNING&lt;/code&gt; to &lt;code&gt;warning&lt;/code&gt; and &lt;code&gt;ERR&lt;/code&gt; to &lt;code&gt;EMERG&lt;/code&gt; to &lt;code&gt;error&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$priority&lt;/code&gt; puede especificar un nivel, o un nivel y una instalaci&amp;oacute;n. Los niveles y las facilidades se pueden dar como cadenas o macros. Cuando se utiliza el mecanismo de &lt;code&gt;eventlog&lt;/code&gt; , las prioridades &lt;code&gt;DEBUG&lt;/code&gt; e &lt;code&gt;INFO&lt;/code&gt; se asignan al tipo de evento &lt;code&gt;informational&lt;/code&gt; , &lt;code&gt;NOTICE&lt;/code&gt; y &lt;code&gt;WARNING&lt;/code&gt; a &lt;code&gt;warning&lt;/code&gt; y &lt;code&gt;ERR&lt;/code&gt; a &lt;code&gt;EMERG&lt;/code&gt; a &lt;code&gt;error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15cea6082f477fe2c06c8fca9dd905437a202769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$priority&lt;/code&gt; can specify a level, or a level and a facility. Levels and facilities can be given as strings or as macros. When using the &lt;code&gt;eventlog&lt;/code&gt; mechanism, priorities &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;INFO&lt;/code&gt; are mapped to event type &lt;code&gt;informational&lt;/code&gt;, &lt;code&gt;NOTICE&lt;/code&gt; and &lt;code&gt;WARNING&lt;/code&gt; to &lt;code&gt;warning&lt;/code&gt; and &lt;code&gt;ERR&lt;/code&gt; to &lt;code&gt;EMERG&lt;/code&gt; to &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3f938608861924071f5867f7eeb4586a8165fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$reg&lt;/code&gt; can also be interpolated into a larger regexp:</source>
          <target state="translated">&lt;code&gt;$reg&lt;/code&gt; tambi&amp;eacute;n se puede interpolar en una expresi&amp;oacute;n regular m&amp;aacute;s grande:</target>
        </trans-unit>
        <trans-unit id="612a97216c18e1ebec4ff63ca7425527af6de069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$replacement&lt;/code&gt; can be a &lt;code&gt;CODEREF&lt;/code&gt; , taking the matching part as an argument, and returning a string to replace the matching part (a bit similar to &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s/(..)/$coderef-&amp;gt;($1)/e&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;$replacement&lt;/code&gt; puede ser un &lt;code&gt;CODEREF&lt;/code&gt; , tomando la parte coincidente como un argumento y devolviendo una cadena para reemplazar la parte coincidente (un poco similar a &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s/(..)/$coderef-&amp;gt;($1)/e&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fc2e25ba6b13db0d82967d4007e8e8189361595b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$replacement&lt;/code&gt; can be a &lt;code&gt;CODEREF&lt;/code&gt; , taking the matching part as an argument, and returning a string to replace the matching part (a bit similar to &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s/(..)/$coderef-&amp;gt;($1)/eg&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;$replacement&lt;/code&gt; puede ser un &lt;code&gt;CODEREF&lt;/code&gt; , tomando la parte coincidente como un argumento y devolviendo una cadena para reemplazar la parte coincidente (un poco similar a &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s/(..)/$coderef-&amp;gt;($1)/eg&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="202e61bbea4a0d6d9e400f4f5d166336a7eb21c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$replacement&lt;/code&gt; can be a &lt;code&gt;CODEREF&lt;/code&gt;, taking the matching part as an argument, and returning a string to replace the matching part (a bit similar to &lt;code&gt;s/(..)/$coderef-&amp;gt;($1)/e&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8eefb954c03d4aa74f9b0e96c85571cef015837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$replacement&lt;/code&gt; can be a &lt;code&gt;CODEREF&lt;/code&gt;, taking the matching part as an argument, and returning a string to replace the matching part (a bit similar to &lt;code&gt;s/(..)/$coderef-&amp;gt;($1)/eg&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd76eef9dc33935b7a30db6801cd3b07d380d5d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$rvhvOptions&lt;/code&gt; is a reference to a hash where any keys must be from the list &lt;code&gt;qw( Access Create Share Attributes Flags Security Model )&lt;/code&gt;. The meaning of the value depends on the key name, as described below. Any option values in &lt;code&gt;$rvhvOptions&lt;/code&gt; override the settings from &lt;code&gt;$svAccess&lt;/code&gt; and &lt;code&gt;$svShare&lt;/code&gt; if they conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528b5fef55798884841fb79c1c9b71054005f2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sAccess&lt;/code&gt; should be a string of zero or more characters from &lt;code&gt;&quot;qrw&quot;&lt;/code&gt; specifying the type of access desired: &quot;query&quot; or &lt;code&gt;0&lt;/code&gt;, &quot;read&quot; or &lt;code&gt;GENERIC_READ&lt;/code&gt; [the default], or &quot;write&quot; or &lt;code&gt;GENERIC_WRITE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3056b30c79e216ede3540f0d13052e16865f0cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sCreate&lt;/code&gt; should be a string containing zero or one character from &lt;code&gt;&quot;ktn&quot;&lt;/code&gt; and zero or one character from &lt;code&gt;&quot;ce&quot;&lt;/code&gt;. These stand for &quot;Keep if exists&quot;, &quot;Truncate if exists&quot;, &quot;New file only&quot;, &quot;Create if none&quot;, and &quot;Existing file only&quot;. These are translated into a &lt;code&gt;$uCreate&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dad52a46f057f12ae74641d8d0d02f9cda54081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sDosDeviceName&lt;/code&gt; is the name of a DOS device for which we'd like to add or delete a definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c3a46a9a124010238c4dc2f830f4b78d649f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sDosDeviceName&lt;/code&gt; is the name of the &quot;DOS&quot; device whose definitions we want. For example, &lt;code&gt;&quot;C:&quot;&lt;/code&gt;, &lt;code&gt;&quot;COM1&quot;&lt;/code&gt;, or &lt;code&gt;&quot;PhysicalDrive0&quot;&lt;/code&gt;. If &lt;code&gt;$sDosDeviceName&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;], the list of all DOS device names is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2fd75a918b49152306b6a09c49f469659d5cc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sMode&lt;/code&gt; is string of zero or more letters from &lt;code&gt;&quot;rwatb&quot;&lt;/code&gt;. These are translated into a combination &lt;code&gt;O_RDONLY&lt;/code&gt; [&lt;code&gt;&quot;r&quot;&lt;/code&gt;], &lt;code&gt;O_WRONLY&lt;/code&gt; [&lt;code&gt;&quot;w&quot;&lt;/code&gt;], &lt;code&gt;O_RDWR&lt;/code&gt; [&lt;code&gt;&quot;rw&quot;&lt;/code&gt;], &lt;code&gt;O_APPEND&lt;/code&gt; [&lt;code&gt;&quot;a&quot;&lt;/code&gt;], &lt;code&gt;O_TEXT&lt;/code&gt; [&lt;code&gt;&quot;t&quot;&lt;/code&gt;], and &lt;code&gt;O_BINARY&lt;/code&gt; [&lt;code&gt;&quot;b&quot;&lt;/code&gt;] flags [see the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module] that is passed to &lt;code&gt;OsFHandleOpenFd&lt;/code&gt;. Currently only &lt;code&gt;O_APPEND&lt;/code&gt; and &lt;code&gt;O_TEXT&lt;/code&gt; have any significance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29acb46d21100513c91871f6507e8fc966aff389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sOldFileName&lt;/code&gt; is the path to the file to be copied. &lt;code&gt;$sNewFileName&lt;/code&gt; is the path to where the file should be copied. Note that you can &lt;b&gt;NOT&lt;/b&gt; just specify a path to a directory in &lt;code&gt;$sNewFileName&lt;/code&gt; to copy the file to that directory using the same file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de18c8d5d1a275b72cb0e0f81966ae1c4837aa60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sPath&lt;/code&gt; can start with &lt;code&gt;&quot;//./&quot;&lt;/code&gt; to indicate that the rest of the path is the name of a &quot;DOS device.&quot; You can use &lt;code&gt;QueryDosDevice&lt;/code&gt; to list all current DOS devices and can add or delete them with &lt;code&gt;DefineDosDevice&lt;/code&gt;. If you get the source-code distribution of this module from CPAN, then it includes an example script,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fc37ac354c1b2e0db11d8f58f64fbab4c9170d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sPath&lt;/code&gt; can use &lt;code&gt;&quot;/&quot;&lt;/code&gt; or &lt;code&gt;&quot;\\&quot;&lt;/code&gt; as path delimiters and can even mix the two. We will usually only use &lt;code&gt;&quot;/&quot;&lt;/code&gt; in our examples since using &lt;code&gt;&quot;\\&quot;&lt;/code&gt; is usually harder to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e3fb7b23640f5db307dc8ade891627f72d63da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sPath&lt;/code&gt; is the path to the file [or device, etc.] to be opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c359589f748cdbd85aa59ea4828cfee65114196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sPath&lt;/code&gt; is the path to the file [or device, etc.] to be opened. See &lt;code&gt;CreateFile&lt;/code&gt; for more information on possible special values for &lt;code&gt;$sPath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83867a0429e4fb57dddf6f47f32eb678c17e3c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sRootPath&lt;/code&gt; is a string specifying the path to the root of the file system, for example, &lt;code&gt;&quot;C:/&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9129aa7df235870c0c771ec91bcc99781354edfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sShare&lt;/code&gt; should be a string with zero or more characters from &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; that is translated into a &lt;code&gt;$uShare&lt;/code&gt; value. &lt;code&gt;&quot;rw&quot;&lt;/code&gt; is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c48e77bafc3754d079037a6c4cad8f374994041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$sTargetPath&lt;/code&gt; is the DOS device's specific definition that you wish to add or delete. For &lt;code&gt;DDD_RAW_TARGET_PATH&lt;/code&gt;, these usually start with &lt;code&gt;&quot;\\Device\\&quot;&lt;/code&gt;. If the &lt;code&gt;DDD_RAW_TARGET_PATH&lt;/code&gt; bit is not set, then &lt;code&gt;$sTargetPath&lt;/code&gt; is just an ordinary path to some file or directory, providing the functionality of the &lt;b&gt;subst&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9e4971d52d96610e270b7cd755e674281c544d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$size&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;$size&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="4be46043ab0b51c9c5589553a80b54c97bf5b238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$source&lt;/code&gt; is a &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f70dd1ada08aa4e44016ed5a68169472c4c2ea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$string&lt;/code&gt; is used as a string under character semantics (see</source>
          <target state="translated">&lt;code&gt;$string&lt;/code&gt; se usa como una cadena en la sem&amp;aacute;ntica de caracteres (ver</target>
        </trans-unit>
        <trans-unit id="36b02cbb93fdd6beef91ca33a69881f090bb7f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$string&lt;/code&gt; is used as a string under character semantics (see &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e63b86218e785ebe89000e4a896ddd2dc1a4e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$svAccess&lt;/code&gt; can be a number containing the bit mask representing the specific type(s) of access to the file that you desire. See the &lt;code&gt;$uAccess&lt;/code&gt; parameter to &lt;code&gt;CreateFile&lt;/code&gt; for more information on these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ad6b02350e7e9e9780eaf220cb7384c7795c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$svAccess&lt;/code&gt; is designed to be &quot;do what I mean&quot;, so you can skip the rest of its explanation unless you are interested in the complex details. Note that, if you want write access to a device, you need to specify &lt;code&gt;&quot;k&quot;&lt;/code&gt; [and perhaps &lt;code&gt;&quot;e&quot;&lt;/code&gt;, as in &lt;code&gt;&quot;w ke&quot;&lt;/code&gt; or &lt;code&gt;&quot;rw ke&quot;&lt;/code&gt;] since Win32 suggests &lt;code&gt;OPEN_EXISTING&lt;/code&gt; be used when opening a device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93ae1889d1ef66ae7200713cd769d0a31a95e17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$svShare&lt;/code&gt; controls how the file is shared, that is, whether other processes can have read, write, and/or delete access to the file while we have it opened. &lt;code&gt;$svShare&lt;/code&gt; will usually be a string containing zero or more characters from &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; but can also be a numeric bit mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa4f7caba79ad8e78b5b2ec3e5d6363a246c4bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swDeviceName&lt;/code&gt; is Unicode and Unicode is written to &lt;code&gt;$oswTargetPath&lt;/code&gt;. &lt;code&gt;$lwTargetBuf&lt;/code&gt; and &lt;code&gt;$olwTargetLen&lt;/code&gt; are measured as number of &lt;code&gt;WCHAR&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db26d6ce3a2840baee85885fdd16f49ef697186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swDosDeviceName&lt;/code&gt; and &lt;code&gt;$swTargetPath&lt;/code&gt; are Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c0f79064a6bf402c769b84a2a4492b1efc61ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swFileName&lt;/code&gt; is Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4fe2da0f1608e5a1bb748e5bfde89399083db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swOldFileName&lt;/code&gt; and &lt;code&gt;$swNewFileName&lt;/code&gt; are Unicode strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2327a4bd2e739f8af078adf4b82bc94fc4e8d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swOldName&lt;/code&gt; and &lt;code&gt;$swNewName&lt;/code&gt; are Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d8c168397bc410fe0cfabdc8474585a786e63a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swPath&lt;/code&gt; is Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708e1f64c60ed2c49222651686bb9cd1c2d76aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swRootPath&lt;/code&gt; is Unicode and Unicode is written to &lt;code&gt;$oswVolName&lt;/code&gt; and &lt;code&gt;$oswFsType&lt;/code&gt;. &lt;code&gt;$lwVolName&lt;/code&gt; and &lt;code&gt;$lwFsType&lt;/code&gt; are measures as number of &lt;code&gt;WCHAR&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60c2698e803a2ea3de2ea43c5cefaac3118f8ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$swRootPath&lt;/code&gt; is Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f825b55b9b8aee9f82d71cf730342ce16b8e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uAccess&lt;/code&gt; is an unsigned value with bits set indicating the type of access desired. Usually either &lt;code&gt;0&lt;/code&gt; [&quot;query&quot; access], &lt;code&gt;GENERIC_READ&lt;/code&gt;, &lt;code&gt;GENERIC_WRITE&lt;/code&gt;, &lt;code&gt;GENERIC_READ|GENERIC_WRITE&lt;/code&gt;, or &lt;code&gt;GENERIC_ALL&lt;/code&gt;. More specific types of access can be specified, such as &lt;code&gt;FILE_APPEND_DATA&lt;/code&gt; or &lt;code&gt;FILE_READ_EA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e393500dd71d4edcc5073393bdc2067fb0bf807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uAccess&lt;/code&gt; should be an unsigned value containing bits set to indicate the type of access desired. &lt;code&gt;GENERIC_READ&lt;/code&gt; is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6694ecc6831eb02bd917df2f3fd5b0a942b2a838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uCreate&lt;/code&gt; is one of the following values: &lt;code&gt;OPEN_ALWAYS&lt;/code&gt;, &lt;code&gt;OPEN_EXISTING&lt;/code&gt;, &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;, &lt;code&gt;CREATE_ALWAYS&lt;/code&gt;, and &lt;code&gt;CREATE_NEW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43474630266004433c3743ad23d8940bc8bc9d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uCreate&lt;/code&gt; should be one of &lt;code&gt;OPEN_ALWAYS&lt;/code&gt;, &lt;code&gt;OPEN_EXISTING&lt;/code&gt;, &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;, &lt;code&gt;CREATE_ALWAYS&lt;/code&gt;, or &lt;code&gt;CREATE_NEW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a927bba9361aed12a2fc10c42e20c5d6d05730bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uFlags&lt;/code&gt; is an unsigned value having any of the &lt;code&gt;FILE_FLAG_*&lt;/code&gt; or &lt;code&gt;FILE_ATTRIBUTE_*&lt;/code&gt; bits set. Any &lt;code&gt;FILE_ATTRIBUTE_*&lt;/code&gt; bits set via the &lt;code&gt;Attributes&lt;/code&gt; option are logically &lt;code&gt;or&lt;/code&gt;ed with these bits. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c528a002980b0d0d67b0cea98c2931d550bf2e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uFlags&lt;/code&gt; is an unsigned value having zero or more of the bits &lt;code&gt;HANDLE_FLAG_INHERIT&lt;/code&gt; and &lt;code&gt;HANDLE_FLAG_PROTECT_FROM_CLOSE&lt;/code&gt; set. For each bit set in &lt;code&gt;$uMask&lt;/code&gt;, the corresponding bit in the handle's flags is set to the value of the corresponding bit in &lt;code&gt;$uFlags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fafecacf967a0c094c1cf37dcb8679e6ceb785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uFlags&lt;/code&gt; is an unsigned value with zero or more bits set indicating attributes to associate with the file [&lt;code&gt;FILE_ATTRIBUTE_*&lt;/code&gt; values] or special options [&lt;code&gt;FILE_FLAG_*&lt;/code&gt; values].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29df6dd7446b5613d118869b9171eb03d5f91bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uFlags&lt;/code&gt; is an unsigned value with zero or more of the following bits set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272a94934d778eb7482c2bb65753fe54488df5bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uFromWhere&lt;/code&gt; is either &lt;code&gt;FILE_BEGIN&lt;/code&gt;, &lt;code&gt;FILE_CURRENT&lt;/code&gt;, or &lt;code&gt;FILE_END&lt;/code&gt;, indicating that the new file position is being specified relative to the beginning of the file, the current file pointer, or the end of the file, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd64c9ae5363930f62b889fde590a114032248f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uIoControlCode&lt;/code&gt; is an unsigned value [a &lt;code&gt;IOCTL_*&lt;/code&gt; or &lt;code&gt;FSCTL_*&lt;/code&gt; constant] indicating the type query or other operation to be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4a3172c06bdf45af449cb6b7130db6880bcac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uMask&lt;/code&gt; is an unsigned value having one or more of the bits &lt;code&gt;HANDLE_FLAG_INHERIT&lt;/code&gt; and &lt;code&gt;HANDLE_FLAG_PROTECT_FROM_CLOSE&lt;/code&gt; set. Only bits set in &lt;code&gt;$uMask&lt;/code&gt; will be modified by &lt;code&gt;SetHandleInformation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4d1967382c31b1d1254de3b706ad657fd17050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uMediaType&lt;/code&gt; if the type of media to be formatted. Mostly used to specify the density to use when formatting a floppy diskette. See the &lt;code&gt;&quot;:MEDIA_TYPE&quot;&lt;/code&gt; export class for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5515f107fe7a0ad67946c9dcab4de4b18d1e3fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uMode&lt;/code&gt; the logical combination of zero or more &lt;code&gt;O_*&lt;/code&gt; constants exported by the &lt;code&gt;Fcntl&lt;/code&gt; module. Currently only &lt;code&gt;O_APPEND&lt;/code&gt; and &lt;code&gt;O_TEXT&lt;/code&gt; have any significance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af54b872c2e93b3cf0f089ffdd21a913c3d94778" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uShare&lt;/code&gt; controls how the file is shared, that is, whether other processes can have read, write, and/or delete access to the file while we have it opened. &lt;code&gt;$uShare&lt;/code&gt; is an unsigned value with zero or more of these bits set: &lt;code&gt;FILE_SHARE_READ&lt;/code&gt;, &lt;code&gt;FILE_SHARE_WRITE&lt;/code&gt;, and &lt;code&gt;FILE_SHARE_DELETE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc9f6e837ed07ae6902e986cbfff8b6ec5165d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uShare&lt;/code&gt; should be an unsigned value having zero or more of the following bits set: &lt;code&gt;FILE_SHARE_READ&lt;/code&gt;, &lt;code&gt;FILE_SHARE_WRITE&lt;/code&gt;, and &lt;code&gt;FILE_SHARE_DELETE&lt;/code&gt;. &lt;code&gt;FILE_SHARE_READ|FILE_SHARE_WRITE&lt;/code&gt; is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7c0488261ad642497f1c498432d90586758cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uStartLow&lt;/code&gt; and &lt;code&gt;$ivStartHigh&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8984c69ec63508eded31d0510c0af3cf62ba76f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$uStartOffsetLow&lt;/code&gt; and &lt;code&gt;$ivStartOffsetHigh&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b894e9b6db8b94a71be62b2c49b71d6ed691da37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$wday&lt;/code&gt; is the day of the week, with 0 indicating Sunday and 3 indicating Wednesday. &lt;code&gt;$yday&lt;/code&gt; is the day of the year, in the range &lt;code&gt;0..364&lt;/code&gt; (or &lt;code&gt;0..365&lt;/code&gt; in leap years.)</source>
          <target state="translated">&lt;code&gt;$wday&lt;/code&gt; es el d&amp;iacute;a de la semana, con 0 indicando domingo y 3 indicando mi&amp;eacute;rcoles. &lt;code&gt;$yday&lt;/code&gt; es el d&amp;iacute;a del a&amp;ntilde;o, en el rango &lt;code&gt;0..364&lt;/code&gt; (o &lt;code&gt;0..365&lt;/code&gt; en a&amp;ntilde;os bisiestos).</target>
        </trans-unit>
        <trans-unit id="566104b8b57e8adae9af2a92257d23c44ed92682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$year&lt;/code&gt; contains the number of years since 1900. To get a 4-digit year write:</source>
          <target state="translated">&lt;code&gt;$year&lt;/code&gt; contiene el n&amp;uacute;mero de a&amp;ntilde;os desde 1900. Para obtener un a&amp;ntilde;o de 4 d&amp;iacute;gitos, escriba:</target>
        </trans-unit>
        <trans-unit id="86e589fdde09b659409ca0b38cf7972114121630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;${$aref}[3]&lt;/code&gt; is too hard to read, so you can write &lt;code&gt;$aref-&amp;gt;[3]&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;${$aref}[3]&lt;/code&gt; es demasiado dif&amp;iacute;cil de leer, por lo que puede escribir &lt;code&gt;$aref-&amp;gt;[3]&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="a0b70c477481d76eb5c791655831cd7ab4c56a05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;${$href}{red}&lt;/code&gt; is too hard to read, so you can write &lt;code&gt;$href-&amp;gt;{red}&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;${$href}{red}&lt;/code&gt; es demasiado dif&amp;iacute;cil de leer, por lo que puede escribir &lt;code&gt;$href-&amp;gt;{red}&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="62f5dd5ce6207e4a1561af3a4be9cd1b69fa012e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%Config&lt;/code&gt; cannot always be trusted, however, because it was built at compile time. If perl was built in one place, then transferred elsewhere, some values may be wrong. The values may even have been edited after the fact.</source>
          <target state="translated">&lt;code&gt;%Config&lt;/code&gt; Sin embargo, no siempre se puede confiar en % Config porque se cre&amp;oacute; en tiempo de compilaci&amp;oacute;n. Si perl se cre&amp;oacute; en un lugar y luego se transfiri&amp;oacute; a otro lugar, es posible que algunos valores sean incorrectos. Los valores incluso pueden haber sido editados despu&amp;eacute;s del hecho.</target>
        </trans-unit>
        <trans-unit id="9d5a1674e9893543d61b6824d7ad5ce1de57ea3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%DB::dbline&lt;/code&gt; is an alias for &lt;code&gt;%{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt; , which contains breakpoints and actions keyed by line number in the currently-selected file, either explicitly chosen with the debugger's &lt;code&gt;f&lt;/code&gt; command, or implicitly by flow of execution.</source>
          <target state="translated">&lt;code&gt;%DB::dbline&lt;/code&gt; es un alias para &lt;code&gt;%{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt; , que contiene puntos de interrupci&amp;oacute;n y acciones codificadas por el n&amp;uacute;mero de l&amp;iacute;nea en el archivo actualmente seleccionado, ya sea elegido expl&amp;iacute;citamente con el comando &lt;code&gt;f&lt;/code&gt; del depurador , o impl&amp;iacute;citamente mediante el flujo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ebd9ea6606df189ea86efd84b24d8cdbea3e164e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%DB::dbline&lt;/code&gt; is an alias for &lt;code&gt;%{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt;, which contains breakpoints and actions keyed by line number in the currently-selected file, either explicitly chosen with the debugger's &lt;code&gt;f&lt;/code&gt; command, or implicitly by flow of execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3710204d711bc924f0b7331068ade1f834b38f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%Module::CoreList::version&lt;/code&gt; is implemented via &lt;code&gt;Module::CoreList::TieHashDelta&lt;/code&gt; using this hash of delta changes.</source>
          <target state="translated">&lt;code&gt;%Module::CoreList::version&lt;/code&gt; se implementa a trav&amp;eacute;s de &lt;code&gt;Module::CoreList::TieHashDelta&lt;/code&gt; usando este hash de cambios delta.</target>
        </trans-unit>
        <trans-unit id="7dcff8937e285ccb68b47de83e78b9d121fced62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%ext_map&lt;/code&gt; is a hashref whose keys are file extensions and whose values are modules used to load matching files:</source>
          <target state="translated">&lt;code&gt;%ext_map&lt;/code&gt; es un hashref cuyas claves son extensiones de archivo y cuyos valores son m&amp;oacute;dulos utilizados para cargar archivos coincidentes:</target>
        </trans-unit>
        <trans-unit id="a497e282840c002c295079c9b903e763139de21f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%table&lt;/code&gt; is an ordinary hash, and we get a list of keys from it, sort the keys, and loop over the keys as usual. The only use of references is in line 10. &lt;code&gt;$table{$country}&lt;/code&gt; looks up the key &lt;code&gt;$country&lt;/code&gt; in the hash and gets the value, which is a reference to an array of cities in that country. &lt;a href=&quot;#Use-Rule-1&quot;&gt;&lt;b&gt;Use Rule 1&lt;/b&gt;&lt;/a&gt; says that we can recover the array by saying &lt;code&gt;@{$table{$country}}&lt;/code&gt;. Line 10 is just like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79768fda3a695f3c4fdb3ac99f3e4047a946f91e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%table&lt;/code&gt; is an ordinary hash, and we get a list of keys from it, sort the keys, and loop over the keys as usual. The only use of references is in line 10. &lt;code&gt;$table{$country}&lt;/code&gt; looks up the key &lt;code&gt;$country&lt;/code&gt; in the hash and gets the value, which is a reference to an array of cities in that country. &lt;b&gt;Use Rule 1&lt;/b&gt; says that we can recover the array by saying &lt;code&gt;@{$table{$country}}&lt;/code&gt; . Line 10 is just like</source>
          <target state="translated">&lt;code&gt;%table&lt;/code&gt; es un hash ordinario, y obtenemos una lista de claves de &amp;eacute;l, ordenamos las claves y recorremos las claves como de costumbre. El &amp;uacute;nico uso de referencias est&amp;aacute; en la l&amp;iacute;nea 10. &lt;code&gt;$table{$country}&lt;/code&gt; busca la clave &lt;code&gt;$country&lt;/code&gt; en el hash y obtiene el valor, que es una referencia a una matriz de ciudades en ese pa&amp;iacute;s. &lt;b&gt;La regla de uso 1&lt;/b&gt; dice que podemos recuperar la matriz diciendo &lt;code&gt;@{$table{$country}}&lt;/code&gt; . La l&amp;iacute;nea 10 es como</target>
        </trans-unit>
        <trans-unit id="4404183ada88202cf010fc560d605be6d49f385c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;execute_tests&lt;/code&gt; , &lt;code&gt;$verbose&lt;/code&gt; , &lt;code&gt;$switches&lt;/code&gt; and &lt;code&gt;$debug&lt;/code&gt; are exported upon request.</source>
          <target state="translated">&lt;code&gt;&amp;amp;execute_tests&lt;/code&gt; , &lt;code&gt;$verbose&lt;/code&gt; , &lt;code&gt;$switches&lt;/code&gt; y &lt;code&gt;$debug&lt;/code&gt; se exportan a pedido.</target>
        </trans-unit>
        <trans-unit id="6a05d92922782ba52a6f02c53bc63d6b8571aa31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;execute_tests&lt;/code&gt;, &lt;code&gt;$verbose&lt;/code&gt;, &lt;code&gt;$switches&lt;/code&gt; and &lt;code&gt;$debug&lt;/code&gt; are exported upon request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45269f768c922774c862b4d90ab49e385f90d369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mkmanifest&lt;/code&gt; , &lt;code&gt;&amp;amp;manicheck&lt;/code&gt; , &lt;code&gt;&amp;amp;filecheck&lt;/code&gt; , &lt;code&gt;&amp;amp;fullcheck&lt;/code&gt; , &lt;code&gt;&amp;amp;maniread&lt;/code&gt; , and &lt;code&gt;&amp;amp;manicopy&lt;/code&gt; are exportable.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mkmanifest&lt;/code&gt; , &lt;code&gt;&amp;amp;manicheck&lt;/code&gt; , &lt;code&gt;&amp;amp;filecheck&lt;/code&gt; , &lt;code&gt;&amp;amp;fullcheck&lt;/code&gt; , &lt;code&gt;&amp;amp;maniread&lt;/code&gt; y &lt;code&gt;&amp;amp;manicopy&lt;/code&gt; son exportables.</target>
        </trans-unit>
        <trans-unit id="545b93c612451ce14a1cb71d927fc13e42abb04e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mkmanifest&lt;/code&gt;, &lt;code&gt;&amp;amp;manicheck&lt;/code&gt;, &lt;code&gt;&amp;amp;filecheck&lt;/code&gt;, &lt;code&gt;&amp;amp;fullcheck&lt;/code&gt;, &lt;code&gt;&amp;amp;maniread&lt;/code&gt;, and &lt;code&gt;&amp;amp;manicopy&lt;/code&gt; are exportable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94402b86d955ff1473eb3f3a60990fbe37bfa8f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;runtests&lt;/code&gt; is exported by &lt;code&gt;Test::Harness&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;&amp;amp;runtests&lt;/code&gt; es exportado por &lt;code&gt;Test::Harness&lt;/code&gt; por defecto.</target>
        </trans-unit>
        <trans-unit id="aba3911985212758d304bc3065398a1036ca1bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;utf8::Any&lt;/code&gt; must be the last line in the definition.</source>
          <target state="translated">&lt;code&gt;&amp;amp;utf8::Any&lt;/code&gt; debe ser la &amp;uacute;ltima l&amp;iacute;nea de la definici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="527c2e64b494c015d4028a361ab7efc863ae5a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;file&lt;/code&gt; appends stdout to &lt;code&gt;file&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;file&lt;/code&gt; agrega stdout al &lt;code&gt;file&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="e007ce2320d1d12dc21b68329e4e1c82508ef823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;file&lt;/code&gt; appends stdout to &lt;code&gt;file&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c5b75423bd382c0392edbb5987f4b7aa1948d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;file&lt;/code&gt; writes stdout to &lt;code&gt;file&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;&amp;gt;file&lt;/code&gt; escribe stdout en &lt;code&gt;file&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="9927a161615d5a0027d3f1cb4c7450db9cc730fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;file&lt;/code&gt; writes stdout to &lt;code&gt;file&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a198ab2fc5d2c06e492b673eb92f300a5ab9a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; may also be spelled &lt;code&gt;readline(*&lt;i&gt;FILEHANDLE&lt;/i&gt;)&lt;/code&gt;. See &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; tambi&amp;eacute;n puede escribirse &lt;code&gt;readline(*&lt;i&gt;FILEHANDLE&lt;/i&gt;)&lt;/code&gt; . Ver &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21a027a7c8d85233b0fdcf1b9a3de452acb82d1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; may also be spelled &lt;code&gt;readline(*&lt;i&gt;FILEHANDLE&lt;/i&gt;)&lt;/code&gt;. See &lt;a href=&quot;perlfunc#readline&quot;&gt;&quot;readline&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b69bcfa4d3a7ec9dcc845d68c9ad2b3d938bde2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; sort operators. It is possible to make multiple passes over your data, building indices to make the upcoming sort more efficient, and to use what is known as the &lt;code&gt;OM&lt;/code&gt; (Orcish Maneuver) to cache the sort keys in advance. The cache lookup, while a good idea, can itself be a source of slowdown by enforcing a double pass over the data - once to setup the cache, and once to sort the data. Using &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; to extract the required sort key into a consistent string can be an efficient way to build a single string to compare, instead of using multiple sort keys, which makes it possible to use the standard, written in &lt;code&gt;c&lt;/code&gt; and fast, perl &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; function on the output, and is the basis of the &lt;code&gt;GRT&lt;/code&gt; (Guttman Rossler Transform). Some string combinations can slow the &lt;code&gt;GRT&lt;/code&gt; down, by just being too plain complex for its own good.</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operadores de clasificaci&amp;oacute;n. Es posible realizar varias pasadas sobre sus datos, construir &amp;iacute;ndices para hacer que la clasificaci&amp;oacute;n siguiente sea m&amp;aacute;s eficiente y usar lo que se conoce como &lt;code&gt;OM&lt;/code&gt; (Maniobra orca) para almacenar en cach&amp;eacute; las claves de clasificaci&amp;oacute;n por adelantado. La b&amp;uacute;squeda de cach&amp;eacute;, si bien es una buena idea, puede ser en s&amp;iacute; misma una fuente de desaceleraci&amp;oacute;n al imponer un doble paso sobre los datos: una vez para configurar la cach&amp;eacute; y otra para ordenar los datos. Usar &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; para extraer la clave de clasificaci&amp;oacute;n requerida en una cadena consistente puede ser una forma eficiente de construir una sola cadena para comparar, en lugar de usar m&amp;uacute;ltiples claves de clasificaci&amp;oacute;n, lo que hace posible usar el est&amp;aacute;ndar, escrito en &lt;code&gt;c&lt;/code&gt; y r&amp;aacute;pido, perl &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; funci&amp;oacute;n en la salida, y es la base de la &lt;code&gt;GRT&lt;/code&gt; (Transformada de Guttman Rossler). Algunas combinaciones de cuerdas pueden ralentizar el &lt;code&gt;GRT&lt;/code&gt; , simplemente por ser demasiado complejas para su propio bien.</target>
        </trans-unit>
        <trans-unit id="7af2b8e9836889306ef275b2f5b7ab190c8a14d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; sort operators. It is possible to make multiple passes over your data, building indices to make the upcoming sort more efficient, and to use what is known as the &lt;code&gt;OM&lt;/code&gt; (Orcish Maneuver) to cache the sort keys in advance. The cache lookup, while a good idea, can itself be a source of slowdown by enforcing a double pass over the data - once to setup the cache, and once to sort the data. Using &lt;code&gt;pack()&lt;/code&gt; to extract the required sort key into a consistent string can be an efficient way to build a single string to compare, instead of using multiple sort keys, which makes it possible to use the standard, written in &lt;code&gt;c&lt;/code&gt; and fast, perl &lt;code&gt;sort()&lt;/code&gt; function on the output, and is the basis of the &lt;code&gt;GRT&lt;/code&gt; (Guttman Rossler Transform). Some string combinations can slow the &lt;code&gt;GRT&lt;/code&gt; down, by just being too plain complex for its own good.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2522b02da50fc40f449f255883204d5ce36cdba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;file&lt;/code&gt; reads stdin from &lt;code&gt;file&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;&amp;lt;file&lt;/code&gt; lee stdin del &lt;code&gt;file&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="4db0ada369c583771090c658af484786159c8d1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;file&lt;/code&gt; reads stdin from &lt;code&gt;file&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14589c420569470c1984bef3b342e4d0f8631d06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;package Foo VERSION&lt;/code&gt;&amp;gt; is also checked for. The first version declaration found is used, but this may change as it differs from how Perl does it.</source>
          <target state="translated">&lt;code&gt;&amp;lt;package Foo VERSION&lt;/code&gt; Tambi&amp;eacute;n se comprueba &amp;lt;paquete Foo VERSION &amp;gt;. Se utiliza la declaraci&amp;oacute;n de la primera versi&amp;oacute;n encontrada, pero esto puede cambiar ya que difiere de c&amp;oacute;mo lo hace Perl.</target>
        </trans-unit>
        <trans-unit id="b676c2be1bdb0c811ba9dd4408d9c29fc2a9335c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;''&lt;/code&gt;, &lt;code&gt;q//&lt;/code&gt;, &lt;code&gt;tr'''&lt;/code&gt;, &lt;code&gt;y'''&lt;/code&gt;, the replacement of &lt;code&gt;s'''&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57277544f99da37812cb13ed4c2e1bfba223227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'errno'&lt;/code&gt; - unresolved external</source>
          <target state="translated">&lt;code&gt;'errno'&lt;/code&gt; - externo no resuelto</target>
        </trans-unit>
        <trans-unit id="2bf5df0d5016c091b9ad33718ad6c0bec078273a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($m,$e) = $x-&amp;gt;parts();&lt;/code&gt; is just a shortcut giving you both of them.</source>
          <target state="translated">&lt;code&gt;($m,$e) = $x-&amp;gt;parts();&lt;/code&gt; es solo un atajo que les brinda a ambos.</target>
        </trans-unit>
        <trans-unit id="335e612b5ff3e1f01aac0192c233fe148635e487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($m,$e) = $x-&amp;gt;parts()&lt;/code&gt; is just a shortcut that gives you both of them in one go. Both the returned mantissa and exponent have a sign.</source>
          <target state="translated">&lt;code&gt;($m,$e) = $x-&amp;gt;parts()&lt;/code&gt; es solo un atajo que te brinda los dos de una vez. Tanto la mantisa como el exponente devueltos tienen un signo.</target>
        </trans-unit>
        <trans-unit id="bf01940c6e15510382f59972931abf91ab7ff676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&amp;lt;&lt;i&gt;NAME&lt;/i&gt;&amp;gt;)&lt;/code&gt;&lt;code&gt;('&lt;i&gt;NAME&lt;/i&gt;')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&amp;lt;&lt;i&gt;NAME&lt;/i&gt;&amp;gt;)&lt;/code&gt;&lt;code&gt;('&lt;i&gt;NAME&lt;/i&gt;')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fedb3bb9d6413e4bbe6a2c6335698beeff16f76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;();&lt;/code&gt; before executing your program.</source>
          <target state="translated">&lt;code&gt;();&lt;/code&gt; antes de ejecutar su programa.</target>
        </trans-unit>
        <trans-unit id="fa175ba88d79f8b6a523c90568d96d5134312661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;();&lt;/code&gt; before executing your program. This loads the module, but does not call its &lt;code&gt;import&lt;/code&gt; method, so does not import subroutines and does not give effect to a pragma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d886df01903304092bd283981b387cfba658d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(*ACCEPT)&lt;/code&gt;&lt;code&gt;(*ACCEPT:&lt;i&gt;arg&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(*ACCEPT)&lt;/code&gt;&lt;code&gt;(*ACCEPT:&lt;i&gt;arg&lt;/i&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3ca38720e7b4b8c0a6d08319fb619ac034ed869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(*COMMIT)&lt;/code&gt;&lt;code&gt;(*COMMIT:&lt;i&gt;arg&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(*COMMIT)&lt;/code&gt;&lt;code&gt;(*COMMIT:&lt;i&gt;arg&lt;/i&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5d1389f583504edbe344a603efea2c1f79b5c0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(*FAIL)&lt;/code&gt;&lt;code&gt;(*F)&lt;/code&gt;&lt;code&gt;(*FAIL:&lt;i&gt;arg&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(*FAIL)&lt;/code&gt;&lt;code&gt;(*F)&lt;/code&gt;&lt;code&gt;(*FAIL:&lt;i&gt;arg&lt;/i&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2474cee596cec4055ac7bf031a8922b76276bfcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(*MARK:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(*:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(*MARK:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(*:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b870a9693a15529c5b4158603e0099ad430e175f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(*PRUNE)&lt;/code&gt;&lt;code&gt;(*PRUNE:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(*PRUNE)&lt;/code&gt;&lt;code&gt;(*PRUNE:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8dea11a680245b56ec4f67ed76ab488bc9dacd40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(*SKIP)&lt;/code&gt;&lt;code&gt;(*SKIP:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(*SKIP)&lt;/code&gt;&lt;code&gt;(*SKIP:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15e7589fb44b96285af32cf021d9e9aeb4875d3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(*THEN)&lt;/code&gt;&lt;code&gt;(*THEN:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(*THEN)&lt;/code&gt;&lt;code&gt;(*THEN:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9af3a02b9b89b0b1c6ec366644d2efc013529aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(1)&lt;/code&gt;&lt;code&gt;(2)&lt;/code&gt; ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f998646b410d0e0c233aedae52ca06f7c88353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt; should be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e12c2ff928c4fe0525987ef40b07c7b28ddde1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?!S)&lt;/code&gt;, &lt;code&gt;(?&amp;lt;!S)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5924d439c7bf817c5c2eecfdf85a418dcdb26d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt; does not disable backtracking altogether once it has matched. It is still possible to backtrack past the construct, but not into it. So &lt;code&gt;((?&amp;gt;a*)|(?&amp;gt;b*))ar&lt;/code&gt; will still match &quot;bar&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e828005905b2cb26110ffaf5a2deff6a0d4e2b01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; does not disable backtracking altogether once it has matched. It is still possible to backtrack past the construct, but not into it. So &lt;code&gt;((?&amp;gt;a*)|(?&amp;gt;b*))ar&lt;/code&gt; will still match &quot;bar&quot;.</source>
          <target state="translated">&lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; no deshabilita el retroceso por completo una vez que ha coincidido. Todav&amp;iacute;a es posible retroceder m&amp;aacute;s all&amp;aacute; del constructo, pero no entrar en &amp;eacute;l. Entonces &lt;code&gt;((?&amp;gt;a*)|(?&amp;gt;b*))ar&lt;/code&gt; a&amp;uacute;n coincidir&amp;aacute; con &quot;bar&quot;.</target>
        </trans-unit>
        <trans-unit id="65dc98163725b46e369060f76a03e9466c746b39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(?-&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(?+&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(?R)&lt;/code&gt;&lt;code&gt;(?0)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(?-&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(?+&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt;&lt;code&gt;(?R)&lt;/code&gt;&lt;code&gt;(?0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="064efafd6cc4cdf0c17a94045c8c391bed595eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?=...)&lt;/code&gt;&lt;code&gt;(?!...)&lt;/code&gt;&lt;code&gt;(?&amp;lt;=...)&lt;/code&gt;&lt;code&gt;(?&amp;lt;!...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(?=...)&lt;/code&gt;&lt;code&gt;(?!...)&lt;/code&gt;&lt;code&gt;(?&amp;lt;=...)&lt;/code&gt;&lt;code&gt;(?&amp;lt;!...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50a8db6343f11594a4a4bdb2b5f1e2a508e85932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?=S)&lt;/code&gt;, &lt;code&gt;(?&amp;lt;=S)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1eb91e09f0565c1c6c61d13a1331c3c8c978f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(??{ &lt;i&gt;EXPR&lt;/i&gt; })&lt;/code&gt;, &lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be7a3f94bc970ea91ca7c3a8ca0a541e4b53518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?[ ])&lt;/code&gt; is a regex-compile-time construct. Any attempt to use something which isn't knowable at the time the containing regular expression is compiled is a fatal error. In practice, this means just three limitations:</source>
          <target state="translated">&lt;code&gt;(?[ ])&lt;/code&gt; es una construcci&amp;oacute;n en tiempo de compilaci&amp;oacute;n de expresiones regulares. Cualquier intento de usar algo que no se pueda conocer en el momento en que se compila la expresi&amp;oacute;n regular que lo contiene es un error fatal. En la pr&amp;aacute;ctica, esto significa solo tres limitaciones:</target>
        </trans-unit>
        <trans-unit id="15dcd160cd34133b7dd894f85ebc4242c48ba25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(R1)&lt;/code&gt;&lt;code&gt;(R2)&lt;/code&gt; ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27eb85448fde31a928acd307f22171e886dd53f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(bool)!!(cbool)&lt;/code&gt; in a ternary triggers a bug in xlc on AIX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f752acf5e406ed8d0869b1bfe190380c3c0274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(condition)&lt;/code&gt; should be one of: 1) an integer in parentheses (which is valid if the corresponding pair of parentheses matched); 2) a look-ahead/look-behind/evaluate zero-width assertion; 3) a name in angle brackets or single quotes (which is valid if a group with the given name matched); or 4) the special symbol (R) (true when evaluated inside of recursion or eval). Additionally the R may be followed by a number, (which will be true when evaluated when recursing inside of the appropriate group), or by &lt;code&gt;&amp;amp;NAME&lt;/code&gt; , in which case it will be true only when evaluated during recursion in the named group.</source>
          <target state="translated">&lt;code&gt;(condition)&lt;/code&gt; debe ser uno de: 1) un n&amp;uacute;mero entero entre par&amp;eacute;ntesis (que es v&amp;aacute;lido si el par de par&amp;eacute;ntesis correspondiente coincide); 2) una aserci&amp;oacute;n de anticipaci&amp;oacute;n / retroceso / evaluaci&amp;oacute;n de ancho cero; 3) un nombre entre par&amp;eacute;ntesis angulares o comillas simples (que es v&amp;aacute;lido si un grupo con el nombre de pila coincide); o 4) el s&amp;iacute;mbolo especial (R) (verdadero cuando se eval&amp;uacute;a dentro de la recursividad o eval). Adem&amp;aacute;s, la R puede ir seguida de un n&amp;uacute;mero (que ser&amp;aacute; verdadero cuando se eval&amp;uacute;e cuando se repita dentro del grupo apropiado), o por &lt;code&gt;&amp;amp;NAME&lt;/code&gt; , en cuyo caso ser&amp;aacute; verdadero solo cuando se eval&amp;uacute;e durante la recursi&amp;oacute;n en el grupo nombrado.</target>
        </trans-unit>
        <trans-unit id="aa9b0fa5c0b39b64800f8d498a9073608a7a4d19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; Note: &lt;code&gt;\c?&lt;/code&gt; maps to ordinal 127 (&lt;code&gt;DEL&lt;/code&gt; ) on ASCII platforms, but since ordinal 127 is a not a control character on EBCDIC machines, &lt;code&gt;\c?&lt;/code&gt; instead maps on them to &lt;code&gt;APC&lt;/code&gt; , which is 255 in 0037 and 1047, and 95 in POSIX-BC.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; Nota: &lt;code&gt;\c?&lt;/code&gt; se asigna al ordinal 127 ( &lt;code&gt;DEL&lt;/code&gt; ) en plataformas ASCII, pero dado que el ordinal 127 no es un car&amp;aacute;cter de control en m&amp;aacute;quinas EBCDIC, &lt;code&gt;\c?&lt;/code&gt; en su lugar, los asigna a &lt;code&gt;APC&lt;/code&gt; , que es 255 en 0037 y 1047, y 95 en POSIX-BC.</target>
        </trans-unit>
        <trans-unit id="4199412c80feb67132ade7906956f37b18594a73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; Note: &lt;code&gt;\c?&lt;/code&gt; maps to ordinal 127 (&lt;code&gt;DEL&lt;/code&gt;) on ASCII platforms, but since ordinal 127 is a not a control character on EBCDIC machines, &lt;code&gt;\c?&lt;/code&gt; instead maps on them to &lt;code&gt;APC&lt;/code&gt;, which is 255 in 0037 and 1047, and 95 in POSIX-BC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035ce503fd0375c8adfff5fd158d918cc90831ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*foo = *bar&lt;/code&gt; makes the typeglobs themselves synonymous while &lt;code&gt;*foo = \$bar&lt;/code&gt; makes the SCALAR portions of two distinct typeglobs refer to the same scalar value. This means that the following code:</source>
          <target state="translated">&lt;code&gt;*foo = *bar&lt;/code&gt; hace que los typeglobs sean sin&amp;oacute;nimos mientras que &lt;code&gt;*foo = \$bar&lt;/code&gt; hace que las porciones ESCALAR de dos typeglobs distintos se refieran al mismo valor escalar. Esto significa que el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="8e9e441ecd7acaac4042c4859f5a0792684bc9d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*foo{IO}&lt;/code&gt; is an alternative to the &lt;code&gt;*HANDLE&lt;/code&gt; mechanism given in &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;&quot;Typeglobs and Filehandles&quot; in perldata&lt;/a&gt; for passing filehandles into or out of subroutines, or storing into larger data structures. Its disadvantage is that it won't create a new filehandle for you. Its advantage is that you have less risk of clobbering more than you want to with a typeglob assignment. (It still conflates file and directory handles, though.) However, if you assign the incoming value to a scalar instead of a typeglob as we do in the examples below, there's no risk of that happening.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c604dc0f175af1bba7e47da20d670e13f47051ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*foo{IO}&lt;/code&gt; is an alternative to the &lt;code&gt;*HANDLE&lt;/code&gt; mechanism given in &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs and Filehandles in perldata&lt;/a&gt; for passing filehandles into or out of subroutines, or storing into larger data structures. Its disadvantage is that it won't create a new filehandle for you. Its advantage is that you have less risk of clobbering more than you want to with a typeglob assignment. (It still conflates file and directory handles, though.) However, if you assign the incoming value to a scalar instead of a typeglob as we do in the examples below, there's no risk of that happening.</source>
          <target state="translated">&lt;code&gt;*foo{IO}&lt;/code&gt; es una alternativa al mecanismo &lt;code&gt;*HANDLE&lt;/code&gt; dado en &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs y Filehandles en perldata&lt;/a&gt; para pasar identificadores de archivos dentro o fuera de subrutinas, o almacenar en estructuras de datos m&amp;aacute;s grandes. Su desventaja es que no crear&amp;aacute; un nuevo identificador de archivo para usted. Su ventaja es que tiene menos riesgo de golpear m&amp;aacute;s de lo que desea con una asignaci&amp;oacute;n de typeglob. (Sin embargo, a&amp;uacute;n combina los identificadores de archivos y directorios). Sin embargo, si asigna el valor entrante a un escalar en lugar de a un typeglob como lo hacemos en los ejemplos siguientes, no hay riesgo de que eso suceda.</target>
        </trans-unit>
        <trans-unit id="c3d4ebd20cdf20e16fbae469dbb3ad04c1abb62c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*foo{NAME}&lt;/code&gt; and &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; are the exception, in that they return strings, rather than references. These return the package and name of the typeglob itself, rather than one that has been assigned to it. So, after &lt;code&gt;*foo=*Foo::bar&lt;/code&gt; , &lt;code&gt;*foo&lt;/code&gt; will become &quot;*Foo::bar&quot; when used as a string, but &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; and &lt;code&gt;*foo{NAME}&lt;/code&gt; will continue to produce &quot;main&quot; and &quot;foo&quot;, respectively.</source>
          <target state="translated">&lt;code&gt;*foo{NAME}&lt;/code&gt; y &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; son la excepci&amp;oacute;n, ya que devuelven cadenas, en lugar de referencias. Estos devuelven el paquete y el nombre del typeglob en s&amp;iacute;, en lugar de uno que se le ha asignado. Entonces, despu&amp;eacute;s de &lt;code&gt;*foo=*Foo::bar&lt;/code&gt; , &lt;code&gt;*foo&lt;/code&gt; se convertir&amp;aacute; en &quot;* Foo :: bar&quot; cuando se use como una cadena, pero &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; y &lt;code&gt;*foo{NAME}&lt;/code&gt; continuar&amp;aacute;n produciendo &quot;principal&quot; y &quot; foo &quot;, respectivamente.</target>
        </trans-unit>
        <trans-unit id="c807a3cc1120ee3d4298bd8bee0433c0e935b02d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*foo{NAME}&lt;/code&gt; and &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; are the exception, in that they return strings, rather than references. These return the package and name of the typeglob itself, rather than one that has been assigned to it. So, after &lt;code&gt;*foo=*Foo::bar&lt;/code&gt;, &lt;code&gt;*foo&lt;/code&gt; will become &quot;*Foo::bar&quot; when used as a string, but &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; and &lt;code&gt;*foo{NAME}&lt;/code&gt; will continue to produce &quot;main&quot; and &quot;foo&quot;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24be20f1954d03345ad07292891249385805f4e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*foo{THING}&lt;/code&gt; returns undef if that particular THING hasn't been used yet, except in the case of scalars. &lt;code&gt;*foo{SCALAR}&lt;/code&gt; returns a reference to an anonymous scalar if $foo hasn't been used yet. This might change in a future release.</source>
          <target state="translated">&lt;code&gt;*foo{THING}&lt;/code&gt; devuelve undef si esa COSA en particular no se ha utilizado todav&amp;iacute;a, excepto en el caso de los escalares. &lt;code&gt;*foo{SCALAR}&lt;/code&gt; devuelve una referencia a un escalar an&amp;oacute;nimo si a&amp;uacute;n no se ha utilizado $ foo. Esto podr&amp;iacute;a cambiar en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="1c13e53a577e4ff91677f7a1d5c8b78b19510b80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*ret_script&lt;/code&gt;, if &lt;code&gt;ret_script&lt;/code&gt; is not NULL, will on return of TRUE contain the script found, using the &lt;code&gt;SCX_enum&lt;/code&gt; typedef. Its value will be &lt;code&gt;SCX_INVALID&lt;/code&gt; if the function returns FALSE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf00da8ca1b908437ae167615e53dcc1cb8be4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt; behaves as the other operators above, except that if it is a string matching the format &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; the string increment described in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; is used.</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt; se comporta como los otros operadores anteriores, excepto que si es una cadena que coincide con el formato &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; se usa el incremento de cadena descrito en &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5ab1d29e15a5c3f21795175775542056567ba7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30f6f906816a36d4b6415eeb3e8337b9e38881e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--help&lt;/code&gt; and &lt;code&gt;--version&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--help&lt;/code&gt; y &lt;code&gt;--version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a840b7022604e03a1d5d8cf231a6de0797d49c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--libpods&lt;/code&gt; in &lt;code&gt;Pod::Html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f2d052179f5b02b61e4ee4b12373d3302528c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-commit&lt;/code&gt; means that the merge commit will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e420741266b6860a4508be97164f7bc0785245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;i&gt;X&lt;/i&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89d83eaf2fc697229f135e1e358e73dae8e4c1c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-DDEBUGGING&lt;/code&gt; turns on the C compiler's &lt;code&gt;-g&lt;/code&gt; flag to have it produce debugging information which will allow us to step through a running program, and to see in which C function we are at (without the debugging information we might see only the numerical addresses of the functions, which is not very helpful). It will also turn on the &lt;code&gt;DEBUGGING&lt;/code&gt; compilation symbol which enables all the internal debugging code in Perl. There are a whole bunch of things you can debug with this: &lt;a href=&quot;perlrun#-Dletters&quot;&gt;perlrun&lt;/a&gt; lists them all, and the best way to find out about them is to play about with them. The most useful options are probably</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c7395952652d692e1ed3ecb90decbeb8d571b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-W&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;-O&lt;/code&gt; are indistinguishable from &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , &lt;code&gt;-o&lt;/code&gt; . (Win32, VMS, RISC OS)</source>
          <target state="translated">&lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-W&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;-O&lt;/code&gt; son indistinguibles de &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , &lt;code&gt;-o&lt;/code&gt; . (Sistema operativo Win32, VMS, RISC)</target>
        </trans-unit>
        <trans-unit id="7eb337f6812220bbc378c8918aaccdb06d8e5a80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-T&lt;/code&gt; and &lt;code&gt;-B&lt;/code&gt; not implemented on filehandles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5af3fb6df5c96c8552d3c4c08384be45953ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d&lt;/code&gt; is true if passed a device spec without an explicit directory. (VMS)</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; es verdadero si se pasa una especificaci&amp;oacute;n de dispositivo sin un directorio expl&amp;iacute;cito. (VMS)</target>
        </trans-unit>
        <trans-unit id="a340d0a2b8e44c5124e4655b8a7237da67ea42b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; , &lt;code&gt;-k&lt;/code&gt; , &lt;code&gt;-l&lt;/code&gt; , &lt;code&gt;-u&lt;/code&gt; , &lt;code&gt;-A&lt;/code&gt; are not particularly meaningful. (Win32, VMS, RISC OS)</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; , &lt;code&gt;-k&lt;/code&gt; , &lt;code&gt;-l&lt;/code&gt; , &lt;code&gt;-u&lt;/code&gt; , &lt;code&gt;-A&lt;/code&gt; no son particularmente significativos. (Sistema operativo Win32, VMS, RISC)</target>
        </trans-unit>
        <trans-unit id="f770fc0a63e71da3b8a342413f4e20e2101d6c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g&lt;/code&gt; is a flag to the C compiler to have it produce debugging information which will allow us to step through a running program, and to see in which C function we are at (without the debugging information we might see only the numerical addresses of the functions, which is not very helpful).</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; es una bandera para el compilador de C para que produzca informaci&amp;oacute;n de depuraci&amp;oacute;n que nos permitir&amp;aacute; recorrer un programa en ejecuci&amp;oacute;n y ver en qu&amp;eacute; funci&amp;oacute;n de C estamos (sin la informaci&amp;oacute;n de depuraci&amp;oacute;n, podr&amp;iacute;amos ver solo las direcciones num&amp;eacute;ricas de la funciones, que no es muy &amp;uacute;til).</target>
        </trans-unit>
        <trans-unit id="01a975a3450c1d047de8b68a1655f0a6a6ff1b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; sets the value of Perl's &lt;code&gt;$^I&lt;/code&gt; variable, which in turn affects the behavior of &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ; see &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more details. By modifying the appropriate variables directly, you can get the same behavior within a larger program. For example:</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; establece el valor de la variable &lt;code&gt;$^I&lt;/code&gt; de Perl , que a su vez afecta el comportamiento de &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ; ver &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; para m&amp;aacute;s detalles. Modificando las variables apropiadas directamente, puede obtener el mismo comportamiento dentro de un programa m&amp;aacute;s grande. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="337b967ba4742e9ed6f538291efb59f4f6fd6517" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; sets the value of Perl's &lt;code&gt;$^I&lt;/code&gt; variable, which in turn affects the behavior of &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;; see &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more details. By modifying the appropriate variables directly, you can get the same behavior within a larger program. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b10664fc54008087510d34f397715746fc9c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-ldb&lt;/code&gt; (&lt;code&gt;use DB_File&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbc057a85c7f800669e9db2fe8dbee41005e5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-lgdbm_compat&lt;/code&gt; (&lt;code&gt;use GDBM_File&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df07bafaa229b3f5f804e2d15db5243976c6a78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-mode&lt;/code&gt; is a synonym for &lt;code&gt;mode&lt;/code&gt; . &lt;code&gt;-recsep&lt;/code&gt; is a synonym for &lt;code&gt;recsep&lt;/code&gt; . &lt;code&gt;-memory&lt;/code&gt; is a synonym for &lt;code&gt;memory&lt;/code&gt; . You get the idea.</source>
          <target state="translated">&lt;code&gt;-mode&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;mode&lt;/code&gt; . &lt;code&gt;-recsep&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;recsep&lt;/code&gt; . &lt;code&gt;-memory&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;memory&lt;/code&gt; . Entiendes la idea.</target>
        </trans-unit>
        <trans-unit id="e6110680d1d767a67153d43347e3fdd6f5bcc9ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-mode&lt;/code&gt; is a synonym for &lt;code&gt;mode&lt;/code&gt;. &lt;code&gt;-recsep&lt;/code&gt; is a synonym for &lt;code&gt;recsep&lt;/code&gt;. &lt;code&gt;-memory&lt;/code&gt; is a synonym for &lt;code&gt;memory&lt;/code&gt;. You get the idea.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0a276652d303ec951b268b499d37c63d348f0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; destination: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3df98be4420c3856ff554875e341d1dcb377965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt; is not particularly meaningful. (VMS, RISC OS)</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt; no es particularmente significativo. (VMS, sistema operativo RISC)</target>
        </trans-unit>
        <trans-unit id="44b5ade4f4cc1c4ba0b0dbebf1e249761eeda9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-quiet =&amp;gt; num&lt;/code&gt; If &lt;code&gt;num&lt;/code&gt; is true, do not print any errors/warnings. This is useful when Pod::Checker is used to munge POD code into plain text from within POD formatters.</source>
          <target state="translated">&lt;code&gt;-quiet =&amp;gt; num&lt;/code&gt; Si &lt;code&gt;num&lt;/code&gt; es verdadero, no imprima ning&amp;uacute;n error / advertencia. Esto es &amp;uacute;til cuando Pod :: Checker se usa para convertir el c&amp;oacute;digo POD en texto plano desde dentro de los formateadores POD.</target>
        </trans-unit>
        <trans-unit id="f770ed91ff164559d0abd6133fd3b69dd5415bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , and &lt;code&gt;-o&lt;/code&gt; tell whether the file is accessible, which may not reflect UIC-based file protections. (VMS)</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; y &lt;code&gt;-o&lt;/code&gt; indican si el archivo es accesible, lo que puede no reflejar las protecciones de archivos basadas en UIC. (VMS)</target>
        </trans-unit>
        <trans-unit id="c598522c04ff68c955ea80deb6fbadc566e1d400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; by name on an open file will return the space reserved on disk, rather than the current extent. &lt;code&gt;-s&lt;/code&gt; on an open filehandle returns the current size. (RISC OS)</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; por nombre en un archivo abierto devolver&amp;aacute; el espacio reservado en el disco, en lugar de la extensi&amp;oacute;n actual. &lt;code&gt;-s&lt;/code&gt; en un identificador de archivo abierto devuelve el tama&amp;ntilde;o actual. (SO RISC)</target>
        </trans-unit>
        <trans-unit id="eb7f863a163eba9181b50764fd83652ace5e0f66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; is always set. You can turn this off in the test with &lt;code&gt;&lt;a href=&quot;../functions/begin&quot;&gt;BEGIN&lt;/a&gt; {
$^W = 0 }&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; siempre est&amp;aacute; configurado. Puede desactivar esto en la prueba con &lt;code&gt;&lt;a href=&quot;../functions/begin&quot;&gt;BEGIN&lt;/a&gt; { $^W = 0 }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a64f9c7392987247a0fc1eb7836c0d8b005b492f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; is always set. You can turn this off in the test with &lt;code&gt;BEGIN { $^W = 0 }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f6253934c68e4dbdee50184314e515e3ed4d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; only inspects the read-only file attribute (FILE_ATTRIBUTE_READONLY), which determines whether the directory can be deleted, not whether it can be written to. Directories always have read and write access unless denied by discretionary access control lists (DACLs). (Win32)</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; solo inspecciona el atributo de archivo de solo lectura (FILE_ATTRIBUTE_READONLY), que determina si el directorio se puede eliminar, no si se puede escribir en &amp;eacute;l. Los directorios siempre tienen acceso de lectura y escritura a menos que se lo denieguen las listas de control de acceso discrecional (DACL). (Win32)</target>
        </trans-unit>
        <trans-unit id="9848a00d3e7ba37f894ed0ca52d187153533cc0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-warnings =&amp;gt; num&lt;/code&gt; Print warnings if &lt;code&gt;num&lt;/code&gt; is true. The higher the value of &lt;code&gt;num&lt;/code&gt; , the more warnings are printed. Currently there are only levels 1 and 2.</source>
          <target state="translated">&lt;code&gt;-warnings =&amp;gt; num&lt;/code&gt; Imprime advertencias si &lt;code&gt;num&lt;/code&gt; es verdadero. Cuanto mayor sea el valor de &lt;code&gt;num&lt;/code&gt; , m&amp;aacute;s advertencias se imprimen. Actualmente solo hay niveles 1 y 2.</target>
        </trans-unit>
        <trans-unit id="4b176e2b933f212d02f374a3824598ae9dba0ce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-warnings =&amp;gt; num&lt;/code&gt; Print warnings if &lt;code&gt;num&lt;/code&gt; is true. The higher the value of &lt;code&gt;num&lt;/code&gt;, the more warnings are printed. Currently there are only levels 1 and 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26338b342767aa86a4f5c2cd446ef7694f7f9b03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;) determine if a file ends in one of the executable suffixes. &lt;code&gt;-S&lt;/code&gt; is meaningless. (Win32)</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; (o &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; ) determina si un archivo termina en uno de los sufijos ejecutables. &lt;code&gt;-S&lt;/code&gt; no tiene sentido. (Win32)</target>
        </trans-unit>
        <trans-unit id="004059b6589f5cf146373041cd8de0aa8db4fb99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-x&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;) determine if a file has an executable file type. (RISC OS)</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; (o &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; ) determina si un archivo tiene un tipo de archivo ejecutable. (SO RISC)</target>
        </trans-unit>
        <trans-unit id="81eef613b824b1747a72935a85add68ac2d1f8db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; is not implemented in Perls before 5.6, so if your code is required to work on ancient Perls you'll need to &lt;code&gt;unpack( 'Z* Z* C')&lt;/code&gt; to get the length, then use it to make a new unpack string. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cb77fa8022c6097d9e2722edcf56db77b193e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; is not implemented in Perls before 5.6, so if your code is required to work on older Perls you'll need to &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;( 'Z* Z* C')&lt;/code&gt; to get the length, then use it to make a new unpack string. For example</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; no est&amp;aacute; implementado en Perls antes de 5.6, por lo que si se requiere que su c&amp;oacute;digo funcione en Perls m&amp;aacute;s antiguos, deber&amp;aacute; &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;( 'Z* Z* C')&lt;/code&gt; para obtener la longitud, luego usarlo para crear una nueva cadena de descompresi&amp;oacute;n. Por ejemplo</target>
        </trans-unit>
        <trans-unit id="2255f653ec4e14f86b6a230c7950f4828d1c42f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/World/&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m!World!&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{World}&lt;/a&gt;&lt;/code&gt; all represent the same thing. When, e.g., the quote (&lt;code&gt;&quot;&lt;/code&gt;) is used as a delimiter, the forward slash &lt;code&gt;'/'&lt;/code&gt; becomes an ordinary character and can be used in this regexp without trouble.</source>
          <target state="translated">&lt;code&gt;/World/&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m!World!&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{World}&lt;/a&gt;&lt;/code&gt; todos representan lo mismo. Cuando, por ejemplo, la cita ( &lt;code&gt;&quot;&lt;/code&gt; ) se usa como delimitador, la barra diagonal &lt;code&gt;'/'&lt;/code&gt; se convierte en un car&amp;aacute;cter ordinario y se puede usar en esta expresi&amp;oacute;n regular sin problemas.</target>
        </trans-unit>
        <trans-unit id="57db4c8594199544c2d3fecbc9419f7dffeaabcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/World/&lt;/code&gt;, &lt;code&gt;m!World!&lt;/code&gt;, and &lt;code&gt;m{World}&lt;/code&gt; all represent the same thing. When,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4bb16c5b73fbb6e42dd2c89421c762d2d8f026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/a&lt;/code&gt; also sets the character set to Unicode, BUT adds several restrictions for &lt;b&gt;A&lt;/b&gt;SCII-safe matching.</source>
          <target state="translated">&lt;code&gt;/a&lt;/code&gt; tambi&amp;eacute;n establece el juego de caracteres en Unicode, PERO agrega varias restricciones para &lt;b&gt;una&lt;/b&gt; coincidencia segura con SCII.</target>
        </trans-unit>
        <trans-unit id="a058655ca9b7df500f2266e0005549d8d3e223d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/bin/ftp&lt;/code&gt; is blacklisted by default; see the &lt;code&gt;$BLACKLIST&lt;/code&gt; variable further down.</source>
          <target state="translated">&lt;code&gt;/bin/ftp&lt;/code&gt; est&amp;aacute; en la lista negra de forma predeterminada; vea la variable &lt;code&gt;$BLACKLIST&lt;/code&gt; m&amp;aacute;s abajo.</target>
        </trans-unit>
        <trans-unit id="e7c7c0b08473b89f6eba8829e2c3c1656684873f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/d&lt;/code&gt; is the old, problematic, pre-5.14 &lt;b&gt;D&lt;/b&gt;efault character set behavior. Its only use is to force that old behavior.</source>
          <target state="translated">&lt;code&gt;/d&lt;/code&gt; es la edad, pre-5.14 problem&amp;aacute;tica &lt;b&gt;D&lt;/b&gt; comportamiento conjunto de caracteres EFAULT. Su &amp;uacute;nico uso es forzar ese viejo comportamiento.</target>
        </trans-unit>
        <trans-unit id="febc46674582418d06306fc87a6a9bd45f9575fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/d&lt;/code&gt;, &lt;code&gt;/u&lt;/code&gt; , &lt;code&gt;/a&lt;/code&gt; , and &lt;code&gt;/l&lt;/code&gt; , available starting in 5.14, are called the character set modifiers; they affect the character set rules used for the regular expression.</source>
          <target state="translated">&lt;code&gt;/d&lt;/code&gt; , &lt;code&gt;/u&lt;/code&gt; , &lt;code&gt;/a&lt;/code&gt; y &lt;code&gt;/l&lt;/code&gt; , disponibles a partir de 5.14, se denominan modificadores de juego de caracteres; afectan las reglas del juego de caracteres utilizadas para la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="a2060960bf53cce890224f5d094444a097782675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/d&lt;/code&gt;, &lt;code&gt;/u&lt;/code&gt;, &lt;code&gt;/a&lt;/code&gt;, and &lt;code&gt;/l&lt;/code&gt;, available starting in 5.14, are called the character set modifiers; they affect the character set rules used for the regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06be9530bb2010fdd11e0f1b95eec169aadce4a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/i&lt;/code&gt; - RXf_PMf_FOLD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3dca77dde06103b6c36b2ae1b1e009f9eb7c7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/m&lt;/code&gt; - RXf_PMf_MULTILINE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be46506529386b3035b895262634d656f11d6b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/m&lt;/code&gt; and any of the other pattern modifiers valid for &lt;code&gt;qr&lt;/code&gt; (summarized in &lt;a href=&quot;perlop#qr%2FSTRING%2Fmsixpodualn&quot;&gt;&quot;qr/STRING/msixpodualn&quot; in perlop&lt;/a&gt;) may be specified explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6d598b1ecd53357374289fc79181d6b6e30491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/n&lt;/code&gt; can be negated on a per-group basis. Alternatively, named captures may still be used.</source>
          <target state="translated">&lt;code&gt;/n&lt;/code&gt; se puede negar por grupo. Alternativamente, se pueden seguir utilizando capturas con nombre.</target>
        </trans-unit>
        <trans-unit id="3861d5486d1c8dacacfafd812dd725204996130b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/p&lt;/code&gt; - RXf_PMf_KEEPCOPY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cc910be73831bfdb016175defb426e9d262a26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/s&lt;/code&gt; - RXf_PMf_SINGLELINE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ac450b442821abb7c32c4c890405928fdfa28f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/u&lt;/code&gt; sets the character set to &lt;b&gt;U&lt;/b&gt;nicode.</source>
          <target state="translated">&lt;code&gt;/u&lt;/code&gt; establece el juego de caracteres en &lt;b&gt;U&lt;/b&gt; nicode.</target>
        </trans-unit>
        <trans-unit id="3548c9702fdc2ba20697f13a861fc261122dbd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/x&lt;/code&gt; - RXf_PMf_EXTENDED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c5df4421c7fc39c500f6ab9f340d3db92f7e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/x&lt;/code&gt; and &lt;code&gt;/xx&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6e6811f940842bfe68f8f325e8926a1b230169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/x&lt;/code&gt; but NOT &lt;code&gt;/xx&lt;/code&gt; is turned on for matching &lt;code&gt;foo&lt;/code&gt;. (One might mistakenly think that since the inner &lt;code&gt;(?x)&lt;/code&gt; is already in the scope of &lt;code&gt;/x&lt;/code&gt;, that the result would effectively be the sum of them, yielding &lt;code&gt;/xx&lt;/code&gt;. It doesn't work that way.) Similarly, doing something like &lt;code&gt;(?xx-x)foo&lt;/code&gt; turns off all &lt;code&gt;&quot;x&quot;&lt;/code&gt; behavior for matching &lt;code&gt;foo&lt;/code&gt;, it is not that you subtract 1 &lt;code&gt;&quot;x&quot;&lt;/code&gt; from 2 to get 1 &lt;code&gt;&quot;x&quot;&lt;/code&gt; remaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd7758b5452e01f565373a6a0ae745fee7b3413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/x&lt;/code&gt; lets you turn this:</source>
          <target state="translated">&lt;code&gt;/x&lt;/code&gt; te permite convertir esto:</target>
        </trans-unit>
        <trans-unit id="22ddae5ee6d3b01640a82b11115def15c0a0729c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/x&lt;/code&gt; tells the regular expression parser to ignore most whitespace that is neither backslashed nor within a bracketed character class. You can use this to break up your regular expression into (slightly) more readable parts. Also, the &lt;code&gt;#&lt;/code&gt; character is treated as a metacharacter introducing a comment that runs up to the pattern's closing delimiter, or to the end of the current line if the pattern extends onto the next line. Hence, this is very much like an ordinary Perl code comment. (You can include the closing delimiter within the comment only if you precede it with a backslash, so be careful!)</source>
          <target state="translated">&lt;code&gt;/x&lt;/code&gt; le dice al analizador de expresiones regulares que ignore la mayor&amp;iacute;a de los espacios en blanco que no tienen barra invertida ni est&amp;aacute;n dentro de una clase de caracteres entre corchetes. Puede usar esto para dividir su expresi&amp;oacute;n regular en partes (un poco) m&amp;aacute;s legibles. Adem&amp;aacute;s, el car&amp;aacute;cter &lt;code&gt;#&lt;/code&gt; se trata como un metacar&amp;aacute;cter que introduce un comentario que se extiende hasta el delimitador de cierre del patr&amp;oacute;n o hasta el final de la l&amp;iacute;nea actual si el patr&amp;oacute;n se extiende a la l&amp;iacute;nea siguiente. Por lo tanto, esto es muy parecido a un comentario de c&amp;oacute;digo Perl ordinario. (Puede incluir el delimitador de cierre dentro del comentario solo si lo precede con una barra invertida, &amp;iexcl;as&amp;iacute; que tenga cuidado!)</target>
        </trans-unit>
        <trans-unit id="5981c6b6f44acf2b5d0296f7ddc1ba22fd92a26b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0[0]&lt;/code&gt; items indicate that there is no corresponding node.</source>
          <target state="translated">&lt;code&gt;0[0]&lt;/code&gt; indican que no hay un nodo correspondiente.</target>
        </trans-unit>
        <trans-unit id="9e482cf4b4fb32a891abadbdc5931dba553b2cbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1..1&lt;/code&gt; is the plan. Gotta have a plan.</source>
          <target state="translated">&lt;code&gt;1..1&lt;/code&gt; es el plan. Tengo que tener un plan.</target>
        </trans-unit>
        <trans-unit id="357c1f4786776945e609918b8c8cfeffd4814efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1..2&lt;/code&gt; &quot;I'm going to run two tests.&quot; This number is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f4659203df54167193cff6c0f4aff8f74db145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; for the active [boot] partition, &lt;code&gt;0&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079935d14865ac40c0d6e200d065519e65c3cdcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; redirects stderr to stdout.</source>
          <target state="translated">&lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; redirige stderr a stdout.</target>
        </trans-unit>
        <trans-unit id="337d24f61f20784a0224676b1a3b5621a81abd45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;&amp;gt;file&lt;/code&gt; appends stderr to &lt;code&gt;file&lt;/code&gt; , and</source>
          <target state="translated">&lt;code&gt;2&amp;gt;&amp;gt;file&lt;/code&gt; agrega stderr al &lt;code&gt;file&lt;/code&gt; , y</target>
        </trans-unit>
        <trans-unit id="c93e1e3b63b3997909269a56132979367a2908b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;&amp;gt;file&lt;/code&gt; appends stderr to &lt;code&gt;file&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ccb2f92fe3975e1a3fd67583081fc9c8b22203" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;file&lt;/code&gt; writes stderr to &lt;code&gt;file&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;2&amp;gt;file&lt;/code&gt; escribe stderr en &lt;code&gt;file&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="2633d2d523c28079e792d5d37573647c2bf245bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&amp;gt;file&lt;/code&gt; writes stderr to &lt;code&gt;file&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3981fad441eed11874883499cec6490b94bc7d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extended&lt;/code&gt; exports the Perl specific functions for &lt;code&gt;syslog(3)&lt;/code&gt; :</source>
          <target state="translated">&lt;code&gt;:extended&lt;/code&gt; exporta las funciones espec&amp;iacute;ficas de Perl para &lt;code&gt;syslog(3)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="20809ddba384127a4e6dcad13d2bbb2ef9338a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extended&lt;/code&gt; exports the Perl specific functions for &lt;code&gt;syslog(3)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b097d19f9e31e760a010b2177386c29f33c946a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loose&lt;/code&gt; is a variant of &lt;code&gt;:full&lt;/code&gt; which allows</source>
          <target state="translated">&lt;code&gt;:loose&lt;/code&gt; es una variante de &lt;code&gt;:full&lt;/code&gt; que permite</target>
        </trans-unit>
        <trans-unit id="669910f757f8fda30540781c67df68d670678863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loose&lt;/code&gt; slows down look-ups by a factor of 2 to 3 versus &lt;code&gt;:full&lt;/code&gt; , but the trade-off may be worth it to you. Each individual look-up takes very little time, and the results are cached, so the speed difference would become a factor only in programs that do look-ups of many different spellings, and probably only when those look-ups are through &lt;code&gt;vianame()&lt;/code&gt; and &lt;code&gt;string_vianame()&lt;/code&gt; , since &lt;code&gt;\N{...}&lt;/code&gt; look-ups are done at compile time.</source>
          <target state="translated">&lt;code&gt;:loose&lt;/code&gt; ralentiza las b&amp;uacute;squedas en un factor de 2 a 3 frente a &lt;code&gt;:full&lt;/code&gt; , pero la compensaci&amp;oacute;n puede valer la pena. Cada b&amp;uacute;squeda individual toma muy poco tiempo y los resultados se almacenan en cach&amp;eacute;, por lo que la diferencia de velocidad se convertir&amp;iacute;a en un factor solo en los programas que realizan b&amp;uacute;squedas de muchas ortograf&amp;iacute;as diferentes, y probablemente solo cuando esas b&amp;uacute;squedas se realizan a trav&amp;eacute;s de &lt;code&gt;vianame()&lt;/code&gt; y &lt;code&gt;string_vianame()&lt;/code&gt; , ya que las b&amp;uacute;squedas de &lt;code&gt;\N{...}&lt;/code&gt; se realizan en tiempo de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c6e0215da1d7610a87a4e7d86aa022e822a6f802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:loose&lt;/code&gt; slows down look-ups by a factor of 2 to 3 versus &lt;code&gt;:full&lt;/code&gt;, but the trade-off may be worth it to you. Each individual look-up takes very little time, and the results are cached, so the speed difference would become a factor only in programs that do look-ups of many different spellings, and probably only when those look-ups are through &lt;code&gt;vianame()&lt;/code&gt; and &lt;code&gt;string_vianame()&lt;/code&gt;, since &lt;code&gt;\N{...}&lt;/code&gt; look-ups are done at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30cd1d98eed48333498321f9b192607ed098b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; exports the symbols corresponding to most of your &lt;code&gt;syslog(3)&lt;/code&gt; macros and the &lt;code&gt;LOG_UPTO()&lt;/code&gt; and &lt;code&gt;LOG_MASK()&lt;/code&gt; functions. See &lt;a href=&quot;#CONSTANTS&quot;&gt;&quot;CONSTANTS&quot;&lt;/a&gt; for the supported constants and their meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d7d864e6dd6725fe109f9ec74c6124803c81cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; exports the symbols corresponding to most of your &lt;code&gt;syslog(3)&lt;/code&gt; macros and the &lt;code&gt;LOG_UPTO()&lt;/code&gt; and &lt;code&gt;LOG_MASK()&lt;/code&gt; functions. See &lt;a href=&quot;#CONSTANTS&quot;&gt;CONSTANTS&lt;/a&gt; for the supported constants and their meaning.</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; exporta los s&amp;iacute;mbolos correspondientes a la mayor&amp;iacute;a de sus macros &lt;code&gt;syslog(3)&lt;/code&gt; y las &lt;code&gt;LOG_UPTO()&lt;/code&gt; y &lt;code&gt;LOG_MASK()&lt;/code&gt; . Consulte &lt;a href=&quot;#CONSTANTS&quot;&gt;CONSTANTES&lt;/a&gt; para conocer las constantes admitidas y su significado.</target>
        </trans-unit>
        <trans-unit id="f664d57f829bb236ed3a80342cea7743e03c9843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:nocase&lt;/code&gt; and &lt;code&gt;:case&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:nocase&lt;/code&gt; y &lt;code&gt;:case&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ab2b6ddbb0fceedf80002fb9aaa0607068bb9e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:opd&lt;/code&gt; is a shortcut for &lt;code&gt;:opd=st&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393965e591f823a5c7c5f84e45b034f602c1b44f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:perlio&lt;/code&gt; will insert a &lt;code&gt;:unix&lt;/code&gt; layer below itself to do low level IO.</source>
          <target state="translated">&lt;code&gt;:perlio&lt;/code&gt; insertar&amp;aacute; una capa &lt;code&gt;:unix&lt;/code&gt; debajo de s&amp;iacute; mismo para hacer IO de bajo nivel.</target>
        </trans-unit>
        <trans-unit id="58bdb7835e989d3493f81c8387cdd5e6b357f584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:standard&lt;/code&gt; exports the standard &lt;code&gt;syslog(3)&lt;/code&gt; functions:</source>
          <target state="translated">&lt;code&gt;:standard&lt;/code&gt; exporta las funciones est&amp;aacute;ndar de &lt;code&gt;syslog(3)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f99024fdcd5d7be686de72feba8634bf250081c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:std&lt;/code&gt; is not a layer but an additional subpragma. When specified in the import list, it activates an additional functionality of pushing the layers selected for input/output handles to the standard filehandles (STDIN, STDOUT, STDERR). If the new layers and existing layer stack both end with an &lt;code&gt;:encoding&lt;/code&gt; layer, the existing &lt;code&gt;:encoding&lt;/code&gt; layer will also be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5614a93cb7651c6f75221f644159413f24c097f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:via(MODULE)&lt;/code&gt; allows a transformation to be applied by an arbitrary Perl module, for example compression / decompression, encryption / decryption. See &lt;a href=&quot;PerlIO::via&quot;&gt;PerlIO::via&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c47c3c98a623a31a423c0141262968398f2c3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;;&lt;/code&gt; before executing your program. This loads the module and calls its &lt;code&gt;import&lt;/code&gt; method, causing the module to have its default effect, typically importing subroutines or giving effect to a pragma. You can use quotes to add extra code after the module name, e.g., &lt;code&gt;'-M&lt;i&gt;MODULE&lt;/i&gt; qw(foo bar)'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7723508b0cf32c6becdfb32b8c90afbcd97daea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;;&lt;/code&gt; before executing your program. You can use quotes to add extra code after the module name, e.g., &lt;code&gt;'-M&lt;i&gt;MODULE&lt;/i&gt; qw(foo bar)'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;;&lt;/code&gt; antes de ejecutar su programa. Puede usar comillas para agregar c&amp;oacute;digo adicional despu&amp;eacute;s del nombre del m&amp;oacute;dulo, por ejemplo, &lt;code&gt;'-M&lt;i&gt;MODULE&lt;/i&gt; qw(foo bar)'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46553e5b2e1fde3176954b71404b7f6a22f6b3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; also sets the &lt;code&gt;exported_to()&lt;/code&gt; attribute of your builder to be the caller of the &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n establece elatributo &lt;code&gt;exported_to()&lt;/code&gt; de su constructor para que sea el llamador de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b4b41e6d9806d4d5463fcd3e58de249dc723c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; accepts one optional parameter, which is the layer to be passed on to the &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; acepta un par&amp;aacute;metro opcional, que es la capa que se pasa a lallamada &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74f783a72bce4dae4ba2e4905d91ba101d770101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; sets &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; on the underlying &lt;code&gt;IO&lt;/code&gt; object, as documented in &lt;code&gt;perldoc -f &lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; establece &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; en elobjeto &lt;code&gt;IO&lt;/code&gt; subyacente, como se documenta en &lt;code&gt;perldoc -f &lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c2c461c21657cf272797141a2b0587b13a03497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; will return (at least for Perl v5.7.1 and up) another BigInt, not a Perl scalar:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; devolver&amp;aacute; (al menos para Perl v5.7.1 y posteriores) otro BigInt, no un escalar de Perl:</target>
        </trans-unit>
        <trans-unit id="87be11f6d2f761c7d725f291d31bf6656fee51d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; follows references exactly</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; sigue exactamente las referencias</target>
        </trans-unit>
        <trans-unit id="5da38e4772827175e65158aeaa06f0af9689d353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; places a &lt;b&gt;advisory&lt;/b&gt; lock on a variable until the lock goes out of scope. If the variable is locked by another thread, the &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; call will block until it's available. Multiple calls to &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; by the same thread from within dynamically nested scopes are safe -- the variable will remain locked until the outermost lock on the variable goes out of scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; coloca unbloqueo de&lt;b&gt; aviso&lt;/b&gt; en una variable hasta que el bloqueo se sale de su alcance. Si la variable est&amp;aacute; bloqueada por otro hilo, lallamada de &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; se bloquear&amp;aacute; hasta que est&amp;eacute; disponible. Varias llamadas para &lt;code&gt;&lt;a href=&quot;../functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; por el mismo hilo desde dentro de alcances anidados din&amp;aacute;micamente son seguras: la variable permanecer&amp;aacute; bloqueada hasta que el bloqueo m&amp;aacute;s externo de la variable salga del alcance.</target>
        </trans-unit>
        <trans-unit id="b0bc602e5a95f7ab0683bcb13cca7976f3a0b65a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log(-inf)&lt;/a&gt;&lt;/code&gt; is highly weird. Since log(-x)=pi*i+log(x), then log(-inf)=pi*i+inf. However, since the imaginary part is finite, the real infinity &quot;overshadows&quot; it, so the number might as well just be infinity. However, the result is a complex number, and since BigInt/BigFloat can only have real numbers as results, the result is NaN.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log(-inf)&lt;/a&gt;&lt;/code&gt; es muy extra&amp;ntilde;o. Dado que log (-x) = pi * i + log (x), entonces log (-inf) = pi * i + inf. Sin embargo, dado que la parte imaginaria es finita, el infinito real la &quot;eclipsa&quot;, por lo que el n&amp;uacute;mero tambi&amp;eacute;n podr&amp;iacute;a ser infinito. Sin embargo, el resultado es un n&amp;uacute;mero complejo, y dado que BigInt / BigFloat solo puede tener n&amp;uacute;meros reales como resultados, el resultado es NaN.</target>
        </trans-unit>
        <trans-unit id="59ec191a3833592580741021600849b3abd729c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; accepts one, two or three parameters. With one parameter, it is just a front end for the built-in &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; function. With two or three parameters, the first parameter is a filename that may include whitespace or other special characters, and the second parameter is the open mode, optionally followed by a file permission value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; acepta uno, dos o tres par&amp;aacute;metros. Con un par&amp;aacute;metro, es solo una interfaz para lafunci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; incorporada. Con dos o tres par&amp;aacute;metros, el primer par&amp;aacute;metro es un nombre de archivo que puede incluir espacios en blanco u otros caracteres especiales, y el segundo par&amp;aacute;metro es el modo abierto, seguido opcionalmente por un valor de permiso de archivo.</target>
        </trans-unit>
        <trans-unit id="c2ead93e5ae2cdbfb37e87b9aaf4b56f8342cd9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; takes two arguments. The first is the name of the file to open and the second is the open mode. The mode can be anything acceptable to &lt;a href=&quot;../compress/zlib&quot;&gt;Compress::Zlib&lt;/a&gt; and by extension anything acceptable to</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; toma dos argumentos. El primero es el nombre del archivo a abrir y el segundo es el modo abierto. El modo puede ser cualquier cosa aceptable para&lt;a href=&quot;../compress/zlib&quot;&gt; Compress :: Zlib&lt;/a&gt; y, por extensi&amp;oacute;n, cualquier cosa aceptable para</target>
        </trans-unit>
        <trans-unit id="10314a65bb5f737678649714b2af14bac7ab022b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; cannot be deferred. When you perform one of these operations, any deferred data is written to the file and the operation is performed immediately. This may change in a future version.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; no se pueden diferir. Cuando realiza una de estas operaciones, los datos diferidos se escriben en el archivo y la operaci&amp;oacute;n se realiza de inmediato. Esto puede cambiar en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="75f1af66ad9aaecf816ee7e3787eccbf41e6b7e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; is a static method, that is you call it with the package name like &lt;code&gt;new&lt;/code&gt; . &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt; and &lt;code&gt;EXCEPTION&lt;/code&gt; are either &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;IO::Select&lt;/code&gt; objects. &lt;code&gt;TIMEOUT&lt;/code&gt; is optional and has the same effect as for the core select call.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; es un m&amp;eacute;todo est&amp;aacute;tico, es decir, lo llama con el nombre del paquete como &lt;code&gt;new&lt;/code&gt; . &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt; y &lt;code&gt;EXCEPTION&lt;/code&gt; son &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;IO::Select&lt;/code&gt; objetos. &lt;code&gt;TIMEOUT&lt;/code&gt; es opcional y tiene el mismo efecto que para la llamada de selecci&amp;oacute;n principal.</target>
        </trans-unit>
        <trans-unit id="817eadf1b9adde1ba72695f76344cd268af72b88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; only ever matches another &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; solo coincide con otro &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5396d3ff479715000ca76635e4a7743888fcf9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will only ever match &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. So you can test a value against &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; like this:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; solo coincidir&amp;aacute; con &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Entonces puedes probar un valor contra &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; como este:</target>
        </trans-unit>
        <trans-unit id="00aaf4e59c63d867f1c68b03ef33ba4aa5fba34a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;-ing a &lt;code&gt;Tie::File&lt;/code&gt; array element just blanks out the corresponding record in the file. When you read it back again, you'll get the empty string, so the supposedly-&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;'ed value will be defined. Similarly, if you have &lt;code&gt;autochomp&lt;/code&gt; disabled, then</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; -ing unelemento de matriz &lt;code&gt;Tie::File&lt;/code&gt; simplemente borra el registro correspondiente en el archivo. Cuando lo lea de nuevo, obtendr&amp;aacute; la cadena vac&amp;iacute;a, por lo que se &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; el valorsupuestamente indefinido . Del mismo modo, si tiene &lt;code&gt;autochomp&lt;/code&gt; desactivado, entonces</target>
        </trans-unit>
        <trans-unit id="6e7047b1bd29e1be50a6c94747b1f96dfa733cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. The value of the macro is not needed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . No se necesita el valor de la macro.</target>
        </trans-unit>
        <trans-unit id="e529533962f928a5563433218b96d46c0165a2f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; raises an exception. Inside an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the error message is stuffed into &lt;code&gt;$@&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is terminated with the undefined value. If the exception is outside of all enclosing &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s, then the uncaught exception prints LIST to &lt;code&gt;STDERR&lt;/code&gt; and exits with a non-zero value. If you need to exit the process with a specific exit code, see &lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; plantea una excepci&amp;oacute;n. Dentro de una &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n, el mensaje de error se rellena en &lt;code&gt;$@&lt;/code&gt; y la &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n finaliza con el valor indefinido. Si la excepci&amp;oacute;n est&amp;aacute; fuera de todas las &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaciones &lt;code&gt;STDERR&lt;/code&gt; , la excepci&amp;oacute;n no detectada imprime LIST en STDERR y sale con un valor distinto de cero. Si necesita salir del proceso con un c&amp;oacute;digo de salida espec&amp;iacute;fico, vea&lt;a href=&quot;exit&quot;&gt; salir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc00daf5a8853ec2a5f38fb396e5099336656db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; hace</target>
        </trans-unit>
        <trans-unit id="3ef00a2fa49a9b03b5b9e7f1482c6a3dce655e77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; hace</target>
        </trans-unit>
        <trans-unit id="4df80248abb973135120867aea4de5126e5c9845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c20b988761a2edd02a7e93114a0c1a07205215f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d70096a2fa7e934b6d2fbdd9d57c878aed759204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/connect&quot;&gt;connect&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpeername&quot;&gt;getpeername&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getsockname&quot;&gt;getsockname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/listen&quot;&gt;listen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/recv&quot;&gt;recv&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shutdown&quot;&gt;shutdown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/connect&quot;&gt;connect&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpeername&quot;&gt;getpeername&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getsockname&quot;&gt;getsockname&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/listen&quot;&gt;listen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/recv&quot;&gt;recv&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shutdown&quot;&gt;shutdown&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3307f74b5353d3d330388694e2e5a562ec4f6be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readpipe&quot;&gt;readpipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a , &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readpipe&quot;&gt;readpipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49adcd66c77b529c763f36ddd062aa4f6688b826" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o , &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87eeeb61a45746c1e4aa6912afa3ede8279ba591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/dbmclose&quot;&gt;dbmclose&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/dbmopen&quot;&gt;dbmopen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="186c8b49686cf00b57846ac6e0a6189c67859e46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;blessed&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;blessed&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e42ab85ddf7e214b95aa21f7531a192c1d57730b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; ar , &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf8f43e0b8956b059b663b7f40fee566ba68ac70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6373bbda016aaa1ddc91fd37de2c7931943ff130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d63027fffa2a332cfddfd08f9068272d0ce52382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lcfirst&quot;&gt;lcfirst&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ucfirst&quot;&gt;ucfirst&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lcfirst&quot;&gt;lcfirst&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ucfirst&quot;&gt;ucfirst&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2034a8bc4d2ddd556732a850eb5d8558c3aad776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; must be given an EBCDIC code number argument to yield a desired character return value on an EBCDIC platform. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; debe recibir un argumento de n&amp;uacute;mero de c&amp;oacute;digo EBCDIC para producir un valor de retorno de car&amp;aacute;cter deseado en una plataforma EBCDIC. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f9c20fb8e247561b866ffc6fcee4160c028a6d32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/prototype&quot;&gt;prototype&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/prototype&quot;&gt;prototype&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f8069965d653903f6587480e5a0a31354565107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="971c23718c054d86a80726532c2350b4d61c91a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; raises an exception. Inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the error message is stuffed into &lt;code&gt;$@&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is terminated with the undefined value. If the exception is outside of all enclosing &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s, then the uncaught exception prints LIST to &lt;code&gt;STDERR&lt;/code&gt; and exits with a non-zero value. If you need to exit the process with a specific exit code, see &lt;a href=&quot;#exit&quot;&gt;exit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; plantea una excepci&amp;oacute;n. Dentro de una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n, el mensaje de error se rellena en &lt;code&gt;$@&lt;/code&gt; y la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n finaliza con el valor indefinido. Si la excepci&amp;oacute;n est&amp;aacute; fuera de todas las &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaciones &lt;code&gt;STDERR&lt;/code&gt; , la excepci&amp;oacute;n no detectada imprime LIST en STDERR y sale con un valor distinto de cero. Si necesita salir del proceso con un c&amp;oacute;digo de salida espec&amp;iacute;fico, vea&lt;a href=&quot;#exit&quot;&gt; salir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cdfcd08c97279f178046afe1b06078d3bfda0672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; will force the native VMS exit status to be an SS$_ABORT code if neither of the $! or $? status values are ones that would cause the native status to be interpreted as being what VMS classifies as SEVERE_ERROR severity for DCL error handling.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; forzar&amp;aacute; el estado de salida del VMS nativo a ser un c&amp;oacute;digo SS $ _ABORT si ninguno de los $! o $? Los valores de estado son los que har&amp;iacute;an que el estado nativo se interprete como lo que VMS clasifica como severidad de ERROR_ SEVERO para el manejo de errores DCL.</target>
        </trans-unit>
        <trans-unit id="c2e997695a43950b1946c87d7c74c4aff97e924f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; hace</target>
        </trans-unit>
        <trans-unit id="a1fa01aff43e15c0a20de4c6319df39310438748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; ar , &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf602825444127f538f868168b880e7c17e4f910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dde3e0b8af5305503cc41b40f558203bf6499aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/endgrent&quot;&gt;endgrent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endhostent&quot;&gt;endhostent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endnetent&quot;&gt;endnetent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endpwent&quot;&gt;endpwent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getgrent&quot;&gt;getgrent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpwent&quot;&gt;getpwent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setgrent&quot;&gt;setgrent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setpwent&quot;&gt;setpwent&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c701cf0d605693b06a942d567adc64697f8eadbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostbyaddr&quot;&gt;gethostbyaddr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservbyname&quot;&gt;getservbyname&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/endprotoent&quot;&gt;endprotoent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/endservent&quot;&gt;endservent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/gethostbyaddr&quot;&gt;gethostbyaddr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/gethostent&quot;&gt;gethostent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getnetbyaddr&quot;&gt;getnetbyaddr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getnetbyname&quot;&gt;getnetbyname&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getnetent&quot;&gt;getnetent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getprotobynumber&quot;&gt;getprotobynumber&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getprotoent&quot;&gt;getprotoent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getservbyname&quot;&gt;getservbyname&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getservbyport&quot;&gt;getservbyport&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sethostent&quot;&gt;sethostent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setnetent&quot;&gt;setnetent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setprotoent&quot;&gt;setprotoent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/setservent&quot;&gt;setservent&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="444bad2147131524490c06fd7ed189d21e9cf1be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; does</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; hace</target>
        </trans-unit>
        <trans-unit id="9ec05314a43a26efee7891cae4ea24501c56383e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; behaves differently depending on the internal encoding of the string, sometimes treating its argument as a string of bytes, and sometimes as a string of characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; se comporta de manera diferente dependiendo de la codificaci&amp;oacute;n interna de la cadena, a veces trata su argumento como una cadena de bytes y, a veces, como una cadena de caracteres.</target>
        </trans-unit>
        <trans-unit id="cab5c8442d933f2e75cd6762dd7bfcc3ab2593ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings (when accessible) are considered to be filenames: &lt;code&gt;f (&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7)&lt;/code&gt; and &lt;code&gt;f &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7\b&lt;/code&gt; access the body of the 7th &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed string (in the order of execution). The bodies of the currently executed &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; and of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings that define subroutines are saved and thus accessible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; cadenas de evaluaci&amp;oacute;n (cuando son accesibles) se consideran nombres de archivo: &lt;code&gt;f (&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7)&lt;/code&gt; y &lt;code&gt;f &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 7\b&lt;/code&gt; acceden al cuerpo de la s&amp;eacute;ptimacadena de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n (en el orden de ejecuci&amp;oacute;n). Los cuerpos de la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; actualmente ejecutaday de lascadenas &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uadas que definen subrutinas se guardan y, por lo tanto, se puede acceder a ellas.</target>
        </trans-unit>
        <trans-unit id="4938bb543bbc2773e23fdb85fc0bad70327b6cc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings are compiled in the package in which the eval() was compiled. (Assignments to &lt;code&gt;$SIG{}&lt;/code&gt; , however, assume the signal handler specified is in the &lt;code&gt;main&lt;/code&gt; package. Qualify the signal handler name if you wish to have a signal handler in a package.) For an example, examine</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; cadenas de evaluaci&amp;oacute;n se compilan en el paquete en el que se compil&amp;oacute; eval (). (Las asignaciones a &lt;code&gt;$SIG{}&lt;/code&gt; , sin embargo, suponen que el manejador de se&amp;ntilde;ales especificado est&amp;aacute; en elpaquete &lt;code&gt;main&lt;/code&gt; . Califique el nombre del manejador de se&amp;ntilde;ales si desea tener un manejador de se&amp;ntilde;ales en un paquete). Para un ejemplo, examine</target>
        </trans-unit>
        <trans-unit id="bed6a22bb9761da407775198d594671570c1eb06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; fixes that to work the way one would expect:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; corrige que funcione de la manera que uno esperar&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="689ed7a5f25b13235d58a1bf5add86b3304f247a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; is only available with the &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; feature (see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;) or if prefixed with &lt;code&gt;CORE::&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; is only available with the &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; feature or if prefixed with &lt;code&gt;CORE::&lt;/code&gt; . Both the &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; and &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; features are enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; solo est&amp;aacute; disponible con la funci&amp;oacute;n &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; (ver&lt;a href=&quot;feature&quot;&gt; funci&amp;oacute;n&lt;/a&gt; ) o si tiene el prefijo &lt;code&gt;CORE::&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; solo est&amp;aacute; disponible con la funci&amp;oacute;n &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; o si tiene el prefijo &lt;code&gt;CORE::&lt;/code&gt; . Tanto las &lt;code&gt;&quot;evalbytes&quot;&lt;/code&gt; como &lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; se habilitan autom&amp;aacute;ticamente con una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16 (o superior) en el alcance actual.</target>
        </trans-unit>
        <trans-unit id="6761c9a39c23e52f7069fc11948131c9ace80ad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; sin el uso de la sintaxis de objeto indirecto ( &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ) puede volver a probar el shell sifallael primer &lt;code&gt;spawn()&lt;/code&gt; . (Win32)</target>
        </trans-unit>
        <trans-unit id="284665f5fe88016ead454e392440b324b913043c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; resets file pointers, which is a problem when called from a child process (created by &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt;) in &lt;code&gt;BEGIN&lt;/code&gt; . A workaround is to use &lt;code&gt;POSIX::_exit&lt;/code&gt; . (Solaris)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; restablece los punteros de archivo, lo cual es un problema cuando se llama desde un proceso hijo (creado por &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; ) en &lt;code&gt;BEGIN&lt;/code&gt; . Una soluci&amp;oacute;n alternativa es utilizar &lt;code&gt;POSIX::_exit&lt;/code&gt; . (Solaris)</target>
        </trans-unit>
        <trans-unit id="76b61913c43c1185bbdb2e0e0dd8b3af5f081161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; is available only if the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled or if it is prefixed with &lt;code&gt;CORE::&lt;/code&gt; . The &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; solo est&amp;aacute; disponible si la funci&amp;oacute;n &lt;code&gt;&quot;fc&quot;&lt;/code&gt; est&amp;aacute; habilitada o si tiene el prefijo &lt;code&gt;CORE::&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&quot;fc&quot;&lt;/code&gt; se habilita autom&amp;aacute;ticamente con una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; v5.16 (o superior) en el alcance actual.</target>
        </trans-unit>
        <trans-unit id="9f8bfcf789b65edee6c0ea5d97ffb5d56eb94268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; failures in io_* tests</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; Fallos de fork () en pruebas io_ *</target>
        </trans-unit>
        <trans-unit id="9d01f3a00631549ba30fc14956cad336db066915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('localhost')&lt;/a&gt;&lt;/code&gt; does not work everywhere: you may have to use &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('127.0.0.1')&lt;/a&gt;&lt;/code&gt;. (Irix 5)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('localhost')&lt;/a&gt;&lt;/code&gt; no funciona en todas partes: puede que tenga que usar &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname('127.0.0.1')&lt;/a&gt;&lt;/code&gt; . (Irix 5)</target>
        </trans-unit>
        <trans-unit id="e2ef5e14433d72564433190724fdd966ef50b051" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; (aka the &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; (tambi&amp;eacute;n conocido como &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="564d9f4c1be0a741d6c529a881ccab285f1e964e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f03b71bee32ce86bd94c982679218f4e1f02d81a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qw&quot;&gt;qw//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; a , &lt;code&gt;&lt;a href=&quot;functions/qw&quot;&gt;qw//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b3086a8c4fc89913fc262d257bf79bcbe20f793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; does three things: it waits for a thread to exit, cleans up after it, and returns any data the thread may have produced. But what if you're not interested in the thread's return values, and you don't really care when the thread finishes? All you want is for the thread to get cleaned up after when it's done.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; hace tres cosas: espera a que un subproceso salga, limpia despu&amp;eacute;s de &amp;eacute;l y devuelve cualquier dato que el subproceso haya producido. Pero, &amp;iquest;qu&amp;eacute; pasa si no est&amp;aacute; interesado en los valores de retorno del hilo y realmente no le importa cu&amp;aacute;ndo termina el hilo? Todo lo que desea es que el hilo se limpie despu&amp;eacute;s de que est&amp;eacute; listo.</target>
        </trans-unit>
        <trans-unit id="2a03f921016bbb0b86e43c0578f72502ceddcfba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; waits for a thread to end and returns any values the thread exited with. &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; will block until the thread has ended, though it won't block if the thread has already terminated.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; espera a que termine un hilo y devuelve los valores con los que sali&amp;oacute; el hilo. &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; se bloquear&amp;aacute; hasta que el hilo haya terminado, aunque no se bloquear&amp;aacute; si el hilo ya ha terminado.</target>
        </trans-unit>
        <trans-unit id="9e758149070ab91db0253a2bd5469b500fbd3e2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; doesn't have the semantics of &lt;code&gt;raise()&lt;/code&gt; , i.e. it doesn't send a signal to the identified process like it does on Unix platforms. Instead &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;($sig, $pid)&lt;/code&gt; terminates the process identified by &lt;code&gt;$pid&lt;/code&gt; , and makes it exit immediately with exit status $sig. As in Unix, if $sig is 0 and the specified process exists, it returns true without actually terminating it. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; no tiene la sem&amp;aacute;ntica de &lt;code&gt;raise()&lt;/code&gt; , es decir, no env&amp;iacute;a una se&amp;ntilde;al al proceso identificado como lo hace en las plataformas Unix. En cambio, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;($sig, $pid)&lt;/code&gt; finaliza el proceso identificado por &lt;code&gt;$pid&lt;/code&gt; y lo hace salir inmediatamente con el estado de salida $ sig. Como en Unix, si $ sig es 0 y el proceso especificado existe, devuelve verdadero sin terminarlo. (Win32)</target>
        </trans-unit>
        <trans-unit id="e88c251677de5696731dc7c1c2ad099fd58e07b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; can be used to terminate a pseudo-process by passing it the ID returned by fork(). The outcome of kill on a pseudo-process is unpredictable and it should not be used except under dire circumstances, because the operating system may not guarantee integrity of the process resources when a running thread is terminated. The process which implements the pseudo-processes can be blocked and the Perl interpreter hangs. Note that using &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; on a pseudo-process() may typically cause memory leaks, because the thread that implements the pseudo-process does not get a chance to clean up its resources.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; se puede usar para terminar un pseudoproceso pas&amp;aacute;ndole el ID devuelto por fork (). El resultado de la eliminaci&amp;oacute;n de un pseudoproceso es impredecible y no debe usarse excepto en circunstancias extremas, porque el sistema operativo puede no garantizar la integridad de los recursos del proceso cuando se termina un subproceso en ejecuci&amp;oacute;n. El proceso que implementa los pseudoprocesos puede bloquearse y el int&amp;eacute;rprete de Perl se bloquea. Tenga en cuenta que el uso de &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('KILL', ...)&lt;/code&gt; en un pseudoproceso () normalmente puede causar p&amp;eacute;rdidas de memoria, porque el hilo que implementa el pseudoproceso no tiene la oportunidad de limpiar sus recursos.</target>
        </trans-unit>
        <trans-unit id="75df60b5e7c4116a6ef3b294e7033ff0dcfbf3d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; can also be used on pseudo-processes, but the signal will not be delivered while the pseudo-process is blocked by a system call, e.g. waiting for a socket to connect, or trying to read from a socket with no data available. Starting in Perl 5.14 the parent process will not wait for children to exit once they have been signalled with &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; to avoid deadlock during process exit. You will have to explicitly call waitpid() to make sure the child has time to clean-up itself, but you are then also responsible that the child is not blocking on I/O either.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; tambi&amp;eacute;n se puede usar en pseudoprocesos, pero la se&amp;ntilde;al no se entregar&amp;aacute; mientras el pseudoproceso est&amp;eacute; bloqueado por una llamada al sistema, por ejemplo, esperando a que un conector se conecte o tratando de leer desde un enchufe sin datos disponibles. A partir de Perl 5.14, el proceso padre no esperar&amp;aacute; a que los ni&amp;ntilde;os salgan una vez que hayan sido se&amp;ntilde;alados con &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;('TERM', ...)&lt;/code&gt; para evitar un punto muerto durante la salida del proceso. Tendr&amp;aacute; que llamar expl&amp;iacute;citamente a waitpid () para asegurarse de que el ni&amp;ntilde;o tenga tiempo para limpiarse por s&amp;iacute; mismo, pero tambi&amp;eacute;n es responsable de que el ni&amp;ntilde;o tampoco bloquee las E / S.</target>
        </trans-unit>
        <trans-unit id="1b5183176d6cbdda12e7a690d422cfcbde120be5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(-9, $pid)&lt;/code&gt; will terminate the process specified by &lt;code&gt;$pid&lt;/code&gt; and recursively all child processes owned by it. This is different from the Unix semantics, where the signal will be delivered to all processes in the same process group as the process specified by $pid. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(-9, $pid)&lt;/code&gt; terminar&amp;aacute; el proceso especificado por &lt;code&gt;$pid&lt;/code&gt; y de forma recursiva todos los procesos secundarios que le pertenecen. Esto es diferente de la sem&amp;aacute;ntica de Unix, donde la se&amp;ntilde;al se entregar&amp;aacute; a todos los procesos en el mismo grupo de procesos que el proceso especificado por $ pid. (Win32)</target>
        </trans-unit>
        <trans-unit id="87d6ace4d35779bb92de39a74ae12ac82c622c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block that returns a value such as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; no se puede usar para salir de un bloque que devuelve un valor como &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , y no debe usarse para salir de una operaci&amp;oacute;n grep () o map ().</target>
        </trans-unit>
        <trans-unit id="070d6d718d052c422333dfc4a73c9ff557369c01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; may appear within a &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block; &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; behave as if they had been executed within the main block. So will &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, but since it will execute a &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block, it may be more entertaining.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; pueden aparecer dentro de unbloque de &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; ; &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; se comportan como si se hubieran ejecutado dentro del bloque principal. Lo mismo ocurrir&amp;aacute; a &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; , pero dado que ejecutar&amp;aacute; unbloque de &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; , puede ser m&amp;aacute;s entretenido.</target>
        </trans-unit>
        <trans-unit id="f7dc8f5385a1d957a4ec078883a408036e64e47d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x)&lt;/a&gt;&lt;/code&gt; saves away the old value of the global variable &lt;code&gt;$x&lt;/code&gt; and assigns a new value for the duration of the subroutine</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x)&lt;/a&gt;&lt;/code&gt; guarda el antiguo valor de la variable global &lt;code&gt;$x&lt;/code&gt; y asigna un nuevo valor durante la duraci&amp;oacute;n de la subrutina</target>
        </trans-unit>
        <trans-unit id="ae121069d9f20b53a610cdeaf9dee9016adf3eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; blocks the thread until the variable being locked is available. When &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; returns, your thread can be sure that no other thread can lock that variable until the block containing the lock exits.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; bloquea el hilo hasta que la variable que se est&amp;aacute; bloqueando est&amp;eacute; disponible. Cuando &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; regresa, su hilo puede estar seguro de que ning&amp;uacute;n otro hilo puede bloquear esa variable hasta que el bloque que contiene el bloqueo salga.</target>
        </trans-unit>
        <trans-unit id="170941b48e14e3f5099948bab33b3c9d8dbcb576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; places a lock on a variable until the lock goes out of scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; coloca un bloqueo en una variable hasta que el bloqueo se sale de su alcance.</target>
        </trans-unit>
        <trans-unit id="3509688406236324d230070a551af253bd14269a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/study&quot;&gt;study&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/study&quot;&gt;study&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3e6cff15cdccdd24c02ad5ce98693ac4145238a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/msixpogcdualn&lt;/a&gt;&lt;/code&gt; searches a string for a pattern match, applying the given options.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/msixpogcdualn&lt;/a&gt;&lt;/code&gt; busca en una cadena una coincidencia de patr&amp;oacute;n, aplicando las opciones dadas.</target>
        </trans-unit>
        <trans-unit id="1944b24caa2d31a689377ec13306300ad9daf001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/msgctl&quot;&gt;msgctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/msgsnd&quot;&gt;msgsnd&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/semctl&quot;&gt;semctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmctl&quot;&gt;shmctl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shmwrite&quot;&gt;shmwrite&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a23ddf8844c8d314770e265090c4032565505efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my($x)&lt;/a&gt;&lt;/code&gt; creates a new variable that is only visible in the current subroutine. This is done at compile-time, so it is called lexical or static scoping. my() always affects private variables, also called lexical variables or (improperly) static(ly scoped) variables.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my($x)&lt;/a&gt;&lt;/code&gt; crea una nueva variable que solo es visible en la subrutina actual. Esto se realiza en tiempo de compilaci&amp;oacute;n, por lo que se denomina &amp;aacute;mbito l&amp;eacute;xico o est&amp;aacute;tico. my () siempre afecta a las variables privadas, tambi&amp;eacute;n llamadas variables l&amp;eacute;xicas o (incorrectamente) variables est&amp;aacute;ticas (de &amp;aacute;mbito ly).</target>
        </trans-unit>
        <trans-unit id="07257377a06fc9758ae4feb8af6d3a0dabc51822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; give list context to the right hand side of &lt;code&gt;=&lt;/code&gt; . The &amp;lt;$fh&amp;gt; read operation, like so many of Perl's functions and operators, can tell which context it was called in and behaves appropriately. In general, the scalar() function can help. This function does nothing to the data itself (contrary to popular myth) but rather tells its argument to behave in whatever its scalar fashion is. If that function doesn't have a defined scalar behavior, this of course doesn't help you (such as with sort()).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; dan contexto de lista al lado derecho de &lt;code&gt;=&lt;/code&gt; . La operaci&amp;oacute;n de lectura &amp;lt;$ fh&amp;gt;, como muchas de las funciones y operadores de Perl, puede decir en qu&amp;eacute; contexto se llam&amp;oacute; y se comporta de manera apropiada. En general, la funci&amp;oacute;n escalar () puede ayudar. Esta funci&amp;oacute;n no hace nada con los datos en s&amp;iacute; (contrariamente al mito popular), sino que le dice a su argumento que se comporte de la forma que sea escalar. Si esa funci&amp;oacute;n no tiene un comportamiento escalar definido, esto por supuesto no le ayuda (como con sort ()).</target>
        </trans-unit>
        <trans-unit id="13eda9e72a33666b731b864d91f6ba22b818ca17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables are scoped to the current block, not to the current function. If you write &lt;code&gt;{&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $x;} $x;&lt;/code&gt; , the second &lt;code&gt;$x&lt;/code&gt; does not refer to the one declared inside the block.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables tienen como alcance el bloque actual, no la funci&amp;oacute;n actual. Si escribe &lt;code&gt;{&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $x;} $x;&lt;/code&gt; , el segundo &lt;code&gt;$x&lt;/code&gt; no se refiere al declarado dentro del bloque.</target>
        </trans-unit>
        <trans-unit id="a1b3aead5cdbc6341c36d8eaad29039df26dd3a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block which returns a value such as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; no se puede utilizar para salir de un bloque que devuelve un valor como &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , y no se debe utilizar para salir de una operaci&amp;oacute;n grep () o map ().</target>
        </trans-unit>
        <trans-unit id="7816c0bc56e1301d1d13bec1cdf1c4a410856929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; tells the compiler to use the traditional Perl rules wherein the native character set rules is used unless it is clear to Perl that Unicode is desired. This can lead to some surprises when the behavior suddenly changes. (See &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug in perlunicode&lt;/a&gt; for details.) For this reason, if you are potentially using Unicode in your program, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; subpragma is &lt;b&gt;strongly&lt;/b&gt; recommended.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; le dice al compilador que use las reglas tradicionales de Perl donde se usan las reglas del juego de caracteres nativos a menos que Perl tenga claro que se desea Unicode. Esto puede llevar a algunas sorpresas cuando el comportamiento cambia repentinamente. (Consulte&lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt; El error Unicode en perlunicode&lt;/a&gt; para obtener m&amp;aacute;s detalles). Por esta raz&amp;oacute;n, si potencialmente est&amp;aacute; utilizando Unicode en su programa,serecomienda&lt;b&gt; encarecidamente &lt;/b&gt; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; unicode_strings ' .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ac81d61c42a23c6729598734f402a23c1c56eea8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature&lt;/code&gt; with no features specified will reset to the default group. To disable</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; feature&lt;/code&gt; sin caracter&amp;iacute;sticas especificadas se restablecer&amp;aacute; al grupo predeterminado. Deshabilitar</target>
        </trans-unit>
        <trans-unit id="f43198e234dd55ddea949ef71cd04c5b9a67bbf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; re '/flags'&lt;/code&gt; will turn off the effect of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/flags'&lt;/code&gt; for the given flags.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; re '/flags'&lt;/code&gt; desactivar&amp;aacute; el efecto de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/flags'&lt;/code&gt; para las banderas dadas.</target>
        </trans-unit>
        <trans-unit id="72bc29863e56cfa45bbea04dcee585c67952579a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;-|&quot;&lt;/code&gt; , in other words, opening pipes to itself.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;-|&quot;&lt;/code&gt; , en otras palabras, abriendo tuber&amp;iacute;as para s&amp;iacute; mismo.</target>
        </trans-unit>
        <trans-unit id="15d8b4a76f4f6129fa4264c69c3f0d9f88979d3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d47a7f890bd33e4ea969830dac3cb0ad060f6a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; will return EBCDIC code number values on an EBCDIC platform. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; devolver&amp;aacute; valores de n&amp;uacute;mero de c&amp;oacute;digo EBCDIC en una plataforma EBCDIC. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7c53ed24bd7c69198eac1389d9414a4a91ac2d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; , which allows use of an unqualified name</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; difiere de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; , que permite el uso de un nombre no calificado</target>
        </trans-unit>
        <trans-unit id="b02441caa31363d63a0257ab42958956b8ab58eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; has the same scoping rules as &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, meaning that it is only valid within a lexical scope. Unlike &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, which both declare new (lexical) variables, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; only creates an alias to an existing variable: a package variable of the same name.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; tiene las mismas reglas de alcance que &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , lo que significa que solo es v&amp;aacute;lido dentro de un alcance l&amp;eacute;xico. A diferencia de &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , que declaran nuevas variables (l&amp;eacute;xicas), &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; solo crea un alias para una variable existente: una variable de paquete del mismo nombre.</target>
        </trans-unit>
        <trans-unit id="6774d0bb994ddfaf2ef8c1d60b6b78ab041154fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; makes a lexical alias to a package (i.e. global) variable of the same name in the current package for use within the current lexical scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; crea un alias l&amp;eacute;xico para una variable de paquete (es decir, global) del mismo nombre en el paquete actual para su uso dentro del &amp;aacute;mbito l&amp;eacute;xico actual.</target>
        </trans-unit>
        <trans-unit id="94b4e2f1cfd6c489237ee0bdbdd2d311d7ce5f54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; subroutines</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; subrutinas</target>
        </trans-unit>
        <trans-unit id="de5857e8b84e30eef502f98ccf74513442f8930b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; are two functions for transforming data according to a user-defined template, between the guarded way Perl stores values and some well-defined representation as might be required in the environment of a Perl program. Unfortunately, they're also two of the most misunderstood and most often overlooked functions that Perl provides. This tutorial will demystify them for you.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; son dos funciones para transformar datos de acuerdo con una plantilla definida por el usuario, entre la forma protegida en que Perl almacena valores y alguna representaci&amp;oacute;n bien definida como podr&amp;iacute;a ser necesaria en el entorno de un programa Perl. Desafortunadamente, tambi&amp;eacute;n son dos de las funciones m&amp;aacute;s incomprendidas y pasadas por alto que proporciona Perl. Este tutorial los desmitificar&amp;aacute; por ti.</target>
        </trans-unit>
        <trans-unit id="94c05b5f8252da7d1c99d5e4040b8c3c6ee106ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2252b2bedd63bcabdecf7bfe44b0f5112b8e9d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; directly accesses the location used by the regexp engine to store the offset, so assigning to &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; will change that offset, and so will also influence the &lt;code&gt;\G&lt;/code&gt; zero-width assertion in regular expressions. Both of these effects take place for the next match, so you can't affect the position with &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; during the current match, such as in &lt;code&gt;(?{pos() = 5})&lt;/code&gt; or &lt;code&gt;s//pos() = 5/e&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; accede directamente a la ubicaci&amp;oacute;n utilizada por el motor deexpresiones regularespara almacenar el desplazamiento, por lo que asignar a &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; cambiar&amp;aacute; ese desplazamiento y, por lo tanto, tambi&amp;eacute;n influir&amp;aacute; en laafirmaci&amp;oacute;n de ancho cero de &lt;code&gt;\G&lt;/code&gt; en las expresiones regulares. Ambos efectos tienen lugar para el pr&amp;oacute;ximo partido, por lo que no puede afectar la posici&amp;oacute;n con &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; durante el partido actual, como en &lt;code&gt;(?{pos() = 5})&lt;/code&gt; o &lt;code&gt;s//pos() = 5/e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1950ccdf48f077e739f5814af32f11a43773eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/pattern/msixpodualn&lt;/a&gt;&lt;/code&gt; lets you store a regex in a variable, or pass one around. Modifiers as for &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, and are stored within the regex.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/pattern/msixpodualn&lt;/a&gt;&lt;/code&gt; le permite almacenar una expresi&amp;oacute;n regular en una variable o pasar una. Los modificadores como &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , y se almacenan dentro de la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="2d062bdc19be018775cd04b7fe47df8c33090f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; must return a compiled regexp, or a ref to a compiled regexp (such as &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; returns), and any further overloading on the return value will be ignored.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; debe devolver una expresi&amp;oacute;n regular compilada o una referencia a una expresi&amp;oacute;n regular compilada (como &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; devuelve), y se ignorar&amp;aacute; cualquier sobrecarga adicional en el valor de retorno.</target>
        </trans-unit>
        <trans-unit id="6bf9c5016beeb9680d1e1288d3394e4a396bd820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;\Q&lt;/code&gt; are fully described in &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;\Q&lt;/code&gt; se describen completamente en&lt;a href=&quot;functions/quotemeta&quot;&gt; quotemeta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="188d3fd2d5601f204ee3fcff4baf277b1b9145a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt; (aka the backtick operator), &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx&lt;/a&gt;&lt;/code&gt; (tambi&amp;eacute;n conocido como operador de comillas invertidas), &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d74cdbd617ac6784cd0523ea76bbc823fe5c46d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand($x)&lt;/a&gt;&lt;/code&gt; returns a number such that &lt;code&gt;0 &amp;lt;= &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;($x) &amp;lt; $x&lt;/code&gt; . Thus what you want to have perl figure out is a random number in the range from 0 to the difference between your</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand($x)&lt;/a&gt;&lt;/code&gt; devuelve un n&amp;uacute;mero tal que &lt;code&gt;0 &amp;lt;= &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;($x) &amp;lt; $x&lt;/code&gt; . Por lo tanto, lo que quiere que perl descubra es un n&amp;uacute;mero aleatorio en el rango de 0 a la diferencia entre sus</target>
        </trans-unit>
        <trans-unit id="8f4bf1581c291b9f8ecef59847322f94dde9b542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; reads characters and returns the number of characters. &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; operate on byte counts, as do &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; lee caracteres y devuelve el n&amp;uacute;mero de caracteres. &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; operan en recuentos de bytes, al igual que &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a5c571597ad186dd4a954192a5cebc8d822206f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7456d57d98baaffed623ce4bd4263a163b2aec05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; cannot be used to retry a block that returns a value such as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; no puede usarse para reintentar un bloque que devuelve un valor como &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , y no debe usarse para salir de una operaci&amp;oacute;n grep () o map ().</target>
        </trans-unit>
        <trans-unit id="eb6696e29c58ecf1f6ae5ba2682cd87e761d86df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; has special additional dark magic: if you invoke your &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; replacement as &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Foo::Bar&lt;/code&gt; , it will actually receive the argument &lt;code&gt;&quot;Foo/Bar.pm&quot;&lt;/code&gt; in @_. See &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; tiene magia oscura adicional especial: si invoca sureemplazo &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Foo::Bar&lt;/code&gt; , en realidad recibir&amp;aacute; el argumento &lt;code&gt;&quot;Foo/Bar.pm&quot;&lt;/code&gt; en @_. Ver&lt;a href=&quot;functions/require&quot;&gt; require&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c933e5af38fe33f1b42e9ea2b143d4921f5f23a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/pattern/replacement/msixpogcedual&lt;/a&gt;&lt;/code&gt; substitutes matches of 'pattern' with 'replacement'. Modifiers as for &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, with two additions:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/pattern/replacement/msixpogcedual&lt;/a&gt;&lt;/code&gt; sustituye las coincidencias de 'patr&amp;oacute;n' con 'reemplazo'. Modificadores como &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , con dos adiciones:</target>
        </trans-unit>
        <trans-unit id="7e44cb588e50026d5be597d045d8bc89c8231d12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; acts just like &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; except $\ will be localized to &lt;code&gt;\n&lt;/code&gt; so you need do nothing special to handle &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;PRINT()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; act&amp;uacute;a como &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; excepto que $ \ se localizar&amp;aacute; en &lt;code&gt;\n&lt;/code&gt; por lo que no necesitas hacer nada especial para manejar &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; en &lt;code&gt;PRINT()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4a80adc896ab22ad4c977a28b9890609696de0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; is available only if the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled or if it is prefixed with &lt;code&gt;CORE::&lt;/code&gt; . The &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; est&amp;aacute; disponible solo si la funci&amp;oacute;n &lt;code&gt;&quot;say&quot;&lt;/code&gt; est&amp;aacute; habilitada o si tiene el prefijo &lt;code&gt;CORE::&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&quot;say&quot;&lt;/code&gt; se habilita autom&amp;aacute;ticamente con una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; v5.10 (o superior) en el alcance actual.</target>
        </trans-unit>
        <trans-unit id="6ed0487d19fc343d28196f6e778281c685c1bcbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;()&lt;/code&gt; reverses by character rather than by byte.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;()&lt;/code&gt; invierte por car&amp;aacute;cter en lugar de por byte.</target>
        </trans-unit>
        <trans-unit id="c50e5b6f97f253b98726d473e85bc3e447a2bd4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; are not compatible with earlier ports by Andreas Kaiser. See &lt;code&gt;&quot;setpriority, getpriority&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt; no son compatibles con versiones anteriores de Andreas Kaiser. Consulte &lt;code&gt;&quot;setpriority, getpriority&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9af6569137d1fe40ea10409b241d51eaf476898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/setpriority&quot;&gt;setpriority&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/getpriority&quot;&gt;getpriority&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e768f6c25fd89661888a8fb28b195577438c085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; can be used, for example, to implement n-ary queue processing:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; se puede utilizar, por ejemplo, para implementar el procesamiento de colas n-arias:</target>
        </trans-unit>
        <trans-unit id="177c757ab59e714a32d57425c159cf8b95290093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; /regex/, string&lt;/code&gt; splits &lt;code&gt;string&lt;/code&gt; into a list of substrings and returns that list. The regex determines the character sequence that &lt;code&gt;string&lt;/code&gt; is split with respect to. For example, to split a string into words, use</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; /regex/, string&lt;/code&gt; divide la &lt;code&gt;string&lt;/code&gt; en una lista de subcadenas y devuelve esa lista. La expresi&amp;oacute;n regular determina la secuencia de caracterescon respecto a laquese divide la &lt;code&gt;string&lt;/code&gt; . Por ejemplo, para dividir una cadena en palabras, use</target>
        </trans-unit>
        <trans-unit id="acccb47a52b54e1b968bac1688412424630d4600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; declares a lexically scoped variable, just like &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;. However, those variables will never be reinitialized, contrary to lexical variables that are reinitialized each time their enclosing block is entered. See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; declara una variable de &amp;aacute;mbito l&amp;eacute;xico, como &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; . Sin embargo, esas variables nunca se reinicializar&amp;aacute;n, al contrario que las variables l&amp;eacute;xicas que se reinicializan cada vez que se ingresa su bloque adjunto. Consulte&lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt; Variables privadas persistentes en perlsub&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3e1f128d19018432959490e63d61d5b5b7fb3f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; is available only if the &lt;code&gt;&quot;state&quot;&lt;/code&gt; feature is enabled or if it is prefixed with &lt;code&gt;CORE::&lt;/code&gt; . The &lt;code&gt;&quot;state&quot;&lt;/code&gt; feature is enabled automatically with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; (or higher) declaration in the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; est&amp;aacute; disponible solo si la funci&amp;oacute;n &lt;code&gt;&quot;state&quot;&lt;/code&gt; est&amp;aacute; habilitada o si tiene el prefijo &lt;code&gt;CORE::&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&quot;state&quot;&lt;/code&gt; se habilita autom&amp;aacute;ticamente con una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; v5.10 (o superior) en el alcance actual.</target>
        </trans-unit>
        <trans-unit id="d3d682a66def88db6f77999cda09b21cb1cbfe7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables are enabled only when the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; pragma is in effect, unless the keyword is written as &lt;code&gt;CORE::state&lt;/code&gt; . See also &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables de estado est&amp;aacute;n habilitadas s&amp;oacute;lo cuando elpragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; est&amp;aacute; en vigor, a menos que la palabra clave est&amp;eacute; escrita como &lt;code&gt;CORE::state&lt;/code&gt; . Consulte tambi&amp;eacute;n&lt;a href=&quot;feature&quot;&gt; caracter&amp;iacute;stica&lt;/a&gt; . Alternativamente, incluya un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; o posterior al alcance actual.</target>
        </trans-unit>
        <trans-unit id="5fa9d870fbe303bfda0361e0eb1503a4bc2827ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails. (Win32)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; sin el uso de la sintaxis de objeto indirecto ( &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; ) puede volver a probar el shell sifallael primer &lt;code&gt;spawn()&lt;/code&gt; . (Win32)</target>
        </trans-unit>
        <trans-unit id="a13394de1a0017f2e3c646b4e6f9372f06700bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; also provides direct control over whether shell wildcard processing may take place, whereas backticks do not.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n proporciona control directo sobre si el procesamiento de comodines de shell puede tener lugar, mientras que las comillas invertidas no.</target>
        </trans-unit>
        <trans-unit id="ca56f2cd326f61f2e21ca153383b807ee7a157d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="325d8cb9dc74553e44ba1cf66fe60ddd2554335d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; works but the correct permissions are set only when the file is finally closed. (AmigaOS)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; funciona, pero los permisos correctos se establecen solo cuando el archivo finalmente se cierra. (AmigaOS)</target>
        </trans-unit>
        <trans-unit id="4b210b1883c3e9bcbba5d5fb87e463314c1e4390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is always treated as numeric, and in particular is changed to &lt;code&gt;0&lt;/code&gt; before incrementing (so that a post-increment of an undef value will return &lt;code&gt;0&lt;/code&gt; rather than &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; siempre se trata como num&amp;eacute;rico y, en particular, se cambia a &lt;code&gt;0&lt;/code&gt; antes de incrementar (de modo que un incremento posterior de un valor de undef devolver&amp;aacute; &lt;code&gt;0&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e5aefccb12996eadd8d801e9cfdf76ddf4f796d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will delete a file if at all possible, even if it requires changing file protection (though it won't try to change the protection of the parent directory). You can tell whether you've got explicit delete access to a file by using the &lt;code&gt;VMS::Filespec::candelete&lt;/code&gt; operator. For instance, in order to delete only files to which you have delete access, you could say something like</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; eliminar&amp;aacute; un archivo si es posible, incluso si requiere cambiar la protecci&amp;oacute;n del archivo (aunque no intentar&amp;aacute; cambiar la protecci&amp;oacute;n del directorio principal). Puede saber si tiene acceso de eliminaci&amp;oacute;n expl&amp;iacute;cito a un archivo utilizando eloperador &lt;code&gt;VMS::Filespec::candelete&lt;/code&gt; . Por ejemplo, para eliminar solo los archivos a los que tiene acceso de eliminaci&amp;oacute;n, puede decir algo como</target>
        </trans-unit>
        <trans-unit id="c89b142c4cf303af585f44aa959a9f2d33f1baea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will delete the highest version of a file only; in order to delete all versions, you need to say</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; eliminar&amp;aacute; la versi&amp;oacute;n m&amp;aacute;s alta de un archivo solamente; para eliminar todas las versiones, debe decir</target>
        </trans-unit>
        <trans-unit id="2b9d97894178af5ea2b4ade814baff596e23579c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; does the reverse of &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;: it takes a string and expands it out into a list of values. (In scalar context, it returns merely the first value produced.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; hace lo contrario de &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; : toma una cadena y la expande en una lista de valores. (En contexto escalar, devuelve simplemente el primer valor producido).</target>
        </trans-unit>
        <trans-unit id="44eb6a0f9a45c3ab4602cb7e40deb8c651427714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; also lexically enables all features available in the requested version as defined by the &lt;code&gt;feature&lt;/code&gt; pragma, disabling any features not in the requested version's feature bundle. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Similarly, if the specified Perl version is greater than or equal to 5.12.0, strictures are enabled lexically as with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; . Any explicit use of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; overrides &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , even if it comes before it. Later use of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; will override all behavior of a previous &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , possibly removing the &lt;code&gt;strict&lt;/code&gt; and &lt;code&gt;feature&lt;/code&gt; added by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; does not load the</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; tambi&amp;eacute;n habilita l&amp;eacute;xicamente todas las caracter&amp;iacute;sticas disponibles en la versi&amp;oacute;n solicitada seg&amp;uacute;n lo definido por elpragma de &lt;code&gt;feature&lt;/code&gt; , deshabilitando cualquier caracter&amp;iacute;stica que no est&amp;eacute; en el paquete de caracter&amp;iacute;sticas de la versi&amp;oacute;n solicitada. Ver&lt;a href=&quot;feature&quot;&gt; caracter&amp;iacute;stica&lt;/a&gt; . De manera similar, si la versi&amp;oacute;n de Perl especificada es mayor o igual a 5.12.0, las restricciones se habilitan l&amp;eacute;xicamente como con el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; . Cualquier uso expl&amp;iacute;cito de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; anulaciones estrictas &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , incluso si viene antes. El uso posterior de la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; de&lt;a href=&quot;functions/use&quot;&gt; uso&lt;/a&gt; anular&amp;aacute; todo el comportamiento de una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; anterior, posiblemente eliminando el &lt;code&gt;strict&lt;/code&gt; y &lt;code&gt;feature&lt;/code&gt; agregada por el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; no carga el</target>
        </trans-unit>
        <trans-unit id="02af597e7e1c634b880fabc11ab8447d438ffc44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; is usually a failed attempt to do something useful. Just forget about it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; suele ser un intento fallido de hacer algo &amp;uacute;til. Solo olv&amp;iacute;dalo.</target>
        </trans-unit>
        <trans-unit id="65794f2e0db80cf66382b2a3fac13f64df20f1dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding ...&lt;/code&gt; is not thread-safe (i.e., do not use in threaded applications).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding ...&lt;/code&gt; no es seguro para subprocesos (es decir, no lo use en aplicaciones con subprocesos).</target>
        </trans-unit>
        <trans-unit id="39eeb7ec51146733b1a7cf9eb0196f712de28471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'fc'&lt;/code&gt; tells the compiler to enable the &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; function, which implements Unicode casefolding.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'fc'&lt;/code&gt; le dice al compilador que habilite lafunci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; , que implementa el plegado de may&amp;uacute;sculas y min&amp;uacute;sculas Unicode.</target>
        </trans-unit>
        <trans-unit id="21d0ae3670893615eaeba861a2b7ada5d23d8df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'say'&lt;/code&gt; tells the compiler to enable the Perl 6 style &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'say'&lt;/code&gt; le dice al compilador que habilite lafunci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt;&lt;/code&gt; de estilo Perl 6.</target>
        </trans-unit>
        <trans-unit id="119202774744694437463c0ae2e1f969fd53e6b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'state'&lt;/code&gt; tells the compiler to enable &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'state'&lt;/code&gt; le dice al compilador que habilite &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables de estado .</target>
        </trans-unit>
        <trans-unit id="be9193ee0a2139b1ba978d5f6b9763f7962eb6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'switch'&lt;/code&gt; tells the compiler to enable the Perl 6 given/when construct.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'switch'&lt;/code&gt; le dice al compilador que habilite la construcci&amp;oacute;n dada / when de Perl 6.</target>
        </trans-unit>
        <trans-unit id="ee3886237fa1a19506e8ee6eb3def8d571370298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; tells the compiler to use Unicode rules in all string operations executed within its scope (unless they are also within the scope of either &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; ). The same applies to all regular expressions compiled within the scope, even if executed outside it. It does not change the internal representation of strings, but only how they are interpreted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; le dice al compilador que use reglas Unicode en todas las operaciones de cadena ejecutadas dentro de su alcance (a menos que tambi&amp;eacute;n est&amp;eacute;n dentro del alcance de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; ). Lo mismo se aplica a todas las expresiones regulares compiladas dentro del alcance, incluso si se ejecutan fuera de &amp;eacute;l. No cambia la representaci&amp;oacute;n interna de las cadenas, sino solo c&amp;oacute;mo se interpretan.</target>
        </trans-unit>
        <trans-unit id="3cba69074857ea47c3dfb8655f441c068164911d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; enables you to see the gory details of how the Perl regular expression engine works. In order to understand this typically voluminous output, one must not only have some idea about how regular expression matching works in general, but also know how Perl's regular expressions are internally compiled into an automaton. These matters are explored in some detail in &lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;Debugging Regular Expressions in perldebguts&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; le permite ver los detalles sangrientos de c&amp;oacute;mo funciona el motor de expresiones regulares de Perl. Para entender esta salida t&amp;iacute;picamente voluminosa, uno no solo debe tener alguna idea sobre c&amp;oacute;mo funciona la coincidencia de expresiones regulares en general, sino tambi&amp;eacute;n saber c&amp;oacute;mo las expresiones regulares de Perl se compilan internamente en un aut&amp;oacute;mata. Estos temas se exploran con cierto detalle en&lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt; Depurar expresiones regulares en perldebguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ec77985991c1d1d32691bbc003d4e51cd7aeda5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; wasn't implicitly declared so you have to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; to do</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; no se declar&amp;oacute; impl&amp;iacute;citamente, por lo que debe &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; para hacerlo</target>
        </trans-unit>
        <trans-unit id="443f944da102d55c2affc8a5f885238902623e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; a Perl module if a condition holds (also can &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; a module)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; un m&amp;oacute;dulo Perl si se cumple una condici&amp;oacute;n (tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; puede haber un m&amp;oacute;dulo)</target>
        </trans-unit>
        <trans-unit id="b3ad26005d5e68b2cb4e1547e6cbf20e087acbfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; may also be assigned to, in which case parentheses are needed to give the expression the correct precedence as in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n se puede asignar a, en cuyo caso se necesitan par&amp;eacute;ntesis para dar a la expresi&amp;oacute;n la precedencia correcta como en</target>
        </trans-unit>
        <trans-unit id="253b8837541eb997903db67737154769342d214c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt;'s result is unspecified in the top level of a file, in a &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt; block, or in a &lt;code&gt;DESTROY&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; especificado en el nivel superior de un archivo, en un &lt;code&gt;UNITCHECK&lt;/code&gt; &lt;code&gt;BEGIN&lt;/code&gt; , UNITCHECK , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; o &lt;code&gt;END&lt;/code&gt; , o en unm&amp;eacute;todo &lt;code&gt;DESTROY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ce182871cf42859bea7be5ff4b5b81a1a95e11f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;carp()&lt;/code&gt; a message to STDERR.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;carp()&lt;/code&gt; un mensaje a STDERR.</target>
        </trans-unit>
        <trans-unit id="4e053c8c2344d774c89169cf3cc69ed5ed3d4f19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1766.txt&quot;&gt;http://www.ietf.org/rfc/rfc1766.txt&lt;/a&gt;&lt;/code&gt; [Now see RFC 3066.]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0df496d8f100a8113c0eb03aaaf8ccef33e1b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block that returns a value such as &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; no se puede usar para salir de un bloque que devuelve un valor como &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , y no debe usarse para salir de una operaci&amp;oacute;n grep () o map ().</target>
        </trans-unit>
        <trans-unit id="263d020f345cd227424dc536345012174cded3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; may appear within a &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block; &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; behave as if they had been executed within the main block. So will &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, but since it will execute a &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block, it may be more entertaining.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; pueden aparecer dentro de unbloque de &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; ; &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; se comportan como si se hubieran ejecutado dentro del bloque principal. Lo mismo ocurrir&amp;aacute; a &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; , pero dado que ejecutar&amp;aacute; unbloque &lt;code&gt;&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; , puede ser m&amp;aacute;s entretenido.</target>
        </trans-unit>
        <trans-unit id="3be37cb59b6af284f0f98885aeb6b517a5b6cbcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; cannot be used to exit a block which returns a value such as &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; no puede usarse para salir de un bloque que devuelve un valor como &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , y no debe usarse para salir de una operaci&amp;oacute;n grep () o map ().</target>
        </trans-unit>
        <trans-unit id="94d58e96273d9ce3f45d93ab3d9b2a258a040437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; , which allows use of an unqualified name</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; difiere de &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; , que permite el uso de un nombre no calificado</target>
        </trans-unit>
        <trans-unit id="512b743a5a3af3616073c2971298e6db67fcaac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; has the same scoping rules as &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, meaning that it is only valid within a lexical scope. Unlike &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, which both declare new (lexical) variables, &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; only creates an alias to an existing variable: a package variable of the same name.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; tiene las mismas reglas de alcance que &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , lo que significa que solo es v&amp;aacute;lido dentro de un alcance l&amp;eacute;xico. A diferencia de &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , que declaran nuevas variables (l&amp;eacute;xicas), &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; solo crea un alias para una variable existente: una variable de paquete del mismo nombre.</target>
        </trans-unit>
        <trans-unit id="ba2bf5f5b3a22314641f3499a065d97485a642e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; makes a lexical alias to a package (i.e. global) variable of the same name in the current package for use within the current lexical scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; crea un alias l&amp;eacute;xico para una variable de paquete (es decir, global) del mismo nombre en el paquete actual para su uso dentro del &amp;aacute;mbito l&amp;eacute;xico actual.</target>
        </trans-unit>
        <trans-unit id="360ca70694e71b7a9eee09a8d981b1ad1ac44c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; directly accesses the location used by the regexp engine to store the offset, so assigning to &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; will change that offset, and so will also influence the &lt;code&gt;\G&lt;/code&gt; zero-width assertion in regular expressions. Both of these effects take place for the next match, so you can't affect the position with &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; during the current match, such as in &lt;code&gt;(?{pos() = 5})&lt;/code&gt; or &lt;code&gt;s//pos() = 5/e&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; accede directamente a la ubicaci&amp;oacute;n utilizada por el motor deexpresiones regularespara almacenar el desplazamiento, por lo que asignar a &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; cambiar&amp;aacute; ese desplazamiento y, por lo tanto, tambi&amp;eacute;n influir&amp;aacute; en laafirmaci&amp;oacute;n de ancho cero de &lt;code&gt;\G&lt;/code&gt; en las expresiones regulares. Ambos efectos tienen lugar para el pr&amp;oacute;ximo partido, por lo que no puede afectar la posici&amp;oacute;n con &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; durante el partido actual, como en &lt;code&gt;(?{pos() = 5})&lt;/code&gt; o &lt;code&gt;s//pos() = 5/e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44ebaa7ec2b209fa20d273b0a5a9b7503aacc295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; cannot be used to retry a block that returns a value such as &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , and should not be used to exit a grep() or map() operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; no se puede usar para reintentar un bloque que devuelve un valor como &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; , y no debe usarse para salir de una operaci&amp;oacute;n grep () o map ().</target>
        </trans-unit>
        <trans-unit id="aa29c0555345e4686ed8d3d71e3aea4b37c87e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; can be used, for example, to implement n-ary queue processing:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; se puede utilizar, por ejemplo, para implementar el procesamiento de colas n-arias:</target>
        </trans-unit>
        <trans-unit id="6aaa7b64b8ed8213795d79c3e9d1a11a7dd50c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; declares a lexically scoped variable, just like &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;. However, those variables will never be reinitialized, contrary to lexical variables that are reinitialized each time their enclosing block is entered. See &lt;a href=&quot;../perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; declara una variable de &amp;aacute;mbito l&amp;eacute;xico, como &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; . Sin embargo, esas variables nunca se reinicializar&amp;aacute;n, al contrario que las variables l&amp;eacute;xicas que se reinicializan cada vez que se ingresa su bloque adjunto. Consulte&lt;a href=&quot;../perlsub#Persistent-Private-Variables&quot;&gt; Variables privadas persistentes en perlsub&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="8157faa8c3a3d05ba145b1d8aefaa265faaa9f67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables are enabled only when the &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; pragma is in effect, unless the keyword is written as &lt;code&gt;CORE::state&lt;/code&gt; . See also &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; variables de estado est&amp;aacute;n habilitadas s&amp;oacute;lo cuando elpragma &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature &quot;state&quot;&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;uso&lt;/a&gt; est&amp;aacute; en vigor, a menos que la palabra clave est&amp;eacute; escrita como &lt;code&gt;CORE::state&lt;/code&gt; . Consulte tambi&amp;eacute;n&lt;a href=&quot;../feature&quot;&gt; caracter&amp;iacute;stica&lt;/a&gt; . Alternativamente, incluya un &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; o posterior al alcance actual.</target>
        </trans-unit>
        <trans-unit id="2245bc251bbc1b43fe683a1a16bb66eec96c8cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; does the reverse of &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;: it takes a string and expands it out into a list of values. (In scalar context, it returns merely the first value produced.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; hace lo contrario de &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; : toma una cadena y la expande en una lista de valores. (En contexto escalar, devuelve simplemente el primer valor producido).</target>
        </trans-unit>
        <trans-unit id="736c80794a09df674ddc9a935c317db522374fbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; also lexically enables all features available in the requested version as defined by the &lt;code&gt;feature&lt;/code&gt; pragma, disabling any features not in the requested version's feature bundle. See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Similarly, if the specified Perl version is greater than or equal to 5.12.0, strictures are enabled lexically as with &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; . Any explicit use of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; overrides &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , even if it comes before it. Later use of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; will override all behavior of a previous &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , possibly removing the &lt;code&gt;strict&lt;/code&gt; and &lt;code&gt;feature&lt;/code&gt; added by &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; does not load the</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; tambi&amp;eacute;n habilita l&amp;eacute;xicamente todas las caracter&amp;iacute;sticas disponibles en la versi&amp;oacute;n solicitada seg&amp;uacute;n lo definido por elpragma de &lt;code&gt;feature&lt;/code&gt; , deshabilitando cualquier caracter&amp;iacute;stica que no est&amp;eacute; en el paquete de caracter&amp;iacute;sticas de la versi&amp;oacute;n solicitada. Ver&lt;a href=&quot;../feature&quot;&gt; caracter&amp;iacute;stica&lt;/a&gt; . De manera similar, si la versi&amp;oacute;n de Perl especificada es mayor o igual a 5.12.0, las restricciones se habilitan l&amp;eacute;xicamente como con el &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; . Cualquier uso expl&amp;iacute;cito de &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; strict&lt;/code&gt; anulaciones estrictas &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; , incluso si viene antes. El uso posterior de la &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; de&lt;a href=&quot;use&quot;&gt; uso&lt;/a&gt; anular&amp;aacute; todo el comportamiento de una &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;uso&lt;/a&gt; anterior, posiblemente eliminando el &lt;code&gt;strict&lt;/code&gt; y &lt;code&gt;feature&lt;/code&gt; agregada por el &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; no carga el</target>
        </trans-unit>
        <trans-unit id="5d689d705b1e08b377f1d5deb4d1a473e7ddec22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; may also be assigned to, in which case parentheses are needed to give the expression the correct precedence as in</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n se puede asignar a, en cuyo caso se necesitan par&amp;eacute;ntesis para dar a la expresi&amp;oacute;n la precedencia correcta como en</target>
        </trans-unit>
        <trans-unit id="355259eee85060ecf231fded7ccdc9659e1111c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt;'s result is unspecified in the top level of a file, in a &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt; block, or in a &lt;code&gt;DESTROY&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wantarray&quot;&gt;wantarray()&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; especificado en el nivel superior de un archivo, en un &lt;code&gt;UNITCHECK&lt;/code&gt; &lt;code&gt;BEGIN&lt;/code&gt; , UNITCHECK , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; o &lt;code&gt;END&lt;/code&gt; , o en unm&amp;eacute;todo &lt;code&gt;DESTROY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d50b5f9e52f09d2ccae3273ada4191283911c0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=encoding&lt;/code&gt; affects the whole document, and must occur only once.</source>
          <target state="translated">&lt;code&gt;=encoding&lt;/code&gt; afecta a todo el documento y debe ocurrir solo una vez.</target>
        </trans-unit>
        <trans-unit id="d07322f9284a7fc6a66d31dacd87d358ae453c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=item&lt;/code&gt; determines the type of the list.</source>
          <target state="translated">&lt;code&gt;=item&lt;/code&gt; determina el tipo de lista.</target>
        </trans-unit>
        <trans-unit id="ebad7dcfcec37e214976c00e96b70065437ad740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=item&lt;/code&gt; without any parameters is deprecated. It should either be followed by &lt;code&gt;*&lt;/code&gt; to indicate an unordered list, by a number (optionally followed by a dot) to indicate an ordered (numbered) list or simple text for a definition list.</source>
          <target state="translated">&lt;code&gt;=item&lt;/code&gt; sin par&amp;aacute;metros est&amp;aacute; en desuso. Debe ir seguido de &lt;code&gt;*&lt;/code&gt; para indicar una lista desordenada, de un n&amp;uacute;mero (opcionalmente seguido de un punto) para indicar una lista ordenada (numerada) o texto simple para una lista de definiciones.</target>
        </trans-unit>
        <trans-unit id="1f73e36fe3dcbab1d5cadecc12ae9b6f4e28981d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=~&lt;/code&gt; determines to which variable the regex is applied. In its absence, $_ is used.</source>
          <target state="translated">&lt;code&gt;=~&lt;/code&gt; determina a qu&amp;eacute; variable se aplica la expresi&amp;oacute;n regular. En su ausencia, se usa $ _.</target>
        </trans-unit>
        <trans-unit id="36fefbdb7ea0230f31629f2921135e5559c380fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;? :&lt;/code&gt; has higher precedence than assignment. In JavaScript, one can write:</source>
          <target state="translated">&lt;code&gt;? :&lt;/code&gt; tiene mayor precedencia que la asignaci&amp;oacute;n. En JavaScript, se puede escribir:</target>
        </trans-unit>
        <trans-unit id="99cbd52c428d14570a189a38a8c217073b6fca54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?pattern?&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/&lt;/a&gt;&lt;/code&gt; but matches only once. No alternate delimiters can be used. Must be reset with reset().</source>
          <target state="translated">&lt;code&gt;?pattern?&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/pattern/&lt;/a&gt;&lt;/code&gt; pero coincide solo una vez. No se pueden utilizar delimitadores alternativos. Debe reiniciarse con reiniciar ().</target>
        </trans-unit>
        <trans-unit id="f1ade0011806b926bc0fc0aa0bd8d231bc768280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , and &lt;code&gt;X&lt;/code&gt; , where it is equivalent to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;X&lt;/code&gt; , donde es equivalente a &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dc3db43502040572ae8f6124b46054d0f87a0c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;X&lt;/code&gt;, where it is equivalent to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f3fd756e106eca16f05f980cc57eeeafcf0a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@DB::dbline&lt;/code&gt; is an alias for &lt;code&gt;@{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt; , which holds the lines of the currently-selected file (compiled by Perl), either explicitly chosen with the debugger's &lt;code&gt;f&lt;/code&gt; command, or implicitly by flow of execution.</source>
          <target state="translated">&lt;code&gt;@DB::dbline&lt;/code&gt; es un alias para &lt;code&gt;@{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt; , que contiene las l&amp;iacute;neas del archivo actualmente seleccionado (compilado por Perl), ya sea elegido expl&amp;iacute;citamente con el comando &lt;code&gt;f&lt;/code&gt; del depurador , o impl&amp;iacute;citamente mediante el flujo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1e6fd1b457124190af96d9423709f48b3b7d0ede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@DB::dbline&lt;/code&gt; is an alias for &lt;code&gt;@{&quot;::_&amp;lt;current_file&quot;}&lt;/code&gt;, which holds the lines of the currently-selected file (compiled by Perl), either explicitly chosen with the debugger's &lt;code&gt;f&lt;/code&gt; command, or implicitly by flow of execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f48354ad148a8b4cee98d2e37fc943ee1ca20d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@a&lt;/code&gt; is an array with three elements, and each one is a reference to another array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fefe664b45f9941b57ab901a98c3a3faea9d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@records&lt;/code&gt; will consist of these 3 strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cc6b86ce0c729a7260f1ee87bf417bc3a2b302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AF_INET&lt;/code&gt; is for the internet address family of sockets and is handled via &lt;a href=&quot;IO::Socket::INET&quot;&gt;IO::Socket::INET&lt;/a&gt;. &lt;code&gt;AF_INET&lt;/code&gt; sockets are bound to an internet address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abd6a0867f9aad366dbb663ce30928193761ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AF_UNIX&lt;/code&gt; is for the unix domain socket and is handled via &lt;a href=&quot;IO::Socket::UNIX&quot;&gt;IO::Socket::UNIX&lt;/a&gt;. &lt;code&gt;AF_UNIX&lt;/code&gt; sockets are bound to the file system as their address name space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5133137a39f1db792f2a0a17dd56d1204b81d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANSI&lt;/code&gt; C requires &lt;code&gt;extern&lt;/code&gt; where C++ requires 'extern &lt;code&gt;C&lt;/code&gt; '. This variable can be used in Configure to do the right thing.</source>
          <target state="translated">&lt;code&gt;ANSI&lt;/code&gt; C requiere &lt;code&gt;extern&lt;/code&gt; donde C ++ requiere 'extern &lt;code&gt;C&lt;/code&gt; '. Esta variable se puede utilizar en Configurar para hacer lo correcto.</target>
        </trans-unit>
        <trans-unit id="fc7842df19b0570fc9a9961f759f1abb7aa6e23c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANSI&lt;/code&gt; C requires &lt;code&gt;extern&lt;/code&gt; where C++ requires 'extern &lt;code&gt;C&lt;/code&gt;'. This variable can be used in Configure to do the right thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae3437c7a9c9b775fbb010803709f69f626606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARGV&lt;/code&gt; must be capitalized. &lt;code&gt;$ARGV[0]&lt;/code&gt; is C's &lt;code&gt;argv[1]&lt;/code&gt; , and &lt;code&gt;argv[0]&lt;/code&gt; ends up in &lt;code&gt;$0&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;ARGV&lt;/code&gt; debe estar en may&amp;uacute;scula. &lt;code&gt;$ARGV[0]&lt;/code&gt; es &lt;code&gt;argv[1]&lt;/code&gt; C , y &lt;code&gt;argv[0]&lt;/code&gt; termina en &lt;code&gt;$0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8a83820e5f747b8e9920ff7fc134adaf29324bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARGV&lt;/code&gt; must be capitalized. &lt;code&gt;$ARGV[0]&lt;/code&gt; is C's &lt;code&gt;argv[1]&lt;/code&gt;, and &lt;code&gt;argv[0]&lt;/code&gt; ends up in &lt;code&gt;$0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57ccf257a33b046ff0968824b0efb78efa3559e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARG_MAX&lt;/code&gt;&lt;code&gt;CHAR_BIT&lt;/code&gt;&lt;code&gt;CHAR_MAX&lt;/code&gt;&lt;code&gt;CHAR_MIN&lt;/code&gt;&lt;code&gt;CHILD_MAX&lt;/code&gt;&lt;code&gt;INT_MAX&lt;/code&gt;&lt;code&gt;INT_MIN&lt;/code&gt;&lt;code&gt;LINK_MAX&lt;/code&gt;&lt;code&gt;LONG_MAX&lt;/code&gt;&lt;code&gt;LONG_MIN&lt;/code&gt;&lt;code&gt;MAX_CANON&lt;/code&gt;&lt;code&gt;MAX_INPUT&lt;/code&gt;&lt;code&gt;MB_LEN_MAX&lt;/code&gt;&lt;code&gt;NAME_MAX&lt;/code&gt;&lt;code&gt;NGROUPS_MAX&lt;/code&gt;&lt;code&gt;OPEN_MAX&lt;/code&gt;&lt;code&gt;PATH_MAX&lt;/code&gt;&lt;code&gt;PIPE_BUF&lt;/code&gt;&lt;code&gt;SCHAR_MAX&lt;/code&gt;&lt;code&gt;SCHAR_MIN&lt;/code&gt;&lt;code&gt;SHRT_MAX&lt;/code&gt;&lt;code&gt;SHRT_MIN&lt;/code&gt;&lt;code&gt;SSIZE_MAX&lt;/code&gt;&lt;code&gt;STREAM_MAX&lt;/code&gt;&lt;code&gt;TZNAME_MAX&lt;/code&gt;&lt;code&gt;UCHAR_MAX&lt;/code&gt;&lt;code&gt;UINT_MAX&lt;/code&gt;&lt;code&gt;ULONG_MAX&lt;/code&gt;&lt;code&gt;USHRT_MAX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ARG_MAX&lt;/code&gt;&lt;code&gt;CHAR_BIT&lt;/code&gt;&lt;code&gt;CHAR_MAX&lt;/code&gt;&lt;code&gt;CHAR_MIN&lt;/code&gt;&lt;code&gt;CHILD_MAX&lt;/code&gt;&lt;code&gt;INT_MAX&lt;/code&gt;&lt;code&gt;INT_MIN&lt;/code&gt;&lt;code&gt;LINK_MAX&lt;/code&gt;&lt;code&gt;LONG_MAX&lt;/code&gt;&lt;code&gt;LONG_MIN&lt;/code&gt;&lt;code&gt;MAX_CANON&lt;/code&gt;&lt;code&gt;MAX_INPUT&lt;/code&gt;&lt;code&gt;MB_LEN_MAX&lt;/code&gt;&lt;code&gt;NAME_MAX&lt;/code&gt;&lt;code&gt;NGROUPS_MAX&lt;/code&gt;&lt;code&gt;OPEN_MAX&lt;/code&gt;&lt;code&gt;PATH_MAX&lt;/code&gt;&lt;code&gt;PIPE_BUF&lt;/code&gt;&lt;code&gt;SCHAR_MAX&lt;/code&gt;&lt;code&gt;SCHAR_MIN&lt;/code&gt;&lt;code&gt;SHRT_MAX&lt;/code&gt;&lt;code&gt;SHRT_MIN&lt;/code&gt;&lt;code&gt;SSIZE_MAX&lt;/code&gt;&lt;code&gt;STREAM_MAX&lt;/code&gt;&lt;code&gt;TZNAME_MAX&lt;/code&gt;&lt;code&gt;UCHAR_MAX&lt;/code&gt;&lt;code&gt;UINT_MAX&lt;/code&gt;&lt;code&gt;ULONG_MAX&lt;/code&gt;&lt;code&gt;USHRT_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b9569dc4638e876dd19281624e240989316c5dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTOLOAD&lt;/code&gt; ed Constants</source>
          <target state="translated">&lt;code&gt;AUTOLOAD&lt;/code&gt; ed Constantes</target>
        </trans-unit>
        <trans-unit id="490e142f631947b7b6f2c788b456711e34efe3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTOLOAD&lt;/code&gt; is called as a regular method, and the caller will not know the difference. Whatever value your &lt;code&gt;AUTOLOAD&lt;/code&gt; method returns is returned to the caller.</source>
          <target state="translated">&lt;code&gt;AUTOLOAD&lt;/code&gt; se llama como un m&amp;eacute;todo regular y la persona que llama no notar&amp;aacute; la diferencia. Cualquier valor que devuelva su m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; se devuelve al llamador.</target>
        </trans-unit>
        <trans-unit id="0fa2d8f9b8be2ad04db308a6994e2570325e093b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTOLOAD&lt;/code&gt;ed Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbb9ec120ba361b6f5460b94c314d64b448bf2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App::Prove&lt;/code&gt; provides support for 3rd-party plugins. These are currently loaded at run-time,</source>
          <target state="translated">&lt;code&gt;App::Prove&lt;/code&gt; proporciona soporte para complementos de terceros. Estos se cargan actualmente en tiempo de ejecuci&amp;oacute;n,</target>
        </trans-unit>
        <trans-unit id="ba0aceb7a30a93c5c7447ecd145d2662ec296f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Archive::Tar&lt;/code&gt; needs to know the current directory, and it will run &lt;code&gt;Cwd::cwd()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Archive::Tar&lt;/code&gt; necesita conocer el directorio actual y ejecutar&amp;aacute; &lt;code&gt;Cwd::cwd()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80986d664cffa01e81fccf03bfedaa80a88cc119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Archive::Tar&lt;/code&gt; uses byte semantics for any files it reads from or writes to disk. This is not a problem if you only deal with files and never look at their content or work solely with byte strings. But if you use Unicode strings with character semantics, some additional steps need to be taken.</source>
          <target state="translated">&lt;code&gt;Archive::Tar&lt;/code&gt; usa sem&amp;aacute;ntica de bytes para cualquier archivo que lee o escribe en el disco. Esto no es un problema si solo maneja archivos y nunca mira su contenido o trabaja &amp;uacute;nicamente con cadenas de bytes. Pero si usa cadenas Unicode con sem&amp;aacute;ntica de caracteres, es necesario realizar algunos pasos adicionales.</target>
        </trans-unit>
        <trans-unit id="af577fe124da7ba0dc1016ca3a04b7143e372d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoLoader&lt;/code&gt; is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</source>
          <target state="translated">&lt;code&gt;AutoLoader&lt;/code&gt; es mantenido por perl5-porters. Dirija cualquier pregunta a la lista de correo can&amp;oacute;nica. Sin embargo, todo lo que sea aplicable a la versi&amp;oacute;n de CPAN se puede enviar a su responsable.</target>
        </trans-unit>
        <trans-unit id="9437eb281e77849a5563ad2a499e675a1a043b61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; es mantenido por perl5-porters. Dirija cualquier pregunta a la lista de correo can&amp;oacute;nica. Sin embargo, todo lo que sea aplicable a la versi&amp;oacute;n de CPAN se puede enviar a su responsable.</target>
        </trans-unit>
        <trans-unit id="65bd4577edcd6e179bc6b12ccaafd7f126175140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; will also emit general diagnostics for inability to create directories or files.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; tambi&amp;eacute;n emitir&amp;aacute; diagn&amp;oacute;sticos generales para la imposibilidad de crear directorios o archivos.</target>
        </trans-unit>
        <trans-unit id="20ce0b283187c41b4404a6e80e30e87f1a557756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; will inform the user if it is necessary to create the top-level directory specified in the invocation. It is preferred that the script or installation process that invokes &lt;code&gt;AutoSplit&lt;/code&gt; have created the full directory path ahead of time. This warning may indicate that the module is being split into an incorrect path.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; informar&amp;aacute; al usuario si es necesario crear el directorio de nivel superior especificado en la invocaci&amp;oacute;n. Se prefiere que el script o el proceso de instalaci&amp;oacute;n que invoca &lt;code&gt;AutoSplit&lt;/code&gt; haya creado la ruta completa del directorio antes de tiempo. Esta advertencia puede indicar que el m&amp;oacute;dulo se est&amp;aacute; dividiendo en una ruta incorrecta.</target>
        </trans-unit>
        <trans-unit id="f791bf59fe665ab5ea1fc7f801f5eda72d0e8745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSplit&lt;/code&gt; will warn the user of all subroutines whose name causes potential file naming conflicts on machines with drastically limited (8 characters or less) file name length. Since the subroutine name is used as the file name, these warnings can aid in portability to such systems.</source>
          <target state="translated">&lt;code&gt;AutoSplit&lt;/code&gt; advertir&amp;aacute; al usuario de todas las subrutinas cuyo nombre cause posibles conflictos de nombres de archivos en m&amp;aacute;quinas con una longitud de nombre de archivo dr&amp;aacute;sticamente limitada (8 caracteres o menos). Dado que el nombre de la subrutina se utiliza como nombre de archivo, estas advertencias pueden ayudar en la portabilidad a dichos sistemas.</target>
        </trans-unit>
        <trans-unit id="cc213bca195d8cb8dbcd8dc52fa42cad032d0531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&amp;lt;text&amp;gt;&lt;/code&gt; -- bold text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa7c90636b4810f5846981b5d1192d23e75d7a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B38400&lt;/code&gt;&lt;code&gt;B75&lt;/code&gt;&lt;code&gt;B200&lt;/code&gt;&lt;code&gt;B134&lt;/code&gt;&lt;code&gt;B300&lt;/code&gt;&lt;code&gt;B1800&lt;/code&gt;&lt;code&gt;B150&lt;/code&gt;&lt;code&gt;B0&lt;/code&gt;&lt;code&gt;B19200&lt;/code&gt;&lt;code&gt;B1200&lt;/code&gt;&lt;code&gt;B9600&lt;/code&gt;&lt;code&gt;B600&lt;/code&gt;&lt;code&gt;B4800&lt;/code&gt;&lt;code&gt;B50&lt;/code&gt;&lt;code&gt;B2400&lt;/code&gt;&lt;code&gt;B110&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;B38400&lt;/code&gt;&lt;code&gt;B75&lt;/code&gt;&lt;code&gt;B200&lt;/code&gt;&lt;code&gt;B134&lt;/code&gt;&lt;code&gt;B300&lt;/code&gt;&lt;code&gt;B1800&lt;/code&gt;&lt;code&gt;B150&lt;/code&gt;&lt;code&gt;B0&lt;/code&gt;&lt;code&gt;B19200&lt;/code&gt;&lt;code&gt;B1200&lt;/code&gt;&lt;code&gt;B9600&lt;/code&gt;&lt;code&gt;B600&lt;/code&gt;&lt;code&gt;B4800&lt;/code&gt;&lt;code&gt;B50&lt;/code&gt;&lt;code&gt;B2400&lt;/code&gt;&lt;code&gt;B110&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a64c66bf4fc7c70ea27f75add0d37d3a321bd35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::Deparse,-p&lt;/code&gt; will print</source>
          <target state="translated">&lt;code&gt;B::Deparse,-p&lt;/code&gt; imprimir&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="12d99aa8d0dc3a4437e4a861de4e6a98166d8c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::Generate&lt;/code&gt; directly supports the creation of custom ops by name.</source>
          <target state="translated">&lt;code&gt;B::Generate&lt;/code&gt; admite directamente la creaci&amp;oacute;n de operaciones personalizadas por nombre.</target>
        </trans-unit>
        <trans-unit id="69143927686bc3bd43e1bf2779ecba7d882ac562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::OP&lt;/code&gt; , &lt;code&gt;B::UNOP&lt;/code&gt; , &lt;code&gt;B::UNOP_AUX&lt;/code&gt; , &lt;code&gt;B::BINOP&lt;/code&gt; , &lt;code&gt;B::LOGOP&lt;/code&gt; , &lt;code&gt;B::LISTOP&lt;/code&gt; , &lt;code&gt;B::PMOP&lt;/code&gt; , &lt;code&gt;B::SVOP&lt;/code&gt; , &lt;code&gt;B::PADOP&lt;/code&gt; , &lt;code&gt;B::PVOP&lt;/code&gt; , &lt;code&gt;B::LOOP&lt;/code&gt; , &lt;code&gt;B::COP&lt;/code&gt; , &lt;code&gt;B::METHOP&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;B::OP&lt;/code&gt; , &lt;code&gt;B::UNOP&lt;/code&gt; , &lt;code&gt;B::UNOP_AUX&lt;/code&gt; , &lt;code&gt;B::BINOP&lt;/code&gt; , &lt;code&gt;B::LOGOP&lt;/code&gt; , &lt;code&gt;B::LISTOP&lt;/code&gt; , &lt;code&gt;B::PMOP&lt;/code&gt; , &lt;code&gt;B::SVOP&lt;/code&gt; , &lt;code&gt;B::PADOP&lt;/code&gt; , &lt;code&gt;B::PVOP&lt;/code&gt; , &lt;code&gt;B::LOOP&lt;/code&gt; , &lt;code&gt;B::COP&lt;/code&gt; , &lt;code&gt;B::METHOP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="209ba02493eaaf8d3ebcdfb52441c0725f7544c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B::OP&lt;/code&gt;, &lt;code&gt;B::UNOP&lt;/code&gt;, &lt;code&gt;B::UNOP_AUX&lt;/code&gt;, &lt;code&gt;B::BINOP&lt;/code&gt;, &lt;code&gt;B::LOGOP&lt;/code&gt;, &lt;code&gt;B::LISTOP&lt;/code&gt;, &lt;code&gt;B::PMOP&lt;/code&gt;, &lt;code&gt;B::SVOP&lt;/code&gt;, &lt;code&gt;B::PADOP&lt;/code&gt;, &lt;code&gt;B::PVOP&lt;/code&gt;, &lt;code&gt;B::LOOP&lt;/code&gt;, &lt;code&gt;B::COP&lt;/code&gt;, &lt;code&gt;B::METHOP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9f3bb0f0c441b31c591f3a04a947cf1db2ac5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; blocks may be used to capture control before or after the implicit loop, just as in</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; bloques BEGIN y &lt;code&gt;END&lt;/code&gt; pueden usarse para capturar el control antes o despu&amp;eacute;s del bucle impl&amp;iacute;cito, al igual que en</target>
        </trans-unit>
        <trans-unit id="6e70ee8bd7cbef3858d58171f0cc99eaf7a63c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; blocks may be used to capture control before or after the implicit program loop, just as in</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; bloques BEGIN y &lt;code&gt;END&lt;/code&gt; pueden usarse para capturar el control antes o despu&amp;eacute;s del bucle de programa impl&amp;iacute;cito, al igual que en</target>
        </trans-unit>
        <trans-unit id="f8b758038b5498a90bd251e1abc1bf4be0e55d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGIN&lt;/code&gt; and &lt;code&gt;UNITCHECK&lt;/code&gt; blocks are not directly related to the phase of the interpreter. They can be created and executed during any phase.</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; &lt;code&gt;UNITCHECK&lt;/code&gt; bloques BEGIN y UNITCHECK no est&amp;aacute;n directamente relacionados con la fase del int&amp;eacute;rprete. Se pueden crear y ejecutar durante cualquier fase.</target>
        </trans-unit>
        <trans-unit id="082d24a9e87b0209dc81d0662163c42480ebe79c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEGINLIBPATH&lt;/code&gt; and &lt;code&gt;ENDLIBPATH&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499245d6aeb6a133d5fe34cee30f454c408a297d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINMODE&lt;/code&gt; , &lt;code&gt;CLEAR&lt;/code&gt; , &lt;code&gt;CLOSE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;DESTROY&lt;/code&gt; , &lt;code&gt;EOF&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; , &lt;code&gt;EXTEND&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; , &lt;code&gt;FILENO&lt;/code&gt; , &lt;code&gt;FIRSTKEY&lt;/code&gt; , &lt;code&gt;GETC&lt;/code&gt; , &lt;code&gt;NEXTKEY&lt;/code&gt; , &lt;code&gt;OPEN&lt;/code&gt; , &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; , &lt;code&gt;PUSH&lt;/code&gt; , &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;READLINE&lt;/code&gt; , &lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;SEEK&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; , &lt;code&gt;TELL&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;UNTIE&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINMODE&lt;/code&gt; , &lt;code&gt;CLEAR&lt;/code&gt; , &lt;code&gt;CLOSE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;DESTROY&lt;/code&gt; , &lt;code&gt;EOF&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; , &lt;code&gt;EXTEND&lt;/code&gt; ER , &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; , &lt;code&gt;FILENO&lt;/code&gt; , &lt;code&gt;FIRSTKEY&lt;/code&gt; , &lt;code&gt;GETC&lt;/code&gt; , &lt;code&gt;NEXTKEY&lt;/code&gt; , &lt;code&gt;OPEN&lt;/code&gt; , &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; , &lt;code&gt;PUSH&lt;/code&gt; , &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;READLINE&lt;/code&gt; , &lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;SEEK&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; , &lt;code&gt;TELL&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;UNTIE&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30054059d16923fe6138b013ad38390b2d287c04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINMODE&lt;/code&gt; , &lt;code&gt;CLEARERR&lt;/code&gt; , &lt;code&gt;CLOSE&lt;/code&gt; , &lt;code&gt;EOF&lt;/code&gt; , &lt;code&gt;ERROR&lt;/code&gt; , &lt;code&gt;FDOPEN&lt;/code&gt; , &lt;code&gt;FILENO&lt;/code&gt; , &lt;code&gt;FILL&lt;/code&gt; , &lt;code&gt;FLUSH&lt;/code&gt; , &lt;code&gt;OPEN&lt;/code&gt; , &lt;code&gt;POPPED&lt;/code&gt; , &lt;code&gt;PUSHED&lt;/code&gt; , &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;SEEK&lt;/code&gt; , &lt;code&gt;SETLINEBUF&lt;/code&gt; , &lt;code&gt;SYSOPEN&lt;/code&gt; , &lt;code&gt;TELL&lt;/code&gt; , &lt;code&gt;UNREAD&lt;/code&gt; , &lt;code&gt;UTF8&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINMODE&lt;/code&gt; , &lt;code&gt;CLEARERR&lt;/code&gt; , &lt;code&gt;CLOSE&lt;/code&gt; , &lt;code&gt;EOF&lt;/code&gt; , &lt;code&gt;ERROR&lt;/code&gt; , &lt;code&gt;FDOPEN&lt;/code&gt; , &lt;code&gt;FILENO&lt;/code&gt; , &lt;code&gt;FILL&lt;/code&gt; , &lt;code&gt;FLUSH&lt;/code&gt; , &lt;code&gt;OPEN&lt;/code&gt; , &lt;code&gt;POPPED&lt;/code&gt; , &lt;code&gt;PUSHED&lt;/code&gt; , &lt;code&gt;READ&lt;/code&gt; , &lt;code&gt;SEEK&lt;/code&gt; , &lt;code&gt;SETLINEBUF&lt;/code&gt; , &lt;code&gt;SYSOPEN&lt;/code&gt; , &lt;code&gt;TELL&lt;/code&gt; , &lt;code&gt;UNREAD&lt;/code&gt; , &lt;code&gt;UTF8&lt;/code&gt; , &lt;code&gt;WRITE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fb90a937e9d5d3bb388a880fc703afda3e062b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINMODE&lt;/code&gt;, &lt;code&gt;CLEAR&lt;/code&gt;, &lt;code&gt;CLOSE&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;DESTROY&lt;/code&gt;, &lt;code&gt;EOF&lt;/code&gt;, &lt;code&gt;EXISTS&lt;/code&gt;, &lt;code&gt;EXTEND&lt;/code&gt;, &lt;code&gt;FETCH&lt;/code&gt;, &lt;code&gt;FETCHSIZE&lt;/code&gt;, &lt;code&gt;FILENO&lt;/code&gt;, &lt;code&gt;FIRSTKEY&lt;/code&gt;, &lt;code&gt;GETC&lt;/code&gt;, &lt;code&gt;NEXTKEY&lt;/code&gt;, &lt;code&gt;OPEN&lt;/code&gt;, &lt;code&gt;POP&lt;/code&gt;, &lt;code&gt;PRINT&lt;/code&gt;, &lt;code&gt;PRINTF&lt;/code&gt;, &lt;code&gt;PUSH&lt;/code&gt;, &lt;code&gt;READ&lt;/code&gt;, &lt;code&gt;READLINE&lt;/code&gt;, &lt;code&gt;SCALAR&lt;/code&gt;, &lt;code&gt;SEEK&lt;/code&gt;, &lt;code&gt;SHIFT&lt;/code&gt;, &lt;code&gt;SPLICE&lt;/code&gt;, &lt;code&gt;STORE&lt;/code&gt;, &lt;code&gt;STORESIZE&lt;/code&gt;, &lt;code&gt;TELL&lt;/code&gt;, &lt;code&gt;TIEARRAY&lt;/code&gt;, &lt;code&gt;TIEHANDLE&lt;/code&gt;, &lt;code&gt;TIEHASH&lt;/code&gt;, &lt;code&gt;TIESCALAR&lt;/code&gt;, &lt;code&gt;UNSHIFT&lt;/code&gt;, &lt;code&gt;UNTIE&lt;/code&gt;, &lt;code&gt;WRITE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba58da6c13dde0f8c02e132b30d06dba883e205e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINMODE&lt;/code&gt;, &lt;code&gt;CLEARERR&lt;/code&gt;, &lt;code&gt;CLOSE&lt;/code&gt;, &lt;code&gt;EOF&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;FDOPEN&lt;/code&gt;, &lt;code&gt;FILENO&lt;/code&gt;, &lt;code&gt;FILL&lt;/code&gt;, &lt;code&gt;FLUSH&lt;/code&gt;, &lt;code&gt;OPEN&lt;/code&gt;, &lt;code&gt;POPPED&lt;/code&gt;, &lt;code&gt;PUSHED&lt;/code&gt;, &lt;code&gt;READ&lt;/code&gt;, &lt;code&gt;SEEK&lt;/code&gt;, &lt;code&gt;SETLINEBUF&lt;/code&gt;, &lt;code&gt;SYSOPEN&lt;/code&gt;, &lt;code&gt;TELL&lt;/code&gt;, &lt;code&gt;UNREAD&lt;/code&gt;, &lt;code&gt;UTF8&lt;/code&gt;, &lt;code&gt;WRITE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea30947e2c1475164f5299445eaca2bdacb962b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BRKINT&lt;/code&gt;&lt;code&gt;ICRNL&lt;/code&gt;&lt;code&gt;IGNBRK&lt;/code&gt;&lt;code&gt;IGNCR&lt;/code&gt;&lt;code&gt;IGNPAR&lt;/code&gt;&lt;code&gt;INLCR&lt;/code&gt;&lt;code&gt;INPCK&lt;/code&gt;&lt;code&gt;ISTRIP&lt;/code&gt;&lt;code&gt;IXOFF&lt;/code&gt;&lt;code&gt;IXON&lt;/code&gt;&lt;code&gt;PARMRK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BRKINT&lt;/code&gt;&lt;code&gt;ICRNL&lt;/code&gt;&lt;code&gt;IGNBRK&lt;/code&gt;&lt;code&gt;IGNCR&lt;/code&gt;&lt;code&gt;IGNPAR&lt;/code&gt;&lt;code&gt;INLCR&lt;/code&gt;&lt;code&gt;INPCK&lt;/code&gt;&lt;code&gt;ISTRIP&lt;/code&gt;&lt;code&gt;IXOFF&lt;/code&gt;&lt;code&gt;IXON&lt;/code&gt;&lt;code&gt;PARMRK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a86a4f316865f4d27f2b761993dbe11e226b269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BUFSIZ&lt;/code&gt;&lt;code&gt;EOF&lt;/code&gt;&lt;code&gt;FILENAME_MAX&lt;/code&gt;&lt;code&gt;L_ctermid&lt;/code&gt;&lt;code&gt;L_cuserid&lt;/code&gt;&lt;code&gt;L_tmpname&lt;/code&gt;&lt;code&gt;TMP_MAX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BUFSIZ&lt;/code&gt;&lt;code&gt;EOF&lt;/code&gt;&lt;code&gt;FILENAME_MAX&lt;/code&gt;&lt;code&gt;L_ctermid&lt;/code&gt;&lt;code&gt;L_cuserid&lt;/code&gt;&lt;code&gt;L_tmpname&lt;/code&gt;&lt;code&gt;TMP_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a3c7ddb888425f108b80badc278fe47210c4fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BUFSIZ&lt;/code&gt;&lt;code&gt;EOF&lt;/code&gt;&lt;code&gt;FILENAME_MAX&lt;/code&gt;&lt;code&gt;L_ctermid&lt;/code&gt;&lt;code&gt;L_cuserid&lt;/code&gt;&lt;code&gt;TMP_MAX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BUFSIZ&lt;/code&gt;&lt;code&gt;EOF&lt;/code&gt;&lt;code&gt;FILENAME_MAX&lt;/code&gt;&lt;code&gt;L_ctermid&lt;/code&gt;&lt;code&gt;L_cuserid&lt;/code&gt;&lt;code&gt;TMP_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1068b5ab79986a3cc5a6ee64ced95d9ae4dd1680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&amp;lt;code&amp;gt;&lt;/code&gt; -- code text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5d3888afaab4aeac99edeb07406b18608b6c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK&lt;/code&gt; code blocks are run just after the &lt;b&gt;initial&lt;/b&gt; Perl compile phase ends and before the run time begins, in LIFO order. &lt;code&gt;CHECK&lt;/code&gt; code blocks are used in the Perl compiler suite to save the compiled state of the program.</source>
          <target state="translated">&lt;code&gt;CHECK&lt;/code&gt; bloques de c&amp;oacute;digo CHECK se ejecutan justo despu&amp;eacute;s de que finaliza la fase de compilaci&amp;oacute;n &lt;b&gt;inicial de&lt;/b&gt; Perl y antes de que comience el tiempo de ejecuci&amp;oacute;n, en orden LIFO. &lt;code&gt;CHECK&lt;/code&gt; bloques de c&amp;oacute;digo CHECK se utilizan en el conjunto de compiladores de Perl para guardar el estado compilado del programa.</target>
        </trans-unit>
        <trans-unit id="38fcc27a3ad0d395c02e50e7c531f1819e983b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CJKV Information Processing&lt;/code&gt; by Ken Lunde</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e02246fa126d7ef5ff5b0718b1e93bd87149d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLK_TCK&lt;/code&gt;&lt;code&gt;CLOCKS_PER_SEC&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CLK_TCK&lt;/code&gt;&lt;code&gt;CLOCKS_PER_SEC&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a61a7563f8241ebae52535c87c69347ca5c0ae09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLOCAL&lt;/code&gt;&lt;code&gt;CREAD&lt;/code&gt;&lt;code&gt;CSIZE&lt;/code&gt;&lt;code&gt;CS5&lt;/code&gt;&lt;code&gt;CS6&lt;/code&gt;&lt;code&gt;CS7&lt;/code&gt;&lt;code&gt;CS8&lt;/code&gt;&lt;code&gt;CSTOPB&lt;/code&gt;&lt;code&gt;HUPCL&lt;/code&gt;&lt;code&gt;PARENB&lt;/code&gt;&lt;code&gt;PARODD&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CLOCAL&lt;/code&gt;&lt;code&gt;CREAD&lt;/code&gt;&lt;code&gt;CSIZE&lt;/code&gt;&lt;code&gt;CS5&lt;/code&gt;&lt;code&gt;CS6&lt;/code&gt;&lt;code&gt;CS7&lt;/code&gt;&lt;code&gt;CS8&lt;/code&gt;&lt;code&gt;CSTOPB&lt;/code&gt;&lt;code&gt;HUPCL&lt;/code&gt;&lt;code&gt;PARENB&lt;/code&gt;&lt;code&gt;PARODD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb14449092af20fb2f25b23f9f6ea74cda3c921f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLONE&lt;/code&gt; , &lt;code&gt;CLONE_SKIP&lt;/code&gt; ,</source>
          <target state="translated">&lt;code&gt;CLONE&lt;/code&gt; , &lt;code&gt;CLONE_SKIP&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="98feab5be1c0789e260f02a5b8786c2550b99e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLONE&lt;/code&gt;, &lt;code&gt;CLONE_SKIP&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e842438a6d5fd05c1d56ab371560a54b33caded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLONEf_CLONE_HOST&lt;/code&gt; - This is a win32 thing, it is ignored on unix, it tells perl's win32host code (which is c++) to clone itself, this is needed on win32 if you want to run two threads at the same time, if you just want to do some stuff in a separate perl interpreter and then throw it away and return to the original one, you don't need to do anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c369f72d806d3022fdba9421eb9e02d570ca93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLONEf_COPY_STACKS&lt;/code&gt; - is used to, well, copy the stacks also, without it we only clone the data and zero the stacks, with it we copy the stacks and the new perl interpreter is ready to run at the exact same point as the previous one. The pseudo-fork code uses &lt;code&gt;COPY_STACKS&lt;/code&gt; while the threads-&amp;gt;create doesn't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9777059e74a385b8c49ed05093082083d3a48d61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLONEf_KEEP_PTR_TABLE&lt;/code&gt; - &lt;code&gt;perl_clone&lt;/code&gt; keeps a ptr_table with the pointer of the old variable as a key and the new variable as a value, this allows it to check if something has been cloned and not clone it again, but rather just use the value and increase the refcount. If &lt;code&gt;KEEP_PTR_TABLE&lt;/code&gt; is not set then &lt;code&gt;perl_clone&lt;/code&gt; will kill the ptr_table using the function &lt;code&gt;ptr_table_free(PL_ptr_table); PL_ptr_table = NULL;&lt;/code&gt;. A reason to keep it around is if you want to dup some of your own variables which are outside the graph that perl scans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c199db2c255ea797ffcbc3258a9caf85ffeeae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CPAN.pm&lt;/code&gt; comes with a collection of example YAML files. Note that these are really just examples and should not be used without care because they cannot fit everybody's purpose. After all, the authors of the packages that ask questions had a need to ask, so you should watch their questions and adjust the examples to your environment and your needs. You have been warned:-)</source>
          <target state="translated">&lt;code&gt;CPAN.pm&lt;/code&gt; viene con una colecci&amp;oacute;n de archivos YAML de ejemplo. Tenga en cuenta que estos son realmente solo ejemplos y no deben usarse sin cuidado porque no pueden ajustarse al prop&amp;oacute;sito de todos. Despu&amp;eacute;s de todo, los autores de los paquetes que hacen preguntas ten&amp;iacute;an la necesidad de hacer preguntas, por lo que deber&amp;iacute;a observar sus preguntas y ajustar los ejemplos a su entorno y sus necesidades. Usted ha sido advertido:-)</target>
        </trans-unit>
        <trans-unit id="f9137f076637a4b82d637da05fb2a2466e26f89b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CX_LEAVE_SCOPE&lt;/code&gt; itself is safely re-entrant: if only half the savestack items have been popped before dying and getting trapped by eval, then the &lt;code&gt;CX_LEAVE_SCOPE&lt;/code&gt;s in &lt;code&gt;dounwind&lt;/code&gt; or &lt;code&gt;pp_leaveeval&lt;/code&gt; will continue where the first one left off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e958779cdd01a7b3327f2eef63836bcd8b19e2ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CYGWIN&lt;/code&gt; setting, permissions use the standard WinNT security descriptors and access control lists. Without one of these options, these tests will fail (listing not updated yet):</source>
          <target state="translated">&lt;code&gt;CYGWIN&lt;/code&gt; Configuraci&amp;oacute;n CYGWIN , los permisos utilizan los descriptores de seguridad est&amp;aacute;ndar de WinNT y las listas de control de acceso. Sin una de estas opciones, estas pruebas fallar&amp;aacute;n (lista no actualizada a&amp;uacute;n):</target>
        </trans-unit>
        <trans-unit id="715067c3d15ba3a25c4c578ac95ae803c5d463ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CYGWIN&lt;/code&gt; setting, the additional mode bits are stored as extended file attributes. On WinNT with the default</source>
          <target state="translated">&lt;code&gt;CYGWIN&lt;/code&gt; , los bits de modo adicionales se almacenan como atributos de archivo extendidos. En WinNT con el valor predeterminado</target>
        </trans-unit>
        <trans-unit id="b40e8c070cd96353a84f0cdb4689a540da128600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Carp&lt;/code&gt; takes care not to clobber the status variables &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; in the course of assembling its error messages. This means that a &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; or &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handler can capture the error information held in those variables, if it is required to augment the error message, and if the code calling &lt;code&gt;Carp&lt;/code&gt; left useful values there. Of course, &lt;code&gt;Carp&lt;/code&gt; can't guarantee the latter.</source>
          <target state="translated">&lt;code&gt;Carp&lt;/code&gt; se cuida de no golpear las variables de estado &lt;code&gt;$!&lt;/code&gt; y &lt;code&gt;$^E&lt;/code&gt; en el curso de ensamblar sus mensajes de error. Esto significa que un controlador &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; o &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; puede capturar la informaci&amp;oacute;n de error contenida en esas variables, si es necesario para aumentar el mensaje de error y si el c&amp;oacute;digo que llama a &lt;code&gt;Carp&lt;/code&gt; dej&amp;oacute; valores &amp;uacute;tiles all&amp;iacute;. Por supuesto, &lt;code&gt;Carp&lt;/code&gt; no puede garantizar esto &amp;uacute;ltimo.</target>
        </trans-unit>
        <trans-unit id="31407ed8968a4b0da65b3add4e603dd893f9f016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Accessor&lt;/code&gt; does a lot less than &lt;code&gt;Moose&lt;/code&gt; , and is a nice alternative if you find &lt;code&gt;Moose&lt;/code&gt; overwhelming. It's been around a long time and is well battle-tested. It also has a minimal &lt;code&gt;Moose&lt;/code&gt; compatibility mode which makes moving from &lt;code&gt;Class::Accessor&lt;/code&gt; to &lt;code&gt;Moose&lt;/code&gt; easy.</source>
          <target state="translated">&lt;code&gt;Class::Accessor&lt;/code&gt; hace mucho menos que &lt;code&gt;Moose&lt;/code&gt; , y es una buena alternativa si encuentra a &lt;code&gt;Moose&lt;/code&gt; abrumador. Ha existido durante mucho tiempo y est&amp;aacute; bien probado en batalla. Tambi&amp;eacute;n tiene un modo de compatibilidad m&amp;iacute;nimo de &lt;code&gt;Moose&lt;/code&gt; que facilita el cambio de &lt;code&gt;Class::Accessor&lt;/code&gt; a &lt;code&gt;Moose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ed06455b79951b5989783965750af6e61e64a7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Accessor&lt;/code&gt; does a lot less than &lt;code&gt;Moose&lt;/code&gt;, and is a nice alternative if you find &lt;code&gt;Moose&lt;/code&gt; overwhelming. It's been around a long time and is well battle-tested. It also has a minimal &lt;code&gt;Moose&lt;/code&gt; compatibility mode which makes moving from &lt;code&gt;Class::Accessor&lt;/code&gt; to &lt;code&gt;Moose&lt;/code&gt; easy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cba69d28533f7c1088e666571bd50781732c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Struct&lt;/code&gt; can create your class at compile time. The main reason for doing this is obvious, so your class acts like every other class in Perl. Creating your class at compile time will make the order of events similar to using any other class ( or Perl module ).</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; puede crear su clase en tiempo de compilaci&amp;oacute;n. La raz&amp;oacute;n principal para hacer esto es obvia, por lo que su clase act&amp;uacute;a como cualquier otra clase en Perl. La creaci&amp;oacute;n de su clase en tiempo de compilaci&amp;oacute;n har&amp;aacute; que el orden de los eventos sea similar al de cualquier otra clase (o m&amp;oacute;dulo Perl).</target>
        </trans-unit>
        <trans-unit id="3b9402d618b4323955fa7151700c933e1781cb7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Struct&lt;/code&gt; exports a single function, &lt;code&gt;struct&lt;/code&gt; . Given a list of element names and types, and optionally a class name, &lt;code&gt;struct&lt;/code&gt; creates a Perl 5 class that implements a &quot;struct-like&quot; data structure.</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; exporta una sola funci&amp;oacute;n, &lt;code&gt;struct&lt;/code&gt; . Dada una lista de nombres y tipos de elementos, y opcionalmente un nombre de clase, &lt;code&gt;struct&lt;/code&gt; crea una clase de Perl 5 que implementa una estructura de datos &quot;similar a una estructura&quot;.</target>
        </trans-unit>
        <trans-unit id="6128e2c2989693cb970e5b32a9cb78fbca30494c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Struct&lt;/code&gt; exports a single function, &lt;code&gt;struct&lt;/code&gt;. Given a list of element names and types, and optionally a class name, &lt;code&gt;struct&lt;/code&gt; creates a Perl 5 class that implements a &quot;struct-like&quot; data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fc00057d2a2d9fb02cae29f782ec7d03780bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class::Tiny&lt;/code&gt; is the absolute minimal option. It has no dependencies, and almost no syntax to learn. It's a good option for a super minimal environment and for throwing something together quickly without having to worry about details.</source>
          <target state="translated">&lt;code&gt;Class::Tiny&lt;/code&gt; es la opci&amp;oacute;n m&amp;iacute;nima absoluta. No tiene dependencias y casi no hay sintaxis que aprender. Es una buena opci&amp;oacute;n para un entorno s&amp;uacute;per m&amp;iacute;nimo y para armar algo r&amp;aacute;pidamente sin tener que preocuparse por los detalles.</target>
        </trans-unit>
        <trans-unit id="55d6cd736729017df34ed5101a1c462435573300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compress::Raw::Bzip2&lt;/code&gt; provides an interface to the in-memory compression/uncompression functions from the bzip2 compression library.</source>
          <target state="translated">&lt;code&gt;Compress::Raw::Bzip2&lt;/code&gt; proporciona una interfaz para las funciones de compresi&amp;oacute;n / descompresi&amp;oacute;n en memoria de la biblioteca de compresi&amp;oacute;n bzip2.</target>
        </trans-unit>
        <trans-unit id="8e25abe307925b3d64f288e9dfd33b8855c649d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Configure&lt;/code&gt; notes: This function is called &lt;code&gt;'Perl_signbit'&lt;/code&gt; instead of a plain &lt;code&gt;'signbit'&lt;/code&gt; because it is easy to imagine a system having a &lt;code&gt;signbit()&lt;/code&gt; function or macro that doesn't happen to work with our particular choice of NVs. We shouldn't just re-&lt;code&gt;#define&lt;/code&gt;&lt;code&gt;signbit&lt;/code&gt; as &lt;code&gt;Perl_signbit&lt;/code&gt; and expect the standard system headers to be happy. Also, this is a no-context function (no &lt;code&gt;pTHX_&lt;/code&gt;) because &lt;code&gt;Perl_signbit()&lt;/code&gt; is usually re-&lt;code&gt;#defined&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8725a0495b722c17e9e3c10477740f81c48584e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CvGV($cv)&lt;/code&gt; return one of the globs associated to a subroutine reference $cv.</source>
          <target state="translated">&lt;code&gt;CvGV($cv)&lt;/code&gt; devuelve uno de los globs asociados a una referencia de subrutina $ cv.</target>
        </trans-unit>
        <trans-unit id="bc356104ce9d43ddd133f13ae30f341cf9800ab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DATA&lt;/code&gt; may be a reference to a list or a list and must be encoded by the caller to octets of whatever encoding is required, e.g. by using the Encode module's &lt;code&gt;encode()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57151d3af80dd94fc75fda2ca627813262903784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DATA&lt;/code&gt; may be a reference to a list or a list. If specified the contents of &lt;code&gt;DATA&lt;/code&gt; and a termination string &lt;code&gt;&quot;.\r\n&quot;&lt;/code&gt; is sent to the server. And the result will be true if the data was accepted.</source>
          <target state="translated">&lt;code&gt;DATA&lt;/code&gt; pueden ser una referencia a una lista o una lista. Si se especifica, el contenido de &lt;code&gt;DATA&lt;/code&gt; y una cadena de terminaci&amp;oacute;n &lt;code&gt;&quot;.\r\n&quot;&lt;/code&gt; se env&amp;iacute;a al servidor. Y el resultado ser&amp;aacute; verdadero si los datos fueron aceptados.</target>
        </trans-unit>
        <trans-unit id="0c191c78cba51d1e084cbee694f95f10d6ca9950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::DB&lt;/code&gt; , &lt;code&gt;DB::sub&lt;/code&gt; , &lt;code&gt;DB::lsub&lt;/code&gt; , &lt;code&gt;DB::goto&lt;/code&gt; , &lt;code&gt;DB::postponed&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DB::DB&lt;/code&gt; , &lt;code&gt;DB::sub&lt;/code&gt; , &lt;code&gt;DB::lsub&lt;/code&gt; , &lt;code&gt;DB::goto&lt;/code&gt; , &lt;code&gt;DB::postponed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28d060cd64afa020a95e200af7664ef2df9db237" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::DB&lt;/code&gt;, &lt;code&gt;DB::sub&lt;/code&gt;, &lt;code&gt;DB::lsub&lt;/code&gt;, &lt;code&gt;DB::goto&lt;/code&gt;, &lt;code&gt;DB::postponed&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075e4f0cb45fda33f92fa95b6e40a79ce5b91179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::dump_trace(skip[,count])&lt;/code&gt; skips the specified number of frames and returns a list containing information about the calling frames (all of them, if &lt;code&gt;count&lt;/code&gt; is missing). Each entry is reference to a hash with keys &lt;code&gt;context&lt;/code&gt; (either &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt; , or &lt;code&gt;@&lt;/code&gt; ), &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; (subroutine name, or info about &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;args&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or a reference to an array), &lt;code&gt;file&lt;/code&gt; , and &lt;code&gt;line&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;DB::dump_trace(skip[,count])&lt;/code&gt; omite el n&amp;uacute;mero especificado de cuadros y devuelve una lista que contiene informaci&amp;oacute;n sobre los cuadros de llamada (todos ellos, si falta el &lt;code&gt;count&lt;/code&gt; ). Cada entrada es una referencia a un hash con &lt;code&gt;context&lt;/code&gt; o de claves (ya sea &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;$&lt;/code&gt; O &lt;code&gt;@&lt;/code&gt; ), &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; (nombre de subrutina o informaci&amp;oacute;n sobre &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ), &lt;code&gt;args&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; o una referencia a una matriz), &lt;code&gt;file&lt;/code&gt; y &lt;code&gt;line&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f92f255eaa1ee5f278ccb95ad326d8f6807dc12e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::dump_trace(skip[,count])&lt;/code&gt; skips the specified number of frames and returns a list containing information about the calling frames (all of them, if &lt;code&gt;count&lt;/code&gt; is missing). Each entry is reference to a hash with keys &lt;code&gt;context&lt;/code&gt; (either &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, or &lt;code&gt;@&lt;/code&gt;), &lt;code&gt;sub&lt;/code&gt; (subroutine name, or info about &lt;code&gt;eval&lt;/code&gt;), &lt;code&gt;args&lt;/code&gt; (&lt;code&gt;undef&lt;/code&gt; or a reference to an array), &lt;code&gt;file&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b69e03ccf8a3fb70092f79bbc9b211347aa723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::print_trace(FH, skip[, count[, short]])&lt;/code&gt; prints formatted info about caller frames. The last two functions may be convenient as arguments to &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;DB::print_trace(FH, skip[, count[, short]])&lt;/code&gt; imprime informaci&amp;oacute;n formateada sobre los marcos de llamada. Las dos &amp;uacute;ltimas funciones pueden ser convenientes como argumentos para los comandos &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d87598575b8bfff54dd62bf079fe6ab772e7dc5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DB::print_trace(FH, skip[, count[, short]])&lt;/code&gt; prints formatted info about caller frames. The last two functions may be convenient as arguments to &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc91551827219e284d49468303a5e0aa60fb1666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DBL_DIG&lt;/code&gt;&lt;code&gt;DBL_EPSILON&lt;/code&gt;&lt;code&gt;DBL_MANT_DIG&lt;/code&gt;&lt;code&gt;DBL_MAX&lt;/code&gt;&lt;code&gt;DBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MAX_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN&lt;/code&gt;&lt;code&gt;DBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_DIG&lt;/code&gt;&lt;code&gt;FLT_EPSILON&lt;/code&gt;&lt;code&gt;FLT_MANT_DIG&lt;/code&gt;&lt;code&gt;FLT_MAX&lt;/code&gt;&lt;code&gt;FLT_MAX_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MAX_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN&lt;/code&gt;&lt;code&gt;FLT_MIN_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_RADIX&lt;/code&gt;&lt;code&gt;FLT_ROUNDS&lt;/code&gt;&lt;code&gt;LDBL_DIG&lt;/code&gt;&lt;code&gt;LDBL_EPSILON&lt;/code&gt;&lt;code&gt;LDBL_MANT_DIG&lt;/code&gt;&lt;code&gt;LDBL_MAX&lt;/code&gt;&lt;code&gt;LDBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MAX_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN&lt;/code&gt;&lt;code&gt;LDBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN_EXP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DBL_DIG&lt;/code&gt;&lt;code&gt;DBL_EPSILON&lt;/code&gt;&lt;code&gt;DBL_MANT_DIG&lt;/code&gt;&lt;code&gt;DBL_MAX&lt;/code&gt;&lt;code&gt;DBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MAX_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN&lt;/code&gt;&lt;code&gt;DBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;DBL_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_DIG&lt;/code&gt;&lt;code&gt;FLT_EPSILON&lt;/code&gt;&lt;code&gt;FLT_MANT_DIG&lt;/code&gt;&lt;code&gt;FLT_MAX&lt;/code&gt;&lt;code&gt;FLT_MAX_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MAX_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN&lt;/code&gt;&lt;code&gt;FLT_MIN_10_EXP&lt;/code&gt;&lt;code&gt;FLT_MIN_EXP&lt;/code&gt;&lt;code&gt;FLT_RADIX&lt;/code&gt;&lt;code&gt;FLT_ROUNDS&lt;/code&gt;&lt;code&gt;LDBL_DIG&lt;/code&gt;&lt;code&gt;LDBL_EPSILON&lt;/code&gt;&lt;code&gt;LDBL_MANT_DIG&lt;/code&gt;&lt;code&gt;LDBL_MAX&lt;/code&gt;&lt;code&gt;LDBL_MAX_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MAX_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN&lt;/code&gt;&lt;code&gt;LDBL_MIN_10_EXP&lt;/code&gt;&lt;code&gt;LDBL_MIN_EXP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30808f1e9d3837ee2bd2822e88b40e6f0d7a334f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESTROY&lt;/code&gt;, &lt;code&gt;DOES&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3719fb91a61fd372e24aedc14bb9ddcd95db3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DIRFEXT&lt;/code&gt; - the extension used for the directory file, &lt;code&gt;.dir&lt;/code&gt; everywhere but VMS, where it is &lt;code&gt;.sdbm_dir&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;DIRFEXT&lt;/code&gt; : la extensi&amp;oacute;n utilizada para el archivo de directorio, &lt;code&gt;.dir&lt;/code&gt; en todas partes excepto VMS, donde es &lt;code&gt;.sdbm_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8830dc96e0d7a2f7d1b811d3fa4635420082057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DIRFEXT&lt;/code&gt; - the extension used for the directory file, &lt;code&gt;.dir&lt;/code&gt; everywhere but VMS, where it is &lt;code&gt;.sdbm_dir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3555867fff7bf3b3dfb31146dcde0447b537ad4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOES&lt;/code&gt; and &lt;code&gt;isa&lt;/code&gt; are similar, in that if either is true, you know that the object or class on which you call the method can perform specific behavior. However, &lt;code&gt;DOES&lt;/code&gt; is different from &lt;code&gt;isa&lt;/code&gt; in that it does not care</source>
          <target state="translated">&lt;code&gt;DOES&lt;/code&gt; e &lt;code&gt;isa&lt;/code&gt; son similares, en el sentido de que si cualquiera de los dos es verdadero, usted sabe que el objeto o la clase en la que llama al m&amp;eacute;todo puede realizar un comportamiento espec&amp;iacute;fico. Sin embargo, &lt;code&gt;DOES&lt;/code&gt; se diferencia de &lt;code&gt;isa&lt;/code&gt; en que no le importa</target>
        </trans-unit>
        <trans-unit id="327aba9e69c6dc314afbb9d3770b24a3db484053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOES&lt;/code&gt; checks if the object or class performs the role &lt;code&gt;ROLE&lt;/code&gt; . A role is a named group of specific behavior (often methods of particular names and signatures), similar to a class, but not necessarily a complete class by itself. For example, logging or serialization may be roles.</source>
          <target state="translated">&lt;code&gt;DOES&lt;/code&gt; comprueba si el objeto o la clase desempe&amp;ntilde;a el rol &lt;code&gt;ROLE&lt;/code&gt; . Un rol es un grupo con nombre de comportamiento espec&amp;iacute;fico (a menudo m&amp;eacute;todos de nombres y firmas particulares), similar a una clase, pero no necesariamente una clase completa por s&amp;iacute; misma. Por ejemplo, el registro o la serializaci&amp;oacute;n pueden ser roles.</target>
        </trans-unit>
        <trans-unit id="02e89780034f6d05b29fbf9354bcce3b813bf1b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOES&lt;/code&gt; checks if the object or class performs the role &lt;code&gt;ROLE&lt;/code&gt;. A role is a named group of specific behavior (often methods of particular names and signatures), similar to a class, but not necessarily a complete class by itself. For example, logging or serialization may be roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ae5f8ffa73c825371cccb10b034527e0663899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data::Dumper&lt;/code&gt; cheats with CODE references. If a code reference is encountered in the structure being processed (and if you haven't set the &lt;code&gt;Deparse&lt;/code&gt; flag), an anonymous subroutine that contains the string '&quot;DUMMY&quot;' will be inserted in its place, and a warning will be printed if &lt;code&gt;Purity&lt;/code&gt; is set. You can &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the result, but bear in mind that the anonymous sub that gets created is just a placeholder. Someday, perl will have a switch to cache-on-demand the string representation of a compiled piece of code, I hope. If you have prior knowledge of all the code refs that your data structures are likely to have, you can use the &lt;code&gt;Seen&lt;/code&gt; method to pre-seed the internal reference table and make the dumped output point to them, instead. See &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; above.</source>
          <target state="translated">&lt;code&gt;Data::Dumper&lt;/code&gt; con referencias de C&amp;Oacute;DIGO. Si se encuentra una referencia de c&amp;oacute;digo en la estructura que se est&amp;aacute; procesando (y si no ha configurado el indicador &lt;code&gt;Deparse&lt;/code&gt; ), se insertar&amp;aacute; una subrutina an&amp;oacute;nima que contiene la cadena '&quot;DUMMY&quot;' en su lugar, y se imprimir&amp;aacute; una advertencia si &lt;code&gt;Purity&lt;/code&gt; est&amp;aacute; puesta. Puede &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uar el resultado, pero tenga en cuenta que el sub an&amp;oacute;nimo que se crea es solo un marcador de posici&amp;oacute;n. Alg&amp;uacute;n d&amp;iacute;a, Perl tendr&amp;aacute; un cambio para almacenar en cach&amp;eacute; a pedido la representaci&amp;oacute;n de cadena de un fragmento de c&amp;oacute;digo compilado, espero. Si usted tiene un conocimiento previo de todos los &amp;aacute;rbitros de c&amp;oacute;digo que sus estructuras de datos es probable que tengan, se puede utilizar el &lt;code&gt;Seen&lt;/code&gt; m&amp;eacute;todo para pre-sembrar la tabla de referencia interna y hacer que la salida volcada apunte a ellos, en su lugar. Ver &lt;a href=&quot;#EXAMPLES&quot;&gt;EJEMPLOS&lt;/a&gt; arriba.</target>
        </trans-unit>
        <trans-unit id="5a6f148ea8562b087e0f28490e5503072c364c58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data::Dumper&lt;/code&gt; cheats with CODE references. If a code reference is encountered in the structure being processed (and if you haven't set the &lt;code&gt;Deparse&lt;/code&gt; flag), an anonymous subroutine that contains the string '&quot;DUMMY&quot;' will be inserted in its place, and a warning will be printed if &lt;code&gt;Purity&lt;/code&gt; is set. You can &lt;code&gt;eval&lt;/code&gt; the result, but bear in mind that the anonymous sub that gets created is just a placeholder. Even using the &lt;code&gt;Deparse&lt;/code&gt; flag will in some cases produce results that behave differently after being passed to &lt;code&gt;eval&lt;/code&gt;; see the documentation for &lt;a href=&quot;B::Deparse&quot;&gt;B::Deparse&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112c6262b9b29bb95ce2b06c9288ae4abb8f9636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::DProf&lt;/code&gt; produces a special file, called</source>
          <target state="translated">&lt;code&gt;Devel::DProf&lt;/code&gt; produce un archivo especial, llamado</target>
        </trans-unit>
        <trans-unit id="a2c422f548b824872d70a71251455f906761cf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::FastProf&lt;/code&gt; is another Perl line profiler. This was written with a view to getting a faster line profiler, than is possible with for example &lt;code&gt;Devel::SmallProf&lt;/code&gt; , because it's written in &lt;code&gt;C&lt;/code&gt; . To use &lt;code&gt;Devel::FastProf&lt;/code&gt; , supply the &lt;code&gt;-d&lt;/code&gt; argument to Perl:</source>
          <target state="translated">&lt;code&gt;Devel::FastProf&lt;/code&gt; es otro perfilador de l&amp;iacute;neas de Perl. Esto fue escrito con el fin de conseguir un perfilador l&amp;iacute;nea m&amp;aacute;s r&amp;aacute;pida, lo que es posible con, por ejemplo &lt;code&gt;Devel::SmallProf&lt;/code&gt; , porque est&amp;aacute; escrito en &lt;code&gt;C&lt;/code&gt; . Para usar &lt;code&gt;Devel::FastProf&lt;/code&gt; , proporcione el argumento &lt;code&gt;-d&lt;/code&gt; a Perl:</target>
        </trans-unit>
        <trans-unit id="93a21cfa54237cffc3c68d2ee1376853e23ef5ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::FastProf&lt;/code&gt; is another Perl line profiler. This was written with a view to getting a faster line profiler, than is possible with for example &lt;code&gt;Devel::SmallProf&lt;/code&gt;, because it's written in &lt;code&gt;C&lt;/code&gt;. To use &lt;code&gt;Devel::FastProf&lt;/code&gt;, supply the &lt;code&gt;-d&lt;/code&gt; argument to Perl:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40154257a8b82c38bcca59cdc00939ace9931afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::FastProf&lt;/code&gt; writes statistics to the file</source>
          <target state="translated">&lt;code&gt;Devel::FastProf&lt;/code&gt; escribe estad&amp;iacute;sticas en el archivo</target>
        </trans-unit>
        <trans-unit id="29ccdf5a561326d39cd32316fbd7ceef38fc88e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::NYTProf&lt;/code&gt; is the &lt;b&gt;next generation&lt;/b&gt; of Perl code profiler, fixing many shortcomings in other tools and implementing many cool features. First of all it can be used as either a</source>
          <target state="translated">&lt;code&gt;Devel::NYTProf&lt;/code&gt; es la &lt;b&gt;pr&amp;oacute;xima generaci&amp;oacute;n&lt;/b&gt; de perfilador de c&amp;oacute;digo Perl, que corrige muchas deficiencias en otras herramientas e implementa muchas caracter&amp;iacute;sticas interesantes. En primer lugar, se puede utilizar como</target>
        </trans-unit>
        <trans-unit id="c5797923d69aa381e05603f605d5a631ec973775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::PPPort&lt;/code&gt; contains two functions, &lt;code&gt;WriteFile&lt;/code&gt; and &lt;code&gt;GetFileContents&lt;/code&gt; . &lt;code&gt;WriteFile&lt;/code&gt; 's only purpose is to write the</source>
          <target state="translated">&lt;code&gt;Devel::PPPort&lt;/code&gt; contiene dos funciones, &lt;code&gt;WriteFile&lt;/code&gt; y &lt;code&gt;GetFileContents&lt;/code&gt; . El &amp;uacute;nico prop&amp;oacute;sito de &lt;code&gt;WriteFile&lt;/code&gt; es escribir el</target>
        </trans-unit>
        <trans-unit id="05817954c252e4cc395cefaad029cdd93ea5fb02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::PPPort&lt;/code&gt; contains two functions, &lt;code&gt;WriteFile&lt;/code&gt; and &lt;code&gt;GetFileContents&lt;/code&gt;. &lt;code&gt;WriteFile&lt;/code&gt;'s only purpose is to write the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018354f48ba5b78747f51bd5947259fe8ee3715c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::PPPort&lt;/code&gt; generates a C header file</source>
          <target state="translated">&lt;code&gt;Devel::PPPort&lt;/code&gt; genera un archivo de encabezado C</target>
        </trans-unit>
        <trans-unit id="a06bb951efbe313b213cf2bad4e278dbcedc8fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::Profiler&lt;/code&gt; generates a tmon.out file which is compatible with the &lt;code&gt;dprofpp&lt;/code&gt; program, thus saving the construction of a dedicated statistics reader program. &lt;code&gt;dprofpp&lt;/code&gt; usage is therefore identical to the above example.</source>
          <target state="translated">&lt;code&gt;Devel::Profiler&lt;/code&gt; genera un archivo tmon.out que es compatible con el programa &lt;code&gt;dprofpp&lt;/code&gt; , ahorrando as&amp;iacute; la construcci&amp;oacute;n de un programa lector de estad&amp;iacute;sticas dedicado. &lt;code&gt;dprofpp&lt;/code&gt; uso de dprofpp es id&amp;eacute;ntico al del ejemplo anterior.</target>
        </trans-unit>
        <trans-unit id="4e8fab08ab7193519be5833e52c406d22be75acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Devel::SmallProf&lt;/code&gt; writes it's output into a file called</source>
          <target state="translated">&lt;code&gt;Devel::SmallProf&lt;/code&gt; escribe su salida en un archivo llamado</target>
        </trans-unit>
        <trans-unit id="0825c0fbe9eac3bd9846a860cced812e78501c17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dump&lt;/code&gt; , &lt;code&gt;mstat&lt;/code&gt; , &lt;code&gt;DeadCode&lt;/code&gt; , &lt;code&gt;DumpArray&lt;/code&gt; , &lt;code&gt;DumpWithOP&lt;/code&gt; and &lt;code&gt;DumpProg&lt;/code&gt; , &lt;code&gt;fill_mstats&lt;/code&gt; , &lt;code&gt;mstats_fillhash&lt;/code&gt; , &lt;code&gt;mstats2hash&lt;/code&gt; by default. Additionally available &lt;code&gt;SvREFCNT&lt;/code&gt; , &lt;code&gt;SvREFCNT_inc&lt;/code&gt; and &lt;code&gt;SvREFCNT_dec&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Dump&lt;/code&gt; , &lt;code&gt;mstat&lt;/code&gt; , &lt;code&gt;DeadCode&lt;/code&gt; , &lt;code&gt;DumpArray&lt;/code&gt; , &lt;code&gt;DumpWithOP&lt;/code&gt; y &lt;code&gt;DumpProg&lt;/code&gt; , &lt;code&gt;fill_mstats&lt;/code&gt; , &lt;code&gt;mstats_fillhash&lt;/code&gt; , &lt;code&gt;mstats2hash&lt;/code&gt; de forma predeterminada. Tambi&amp;eacute;n est&amp;aacute;n disponibles &lt;code&gt;SvREFCNT&lt;/code&gt; , &lt;code&gt;SvREFCNT_inc&lt;/code&gt; y &lt;code&gt;SvREFCNT_dec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f766e42be61707e945a52866ac11ac451385573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dump&lt;/code&gt;, &lt;code&gt;mstat&lt;/code&gt;, &lt;code&gt;DeadCode&lt;/code&gt;, &lt;code&gt;DumpArray&lt;/code&gt;, &lt;code&gt;DumpWithOP&lt;/code&gt; and &lt;code&gt;DumpProg&lt;/code&gt;, &lt;code&gt;fill_mstats&lt;/code&gt;, &lt;code&gt;mstats_fillhash&lt;/code&gt;, &lt;code&gt;mstats2hash&lt;/code&gt; by default. Additionally available &lt;code&gt;SvREFCNT&lt;/code&gt;, &lt;code&gt;SvREFCNT_inc&lt;/code&gt; and &lt;code&gt;SvREFCNT_dec&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c7ca6f8b76a10f9d5318c6941ff36f70c99beb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dup&lt;/code&gt; uses &lt;code&gt;Getarg&lt;/code&gt; to retrieve the argument originally passed to &lt;code&gt;Pushed&lt;/code&gt; , so you must implement this function if your layer has an extra argument to &lt;code&gt;Pushed&lt;/code&gt; and will ever be &lt;code&gt;Dup&lt;/code&gt; ed.</source>
          <target state="translated">&lt;code&gt;Dup&lt;/code&gt; usa &lt;code&gt;Getarg&lt;/code&gt; para recuperar el argumento originalmente pasado a &lt;code&gt;Pushed&lt;/code&gt; , por lo que debe implementar esta funci&amp;oacute;n si su capa tiene un argumento adicional para &lt;code&gt;Pushed&lt;/code&gt; y alguna vez ser&amp;aacute; &lt;code&gt;Dup&lt;/code&gt; ed.</target>
        </trans-unit>
        <trans-unit id="13c347aae10a04199dba573c1a7c3ccb7409e817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dup&lt;/code&gt; uses &lt;code&gt;Getarg&lt;/code&gt; to retrieve the argument originally passed to &lt;code&gt;Pushed&lt;/code&gt;, so you must implement this function if your layer has an extra argument to &lt;code&gt;Pushed&lt;/code&gt; and will ever be &lt;code&gt;Dup&lt;/code&gt;ed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f921a8451ac3554bc33c1ee5ed3ce77052954dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;escape&amp;gt;&lt;/code&gt; -- a character escape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbfb1d06fc3039522251007d62aa0c69bf6fa5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;gt&amp;gt;&lt;/code&gt; -- a literal &amp;gt; (greater than)</source>
          <target state="translated">&lt;code&gt;E&amp;lt;gt&amp;gt;&lt;/code&gt; - un literal&amp;gt; (mayor que)</target>
        </trans-unit>
        <trans-unit id="9ab5736f8b7db61936bca7cf554720a007684208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;lt&amp;gt;&lt;/code&gt; -- a literal &amp;lt; (less than)</source>
          <target state="translated">&lt;code&gt;E&amp;lt;lt&amp;gt;&lt;/code&gt; - un literal &amp;lt;(menor que)</target>
        </trans-unit>
        <trans-unit id="3fd01da0fa74c94e7d191b89b539691222f4b42b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; -- a literal / (</source>
          <target state="translated">&lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; - un literal / (</target>
        </trans-unit>
        <trans-unit id="3d6f8bc422c538eb3aeae22e52038748fa18df75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&amp;lt;verbar&amp;gt;&lt;/code&gt; -- a literal | (</source>
          <target state="translated">&lt;code&gt;E&amp;lt;verbar&amp;gt;&lt;/code&gt; - un literal | (</target>
        </trans-unit>
        <trans-unit id="cf0f76c73d09691fd92de4db3ba41dd7d0cb9322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E2BIG&lt;/code&gt;&lt;code&gt;EACCES&lt;/code&gt;&lt;code&gt;EADDRINUSE&lt;/code&gt;&lt;code&gt;EADDRNOTAVAIL&lt;/code&gt;&lt;code&gt;EAFNOSUPPORT&lt;/code&gt;&lt;code&gt;EAGAIN&lt;/code&gt;&lt;code&gt;EALREADY&lt;/code&gt;&lt;code&gt;EBADF&lt;/code&gt;&lt;code&gt;EBADMSG&lt;/code&gt;&lt;code&gt;EBUSY&lt;/code&gt;&lt;code&gt;ECANCELED&lt;/code&gt;&lt;code&gt;ECHILD&lt;/code&gt;&lt;code&gt;ECONNABORTED&lt;/code&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;&lt;code&gt;ECONNRESET&lt;/code&gt;&lt;code&gt;EDEADLK&lt;/code&gt;&lt;code&gt;EDESTADDRREQ&lt;/code&gt;&lt;code&gt;EDOM&lt;/code&gt;&lt;code&gt;EDQUOT&lt;/code&gt;&lt;code&gt;EEXIST&lt;/code&gt;&lt;code&gt;EFAULT&lt;/code&gt;&lt;code&gt;EFBIG&lt;/code&gt;&lt;code&gt;EHOSTDOWN&lt;/code&gt;&lt;code&gt;EHOSTUNREACH&lt;/code&gt;&lt;code&gt;EIDRM&lt;/code&gt;&lt;code&gt;EILSEQ&lt;/code&gt;&lt;code&gt;EINPROGRESS&lt;/code&gt;&lt;code&gt;EINTR&lt;/code&gt;&lt;code&gt;EINVAL&lt;/code&gt;&lt;code&gt;EIO&lt;/code&gt;&lt;code&gt;EISCONN&lt;/code&gt;&lt;code&gt;EISDIR&lt;/code&gt;&lt;code&gt;ELOOP&lt;/code&gt;&lt;code&gt;EMFILE&lt;/code&gt;&lt;code&gt;EMLINK&lt;/code&gt;&lt;code&gt;EMSGSIZE&lt;/code&gt;&lt;code&gt;ENAMETOOLONG&lt;/code&gt;&lt;code&gt;ENETDOWN&lt;/code&gt;&lt;code&gt;ENETRESET&lt;/code&gt;&lt;code&gt;ENETUNREACH&lt;/code&gt;&lt;code&gt;ENFILE&lt;/code&gt;&lt;code&gt;ENOBUFS&lt;/code&gt;&lt;code&gt;ENODATA&lt;/code&gt;&lt;code&gt;ENODEV&lt;/code&gt;&lt;code&gt;ENOENT&lt;/code&gt;&lt;code&gt;ENOEXEC&lt;/code&gt;&lt;code&gt;ENOLCK&lt;/code&gt;&lt;code&gt;ENOLINK&lt;/code&gt;&lt;code&gt;ENOMEM&lt;/code&gt;&lt;code&gt;ENOMSG&lt;/code&gt;&lt;code&gt;ENOPROTOOPT&lt;/code&gt;&lt;code&gt;ENOSPC&lt;/code&gt;&lt;code&gt;ENOSR&lt;/code&gt;&lt;code&gt;ENOSTR&lt;/code&gt;&lt;code&gt;ENOSYS&lt;/code&gt;&lt;code&gt;ENOTBLK&lt;/code&gt;&lt;code&gt;ENOTCONN&lt;/code&gt;&lt;code&gt;ENOTDIR&lt;/code&gt;&lt;code&gt;ENOTEMPTY&lt;/code&gt;&lt;code&gt;ENOTRECOVERABLE&lt;/code&gt;&lt;code&gt;ENOTSOCK&lt;/code&gt;&lt;code&gt;ENOTSUP&lt;/code&gt;&lt;code&gt;ENOTTY&lt;/code&gt;&lt;code&gt;ENXIO&lt;/code&gt;&lt;code&gt;EOPNOTSUPP&lt;/code&gt;&lt;code&gt;EOTHER&lt;/code&gt;&lt;code&gt;EOVERFLOW&lt;/code&gt;&lt;code&gt;EOWNERDEAD&lt;/code&gt;&lt;code&gt;EPERM&lt;/code&gt;&lt;code&gt;EPFNOSUPPORT&lt;/code&gt;&lt;code&gt;EPIPE&lt;/code&gt;&lt;code&gt;EPROCLIM&lt;/code&gt;&lt;code&gt;EPROTO&lt;/code&gt;&lt;code&gt;EPROTONOSUPPORT&lt;/code&gt;&lt;code&gt;EPROTOTYPE&lt;/code&gt;&lt;code&gt;ERANGE&lt;/code&gt;&lt;code&gt;EREMOTE&lt;/code&gt;&lt;code&gt;ERESTART&lt;/code&gt;&lt;code&gt;EROFS&lt;/code&gt;&lt;code&gt;ESHUTDOWN&lt;/code&gt;&lt;code&gt;ESOCKTNOSUPPORT&lt;/code&gt;&lt;code&gt;ESPIPE&lt;/code&gt;&lt;code&gt;ESRCH&lt;/code&gt;&lt;code&gt;ESTALE&lt;/code&gt;&lt;code&gt;ETIME&lt;/code&gt;&lt;code&gt;ETIMEDOUT&lt;/code&gt;&lt;code&gt;ETOOMANYREFS&lt;/code&gt;&lt;code&gt;ETXTBSY&lt;/code&gt;&lt;code&gt;EUSERS&lt;/code&gt;&lt;code&gt;EWOULDBLOCK&lt;/code&gt;&lt;code&gt;EXDEV&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;E2BIG&lt;/code&gt;&lt;code&gt;EACCES&lt;/code&gt;&lt;code&gt;EADDRINUSE&lt;/code&gt;&lt;code&gt;EADDRNOTAVAIL&lt;/code&gt;&lt;code&gt;EAFNOSUPPORT&lt;/code&gt;&lt;code&gt;EAGAIN&lt;/code&gt;&lt;code&gt;EALREADY&lt;/code&gt;&lt;code&gt;EBADF&lt;/code&gt;&lt;code&gt;EBADMSG&lt;/code&gt;&lt;code&gt;EBUSY&lt;/code&gt;&lt;code&gt;ECANCELED&lt;/code&gt;&lt;code&gt;ECHILD&lt;/code&gt;&lt;code&gt;ECONNABORTED&lt;/code&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;&lt;code&gt;ECONNRESET&lt;/code&gt;&lt;code&gt;EDEADLK&lt;/code&gt;&lt;code&gt;EDESTADDRREQ&lt;/code&gt;&lt;code&gt;EDOM&lt;/code&gt;&lt;code&gt;EDQUOT&lt;/code&gt;&lt;code&gt;EEXIST&lt;/code&gt;&lt;code&gt;EFAULT&lt;/code&gt;&lt;code&gt;EFBIG&lt;/code&gt;&lt;code&gt;EHOSTDOWN&lt;/code&gt;&lt;code&gt;EHOSTUNREACH&lt;/code&gt;&lt;code&gt;EIDRM&lt;/code&gt;&lt;code&gt;EILSEQ&lt;/code&gt;&lt;code&gt;EINPROGRESS&lt;/code&gt;&lt;code&gt;EINTR&lt;/code&gt;&lt;code&gt;EINVAL&lt;/code&gt;&lt;code&gt;EIO&lt;/code&gt;&lt;code&gt;EISCONN&lt;/code&gt;&lt;code&gt;EISDIR&lt;/code&gt;&lt;code&gt;ELOOP&lt;/code&gt;&lt;code&gt;EMFILE&lt;/code&gt;&lt;code&gt;EMLINK&lt;/code&gt;&lt;code&gt;EMSGSIZE&lt;/code&gt;&lt;code&gt;ENAMETOOLONG&lt;/code&gt;&lt;code&gt;ENETDOWN&lt;/code&gt;&lt;code&gt;ENETRESET&lt;/code&gt;&lt;code&gt;ENETUNREACH&lt;/code&gt;&lt;code&gt;ENFILE&lt;/code&gt;&lt;code&gt;ENOBUFS&lt;/code&gt;&lt;code&gt;ENODATA&lt;/code&gt;&lt;code&gt;ENODEV&lt;/code&gt;&lt;code&gt;ENOENT&lt;/code&gt;&lt;code&gt;ENOEXEC&lt;/code&gt;&lt;code&gt;ENOLCK&lt;/code&gt;&lt;code&gt;ENOLINK&lt;/code&gt;&lt;code&gt;ENOMEM&lt;/code&gt;&lt;code&gt;ENOMSG&lt;/code&gt;&lt;code&gt;ENOPROTOOPT&lt;/code&gt;&lt;code&gt;ENOSPC&lt;/code&gt;&lt;code&gt;ENOSR&lt;/code&gt;&lt;code&gt;ENOSTR&lt;/code&gt;&lt;code&gt;ENOSYS&lt;/code&gt;&lt;code&gt;ENOTBLK&lt;/code&gt;&lt;code&gt;ENOTCONN&lt;/code&gt;&lt;code&gt;ENOTDIR&lt;/code&gt;&lt;code&gt;ENOTEMPTY&lt;/code&gt;&lt;code&gt;ENOTRECOVERABLE&lt;/code&gt;&lt;code&gt;ENOTSOCK&lt;/code&gt;&lt;code&gt;ENOTSUP&lt;/code&gt;&lt;code&gt;ENOTTY&lt;/code&gt;&lt;code&gt;ENXIO&lt;/code&gt;&lt;code&gt;EOPNOTSUPP&lt;/code&gt;&lt;code&gt;EOTHER&lt;/code&gt;&lt;code&gt;EOVERFLOW&lt;/code&gt;&lt;code&gt;EOWNERDEAD&lt;/code&gt;&lt;code&gt;EPERM&lt;/code&gt;&lt;code&gt;EPFNOSUPPORT&lt;/code&gt;&lt;code&gt;EPIPE&lt;/code&gt;&lt;code&gt;EPROCLIM&lt;/code&gt;&lt;code&gt;EPROTO&lt;/code&gt;&lt;code&gt;EPROTONOSUPPORT&lt;/code&gt;&lt;code&gt;EPROTOTYPE&lt;/code&gt;&lt;code&gt;ERANGE&lt;/code&gt;&lt;code&gt;EREMOTE&lt;/code&gt;&lt;code&gt;ERESTART&lt;/code&gt;&lt;code&gt;EROFS&lt;/code&gt;&lt;code&gt;ESHUTDOWN&lt;/code&gt;&lt;code&gt;ESOCKTNOSUPPORT&lt;/code&gt;&lt;code&gt;ESPIPE&lt;/code&gt;&lt;code&gt;ESRCH&lt;/code&gt;&lt;code&gt;ESTALE&lt;/code&gt;&lt;code&gt;ETIME&lt;/code&gt;&lt;code&gt;ETIMEDOUT&lt;/code&gt;&lt;code&gt;ETOOMANYREFS&lt;/code&gt;&lt;code&gt;ETXTBSY&lt;/code&gt;&lt;code&gt;EUSERS&lt;/code&gt;&lt;code&gt;EWOULDBLOCK&lt;/code&gt;&lt;code&gt;EXDEV&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="066e414ca2cf611148c4eaa3ea046c8780dfdec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ECHO&lt;/code&gt;&lt;code&gt;ECHOE&lt;/code&gt;&lt;code&gt;ECHOK&lt;/code&gt;&lt;code&gt;ECHONL&lt;/code&gt;&lt;code&gt;ICANON&lt;/code&gt;&lt;code&gt;IEXTEN&lt;/code&gt;&lt;code&gt;ISIG&lt;/code&gt;&lt;code&gt;NOFLSH&lt;/code&gt;&lt;code&gt;TOSTOP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ECHO&lt;/code&gt;&lt;code&gt;ECHOE&lt;/code&gt;&lt;code&gt;ECHOK&lt;/code&gt;&lt;code&gt;ECHONL&lt;/code&gt;&lt;code&gt;ICANON&lt;/code&gt;&lt;code&gt;IEXTEN&lt;/code&gt;&lt;code&gt;ISIG&lt;/code&gt;&lt;code&gt;NOFLSH&lt;/code&gt;&lt;code&gt;TOSTOP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe83a5d58b657664921e554e17730ddbd2574a33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENTER&lt;/code&gt; and &lt;code&gt;LEAVE&lt;/code&gt; localise a block of code - they make sure that all variables are tidied up, everything that has been localised gets its previous value returned, and so on. Think of them as the &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; of a Perl block.</source>
          <target state="translated">&lt;code&gt;ENTER&lt;/code&gt; y &lt;code&gt;LEAVE&lt;/code&gt; localizan un bloque de c&amp;oacute;digo: se aseguran de que todas las variables est&amp;eacute;n ordenadas, que todo lo que se ha localizado recupere su valor anterior, y as&amp;iacute; sucesivamente. Piense en ellos como el &lt;code&gt;{&lt;/code&gt; y &lt;code&gt;}&lt;/code&gt; de un bloque Perl.</target>
        </trans-unit>
        <trans-unit id="61a8af2f6135bd8dc2ab3b9aec3837519c83b6b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXIT_FAILURE&lt;/code&gt;&lt;code&gt;EXIT_SUCCESS&lt;/code&gt;&lt;code&gt;MB_CUR_MAX&lt;/code&gt;&lt;code&gt;RAND_MAX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;EXIT_FAILURE&lt;/code&gt;&lt;code&gt;EXIT_SUCCESS&lt;/code&gt;&lt;code&gt;MB_CUR_MAX&lt;/code&gt;&lt;code&gt;RAND_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="605c0049ae6513fbc634a4505a4d59b4c8b6360e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Errno&lt;/code&gt; also makes &lt;code&gt;%!&lt;/code&gt; magic such that each element of &lt;code&gt;%!&lt;/code&gt; has a non-zero value only if &lt;code&gt;$!&lt;/code&gt; is set to that value. For example:</source>
          <target state="translated">&lt;code&gt;Errno&lt;/code&gt; tambi&amp;eacute;n hace &lt;code&gt;%!&lt;/code&gt; magia tal que cada elemento de &lt;code&gt;%!&lt;/code&gt; tiene un valor distinto de cero solo si &lt;code&gt;$!&lt;/code&gt; se establece en ese valor. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9f66f3a7d83693483595daca9c40447e7345b192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Errno&lt;/code&gt; defines and conditionally exports all the error constants defined in your system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8723a06751f4affdad686aeca30d6d66626d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Errno&lt;/code&gt; defines and conditionally exports all the error constants defined in your system &lt;code&gt;errno.h&lt;/code&gt; include file. It has a single export tag, &lt;code&gt;:POSIX&lt;/code&gt; , which will export all POSIX defined error numbers.</source>
          <target state="translated">&lt;code&gt;Errno&lt;/code&gt; define y exporta condicionalmente todas las constantes de error definidas en el archivo de inclusi&amp;oacute;n &lt;code&gt;errno.h&lt;/code&gt; de su sistema . Tiene una sola etiqueta de exportaci&amp;oacute;n &lt;code&gt;:POSIX&lt;/code&gt; , que exportar&amp;aacute; todos los n&amp;uacute;meros de error definidos por POSIX.</target>
        </trans-unit>
        <trans-unit id="5f1cc0e4d1cb179935b0274da71cd837a55e146a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Exporter&lt;/code&gt; is definitely not the only module with symbol exporter capabilities. At CPAN, you may find a bunch of them. Some are lighter. Some provide improved APIs and features. Pick the one that fits your needs. The following is a sample list of such modules.</source>
          <target state="translated">&lt;code&gt;Exporter&lt;/code&gt; definitivamente no es el &amp;uacute;nico m&amp;oacute;dulo con capacidades de exportaci&amp;oacute;n de s&amp;iacute;mbolos. En CPAN, puede encontrar muchos de ellos. Algunos son m&amp;aacute;s ligeros. Algunos proporcionan API y funciones mejoradas. Elija el que se adapte a sus necesidades. La siguiente es una lista de muestra de dichos m&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="ad37da909ccfa2e26ad205000545574039f2e3e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::Embed&lt;/code&gt; exports the following functions:</source>
          <target state="translated">&lt;code&gt;ExtUtils::Embed&lt;/code&gt; exporta las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="095ec01183ac1e1d6ca1341429cec2f459043f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::Embed&lt;/code&gt; provides utility functions for embedding a Perl interpreter and extensions in your C/C++ applications. Typically, an application</source>
          <target state="translated">&lt;code&gt;ExtUtils::Embed&lt;/code&gt; proporciona funciones de utilidad para incrustar un int&amp;eacute;rprete de Perl y extensiones en sus aplicaciones C / C ++. Normalmente, una aplicaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="64d2ca71037114349d1ec282c3de1a1216361065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; produces files used by the linker under some OSs during the creation of shared libraries for dynamic extensions. It is normally called from a MakeMaker-generated Makefile when the extension is built. The linker option file is generated by calling the function &lt;code&gt;Mksymlists&lt;/code&gt; , which is exported by default from &lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; . It takes one argument, a list of key-value pairs, in which the following keys are recognized:</source>
          <target state="translated">&lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; produce archivos utilizados por el enlazador en algunos sistemas operativos durante la creaci&amp;oacute;n de bibliotecas compartidas para extensiones din&amp;aacute;micas. Normalmente se llama desde un Makefile generado por MakeMaker cuando se crea la extensi&amp;oacute;n. El archivo de opciones del vinculador se genera llamando a la funci&amp;oacute;n &lt;code&gt;Mksymlists&lt;/code&gt; , que se exporta por defecto desde &lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; . Se necesita un argumento, una lista de pares clave-valor, en la que se reconocen las siguientes claves:</target>
        </trans-unit>
        <trans-unit id="34f1b46a9aab40395bc58b1fdc00825b78aede02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt; produces files used by the linker under some OSs during the creation of shared libraries for dynamic extensions. It is normally called from a MakeMaker-generated Makefile when the extension is built. The linker option file is generated by calling the function &lt;code&gt;Mksymlists&lt;/code&gt;, which is exported by default from &lt;code&gt;ExtUtils::Mksymlists&lt;/code&gt;. It takes one argument, a list of key-value pairs, in which the following keys are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb003f490e341e53319aa009e2735722b16763d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; will compile XS code into C code by embedding the constructs necessary to let C functions manipulate Perl values and creates the glue necessary to let Perl access those functions. The compiler uses typemaps to determine how to map C function parameters and variables to Perl values.</source>
          <target state="translated">&lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; compilar&amp;aacute; c&amp;oacute;digo XS en c&amp;oacute;digo C incrustando las construcciones necesarias para permitir que las funciones de C manipulen los valores de Perl y crea el pegamento necesario para permitir que Perl acceda a esas funciones. El compilador usa mapas de tipos para determinar c&amp;oacute;mo asignar par&amp;aacute;metros y variables de funci&amp;oacute;n de C a valores de Perl.</target>
        </trans-unit>
        <trans-unit id="6b1ab84940941a18454cfe9c14a38736463beb76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;filename&amp;gt;&lt;/code&gt; -- style for filenames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d695a3bd8c53466ce21bdcb25776a30dd807a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;filename&amp;gt;&lt;/code&gt; -- used for filenames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2053c192b87e9cd9de753eaf699903f70648eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; packs an &lt;code&gt;NV&lt;/code&gt; , which is the floating point type used by Perl internally.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; incluye un &lt;code&gt;NV&lt;/code&gt; , que es el tipo de punto flotante que Perl utiliza internamente.</target>
        </trans-unit>
        <trans-unit id="da93f76265c0a4149d0245d9d7b2a4a882813ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; packs an &lt;code&gt;NV&lt;/code&gt;, which is the floating point type used by Perl internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ff85342a730577020c88364b60274499bd7643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FAULT&lt;/code&gt; means that you never expect to call the function in scalar (or list) context, and that if &lt;code&gt;Memoize&lt;/code&gt; detects such a call, it should abort the program. The error message is one of</source>
          <target state="translated">&lt;code&gt;FAULT&lt;/code&gt; significa que nunca esperar&amp;aacute; llamar a la funci&amp;oacute;n en un contexto escalar (o de lista), y que si &lt;code&gt;Memoize&lt;/code&gt; detecta tal llamada, deber&amp;iacute;a abortar el programa. El mensaje de error es uno de</target>
        </trans-unit>
        <trans-unit id="593b33d10d7aff28fb80e58f50c81f1f8eb33924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FD_CLOEXEC&lt;/code&gt;&lt;code&gt;F_DUPFD&lt;/code&gt;&lt;code&gt;F_GETFD&lt;/code&gt;&lt;code&gt;F_GETFL&lt;/code&gt;&lt;code&gt;F_GETLK&lt;/code&gt;&lt;code&gt;F_OK&lt;/code&gt;&lt;code&gt;F_RDLCK&lt;/code&gt;&lt;code&gt;F_SETFD&lt;/code&gt;&lt;code&gt;F_SETFL&lt;/code&gt;&lt;code&gt;F_SETLK&lt;/code&gt;&lt;code&gt;F_SETLKW&lt;/code&gt;&lt;code&gt;F_UNLCK&lt;/code&gt;&lt;code&gt;F_WRLCK&lt;/code&gt;&lt;code&gt;O_ACCMODE&lt;/code&gt;&lt;code&gt;O_APPEND&lt;/code&gt;&lt;code&gt;O_CREAT&lt;/code&gt;&lt;code&gt;O_EXCL&lt;/code&gt;&lt;code&gt;O_NOCTTY&lt;/code&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;code&gt;O_RDONLY&lt;/code&gt;&lt;code&gt;O_RDWR&lt;/code&gt;&lt;code&gt;O_TRUNC&lt;/code&gt;&lt;code&gt;O_WRONLY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FD_CLOEXEC&lt;/code&gt;&lt;code&gt;F_DUPFD&lt;/code&gt;&lt;code&gt;F_GETFD&lt;/code&gt;&lt;code&gt;F_GETFL&lt;/code&gt;&lt;code&gt;F_GETLK&lt;/code&gt;&lt;code&gt;F_OK&lt;/code&gt;&lt;code&gt;F_RDLCK&lt;/code&gt;&lt;code&gt;F_SETFD&lt;/code&gt;&lt;code&gt;F_SETFL&lt;/code&gt;&lt;code&gt;F_SETLK&lt;/code&gt;&lt;code&gt;F_SETLKW&lt;/code&gt;&lt;code&gt;F_UNLCK&lt;/code&gt;&lt;code&gt;F_WRLCK&lt;/code&gt;&lt;code&gt;O_ACCMODE&lt;/code&gt;&lt;code&gt;O_APPEND&lt;/code&gt;&lt;code&gt;O_CREAT&lt;/code&gt;&lt;code&gt;O_EXCL&lt;/code&gt;&lt;code&gt;O_NOCTTY&lt;/code&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt;&lt;code&gt;O_RDONLY&lt;/code&gt;&lt;code&gt;O_RDWR&lt;/code&gt;&lt;code&gt;O_TRUNC&lt;/code&gt;&lt;code&gt;O_WRONLY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a95b90939671fa2f4ef6a0875777e47ba033a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FE_DOWNWARD&lt;/code&gt;&lt;code&gt;FE_TONEAREST&lt;/code&gt;&lt;code&gt;FE_TOWARDZERO&lt;/code&gt;&lt;code&gt;FE_UPWARD&lt;/code&gt; on systems that support them.</source>
          <target state="translated">&lt;code&gt;FE_DOWNWARD&lt;/code&gt; &lt;code&gt;FE_TONEAREST&lt;/code&gt; &lt;code&gt;FE_TOWARDZERO&lt;/code&gt; &lt;code&gt;FE_UPWARD&lt;/code&gt; en sistemas que los admitan.</target>
        </trans-unit>
        <trans-unit id="78cf25b89726621d2c00a165f57d8361f6ec15f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FE_TONEAREST&lt;/code&gt; is like &lt;a href=&quot;#round&quot;&gt;&quot;round&quot;&lt;/a&gt;, &lt;code&gt;FE_TOWARDZERO&lt;/code&gt; is like &lt;a href=&quot;#trunc&quot;&gt;&quot;trunc&quot;&lt;/a&gt; [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586830fc1c312d09452cbf05bb392121d4a4d3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FE_TONEAREST&lt;/code&gt; is like &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;, &lt;code&gt;FE_TOWARDZERO&lt;/code&gt; is like &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt; [C99].</source>
          <target state="translated">&lt;code&gt;FE_TONEAREST&lt;/code&gt; es como &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt; , &lt;code&gt;FE_TOWARDZERO&lt;/code&gt; es como &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt; [C99].</target>
        </trans-unit>
        <trans-unit id="c79284936684717b45799224f65c1741c4f9ad4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE&lt;/code&gt; . It will generate one on each call and push a new stdio layer. So don't call it repeatedly on the same file. &lt;code&gt;PerlIO_findFILE()&lt;/code&gt; will retrieve the stdio layer once it has been generated by &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;FILE&lt;/code&gt; . Generar&amp;aacute; uno en cada llamada y empujar&amp;aacute; una nueva capa stdio. As&amp;iacute; que no lo llames repetidamente en el mismo archivo. &lt;code&gt;PerlIO_findFILE()&lt;/code&gt; recuperar&amp;aacute; la capa stdio una vez que haya sido generada por &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbcaef3f3af154b37b896e3dc592f8a50d5830e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE&lt;/code&gt; is a Perl file handle [in any of the supported forms, a bareword, a string, a typeglob, or a reference to a typeglob] that will be opened. If &lt;code&gt;FILE&lt;/code&gt; is already open, it will automatically be closed before it is reopened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ea1a32c9d7b93130f1bf1f0fb74c5cfb171ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE&lt;/code&gt;. It will generate one on each call and push a new stdio layer. So don't call it repeatedly on the same file. &lt;code&gt;PerlIO_findFILE()&lt;/code&gt; will retrieve the stdio layer once it has been generated by &lt;code&gt;PerlIO_exportFILE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a48df125b434d844372c25a7cae987e2df5288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ONLY&lt;/code&gt; takes a sequence of specifiers that install separate (and possibly multiple) filters that act on only parts of the source code. For example:</source>
          <target state="translated">&lt;code&gt;FILTER_ONLY&lt;/code&gt; toma una secuencia de especificadores que instalan filtros separados (y posiblemente m&amp;uacute;ltiples) que act&amp;uacute;an solo en partes del c&amp;oacute;digo fuente. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d138ad5224141350319092d75597c48fba6ef1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FP_ILOGB0&lt;/code&gt;&lt;code&gt;FP_ILOGBNAN&lt;/code&gt;&lt;code&gt;FP_INFINITE&lt;/code&gt;&lt;code&gt;FP_NAN&lt;/code&gt;&lt;code&gt;FP_NORMAL&lt;/code&gt;&lt;code&gt;FP_SUBNORMAL&lt;/code&gt;&lt;code&gt;FP_ZERO&lt;/code&gt;&lt;code&gt;INFINITY&lt;/code&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;code&gt;Inf&lt;/code&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;code&gt;M_1_PI&lt;/code&gt;&lt;code&gt;M_2_PI&lt;/code&gt;&lt;code&gt;M_2_SQRTPI&lt;/code&gt;&lt;code&gt;M_E&lt;/code&gt;&lt;code&gt;M_LN10&lt;/code&gt;&lt;code&gt;M_LN2&lt;/code&gt;&lt;code&gt;M_LOG10E&lt;/code&gt;&lt;code&gt;M_LOG2E&lt;/code&gt;&lt;code&gt;M_PI&lt;/code&gt;&lt;code&gt;M_PI_2&lt;/code&gt;&lt;code&gt;M_PI_4&lt;/code&gt;&lt;code&gt;M_SQRT1_2&lt;/code&gt;&lt;code&gt;M_SQRT2&lt;/code&gt; on systems with C99 support.</source>
          <target state="translated">&lt;code&gt;FP_ILOGB0&lt;/code&gt; &lt;code&gt;FP_ILOGBNAN&lt;/code&gt; &lt;code&gt;FP_INFINITE&lt;/code&gt; &lt;code&gt;FP_NAN&lt;/code&gt; &lt;code&gt;FP_NORMAL&lt;/code&gt; &lt;code&gt;FP_SUBNORMAL&lt;/code&gt; &lt;code&gt;FP_ZERO&lt;/code&gt; &lt;code&gt;INFINITY&lt;/code&gt; &lt;code&gt;NAN&lt;/code&gt; &lt;code&gt;Inf&lt;/code&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;code&gt;M_1_PI&lt;/code&gt; &lt;code&gt;M_2_PI&lt;/code&gt; &lt;code&gt;M_2_SQRTPI&lt;/code&gt; &lt;code&gt;M_E&lt;/code&gt; &lt;code&gt;M_LN10&lt;/code&gt; &lt;code&gt;M_LN2&lt;/code&gt; &lt;code&gt;M_LOG10E&lt;/code&gt; &lt;code&gt;M_LOG2E&lt;/code&gt; &lt;code&gt;M_PI&lt;/code&gt; _PI_PI1_2 &lt;code&gt;M_PI_2&lt;/code&gt; &lt;code&gt;M_PI_4&lt;/code&gt; &lt;code&gt;M_SQRT1_2&lt;/code&gt; &lt;code&gt;M_SQRT2&lt;/code&gt; en sistemas M_PI_PI_2 M_S .</target>
        </trans-unit>
        <trans-unit id="5914c8ad1ae38c828bbfd3aecb0f6eeb99e7051a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fatal&lt;/code&gt; clobbers the context in which a function is called and always makes it a scalar context, except when the &lt;code&gt;:void&lt;/code&gt; tag is used. This problem does not exist in &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Fatal&lt;/code&gt; golpea el contexto en el que se llama a una funci&amp;oacute;n y siempre lo convierte en un contexto escalar, excepto cuando se usa la etiqueta &lt;code&gt;:void&lt;/code&gt; . Este problema no existe en &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="740df548a189ece2edf4fd0c968a33bedfb05cdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fatal&lt;/code&gt; provides a way to conveniently replace functions which normally return a false value when they fail with equivalents which raise exceptions if they are not successful. This lets you use these functions without having to test their return values explicitly on each call. Exceptions can be caught using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; and &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Fatal&lt;/code&gt; proporciona una forma de reemplazar convenientemente funciones que normalmente devuelven un valor falso cuando fallan con equivalentes que generan excepciones si no tienen &amp;eacute;xito. Esto le permite usar estas funciones sin tener que probar sus valores de retorno expl&amp;iacute;citamente en cada llamada. Las excepciones se pueden detectar usando &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; . Consulte &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; y &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="ee9af9aec29f36e84953777a6d4ae83a8bda1aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fatal&lt;/code&gt; provides a way to conveniently replace functions which normally return a false value when they fail with equivalents which raise exceptions if they are not successful. This lets you use these functions without having to test their return values explicitly on each call. Exceptions can be caught using &lt;code&gt;eval{}&lt;/code&gt;. See &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; and &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe02d4dec8f5e2d41d5b0a897ead226d9f00196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FdGetOsFHandle&lt;/code&gt; simply calls &lt;code&gt;_get_osfhandle()&lt;/code&gt;. It was renamed to better fit in with the rest the function names of this module, in particular to distinguish it from &lt;code&gt;GetOsFHandle&lt;/code&gt;. It takes an integer file descriptor [as from Perl's &lt;code&gt;fileno&lt;/code&gt;] and returns the Win32 native file handle associated with that file descriptor or &lt;code&gt;INVALID_HANDLE_VALUE&lt;/code&gt; if &lt;code&gt;$ivFd&lt;/code&gt; is not an open file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c009d428e974071ae1eba2560f4e3bf7b63b8111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Fetch&lt;/code&gt; currently only supports proxies with LWP::UserAgent. You will need to set your environment variables accordingly. For example, to use an ftp proxy:</source>
          <target state="translated">&lt;code&gt;File::Fetch&lt;/code&gt; actualmente solo admite proxies con LWP :: UserAgent. Deber&amp;aacute; configurar sus variables de entorno en consecuencia. Por ejemplo, para usar un proxy ftp:</target>
        </trans-unit>
        <trans-unit id="512e6b725fa0815ed1040c15e359675815185001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Fetch&lt;/code&gt; is relatively smart about things. When trying to write a file to disk, it removes the &lt;code&gt;query parameters&lt;/code&gt; (see the &lt;code&gt;output_file&lt;/code&gt; method for details) from the file name before creating it. In most cases this suffices.</source>
          <target state="translated">&lt;code&gt;File::Fetch&lt;/code&gt; es relativamente inteligente sobre las cosas. Al intentar escribir un archivo en el disco, se eliminan los &lt;code&gt;query parameters&lt;/code&gt; (consulte el m&amp;eacute;todo &lt;code&gt;output_file&lt;/code&gt; para obtener m&amp;aacute;s detalles) del nombre del archivo antes de crearlo. En la mayor&amp;iacute;a de los casos, esto es suficiente.</target>
        </trans-unit>
        <trans-unit id="a6d0099b072faa9f1ab084d296e2eecf3cc3989c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Glob::glob()&lt;/code&gt; was deprecated in Perl 5.8. A deprecation message was issued from Perl 5.26 onwards, and the function has now disappeared in Perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0341d9f9f6835e25226ea180cb47b2de6f57b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Glob::glob()&lt;/code&gt; was deprecated in Perl 5.8. A deprecation message was issued from Perl 5.26 onwards, and the function will disappear in Perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70344aeb09f226cb3286ecd7eeb0f950800e137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Glob::glob()&lt;/code&gt; was deprecated in perl 5.8.0. A deprecation message was issued from perl 5.26.0 onwards, and the function will disappear in perl 5.30.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864da3a7d4380894f7ec490c50f8b0bf0b583454" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Glob::glob()&lt;/code&gt; was removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7883deb3070408ba6c06af81eb456342714582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Glob::glob()&lt;/code&gt; will disappear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04cfaee6fdab5ef355bac5b940829e1c2a66b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Glob&lt;/code&gt; has a function called &lt;code&gt;glob&lt;/code&gt;, which just calls &lt;code&gt;bsd_glob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aaa840fde61f894eb1ca28a8554598b61672c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Glob&lt;/code&gt; has a function called &lt;code&gt;glob&lt;/code&gt;, which just calls &lt;code&gt;bsd_glob&lt;/code&gt;. However, its prototype is different from the prototype of &lt;code&gt;CORE::glob&lt;/code&gt;, and hence, &lt;code&gt;File::Glob::glob&lt;/code&gt; should not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4909eac8bb27d566be5a1e97826bcb6d6ddbfad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::GlobMapper&lt;/code&gt; has been kept simple deliberately, so it isn't intended to solve all filename mapping operations. Under the hood &lt;code&gt;File::Glob&lt;/code&gt; (or for older versions of Perl, &lt;code&gt;File::BSDGlob&lt;/code&gt; ) is used to match the files, so you will never have the flexibility of full Perl regular expression.</source>
          <target state="translated">&lt;code&gt;File::GlobMapper&lt;/code&gt; se ha mantenido simple deliberadamente, por lo que no est&amp;aacute; destinado a resolver todas las operaciones de asignaci&amp;oacute;n de nombres de archivos. Bajo el cap&amp;oacute; &lt;code&gt;File::Glob&lt;/code&gt; (o para versiones anteriores de Perl, &lt;code&gt;File::BSDGlob&lt;/code&gt; ) se utiliza para que coincida con los archivos, por lo que nunca tendr&amp;aacute; la flexibilidad de la plena expresi&amp;oacute;n regular Perl.</target>
        </trans-unit>
        <trans-unit id="2ab300bfaa882a15e12605fa06308ba581bfd413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::GlobMapper&lt;/code&gt; has been kept simple deliberately, so it isn't intended to solve all filename mapping operations. Under the hood &lt;code&gt;File::Glob&lt;/code&gt; (or for older versions of Perl, &lt;code&gt;File::BSDGlob&lt;/code&gt;) is used to match the files, so you will never have the flexibility of full Perl regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96810d8a56c73c1a6b5cbdf2dd4d391587af778" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Path&lt;/code&gt; blindly exports &lt;code&gt;mkpath&lt;/code&gt; and &lt;code&gt;rmtree&lt;/code&gt; into the current namespace. These days, this is considered bad style, but to change it now would break too much code. Nonetheless, you are invited to specify what it is you are expecting to use:</source>
          <target state="translated">&lt;code&gt;File::Path&lt;/code&gt; exporta ciegamente &lt;code&gt;mkpath&lt;/code&gt; y &lt;code&gt;rmtree&lt;/code&gt; al espacio de nombres actual. En estos d&amp;iacute;as, esto se considera un mal estilo, pero cambiarlo ahora romper&amp;iacute;a demasiado c&amp;oacute;digo. No obstante, se le invita a especificar qu&amp;eacute; es lo que espera utilizar:</target>
        </trans-unit>
        <trans-unit id="8f095bddf521d070185d41c8d087a14cb54a167a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Spec&lt;/code&gt; is available in the standard distribution as of version 5.004_05. &lt;code&gt;File::Spec::Functions&lt;/code&gt; is only in &lt;code&gt;File::Spec&lt;/code&gt; 0.7 and later, and some versions of Perl come with version 0.6. If &lt;code&gt;File::Spec&lt;/code&gt; is not updated to 0.7 or later, you must use the object-oriented interface from &lt;code&gt;File::Spec&lt;/code&gt; (or upgrade &lt;code&gt;File::Spec&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;File::Spec&lt;/code&gt; est&amp;aacute; disponible en la distribuci&amp;oacute;n est&amp;aacute;ndar a partir de la versi&amp;oacute;n 5.004_05. &lt;code&gt;File::Spec::Functions&lt;/code&gt; est&amp;aacute; solo en &lt;code&gt;File::Spec&lt;/code&gt; 0.7 y posteriores, y algunas versiones de Perl vienen con la versi&amp;oacute;n 0.6. Si &lt;code&gt;File::Spec&lt;/code&gt; no se actualiza a 0.7 o posterior, debe usar la interfaz orientada a objetos de &lt;code&gt;File::Spec&lt;/code&gt; (o actualizar &lt;code&gt;File::Spec&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="12cef216bb5c87c8ac2becb4baf424b0884bc7fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File::Temp&lt;/code&gt; can be used to create and open temporary files in a safe way. There is both a function interface and an object-oriented interface. The File::Temp constructor or the tempfile() function can be used to return the name and the open filehandle of a temporary file. The tempdir() function can be used to create a temporary directory.</source>
          <target state="translated">&lt;code&gt;File::Temp&lt;/code&gt; se puede utilizar para crear y abrir archivos temporales de forma segura. Hay una interfaz de funci&amp;oacute;n y una interfaz orientada a objetos. El constructor File :: Temp o la funci&amp;oacute;n tempfile () se pueden usar para devolver el nombre y el identificador de archivo abierto de un archivo temporal. La funci&amp;oacute;n tempdir () se puede utilizar para crear un directorio temporal.</target>
        </trans-unit>
        <trans-unit id="b8558d37d33da0f50296d5712fa3cb21fddb903f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; is a &lt;b&gt;superclass&lt;/b&gt; of &lt;code&gt;File::MP3&lt;/code&gt; , and &lt;code&gt;File::MP3&lt;/code&gt; is a &lt;b&gt;subclass&lt;/b&gt; of &lt;code&gt;File&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; es una &lt;b&gt;superclase&lt;/b&gt; de &lt;code&gt;File::MP3&lt;/code&gt; y &lt;code&gt;File::MP3&lt;/code&gt; es una &lt;b&gt;subclase&lt;/b&gt; de &lt;code&gt;File&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="734bd09f4774692ef5a96c74aa8ec72e340f9c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; is a &lt;b&gt;superclass&lt;/b&gt; of &lt;code&gt;File::MP3&lt;/code&gt;, and &lt;code&gt;File::MP3&lt;/code&gt; is a &lt;b&gt;subclass&lt;/b&gt; of &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6762671e9c43ce6002652e67bfefcf6a5cd02a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::fdopen&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; except that its first parameter is not a filename but rather a file handle name, a FileHandle object, or a file descriptor number.</source>
          <target state="translated">&lt;code&gt;FileHandle::fdopen&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; , excepto que su primer par&amp;aacute;metro no es un nombre de archivo, sino un nombre de identificador de archivo, un objeto FileHandle o un n&amp;uacute;mero de descriptor de archivo.</target>
        </trans-unit>
        <trans-unit id="551228e60d2f6e525b43ec737ab4dc43edb2d757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::fdopen&lt;/code&gt; is like &lt;code&gt;open&lt;/code&gt; except that its first parameter is not a filename but rather a file handle name, a FileHandle object, or a file descriptor number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf43c6bdb788ed60b52a38acf298d9b6cfa527d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::new&lt;/code&gt; creates a &lt;code&gt;FileHandle&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). If it receives any parameters, they are passed to &lt;code&gt;FileHandle::open&lt;/code&gt; ; if the open fails, the &lt;code&gt;FileHandle&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;FileHandle::new&lt;/code&gt; crea un &lt;code&gt;FileHandle&lt;/code&gt; , que es una referencia a un s&amp;iacute;mbolo reci&amp;eacute;n creado (consulte el paquete de &lt;code&gt;Symbol&lt;/code&gt; ). Si recibe alg&amp;uacute;n par&amp;aacute;metro, se pasa a &lt;code&gt;FileHandle::open&lt;/code&gt; ; si la apertura falla, el objeto &lt;code&gt;FileHandle&lt;/code&gt; se destruye. De lo contrario, se devuelve a la persona que llama.</target>
        </trans-unit>
        <trans-unit id="7b5c4c65f39682b293e57812e54b57431bc31343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::new&lt;/code&gt; creates a &lt;code&gt;FileHandle&lt;/code&gt;, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). If it receives any parameters, they are passed to &lt;code&gt;FileHandle::open&lt;/code&gt;; if the open fails, the &lt;code&gt;FileHandle&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159fd7914013643c7a2e528eb234604b29dc9ae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::new_from_fd&lt;/code&gt; creates a &lt;code&gt;FileHandle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to &lt;code&gt;FileHandle::fdopen&lt;/code&gt; ; if the fdopen fails, the &lt;code&gt;FileHandle&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;FileHandle::new_from_fd&lt;/code&gt; crea un &lt;code&gt;FileHandle&lt;/code&gt; como lo hace &lt;code&gt;new&lt;/code&gt; . Requiere dos par&amp;aacute;metros, que se pasan a &lt;code&gt;FileHandle::fdopen&lt;/code&gt; ; si falla el fdopen, el objeto &lt;code&gt;FileHandle&lt;/code&gt; se destruye. De lo contrario, se devuelve a la persona que llama.</target>
        </trans-unit>
        <trans-unit id="1816a8929a19bd245732a56e3215b39bd3528bff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::new_from_fd&lt;/code&gt; creates a &lt;code&gt;FileHandle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to &lt;code&gt;FileHandle::fdopen&lt;/code&gt;; if the fdopen fails, the &lt;code&gt;FileHandle&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df48f6115c1c0a13e4731820d5124ecd1a9681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::open&lt;/code&gt; accepts one parameter or two. With one parameter, it is just a front end for the built-in &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; function. With two parameters, the first parameter is a filename that may include whitespace or other special characters, and the second parameter is the open mode, optionally followed by a file permission value.</source>
          <target state="translated">&lt;code&gt;FileHandle::open&lt;/code&gt; acepta uno o dos par&amp;aacute;metros. Con un par&amp;aacute;metro, es solo una interfaz para la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; incorporada. Con dos par&amp;aacute;metros, el primer par&amp;aacute;metro es un nombre de archivo que puede incluir espacios en blanco u otros caracteres especiales, y el segundo par&amp;aacute;metro es el modo abierto, seguido opcionalmente por un valor de permiso de archivo.</target>
        </trans-unit>
        <trans-unit id="66138afc0a9497591e37682b7102baf49f660809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileHandle::open&lt;/code&gt; accepts one parameter or two. With one parameter, it is just a front end for the built-in &lt;code&gt;open&lt;/code&gt; function. With two parameters, the first parameter is a filename that may include whitespace or other special characters, and the second parameter is the open mode, optionally followed by a file permission value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e59575ed9da2a67f65de836e250363d39947a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GB2312&lt;/code&gt; has been registered in the &lt;code&gt;EUC-CN&lt;/code&gt; meaning at IANA. This has partially repaired the situation: Microsoft's &lt;code&gt;GB2312&lt;/code&gt; has become a superset of the official &lt;code&gt;GB2312&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ab0909c9fbea7ec2a8c04b89c705142429eac8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GB2312&lt;/code&gt; is the IANA name for &lt;code&gt;EUC-CN&lt;/code&gt;. See &lt;a href=&quot;#Microsoft-related-naming-mess&quot;&gt;&quot;Microsoft-related naming mess&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdb76d93c588773fe7c911d1c166db130249be2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GB_2312-80&lt;/code&gt; encoding is available as &lt;code&gt;gb2312-raw&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4661ead2cc9c85eb1e64a45ad1f9a60d27b3d717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GV_SUPER&lt;/code&gt; indicates that we want to look up the method in the superclasses of the &lt;code&gt;stash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c84e89afe3961306a15f3cf682c3985e27fc10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetFileContents&lt;/code&gt; behaves like &lt;code&gt;WriteFile&lt;/code&gt; above, but returns the contents of the would-be file rather than writing it out.</source>
          <target state="translated">&lt;code&gt;GetFileContents&lt;/code&gt; se comporta como &lt;code&gt;WriteFile&lt;/code&gt; anterior, pero devuelve el contenido del archivo en lugar de escribirlo.</target>
        </trans-unit>
        <trans-unit id="7ea3c82b309767ea7a2165759e9837e13524a01e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetFileContents&lt;/code&gt; can be used to retrieve the file contents rather than writing it out.</source>
          <target state="translated">&lt;code&gt;GetFileContents&lt;/code&gt; se puede utilizar para recuperar el contenido del archivo en lugar de escribirlo.</target>
        </trans-unit>
        <trans-unit id="ad777db936a77fb5cda72b69a2424837a3dead8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Getopt::Long&lt;/code&gt; upgraded to version 2.35</source>
          <target state="translated">&lt;code&gt;Getopt::Long&lt;/code&gt; actualizado a la versi&amp;oacute;n 2.35</target>
        </trans-unit>
        <trans-unit id="645ac4cb7e7a0e4213f8a71c7bffc87052ad8695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HASH&lt;/code&gt; allows you to specify that a particular hash that you supply will be used as the cache. You can tie this hash beforehand to give it any behavior you want.</source>
          <target state="translated">&lt;code&gt;HASH&lt;/code&gt; le permite especificar que un hash particular que proporcione se utilizar&amp;aacute; como cach&amp;eacute;. Puedes atar este hash de antemano para darle el comportamiento que quieras.</target>
        </trans-unit>
        <trans-unit id="58f7a794ce300f67c1868cdef889a2449308b6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOST&lt;/code&gt; is optional. If &lt;code&gt;HOST&lt;/code&gt; is not given then it may instead be passed as the &lt;code&gt;Host&lt;/code&gt; option described below.</source>
          <target state="translated">&lt;code&gt;HOST&lt;/code&gt; es opcional. Si no se proporciona &lt;code&gt;HOST&lt;/code&gt; , se puede pasar como la opci&amp;oacute;n de &lt;code&gt;Host&lt;/code&gt; que se describe a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2bea88b5fbb79a39447dd7dee6828fe13741dd7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOST&lt;/code&gt; is optional. If &lt;code&gt;HOST&lt;/code&gt; is not given then it may instead be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If neither is given then the &lt;code&gt;POP3_Hosts&lt;/code&gt; specified in &lt;code&gt;Net::Config&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;HOST&lt;/code&gt; es opcional. Si no se proporciona &lt;code&gt;HOST&lt;/code&gt; , se puede pasar como la opci&amp;oacute;n de &lt;code&gt;Host&lt;/code&gt; que se describe a continuaci&amp;oacute;n. Si no se proporciona ninguno, se &lt;code&gt;POP3_Hosts&lt;/code&gt; los POP3_Hosts especificados en &lt;code&gt;Net::Config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ef5e2b3a132260f1a90da7111d14884da83c5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOST&lt;/code&gt; is optional. If &lt;code&gt;HOST&lt;/code&gt; is not given then it may instead be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If neither is given then the &lt;code&gt;SMTP_Hosts&lt;/code&gt; specified in &lt;code&gt;Net::Config&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;HOST&lt;/code&gt; es opcional. Si no se proporciona &lt;code&gt;HOST&lt;/code&gt; , se puede pasar como la opci&amp;oacute;n de &lt;code&gt;Host&lt;/code&gt; que se describe a continuaci&amp;oacute;n. Si no se proporciona ninguno, se &lt;code&gt;SMTP_Hosts&lt;/code&gt; los SMTP_Hosts especificados en &lt;code&gt;Net::Config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e137f247fee18cceb87509d47cf2081b7b55b920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; addresses these issues on several levels.</source>
          <target state="translated">&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; aborda estos problemas en varios niveles.</target>
        </trans-unit>
        <trans-unit id="da93bb4d317dc3025651186ee09e2f42a47f12aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; offers a number of functions in support of &lt;a href=&quot;#The-Inside-out-Technique&quot;&gt;&quot;The Inside-out Technique&quot;&lt;/a&gt; of class construction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60ded3e01c5263ba32e63f38adc7c79d39cfd47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; offers a number of functions in support of &lt;a href=&quot;#The-Inside-out-Technique&quot;&gt;The Inside-out Technique&lt;/a&gt; of class construction.</source>
          <target state="translated">&lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; ofrece una serie de funciones en apoyo de &lt;a href=&quot;#The-Inside-out-Technique&quot;&gt;la t&amp;eacute;cnica&lt;/a&gt; de construcci&amp;oacute;n de clases de adentro hacia afuera .</target>
        </trans-unit>
        <trans-unit id="95d63c605b89445d7ec7678a1b23fa305e23d9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util&lt;/code&gt; and &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; contain special functions for manipulating hashes that don't really warrant a keyword.</source>
          <target state="translated">&lt;code&gt;Hash::Util&lt;/code&gt; y &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; contienen funciones especiales para manipular hashes que realmente no justifican una palabra clave.</target>
        </trans-unit>
        <trans-unit id="17c547e32204db6e5f3d81ca13c7bb8402e0a164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash::Util&lt;/code&gt; contains a set of functions that support &lt;a href=&quot;#Restricted-hashes&quot;&gt;restricted hashes&lt;/a&gt;. These are described in this document. &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; contains an (unrelated) set of functions that support the use of hashes in</source>
          <target state="translated">&lt;code&gt;Hash::Util&lt;/code&gt; contiene un conjunto de funciones que admiten &lt;a href=&quot;#Restricted-hashes&quot;&gt;hashes restringidos&lt;/a&gt; . Estos se describen en este documento. &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; contiene un conjunto (no relacionado) de funciones que admiten el uso de hashes en</target>
        </trans-unit>
        <trans-unit id="4521ed781c1809a085cb868447be747c9e97d7c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&amp;lt;text&amp;gt;&lt;/code&gt; -- italic text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19d8d00c7506f07be1e885dde540332fdf6db0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;OUT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8136f764d1a688860eb12b8f894dd5ef02bf2211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INIT&lt;/code&gt; blocks are run just before the Perl runtime begins execution, in &quot;first in, first out&quot; (FIFO) order.</source>
          <target state="translated">&lt;code&gt;INIT&lt;/code&gt; bloques INIT se ejecutan justo antes de que el tiempo de ejecuci&amp;oacute;n de Perl comience la ejecuci&amp;oacute;n, en el orden &quot;primero en entrar, primero en salir&quot; (FIFO).</target>
        </trans-unit>
        <trans-unit id="049029b01299e7df2890b6b0dfade6fe1eb0300f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTALLDIRS&lt;/code&gt; =vendor or equivalent. See &lt;code&gt;INSTALL&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;INSTALLDIRS&lt;/code&gt; = proveedor o equivalente. Consulte &lt;code&gt;INSTALL&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="70d61eb52d40fc156965226f8146fe4021fa4cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTALLDIRS&lt;/code&gt;=vendor or equivalent. See &lt;code&gt;INSTALL&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11e57d805a97dc299623989e62dad5204f257b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Compress::Gzip&lt;/code&gt; doesn't have that filehandle limitation (this was one of the reasons for writing it in the first place). So if &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; is used instead of &lt;code&gt;Compress::Zlib&lt;/code&gt; the whole tied filehandle code can be removed. Here is the rewritten code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee0fffaa1deb24214806a0db486b288afec1012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Dir&lt;/code&gt; also provides an interface to reading directories via a tied hash. The tied hash extends the interface beyond just the directory reading routines by the use of &lt;code&gt;&lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;, from the &lt;code&gt;File::stat&lt;/code&gt; package, &lt;code&gt;&lt;a href=&quot;../functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Dir&lt;/code&gt; tambi&amp;eacute;n proporciona una interfaz para leer directorios mediante un hash vinculado. El hash vinculado extiende la interfaz m&amp;aacute;s all&amp;aacute; de las rutinas de lectura de directorios mediante el uso de &lt;code&gt;&lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; , del paquete &lt;code&gt;File::stat&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc058d68b0bf14976d523c35b36eecec377403c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Dir&lt;/code&gt; also provides an interface to reading directories via a tied hash. The tied hash extends the interface beyond just the directory reading routines by the use of &lt;code&gt;lstat&lt;/code&gt;, from the &lt;code&gt;File::stat&lt;/code&gt; package, &lt;code&gt;unlink&lt;/code&gt;, &lt;code&gt;rmdir&lt;/code&gt; and &lt;code&gt;utime&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cd121c621a4892a83a568405af04eb41cfd019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::File&lt;/code&gt; inherits from &lt;code&gt;IO::Handle&lt;/code&gt; and &lt;code&gt;IO::Seekable&lt;/code&gt; . It extends these classes with methods that are specific to file handles.</source>
          <target state="translated">&lt;code&gt;IO::File&lt;/code&gt; hereda de &lt;code&gt;IO::Handle&lt;/code&gt; y &lt;code&gt;IO::Seekable&lt;/code&gt; . Extiende estas clases con m&amp;eacute;todos que son espec&amp;iacute;ficos de los identificadores de archivos.</target>
        </trans-unit>
        <trans-unit id="0aa9b65546e3ff6f78be697e65c92217a480b763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::File&lt;/code&gt; inherits from &lt;code&gt;IO::Handle&lt;/code&gt; and &lt;code&gt;IO::Seekable&lt;/code&gt;. It extends these classes with methods that are specific to file handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181d096ff73f80c5fefbd49a6a2ace18cb883e5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Handle&lt;/code&gt; is the base class for all other IO handle classes. It is not intended that objects of &lt;code&gt;IO::Handle&lt;/code&gt; would be created directly, but instead &lt;code&gt;IO::Handle&lt;/code&gt; is inherited from by several other classes in the IO hierarchy.</source>
          <target state="translated">&lt;code&gt;IO::Handle&lt;/code&gt; es la clase base para todas las dem&amp;aacute;s clases de handle de IO. No se pretende que los objetos de &lt;code&gt;IO::Handle&lt;/code&gt; se creen directamente, sino que &lt;code&gt;IO::Handle&lt;/code&gt; es heredado por varias otras clases en la jerarqu&amp;iacute;a de IO.</target>
        </trans-unit>
        <trans-unit id="d968d8f7d184fabf28c8b22db7363ce4a8a51514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Pipe&lt;/code&gt; provides an interface to creating pipes between processes.</source>
          <target state="translated">&lt;code&gt;IO::Pipe&lt;/code&gt; proporciona una interfaz para crear conductos entre procesos.</target>
        </trans-unit>
        <trans-unit id="121507ef92369be28eeae4949c989ca1be6ada6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Poll&lt;/code&gt; is a simple interface to the system level poll routine.</source>
          <target state="translated">&lt;code&gt;IO::Poll&lt;/code&gt; es una interfaz simple para la rutina de sondeo a nivel del sistema.</target>
        </trans-unit>
        <trans-unit id="b762583822e0aaee851ce4fa15cdffd15a962862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Seekable&lt;/code&gt; does not have a constructor of its own as it is intended to be inherited by other &lt;code&gt;IO::Handle&lt;/code&gt; based objects. It provides methods which allow seeking of the file descriptors.</source>
          <target state="translated">&lt;code&gt;IO::Seekable&lt;/code&gt; no tiene un constructor propio, ya que est&amp;aacute; destinado a ser heredado por otros objetos basados ​​en &lt;code&gt;IO::Handle&lt;/code&gt; . Proporciona m&amp;eacute;todos que permiten la b&amp;uacute;squeda de descriptores de archivos.</target>
        </trans-unit>
        <trans-unit id="fae721a22b9ed15cae54857c941efacbe4ac4115" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::INET&lt;/code&gt; INCOMPATIBILITES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1b75ece72a66c0d61b6aa7b994a4cee97c3529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::INET&lt;/code&gt; provides an object interface to creating and using sockets in the AF_INET domain. It is built upon the &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket::INET&lt;/code&gt; proporciona una interfaz de objeto para crear y usar sockets en el dominio AF_INET. Est&amp;aacute; construido sobre la &lt;a href=&quot;../socket&quot;&gt;interfaz IO :: Socket&lt;/a&gt; y hereda todos los m&amp;eacute;todos definidos por &lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7b9070503ed10ed480814d03efb5b1cb2d93958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::INET&lt;/code&gt; provides an object interface to creating and using sockets in the AF_INET domain. It is built upon the &lt;a href=&quot;IO::Socket&quot;&gt;IO::Socket&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;IO::Socket&quot;&gt;IO::Socket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2744dd59c94da190d0d62e09ca57d1eb32fb993e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::IP&lt;/code&gt; - Family-neutral IP socket supporting both IPv4 and IPv6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93eb4eed4df3d33b0a651ea899704b014e2054f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::IP&lt;/code&gt; implements both the &lt;code&gt;Blocking&lt;/code&gt; and &lt;code&gt;Timeout&lt;/code&gt; parameters, but it implements the interaction of both in a different way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac39f2a91093d9b2c233aa1a1fa7511814ecbb5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::UNIX&lt;/code&gt; provides an object interface to creating and using sockets in the AF_UNIX domain. It is built upon the &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;../socket&quot;&gt;IO::Socket&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket::UNIX&lt;/code&gt; proporciona una interfaz de objeto para crear y usar sockets en el dominio AF_UNIX. Est&amp;aacute; construido sobre la &lt;a href=&quot;../socket&quot;&gt;interfaz IO :: Socket&lt;/a&gt; y hereda todos los m&amp;eacute;todos definidos por &lt;a href=&quot;../socket&quot;&gt;IO :: Socket&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59125a8f2c04cb2a3779b8df378f1e19936995a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket::UNIX&lt;/code&gt; provides an object interface to creating and using sockets in the AF_UNIX domain. It is built upon the &lt;a href=&quot;IO::Socket&quot;&gt;IO::Socket&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;IO::Socket&quot;&gt;IO::Socket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40650d5032309f0cec564470a3c4251ca646df3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; extends the &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9004227974930c2160a7c2617fd71a417645cb1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; inherits all methods from &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt; and implements the following new ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd2ee527d81d620c0ee82901b0de81a0ca448b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; is a base class that really only defines methods for those operations which are common to all types of sockets. Operations which are specific to a particular socket domain have methods defined in subclasses of &lt;code&gt;IO::Socket&lt;/code&gt;. See &lt;a href=&quot;IO::Socket::INET&quot;&gt;IO::Socket::INET&lt;/a&gt;, &lt;a href=&quot;IO::Socket::UNIX&quot;&gt;IO::Socket::UNIX&lt;/a&gt;, and &lt;a href=&quot;IO::Socket::IP&quot;&gt;IO::Socket::IP&lt;/a&gt; for examples of such a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cce9491bc1ee060453ba6f15ad058333b7daa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; only defines methods for those operations which are common to all types of socket. Operations which are specified to a socket in a particular domain have methods defined in sub classes of &lt;code&gt;IO::Socket&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IO::Socket&lt;/code&gt; solo define m&amp;eacute;todos para aquellas operaciones que son comunes a todos los tipos de socket. Las operaciones que se especifican en un socket en un dominio particular tienen m&amp;eacute;todos definidos en subclases de &lt;code&gt;IO::Socket&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd4122d764f9adaaacb15138a9de4abe82a136c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; provides an object interface to creating and using sockets. It is built upon the &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt; interface and inherits all the methods defined by &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket&lt;/code&gt; proporciona una interfaz de objeto para crear y usar sockets. Se basa en la &lt;a href=&quot;handle&quot;&gt;interfaz IO :: Handle&lt;/a&gt; y hereda todos los m&amp;eacute;todos definidos por &lt;a href=&quot;handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbc98e06a245f459e7aa4e367096446d4d156e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; provides an object-oriented, &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;-based interface to creating and using sockets via &lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;, which provides a near one-to-one interface to the C socket library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8213ac1eede062f215203877643d19e45fea00f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; will export all functions (and constants) defined by &lt;a href=&quot;../socket&quot;&gt;Socket&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Socket&lt;/code&gt; exportar&amp;aacute; todas las funciones (y constantes) definidas por &lt;a href=&quot;../socket&quot;&gt;Socket&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6d4854eb195d0d904b8518ec5456b8866b0cb46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Socket&lt;/code&gt; will export all functions (and constants) defined by &lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd83dcf6db900152f50ebff530a4285e2ee66534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Zlib&lt;/code&gt; provides an IO:: style interface to &lt;a href=&quot;../compress/zlib&quot;&gt;Compress::Zlib&lt;/a&gt; and hence to gzip/zlib compressed files. It provides many of the same methods as the &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt; interface.</source>
          <target state="translated">&lt;code&gt;IO::Zlib&lt;/code&gt; proporciona una interfaz de estilo IO :: para &lt;a href=&quot;../compress/zlib&quot;&gt;Compress :: Zlib&lt;/a&gt; y, por lo tanto, para archivos comprimidos gzip / zlib. Proporciona muchos de los mismos m&amp;eacute;todos que la &lt;a href=&quot;handle&quot;&gt;interfaz IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c26edcd91da09797e67afa41ff1bd18072f7a477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO::Zlib&lt;/code&gt; provides an IO:: style interface to &lt;a href=&quot;Compress::Zlib&quot;&gt;Compress::Zlib&lt;/a&gt; and hence to gzip/zlib compressed files. It provides many of the same methods as the &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d042d00c63eebc013a6991f1938ad31a79350e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; provides a simple mechanism to load several of the IO modules in one go. The IO modules belonging to the core are:</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; proporciona un mecanismo simple para cargar varios de los m&amp;oacute;dulos IO de una vez. Los m&amp;oacute;dulos IO que pertenecen al n&amp;uacute;cleo son:</target>
        </trans-unit>
        <trans-unit id="39b3396d21c463d28843aca7f77f27ca180d2d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IPC::SysV&lt;/code&gt; defines and conditionally exports all the constants defined in your system include files which are needed by the SysV IPC calls. Common ones include</source>
          <target state="translated">&lt;code&gt;IPC::SysV&lt;/code&gt; define y exporta condicionalmente todas las constantes definidas en su sistema incluyen archivos que son necesarios para las llamadas SysV IPC. Los comunes incluyen</target>
        </trans-unit>
        <trans-unit id="2d40c631720c575604798918e4820424289883cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IS_NUMBER_NOT_INT&lt;/code&gt; will be set with &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; if trailing decimals were seen (in which case &lt;code&gt;*valuep&lt;/code&gt; gives the true value truncated to an integer), and &lt;code&gt;IS_NUMBER_NEG&lt;/code&gt; if the number is negative (in which case &lt;code&gt;*valuep&lt;/code&gt; holds the absolute value). &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; is not set if e notation was used or the number is larger than a UV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1562c285ab3451fd66d7a87fd5d4aa1e870611f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIMER_PROF&lt;/code&gt; counts time when either the process virtual time or when the operating system is running on behalf of the process (such as I/O). (This time is also known as the</source>
          <target state="translated">&lt;code&gt;ITIMER_PROF&lt;/code&gt; cuenta el tiempo cuando el proceso es tiempo virtual o cuando el sistema operativo se ejecuta en nombre del proceso (como E / S). (Esta vez tambi&amp;eacute;n se conoce como</target>
        </trans-unit>
        <trans-unit id="916bb6dbaa0ac1eb30ba18d51c95fd8868d21c77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIMER_REAL&lt;/code&gt; results in &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt;-like behaviour. Time is counted in</source>
          <target state="translated">&lt;code&gt;ITIMER_REAL&lt;/code&gt; da como resultado un comportamiento similar a una &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; . El tiempo se cuenta en</target>
        </trans-unit>
        <trans-unit id="38757402332fd47a101c7a7bdf5d86c493895e1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIMER_REAL&lt;/code&gt; results in &lt;code&gt;alarm()&lt;/code&gt;-like behaviour. Time is counted in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3514de407012b9ae61544516605c3b826d3bb18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIMER_VIRTUAL&lt;/code&gt; counts time in (process)</source>
          <target state="translated">&lt;code&gt;ITIMER_VIRTUAL&lt;/code&gt; cuenta el tiempo en (proceso)</target>
        </trans-unit>
        <trans-unit id="0f6ee03b655d23ae15f7f2e38af35133c2a4bc9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; does not already have a message queue associated with it, and &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; a&amp;uacute;n no tiene una cola de mensajes asociada y &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; es verdadero.</target>
        </trans-unit>
        <trans-unit id="c5066360834717c79b8e3ffa4cb0f67c9b492685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; does not already have a semaphore identifier associated with it, and &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; no tiene ya un identificador de sem&amp;aacute;foro asociado y &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; es verdadero.</target>
        </trans-unit>
        <trans-unit id="207e986bdced98f163af9eb0b72ea2467c1786de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; does not already have a shared memory segment associated with it, and &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; a&amp;uacute;n no tiene un segmento de memoria compartida asociado, y &lt;code&gt;&lt;i&gt;FLAGS&lt;/i&gt; &amp;amp; IPC_CREAT&lt;/code&gt; es verdadero.</target>
        </trans-unit>
        <trans-unit id="ecd4729fb1227e456d3b0559a1c30aa293feb4dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY&lt;/code&gt; is equal to &lt;code&gt;IPC_PRIVATE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; es igual a &lt;code&gt;IPC_PRIVATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70c6c9ccf0a3e87b16004d2e590aed759ceca098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KS_C_5601-1987&lt;/code&gt; encoding is available as &lt;code&gt;kcs5601-raw&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424cc25eb593661c978d8429628c32197f526490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;/sec&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;/&quot;sec&quot;&amp;gt;&lt;/code&gt; o &lt;code&gt;L&amp;lt;/sec&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="157e5266177683b879059a170843454132e2ed37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; -- a hyperlink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c6e0dffc5ce09a6e54b619b6e6a27123a96c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;name/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;name/sec&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;name/&quot;sec&quot;&amp;gt;&lt;/code&gt; o &lt;code&gt;L&amp;lt;name/sec&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7cfda930437215fcc4324e241d8c8fa32a8d9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;text|/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;text|/sec&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;text|&quot;sec&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;text|/&quot;sec&quot;&amp;gt;&lt;/code&gt; o &lt;code&gt;L&amp;lt;text|/sec&amp;gt;&lt;/code&gt; o &lt;code&gt;L&amp;lt;text|&quot;sec&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="469caa270c3821b85844c5da0bf1d2d3e7023d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&amp;lt;text|name/&quot;sec&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;text|name/sec&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&amp;lt;text|name/&quot;sec&quot;&amp;gt;&lt;/code&gt; o &lt;code&gt;L&amp;lt;text|name/sec&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e6362a82e5577816d56f0e78605608fc1269151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANG&lt;/code&gt; is the &quot;catch-all&quot; locale environment variable. If it is set, it is used as the last resort after the overall &lt;code&gt;LC_ALL&lt;/code&gt; and the category-specific &lt;code&gt;LC_&lt;i&gt;foo&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LANG&lt;/code&gt; es la variable de entorno local &quot;general&quot;. Si se establece, se utiliza como &amp;uacute;ltimo recurso despu&amp;eacute;s de &lt;code&gt;LC_ALL&lt;/code&gt; general y &lt;code&gt;LC_&lt;i&gt;foo&lt;/i&gt;&lt;/code&gt; espec&amp;iacute;fico de categor&amp;iacute;a .</target>
        </trans-unit>
        <trans-unit id="cbe0cb20951383c21785bc33780d8bd2ac85ed7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LC_ALL&lt;/code&gt; is the &quot;override-all&quot; locale environment variable. If set, it overrides all the rest of the locale environment variables.</source>
          <target state="translated">&lt;code&gt;LC_ALL&lt;/code&gt; es la variable de entorno local &quot;override-all&quot;. Si se establece, anula el resto de las variables de entorno local.</target>
        </trans-unit>
        <trans-unit id="2a605bd93ba14e29e4f244383a9eb2e02ef1549c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LC_ALL&lt;/code&gt;&lt;code&gt;LC_COLLATE&lt;/code&gt;&lt;code&gt;LC_CTYPE&lt;/code&gt;&lt;code&gt;LC_MONETARY&lt;/code&gt;&lt;code&gt;LC_NUMERIC&lt;/code&gt;&lt;code&gt;LC_TIME&lt;/code&gt;&lt;code&gt;LC_MESSAGES&lt;/code&gt; on systems that support them.</source>
          <target state="translated">&lt;code&gt;LC_ALL&lt;/code&gt; &lt;code&gt;LC_COLLATE&lt;/code&gt; &lt;code&gt;LC_CTYPE&lt;/code&gt; &lt;code&gt;LC_MONETARY&lt;/code&gt; &lt;code&gt;LC_NUMERIC&lt;/code&gt; &lt;code&gt;LC_TIME&lt;/code&gt; &lt;code&gt;LC_MESSAGES&lt;/code&gt; en sistemas que los admitan.</target>
        </trans-unit>
        <trans-unit id="70c3c6ae91cafbe70b8de3e1db91b312cc5029fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LDFROM&lt;/code&gt; defaults to the same as &lt;code&gt;OBJECT&lt;/code&gt;. &lt;code&gt;OBJECT&lt;/code&gt; defaults to, for &lt;code&gt;XSMULTI&lt;/code&gt;, just the XS filename with the extension replaced with the compiler-specific object-file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2985ceb49d4b7007ec1f5ad9173e96849d54c926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LDLOADLIBS&lt;/code&gt; is an environment variable used by the linker to link &lt;code&gt;/ext&lt;/code&gt; modules to glibc. Currently, that environment variable is not getting populated by a combination of &lt;code&gt;Config&lt;/code&gt; entries and &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt;. While there may be a bug somewhere in Perl's configuration or &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; causing the problem, the most likely cause is an incomplete understanding of Sun Studio by this author. Further investigation is needed to get this working better.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb846da3ade953702217e651317e4e13b66b385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LDLOADLIBS&lt;/code&gt; is an environment variable used by the linker to link modules &lt;code&gt;/ext&lt;/code&gt; modules to glibc. Currently, that environment variable is not getting populated by a combination of &lt;code&gt;Config&lt;/code&gt; entries and &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; . While there may be a bug somewhere in Perl's configuration or &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; causing the problem, the most likely cause is an incomplete understanding of Sun Studio by this author. Further investigation is needed to get this working better.</source>
          <target state="translated">&lt;code&gt;LDLOADLIBS&lt;/code&gt; es una variable de entorno utilizada por el enlazador para vincular m&amp;oacute;dulos &lt;code&gt;/ext&lt;/code&gt; m&amp;oacute;dulos ext a glibc. Actualmente, esa variable de entorno no se completa con una combinaci&amp;oacute;n de entradas de &lt;code&gt;Config&lt;/code&gt; y &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; . Si bien puede haber un error en alguna parte de la configuraci&amp;oacute;n de Perl o &lt;code&gt;ExtUtil::MakeMaker&lt;/code&gt; causando el problema, la causa m&amp;aacute;s probable es una comprensi&amp;oacute;n incompleta de Sun Studio por parte de este autor. Se necesita m&amp;aacute;s investigaci&amp;oacute;n para que esto funcione mejor.</target>
        </trans-unit>
        <trans-unit id="c5b9a4de9a3ae26621d0664f9d7809fc1540d360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_ALERT&lt;/code&gt; - action must be taken immediately</source>
          <target state="translated">&lt;code&gt;LOG_ALERT&lt;/code&gt; : se debe actuar de inmediato</target>
        </trans-unit>
        <trans-unit id="237f0827d3b068adf7a9e035db022146d0403fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_AUDIT&lt;/code&gt; - audit daemon (IRIX); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_AUDIT&lt;/code&gt; - demonio de auditor&amp;iacute;a (IRIX); vuelve a &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f42cb5530d45add6db1cc3521ca69ba4aa90a4c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_AUTH&lt;/code&gt; - security/authorization messages</source>
          <target state="translated">&lt;code&gt;LOG_AUTH&lt;/code&gt; - mensajes de seguridad / autorizaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="3bbcebef65476f32b381cbd6c89052eca4c688cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_AUTHPRIV&lt;/code&gt; - security/authorization messages (private)</source>
          <target state="translated">&lt;code&gt;LOG_AUTHPRIV&lt;/code&gt; - mensajes de seguridad / autorizaci&amp;oacute;n (privados)</target>
        </trans-unit>
        <trans-unit id="66c8e15153bb0c1370176e3d28f81ed1595261c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_CONSOLE&lt;/code&gt; - &lt;code&gt;/dev/console&lt;/code&gt; output (FreeBSD); falls back to &lt;code&gt;LOG_USER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_CONSOLE&lt;/code&gt; - Salida de &lt;code&gt;/dev/console&lt;/code&gt; (FreeBSD); vuelve a &lt;code&gt;LOG_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e27b059f195281b93d28d6c22b89428b572bc11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_CRIT&lt;/code&gt; - critical conditions</source>
          <target state="translated">&lt;code&gt;LOG_CRIT&lt;/code&gt; - condiciones cr&amp;iacute;ticas</target>
        </trans-unit>
        <trans-unit id="ba52df2842e88f76f3ea0623ac07d547b385a40d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_CRON&lt;/code&gt; - clock daemons (&lt;b&gt;cron&lt;/b&gt; and &lt;b&gt;at&lt;/b&gt;)</source>
          <target state="translated">&lt;code&gt;LOG_CRON&lt;/code&gt; - demonios de reloj ( &lt;b&gt;cron&lt;/b&gt; y &lt;b&gt;at&lt;/b&gt; )</target>
        </trans-unit>
        <trans-unit id="2dbc2c1ef0a0587ee5b98f17edb40e479195a525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_DAEMON&lt;/code&gt; - system daemons without separate facility value</source>
          <target state="translated">&lt;code&gt;LOG_DAEMON&lt;/code&gt; : demonios del sistema sin valor de instalaci&amp;oacute;n separado</target>
        </trans-unit>
        <trans-unit id="db33909f631279fc62be328b4a3cd8cd3c40aa86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_DEBUG&lt;/code&gt; - debug-level message</source>
          <target state="translated">&lt;code&gt;LOG_DEBUG&lt;/code&gt; - mensaje de nivel de depuraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="547e87ee1a00b634dd9ca9748f7b928c07f9c109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_EMERG&lt;/code&gt; - system is unusable</source>
          <target state="translated">&lt;code&gt;LOG_EMERG&lt;/code&gt; - el sistema no se puede utilizar</target>
        </trans-unit>
        <trans-unit id="84f38a55790519e7289c11e43a4b3e68d8bf1ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_ERR&lt;/code&gt; - error conditions</source>
          <target state="translated">&lt;code&gt;LOG_ERR&lt;/code&gt; - condiciones de error</target>
        </trans-unit>
        <trans-unit id="923dddf491efec34b2f743e971b8ab73b788823c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_FTP&lt;/code&gt; - FTP daemon</source>
          <target state="translated">&lt;code&gt;LOG_FTP&lt;/code&gt; - demonio FTP</target>
        </trans-unit>
        <trans-unit id="2810346d0bc86bf8fd5e7cc51a029ebc1866a38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_INFO&lt;/code&gt; - informational message</source>
          <target state="translated">&lt;code&gt;LOG_INFO&lt;/code&gt; - mensaje informativo</target>
        </trans-unit>
        <trans-unit id="810d439031214499a1a46da8644f07fba574bb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_INSTALL&lt;/code&gt; - installer subsystem (Mac OS X); falls back to &lt;code&gt;LOG_USER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_INSTALL&lt;/code&gt; : subsistema del instalador (Mac OS X); vuelve a &lt;code&gt;LOG_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a72f3a1f407764857c6cbddf292afebce5708e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_KERN&lt;/code&gt; - kernel messages</source>
          <target state="translated">&lt;code&gt;LOG_KERN&lt;/code&gt; - mensajes del kernel</target>
        </trans-unit>
        <trans-unit id="145dd6e7d02588995730762df479040434b90e87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LAUNCHD&lt;/code&gt; - launchd - general bootstrap daemon (Mac OS X); falls back to &lt;code&gt;LOG_DAEMON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_LAUNCHD&lt;/code&gt; - launchd - demonio de arranque general (Mac OS X); vuelve a &lt;code&gt;LOG_DAEMON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="214ec5d4b6bc561d6ad7defc22b80f3e2275f46e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LFMT&lt;/code&gt; - logalert facility; falls back to &lt;code&gt;LOG_USER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_LFMT&lt;/code&gt; - facilidad de logalert; vuelve a &lt;code&gt;LOG_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f9e78f2c8460f654b3f822d56b4a20c7f97a05c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LOCAL0&lt;/code&gt; through &lt;code&gt;LOG_LOCAL7&lt;/code&gt; - reserved for local use</source>
          <target state="translated">&lt;code&gt;LOG_LOCAL0&lt;/code&gt; a &lt;code&gt;LOG_LOCAL7&lt;/code&gt; - reservado para uso local</target>
        </trans-unit>
        <trans-unit id="9d106db2a7093dbbcdde8fcb1a2d6d87e9b01b80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_LPR&lt;/code&gt; - line printer subsystem</source>
          <target state="translated">&lt;code&gt;LOG_LPR&lt;/code&gt; - subsistema de impresora de l&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="fc9ecbaae62209484725350ec9107688a7090a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_MAIL&lt;/code&gt; - mail subsystem</source>
          <target state="translated">&lt;code&gt;LOG_MAIL&lt;/code&gt; - subsistema de correo</target>
        </trans-unit>
        <trans-unit id="68a0b196a5afe3c65a5416f6289f9e5ab591cf16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NETINFO&lt;/code&gt; - NetInfo subsystem (Mac OS X); falls back to &lt;code&gt;LOG_DAEMON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_NETINFO&lt;/code&gt; : subsistema NetInfo (Mac OS X); vuelve a &lt;code&gt;LOG_DAEMON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f43420fd0cb94acf50948f76eec025cbaa77e17e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NEWS&lt;/code&gt; - USENET news subsystem</source>
          <target state="translated">&lt;code&gt;LOG_NEWS&lt;/code&gt; - Subsistema de noticias de USENET</target>
        </trans-unit>
        <trans-unit id="2ec24d33b2ae9e7047498fb9e3d3584709723001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NOTICE&lt;/code&gt; - normal, but significant, condition</source>
          <target state="translated">&lt;code&gt;LOG_NOTICE&lt;/code&gt; - condici&amp;oacute;n normal, pero significativa</target>
        </trans-unit>
        <trans-unit id="e6a5a7e6bfe7417ec509bcbeaa879f188f7d835f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_NTP&lt;/code&gt; - NTP subsystem (FreeBSD, NetBSD); falls back to &lt;code&gt;LOG_DAEMON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_NTP&lt;/code&gt; : subsistema NTP (FreeBSD, NetBSD); vuelve a &lt;code&gt;LOG_DAEMON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8ed9c91dc90bf6651bc34dcf127ecc62698e74f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_RAS&lt;/code&gt; - Remote Access Service (VPN / PPP) (Mac OS X); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_RAS&lt;/code&gt; - Servicio de acceso remoto (VPN / PPP) (Mac OS X); vuelve a &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d1370c52935d36881489c690df052afe5808f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_REMOTEAUTH&lt;/code&gt; - remote authentication/authorization (Mac OS X); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_REMOTEAUTH&lt;/code&gt; - autenticaci&amp;oacute;n / autorizaci&amp;oacute;n remota (Mac OS X); vuelve a &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99ed180210288ab3e370d1a6d5c442e1922fb0b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_SECURITY&lt;/code&gt; - security subsystems (firewalling, etc.) (FreeBSD); falls back to &lt;code&gt;LOG_AUTH&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LOG_SECURITY&lt;/code&gt; - subsistemas de seguridad (cortafuegos, etc.) (FreeBSD); vuelve a &lt;code&gt;LOG_AUTH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="250b3c4116937e10b2dd4bb886f3a9692745b1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_SYSLOG&lt;/code&gt; - messages generated internally by &lt;b&gt;syslogd&lt;/b&gt;</source>
          <target state="translated">&lt;code&gt;LOG_SYSLOG&lt;/code&gt; : mensajes generados internamente por &lt;b&gt;syslogd&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5693d6936c597501156c3bfbaa61d338dc924d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_USER&lt;/code&gt; (default) - generic user-level messages</source>
          <target state="translated">&lt;code&gt;LOG_USER&lt;/code&gt; (predeterminado): mensajes gen&amp;eacute;ricos a nivel de usuario</target>
        </trans-unit>
        <trans-unit id="b501add985d47c9765f5bd1b490e959970b698de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_UUCP&lt;/code&gt; - UUCP subsystem</source>
          <target state="translated">&lt;code&gt;LOG_UUCP&lt;/code&gt; - subsistema UUCP</target>
        </trans-unit>
        <trans-unit id="3014983e7b8fc4728dedbc24c3bba2111d82a818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_WARNING&lt;/code&gt; - warning conditions</source>
          <target state="translated">&lt;code&gt;LOG_WARNING&lt;/code&gt; - condiciones de advertencia</target>
        </trans-unit>
        <trans-unit id="1433a08249bc65ea23ef55820e06c9d207bedd84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LaTeX&lt;/code&gt; docs</source>
          <target state="translated">&lt;code&gt;LaTeX&lt;/code&gt; Documentos LaTeX</target>
        </trans-unit>
        <trans-unit id="29ef25139769a76305576be8c28dfb5626feb920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List::Util::XS&lt;/code&gt; can be used as a dependency to ensure List::Util was installed using a C compiler and that the XS version is installed.</source>
          <target state="translated">&lt;code&gt;List::Util::XS&lt;/code&gt; se puede usar como una dependencia para asegurar que List :: Util se instal&amp;oacute; usando un compilador de C y que la versi&amp;oacute;n XS est&amp;aacute; instalada.</target>
        </trans-unit>
        <trans-unit id="0f6594b32e1bb13da602c72066748f19da6777cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List::Util&lt;/code&gt; contains a selection of subroutines that people have expressed would be nice to have in the perl core, but the usage would not really be high enough to warrant the use of a keyword, and the size so small such that being individual extensions would be wasteful.</source>
          <target state="translated">&lt;code&gt;List::Util&lt;/code&gt; contiene una selecci&amp;oacute;n de subrutinas que la gente ha expresado que ser&amp;iacute;a bueno tener en el n&amp;uacute;cleo de perl, pero el uso no ser&amp;iacute;a lo suficientemente alto como para justificar el uso de una palabra clave, y el tama&amp;ntilde;o es tan peque&amp;ntilde;o como para ser extensiones individuales. ser&amp;iacute;a un desperdicio.</target>
        </trans-unit>
        <trans-unit id="caed75c6b696cf9b38470cf4de8d8d2a229b0fa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MEMORY&lt;/code&gt; means that return values from the function will be cached in an ordinary Perl hash variable. The hash variable will not persist after the program exits. This is the default.</source>
          <target state="translated">&lt;code&gt;MEMORY&lt;/code&gt; significa que los valores de retorno de la funci&amp;oacute;n se almacenar&amp;aacute;n en cach&amp;eacute; en una variable hash de Perl ordinaria. La variable hash no persistir&amp;aacute; despu&amp;eacute;s de que se cierre el programa. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="48f95b732cd622ecaa5f9f2a904a2e8c470bada2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MERGE&lt;/code&gt; normally means that the memoized function does not distinguish between list and sclar context, and that return values in both contexts should be stored together. Both &lt;code&gt;LIST_CACHE =&amp;gt;
MERGE&lt;/code&gt; and &lt;code&gt;SCALAR_CACHE =&amp;gt; MERGE&lt;/code&gt; mean the same thing.</source>
          <target state="translated">&lt;code&gt;MERGE&lt;/code&gt; normalmente significa que la funci&amp;oacute;n memorizada no distingue entre el contexto list y sclar, y que los valores de retorno en ambos contextos deben almacenarse juntos. Tanto &lt;code&gt;LIST_CACHE =&amp;gt; MERGE&lt;/code&gt; como &lt;code&gt;SCALAR_CACHE =&amp;gt; MERGE&lt;/code&gt; significan lo mismo.</target>
        </trans-unit>
        <trans-unit id="591b83ff43053b950080d0a4ce9c5949d6f3c019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MESSAGE-SPEC&lt;/code&gt; is either a single message-id, a single message number, or a reference to a list of two message numbers.</source>
          <target state="translated">&lt;code&gt;MESSAGE-SPEC&lt;/code&gt; es un ID de mensaje &amp;uacute;nico, un n&amp;uacute;mero de mensaje &amp;uacute;nico o una referencia a una lista de dos n&amp;uacute;meros de mensaje.</target>
        </trans-unit>
        <trans-unit id="c9b72b4d0555bfa671bef6529fae93ee0af5e5e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MESSAGE&lt;/code&gt; can be either an array of lines or a reference to an array and must be encoded by the caller to octets of whatever encoding is required, e.g. by using the Encode module's &lt;code&gt;encode()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4436b9064bf3c37f88daa98294a385d8b90cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MESSAGE&lt;/code&gt; can be either an array of lines or a reference to an array.</source>
          <target state="translated">&lt;code&gt;MESSAGE&lt;/code&gt; puede ser una matriz de l&amp;iacute;neas o una referencia a una matriz.</target>
        </trans-unit>
        <trans-unit id="e653378310d2f1452e27b8ec6a9a29dcc48a85bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE&lt;/code&gt; is optional; the default is &lt;code&gt;LOCK_EX&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;MODE&lt;/code&gt; es opcional; el predeterminado es &lt;code&gt;LOCK_EX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="378372d266e8b276f88f8fa38b4d7dc2e69a722c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE&lt;/code&gt; is optional; the default is &lt;code&gt;LOCK_EX&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cc55c9fcc474e1b57012d8a54afe281f15b529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; has to return a list of all &quot;bad attributes&quot;. If there are any bad attributes &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; croaks.</source>
          <target state="translated">&lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; tiene que devolver una lista de todos los &quot;atributos incorrectos&quot;. Si hay alg&amp;uacute;n atributo incorrecto, &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; e croaks.</target>
        </trans-unit>
        <trans-unit id="e9f3a45a740e9e734772c8f9b4c0e272bb57ba32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODIFY_&amp;lt;reftype&amp;gt;_ATTRIBUTES&lt;/code&gt; has to return a list of all &quot;bad attributes&quot;. If there are any bad attributes &lt;code&gt;import&lt;/code&gt; croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9365cb8b2d631f82760b183dda9cef7c6a3f7bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MSGNUM&lt;/code&gt; is a numeric id of an article in the current newsgroup, and will change the current article pointer. &lt;code&gt;MSGID&lt;/code&gt; is the message id of an article as shown in that article's header. It is anticipated that the client will obtain the &lt;code&gt;MSGID&lt;/code&gt; from a list provided by the &lt;code&gt;newnews&lt;/code&gt; command, from references contained within another article, or from the message-id provided in the response to some other commands.</source>
          <target state="translated">&lt;code&gt;MSGNUM&lt;/code&gt; es una identificaci&amp;oacute;n num&amp;eacute;rica de un art&amp;iacute;culo en el grupo de noticias actual y cambiar&amp;aacute; el puntero del art&amp;iacute;culo actual. &lt;code&gt;MSGID&lt;/code&gt; es la identificaci&amp;oacute;n del mensaje de un art&amp;iacute;culo como se muestra en el encabezado de ese art&amp;iacute;culo. Se prev&amp;eacute; que el cliente obtendr&amp;aacute; el &lt;code&gt;MSGID&lt;/code&gt; de una lista proporcionada por el comando &lt;code&gt;newnews&lt;/code&gt; , de las referencias contenidas en otro art&amp;iacute;culo o del ID del mensaje proporcionado en la respuesta a algunos otros comandos.</target>
        </trans-unit>
        <trans-unit id="0b82f8a8dfe207b711438bcea7b057597e325f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math::BigFloat&lt;/code&gt; exports nothing by default, but can export the &lt;code&gt;bpi()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;Math::BigFloat&lt;/code&gt; no exporta nada por defecto, pero puede exportar el m&amp;eacute;todo &lt;code&gt;bpi()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3eb8ec3365756417fe447a7e9bec6396a236661f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math::BigInt&lt;/code&gt; exports nothing by default, but can export the following methods:</source>
          <target state="translated">&lt;code&gt;Math::BigInt&lt;/code&gt; no exporta nada de forma predeterminada, pero puede exportar los siguientes m&amp;eacute;todos:</target>
        </trans-unit>
        <trans-unit id="86796664240378317064dfe323481f8be1c41b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math::Trig&lt;/code&gt; defines many trigonometric functions not defined by the core Perl which defines only the &lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt;. The constant &lt;b&gt;pi&lt;/b&gt; is also defined as are a few convenience functions for angle conversions, and</source>
          <target state="translated">&lt;code&gt;Math::Trig&lt;/code&gt; define muchas funciones trigonom&amp;eacute;tricas no definidas por el n&amp;uacute;cleo de Perl que define solo &lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; . La constante &lt;b&gt;pi&lt;/b&gt; tambi&amp;eacute;n se define como algunas funciones de conveniencia para conversiones de &amp;aacute;ngulos, y</target>
        </trans-unit>
        <trans-unit id="2b0740f6f22cb731243c0ef8f948cd5b0f4d0eb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math::Trig&lt;/code&gt; defines many trigonometric functions not defined by the core Perl which defines only the &lt;code&gt;sin()&lt;/code&gt; and &lt;code&gt;cos()&lt;/code&gt;. The constant &lt;b&gt;pi&lt;/b&gt; is also defined as are a few convenience functions for angle conversions, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bc5499f96f8d490fa45681e115f5659299bf42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; cannot do implicit imports, only explicit imports. (in other words, you always have to specify explicitly what you wish to import from a module, even if the functions are in that modules' &lt;code&gt;@EXPORT&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; no puede realizar importaciones impl&amp;iacute;citas, solo importaciones expl&amp;iacute;citas. (en otras palabras, siempre debe especificar expl&amp;iacute;citamente lo que desea importar de un m&amp;oacute;dulo, incluso si las funciones est&amp;aacute;n en ese m&amp;oacute;dulo ' &lt;code&gt;@EXPORT&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="96dbf75f04bf4eae3d08d50c960a053035c78efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; cannot do implicit imports, only explicit imports. (in other words, you always have to specify explicitly what you wish to import from a module, even if the functions are in that modules' &lt;code&gt;@EXPORT&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90453d3a96e2d1be5968891ad0e49d8b22e92f79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; eliminates the need for this overhead and will just DWYM.</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; elimina la necesidad de esta sobrecarga y solo ser&amp;aacute; DWYM.</target>
        </trans-unit>
        <trans-unit id="74208c2657c1b301aa548767a2ba31ea449e885f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; eliminates the need to know whether you are trying to require either a file or a module.</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; elimina la necesidad de saber si est&amp;aacute; intentando requerir un archivo o un m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="5481b4ff4d996da71a1f92b3cdbdc34272a5f78f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module::Load&lt;/code&gt; imports the two functions - &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;autoload&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Module::Load&lt;/code&gt; importa las dos funciones: &lt;code&gt;load&lt;/code&gt; y &lt;code&gt;autoload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7473e15d5603885d58a7bd80f8714e73bf8218f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moo&lt;/code&gt; does not implement most of &lt;code&gt;Moose&lt;/code&gt; 's introspection API, so it's often faster when loading your modules. Additionally, none of its dependencies require XS, so it can be installed on machines without a compiler.</source>
          <target state="translated">&lt;code&gt;Moo&lt;/code&gt; no implementa la mayor parte de la API de introspecci&amp;oacute;n de &lt;code&gt;Moose&lt;/code&gt; , por lo que a menudo es m&amp;aacute;s r&amp;aacute;pido al cargar sus m&amp;oacute;dulos. Adem&amp;aacute;s, ninguna de sus dependencias requiere XS, por lo que se puede instalar en m&amp;aacute;quinas sin un compilador.</target>
        </trans-unit>
        <trans-unit id="42653b2d52cbaf2dd816155b47ebb7bcadbf3523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moo&lt;/code&gt; does not implement most of &lt;code&gt;Moose&lt;/code&gt;'s introspection API, so it's often faster when loading your modules. Additionally, none of its dependencies require XS, so it can be installed on machines without a compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1aeb4ab86751cc99266670857f5c4535affec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; also has several dependencies on other modules. Most of these are small stand-alone modules, a number of which have been spun off from &lt;code&gt;Moose&lt;/code&gt; . &lt;code&gt;Moose&lt;/code&gt; itself, and some of its dependencies, require a compiler. If you need to install your software on a system without a compiler, or if having</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; tambi&amp;eacute;n tiene varias dependencias en otros m&amp;oacute;dulos. La mayor&amp;iacute;a de estos son peque&amp;ntilde;os m&amp;oacute;dulos independientes, algunos de los cuales se han derivado de &lt;code&gt;Moose&lt;/code&gt; . &lt;code&gt;Moose&lt;/code&gt; propio Moose y algunas de sus dependencias requieren un compilador. Si necesita instalar su software en un sistema sin un compilador, o si tiene</target>
        </trans-unit>
        <trans-unit id="b0e4bae35dcf1f0fabbdb9fe0daf37302b3da627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; also has several dependencies on other modules. Most of these are small stand-alone modules, a number of which have been spun off from &lt;code&gt;Moose&lt;/code&gt;. &lt;code&gt;Moose&lt;/code&gt; itself, and some of its dependencies, require a compiler. If you need to install your software on a system without a compiler, or if having</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236ade4b13836c1f86dfc2aa8501e99d8d969296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; can make your code slower to load. &lt;code&gt;Moose&lt;/code&gt; itself is not small, and it does a</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; puede hacer que su c&amp;oacute;digo se cargue m&amp;aacute;s lentamente. &lt;code&gt;Moose&lt;/code&gt; s&amp;iacute; no es peque&amp;ntilde;o, y hace un</target>
        </trans-unit>
        <trans-unit id="d7a89c86bfe3cc38e7ff728cc8fb18a11f892bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; describes itself using its own introspection API. Besides being a cool trick, this means that you can extend &lt;code&gt;Moose&lt;/code&gt; using &lt;code&gt;Moose&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; se describe a s&amp;iacute; mismo utilizando su propia API de introspecci&amp;oacute;n. Adem&amp;aacute;s de ser un truco genial, esto significa que puedes extender &lt;code&gt;Moose&lt;/code&gt; usando &lt;code&gt;Moose&lt;/code&gt; mismo.</target>
        </trans-unit>
        <trans-unit id="6b75944d26f71c7f1f78e35ade72b0fdfacfa23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; is a very powerful tool, and we can't cover all of its features here. We encourage you to learn more by reading the &lt;code&gt;Moose&lt;/code&gt; documentation, starting with &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org%2fperldoc%3fMoose%3a%3aManual&quot;&gt;Moose::Manual&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; es una herramienta muy poderosa y no podemos cubrir todas sus caracter&amp;iacute;sticas aqu&amp;iacute;. Le animamos a aprender m&amp;aacute;s leyendo la documentaci&amp;oacute;n de &lt;code&gt;Moose&lt;/code&gt; , comenzando con &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org%2fperldoc%3fMoose%3a%3aManual&quot;&gt;Moose :: Manual&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15a7474edcc79db6877104c2995b1e164f2e9c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; is a very powerful tool, and we can't cover all of its features here. We encourage you to learn more by reading the &lt;code&gt;Moose&lt;/code&gt; documentation, starting with &lt;a href=&quot;https://metacpan.org/pod/Moose::Manual&quot;&gt;Moose::Manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad6b90e9460494e0239b0e0b30a64740a8f84e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; is the maximal option. It has a lot of features, a big ecosystem, and a thriving user base. We also covered &lt;a href=&quot;http://search.cpan.org/perldoc/Moo&quot;&gt;Moo&lt;/a&gt; briefly. &lt;code&gt;Moo&lt;/code&gt; is &lt;code&gt;Moose&lt;/code&gt; lite, and a reasonable alternative when Moose doesn't work for your application.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; es la opci&amp;oacute;n m&amp;aacute;xima. Tiene muchas caracter&amp;iacute;sticas, un gran ecosistema y una base de usuarios pr&amp;oacute;spera. Tambi&amp;eacute;n cubrimos &lt;a href=&quot;http://search.cpan.org/perldoc/Moo&quot;&gt;Moo&lt;/a&gt; brevemente. &lt;code&gt;Moo&lt;/code&gt; es &lt;code&gt;Moose&lt;/code&gt; lite y una alternativa razonable cuando Moose no funciona para su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="103d7de4c9cac4328dfb31bd6dd9e40ee57f7fb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; is the maximal option. It has a lot of features, a big ecosystem, and a thriving user base. We also covered &lt;a href=&quot;moo&quot;&gt;Moo&lt;/a&gt; briefly. &lt;code&gt;Moo&lt;/code&gt; is &lt;code&gt;Moose&lt;/code&gt; lite, and a reasonable alternative when Moose doesn't work for your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69708ad78153d7b9062269d7ac8687dc72ab47ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; lets you define roles the same way you define classes:</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; le permite definir roles de la misma manera que define clases:</target>
        </trans-unit>
        <trans-unit id="e59d283b9fa45eb6da20d38a50354a5f65a3e45d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; provides a complete, modern OO system. Its biggest influence is the Common Lisp Object System, but it also borrows ideas from Smalltalk and several other languages. &lt;code&gt;Moose&lt;/code&gt; was created by Stevan Little, and draws heavily from his work on the Perl 6 OO design.</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; proporciona un sistema OO completo y moderno. Su mayor influencia es el Common Lisp Object System, pero tambi&amp;eacute;n toma prestadas ideas de Smalltalk y varios otros lenguajes. &lt;code&gt;Moose&lt;/code&gt; fue creado por Stevan Little y se basa en gran medida en su trabajo en el dise&amp;ntilde;o de Perl 6 OO.</target>
        </trans-unit>
        <trans-unit id="92d4ea17a8d8a887fea2368e62a8fb9bf6b79010" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; provides a complete, modern OO system. Its biggest influence is the Common Lisp Object System, but it also borrows ideas from Smalltalk and several other languages. &lt;code&gt;Moose&lt;/code&gt; was created by Stevan Little, and draws heavily from his work on the Raku OO design.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21aebae246ecd61c624d79bdc52a34c79b45d7da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; provides a layer of declarative &quot;sugar&quot; for defining classes. That sugar is just a set of exported functions that make declaring how your class works simpler and more palatable. This lets you describe</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; proporciona una capa de &quot;az&amp;uacute;car&quot; declarativa para definir clases. Ese az&amp;uacute;car es solo un conjunto de funciones exportadas que hacen que declarar c&amp;oacute;mo funciona su clase sea m&amp;aacute;s simple y m&amp;aacute;s agradable. Esto te permite describir</target>
        </trans-unit>
        <trans-unit id="d09bb13c02237f1d2d9dae9e2adb440884c74285" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Moose&lt;/code&gt; provides a number of features:</source>
          <target state="translated">&lt;code&gt;Moose&lt;/code&gt; ofrece una serie de caracter&amp;iacute;sticas:</target>
        </trans-unit>
        <trans-unit id="6eb64932f264053a0590719161b8cb976f4e1ab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NDBM_File&lt;/code&gt; establishes a connection between a Perl hash variable and a file in NDBM_File format;. You can manipulate the data in the file just as if it were in a Perl hash, but when your program exits, the data will remain in the file, to be used the next time your program runs.</source>
          <target state="translated">&lt;code&gt;NDBM_File&lt;/code&gt; establece una conexi&amp;oacute;n entre una variable hash de Perl y un archivo en formato NDBM_File ;. Puede manipular los datos en el archivo como si estuviera en un hash de Perl, pero cuando su programa sale, los datos permanecer&amp;aacute;n en el archivo, para ser utilizados la pr&amp;oacute;xima vez que se ejecute su programa.</target>
        </trans-unit>
        <trans-unit id="78074d9d3ae7622ec364fb434528c04975ac104b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NDBM_File&lt;/code&gt; has the same problem and the same solution. (Use &lt;code&gt;Memoize::NDBM_File instead of plain NDBM_File.&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;NDBM_File&lt;/code&gt; tiene el mismo problema y la misma soluci&amp;oacute;n. (Utilice &lt;code&gt;Memoize::NDBM_File instead of plain NDBM_File.&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="51cc4bba070c6a202bfe8ee27389d6c49260d4b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NDBM_File&lt;/code&gt; has the same problem and the same solution. (Use &lt;code&gt;Memoize::NDBM_File instead of plain NDBM_File.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0581baa5ac844265bc3183d530bf4c339e0bc42a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEXT::ACTUAL&lt;/code&gt; is most commonly used in &lt;code&gt;AUTOLOAD&lt;/code&gt; methods, as a means to decline an &lt;code&gt;AUTOLOAD&lt;/code&gt; request, but preserve the normal exception-on-failure semantics:</source>
          <target state="translated">&lt;code&gt;NEXT::ACTUAL&lt;/code&gt; se usa con m&amp;aacute;s frecuencia en los m&amp;eacute;todos &lt;code&gt;AUTOLOAD&lt;/code&gt; , como un medio para rechazar una solicitud &lt;code&gt;AUTOLOAD&lt;/code&gt; , pero conserva la sem&amp;aacute;ntica normal de excepci&amp;oacute;n en caso de falla:</target>
        </trans-unit>
        <trans-unit id="18cf8906396d05eba42604b1fd34e916339ab3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFC&lt;/code&gt; , &lt;code&gt;NFD&lt;/code&gt; , &lt;code&gt;NFKC&lt;/code&gt; , &lt;code&gt;NFKD&lt;/code&gt; : by default.</source>
          <target state="translated">&lt;code&gt;NFC&lt;/code&gt; , &lt;code&gt;NFD&lt;/code&gt; , &lt;code&gt;NFKC&lt;/code&gt; , &lt;code&gt;NFKD&lt;/code&gt; : por defecto.</target>
        </trans-unit>
        <trans-unit id="ba3b9f1e15235acf4735c8ead838364d94cd226f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFC&lt;/code&gt;, &lt;code&gt;NFD&lt;/code&gt;, &lt;code&gt;NFKC&lt;/code&gt;, &lt;code&gt;NFKD&lt;/code&gt;: by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebfda1e92b7ddd927792132b3070e3d738f30a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUL&lt;/code&gt; characters will sort the same as the lowest collating control character does, or to &lt;code&gt;&quot;\001&quot;&lt;/code&gt; in the unlikely event that there are no control characters at all in the locale. In cases where the strings don't contain this non-&lt;code&gt;NUL&lt;/code&gt; control, the results will be correct, and in many locales, this control, whatever it might be, will rarely be encountered. But there are cases where a &lt;code&gt;NUL&lt;/code&gt; should sort before this control, but doesn't. If two strings do collate identically, the one containing the &lt;code&gt;NUL&lt;/code&gt; will sort to earlier. Prior to 5.26, there were more bugs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fbe0cc8200f5a30fa199cb8f6df56105f2203c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NULL&lt;/code&gt; will be returned if a REGEXP* is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcf6d595cbf17a9e9ccb45668aea52548b0452a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NYTProf&lt;/code&gt; will generate a report database into the file</source>
          <target state="translated">&lt;code&gt;NYTProf&lt;/code&gt; generar&amp;aacute; una base de datos de informes en el archivo</target>
        </trans-unit>
        <trans-unit id="b04556879f1638536b2cd2ee09dcb8a1ebf97cd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Cmd&lt;/code&gt; exports six subroutines, five of these, &lt;code&gt;CMD_INFO&lt;/code&gt; , &lt;code&gt;CMD_OK&lt;/code&gt; , &lt;code&gt;CMD_MORE&lt;/code&gt; , &lt;code&gt;CMD_REJECT&lt;/code&gt; and &lt;code&gt;CMD_ERROR&lt;/code&gt; , correspond to possible results of &lt;code&gt;response&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt; . The sixth is &lt;code&gt;CMD_PENDING&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Net::Cmd&lt;/code&gt; exporta seis subrutinas, cinco de estas, &lt;code&gt;CMD_INFO&lt;/code&gt; , &lt;code&gt;CMD_OK&lt;/code&gt; , &lt;code&gt;CMD_MORE&lt;/code&gt; , &lt;code&gt;CMD_REJECT&lt;/code&gt; y &lt;code&gt;CMD_ERROR&lt;/code&gt; , corresponden a posibles resultados de &lt;code&gt;response&lt;/code&gt; y &lt;code&gt;status&lt;/code&gt; . El sexto es &lt;code&gt;CMD_PENDING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="751f64ce2fa80141c9374814816be4913af8c87c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Cmd&lt;/code&gt; exports six subroutines, five of these, &lt;code&gt;CMD_INFO&lt;/code&gt;, &lt;code&gt;CMD_OK&lt;/code&gt;, &lt;code&gt;CMD_MORE&lt;/code&gt;, &lt;code&gt;CMD_REJECT&lt;/code&gt; and &lt;code&gt;CMD_ERROR&lt;/code&gt;, correspond to possible results of &lt;code&gt;response&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt;. The sixth is &lt;code&gt;CMD_PENDING&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7845d03a9a449a6da30d7bde75f56559c5b3510e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Cmd&lt;/code&gt; is a collection of methods that can be inherited by a sub class of &lt;code&gt;IO::Handle&lt;/code&gt; . These methods implement the functionality required for a command based protocol, for example FTP and SMTP.</source>
          <target state="translated">&lt;code&gt;Net::Cmd&lt;/code&gt; es una colecci&amp;oacute;n de m&amp;eacute;todos que puede heredar una subclase de &lt;code&gt;IO::Handle&lt;/code&gt; . Estos m&amp;eacute;todos implementan la funcionalidad requerida para un protocolo basado en comandos, por ejemplo, FTP y SMTP.</target>
        </trans-unit>
        <trans-unit id="77f571ecf6b318ab360c95b65262ca56cf2aee39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Cmd&lt;/code&gt; is a collection of methods that can be inherited by a sub-class of &lt;code&gt;IO::Socket::INET&lt;/code&gt;. These methods implement the functionality required for a command based protocol, for example FTP and SMTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254926e3b1fdaf67c80f0581067758f47f75089e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Config&lt;/code&gt; defines the following methods. They are methods as they are invoked as class methods. This is because &lt;code&gt;Net::Config&lt;/code&gt; inherits from &lt;code&gt;Net::LocalCfg&lt;/code&gt; so you can override these methods if you want.</source>
          <target state="translated">&lt;code&gt;Net::Config&lt;/code&gt; define los siguientes m&amp;eacute;todos. Son m&amp;eacute;todos ya que se invocan como m&amp;eacute;todos de clase. Esto se debe a que &lt;code&gt;Net::Config&lt;/code&gt; hereda de &lt;code&gt;Net::LocalCfg&lt;/code&gt; por lo que puede anular estos m&amp;eacute;todos si lo desea.</target>
        </trans-unit>
        <trans-unit id="f3230cee7f2d481ff129124c06c210e7e3836e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Config&lt;/code&gt; holds configuration data for the modules in the libnet distribution. During installation you will be asked for these values.</source>
          <target state="translated">&lt;code&gt;Net::Config&lt;/code&gt; contiene datos de configuraci&amp;oacute;n para los m&amp;oacute;dulos en la distribuci&amp;oacute;n libnet. Durante la instalaci&amp;oacute;n se le pedir&amp;aacute;n estos valores.</target>
        </trans-unit>
        <trans-unit id="eee62aba7ead75933aba5287b1dfcee92f69a920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::FTP&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote FTP server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::FTP&lt;/code&gt; hereda de &lt;code&gt;Net::Cmd&lt;/code&gt; por lo que los m&amp;eacute;todos definidos en &lt;code&gt;Net::Cmd&lt;/code&gt; pueden usarse para enviar comandos al servidor FTP remoto adem&amp;aacute;s de los m&amp;eacute;todos documentados aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="a4c9a6d1ddcfaa49ab8c11cb11394dcdd82b4a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::FTP&lt;/code&gt; is a class implementing a simple FTP client in Perl as described in RFC959. It provides wrappers for a subset of the RFC959 commands.</source>
          <target state="translated">&lt;code&gt;Net::FTP&lt;/code&gt; es una clase que implementa un cliente FTP simple en Perl como se describe en RFC959. Proporciona envoltorios para un subconjunto de los comandos RFC959.</target>
        </trans-unit>
        <trans-unit id="8300ab17bc404a7a8829458b0fbe6ef51bbf649c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::FTP&lt;/code&gt; is a class implementing a simple FTP client in Perl as described in RFC959. It provides wrappers for the commonly used subset of the RFC959 commands. If &lt;a href=&quot;IO::Socket::IP&quot;&gt;IO::Socket::IP&lt;/a&gt; or &lt;a href=&quot;IO::Socket::INET6&quot;&gt;IO::Socket::INET6&lt;/a&gt; is installed it also provides support for IPv6 as defined in RFC2428. And with &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it provides support for implicit FTPS and explicit FTPS as defined in RFC4217.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71138c73e8a250c76baad4423032ba6d1dba47d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::NNTP&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote NNTP server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::NNTP&lt;/code&gt; hereda de &lt;code&gt;Net::Cmd&lt;/code&gt; por lo que los m&amp;eacute;todos definidos en &lt;code&gt;Net::Cmd&lt;/code&gt; pueden usarse para enviar comandos al servidor NNTP remoto adem&amp;aacute;s de los m&amp;eacute;todos documentados aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="847fafd47105bd72c7111b1635378a14aed1d84c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::NNTP&lt;/code&gt; is a class implementing a simple NNTP client in Perl as described in RFC977 and RFC4642.</source>
          <target state="translated">&lt;code&gt;Net::NNTP&lt;/code&gt; es una clase que implementa un cliente NNTP simple en Perl como se describe en RFC977 y RFC4642.</target>
        </trans-unit>
        <trans-unit id="27188759a651c11c806a3095dc0441fa930cce22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::NNTP&lt;/code&gt; is a class implementing a simple NNTP client in Perl as described in RFC977 and RFC4642. With &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it also provides support for implicit and explicit TLS encryption, i.e. NNTPS or NNTP+STARTTLS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36382e0a9620da9ee21409f3e9c9cfe391785b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Netrc&lt;/code&gt; also implements security checks just like the ftp program, these checks are, first that the .netrc file must be owned by the user and second the ownership permissions should be such that only the owner has read and write access. If these conditions are not met then a warning is output and the .netrc file is not read.</source>
          <target state="translated">&lt;code&gt;Net::Netrc&lt;/code&gt; tambi&amp;eacute;n implementa controles de seguridad al igual que el programa ftp, estos controles son, primero que el archivo .netrc debe ser propiedad del usuario y segundo, los permisos de propiedad deben ser tales que solo el propietario tenga acceso de lectura y escritura. Si no se cumplen estas condiciones, se emite una advertencia y no se lee el archivo .netrc.</target>
        </trans-unit>
        <trans-unit id="0b6f3d9adca182bb8079550cf17f428b2b3341d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Netrc&lt;/code&gt; is a class implementing a simple interface to the .netrc file used as by the ftp program.</source>
          <target state="translated">&lt;code&gt;Net::Netrc&lt;/code&gt; es una clase que implementa una interfaz simple para el archivo .netrc que usa el programa ftp.</target>
        </trans-unit>
        <trans-unit id="123002683b26209fd1f35593f9b8871fd3c658e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::POP3&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote POP3 server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::POP3&lt;/code&gt; hereda de &lt;code&gt;Net::Cmd&lt;/code&gt; por lo que los m&amp;eacute;todos definidos en &lt;code&gt;Net::Cmd&lt;/code&gt; pueden usarse para enviar comandos al servidor POP3 remoto adem&amp;aacute;s de los m&amp;eacute;todos documentados aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="3751bae0845dc1c96565bcff89564528bd51714a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::SMTP&lt;/code&gt; inherits from &lt;code&gt;Net::Cmd&lt;/code&gt; so methods defined in &lt;code&gt;Net::Cmd&lt;/code&gt; may be used to send commands to the remote SMTP server in addition to the methods documented here.</source>
          <target state="translated">&lt;code&gt;Net::SMTP&lt;/code&gt; hereda de &lt;code&gt;Net::Cmd&lt;/code&gt; por lo que los m&amp;eacute;todos definidos en &lt;code&gt;Net::Cmd&lt;/code&gt; pueden usarse para enviar comandos al servidor SMTP remoto adem&amp;aacute;s de los m&amp;eacute;todos documentados aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="86cd710654ff51cb16031bcacedac62e6d1b9ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Net::Time&lt;/code&gt; provides subroutines that obtain the time on a remote machine.</source>
          <target state="translated">&lt;code&gt;Net::Time&lt;/code&gt; proporciona subrutinas que obtienen la hora en una m&amp;aacute;quina remota.</target>
        </trans-unit>
        <trans-unit id="9d533e43a84604b97d548da9e6f5ca63912a9518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NextPermute&lt;/code&gt; uses string order and &lt;code&gt;NextPermuteNum&lt;/code&gt; numeric order, so you can enumerate all the permutations of &lt;code&gt;0..9&lt;/code&gt; like this:</source>
          <target state="translated">&lt;code&gt;NextPermute&lt;/code&gt; usa el orden de cadena y el orden num&amp;eacute;rico &lt;code&gt;NextPermuteNum&lt;/code&gt; , por lo que puede enumerar todas las permutaciones de &lt;code&gt;0..9&lt;/code&gt; de esta manera:</target>
        </trans-unit>
        <trans-unit id="378a45bbbd1429eb14ae962e068942d1f3f2b24f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ODBM_File&lt;/code&gt; establishes a connection between a Perl hash variable and a file in ODBM_File format;. You can manipulate the data in the file just as if it were in a Perl hash, but when your program exits, the data will remain in the file, to be used the next time your program runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe4c93e326640f663cc60745323069016a9e294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPLIST&lt;/code&gt; is a list of operations to pass to &lt;code&gt;&lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;OPLIST&lt;/code&gt; is a concatenation of smaller lists, each which has three values. The first is the semaphore number, the second is the operation and the last is a flags value. See &lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt; for more details. For example</source>
          <target state="translated">&lt;code&gt;OPLIST&lt;/code&gt; es una lista de operaciones para pasar a &lt;code&gt;&lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;OPLIST&lt;/code&gt; es una concatenaci&amp;oacute;n de listas m&amp;aacute;s peque&amp;ntilde;as, cada una de las cuales tiene tres valores. El primero es el n&amp;uacute;mero de sem&amp;aacute;foro, el segundo es la operaci&amp;oacute;n y el &amp;uacute;ltimo es un valor de banderas. Consulte &lt;a href=&quot;../functions/semop&quot;&gt;semop&lt;/a&gt; para obtener m&amp;aacute;s detalles. Por ejemplo</target>
        </trans-unit>
        <trans-unit id="a23a506db80ba3d94d21ada4d0fc8755b43ee0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPLIST&lt;/code&gt; is a list of operations to pass to &lt;code&gt;semop&lt;/code&gt;. &lt;code&gt;OPLIST&lt;/code&gt; is a concatenation of smaller lists, each which has three values. The first is the semaphore number, the second is the operation and the last is a flags value. See &lt;a href=&quot;http://man.he.net/man2/semop&quot;&gt;semop(2)&lt;/a&gt; for more details. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33efd347724e242d7141f46f188fed712b7cdd02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTIONS&lt;/code&gt; are passed in a hash like fashion, using key and value pairs. Possible options are:</source>
          <target state="translated">&lt;code&gt;OPTIONS&lt;/code&gt; se pasan en forma de hash, utilizando pares de clave y valor. Las posibles opciones son:</target>
        </trans-unit>
        <trans-unit id="fb585ad0e412320d6c5d24d7d6c5a3fe34ee3eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTS&lt;/code&gt; is any combination of the following options:</source>
          <target state="translated">&lt;code&gt;OPTS&lt;/code&gt; es cualquier combinaci&amp;oacute;n de las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="91302c7ef38ea711b6dd2b2f025894b8eed9d3c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTS&lt;/code&gt; is any combination of zero or more the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f385462d59e5cbff16027513e56f20527ecc44d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OS2::MorphPM(serve)&lt;/code&gt;, &lt;code&gt;OS2::UnMorphPM(serve)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9245eb099435f6ca94debca60eab45a7b36e193e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsFHandleOpen&lt;/code&gt; eventually calls the Win32-specific C routine &lt;code&gt;_open_osfhandle()&lt;/code&gt; or Perl's &quot;improved&quot; version called &lt;code&gt;win32_open_osfhandle()&lt;/code&gt;. Prior to Perl5.005, C's &lt;code&gt;_open_osfhandle()&lt;/code&gt; is called which will fail if &lt;code&gt;GetFileType($hNativeHandle)&lt;/code&gt; would return &lt;code&gt;FILE_TYPE_UNKNOWN&lt;/code&gt;. For Perl5.005 and later, &lt;code&gt;OsFHandleOpen&lt;/code&gt; calls &lt;code&gt;win32_open_osfhandle()&lt;/code&gt; from the Perl DLL which doesn't have this restriction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a55a8fa7d94a2bdb8c9858e6a20e3b3750fcc3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PAGFEXT&lt;/code&gt; - the extension used for the page file, usually &lt;code&gt;.pag&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PAGFEXT&lt;/code&gt; : la extensi&amp;oacute;n utilizada para el archivo de p&amp;aacute;gina, generalmente &lt;code&gt;.pag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20abc9b397ce67c7d8c18e056cadec6da9cf7da5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PAGFEXT&lt;/code&gt; - the extension used for the page file, usually &lt;code&gt;.pag&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa83b7935dfe2d0f82e9741ba0c0dcca3ce6ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PAIRMAX&lt;/code&gt; - the maximum size of a stored hash entry, including the length of both the key and value.</source>
          <target state="translated">&lt;code&gt;PAIRMAX&lt;/code&gt; : el tama&amp;ntilde;o m&amp;aacute;ximo de una entrada hash almacenada, incluida la longitud de la clave y el valor.</target>
        </trans-unit>
        <trans-unit id="6bfce6371d235835d7baa6a15ef25591a2378ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PERL5LIB&lt;/code&gt; is applied first, then all the &lt;code&gt;-I&lt;/code&gt; arguments, then all the &lt;code&gt;-M&lt;/code&gt; arguments. This:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27156ff4eef82c7929a4d4dc40be3d7c530fea3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PL_errgv&lt;/code&gt; is a perl global of type &lt;code&gt;GV *&lt;/code&gt; that points to the symbol table entry containing the error. &lt;code&gt;ERRSV&lt;/code&gt; therefore refers to the C equivalent of &lt;code&gt;$@&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PL_errgv&lt;/code&gt; es un perl global de tipo &lt;code&gt;GV *&lt;/code&gt; que apunta a la entrada de la tabla de s&amp;iacute;mbolos que contiene el error. &lt;code&gt;ERRSV&lt;/code&gt; tanto, ERRSV se refiere al equivalente en C de &lt;code&gt;$@&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75f0ef1d7c11545a4418843565ff1807d720ceae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PL_errgv&lt;/code&gt; is a perl global of type &lt;code&gt;GV *&lt;/code&gt; that points to the symbol table entry containing the error. &lt;code&gt;ERRSV&lt;/code&gt; therefore refers to the C equivalent of &lt;code&gt;$@&lt;/code&gt;. We use a local temporary, &lt;code&gt;err_tmp&lt;/code&gt;, since &lt;code&gt;ERRSV&lt;/code&gt; is a macro that calls a function, and &lt;code&gt;SvTRUE(ERRSV)&lt;/code&gt; would end up calling that function multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d846ceba760df481e858497307461291dc972a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PL_modglobal&lt;/code&gt; is a general purpose, interpreter global HV for use by extensions that need to keep information on a per-interpreter basis. In a pinch, it can also be used as a symbol table for extensions to share data among each other. It is a good idea to use keys prefixed by the package name of the extension that owns the data.</source>
          <target state="translated">&lt;code&gt;PL_modglobal&lt;/code&gt; es un int&amp;eacute;rprete global HV de prop&amp;oacute;sito general para ser utilizado por extensiones que necesitan mantener informaci&amp;oacute;n por int&amp;eacute;rprete. En caso de necesidad, tambi&amp;eacute;n se puede utilizar como una tabla de s&amp;iacute;mbolos para que las extensiones compartan datos entre s&amp;iacute;. Es una buena idea utilizar claves con el prefijo del nombre del paquete de la extensi&amp;oacute;n que posee los datos.</target>
        </trans-unit>
        <trans-unit id="baf742fa1485655f0b87fce84ae46f9ee25693cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PL_phase&lt;/code&gt; was introduced in Perl 5.14; in prior perls you can use &lt;code&gt;PL_dirty&lt;/code&gt; (boolean) to determine whether the interpreter is in global destruction. (Use of &lt;code&gt;PL_dirty&lt;/code&gt; is discouraged since 5.14.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e462043426a8fdcde1b169905e3026ac756f8a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POPn&lt;/code&gt; takes the SV from the top of the stack and obtains its NV either directly (if &lt;code&gt;SvNOK&lt;/code&gt; is set) or by calling the &lt;code&gt;sv_2nv&lt;/code&gt; function. &lt;code&gt;TOPs&lt;/code&gt; takes the next SV from the top of the stack - yes, &lt;code&gt;POPn&lt;/code&gt; uses &lt;code&gt;TOPs&lt;/code&gt; - but doesn't remove it. We then use &lt;code&gt;SvNV&lt;/code&gt; to get the NV from &lt;code&gt;leftsv&lt;/code&gt; in the same way as before - yes, &lt;code&gt;POPn&lt;/code&gt; uses &lt;code&gt;SvNV&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;POPn&lt;/code&gt; toma el SV de la parte superior de la pila y obtiene su NV directamente (si se establece &lt;code&gt;SvNOK&lt;/code&gt; ) o llamando a la funci&amp;oacute;n &lt;code&gt;sv_2nv&lt;/code&gt; . &lt;code&gt;TOPs&lt;/code&gt; toma el siguiente SV de la parte superior de la pila (s&amp;iacute;, &lt;code&gt;POPn&lt;/code&gt; usa &lt;code&gt;TOPs&lt;/code&gt; ) pero no lo elimina. Luego usamos &lt;code&gt;SvNV&lt;/code&gt; para obtener el NV de &lt;code&gt;leftsv&lt;/code&gt; de la misma manera que antes; s&amp;iacute;, &lt;code&gt;POPn&lt;/code&gt; usa &lt;code&gt;SvNV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d374a0211d048b551a650a5a8c3af72a22bcf31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POPn&lt;/code&gt; takes the SV from the top of the stack and obtains its NV either directly (if &lt;code&gt;SvNOK&lt;/code&gt; is set) or by calling the &lt;code&gt;sv_2nv&lt;/code&gt; function. &lt;code&gt;TOPs&lt;/code&gt; takes the next SV from the top of the stack - yes, &lt;code&gt;POPn&lt;/code&gt; uses &lt;code&gt;TOPs&lt;/code&gt; - but doesn't remove it. We then use &lt;code&gt;SvNV&lt;/code&gt; to get the NV from &lt;code&gt;leftsv&lt;/code&gt; in the same way as before - yes, &lt;code&gt;POPn&lt;/code&gt; uses &lt;code&gt;SvNV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceeafa80c32480e29641bc3d8281cb2d151748fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PRIO_PROCESS&lt;/code&gt;&lt;code&gt;PRIO_PGRP&lt;/code&gt;&lt;code&gt;PRIO_USER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="187cb5f75aca7c54a66b5479e08fd95908744787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParseExtra =&amp;gt; 0|1&lt;/code&gt; If the gzip FEXTRA header field is present and this option is set, it will force the module to check that it conforms to the sub-field structure as defined in RFC 1952.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa7d89db8ca9065ee05f4a0df6e3c04c186b53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PeerHost&lt;/code&gt; AND &lt;code&gt;LocalHost&lt;/code&gt; PARSING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db32ebddf13e6153c4db2e4b19915086fc3c701a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PerlIO *&lt;/code&gt; takes the place of FILE *. Like FILE * it should be treated as opaque (it is probably safe to assume it is a pointer to something).</source>
          <target state="translated">&lt;code&gt;PerlIO *&lt;/code&gt; toma el lugar de FILE *. Al igual que FILE *, debe tratarse como opaco (probablemente sea seguro asumir que es un puntero a algo).</target>
        </trans-unit>
        <trans-unit id="4d16f994d3331156861b509a21f75af08d4def42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PerlIO::mmap&lt;/code&gt; only exists to use XSLoader to load C code that provides support for using memory mapped IO. One does not need to explicitly &lt;code&gt;use PerlIO::mmap;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76de88c3c738162ebd05f1c0526d5c7e44fc7ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PerlIO::scalar&lt;/code&gt; only exists to use XSLoader to load C code that provides support for treating a scalar as an &quot;in memory&quot; file. One does not need to explicitly &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; PerlIO::scalar&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PerlIO::scalar&lt;/code&gt; solo existe para usar XSLoader para cargar c&amp;oacute;digo C que proporciona soporte para tratar un escalar como un archivo &quot;en memoria&quot;. No es necesario &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; PerlIO::scalar&lt;/code&gt; expl&amp;iacute;citamente PerlIO :: scalar .</target>
        </trans-unit>
        <trans-unit id="bd5d806f68368f22f8a2e45432fc7f9b402a951d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PerlIO::scalar&lt;/code&gt; only exists to use XSLoader to load C code that provides support for treating a scalar as an &quot;in memory&quot; file. One does not need to explicitly &lt;code&gt;use PerlIO::scalar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ae8a39c671d0e2b494188a848a2db1b4ecf4da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Perl_isinfnan()&lt;/code&gt; is a utility function that returns true if the NV argument is either an infinity or a &lt;code&gt;NaN&lt;/code&gt;, false otherwise. To test in more detail, use &lt;code&gt;Perl_isinf()&lt;/code&gt; and &lt;code&gt;Perl_isnan()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342cc2bd74a057131e7a555a6c648fe333fad065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Perl_op_dump&lt;/code&gt; can be used to dump an &lt;code&gt;OP&lt;/code&gt; structure or any of its derivatives, and produces output similar to &lt;code&gt;perl -Dx&lt;/code&gt; ; in fact, &lt;code&gt;Perl_dump_eval&lt;/code&gt; will dump the main root of the code being evaluated, exactly like &lt;code&gt;-Dx&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Perl_op_dump&lt;/code&gt; puede usarse para volcar una estructura &lt;code&gt;OP&lt;/code&gt; o cualquiera de sus derivados, y produce una salida similar a &lt;code&gt;perl -Dx&lt;/code&gt; ; de hecho, &lt;code&gt;Perl_dump_eval&lt;/code&gt; volcar&amp;aacute; la ra&amp;iacute;z principal del c&amp;oacute;digo que se est&amp;aacute; evaluando, exactamente como &lt;code&gt;-Dx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8a8bab59c12cdaf00c5d74a27307b9d8b2f6181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Perl_op_dump&lt;/code&gt; can be used to dump an &lt;code&gt;OP&lt;/code&gt; structure or any of its derivatives, and produces output similar to &lt;code&gt;perl -Dx&lt;/code&gt;; in fact, &lt;code&gt;Perl_dump_eval&lt;/code&gt; will dump the main root of the code being evaluated, exactly like &lt;code&gt;-Dx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a25875890d05d11531b49f5ebb3a69b2a92ffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Perl_setlocale&lt;/code&gt; should not be used to change the locale except on systems where the predefined variable &lt;code&gt;${^SAFE_LOCALES}&lt;/code&gt; is 1. On some such systems, the system &lt;code&gt;setlocale()&lt;/code&gt; is ineffective, returning the wrong information, and failing to actually change the locale. &lt;code&gt;Perl_setlocale&lt;/code&gt;, however works properly in all circumstances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69e8b187c7334a4f160f8b7848979025e38bf47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RE&lt;/code&gt; in &lt;code&gt;m?RE?&lt;/code&gt;, &lt;code&gt;/RE/&lt;/code&gt;, &lt;code&gt;m/RE/&lt;/code&gt;, &lt;code&gt;s/RE/foo/&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525331da57907ca499d00faca6f8395614de9884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RECURSIVE_TEST_FILES&lt;/code&gt; can be used to include all directories recursively under &lt;code&gt;t&lt;/code&gt; that contain &lt;code&gt;.t&lt;/code&gt; files. It will be ignored if you provide your own &lt;code&gt;TESTS&lt;/code&gt; attribute, defaults to false.</source>
          <target state="translated">&lt;code&gt;RECURSIVE_TEST_FILES&lt;/code&gt; se puede utilizar para incluir todos los directorios de forma recursiva en &lt;code&gt;t&lt;/code&gt; que contienen archivos &lt;code&gt;.t&lt;/code&gt; . Se ignorar&amp;aacute; si proporciona su propio atributo &lt;code&gt;TESTS&lt;/code&gt; , el valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="30e1beb351b718ad1963f84891a8a519c473da70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R_OK&lt;/code&gt;&lt;code&gt;SEEK_CUR&lt;/code&gt;&lt;code&gt;SEEK_END&lt;/code&gt;&lt;code&gt;SEEK_SET&lt;/code&gt;&lt;code&gt;STDIN_FILENO&lt;/code&gt;&lt;code&gt;STDOUT_FILENO&lt;/code&gt;&lt;code&gt;STDERR_FILENO&lt;/code&gt;&lt;code&gt;W_OK&lt;/code&gt;&lt;code&gt;X_OK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;R_OK&lt;/code&gt;&lt;code&gt;SEEK_CUR&lt;/code&gt;&lt;code&gt;SEEK_END&lt;/code&gt;&lt;code&gt;SEEK_SET&lt;/code&gt;&lt;code&gt;STDIN_FILENO&lt;/code&gt;&lt;code&gt;STDOUT_FILENO&lt;/code&gt;&lt;code&gt;STDERR_FILENO&lt;/code&gt;&lt;code&gt;W_OK&lt;/code&gt;&lt;code&gt;X_OK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16450031490ec1497810c7f8a187e46a6f98921a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Role::Tiny&lt;/code&gt; provides some of the same features as Moose's role system, but in a much smaller package. Most notably, it doesn't support any sort of attribute declaration, so you have to do that by hand. Still, it's useful, and works well with &lt;code&gt;Class::Accessor&lt;/code&gt; and &lt;code&gt;Class::Tiny&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Role::Tiny&lt;/code&gt; proporciona algunas de las mismas caracter&amp;iacute;sticas que el sistema de roles de Moose, pero en un paquete mucho m&amp;aacute;s peque&amp;ntilde;o. En particular, no admite ning&amp;uacute;n tipo de declaraci&amp;oacute;n de atributo, por lo que debe hacerlo a mano. A&amp;uacute;n as&amp;iacute;, es &amp;uacute;til y funciona bien con &lt;code&gt;Class::Accessor&lt;/code&gt; y &lt;code&gt;Class::Tiny&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="72d85e88640fdc0576a5d2e11c87c9259bf547b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&amp;lt;text&amp;gt;&lt;/code&gt; -- text contains non-breaking spaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5d578bc230b533659795813b810943d7c13d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S?&lt;/code&gt;, &lt;code&gt;S*&lt;/code&gt;, &lt;code&gt;S+&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed46e883b6445e1d87d43e65db98c3721cdf127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S??&lt;/code&gt;, &lt;code&gt;S*?&lt;/code&gt;, &lt;code&gt;S+?&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e3d6a83f5bb8422f1ded025ceccd43c17fbefa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAVEFREEOP&lt;/code&gt; is slightly problematic under this scheme. Sometimes it can cause an op to be freed after its CV. If the CV has forcibly freed the ops on its slab and the slab itself, then we will be fiddling with a freed slab. Making &lt;code&gt;SAVEFREEOP&lt;/code&gt; a no-op doesn't help, as sometimes an op can be savefreed when there is no compilation error, so the op would never be freed. It holds a reference count on the slab, so the whole slab would leak. So &lt;code&gt;SAVEFREEOP&lt;/code&gt; now sets a special flag on the op (&lt;code&gt;-&amp;gt;op_savefree&lt;/code&gt;). The forced freeing of ops after a compilation error won't free any ops thus marked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1843e3a2f66bfd9e3c971214ca68246db523585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SA_NOCLDSTOP&lt;/code&gt;&lt;code&gt;SA_NOCLDWAIT&lt;/code&gt;&lt;code&gt;SA_NODEFER&lt;/code&gt;&lt;code&gt;SA_ONSTACK&lt;/code&gt;&lt;code&gt;SA_RESETHAND&lt;/code&gt;&lt;code&gt;SA_RESTART&lt;/code&gt;&lt;code&gt;SA_SIGINFO&lt;/code&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;code&gt;SIGALRM&lt;/code&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;code&gt;SIGHUP&lt;/code&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;code&gt;SIGKILL&lt;/code&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;code&gt;SIGQUIT&lt;/code&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;code&gt;SIGSTOP&lt;/code&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;code&gt;SIGTSTP&lt;/code&gt;&lt;code&gt;SIGTTIN&lt;/code&gt;&lt;code&gt;SIGTTOU&lt;/code&gt;&lt;code&gt;SIGUSR1&lt;/code&gt;&lt;code&gt;SIGUSR2&lt;/code&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;code&gt;SIG_ERR&lt;/code&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SA_NOCLDSTOP&lt;/code&gt;&lt;code&gt;SA_NOCLDWAIT&lt;/code&gt;&lt;code&gt;SA_NODEFER&lt;/code&gt;&lt;code&gt;SA_ONSTACK&lt;/code&gt;&lt;code&gt;SA_RESETHAND&lt;/code&gt;&lt;code&gt;SA_RESTART&lt;/code&gt;&lt;code&gt;SA_SIGINFO&lt;/code&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;code&gt;SIGALRM&lt;/code&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;code&gt;SIGHUP&lt;/code&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;code&gt;SIGKILL&lt;/code&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;code&gt;SIGQUIT&lt;/code&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;code&gt;SIGSTOP&lt;/code&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;code&gt;SIGTSTP&lt;/code&gt;&lt;code&gt;SIGTTIN&lt;/code&gt;&lt;code&gt;SIGTTOU&lt;/code&gt;&lt;code&gt;SIGUSR1&lt;/code&gt;&lt;code&gt;SIGUSR2&lt;/code&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;code&gt;SIG_ERR&lt;/code&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c299376e21404ac87a5213145b9a48e2b364d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SA_NOCLDSTOP&lt;/code&gt;&lt;code&gt;SA_NOCLDWAIT&lt;/code&gt;&lt;code&gt;SA_NODEFER&lt;/code&gt;&lt;code&gt;SA_ONSTACK&lt;/code&gt;&lt;code&gt;SA_RESETHAND&lt;/code&gt;&lt;code&gt;SA_RESTART&lt;/code&gt;&lt;code&gt;SA_SIGINFO&lt;/code&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;code&gt;SIGALRM&lt;/code&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;code&gt;SIGHUP&lt;/code&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;code&gt;SIGKILL&lt;/code&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;code&gt;SIGQUIT&lt;/code&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;code&gt;SIGSTOP&lt;/code&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;code&gt;SIGTSTP&lt;/code&gt;&lt;code&gt;SIGTTIN&lt;/code&gt;&lt;code&gt;SIGTTOU&lt;/code&gt;&lt;code&gt;SIGUSR1&lt;/code&gt;&lt;code&gt;SIGUSR2&lt;/code&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;code&gt;SIG_ERR&lt;/code&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;&lt;code&gt;ILL_ILLOPC&lt;/code&gt;&lt;code&gt;ILL_ILLOPN&lt;/code&gt;&lt;code&gt;ILL_ILLADR&lt;/code&gt;&lt;code&gt;ILL_ILLTRP&lt;/code&gt;&lt;code&gt;ILL_PRVOPC&lt;/code&gt;&lt;code&gt;ILL_PRVREG&lt;/code&gt;&lt;code&gt;ILL_COPROC&lt;/code&gt;&lt;code&gt;ILL_BADSTK&lt;/code&gt;&lt;code&gt;FPE_INTDIV&lt;/code&gt;&lt;code&gt;FPE_INTOVF&lt;/code&gt;&lt;code&gt;FPE_FLTDIV&lt;/code&gt;&lt;code&gt;FPE_FLTOVF&lt;/code&gt;&lt;code&gt;FPE_FLTUND&lt;/code&gt;&lt;code&gt;FPE_FLTRES&lt;/code&gt;&lt;code&gt;FPE_FLTINV&lt;/code&gt;&lt;code&gt;FPE_FLTSUB&lt;/code&gt;&lt;code&gt;SEGV_MAPERR&lt;/code&gt;&lt;code&gt;SEGV_ACCERR&lt;/code&gt;&lt;code&gt;BUS_ADRALN&lt;/code&gt;&lt;code&gt;BUS_ADRERR&lt;/code&gt;&lt;code&gt;BUS_OBJERR&lt;/code&gt;&lt;code&gt;TRAP_BRKPT&lt;/code&gt;&lt;code&gt;TRAP_TRACE&lt;/code&gt;&lt;code&gt;CLD_EXITED&lt;/code&gt;&lt;code&gt;CLD_KILLED&lt;/code&gt;&lt;code&gt;CLD_DUMPED&lt;/code&gt;&lt;code&gt;CLD_TRAPPED&lt;/code&gt;&lt;code&gt;CLD_STOPPED&lt;/code&gt;&lt;code&gt;CLD_CONTINUED&lt;/code&gt;&lt;code&gt;POLL_IN&lt;/code&gt;&lt;code&gt;POLL_OUT&lt;/code&gt;&lt;code&gt;POLL_MSG&lt;/code&gt;&lt;code&gt;POLL_ERR&lt;/code&gt;&lt;code&gt;POLL_PRI&lt;/code&gt;&lt;code&gt;POLL_HUP&lt;/code&gt;&lt;code&gt;SI_USER&lt;/code&gt;&lt;code&gt;SI_QUEUE&lt;/code&gt;&lt;code&gt;SI_TIMER&lt;/code&gt;&lt;code&gt;SI_ASYNCIO&lt;/code&gt;&lt;code&gt;SI_MESGQ&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SA_NOCLDSTOP&lt;/code&gt;&lt;code&gt;SA_NOCLDWAIT&lt;/code&gt;&lt;code&gt;SA_NODEFER&lt;/code&gt;&lt;code&gt;SA_ONSTACK&lt;/code&gt;&lt;code&gt;SA_RESETHAND&lt;/code&gt;&lt;code&gt;SA_RESTART&lt;/code&gt;&lt;code&gt;SA_SIGINFO&lt;/code&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;code&gt;SIGALRM&lt;/code&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;code&gt;SIGCONT&lt;/code&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;code&gt;SIGHUP&lt;/code&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;code&gt;SIGKILL&lt;/code&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;code&gt;SIGQUIT&lt;/code&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;code&gt;SIGSTOP&lt;/code&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;code&gt;SIGTSTP&lt;/code&gt;&lt;code&gt;SIGTTIN&lt;/code&gt;&lt;code&gt;SIGTTOU&lt;/code&gt;&lt;code&gt;SIGUSR1&lt;/code&gt;&lt;code&gt;SIGUSR2&lt;/code&gt;&lt;code&gt;SIG_BLOCK&lt;/code&gt;&lt;code&gt;SIG_DFL&lt;/code&gt;&lt;code&gt;SIG_ERR&lt;/code&gt;&lt;code&gt;SIG_IGN&lt;/code&gt;&lt;code&gt;SIG_SETMASK&lt;/code&gt;&lt;code&gt;SIG_UNBLOCK&lt;/code&gt;&lt;code&gt;ILL_ILLOPC&lt;/code&gt;&lt;code&gt;ILL_ILLOPN&lt;/code&gt;&lt;code&gt;ILL_ILLADR&lt;/code&gt;&lt;code&gt;ILL_ILLTRP&lt;/code&gt;&lt;code&gt;ILL_PRVOPC&lt;/code&gt;&lt;code&gt;ILL_PRVREG&lt;/code&gt;&lt;code&gt;ILL_COPROC&lt;/code&gt;&lt;code&gt;ILL_BADSTK&lt;/code&gt;&lt;code&gt;FPE_INTDIV&lt;/code&gt;&lt;code&gt;FPE_INTOVF&lt;/code&gt;&lt;code&gt;FPE_FLTDIV&lt;/code&gt;&lt;code&gt;FPE_FLTOVF&lt;/code&gt;&lt;code&gt;FPE_FLTUND&lt;/code&gt;&lt;code&gt;FPE_FLTRES&lt;/code&gt;&lt;code&gt;FPE_FLTINV&lt;/code&gt;&lt;code&gt;FPE_FLTSUB&lt;/code&gt;&lt;code&gt;SEGV_MAPERR&lt;/code&gt;&lt;code&gt;SEGV_ACCERR&lt;/code&gt;&lt;code&gt;BUS_ADRALN&lt;/code&gt;&lt;code&gt;BUS_ADRERR&lt;/code&gt;&lt;code&gt;BUS_OBJERR&lt;/code&gt;&lt;code&gt;TRAP_BRKPT&lt;/code&gt;&lt;code&gt;TRAP_TRACE&lt;/code&gt;&lt;code&gt;CLD_EXITED&lt;/code&gt;&lt;code&gt;CLD_KILLED&lt;/code&gt;&lt;code&gt;CLD_DUMPED&lt;/code&gt;&lt;code&gt;CLD_TRAPPED&lt;/code&gt;&lt;code&gt;CLD_STOPPED&lt;/code&gt;&lt;code&gt;CLD_CONTINUED&lt;/code&gt;&lt;code&gt;POLL_IN&lt;/code&gt;&lt;code&gt;POLL_OUT&lt;/code&gt;&lt;code&gt;POLL_MSG&lt;/code&gt;&lt;code&gt;POLL_ERR&lt;/code&gt;&lt;code&gt;POLL_PRI&lt;/code&gt;&lt;code&gt;POLL_HUP&lt;/code&gt;&lt;code&gt;SI_USER&lt;/code&gt;&lt;code&gt;SI_QUEUE&lt;/code&gt;&lt;code&gt;SI_TIMER&lt;/code&gt;&lt;code&gt;SI_ASYNCIO&lt;/code&gt;&lt;code&gt;SI_MESGQ&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38c777a85cb32d1057baca8609cbf656119cb80c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SA_SIGINFO&lt;/code&gt; can have segmentation faults.</source>
          <target state="translated">&lt;code&gt;SA_SIGINFO&lt;/code&gt; puede tener fallas de segmentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7e2c7e6ad929d3573c5856ceff8f9188c27a5b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;UNTIE&lt;/code&gt; y &lt;code&gt;DESTROY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25561b5fed7a4a64f8e1bdca87ed1d440245d47f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR&lt;/code&gt; is only defined in &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt;.</source>
          <target state="translated">&lt;code&gt;SCALAR&lt;/code&gt; solo se define en &lt;b&gt;Tie :: StdHash&lt;/b&gt; y &lt;b&gt;Tie :: ExtraHash&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c01c53724b947a304f547036cc9f47a6fa4c05b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR&lt;/code&gt;, &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0b10cd155805605b61be127d2cd70120b9eb93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR_CACHE&lt;/code&gt; , &lt;code&gt;LIST_CACHE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SCALAR_CACHE&lt;/code&gt; , &lt;code&gt;LIST_CACHE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aaa537551b85cdf71c32dec5ad4f61c98120314f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALAR_CACHE&lt;/code&gt;, &lt;code&gt;LIST_CACHE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b1d8651e236ece05cb9bdc8409196d019d2844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SDBM_File&lt;/code&gt; doesn't supply an &lt;code&gt;EXISTS&lt;/code&gt; method, so included in this package is a glue module called &lt;code&gt;Memoize::SDBM_File&lt;/code&gt; which does provide one. Use this instead of plain &lt;code&gt;SDBM_File&lt;/code&gt; to store your cache table on disk in an &lt;code&gt;SDBM_File&lt;/code&gt; database:</source>
          <target state="translated">&lt;code&gt;SDBM_File&lt;/code&gt; no proporciona un m&amp;eacute;todo &lt;code&gt;EXISTS&lt;/code&gt; , por lo que en este paquete se incluye un m&amp;oacute;dulo de pegamento llamado &lt;code&gt;Memoize::SDBM_File&lt;/code&gt; que s&amp;iacute; proporciona uno. Use esto en lugar de &lt;code&gt;SDBM_File&lt;/code&gt; simple para almacenar su tabla de cach&amp;eacute; en el disco en una base de datos &lt;code&gt;SDBM_File&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3d15d291ef03c3a83408298c576b7a0813776c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SDBM_File&lt;/code&gt; establishes a connection between a Perl hash variable and a file in SDBM_File format. You can manipulate the data in the file just as if it were in a Perl hash, but when your program exits, the data will remain in the file, to be used the next time your program runs.</source>
          <target state="translated">&lt;code&gt;SDBM_File&lt;/code&gt; establece una conexi&amp;oacute;n entre una variable hash de Perl y un archivo en formato SDBM_File. Puede manipular los datos en el archivo como si estuviera en un hash de Perl, pero cuando su programa sale, los datos permanecer&amp;aacute;n en el archivo, para ser utilizados la pr&amp;oacute;xima vez que se ejecute su programa.</target>
        </trans-unit>
        <trans-unit id="c4a6a48f7293646b32f7105b9bdea7360532c924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINCE&lt;/code&gt; is a time value and &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; is either a distribution pattern or a reference to a list of distribution patterns. The result is the same as &lt;code&gt;list&lt;/code&gt; , but the groups return will be limited to those created after &lt;code&gt;SINCE&lt;/code&gt; and, if specified, in one of the distribution areas in &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;SINCE&lt;/code&gt; es un valor de tiempo y &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; es un patr&amp;oacute;n de distribuci&amp;oacute;n o una referencia a una lista de patrones de distribuci&amp;oacute;n. El resultado es el mismo que la &lt;code&gt;list&lt;/code&gt; a , pero el retorno de los grupos se limitar&amp;aacute; a los creados despu&amp;eacute;s de &lt;code&gt;SINCE&lt;/code&gt; y, si se especifica, en una de las &amp;aacute;reas de distribuci&amp;oacute;n en &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfe49ce3a70cf31931d3a54c8c25aa628361120e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINCE&lt;/code&gt; is a time value and &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; is either a distribution pattern or a reference to a list of distribution patterns. The result is the same as &lt;code&gt;list&lt;/code&gt;, but the groups return will be limited to those created after &lt;code&gt;SINCE&lt;/code&gt; and, if specified, in one of the distribution areas in &lt;code&gt;DISTRIBUTIONS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bd8292a055ab0f605f05aa8dacaa769a46c577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINCE&lt;/code&gt; is a time value. &lt;code&gt;GROUPS&lt;/code&gt; is either a group pattern or a reference to a list of group patterns. &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; is either a distribution pattern or a reference to a list of distribution patterns.</source>
          <target state="translated">&lt;code&gt;SINCE&lt;/code&gt; es un valor de tiempo. &lt;code&gt;GROUPS&lt;/code&gt; es un patr&amp;oacute;n de grupo o una referencia a una lista de patrones de grupo. &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; es un patr&amp;oacute;n de distribuci&amp;oacute;n o una referencia a una lista de patrones de distribuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4586201f8ccc0ac6dd8dff7d071362d41768b9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_options&lt;/code&gt; &amp;mdash; A hashref of &lt;code&gt;SSL_*&lt;/code&gt; &amp;mdash; options to pass through to &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8363925a9881c16e7bf7ee6b67ca48639f9f465b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; were not set under the filter option. And &lt;code&gt;STDIN=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;STDOUT=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; didn't work like non-filter version.</source>
          <target state="translated">&lt;code&gt;STDIN&lt;/code&gt; y &lt;code&gt;STDOUT&lt;/code&gt; no se establecieron en la opci&amp;oacute;n de filtro. Y &lt;code&gt;STDIN=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; y &lt;code&gt;STDOUT=&amp;gt;&lt;i&gt;ENCODING&lt;/i&gt;&lt;/code&gt; no funcionaban como la versi&amp;oacute;n sin filtro.</target>
        </trans-unit>
        <trans-unit id="d1d564c815e062d54f3b0c03413589f3b28724fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRLEN&lt;/code&gt; is an integer type (&lt;code&gt;Size_t&lt;/code&gt;, usually defined as &lt;code&gt;size_t&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1592372e2b3fafd08547f899651586efb80ed37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRLEN&lt;/code&gt; is an integer type (Size_t, usually defined as size_t in</source>
          <target state="translated">&lt;code&gt;STRLEN&lt;/code&gt; es un tipo entero (Size_t, generalmente definido como size_t en</target>
        </trans-unit>
        <trans-unit id="b33a48675865d3f493065a917725902bcbf05b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SVf_READONLY&lt;/code&gt; has been supported here only since perl 5.20. To work with earlier versions as well, use &lt;code&gt;SVf_READONLY|SVs_PADTMP&lt;/code&gt; . &lt;code&gt;SVf_READONLY&lt;/code&gt; does not cause the SV in the pad slot to be marked read-only, but simply tells &lt;code&gt;pad_alloc&lt;/code&gt; that it</source>
          <target state="translated">&lt;code&gt;SVf_READONLY&lt;/code&gt; solo se admite aqu&amp;iacute; desde perl 5.20. Para trabajar tambi&amp;eacute;n con versiones anteriores, use &lt;code&gt;SVf_READONLY|SVs_PADTMP&lt;/code&gt; . &lt;code&gt;SVf_READONLY&lt;/code&gt; no hace que el SV en la ranura del pad est&amp;eacute; marcado como de solo lectura, sino que simplemente le dice a &lt;code&gt;pad_alloc&lt;/code&gt; que</target>
        </trans-unit>
        <trans-unit id="c57ba7d8ee81ae2b947af3a26e8c16d0ee60c971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SVf_READONLY&lt;/code&gt; has been supported here only since perl 5.20. To work with earlier versions as well, use &lt;code&gt;SVf_READONLY|SVs_PADTMP&lt;/code&gt;. &lt;code&gt;SVf_READONLY&lt;/code&gt; does not cause the SV in the pad slot to be marked read-only, but simply tells &lt;code&gt;pad_alloc&lt;/code&gt; that it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e369986ea1a99dba260899dd6cf709f5349ae79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SVt_PVGV&lt;/code&gt; represents a typeglob. If &lt;code&gt;!SvFAKE(sv)&lt;/code&gt;, then it is a real, incoercible typeglob. If &lt;code&gt;SvFAKE(sv)&lt;/code&gt;, then it is a scalar to which a typeglob has been assigned. Assigning to it again will stop it from being a typeglob. &lt;code&gt;SVt_PVLV&lt;/code&gt; represents a scalar that delegates to another scalar behind the scenes. It is used, e.g., for the return value of &lt;code&gt;substr&lt;/code&gt; and for tied hash and array elements. It can hold any scalar value, including a typeglob. &lt;code&gt;SVt_REGEXP&lt;/code&gt; is for regular expressions. &lt;code&gt;SVt_INVLIST&lt;/code&gt; is for Perl core internal use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e78ca14d9f26581f4c407bb8a6a6a1bc456232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SVt_PVIO&lt;/code&gt; is for I/O objects, &lt;code&gt;SVt_PVFM&lt;/code&gt; for formats, &lt;code&gt;SVt_PVCV&lt;/code&gt; for subroutines, &lt;code&gt;SVt_PVHV&lt;/code&gt; for hashes and &lt;code&gt;SVt_PVAV&lt;/code&gt; for arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27a52e4449d5693a3cdcd72a1df598c1a055b71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SVt_PVMG&lt;/code&gt; represents a &quot;normal&quot; scalar (not a typeglob, regular expression, or delegate). Since most scalars do not need all the internal fields of a PVMG, we save memory by allocating smaller structs when possible. All the other types are just simpler forms of &lt;code&gt;SVt_PVMG&lt;/code&gt;, with fewer internal fields. &lt;code&gt;SVt_NULL&lt;/code&gt; can only hold undef. &lt;code&gt;SVt_IV&lt;/code&gt; can hold undef, an integer, or a reference. (&lt;code&gt;SVt_RV&lt;/code&gt; is an alias for &lt;code&gt;SVt_IV&lt;/code&gt;, which exists for backward compatibility.) &lt;code&gt;SVt_NV&lt;/code&gt; can hold any of those or a double. &lt;code&gt;SVt_PV&lt;/code&gt; can only hold &lt;code&gt;undef&lt;/code&gt; or a string. &lt;code&gt;SVt_PVIV&lt;/code&gt; is a superset of &lt;code&gt;SVt_PV&lt;/code&gt; and &lt;code&gt;SVt_IV&lt;/code&gt;. &lt;code&gt;SVt_PVNV&lt;/code&gt; is similar. &lt;code&gt;SVt_PVMG&lt;/code&gt; can hold anything &lt;code&gt;SVt_PVNV&lt;/code&gt; can hold, but it can, but does not have to, be blessed or magical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb24ce9f24ade09b2570ac0d0a13adb33f9e68a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S_IRGRP&lt;/code&gt;&lt;code&gt;S_IROTH&lt;/code&gt;&lt;code&gt;S_IRUSR&lt;/code&gt;&lt;code&gt;S_IRWXG&lt;/code&gt;&lt;code&gt;S_IRWXO&lt;/code&gt;&lt;code&gt;S_IRWXU&lt;/code&gt;&lt;code&gt;S_ISGID&lt;/code&gt;&lt;code&gt;S_ISUID&lt;/code&gt;&lt;code&gt;S_IWGRP&lt;/code&gt;&lt;code&gt;S_IWOTH&lt;/code&gt;&lt;code&gt;S_IWUSR&lt;/code&gt;&lt;code&gt;S_IXGRP&lt;/code&gt;&lt;code&gt;S_IXOTH&lt;/code&gt;&lt;code&gt;S_IXUSR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S_IRGRP&lt;/code&gt;&lt;code&gt;S_IROTH&lt;/code&gt;&lt;code&gt;S_IRUSR&lt;/code&gt;&lt;code&gt;S_IRWXG&lt;/code&gt;&lt;code&gt;S_IRWXO&lt;/code&gt;&lt;code&gt;S_IRWXU&lt;/code&gt;&lt;code&gt;S_ISGID&lt;/code&gt;&lt;code&gt;S_ISUID&lt;/code&gt;&lt;code&gt;S_IWGRP&lt;/code&gt;&lt;code&gt;S_IWOTH&lt;/code&gt;&lt;code&gt;S_IWUSR&lt;/code&gt;&lt;code&gt;S_IXGRP&lt;/code&gt;&lt;code&gt;S_IXOTH&lt;/code&gt;&lt;code&gt;S_IXUSR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b84604732402ed69ebf71e2ffc9500c3d2f8b6a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S_ISBLK&lt;/code&gt;&lt;code&gt;S_ISCHR&lt;/code&gt;&lt;code&gt;S_ISDIR&lt;/code&gt;&lt;code&gt;S_ISFIFO&lt;/code&gt;&lt;code&gt;S_ISREG&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S_ISBLK&lt;/code&gt;&lt;code&gt;S_ISCHR&lt;/code&gt;&lt;code&gt;S_ISDIR&lt;/code&gt;&lt;code&gt;S_ISFIFO&lt;/code&gt;&lt;code&gt;S_ISREG&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f1705fa73ffb1ed6f77c7dd48f4a003fbc42fe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scalar::Util&lt;/code&gt; contains a selection of subroutines that people have expressed would be nice to have in the perl core, but the usage would not really be high enough to warrant the use of a keyword, and the size so small such that being individual extensions would be wasteful.</source>
          <target state="translated">&lt;code&gt;Scalar::Util&lt;/code&gt; contiene una selecci&amp;oacute;n de subrutinas que la gente ha expresado que ser&amp;iacute;a bueno tener en el n&amp;uacute;cleo de perl, pero el uso no ser&amp;iacute;a lo suficientemente alto como para justificar el uso de una palabra clave, y el tama&amp;ntilde;o es tan peque&amp;ntilde;o como para ser extensiones individuales. ser&amp;iacute;a un desperdicio.</target>
        </trans-unit>
        <trans-unit id="b50d9bb17db667cc70af116236c46bee6dc41f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scalar::Util&lt;/code&gt; contains a selection of subroutines that people have expressed would be nice to have in the perl core, but the usage would not really be high enough to warrant the use of a keyword, and the size would be so small that being individual extensions would be wasteful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7320b904a1348ab8ee29f736d629145b7d946f83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scalar::Util&lt;/code&gt; contains both perl and C implementations of many of its functions so that those without access to a C compiler may still use it. However some of the functions are only available when a C compiler was available to compile the XS version of the extension.</source>
          <target state="translated">&lt;code&gt;Scalar::Util&lt;/code&gt; contiene implementaciones de perl y C de muchas de sus funciones, de modo que aquellos que no tienen acceso a un compilador de C a&amp;uacute;n pueden usarlo. Sin embargo, algunas de las funciones solo est&amp;aacute;n disponibles cuando un compilador de C estaba disponible para compilar la versi&amp;oacute;n XS de la extensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ca83b0ae7229fc1620219a7b3cf85ca6438cc57e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Script_Extensions&lt;/code&gt; is thus an improved &lt;code&gt;Script&lt;/code&gt; , in which there are fewer characters in the &lt;code&gt;Common&lt;/code&gt; script, and correspondingly more in other scripts. It is new in Unicode version 6.0, and its data are likely to change significantly in later releases, as things get sorted out. New code should probably be using &lt;code&gt;Script_Extensions&lt;/code&gt; and not plain &lt;code&gt;Script&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Script_Extensions&lt;/code&gt; es, por tanto, un &lt;code&gt;Script&lt;/code&gt; mejorado , en el que hay menos caracteres en el script &lt;code&gt;Common&lt;/code&gt; y, en consecuencia, m&amp;aacute;s en otros scripts. Es nuevo en la versi&amp;oacute;n 6.0 de Unicode, y es probable que sus datos cambien significativamente en versiones posteriores, a medida que se resuelvan las cosas. El nuevo c&amp;oacute;digo probablemente deber&amp;iacute;a usar &lt;code&gt;Script_Extensions&lt;/code&gt; y no un &lt;code&gt;Script&lt;/code&gt; simple .</target>
        </trans-unit>
        <trans-unit id="98a38d834373b59ad3712472e89b591a5277c584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Script_Extensions&lt;/code&gt; is thus an improved &lt;code&gt;Script&lt;/code&gt;, in which there are fewer characters in the &lt;code&gt;Common&lt;/code&gt; script, and correspondingly more in other scripts. It is new in Unicode version 6.0, and its data are likely to change significantly in later releases, as things get sorted out. New code should probably be using &lt;code&gt;Script_Extensions&lt;/code&gt; and not plain &lt;code&gt;Script&lt;/code&gt;. If you compile perl with a Unicode release that doesn't have &lt;code&gt;Script_Extensions&lt;/code&gt;, the single form Perl extensions will instead refer to the plain &lt;code&gt;Script&lt;/code&gt; property. If you compile with a version of Unicode that doesn't have the &lt;code&gt;Script&lt;/code&gt; property, these extensions will not be defined at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e8ac4ebbca5c842f8180e58a17ee29b6639f38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SelfLoader&lt;/code&gt; is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</source>
          <target state="translated">&lt;code&gt;SelfLoader&lt;/code&gt; es mantenido por perl5-porters. Dirija cualquier pregunta a la lista de correo can&amp;oacute;nica. Sin embargo, todo lo que sea aplicable a la versi&amp;oacute;n de CPAN se puede enviar a su responsable.</target>
        </trans-unit>
        <trans-unit id="d6162b1a4ded697c1beb0eed8c402e8d4ddae3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Shift_JIS&lt;/code&gt; has been officialized by JIS X 0208:1997. &lt;a href=&quot;#Microsoft-related-naming-mess&quot;&gt;&quot;Microsoft-related naming mess&quot;&lt;/a&gt; gives details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ded624fc9abf9da5cffcd42e02847813bc5525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket&lt;/code&gt; - networking constants and support functions</source>
          <target state="translated">&lt;code&gt;Socket&lt;/code&gt; : constantes de red y funciones de soporte</target>
        </trans-unit>
        <trans-unit id="4cc0d35bf7a3d530b6b87c692b0ada03ab1edb06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket&lt;/code&gt; a low-level module used by, among other things, the &lt;a href=&quot;IO::Socket&quot;&gt;IO::Socket&lt;/a&gt; family of modules. The following examples demonstrate some low-level uses but a practical program would likely use the higher-level API provided by &lt;code&gt;IO::Socket&lt;/code&gt; or similar instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd3abf31dc1b8226d37ec0f945580ebc843bb88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket&lt;/code&gt; a low-level module used by, among other things, the &lt;a href=&quot;io/socket&quot;&gt;IO::Socket&lt;/a&gt; family of modules. The following examples demonstrate some low-level uses but a practical program would likely use the higher-level API provided by &lt;code&gt;IO::Socket&lt;/code&gt; or similar instead.</source>
          <target state="translated">&lt;code&gt;Socket&lt;/code&gt; un m&amp;oacute;dulo de bajo nivel utilizado, entre otras cosas, por la familia de m&amp;oacute;dulos &lt;a href=&quot;io/socket&quot;&gt;IO :: Socket&lt;/a&gt; . Los siguientes ejemplos demuestran algunos usos de bajo nivel, pero un programa pr&amp;aacute;ctico probablemente usar&amp;iacute;a la API de nivel superior proporcionada por &lt;code&gt;IO::Socket&lt;/code&gt; o similar.</target>
        </trans-unit>
        <trans-unit id="809bfffef87645dfd0ad34a6a4e0e405572b4852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SourceHandlers&lt;/code&gt; must implement the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b8cacd499f22c2ad5bc02ef2c976505abecd19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Storable::drop_utf8&lt;/code&gt; is a blunt tool. There is no facility either to return &lt;b&gt;all&lt;/b&gt; strings as utf8 sequences, or to attempt to convert utf8 data back to 8 bit and &lt;code&gt;croak()&lt;/code&gt; if the conversion fails.</source>
          <target state="translated">&lt;code&gt;Storable::drop_utf8&lt;/code&gt; es una herramienta contundente. No hay ninguna posibilidad para devolver &lt;b&gt;todas las&lt;/b&gt; cadenas como secuencias utf8, ni para intentar convertir los datos utf8 a 8 bits y &lt;code&gt;croak()&lt;/code&gt; si la conversi&amp;oacute;n falla.</target>
        </trans-unit>
        <trans-unit id="0e51b3fbdef231165af8ecaa2816829d5a028adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Storable&lt;/code&gt; isn't a tied hash class at all. You can use it to store a hash to disk and retrieve it again, but you can't modify the hash while it's on the disk. So if you want to store your cache table in a &lt;code&gt;Storable&lt;/code&gt; database, use &lt;code&gt;Memoize::Storable&lt;/code&gt; , which puts a hashlike front-end onto &lt;code&gt;Storable&lt;/code&gt; . The hash table is actually kept in memory, and is loaded from your &lt;code&gt;Storable&lt;/code&gt; file at the time you memoize the function, and stored back at the time you unmemoize the function (or when your program exits):</source>
          <target state="translated">&lt;code&gt;Storable&lt;/code&gt; no es una clase de hash empatada en absoluto. Puede usarlo para almacenar un hash en el disco y recuperarlo nuevamente, pero no puede modificar el hash mientras est&amp;aacute; en el disco. As&amp;iacute; que si usted desea almacenar la tabla de cach&amp;eacute; en un &lt;code&gt;Storable&lt;/code&gt; base de datos, utilice &lt;code&gt;Memoize::Storable&lt;/code&gt; , que pone un front-end hashlike en &lt;code&gt;Storable&lt;/code&gt; . La tabla hash es en realidad mantiene en la memoria, y se carga desde su &lt;code&gt;Storable&lt;/code&gt; archivo en el momento de memoize la funci&amp;oacute;n, y vuelve a almacenar en el momento de unmemoize la funci&amp;oacute;n (o cuando sus salidas del programa):</target>
        </trans-unit>
        <trans-unit id="024381a4fbcca44ca54b885462f57742f85a84e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Storable&lt;/code&gt; isn't a tied hash class at all. You can use it to store a hash to disk and retrieve it again, but you can't modify the hash while it's on the disk. So if you want to store your cache table in a &lt;code&gt;Storable&lt;/code&gt; database, use &lt;code&gt;Memoize::Storable&lt;/code&gt;, which puts a hashlike front-end onto &lt;code&gt;Storable&lt;/code&gt;. The hash table is actually kept in memory, and is loaded from your &lt;code&gt;Storable&lt;/code&gt; file at the time you memoize the function, and stored back at the time you unmemoize the function (or when your program exits):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473d743079fad427614a4cd2d0a5d15458b01a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Strict&lt;/code&gt; will optionally police the values supplied with other options to ensure they are compliant with RFC1952.</source>
          <target state="translated">&lt;code&gt;Strict&lt;/code&gt; controlar&amp;aacute; opcionalmente los valores suministrados con otras opciones para garantizar que cumplan con RFC1952.</target>
        </trans-unit>
        <trans-unit id="39dbb0c5e530bf8b39d2bf1c91a1a199e9df8342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sub::Util&lt;/code&gt; contains a selection of utility subroutines that are useful for operating on subs and CODE references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2634e7ecab96eac51ac5f6841ce76af5900ddfef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SvPVX(cv)&lt;/code&gt; contains just the sub name itself, not including the package. For an AUTOLOAD routine in UNIVERSAL or one of its superclasses, &lt;code&gt;CvSTASH(cv)&lt;/code&gt; returns NULL during a method call on a nonexistent package.</source>
          <target state="translated">&lt;code&gt;SvPVX(cv)&lt;/code&gt; contiene solo el subnombre en s&amp;iacute;, sin incluir el paquete. Para una rutina AUTOLOAD en UNIVERSAL o una de sus superclases, &lt;code&gt;CvSTASH(cv)&lt;/code&gt; devuelve NULL durante una llamada a un m&amp;eacute;todo en un paquete inexistente.</target>
        </trans-unit>
        <trans-unit id="66087de4379e8b4ba6ee68f3ac7224bb04529881" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SvTHINKFIRST&lt;/code&gt; sometimes produces false positives. In those cases &lt;code&gt;sv_force_normal&lt;/code&gt; does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4284263287abb62d9067e62403bfa7c57791af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::delete_package&lt;/code&gt; is a bit too powerful. It undefines every symbol that lives in the specified package. Since perl, for performance reasons, does not perform a symbol table lookup each time a function is called or a global variable is accessed, some code that has already been loaded and that makes use of symbols in package &lt;code&gt;Foo&lt;/code&gt; may stop working after you delete &lt;code&gt;Foo&lt;/code&gt; , even if you reload the &lt;code&gt;Foo&lt;/code&gt; module afterwards.</source>
          <target state="translated">&lt;code&gt;Symbol::delete_package&lt;/code&gt; es demasiado poderoso. Define cada s&amp;iacute;mbolo que vive en el paquete especificado. Desde el Perl, por razones de rendimiento, no se realizar&amp;aacute; una mesa de b&amp;uacute;squeda de s&amp;iacute;mbolos cada vez que una funci&amp;oacute;n se llama o se accede a una variable global, un c&amp;oacute;digo que ya ha sido cargado y que hace uso de s&amp;iacute;mbolos en el paquete de &lt;code&gt;Foo&lt;/code&gt; puede dejar de funcionar despu&amp;eacute;s de eliminar &lt;code&gt;Foo&lt;/code&gt; , incluso si vuelve a cargar el m&amp;oacute;dulo &lt;code&gt;Foo&lt;/code&gt; despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="6b3d9ee00f5d381f7e8217ebb61d529e2ba59b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::delete_package&lt;/code&gt; is a bit too powerful. It undefines every symbol that lives in the specified package. Since perl, for performance reasons, does not perform a symbol table lookup each time a function is called or a global variable is accessed, some code that has already been loaded and that makes use of symbols in package &lt;code&gt;Foo&lt;/code&gt; may stop working after you delete &lt;code&gt;Foo&lt;/code&gt;, even if you reload the &lt;code&gt;Foo&lt;/code&gt; module afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d33e995b16d967301c7242758ce1abfd4f052c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::delete_package&lt;/code&gt; wipes out a whole package namespace. Note this routine is not exported by default--you may want to import it explicitly.</source>
          <target state="translated">&lt;code&gt;Symbol::delete_package&lt;/code&gt; borra todo el espacio de nombres de un paquete. Tenga en cuenta que esta rutina no se exporta de forma predeterminada; es posible que desee importarla expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="2881407c50abb98d95f598118df2cf0beb51f77a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::geniosym&lt;/code&gt; creates an anonymous IO handle. This can be assigned into an existing glob without affecting the non-IO portions of the glob.</source>
          <target state="translated">&lt;code&gt;Symbol::geniosym&lt;/code&gt; crea un identificador IO an&amp;oacute;nimo. Esto se puede asignar a un glob existente sin afectar las porciones que no son IO del glob.</target>
        </trans-unit>
        <trans-unit id="6304710bfcc18035fc96ecea6a7a7d1b4365f2cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::gensym&lt;/code&gt; creates an anonymous glob and returns a reference to it. Such a glob reference can be used as a file or directory handle.</source>
          <target state="translated">&lt;code&gt;Symbol::gensym&lt;/code&gt; crea un glob an&amp;oacute;nimo y devuelve una referencia a &amp;eacute;l. Una referencia global de este tipo se puede utilizar como identificador de archivo o directorio.</target>
        </trans-unit>
        <trans-unit id="3b1df54b779d123e961a097198a5d301ff9a76cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::qualify&lt;/code&gt; turns unqualified symbol names into qualified variable names (e.g. &quot;myvar&quot; -&amp;gt; &quot;MyPackage::myvar&quot;). If it is given a second parameter, &lt;code&gt;qualify&lt;/code&gt; uses it as the default package; otherwise, it uses the package of its caller. Regardless, global variable names (e.g. &quot;STDOUT&quot;, &quot;ENV&quot;, &quot;SIG&quot;) are always qualified with &quot;main::&quot;.</source>
          <target state="translated">&lt;code&gt;Symbol::qualify&lt;/code&gt; convierte nombres de s&amp;iacute;mbolos no calificados en nombres de variables calificados (por ejemplo, &quot;myvar&quot; -&amp;gt; &quot;MyPackage :: myvar&quot;). Si se le da un segundo par&amp;aacute;metro, &lt;code&gt;qualify&lt;/code&gt; lo usa como el paquete predeterminado; de lo contrario, utiliza el paquete de su llamador. Independientemente, los nombres de variables globales (por ejemplo, &quot;STDOUT&quot;, &quot;ENV&quot;, &quot;SIG&quot;) siempre se califican con &quot;main ::&quot;.</target>
        </trans-unit>
        <trans-unit id="36d3940d34d2f6d97b8cbcc2b62c6ada7464408e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::qualify_to_ref&lt;/code&gt; is just like &lt;code&gt;Symbol::qualify&lt;/code&gt; except that it returns a glob ref rather than a symbol name, so you can use the result even if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'refs'&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;Symbol::qualify_to_ref&lt;/code&gt; es como &lt;code&gt;Symbol::qualify&lt;/code&gt; excepto que devuelve una referencia pegote en lugar de un nombre de s&amp;iacute;mbolo, por lo que puede utilizar el resultado, aunque &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'refs'&lt;/code&gt; est&amp;aacute; en vigor.</target>
        </trans-unit>
        <trans-unit id="59f598418ef0f7104504f018878b34817a42b6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol::qualify_to_ref&lt;/code&gt; is just like &lt;code&gt;Symbol::qualify&lt;/code&gt; except that it returns a glob ref rather than a symbol name, so you can use the result even if &lt;code&gt;use strict 'refs'&lt;/code&gt; is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b97cf7d30005de1a6539396647cc18ee3bfc6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; exports the following &lt;code&gt;Exporter&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; exporta las siguientes etiquetas de &lt;code&gt;Exporter&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c813dc28c2bae993e91667c602bb5be44271d404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; is a core module, part of the standard Perl distribution since 1990. At this time, modules as we know them didn't exist, the Perl library was a collection of</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; es un m&amp;oacute;dulo central, parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl desde 1990. En este momento, los m&amp;oacute;dulos como los conocemos no exist&amp;iacute;an, la biblioteca de Perl era una colecci&amp;oacute;n de</target>
        </trans-unit>
        <trans-unit id="7568cb65c9c188200eec96ea14f56d0d837a835e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; is an interface to the UNIX &lt;code&gt;syslog(3)&lt;/code&gt; program. Call &lt;code&gt;syslog()&lt;/code&gt; with a string priority and a list of &lt;code&gt;&lt;a href=&quot;../functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; args just like &lt;code&gt;syslog(3)&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; es una interfaz para el programa &lt;code&gt;syslog(3)&lt;/code&gt; UNIX . Llame a &lt;code&gt;syslog()&lt;/code&gt; con una prioridad de cadena y una lista de &lt;code&gt;&lt;a href=&quot;../functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; de printf () como &lt;code&gt;syslog(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7cb250e75d0a05a41294fd8e9209a2f4b75b7a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; is an interface to the UNIX &lt;code&gt;syslog(3)&lt;/code&gt; program. Call &lt;code&gt;syslog()&lt;/code&gt; with a string priority and a list of &lt;code&gt;printf()&lt;/code&gt; args just like &lt;code&gt;syslog(3)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5764b6680823ce2de6ec417f2c5a5cac4de54ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; version v0.07 and older passed the &lt;code&gt;$message&lt;/code&gt; as the formatting string to &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; even when no formatting arguments were provided. If the code calling &lt;code&gt;syslog()&lt;/code&gt; might execute with older versions of this module, make sure to call the function as &lt;code&gt;syslog($priority, &quot;%s&quot;, $message)&lt;/code&gt; instead of &lt;code&gt;syslog($priority,
$message)&lt;/code&gt; . This protects against hostile formatting sequences that might show up if $message contains tainted data.</source>
          <target state="translated">&lt;code&gt;Sys::Syslog&lt;/code&gt; versi&amp;oacute;n v0.07 y anteriores pas&amp;oacute; el &lt;code&gt;$message&lt;/code&gt; como cadena de formato a &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; incluso cuando no se proporcionaron argumentos de formato. Si el c&amp;oacute;digo que llama a &lt;code&gt;syslog()&lt;/code&gt; puede ejecutarse con versiones anteriores de este m&amp;oacute;dulo, aseg&amp;uacute;rese de llamar a la funci&amp;oacute;n como &lt;code&gt;syslog($priority, &quot;%s&quot;, $message)&lt;/code&gt; lugar de &lt;code&gt;syslog($priority, $message)&lt;/code&gt; . Esto protege contra secuencias de formato hostiles que pueden aparecer si $ message contiene datos contaminados.</target>
        </trans-unit>
        <trans-unit id="86d4bf93b3e0c06356477292e881dce3b09a7466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sys::Syslog&lt;/code&gt; version v0.07 and older passed the &lt;code&gt;$message&lt;/code&gt; as the formatting string to &lt;code&gt;sprintf()&lt;/code&gt; even when no formatting arguments were provided. If the code calling &lt;code&gt;syslog()&lt;/code&gt; might execute with older versions of this module, make sure to call the function as &lt;code&gt;syslog($priority, &quot;%s&quot;, $message)&lt;/code&gt; instead of &lt;code&gt;syslog($priority, $message)&lt;/code&gt;. This protects against hostile formatting sequences that might show up if $message contains tainted data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5313b78f03141f017e23634ef660fed87d25a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Base&lt;/code&gt; provides callback management.</source>
          <target state="translated">&lt;code&gt;TAP::Base&lt;/code&gt; proporciona gesti&amp;oacute;n de devoluci&amp;oacute;n de llamada.</target>
        </trans-unit>
        <trans-unit id="3ad2ff19a7b9905abe9ca7c29a86e5aac4455383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Harness&lt;/code&gt; is designed to be easy to configure.</source>
          <target state="translated">&lt;code&gt;TAP::Harness&lt;/code&gt; est&amp;aacute; dise&amp;ntilde;ado para ser f&amp;aacute;cil de configurar.</target>
        </trans-unit>
        <trans-unit id="f98ff2be528a35677bb4032abf8db41c2f2dfe55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Object&lt;/code&gt; provides a default constructor and exception model for all &lt;code&gt;TAP::*&lt;/code&gt; classes. Exceptions are raised using &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TAP::Object&lt;/code&gt; proporciona un constructor predeterminado y un modelo de excepci&amp;oacute;n para todas las clases &lt;code&gt;TAP::*&lt;/code&gt; . Las excepciones se plantean con &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b899027613718a03007c82fa84c8a823843ed900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Object&lt;/code&gt; provides a default constructor and exception model for all &lt;code&gt;TAP::*&lt;/code&gt; classes. Exceptions are raised using &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de08af296bc81bae0a502eeab38906f9d38f6946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; collects parser objects and allows reporting/querying their aggregate results.</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; recopila objetos del analizador y permite informar / consultar sus resultados agregados.</target>
        </trans-unit>
        <trans-unit id="7b309d48f4b14e531b98f29e3bd66e6ee2d2c4c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Grammar&lt;/code&gt; tokenizes lines from a &lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and constructs &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclasses to represent the tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b643e4bccf3d2c6b004d8c272aaeaacb6b03e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Grammar&lt;/code&gt; tokenizes lines from a &lt;a href=&quot;iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and constructs &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclasses to represent the tokens.</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Grammar&lt;/code&gt; tokeniza l&amp;iacute;neas de un &lt;a href=&quot;iterator&quot;&gt;TAP :: Parser :: Iterator&lt;/a&gt; y construye subclases &lt;a href=&quot;result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; para representar los tokens.</target>
        </trans-unit>
        <trans-unit id="8b8f01afae57ad3cba82a74e20949b48d80c17d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; gathers input from multiple TAP::Parsers. Internally it calls select on the input file handles for those parsers to wait for one or more of them to have input available.</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; recopila la entrada de varios TAP :: Parsers. Internamente, llama a select en los identificadores de archivos de entrada para que esos analizadores esperen a que uno o m&amp;aacute;s de ellos tengan entrada disponible.</target>
        </trans-unit>
        <trans-unit id="adb9813c19e749dc873795d47deb2d1cf1c465d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser::Result-&amp;gt;new&lt;/code&gt; is never called, $tokens are reblessed. This</source>
          <target state="translated">&lt;code&gt;TAP::Parser::Result-&amp;gt;new&lt;/code&gt; nunca se llama, $ tokens se vuelven a bendecir. Esta</target>
        </trans-unit>
        <trans-unit id="8722f3aa3dc33f241bd8fa9f537d5593b8612d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser&lt;/code&gt; is designed to produce a proper parse of TAP output. For an example of how to run tests through this module, see the simple harnesses &lt;code&gt;examples/&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;TAP::Parser&lt;/code&gt; est&amp;aacute; dise&amp;ntilde;ado para producir un an&amp;aacute;lisis adecuado de la salida TAP. Para ver un ejemplo de c&amp;oacute;mo ejecutar pruebas a trav&amp;eacute;s de este m&amp;oacute;dulo, consulte los &lt;code&gt;examples/&lt;/code&gt; arneses simples / .</target>
        </trans-unit>
        <trans-unit id="3e962c9f0a5edfb3da21e852081d0aee53aaa1c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser&lt;/code&gt; is designed to produce a proper parse of TAP output. For an example of how to run tests through this module, see the simple harnesses &lt;code&gt;examples/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb94de0078d3867d1d98a2ebe12069e8acf7897b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAP::Parser&lt;/code&gt; plugins let you change the way TAP is</source>
          <target state="translated">&lt;code&gt;TAP::Parser&lt;/code&gt; complementos del analizador le permiten cambiar la forma en que TAP es</target>
        </trans-unit>
        <trans-unit id="a472c92eb1c8099613c1ca25abb3493a801d9a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TCSADRAIN&lt;/code&gt;&lt;code&gt;TCSANOW&lt;/code&gt;&lt;code&gt;TCOON&lt;/code&gt;&lt;code&gt;TCIOFLUSH&lt;/code&gt;&lt;code&gt;TCOFLUSH&lt;/code&gt;&lt;code&gt;TCION&lt;/code&gt;&lt;code&gt;TCIFLUSH&lt;/code&gt;&lt;code&gt;TCSAFLUSH&lt;/code&gt;&lt;code&gt;TCIOFF&lt;/code&gt;&lt;code&gt;TCOOFF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TCSADRAIN&lt;/code&gt;&lt;code&gt;TCSANOW&lt;/code&gt;&lt;code&gt;TCOON&lt;/code&gt;&lt;code&gt;TCIOFLUSH&lt;/code&gt;&lt;code&gt;TCOFLUSH&lt;/code&gt;&lt;code&gt;TCION&lt;/code&gt;&lt;code&gt;TCIFLUSH&lt;/code&gt;&lt;code&gt;TCSAFLUSH&lt;/code&gt;&lt;code&gt;TCIOFF&lt;/code&gt;&lt;code&gt;TCOOFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c88141d29e69da723c81825ed4aa28f85fe2dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TMP&lt;/code&gt; or &lt;code&gt;TEMP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TMP&lt;/code&gt; o &lt;code&gt;TEMP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb68f2209ae08b4353f90118c698f56aaac40566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Test::Harness&lt;/code&gt; sets these before executing the individual tests.</source>
          <target state="translated">&lt;code&gt;Test::Harness&lt;/code&gt; configura antes de ejecutar las pruebas individuales.</target>
        </trans-unit>
        <trans-unit id="eedf6734cec83fdc2822657eca30ba2f340abb82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::fill()&lt;/code&gt; is a simple multi-paragraph formatter. It formats each paragraph separately and then joins them together when it's done. It will destroy any whitespace in the original text. It breaks text into paragraphs by looking for whitespace after a newline. In other respects, it acts like wrap().</source>
          <target state="translated">&lt;code&gt;Text::Wrap::fill()&lt;/code&gt; es un formateador simple de varios p&amp;aacute;rrafos. Formatea cada p&amp;aacute;rrafo por separado y luego los une cuando est&amp;aacute; listo. Destruir&amp;aacute; cualquier espacio en blanco en el texto original. Divide el texto en p&amp;aacute;rrafos buscando espacios en blanco despu&amp;eacute;s de una nueva l&amp;iacute;nea. En otros aspectos, act&amp;uacute;a como wrap ().</target>
        </trans-unit>
        <trans-unit id="5d81942a81d54f92e87b372edc3a62cc7826a722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; has a number of variables that control its behavior. Because other modules might be using &lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; it is suggested that you leave these variables alone! If you can't do that, then use &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;($Text::Wrap::VARIABLE) = YOURVALUE&lt;/code&gt; when you change the values so that the original value is restored. This &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; trick will not work if you import the variable into your own namespace.</source>
          <target state="translated">&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; tiene una serie de variables que controlan su comportamiento. Debido a que otros m&amp;oacute;dulos podr&amp;iacute;an estar usando &lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; , se sugiere que deje estas variables en paz. Si no puede hacer eso, use &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;($Text::Wrap::VARIABLE) = YOURVALUE&lt;/code&gt; cuando cambie los valores para que se restaure el valor original. Este truco &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; no funcionar&amp;aacute; si importa la variable a su propio espacio de nombres.</target>
        </trans-unit>
        <trans-unit id="69a0bd70d9ae28dd6ce2749daef18d66848e3316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; has a number of variables that control its behavior. Because other modules might be using &lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; it is suggested that you leave these variables alone! If you can't do that, then use &lt;code&gt;local($Text::Wrap::VARIABLE) = YOURVALUE&lt;/code&gt; when you change the values so that the original value is restored. This &lt;code&gt;local()&lt;/code&gt; trick will not work if you import the variable into your own namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1615c49151b3deef2ed2f37c67cec6329aa12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; is a very simple paragraph formatter. It formats a single paragraph at a time by breaking lines at word boundaries. Indentation is controlled for the first line (&lt;code&gt;$initial_tab&lt;/code&gt; ) and all subsequent lines (&lt;code&gt;$subsequent_tab&lt;/code&gt; ) independently. Please note: &lt;code&gt;$initial_tab&lt;/code&gt; and &lt;code&gt;$subsequent_tab&lt;/code&gt; are the literal strings that will be used: it is unlikely you would want to pass in a number.</source>
          <target state="translated">&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; es un formateador de p&amp;aacute;rrafos muy simple. Formatea un solo p&amp;aacute;rrafo a la vez dividiendo las l&amp;iacute;neas en los l&amp;iacute;mites de las palabras. La sangr&amp;iacute;a se controla para la primera l&amp;iacute;nea ( &lt;code&gt;$initial_tab&lt;/code&gt; ) y todas las l&amp;iacute;neas siguientes ( &lt;code&gt;$subsequent_tab&lt;/code&gt; ) de forma independiente. Tenga en cuenta: &lt;code&gt;$initial_tab&lt;/code&gt; y &lt;code&gt;$subsequent_tab&lt;/code&gt; son las cadenas literales que se utilizar&amp;aacute;n: es poco probable que desee pasar un n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="1a4400b49979b10ec4d4af893f50bf7048146603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; is a very simple paragraph formatter. It formats a single paragraph at a time by breaking lines at word boundaries. Indentation is controlled for the first line (&lt;code&gt;$initial_tab&lt;/code&gt;) and all subsequent lines (&lt;code&gt;$subsequent_tab&lt;/code&gt;) independently. Please note: &lt;code&gt;$initial_tab&lt;/code&gt; and &lt;code&gt;$subsequent_tab&lt;/code&gt; are the literal strings that will be used: it is unlikely you would want to pass in a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbadf232b07d6755d5f86328062ab50e3309a385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; starts its work by expanding all the tabs in its input into spaces. The last thing it does it to turn spaces back into tabs. If you do not want tabs in your results, set &lt;code&gt;$Text::Wrap::unexpand&lt;/code&gt; to a false value. Likewise if you do not want to use 8-character tabstops, set &lt;code&gt;$Text::Wrap::tabstop&lt;/code&gt; to the number of characters you do want for your tabstops.</source>
          <target state="translated">&lt;code&gt;Text::Wrap::wrap()&lt;/code&gt; comienza su trabajo expandiendo todas las pesta&amp;ntilde;as en su entrada en espacios. Lo &amp;uacute;ltimo que hace es volver a convertir espacios en pesta&amp;ntilde;as. Si no desea pesta&amp;ntilde;as en sus resultados, establezca &lt;code&gt;$Text::Wrap::unexpand&lt;/code&gt; en un valor falso. Del mismo modo, si no desea utilizar tabstops de 8 caracteres, configure &lt;code&gt;$Text::Wrap::tabstop&lt;/code&gt; en el n&amp;uacute;mero de caracteres que desee para sus tabuladores.</target>
        </trans-unit>
        <trans-unit id="467f24162cc06d04d5ab812af9c45bbabafd7b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Thread-&amp;amp;gt;new&lt;/code&gt; returns a thread object representing the newly created thread.</source>
          <target state="translated">&lt;code&gt;Thread-&amp;amp;gt;new&lt;/code&gt; devuelve un objeto de hilo que representa el hilo reci&amp;eacute;n creado.</target>
        </trans-unit>
        <trans-unit id="ebe5c176939c1f2944d0030c60f6312e99727e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Thread-&amp;gt;new&lt;/code&gt; returns a thread object representing the newly created thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b370124e5ee91deba09a04327dc32dee66471f55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; maintains an internal table of the byte offset of each record it has seen in the file.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; mantiene una tabla interna del desplazamiento de bytes de cada registro que ha visto en el archivo.</target>
        </trans-unit>
        <trans-unit id="9815aecf90eb2e223c97ce6c8d16c9260911c408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; promises that the following sequence of operations will be safe:</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; promete que la siguiente secuencia de operaciones ser&amp;aacute; segura:</target>
        </trans-unit>
        <trans-unit id="2d63721817865519a8d0f071612094f774c55373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; represents a regular text file as a Perl array. Each element in the array corresponds to a record in the file. The first line of the file is element 0 of the array; the second line is element 1, and so on.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; representa un archivo de texto normal como una matriz de Perl. Cada elemento de la matriz corresponde a un registro en el archivo. La primera l&amp;iacute;nea del archivo es el elemento 0 de la matriz; la segunda l&amp;iacute;nea es el elemento 1, y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="b4a3d66b09517db449a91c4ca42dd41163f93bba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; tries to guess when deferred writing might be helpful, and to turn it on and off automatically.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; intenta adivinar cu&amp;aacute;ndo la escritura diferida podr&amp;iacute;a ser &amp;uacute;til y activarla y desactivarla autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="014103b958bc396d81fb1efdb14e81091ca5d049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; version 0.96 is copyright (C) 2003 Mark Jason Dominus.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; versi&amp;oacute;n 0.96 del archivo es copyright (C) 2003 Mark Jason Dominus.</target>
        </trans-unit>
        <trans-unit id="a3a9d266a8d034b3093885f52948252f982c081d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::File&lt;/code&gt; version 0.98 comes with ABSOLUTELY NO WARRANTY. For details, see the license.</source>
          <target state="translated">&lt;code&gt;Tie::File&lt;/code&gt; versi&amp;oacute;n 0.98 del archivo viene SIN ABSOLUTAMENTE NINGUNA GARANT&amp;Iacute;A. Para obtener m&amp;aacute;s detalles, consulte la licencia.</target>
        </trans-unit>
        <trans-unit id="765e809d133387f24d23e5776c542da23425f9d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::Scalar&lt;/code&gt; provides all the necessary methods, but one should realize they do not do anything useful. Calling &lt;code&gt;Tie::Scalar::FETCH&lt;/code&gt; or &lt;code&gt;Tie::Scalar::STORE&lt;/code&gt; results in a (trappable) croak. And if you inherit from &lt;code&gt;Tie::Scalar&lt;/code&gt; , you</source>
          <target state="translated">&lt;code&gt;Tie::Scalar&lt;/code&gt; proporciona todos los m&amp;eacute;todos necesarios, pero uno debe darse cuenta de que no hacen nada &amp;uacute;til. Llamar a &lt;code&gt;Tie::Scalar::FETCH&lt;/code&gt; o &lt;code&gt;Tie::Scalar::STORE&lt;/code&gt; resulta en un croar (atrapable). Y si hereda de &lt;code&gt;Tie::Scalar&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="ac13541215c4d1a9af1df37a1b7a886fffccb92c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tie::Scalar&lt;/code&gt; provides all the necessary methods, but one should realize they do not do anything useful. Calling &lt;code&gt;Tie::Scalar::FETCH&lt;/code&gt; or &lt;code&gt;Tie::Scalar::STORE&lt;/code&gt; results in a (trappable) croak. And if you inherit from &lt;code&gt;Tie::Scalar&lt;/code&gt;, you</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9908dcbb0c04058ac728c44f2b059df9c83be077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tk::Canvas&lt;/code&gt; ) for which the linker option file will be produced.</source>
          <target state="translated">&lt;code&gt;Tk::Canvas&lt;/code&gt; ) para el que se producir&amp;aacute; el archivo de opciones del enlazador.</target>
        </trans-unit>
        <trans-unit id="018d5c30df5c224cc609d723500707f023fa7dec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tk::Canvas&lt;/code&gt;) for which the linker option file will be produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a924c42dbac826b648276a4a5da21c2db2545b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UCS-2&lt;/code&gt; is an exception. Unlike others, this is an alias of UCS-2BE. UCS-2 is already registered by IANA and others that way.</source>
          <target state="translated">&lt;code&gt;UCS-2&lt;/code&gt; es una excepci&amp;oacute;n. A diferencia de otros, este es un alias de UCS-2BE. UCS-2 ya est&amp;aacute; registrado por IANA y otros de esa manera.</target>
        </trans-unit>
        <trans-unit id="3b8d5cd56952f7e9b2404061a72c2a7e45a2683c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; and &lt;code&gt;INIT&lt;/code&gt; code blocks are useful to catch the transition between the compilation phase and the execution phase of the main program.</source>
          <target state="translated">&lt;code&gt;UNITCHECK&lt;/code&gt; bloques de c&amp;oacute;digo UNITCHECK , &lt;code&gt;CHECK&lt;/code&gt; e &lt;code&gt;INIT&lt;/code&gt; son &amp;uacute;tiles para captar la transici&amp;oacute;n entre la fase de compilaci&amp;oacute;n y la fase de ejecuci&amp;oacute;n del programa principal.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
