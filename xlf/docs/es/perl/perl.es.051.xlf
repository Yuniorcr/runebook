<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="07007b5c528b418e598c85ad9c23a78efd0e869d" translate="yes" xml:space="preserve">
          <source>Returns a bool indicating whether this typemap is entirely empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fc07c0447f64425adb54b289d65069de051cdf" translate="yes" xml:space="preserve">
          <source>Returns a boolean as to whether or not warnings are enabled for the warning category &lt;code&gt;w&lt;/code&gt;. If the category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN_d&quot;&gt;&quot;ckWARN_d&quot;&lt;/a&gt; macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bc6bed79c633675772b31bc4fa3dca3eedabbc" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See &lt;code&gt;&lt;a href=&quot;#SvOK&quot;&gt;&quot;SvOK&quot;&lt;/a&gt;&lt;/code&gt; for a defined/undefined test. Does not handle 'get' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a0e505cf9d3cfebfe905e01ba1c1506afb49f3" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See &lt;code&gt;&lt;a href=&quot;#SvOK&quot;&gt;&quot;SvOK&quot;&lt;/a&gt;&lt;/code&gt; for a defined/undefined test. Handles 'get' magic unless the scalar is already &lt;code&gt;SvPOK&lt;/code&gt;, &lt;code&gt;SvIOK&lt;/code&gt; or &lt;code&gt;SvNOK&lt;/code&gt; (the public, not the private flags).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668940e83ff2919758ac366d8681b177e2201df1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See SvOK() for a defined/undefined test. Does not handle 'get' magic.</source>
          <target state="translated">Devuelve un booleano indicando si Perl evaluaría el SV como verdadero o falso.Ver SvOK()para una prueba definida/indefinida.No maneja la magia de 'get'.</target>
        </trans-unit>
        <trans-unit id="cd02b6c22910061fceaedd5fa468528ac5b1dd09" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See SvOK() for a defined/undefined test. Handles 'get' magic unless the scalar is already SvPOK, SvIOK or SvNOK (the public, not the private flags).</source>
          <target state="translated">Devuelve un booleano indicando si Perl evaluaría el SV como verdadero o falso.Ver SvOK()para una prueba definida/indefinida.Maneja &quot;conseguir&quot; magia a menos que el escalar ya sea SvPOK,SvIOK o SvNOK (el público,no las banderas privadas).</target>
        </trans-unit>
        <trans-unit id="7f02d0a25d86de18bb57f5e03b59dde94b0fed79" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether or not this module can actually generate colored output. This will be false if it could not load the modules needed for the current platform.</source>
          <target state="translated">Devuelve un booleano que indica si este módulo puede o no generar realmente una salida en color.Esto sería falso si no pudiera cargar los módulos necesarios para la plataforma actual.</target>
        </trans-unit>
        <trans-unit id="ace1e66ae096c5c691e93ff90dfb3e10f7d8bdc2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV (or the one it references) is a REGEXP.</source>
          <target state="translated">Devuelve un booleano indicando si el SV (o al que hace referencia)es un REGEXP.</target>
        </trans-unit>
        <trans-unit id="d480e6ec9e136a87d7eef30e55c4b80326f8e39f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains a signed integer.</source>
          <target state="translated">Devuelve un booleano que indica si el SV contiene un entero firmado.</target>
        </trans-unit>
        <trans-unit id="3e14793b0a0f0860cac0b1fb7213102642df0e87" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains a v-string.</source>
          <target state="translated">Devuelve un booleano que indica si la SV contiene una cuerda en V.</target>
        </trans-unit>
        <trans-unit id="d23b2152485aef3ea2aa81e1117405592429acf1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains an integer that must be interpreted as unsigned. A non-negative integer whose value is within the range of both an IV and a UV may be be flagged as either SvUOK or SVIOK.</source>
          <target state="translated">Devuelve un booleano que indica si la SV contiene un entero que debe ser interpretado como sin signo.Un entero no negativo cuyo valor está dentro del rango de un IV y un UV puede ser marcado como SvUOK o SVIOK.</target>
        </trans-unit>
        <trans-unit id="0097527a63f74afbd5ee84dc0ce46793fd440ae9" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains an integer that must be interpreted as unsigned. A non-negative integer whose value is within the range of both an IV and a UV may be flagged as either &lt;code&gt;SvUOK&lt;/code&gt; or &lt;code&gt;SvIOK&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263c966945712aface24be38355efccc0bf91800" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is Copy-On-Write shared hash key scalar.</source>
          <target state="translated">Devuelve un booleano que indica si el SV es un escalador de clave hash compartida Copy-On-Write.</target>
        </trans-unit>
        <trans-unit id="e89f32874b6d95f19296b47af499fd6f09ad4b4c" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is an RV pointing to a blessed object. If the SV is not an RV, or if the object is not blessed, then this will return false.</source>
          <target state="translated">Devuelve un booleano que indica si el SV es un RV que apunta a un objeto bendecido.Si el SV no es un RV,o si el objeto no está bendecido,entonces esto devolverá falso.</target>
        </trans-unit>
        <trans-unit id="f55645e10cb8cee78f3bc4bf7fc67c26bd963878" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is an object reference and is derived from the specified class, respecting any &lt;code&gt;isa()&lt;/code&gt; method overloading it may have. Returns false if &lt;code&gt;sv&lt;/code&gt; is not a reference to an object, or is not derived from the specified class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04990515322216a31818edb155125651a72d5c2f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is blessed into the specified class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af59aa44656303bd511d51fde294882427039f5" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is blessed into the specified class. This does not check for subtypes; use &lt;code&gt;sv_derived_from&lt;/code&gt; to verify an inheritance relationship.</source>
          <target state="translated">Devuelve un booleano que indica si el SV est&amp;aacute; bendecido en la clase especificada. Esto no busca subtipos; use &lt;code&gt;sv_derived_from&lt;/code&gt; para verificar una relaci&amp;oacute;n de herencia.</target>
        </trans-unit>
        <trans-unit id="865393ef44edd13c13e1aec1f18c188fdd309444" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is derived from the specified class</source>
          <target state="translated">Devuelve un booleano que indica si el SV se deriva de la clase especificada</target>
        </trans-unit>
        <trans-unit id="4b80301adae3b0f6838e222f02e0e77c5bb14dcf" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV performs a specific, named role. The SV can be a Perl object or the name of a Perl class.</source>
          <target state="translated">Devuelve un booleano que indica si el SV desempeña un papel específico,nombrado.El SV puede ser un objeto Perl o el nombre de una clase Perl.</target>
        </trans-unit>
        <trans-unit id="30818612d42e09399d46471e4f58bf49c93d7a0a" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the package (if provided) or any package (otherwise) is eligible for indexing by PAUSE, the Perl Authors Upload Server. Note This only checks for valid &lt;code&gt;package&lt;/code&gt; declarations, and does not take any ownership information into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbf91f5e759ae1bbefa87328b78d816e0160f0f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the first character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Start&lt;/code&gt; . The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDFIRST_A&lt;/code&gt; , &lt;code&gt;isIDFIRST_L1&lt;/code&gt; , &lt;code&gt;isIDFIRST_uni&lt;/code&gt; , &lt;code&gt;isIDFIRST_utf8&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado puede ser el primer car&amp;aacute;cter de un identificador. Esto es muy &lt;code&gt;XID_Start&lt;/code&gt; , pero no lo mismo, a la propiedad oficial de Unicode XID_Start . La diferencia es que esto devuelve verdadero solo si el car&amp;aacute;cter de entrada tambi&amp;eacute;n coincide con &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isIDFIRST_A&lt;/code&gt; , &lt;code&gt;isIDFIRST_L1&lt;/code&gt; , &lt;code&gt;isIDFIRST_uni&lt;/code&gt; , &lt;code&gt;isIDFIRST_utf8&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt; e &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cccfd1f9259cea413a0a3382d7e42d35fba8c54" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the first character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Start&lt;/code&gt;. The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;&quot;isWORDCHAR&quot;&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDFIRST_A&lt;/code&gt;, &lt;code&gt;isIDFIRST_L1&lt;/code&gt;, &lt;code&gt;isIDFIRST_uvchr&lt;/code&gt;, &lt;code&gt;isIDFIRST_utf8&lt;/code&gt;, &lt;code&gt;isIDFIRST_utf8_safe&lt;/code&gt;, &lt;code&gt;isIDFIRST_LC&lt;/code&gt;, &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt;, &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt;, and &lt;code&gt;isIDFIRST_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40ef581f93d7f5544352568ae56e4d7279b6037" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the second or succeeding character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Continue&lt;/code&gt; . The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDCONT_A&lt;/code&gt; , &lt;code&gt;isIDCONT_L1&lt;/code&gt; , &lt;code&gt;isIDCONT_uni&lt;/code&gt; , &lt;code&gt;isIDCONT_utf8&lt;/code&gt; , &lt;code&gt;isIDCONT_LC&lt;/code&gt; , &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado puede ser el segundo car&amp;aacute;cter o el siguiente de un identificador. Esto se parece mucho a la propiedad oficial de Unicode &lt;code&gt;XID_Continue&lt;/code&gt; , pero no es exactamente igual . La diferencia es que esto devuelve verdadero solo si el car&amp;aacute;cter de entrada tambi&amp;eacute;n coincide con &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isIDCONT_A&lt;/code&gt; , &lt;code&gt;isIDCONT_L1&lt;/code&gt; , &lt;code&gt;isIDCONT_uni&lt;/code&gt; , &lt;code&gt;isIDCONT_utf8&lt;/code&gt; , &lt;code&gt;isIDCONT_LC&lt;/code&gt; , &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt; e &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a30dcc9e2b3e1b5a72e6b3f35b9e93252165eb" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the second or succeeding character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Continue&lt;/code&gt;. The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;&quot;isWORDCHAR&quot;&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDCONT_A&lt;/code&gt;, &lt;code&gt;isIDCONT_L1&lt;/code&gt;, &lt;code&gt;isIDCONT_uvchr&lt;/code&gt;, &lt;code&gt;isIDCONT_utf8&lt;/code&gt;, &lt;code&gt;isIDCONT_utf8_safe&lt;/code&gt;, &lt;code&gt;isIDCONT_LC&lt;/code&gt;, &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isIDCONT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce017fc967cd4b42d5b0d83e9ea0bfc787abd7a8" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character considered to be a blank, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:blank:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isBLANK_A&lt;/code&gt; , &lt;code&gt;isBLANK_L1&lt;/code&gt; , &lt;code&gt;isBLANK_uni&lt;/code&gt; , &lt;code&gt;isBLANK_utf8&lt;/code&gt; , &lt;code&gt;isBLANK_LC&lt;/code&gt; , &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt; . Note, however, that some platforms do not have the C library routine &lt;code&gt;isblank()&lt;/code&gt; . In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter que se considera un espacio en blanco, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:blank:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isBLANK_A&lt;/code&gt; , &lt;code&gt;isBLANK_L1&lt;/code&gt; , &lt;code&gt;isBLANK_uni&lt;/code&gt; , &lt;code&gt;isBLANK_utf8&lt;/code&gt; , &lt;code&gt;isBLANK_LC&lt;/code&gt; , &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt; e &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt; . Sin embargo, tenga en cuenta que algunas plataformas no tienen la rutina de biblioteca C &lt;code&gt;isblank()&lt;/code&gt; . En estos casos, las variantes cuyos nombres contienen &lt;code&gt;LC&lt;/code&gt; son las mismas que las correspondientes sin.</target>
        </trans-unit>
        <trans-unit id="29328681366b58f3557a4c7c9ff9c2608ba2f04f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character considered to be a blank, analogous to &lt;code&gt;m/[[:blank:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isBLANK_A&lt;/code&gt;, &lt;code&gt;isBLANK_L1&lt;/code&gt;, &lt;code&gt;isBLANK_uvchr&lt;/code&gt;, &lt;code&gt;isBLANK_utf8&lt;/code&gt;, &lt;code&gt;isBLANK_utf8_safe&lt;/code&gt;, &lt;code&gt;isBLANK_LC&lt;/code&gt;, &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt;, &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt;, and &lt;code&gt;isBLANK_LC_utf8_safe&lt;/code&gt;. Note, however, that some platforms do not have the C library routine &lt;code&gt;isblank()&lt;/code&gt;. In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9852ba5728743e1ad6def01123109823a1eede3f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character that is a word character, analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\w/&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:word:]]/&lt;/a&gt;&lt;/code&gt; match in a regular expression. A word character is an alphabetic character, a decimal digit, a connecting punctuation character (such as an underscore), or a &quot;mark&quot; character that attaches to one of those (like some sort of accent). &lt;code&gt;isALNUM()&lt;/code&gt; is a synonym provided for backward compatibility, even though a word character includes more than the standard C language meaning of alphanumeric. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isWORDCHAR_A&lt;/code&gt; , &lt;code&gt;isWORDCHAR_L1&lt;/code&gt; , &lt;code&gt;isWORDCHAR_uni&lt;/code&gt; , and &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt; . &lt;code&gt;isWORDCHAR_LC&lt;/code&gt; , &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt; are also as described there, but additionally include the platform's native underscore.</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter de palabra, an&amp;aacute;logo a lo que &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\w/&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:word:]]/&lt;/a&gt;&lt;/code&gt; coinciden en una expresi&amp;oacute;n regular. Un car&amp;aacute;cter de palabra es un car&amp;aacute;cter alfab&amp;eacute;tico, un d&amp;iacute;gito decimal, un car&amp;aacute;cter de puntuaci&amp;oacute;n de conexi&amp;oacute;n (como un gui&amp;oacute;n bajo) o un car&amp;aacute;cter de &quot;marca&quot; que se adjunta a uno de ellos (como alg&amp;uacute;n tipo de acento). &lt;code&gt;isALNUM()&lt;/code&gt; es un sin&amp;oacute;nimo proporcionado para compatibilidad con versiones anteriores, aunque un car&amp;aacute;cter de palabra incluye m&amp;aacute;s que el significado est&amp;aacute;ndar de lenguaje C de alfanum&amp;eacute;rico. Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isWORDCHAR_A&lt;/code&gt; , &lt;code&gt;isWORDCHAR_L1&lt;/code&gt; , &lt;code&gt;isWORDCHAR_uni&lt;/code&gt; y &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt; . &lt;code&gt;isWORDCHAR_LC&lt;/code&gt; , &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt; e &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt; tambi&amp;eacute;n son como se describen all&amp;iacute;, pero adem&amp;aacute;s incluyen el gui&amp;oacute;n bajo nativo de la plataforma.</target>
        </trans-unit>
        <trans-unit id="d95866e9752b67dac11bf5a595c9d0d411160a2e" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character that is a word character, analogous to what &lt;code&gt;m/\w/&lt;/code&gt; and &lt;code&gt;m/[[:word:]]/&lt;/code&gt; match in a regular expression. A word character is an alphabetic character, a decimal digit, a connecting punctuation character (such as an underscore), or a &quot;mark&quot; character that attaches to one of those (like some sort of accent). &lt;code&gt;isALNUM()&lt;/code&gt; is a synonym provided for backward compatibility, even though a word character includes more than the standard C language meaning of alphanumeric. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isWORDCHAR_A&lt;/code&gt;, &lt;code&gt;isWORDCHAR_L1&lt;/code&gt;, &lt;code&gt;isWORDCHAR_uvchr&lt;/code&gt;, &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt;, and &lt;code&gt;isWORDCHAR_utf8_safe&lt;/code&gt;. &lt;code&gt;isWORDCHAR_LC&lt;/code&gt;, &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt;, &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt;, and &lt;code&gt;isWORDCHAR_LC_utf8_safe&lt;/code&gt; are also as described there, but additionally include the platform's native underscore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9275c448cc5ba27683786a2d8a8c811d79a675f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a control character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:cntrl:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isCNTRL_A&lt;/code&gt; , &lt;code&gt;isCNTRL_L1&lt;/code&gt; , &lt;code&gt;isCNTRL_uni&lt;/code&gt; , &lt;code&gt;isCNTRL_utf8&lt;/code&gt; , &lt;code&gt;isCNTRL_LC&lt;/code&gt; , &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; On EBCDIC platforms, you almost always want to use the &lt;code&gt;isCNTRL_L1&lt;/code&gt; variant.</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter de control, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:cntrl:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isCNTRL_A&lt;/code&gt; , &lt;code&gt;isCNTRL_L1&lt;/code&gt; , &lt;code&gt;isCNTRL_uni&lt;/code&gt; , &lt;code&gt;isCNTRL_utf8&lt;/code&gt; , &lt;code&gt;isCNTRL_LC&lt;/code&gt; , &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt; e &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; En las plataformas EBCDIC, casi siempre desea utilizar la variante &lt;code&gt;isCNTRL_L1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="122a9965c8cc36fab1e2e822534e8ec5e42ab3a2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a control character, analogous to &lt;code&gt;m/[[:cntrl:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isCNTRL_A&lt;/code&gt;, &lt;code&gt;isCNTRL_L1&lt;/code&gt;, &lt;code&gt;isCNTRL_uvchr&lt;/code&gt;, &lt;code&gt;isCNTRL_utf8&lt;/code&gt;, &lt;code&gt;isCNTRL_utf8_safe&lt;/code&gt;, &lt;code&gt;isCNTRL_LC&lt;/code&gt;, &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt;, &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; and &lt;code&gt;isCNTRL_LC_utf8_safe&lt;/code&gt;. On EBCDIC platforms, you almost always want to use the &lt;code&gt;isCNTRL_L1&lt;/code&gt; variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5f9a2f004ec36fee23916c2d965d58a9667a24" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a digit, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:digit:]]/&lt;/a&gt;&lt;/code&gt;. Variants &lt;code&gt;isDIGIT_A&lt;/code&gt; and &lt;code&gt;isDIGIT_L1&lt;/code&gt; are identical to &lt;code&gt;isDIGIT&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isDIGIT_uni&lt;/code&gt; , &lt;code&gt;isDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isDIGIT_LC&lt;/code&gt; , &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un d&amp;iacute;gito, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:digit:]]/&lt;/a&gt;&lt;/code&gt; . Las variantes &lt;code&gt;isDIGIT_A&lt;/code&gt; e &lt;code&gt;isDIGIT_L1&lt;/code&gt; son id&amp;eacute;nticas a &lt;code&gt;isDIGIT&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isDIGIT_uni&lt;/code&gt; , &lt;code&gt;isDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isDIGIT_LC&lt;/code&gt; , &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt; e &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b96938b2ffbd61cc2b65bcefc552e221062bd754" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a digit, analogous to &lt;code&gt;m/[[:digit:]]/&lt;/code&gt;. Variants &lt;code&gt;isDIGIT_A&lt;/code&gt; and &lt;code&gt;isDIGIT_L1&lt;/code&gt; are identical to &lt;code&gt;isDIGIT&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isDIGIT_uvchr&lt;/code&gt;, &lt;code&gt;isDIGIT_utf8&lt;/code&gt;, &lt;code&gt;isDIGIT_utf8_safe&lt;/code&gt;, &lt;code&gt;isDIGIT_LC&lt;/code&gt;, &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isDIGIT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5aa05558f472c759c35c257a0ac246e6bf09367" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a either an alphabetic character or decimal digit, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alnum:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_uni&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter alfab&amp;eacute;tico o un d&amp;iacute;gito decimal, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alnum:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_uni&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt; e &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd3d7d9d640e85535389698d9f2fb18931bac074" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a graphic character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:graph:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isGRAPH_A&lt;/code&gt; , &lt;code&gt;isGRAPH_L1&lt;/code&gt; , &lt;code&gt;isGRAPH_uni&lt;/code&gt; , &lt;code&gt;isGRAPH_utf8&lt;/code&gt; , &lt;code&gt;isGRAPH_LC&lt;/code&gt; , &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isGRAPH_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter gr&amp;aacute;fico, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:graph:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isGRAPH_A&lt;/code&gt; , &lt;code&gt;isGRAPH_L1&lt;/code&gt; , &lt;code&gt;isGRAPH_uni&lt;/code&gt; , &lt;code&gt;isGRAPH_utf8&lt;/code&gt; , &lt;code&gt;isGRAPH_LC&lt;/code&gt; , &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt; e &lt;code&gt;isGRAPH_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aaa600b1ec6a7427f287cd29b0514942413a0b15" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a graphic character, analogous to &lt;code&gt;m/[[:graph:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isGRAPH_A&lt;/code&gt;, &lt;code&gt;isGRAPH_L1&lt;/code&gt;, &lt;code&gt;isGRAPH_uvchr&lt;/code&gt;, &lt;code&gt;isGRAPH_utf8&lt;/code&gt;, &lt;code&gt;isGRAPH_utf8_safe&lt;/code&gt;, &lt;code&gt;isGRAPH_LC&lt;/code&gt;, &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt;, &lt;code&gt;isGRAPH_LC_utf8_safe&lt;/code&gt;, and &lt;code&gt;isGRAPH_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a521e0f9cf14d0eb9b9b50db942ae249b71fc1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a hexadecimal digit. In the ASCII range these are &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; . Variants &lt;code&gt;isXDIGIT_A()&lt;/code&gt; and &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; are identical to &lt;code&gt;isXDIGIT()&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isXDIGIT_uni&lt;/code&gt; , &lt;code&gt;isXDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un d&amp;iacute;gito hexadecimal. En el rango ASCII, estos son &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; . Las variantes &lt;code&gt;isXDIGIT_A()&lt;/code&gt; e &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; son id&amp;eacute;nticas a &lt;code&gt;isXDIGIT()&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isXDIGIT_uni&lt;/code&gt; , &lt;code&gt;isXDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt; e &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a158c1e677888a4504ab28dd97acbf4840b12f1e" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a hexadecimal digit. In the ASCII range these are &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt;. Variants &lt;code&gt;isXDIGIT_A()&lt;/code&gt; and &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; are identical to &lt;code&gt;isXDIGIT()&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isXDIGIT_uvchr&lt;/code&gt;, &lt;code&gt;isXDIGIT_utf8&lt;/code&gt;, &lt;code&gt;isXDIGIT_utf8_safe&lt;/code&gt;, &lt;code&gt;isXDIGIT_LC&lt;/code&gt;, &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isXDIGIT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff52e3b4ced8da14cf21ac0cf2d8d3b48eac969" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a lowercase character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:lower:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isLOWER_A&lt;/code&gt; , &lt;code&gt;isLOWER_L1&lt;/code&gt; , &lt;code&gt;isLOWER_uni&lt;/code&gt; , &lt;code&gt;isLOWER_utf8&lt;/code&gt; , &lt;code&gt;isLOWER_LC&lt;/code&gt; , &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter en min&amp;uacute;sculas, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:lower:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isLOWER_A&lt;/code&gt; , &lt;code&gt;isLOWER_L1&lt;/code&gt; , &lt;code&gt;isLOWER_uni&lt;/code&gt; , &lt;code&gt;isLOWER_utf8&lt;/code&gt; , &lt;code&gt;isLOWER_LC&lt;/code&gt; , &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt; e &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6810ef4bb9ebf895d53b0fd107079c63ab18ed1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a lowercase character, analogous to &lt;code&gt;m/[[:lower:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isLOWER_A&lt;/code&gt;, &lt;code&gt;isLOWER_L1&lt;/code&gt;, &lt;code&gt;isLOWER_uvchr&lt;/code&gt;, &lt;code&gt;isLOWER_utf8&lt;/code&gt;, &lt;code&gt;isLOWER_utf8_safe&lt;/code&gt;, &lt;code&gt;isLOWER_LC&lt;/code&gt;, &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt;, &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt;, and &lt;code&gt;isLOWER_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41725a26249b072e3854b61782196d712beaccdb" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a printable character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:print:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPRINT_A&lt;/code&gt; , &lt;code&gt;isPRINT_L1&lt;/code&gt; , &lt;code&gt;isPRINT_uni&lt;/code&gt; , &lt;code&gt;isPRINT_utf8&lt;/code&gt; , &lt;code&gt;isPRINT_LC&lt;/code&gt; , &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter imprimible, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:print:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isPRINT_A&lt;/code&gt; , &lt;code&gt;isPRINT_L1&lt;/code&gt; , &lt;code&gt;isPRINT_uni&lt;/code&gt; , &lt;code&gt;isPRINT_utf8&lt;/code&gt; , &lt;code&gt;isPRINT_LC&lt;/code&gt; , &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt; e &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca68b6a91bf0a62e3d361f1856be060416de1e37" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a printable character, analogous to &lt;code&gt;m/[[:print:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPRINT_A&lt;/code&gt;, &lt;code&gt;isPRINT_L1&lt;/code&gt;, &lt;code&gt;isPRINT_uvchr&lt;/code&gt;, &lt;code&gt;isPRINT_utf8&lt;/code&gt;, &lt;code&gt;isPRINT_utf8_safe&lt;/code&gt;, &lt;code&gt;isPRINT_LC&lt;/code&gt;, &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isPRINT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7793d22c7e9533fb9416bac2c7ec1172e04deac2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a punctuation character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:punct:]]/&lt;/a&gt;&lt;/code&gt;. Note that the definition of what is punctuation isn't as straightforward as one might desire. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;POSIX Character Classes in perlrecharclass&lt;/a&gt; for details. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPUNCT_A&lt;/code&gt; , &lt;code&gt;isPUNCT_L1&lt;/code&gt; , &lt;code&gt;isPUNCT_uni&lt;/code&gt; , &lt;code&gt;isPUNCT_utf8&lt;/code&gt; , &lt;code&gt;isPUNCT_LC&lt;/code&gt; , &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter de puntuaci&amp;oacute;n, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:punct:]]/&lt;/a&gt;&lt;/code&gt; . Tenga en cuenta que la definici&amp;oacute;n de lo que es puntuaci&amp;oacute;n no es tan sencilla como se podr&amp;iacute;a desear. Consulte &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;Clases de caracteres POSIX en perlrecharclass&lt;/a&gt; para obtener m&amp;aacute;s detalles. Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isPUNCT_A&lt;/code&gt; , &lt;code&gt;isPUNCT_L1&lt;/code&gt; , &lt;code&gt;isPUNCT_uni&lt;/code&gt; , &lt;code&gt;isPUNCT_utf8&lt;/code&gt; , &lt;code&gt;isPUNCT_LC&lt;/code&gt; , &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt; e &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed9669819bcda57040e2afadf7601dbcad1dbb46" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a punctuation character, analogous to &lt;code&gt;m/[[:punct:]]/&lt;/code&gt;. Note that the definition of what is punctuation isn't as straightforward as one might desire. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt; for details. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPUNCT_A&lt;/code&gt;, &lt;code&gt;isPUNCT_L1&lt;/code&gt;, &lt;code&gt;isPUNCT_uvchr&lt;/code&gt;, &lt;code&gt;isPUNCT_utf8&lt;/code&gt;, &lt;code&gt;isPUNCT_utf8_safe&lt;/code&gt;, &lt;code&gt;isPUNCT_LC&lt;/code&gt;, &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt;, &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt;, and &lt;code&gt;isPUNCT_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a715a3af988d8bb6cff21868fdb558f44c0512" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a whitespace character. This is analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\s/&lt;/a&gt;&lt;/code&gt; matches in a regular expression. Starting in Perl 5.18 this also matches what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; does. Prior to 5.18, only the locale forms of this macro (the ones with &lt;code&gt;LC&lt;/code&gt; in their names) matched precisely what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; does. In those releases, the only difference, in the non-locale variants, was that &lt;code&gt;isSPACE()&lt;/code&gt; did not match a vertical tab. (See &lt;a href=&quot;#isPSXSPC&quot;&gt;isPSXSPC&lt;/a&gt; for a macro that matches a vertical tab in all releases.) See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isSPACE_A&lt;/code&gt; , &lt;code&gt;isSPACE_L1&lt;/code&gt; , &lt;code&gt;isSPACE_uni&lt;/code&gt; , &lt;code&gt;isSPACE_utf8&lt;/code&gt; , &lt;code&gt;isSPACE_LC&lt;/code&gt; , &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter de espacio en blanco. Esto es an&amp;aacute;logo a lo que &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\s/&lt;/a&gt;&lt;/code&gt; coincide en una expresi&amp;oacute;n regular. A partir de Perl 5.18, esto tambi&amp;eacute;n coincide con lo que hace &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; . Antes de 5.18, solo las formas locales de esta macro (las que tienen &lt;code&gt;LC&lt;/code&gt; en sus nombres) coincid&amp;iacute;an precisamente con lo que hace &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; . En esas versiones, la &amp;uacute;nica diferencia, en las variantes no regionales, era que &lt;code&gt;isSPACE()&lt;/code&gt; no coincid&amp;iacute;a con una pesta&amp;ntilde;a vertical. (Consulte &lt;a href=&quot;#isPSXSPC&quot;&gt;isPSXSPC&lt;/a&gt; para obtener una macro que coincida con una pesta&amp;ntilde;a vertical en todas las versiones). Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isSPACE_A&lt;/code&gt; , &lt;code&gt;isSPACE_L1&lt;/code&gt; , &lt;code&gt;isSPACE_uni&lt;/code&gt; , &lt;code&gt;isSPACE_utf8&lt;/code&gt; , &lt;code&gt;isSPACE_LC&lt;/code&gt; , &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt; y &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33e9150d8c65d7e7e2a47d3f90c4e34c63f45be1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a whitespace character. This is analogous to what &lt;code&gt;m/\s/&lt;/code&gt; matches in a regular expression. Starting in Perl 5.18 this also matches what &lt;code&gt;m/[[:space:]]/&lt;/code&gt; does. Prior to 5.18, only the locale forms of this macro (the ones with &lt;code&gt;LC&lt;/code&gt; in their names) matched precisely what &lt;code&gt;m/[[:space:]]/&lt;/code&gt; does. In those releases, the only difference, in the non-locale variants, was that &lt;code&gt;isSPACE()&lt;/code&gt; did not match a vertical tab. (See &lt;a href=&quot;#isPSXSPC&quot;&gt;&quot;isPSXSPC&quot;&lt;/a&gt; for a macro that matches a vertical tab in all releases.) See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isSPACE_A&lt;/code&gt;, &lt;code&gt;isSPACE_L1&lt;/code&gt;, &lt;code&gt;isSPACE_uvchr&lt;/code&gt;, &lt;code&gt;isSPACE_utf8&lt;/code&gt;, &lt;code&gt;isSPACE_utf8_safe&lt;/code&gt;, &lt;code&gt;isSPACE_LC&lt;/code&gt;, &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt;, &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt;, and &lt;code&gt;isSPACE_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb03db284d9ba50542ef6a78c24086a8ed7602c8" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an alphabetic character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alpha:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHA_A&lt;/code&gt; , &lt;code&gt;isALPHA_L1&lt;/code&gt; , &lt;code&gt;isALPHA_uni&lt;/code&gt; , &lt;code&gt;isALPHA_utf8&lt;/code&gt; , &lt;code&gt;isALPHA_LC&lt;/code&gt; , &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter alfab&amp;eacute;tico, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alpha:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isALPHA_A&lt;/code&gt; , &lt;code&gt;isALPHA_L1&lt;/code&gt; , &lt;code&gt;isALPHA_uni&lt;/code&gt; , &lt;code&gt;isALPHA_utf8&lt;/code&gt; , &lt;code&gt;isALPHA_LC&lt;/code&gt; , &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt; e &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af7aba7401f9e1c72d74964e907a9b2716eb9e27" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an octal digit, [0-7]. The only two variants are &lt;code&gt;isOCTAL_A&lt;/code&gt; and &lt;code&gt;isOCTAL_L1&lt;/code&gt; ; each is identical to &lt;code&gt;isOCTAL&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un d&amp;iacute;gito octal, [0-7]. Las &amp;uacute;nicas dos variantes son &lt;code&gt;isOCTAL_A&lt;/code&gt; e &lt;code&gt;isOCTAL_L1&lt;/code&gt; ; cada uno es id&amp;eacute;ntico a &lt;code&gt;isOCTAL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdafb80e48adef68b2ce4d0afc47401439a6c754" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an octal digit, [0-7]. The only two variants are &lt;code&gt;isOCTAL_A&lt;/code&gt; and &lt;code&gt;isOCTAL_L1&lt;/code&gt;; each is identical to &lt;code&gt;isOCTAL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15efb9db5798b3f62af85957e91796c0081a1fd0" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an uppercase character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:upper:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isUPPER_A&lt;/code&gt; , &lt;code&gt;isUPPER_L1&lt;/code&gt; , &lt;code&gt;isUPPER_uni&lt;/code&gt; , &lt;code&gt;isUPPER_utf8&lt;/code&gt; , &lt;code&gt;isUPPER_LC&lt;/code&gt; , &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es un car&amp;aacute;cter en may&amp;uacute;sculas, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:upper:]]/&lt;/a&gt;&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isUPPER_A&lt;/code&gt; , &lt;code&gt;isUPPER_L1&lt;/code&gt; , &lt;code&gt;isUPPER_uni&lt;/code&gt; , &lt;code&gt;isUPPER_utf8&lt;/code&gt; , &lt;code&gt;isUPPER_LC&lt;/code&gt; , &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt; e &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="986354a9893a93f41b2c6f90945ea8685375b576" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an uppercase character, analogous to &lt;code&gt;m/[[:upper:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isUPPER_A&lt;/code&gt;, &lt;code&gt;isUPPER_L1&lt;/code&gt;, &lt;code&gt;isUPPER_uvchr&lt;/code&gt;, &lt;code&gt;isUPPER_utf8&lt;/code&gt;, &lt;code&gt;isUPPER_utf8_safe&lt;/code&gt;, &lt;code&gt;isUPPER_LC&lt;/code&gt;, &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt;, &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt;, and &lt;code&gt;isUPPER_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980f07c017b5c1bb2fce5cf568e3090c392ff685" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is one of &lt;code&gt;[A-Za-z0-9]&lt;/code&gt;, analogous to &lt;code&gt;m/[[:alnum:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_uvchr&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_utf8_safe&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt;, and &lt;code&gt;isALPHANUMERIC_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa3ee935b94e5b52cd32b7dfbaa4cfea1f8f549" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is one of the 128 characters in the ASCII character set, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:ascii:]]/&lt;/a&gt;&lt;/code&gt;. On non-ASCII platforms, it returns TRUE iff this character corresponds to an ASCII character. Variants &lt;code&gt;isASCII_A()&lt;/code&gt; and &lt;code&gt;isASCII_L1()&lt;/code&gt; are identical to &lt;code&gt;isASCII()&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isASCII_uni&lt;/code&gt; , &lt;code&gt;isASCII_utf8&lt;/code&gt; , &lt;code&gt;isASCII_LC&lt;/code&gt; , &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isASCII_LC_utf8&lt;/code&gt; . Note, however, that some platforms do not have the C library routine &lt;code&gt;isascii()&lt;/code&gt; . In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">Devuelve un valor booleano que indica si el car&amp;aacute;cter especificado es uno de los 128 caracteres del conjunto de caracteres ASCII, an&amp;aacute;logo a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:ascii:]]/&lt;/a&gt;&lt;/code&gt; . En plataformas que no son ASCII, devuelve VERDADERO si este car&amp;aacute;cter corresponde a un car&amp;aacute;cter ASCII. Las variantes &lt;code&gt;isASCII_A()&lt;/code&gt; e &lt;code&gt;isASCII_L1()&lt;/code&gt; son id&amp;eacute;nticas a &lt;code&gt;isASCII()&lt;/code&gt; . Consulte la &lt;a href=&quot;#Character-classification&quot;&gt;parte superior de esta secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n de las variantes &lt;code&gt;isASCII_uni&lt;/code&gt; , &lt;code&gt;isASCII_utf8&lt;/code&gt; , &lt;code&gt;isASCII_LC&lt;/code&gt; , &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt; e &lt;code&gt;isASCII_LC_utf8&lt;/code&gt; . Sin embargo, tenga en cuenta que algunas plataformas no tienen la rutina de biblioteca C &lt;code&gt;isascii()&lt;/code&gt; . En estos casos, las variantes cuyos nombres contienen &lt;code&gt;LC&lt;/code&gt; son las mismas que las correspondientes sin.</target>
        </trans-unit>
        <trans-unit id="92a15f561289a5c813c946c3adbe1194260328e6" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is one of the 128 characters in the ASCII character set, analogous to &lt;code&gt;m/[[:ascii:]]/&lt;/code&gt;. On non-ASCII platforms, it returns TRUE iff this character corresponds to an ASCII character. Variants &lt;code&gt;isASCII_A()&lt;/code&gt; and &lt;code&gt;isASCII_L1()&lt;/code&gt; are identical to &lt;code&gt;isASCII()&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isASCII_uvchr&lt;/code&gt;, &lt;code&gt;isASCII_utf8&lt;/code&gt;, &lt;code&gt;isASCII_utf8_safe&lt;/code&gt;, &lt;code&gt;isASCII_LC&lt;/code&gt;, &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt;, &lt;code&gt;isASCII_LC_utf8&lt;/code&gt;, and &lt;code&gt;isASCII_LC_utf8_safe&lt;/code&gt;. Note, however, that some platforms do not have the C library routine &lt;code&gt;isascii()&lt;/code&gt;. In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cd19feb336d757e24d1ca5d00decdbb0f34399" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified filehandle is connected to a tty. Similar to the &lt;code&gt;-t&lt;/code&gt; operator, see &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;.</source>
          <target state="translated">Devuelve un booleano que indica si el identificador de archivo especificado est&amp;aacute; conectado a un tty. Similar al operador &lt;code&gt;-t&lt;/code&gt; , consulte &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ffbe1e337f7cd1412297885e72d595c9327f8c29" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified filehandle is connected to a tty. Similar to the &lt;code&gt;-t&lt;/code&gt; operator, see &lt;a href=&quot;perlfunc#-X&quot;&gt;&quot;-X&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c03e1b106b9bca9aa586777ddd8acce73f8bb4" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified hash key exists. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="translated">Devuelve un valor booleano que indica si existe la clave hash especificada. &lt;code&gt;hash&lt;/code&gt; puede ser un valor hash precalculado v&amp;aacute;lido o 0 para solicitar que se calcule.</target>
        </trans-unit>
        <trans-unit id="121353f5b2eaa9a3d9bda681a610cdc561cf253a" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified hash key exists. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode.</source>
          <target state="translated">Devuelve un valor booleano que indica si existe la clave hash especificada. El valor absoluto de &lt;code&gt;klen&lt;/code&gt; es la longitud de la clave. Si &lt;code&gt;klen&lt;/code&gt; es negativo, se supone que la clave est&amp;aacute; en Unicode codificado en UTF-8.</target>
        </trans-unit>
        <trans-unit id="4f54adf833eb47099d3693191e1af935d5e57fbe" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified input is one of &lt;code&gt;[A-Za-z]&lt;/code&gt;, analogous to &lt;code&gt;m/[[:alpha:]]/&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHA_A&lt;/code&gt;, &lt;code&gt;isALPHA_L1&lt;/code&gt;, &lt;code&gt;isALPHA_uvchr&lt;/code&gt;, &lt;code&gt;isALPHA_utf8&lt;/code&gt;, &lt;code&gt;isALPHA_utf8_safe&lt;/code&gt;, &lt;code&gt;isALPHA_LC&lt;/code&gt;, &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt;, &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt;, and &lt;code&gt;isALPHA_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5313e3d6173b21fb5006ca3813abfeade7dee5" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and 'use bytes' aware and coerces its args to strings if necessary. If the flags include SV_GMAGIC, it handles get-magic, too.</source>
          <target state="translated">Devuelve un booleano que indica si las cuerdas de las dos SV son idénticas.Es UTF-8 y 'use bytes' consciente y coacciona sus arcos a las cuerdas si es necesario.Si las banderas incluyen SV_GMAGIC,también maneja get-magic.</target>
        </trans-unit>
        <trans-unit id="29d62dc3ef5c0ce2f33205fd37c1d90629e10e6b" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and 'use bytes' aware, handles get magic, and will coerce its args to strings if necessary.</source>
          <target state="translated">Devuelve un booleano que indica si las cuerdas de las dos SV son idénticas.Si el UTF-8 y el &quot;uso de bytes&quot; son conscientes,los mangos obtienen magia,y coaccionarán sus arcos a las cuerdas si es necesario.</target>
        </trans-unit>
        <trans-unit id="bb3d3011637a4e752c88edd335b6c4406c1a57c7" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware and coerces its args to strings if necessary. If the flags has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, it handles get-magic, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba38ee48d2de8d785edf2d5d1d3c61a912609e9" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and &lt;code&gt;'use bytes'&lt;/code&gt; aware, handles get magic, and will coerce its args to strings if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17bf5c8034ffaf1b55c10e89659d3e8e5d24b49" translate="yes" xml:space="preserve">
          <source>Returns a boolean status indicating whether or not the given classname is either &lt;code&gt;UNIVERSAL&lt;/code&gt; itself, or one of &lt;code&gt;UNIVERSAL&lt;/code&gt; 's parents by &lt;code&gt;@ISA&lt;/code&gt; inheritance.</source>
          <target state="translated">Devuelve un estado booleano que indica si el nombre de clase dado es &lt;code&gt;UNIVERSAL&lt;/code&gt; en s&amp;iacute; mismo o uno de los padres de &lt;code&gt;UNIVERSAL&lt;/code&gt; por herencia &lt;code&gt;@ISA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="979d78fefc09b34c9d38c93f199f4bb16cd649c2" translate="yes" xml:space="preserve">
          <source>Returns a boolean status indicating whether or not the given classname is either &lt;code&gt;UNIVERSAL&lt;/code&gt; itself, or one of &lt;code&gt;UNIVERSAL&lt;/code&gt;'s parents by &lt;code&gt;@ISA&lt;/code&gt; inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bf100c650c225813f8d3ca45243f2ec361a683" translate="yes" xml:space="preserve">
          <source>Returns a boolean to indicate whether the current object has content. Some special files like directories and so on never will have any content. This method is mainly to make sure you don't get warnings for using uninitialized values when looking at an object's content.</source>
          <target state="translated">Devuelve un booleano para indicar si el objeto actual tiene contenido.Algunos archivos especiales como directorios y demás nunca tendrán contenido.Este método es principalmente para asegurarse de no recibir advertencias por usar valores no inicializados cuando se mira el contenido de un objeto.</target>
        </trans-unit>
        <trans-unit id="9137f275a766c2cceed1614358dbf481ba99d8d3" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the number of tests planned matches the number of tests run.</source>
          <target state="translated">Devuelve un valor booleano que indica si el número de pruebas previstas coincide o no con el número de pruebas realizadas.</target>
        </trans-unit>
        <trans-unit id="e97bd77a512fc1c3afe80bad2a24a1469187ca39" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the test passed, regardless of its TODO status.</source>
          <target state="translated">Devuelve un valor booleano que indica si la prueba pasó o no,independientemente de su estado de TODO.</target>
        </trans-unit>
        <trans-unit id="0d1c38bb380ee78790b9faaa0b57977e6a6be36c" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the test passed. Remember that for TODO tests, the test always passes.</source>
          <target state="translated">Devuelve un valor booleano que indica si la prueba fue aprobada o no.Recuerde que para las pruebas de TODO,la prueba siempre pasa.</target>
        </trans-unit>
        <trans-unit id="dd8be11f56eba06f6215a295d4aa9e09ffe0119a" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test had a SKIP directive.</source>
          <target state="translated">Devuelve un valor booleano que indica si esta prueba tenía o no una directiva SKIP.</target>
        </trans-unit>
        <trans-unit id="55bf1f2ad9c933e98e212df8ca85bdd535baa36e" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test had a TODO directive.</source>
          <target state="translated">Devuelve un valor booleano que indica si esta prueba tenía o no una directiva TODO.</target>
        </trans-unit>
        <trans-unit id="83bb62946ab90d79896ef8fbc93554e612f01341" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test has a SKIP directive.</source>
          <target state="translated">Devuelve un valor booleano que indica si esta prueba tiene o no una directiva SKIP.</target>
        </trans-unit>
        <trans-unit id="bd95ff22315220944c5d8adc000e9bb0dc47442d" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test has a TODO directive.</source>
          <target state="translated">Devuelve un valor booleano que indica si esta prueba tiene o no una directiva TODO.</target>
        </trans-unit>
        <trans-unit id="ff13f5f465b45f68139a6c52778dfcc8b600d0e3" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether the metadata provided is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfd0dae46cb0c91d7931cd887d4fc847c2ab010" translate="yes" xml:space="preserve">
          <source>Returns a byte count if successful (which may be zero or positive), returns negative value and sets &lt;code&gt;errno&lt;/code&gt; on error. Depending on implementation &lt;code&gt;errno&lt;/code&gt; may be &lt;code&gt;EINTR&lt;/code&gt; if operation was interrupted by a signal.</source>
          <target state="translated">Devuelve un recuento de bytes si tiene &amp;eacute;xito (que puede ser cero o positivo), devuelve un valor negativo y establece &lt;code&gt;errno&lt;/code&gt; en caso de error. Dependiendo de la implementaci&amp;oacute;n, &lt;code&gt;errno&lt;/code&gt; puede ser &lt;code&gt;EINTR&lt;/code&gt; si la operaci&amp;oacute;n fue interrumpida por una se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="738820dfed07a901f64549cecfba9a6d1804163b" translate="yes" xml:space="preserve">
          <source>Returns a byte string representation of OBJ. The byte string is in big endian byte order, so if OBJ represents the number 256, the output should be the two-byte string &quot;\x01\x00&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c8d1cf3a3fda9ea10d03d2fa361fea7e0c923e" translate="yes" xml:space="preserve">
          <source>Returns a byte string representation of the number using big endian byte order. The invocand must be a non-negative, finite integer. See also from_bytes().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adf23b2b521e411dabc5f3d4e0bbacb2817007d" translate="yes" xml:space="preserve">
          <source>Returns a cleaned-up copy of the code to which certain transformations have been applied to make it more ANSI compliant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92724b847f300275a1d7f6ab34f2957570785e5" translate="yes" xml:space="preserve">
          <source>Returns a code reference which, when passed an appropriate line of TAP, returns the lexed token corresponding to that line. As a result, the basic TAP parsing loop looks similar to the following:</source>
          <target state="translated">Devuelve una referencia de código que,al pasar una línea apropiada de TAP,devuelve la ficha lexed correspondiente a esa línea.Como resultado,el bucle básico de análisis TAP es similar al siguiente:</target>
        </trans-unit>
        <trans-unit id="250bd801628d1959cff347377739bc0fdd695949" translate="yes" xml:space="preserve">
          <source>Returns a copy of the denominator (the part under the line) as positive BigInt.</source>
          <target state="translated">Devuelve una copia del denominador (la parte bajo la línea)como BigInt positivo.</target>
        </trans-unit>
        <trans-unit id="1459dc1c58bb1dc9cdeee402445d3db69db0dae5" translate="yes" xml:space="preserve">
          <source>Returns a copy of the numerator (the part above the line) as signed BigInt.</source>
          <target state="translated">Devuelve una copia del numerador (la parte de arriba de la línea)como firmado BigInt.</target>
        </trans-unit>
        <trans-unit id="4886a637f8ba359a81c9933464803da25761aebb" translate="yes" xml:space="preserve">
          <source>Returns a copy of the object as BigFloat, preserving the accuracy as wanted, or the default of 40 digits.</source>
          <target state="translated">Devuelve una copia del objeto como BigFloat,preservando la precisión que se desea,o el valor por defecto de 40 dígitos.</target>
        </trans-unit>
        <trans-unit id="37c279b2e2c51eeca1b17bd33cccb475f3122b3f" translate="yes" xml:space="preserve">
          <source>Returns a copy of the object as BigInt, truncated to an integer.</source>
          <target state="translated">Devuelve una copia del objeto como BigInt,truncado a un número entero.</target>
        </trans-unit>
        <trans-unit id="4e8c2cac3d66912d28da94207b4929099540c29c" translate="yes" xml:space="preserve">
          <source>Returns a definition for the POD2MAN macro. This is a program which emulates the pod2man utility. You can add more switches to the command by simply appending them on the macro.</source>
          <target state="translated">Devuelve una definición para la macro POD2MAN.Este es un programa que emula la utilidad pod2man.Puedes añadir más interruptores al comando simplemente añadiéndolos a la macro.</target>
        </trans-unit>
        <trans-unit id="b18a469fd6bb6b4730a0fff4118015820804b932" translate="yes" xml:space="preserve">
          <source>Returns a double-quote-surrounded escaped version of STR which can be used as a string in C source code.</source>
          <target state="translated">Devuelve una versión de escape de STR que puede ser usada como una cadena en el código fuente de C.</target>
        </trans-unit>
        <trans-unit id="a5e8b3aa73f7ca4af9783bcbc4977b12160a8928" translate="yes" xml:space="preserve">
          <source>Returns a double-quote-surrounded escaped version of STR which can be used as a string in Perl source code.</source>
          <target state="translated">Devuelve una versión de escape de STR de doble cita que puede ser usada como una cadena en el código fuente de Perl.</target>
        </trans-unit>
        <trans-unit id="7e5796d852e1c910eaeb916456a16d42f7d5ee74" translate="yes" xml:space="preserve">
          <source>Returns a duplicate copy of the object.</source>
          <target state="translated">Devuelve una copia duplicada del objeto.</target>
        </trans-unit>
        <trans-unit id="77f325e9280bdd4d13a1ce4341473e4dd889e86d" translate="yes" xml:space="preserve">
          <source>Returns a filehandle tied to the Net::Cmd object. After issuing a command, you may read from this filehandle using read() or &amp;lt;&amp;gt;. The filehandle will return EOF when the final dot is encountered. Similarly, you may write to the filehandle in order to send data to the server after issuing a command that expects data to be written.</source>
          <target state="translated">Devuelve un identificador de archivo vinculado al objeto Net :: Cmd. Despu&amp;eacute;s de emitir un comando, puede leer este identificador de archivo usando read () o &amp;lt;&amp;gt;. El identificador de archivo devolver&amp;aacute; EOF cuando se encuentre el punto final. De manera similar, puede escribir en el identificador de archivo para enviar datos al servidor despu&amp;eacute;s de emitir un comando que espera que se escriban los datos.</target>
        </trans-unit>
        <trans-unit id="28fd9d2bb57f2077c4e81989e929cd22950c29ea" translate="yes" xml:space="preserve">
          <source>Returns a floating seconds since the epoch. This function can be imported, resulting in a nice drop-in replacement for the &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; provided with core Perl; see the &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; below.</source>
          <target state="translated">Devuelve unos segundos flotantes desde la &amp;eacute;poca. Esta funci&amp;oacute;n se puede importar, lo que resulta en un buen reemplazo para el &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; proporcionado con el n&amp;uacute;cleo de Perl; vea los &lt;a href=&quot;#EXAMPLES&quot;&gt;EJEMPLOS a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a520abaf56ffae474e15b843ecfc656194616f0e" translate="yes" xml:space="preserve">
          <source>Returns a floating seconds since the epoch. This function can be imported, resulting in a nice drop-in replacement for the &lt;code&gt;time&lt;/code&gt; provided with core Perl; see the &lt;a href=&quot;#EXAMPLES&quot;&gt;&quot;EXAMPLES&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50f7f4e52b9476b89b80acc01d637ac37ef1468" translate="yes" xml:space="preserve">
          <source>Returns a formatted string representing the runtime returned by &lt;code&gt;elapsed()&lt;/code&gt; . This lets the caller not worry about Benchmark.</source>
          <target state="translated">Devuelve una cadena formateada que representa el tiempo de ejecuci&amp;oacute;n devuelto por &lt;code&gt;elapsed()&lt;/code&gt; . Esto permite que la persona que llama no se preocupe por Benchmark.</target>
        </trans-unit>
        <trans-unit id="0f4aa1c0f68428530fc1779e9402caaea2f61ed3" translate="yes" xml:space="preserve">
          <source>Returns a formatted string representing the runtime returned by &lt;code&gt;elapsed()&lt;/code&gt;. This lets the caller not worry about Benchmark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b709134b8ac971f48b0ba6587adbc0b2b8bbb287" translate="yes" xml:space="preserve">
          <source>Returns a four-element list giving the user and system times in seconds for this process and any exited children of this process.</source>
          <target state="translated">Devuelve una lista de cuatro elementos que da al usuario y al sistema los tiempos en segundos para este proceso y cualquier niño que salga de este proceso.</target>
        </trans-unit>
        <trans-unit id="3c6d3dc8137b45cacf9a75e5dbf0aa4a2398a11e" translate="yes" xml:space="preserve">
          <source>Returns a hash containing the configuration, e.g. the version number, lib loaded etc. The following hash keys are currently filled in with the appropriate information.</source>
          <target state="translated">Devuelve un hash que contiene la configuración,por ejemplo,el número de versión,lib librado,etc.Las siguientes teclas hash están actualmente rellenadas con la información apropiada.</target>
        </trans-unit>
        <trans-unit id="043386d31c7237fc0abdfa58c12bfdf37853c3fc" translate="yes" xml:space="preserve">
          <source>Returns a hash mapping the C types of the typemap to their corresponding prototypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d8ea11fc3e12777c1734d4fc900c826766844d" translate="yes" xml:space="preserve">
          <source>Returns a hash mapping the C types to the XS types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210f3e54a468a97edf078679bf8b7da582012eed" translate="yes" xml:space="preserve">
          <source>Returns a hash mapping the XS types (identifiers) to the corresponding INPUT code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92036799ac982004940ab68e18c37c9e6536a986" translate="yes" xml:space="preserve">
          <source>Returns a hash mapping the XS types (identifiers) to the corresponding OUTPUT code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fdca20296d88fa1aaff95eb9fde2fd34cb1994" translate="yes" xml:space="preserve">
          <source>Returns a hash reference of Benchmark objects, keyed by name.</source>
          <target state="translated">Devuelve una referencia hash de los objetos de Benchmark,tecleada por nombre.</target>
        </trans-unit>
        <trans-unit id="5a2d716d0dca5fa00e32ee9611ea62153428914f" translate="yes" xml:space="preserve">
          <source>Returns a hash reference of all errata seen, both whines and screams. The hash reference's keys are the line number and the value is an array reference of the errors for that line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac63bfb3a3e6dd843b2aa85018c53e943ead17c" translate="yes" xml:space="preserve">
          <source>Returns a hash reference. The keys of the hash are the letters &lt;code&gt;D&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; , and &amp;lt;P&amp;gt;, for development status, support level, language, interface and public licence respectively. The data for the DSLIP status are collected by pause.perl.org when authors register their namespaces. The values of the 5 hash elements are one-character words whose meaning is described in the table below. There are also 5 hash elements &lt;code&gt;DV&lt;/code&gt; , &lt;code&gt;SV&lt;/code&gt; , &lt;code&gt;LV&lt;/code&gt; , &lt;code&gt;IV&lt;/code&gt; , and &amp;lt;PV&amp;gt; that carry a more verbose value of the 5 status variables.</source>
          <target state="translated">Devuelve una referencia de hash. Las claves del hash son las letras &lt;code&gt;D&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; y &amp;lt;P&amp;gt;, para estado de desarrollo, nivel de soporte, idioma, interfaz y licencia p&amp;uacute;blica, respectivamente. Los datos para el estado de DSLIP son recopilados por pause.perl.org cuando los autores registran sus espacios de nombres. Los valores de los 5 elementos hash son palabras de un car&amp;aacute;cter cuyo significado se describe en la tabla siguiente. Tambi&amp;eacute;n hay 5 elementos hash &lt;code&gt;DV&lt;/code&gt; , &lt;code&gt;SV&lt;/code&gt; , &lt;code&gt;LV&lt;/code&gt; , &lt;code&gt;IV&lt;/code&gt; y &amp;lt;PV&amp;gt; que tienen un valor m&amp;aacute;s detallado de las 5 variables de estado.</target>
        </trans-unit>
        <trans-unit id="846a8a177f18ddd7d4c5cb69da067db90cb82d60" translate="yes" xml:space="preserve">
          <source>Returns a hash with system information. The keys of the hash are</source>
          <target state="translated">Devuelve un hachís con la información del sistema.Las claves del hash son</target>
        </trans-unit>
        <trans-unit id="de9d6b1f96735fb6f907afc948d242c14dd6acc6" translate="yes" xml:space="preserve">
          <source>Returns a hashref of raw results, suitable for serialization by YAML.</source>
          <target state="translated">Devuelve un hashref de resultados en bruto,adecuado para la serialización por YAML.</target>
        </trans-unit>
        <trans-unit id="6bc298e6a1a0d274c33e8d9fb51b688f54c4bb11" translate="yes" xml:space="preserve">
          <source>Returns a hashref of raw test data, suitable for serialization by YAML.</source>
          <target state="translated">Devuelve un hashref de datos de prueba en bruto,adecuado para la serialización por YAML.</target>
        </trans-unit>
        <trans-unit id="d2bc660f549f867b660f3578ce74c8d85bb9d777" translate="yes" xml:space="preserve">
          <source>Returns a hexadecimal string representation of the number. See also from_hex().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03ba4bdae9939b6d186d020d06beba64551db13" translate="yes" xml:space="preserve">
          <source>Returns a language code accepted and used actually on collation. If linguistic tailoring is not provided for a language code you passed (intensionally for some languages, or due to the incomplete implementation), this method returns a string &lt;code&gt;'default'&lt;/code&gt; meaning no special tailoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22d7d194b2c4d665ff1b7f0d98a24fc7cedbe6b" translate="yes" xml:space="preserve">
          <source>Returns a letter without colon.</source>
          <target state="translated">Devuelve una carta sin colon.</target>
        </trans-unit>
        <trans-unit id="ee08bc08baedb8fe693c1f4e309bd5aa8e0eadf5" translate="yes" xml:space="preserve">
          <source>Returns a list containing all of the original symbol names from this set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4d3379cd6d2546f3806e695790fba5828bd5be" translate="yes" xml:space="preserve">
          <source>Returns a list containing all of the trimmed symbol names from this set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e96317825f6b3e1a7e1022ae8e0f3fc84ab7665" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects that were just added.</source>
          <target state="translated">Devuelve una lista de objetos &lt;code&gt;Archive::Tar::File&lt;/code&gt; que se acaban de agregar.</target>
        </trans-unit>
        <trans-unit id="d0db60e6b0c64c93b70980380d4f32ebfe27a873" translate="yes" xml:space="preserve">
          <source>Returns a list of C pre-processor options used when compiling this</source>
          <target state="translated">Devuelve una lista de las opciones del preprocesador C utilizadas al compilar este</target>
        </trans-unit>
        <trans-unit id="5e4eb4f62d9548cdeb8a87f9c752ec6862adb849" translate="yes" xml:space="preserve">
          <source>Returns a list of IDs of modules contained in a distribution file. Works only for distributions listed in the 02packages.details.txt.gz file. This typically means that just most recent version of a distribution is covered.</source>
          <target state="translated">Devuelve una lista de identificaciones de los módulos contenidos en un archivo de distribución.Funciona sólo para las distribuciones listadas en el archivo 02packages.details.txt.gz.Esto significa típicamente que sólo se cubre la versión más reciente de una distribución.</target>
        </trans-unit>
        <trans-unit id="c0f87b3d7a940704d24d36bcd5aed3d9ee92ebf3" translate="yes" xml:space="preserve">
          <source>Returns a list of OS specific files to be removed in the clean target in addition to the usual set.</source>
          <target state="translated">Devuelve una lista de archivos específicos del sistema operativo para ser eliminados en el objetivo limpio,además del conjunto habitual.</target>
        </trans-unit>
        <trans-unit id="937f07f597443939cdbf0b9f9ef72e65b77370c9" translate="yes" xml:space="preserve">
          <source>Returns a list of POD sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ab914956b384ac278323924e48988038fc1ffa" translate="yes" xml:space="preserve">
          <source>Returns a list of addr, type, subcode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf2c278ede2265c40d35666697e630e8eb496d1" translate="yes" xml:space="preserve">
          <source>Returns a list of all non-joined, non-detached Thread objects.</source>
          <target state="translated">Devuelve una lista de todos los objetos de Hilo no unidos,no separados.</target>
        </trans-unit>
        <trans-unit id="019d68cae9b1b3e9c9596ada9e8cb4855e2ca21b" translate="yes" xml:space="preserve">
          <source>Returns a list of all of the named buffers defined in the last successful match. If $all is true, then it returns all names defined, if not it returns only names which were involved in the match.</source>
          <target state="translated">Devuelve una lista de todos los búferes nombrados definidos en el último encuentro exitoso.Si $all es verdadero,entonces devuelve todos los nombres definidos,si no,devuelve sólo los nombres que estuvieron involucrados en el partido.</target>
        </trans-unit>
        <trans-unit id="a6a35d54f37dbc604d69e6d60af4c2972bfa7619" translate="yes" xml:space="preserve">
          <source>Returns a list of canonical names of available encodings that have already been loaded. To get a list of all available encodings including those that have not yet been loaded, say:</source>
          <target state="translated">Devuelve una lista de nombres canónicos de las codificaciones disponibles que ya han sido cargadas.Para obtener una lista de todas las codificaciones disponibles incluyendo las que aún no han sido cargadas,digamos:</target>
        </trans-unit>
        <trans-unit id="5dfd8709a5161101ba006ba5cfae48173942f26c" translate="yes" xml:space="preserve">
          <source>Returns a list of errors seen during validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9b1cde71bc5301e223d37824894c6945d8edb5" translate="yes" xml:space="preserve">
          <source>Returns a list of filenames extracted.</source>
          <target state="translated">Devuelve una lista de los nombres de archivo extraídos.</target>
        </trans-unit>
        <trans-unit id="c721de55976f935f544f746ba999346e964fcbb9" translate="yes" xml:space="preserve">
          <source>Returns a list of handles. If EVENT_MASK is not given then a list of all handles known will be returned. If EVENT_MASK is given then a list of handles will be returned which had one of the events specified by EVENT_MASK happen during the last call ti &lt;code&gt;poll&lt;/code&gt;</source>
          <target state="translated">Devuelve una lista de identificadores. Si no se proporciona EVENT_MASK, se devolver&amp;aacute; una lista de todos los identificadores conocidos. Si se proporciona EVENT_MASK, se devolver&amp;aacute; una lista de identificadores que tuvieron uno de los eventos especificados por EVENT_MASK durante la &amp;uacute;ltima llamada ti &lt;code&gt;poll&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aef388befca27309e982d59247b0ec6b235feea" translate="yes" xml:space="preserve">
          <source>Returns a list of language tags that are superordinate tags to $lang1 -- it gets this by removing subtags from the end of $lang1 until nothing (or just &quot;i&quot; or &quot;x&quot;) is left.</source>
          <target state="translated">Devuelve una lista de etiquetas de idiomas que son etiquetas superordinadas a $lang1 --obtiene esto eliminando las sube etiquetas del final de $lang1 hasta que no quede nada (o sólo &quot;i&quot; o &quot;x&quot;).</target>
        </trans-unit>
        <trans-unit id="35a76a46cf0b37621effdd5e8c02449fa5ac9589" translate="yes" xml:space="preserve">
          <source>Returns a list of objects' IDs contained in a bundle. The associated objects may be bundles, modules or distributions.</source>
          <target state="translated">Devuelve una lista de las identificaciones de los objetos contenidos en un paquete.Los objetos asociados pueden ser paquetes,módulos o distribuciones.</target>
        </trans-unit>
        <trans-unit id="1e1e002e4535ccd8fdc133ab209134bc583eae51" translate="yes" xml:space="preserve">
          <source>Returns a list of operator names corresponding to those operators in the set.</source>
          <target state="translated">Devuelve una lista de nombres de operadores correspondientes a los operadores del conjunto.</target>
        </trans-unit>
        <trans-unit id="cabf41f799612278a262cccf2c5bc60a495cabd6" translate="yes" xml:space="preserve">
          <source>Returns a list of packages. Note: this is a raw list of packages discovered (or assumed, in the case of &lt;code&gt;main&lt;/code&gt;). It is not filtered for &lt;code&gt;DB&lt;/code&gt;, &lt;code&gt;main&lt;/code&gt; or private packages the way the &lt;code&gt;provides&lt;/code&gt; method does. Invalid package names are not returned, for example &quot;Foo:Bar&quot;. Strange but valid package names are returned, for example &quot;Foo::Bar::&quot;, and are left up to the caller on how to handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c4008542bffc7b89b12635d94be15a4aaba4b3" translate="yes" xml:space="preserve">
          <source>Returns a list of pragmas each of which is a + or - followed by the pragma name.</source>
          <target state="translated">Devuelve una lista de pragmas,cada uno de los cuales es un+o-seguido del nombre del pragma.</target>
        </trans-unit>
        <trans-unit id="230f74d4607a7f27209056bc9bc6af781aa28fef" translate="yes" xml:space="preserve">
          <source>Returns a list of statistics about a hash.</source>
          <target state="translated">Devuelve una lista de estadísticas sobre el hachís.</target>
        </trans-unit>
        <trans-unit id="b034e3e097d1dc16a960e9cc315cde00e2ab328d" translate="yes" xml:space="preserve">
          <source>Returns a list of the C types that are mappable by this typemap object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe144bb7531ce29e46cc8ada3f153adf6f969d24" translate="yes" xml:space="preserve">
          <source>Returns a list of the header files that should be used as dependencies for XS code, for this version of Perl on this platform.</source>
          <target state="translated">Devuelve una lista de los archivos de encabezamiento que deben ser usados como dependencias para el código XS,para esta versión de Perl en esta plataforma.</target>
        </trans-unit>
        <trans-unit id="93b73efcaddb141a1af7d7aedf65f19131b01a60" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all the files in the archive.</source>
          <target state="translated">Devuelve una lista con los nombres de todos los archivos del archivo.</target>
        </trans-unit>
        <trans-unit id="c807f09f86b09b3cceb4ae58c501a57774d751c3" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all the files in the archive. The first argument can either be the name of the tar file to list or a reference to an open file handle (e.g. a GLOB reference).</source>
          <target state="translated">Devuelve una lista con los nombres de todos los archivos del archivo.El primer argumento puede ser el nombre del archivo tar a listar o una referencia a un manejador de archivo abierto (por ejemplo,una referencia GLOB).</target>
        </trans-unit>
        <trans-unit id="7a7a5fa8705763a28c56a13969e98db8aac5dbd0" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of locally applied patches, equivalent to what is shown by &lt;code&gt;perl -V&lt;/code&gt; .</source>
          <target state="translated">Devuelve una lista de los nombres de los parches aplicados localmente, equivalente a lo que muestra &lt;code&gt;perl -V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b30396864a15d4d420ef0c8997913a8b0914eb3" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of locally applied patches, equivalent to what is shown by &lt;code&gt;perl -V&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc99f0f9cafceff5505406bb1667be25637eab4" translate="yes" xml:space="preserve">
          <source>Returns a list of the original</source>
          <target state="translated">Devuelve una lista del original</target>
        </trans-unit>
        <trans-unit id="c4d5fd8b815f817b4b90a294c1839a12e02dc791" translate="yes" xml:space="preserve">
          <source>Returns a list of two elements. These are the number of new messages and the total number of messages for &lt;code&gt;USER&lt;/code&gt; .</source>
          <target state="translated">Devuelve una lista de dos elementos. Estos son el n&amp;uacute;mero de mensajes nuevos y el n&amp;uacute;mero total de mensajes para &lt;code&gt;USER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aeaf6cdcceac746328bc509d6b50598e04ab2bfa" translate="yes" xml:space="preserve">
          <source>Returns a list of two elements. These are the number of new messages and the total number of messages for &lt;code&gt;USER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f323d9ef4b0b4a03a48dce624ecba3555edd294" translate="yes" xml:space="preserve">
          <source>Returns a list of two elements. These are the number of undeleted elements and the size of the mbox in octets.</source>
          <target state="translated">Devuelve una lista de dos elementos.Estos son el número de elementos no borrados y el tamaño de la mbox en octetos.</target>
        </trans-unit>
        <trans-unit id="9af87a9cb1a81e8481bc874715c237016cdd28a2" translate="yes" xml:space="preserve">
          <source>Returns a list of two values, &lt;code&gt;$total&lt;/code&gt; and &lt;code&gt;$failed&lt;/code&gt; , describing the results. &lt;code&gt;$total&lt;/code&gt; is a hash ref summary of all the tests run. Its keys and values are this:</source>
          <target state="translated">Devuelve una lista de dos valores, &lt;code&gt;$total&lt;/code&gt; y &lt;code&gt;$failed&lt;/code&gt; , que describe los resultados. &lt;code&gt;$total&lt;/code&gt; es un resumen de referencia hash de todas las pruebas ejecutadas. Sus claves y valores son estos:</target>
        </trans-unit>
        <trans-unit id="72a9546340743274b2e2ca83c41dda68b7dcffe3" translate="yes" xml:space="preserve">
          <source>Returns a list of two values, &lt;code&gt;$total&lt;/code&gt; and &lt;code&gt;$failed&lt;/code&gt;, describing the results. &lt;code&gt;$total&lt;/code&gt; is a hash ref summary of all the tests run. Its keys and values are this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f12e9332ca79ed6d064f0bd6bc7ec7686b0040" translate="yes" xml:space="preserve">
          <source>Returns a list of whatever looks like formally valid language tags in $whatever. Not very smart, so don't get too creative with what you want to feed it.</source>
          <target state="translated">Devuelve una lista de lo que parece ser etiquetas de lenguaje formalmente válidas en $lo que sea.No es muy inteligente,así que no te pongas muy creativo con lo que quieres alimentarlo.</target>
        </trans-unit>
        <trans-unit id="93e99dff8673f03d3aefdd0b2849d5ba7ad37d1e" translate="yes" xml:space="preserve">
          <source>Returns a lowercased version of EXPR. This is the internal function implementing the &lt;code&gt;\L&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">Devuelve una versi&amp;oacute;n en min&amp;uacute;sculas de EXPR. Esta es la funci&amp;oacute;n interna que implementa el escape &lt;code&gt;\L&lt;/code&gt; en cadenas entre comillas dobles.</target>
        </trans-unit>
        <trans-unit id="b906e1deb1923677776464c5259e09182656e3a8" translate="yes" xml:space="preserve">
          <source>Returns a make fragment containing any targets which have special meaning to make. For example, .SUFFIXES and .PHONY.</source>
          <target state="translated">Devuelve un fragmento de la marca que contiene cualquier objetivo que tenga un significado especial para hacer.Por ejemplo,.SUFIXES y .PHONY.</target>
        </trans-unit>
        <trans-unit id="779fd366b6948f93004ca0affd4a6084facb9568" translate="yes" xml:space="preserve">
          <source>Returns a make fragment containing definitions for the macros init_others() initializes.</source>
          <target state="translated">Devuelve un fragmento de make que contiene definiciones para las macros init_others()inicializa.</target>
        </trans-unit>
        <trans-unit id="0a1f520e917d7a6a8c26e510f87711bcfe7275b8" translate="yes" xml:space="preserve">
          <source>Returns a make fragment defining all the macros initialized in init_platform() rather than put them in constants().</source>
          <target state="translated">Devuelve un fragmento de make que define todas las macros inicializadas en init_platform()en lugar de ponerlas en constantes().</target>
        </trans-unit>
        <trans-unit id="637299bb9b2eaf7440b62525d3ed61fd92685553" translate="yes" xml:space="preserve">
          <source>Returns a make fragment with the makemakerdeflt_target specified. This target is the first target in the Makefile, is the default target and simply points off to 'all' just in case any make variant gets confused or something gets snuck in before the real 'all' target.</source>
          <target state="translated">Devuelve un fragmento de make con el makemakerdeflt_target especificado.Este objetivo es el primer objetivo del Makefile,es el objetivo por defecto y simplemente apunta a 'todo' por si alguna variante de la marca se confunde o algo se cuela antes del objetivo real de 'todo'.</target>
        </trans-unit>
        <trans-unit id="cd09a98375c7f928e5683f491e4c838949c93b26" translate="yes" xml:space="preserve">
          <source>Returns a method name, or else a reference to the user-supplied subroutine used to print error messages. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the &lt;b&gt;carp&lt;/b&gt; builtin is used to issue error messages (this is the default behavior).</source>
          <target state="translated">Devuelve un nombre de m&amp;eacute;todo o una referencia a la subrutina proporcionada por el usuario que se utiliza para imprimir mensajes de error. Devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si se utiliza la funci&amp;oacute;n &lt;b&gt;carpa&lt;/b&gt; incorporada para emitir mensajes de error (este es el comportamiento predeterminado).</target>
        </trans-unit>
        <trans-unit id="bc41b8f81ab3f9aa00c8a62749dd8467621f1c1b" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the author</source>
          <target state="translated">Devuelve una descripción multilínea del autor</target>
        </trans-unit>
        <trans-unit id="3507dae02d9454030cfcf0029240323de623cd2b" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the bundle</source>
          <target state="translated">Devuelve una descripción multilínea del paquete</target>
        </trans-unit>
        <trans-unit id="71e02721bd8079e7f34a2b14848f3ccaad2e4d16" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the distribution</source>
          <target state="translated">Devuelve una descripción multilínea de la distribución</target>
        </trans-unit>
        <trans-unit id="57b4aa253f5016f004528200073a13e30db1494e" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the module</source>
          <target state="translated">Devuelve una descripción multilínea del módulo</target>
        </trans-unit>
        <trans-unit id="fe0ad788a356f40c6dcc75e2209325890cc57d20" translate="yes" xml:space="preserve">
          <source>Returns a name for a temporary file.</source>
          <target state="translated">Devuelve un nombre para un archivo temporal.</target>
        </trans-unit>
        <trans-unit id="0b4edb06f1dfcea66f8530475e32f9627e006e80" translate="yes" xml:space="preserve">
          <source>Returns a native FILE * used by a stdio layer. If there is none, it will create one with PerlIO_exportFILE. In either case the FILE * should be considered as belonging to PerlIO subsystem and should only be closed by calling &lt;code&gt;PerlIO_close()&lt;/code&gt; .</source>
          <target state="translated">Devuelve un ARCHIVO nativo * usado por una capa stdio. Si no hay ninguno, crear&amp;aacute; uno con PerlIO_exportFILE. En cualquier caso, el FILE * debe considerarse como perteneciente al subsistema PerlIO y solo debe cerrarse llamando a &lt;code&gt;PerlIO_close()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a68f39b3ad4599761dc7f74a8719c69d82ca3743" translate="yes" xml:space="preserve">
          <source>Returns a native FILE * used by a stdio layer. If there is none, it will create one with PerlIO_exportFILE. In either case the FILE * should be considered as belonging to PerlIO subsystem and should only be closed by calling &lt;code&gt;PerlIO_close()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc006159728110efe6fa0797d107afa27c99901a" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;IO::Socket::INET&quot;&gt;IO::Socket::INET&lt;/a&gt; instance wrapping the same filehandle. This may be useful in cases where it is required, for backward-compatibility, to have a real object of &lt;code&gt;IO::Socket::INET&lt;/code&gt; type instead of &lt;code&gt;IO::Socket::IP&lt;/code&gt;. The new object will wrap the same underlying socket filehandle as the original, so care should be taken not to continue to use both objects concurrently. Ideally the original &lt;code&gt;$sock&lt;/code&gt; should be discarded after this method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1db9b0fdb9b3aeb04c2477d7f683075df70f46" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; object for use by the &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;. &lt;code&gt;croak&lt;/code&gt;s on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d82fa85c249d532d492298b951e77b119bee7b2" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;TAP::Parser::Iterator::Array&quot;&gt;TAP::Parser::Iterator::Array&lt;/a&gt; for the source. &lt;code&gt;$source-&amp;gt;raw&lt;/code&gt; must be an array ref, or a scalar ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673b926b5bf74b1b65fe9768dd1b9f065840df5f" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;TAP::Parser::Iterator::Process&quot;&gt;TAP::Parser::Iterator::Process&lt;/a&gt; for the source. &lt;code&gt;$source-&amp;gt;raw&lt;/code&gt; must be in one of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372ac68da472af2470304ac6a6a1df562ad9b3f0" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;TAP::Parser::Iterator::Stream&quot;&gt;TAP::Parser::Iterator::Stream&lt;/a&gt; for the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a54dfdca1e654a66539624b04b12e0bfed71cd" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;TAP::Parser::Iterator::Stream&quot;&gt;TAP::Parser::Iterator::Stream&lt;/a&gt; for the source. &lt;code&gt;croak&lt;/code&gt;s on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e0bc5662a23a4eb7b1063629206afa37cacad3" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;App::Prove::State::Result&lt;/code&gt; instance.</source>
          <target state="translated">Devuelve una nueva instancia de &lt;code&gt;App::Prove::State::Result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="072af55c29b21f22fb0dbaadf0bed86846b7e6d7" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;ExtUtils::CBuilder&lt;/code&gt; object. A &lt;code&gt;config&lt;/code&gt; parameter lets you override &lt;code&gt;Config.pm&lt;/code&gt; settings for all operations performed by the object, as in the following example:</source>
          <target state="translated">Devuelve un nuevo objeto &lt;code&gt;ExtUtils::CBuilder&lt;/code&gt; . Un par&amp;aacute;metro de &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n le permite anular la configuraci&amp;oacute;n de &lt;code&gt;Config.pm&lt;/code&gt; para todas las operaciones realizadas por el objeto, como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="547c5e3b401dfbfcf933d775ab30e8a7428a8060" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; object.</source>
          <target state="translated">Devuelve un nuevo objeto &lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e0e8d9ef34307eb0fef33472e682fd06e8ae96c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; object.</source>
          <target state="translated">Devuelve un nuevo objeto &lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afba8de307940439e9161479c20bd85449a00193" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser::Source&lt;/code&gt; object.</source>
          <target state="translated">Devuelve un nuevo objeto &lt;code&gt;TAP::Parser::Source&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="945ed838143cbab9b40f4992e5e493932dca66f7" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser&lt;/code&gt; object.</source>
          <target state="translated">Devuelve un nuevo objeto &lt;code&gt;TAP::Parser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7358c499f3395e1846c123b20835372d326ebe81" translate="yes" xml:space="preserve">
          <source>Returns a new Archive::Tar::File object from a raw 512-byte tar archive chunk.</source>
          <target state="translated">Devuelve un nuevo objeto Archive::Tar::File de un trozo de archivo de 512 bytes de alquitrán en bruto.</target>
        </trans-unit>
        <trans-unit id="76931e1bf6e2f2e4f5e180a279c71e682a915e13" translate="yes" xml:space="preserve">
          <source>Returns a new Archive::Tar::File object from an existing file.</source>
          <target state="translated">Devuelve un nuevo objeto Archive::Tar::File de un archivo existente.</target>
        </trans-unit>
        <trans-unit id="62ac76734b482c19ca14f4b13dfa032dc8275fff" translate="yes" xml:space="preserve">
          <source>Returns a new Archive::Tar::File object from data.</source>
          <target state="translated">Devuelve un nuevo Archivo::Tar::Objeto de archivo de datos.</target>
        </trans-unit>
        <trans-unit id="ecf6dfd01efe542672ac1b4f915c19832cfc58b4" translate="yes" xml:space="preserve">
          <source>Returns a new Digest::SHA object. Allowed values for</source>
          <target state="translated">Devuelve un nuevo objeto del Digest::SHA.Valores permitidos para</target>
        </trans-unit>
        <trans-unit id="ff673f1020c83c46a80546e083abf82b2d23d84c" translate="yes" xml:space="preserve">
          <source>Returns a new Math::BigInt object representing zero. If used as an instance method, assigns the value to the invocand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79209b046ca6d87244e096a4d7a1a827b30b1488" translate="yes" xml:space="preserve">
          <source>Returns a new Tar object. If given any arguments, &lt;code&gt;new()&lt;/code&gt; calls the &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; method automatically, passing on the arguments provided to the &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">Devuelve un nuevo objeto Tar. Si se le da alg&amp;uacute;n argumento, &lt;code&gt;new()&lt;/code&gt; llama al m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; autom&amp;aacute;ticamente, pasando los argumentos proporcionados al m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e02660391936b1bb6605452846f43c65f28cc15" translate="yes" xml:space="preserve">
          <source>Returns a new Tar object. If given any arguments, &lt;code&gt;new()&lt;/code&gt; calls the &lt;code&gt;read()&lt;/code&gt; method automatically, passing on the arguments provided to the &lt;code&gt;read()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a34583dcda4e06685b5184711bf520f14056798" translate="yes" xml:space="preserve">
          <source>Returns a new hash reference with the metadata converted to a different form. &lt;code&gt;convert&lt;/code&gt; will die if any conversion/standardization still results in an invalid structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bedb36157b4e92c81cf9fdb8c1079f73e7118d" translate="yes" xml:space="preserve">
          <source>Returns a new hash reference with the metadata converted to the latest version of the CPAN Meta Spec. No validation is done on the result -- you must validate after merging fragments into a complete metadata document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399306dc24ce0e24c63672215dc8bc35cef0eba2" translate="yes" xml:space="preserve">
          <source>Returns a new instance of &lt;code&gt;Test::Builder&lt;/code&gt; . Any output from this child will be indented four spaces more than the parent's indentation. When done, the &lt;code&gt;finalize&lt;/code&gt; method</source>
          <target state="translated">Devuelve una nueva instancia de &lt;code&gt;Test::Builder&lt;/code&gt; . Cualquier salida de este hijo tendr&amp;aacute; una sangr&amp;iacute;a de cuatro espacios m&amp;aacute;s que la sangr&amp;iacute;a del padre. Cuando &lt;code&gt;finalize&lt;/code&gt; , el m&amp;eacute;todo de finalizaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="134388be62d962f82845f9dda9ae25f2401321fa" translate="yes" xml:space="preserve">
          <source>Returns a new typemap object. Takes an optional &lt;code&gt;file&lt;/code&gt; parameter. If set, the given file will be read. If the file doesn't exist, an empty typemap is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3379b03088fb9664fb4a626b54d04b8ede428d66" translate="yes" xml:space="preserve">
          <source>Returns a new version object based on the passed in SV:</source>
          <target state="translated">Devuelve un objeto de la nueva versión basado en el pasado en SV:</target>
        </trans-unit>
        <trans-unit id="c8345487700ba01fc47e18199b150a6447736d3e" translate="yes" xml:space="preserve">
          <source>Returns a new, empty XS parser/compiler object.</source>
          <target state="translated">Devuelve un nuevo objeto parser/compilador XS vacío.</target>
        </trans-unit>
        <trans-unit id="d18975b555ce52ec7fd6cf355697113cb2d39403" translate="yes" xml:space="preserve">
          <source>Returns a newly created &lt;code&gt;Data::Dumper&lt;/code&gt; object. The first argument is an anonymous array of values to be dumped. The optional second argument is an anonymous array of names for the values. The names need not have a leading &lt;code&gt;$&lt;/code&gt; sign, and must be comprised of alphanumeric characters. You can begin a name with a &lt;code&gt;*&lt;/code&gt; to specify that the dereferenced type must be dumped instead of the reference itself, for ARRAY and HASH references.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;Data::Dumper&lt;/code&gt; reci&amp;eacute;n creado . El primer argumento es una matriz an&amp;oacute;nima de valores que se deben descartar. El segundo argumento opcional es una matriz an&amp;oacute;nima de nombres para los valores. Los nombres no necesitan tener un signo &lt;code&gt;$&lt;/code&gt; inicial y deben estar compuestos por caracteres alfanum&amp;eacute;ricos. Puede comenzar un nombre con un &lt;code&gt;*&lt;/code&gt; para especificar que el tipo desreferenciado debe ser volcado en lugar de la referencia en s&amp;iacute;, para las referencias ARRAY y HASH.</target>
        </trans-unit>
        <trans-unit id="ce97ca87f8cdcc859ac4cd9c5dff374e29abae6a" translate="yes" xml:space="preserve">
          <source>Returns a non-empty string if EXPR is a reference, the empty string otherwise. If EXPR is not specified, &lt;code&gt;$_&lt;/code&gt; will be used. The value returned depends on the type of thing the reference is a reference to.</source>
          <target state="translated">Devuelve una cadena no vac&amp;iacute;a si EXPR es una referencia, la cadena vac&amp;iacute;a en caso contrario. Si no se especifica EXPR, se utilizar&amp;aacute; &lt;code&gt;$_&lt;/code&gt; . El valor devuelto depende del tipo de cosa a la que es una referencia la referencia.</target>
        </trans-unit>
        <trans-unit id="b3001190420830f205689a15705d11072560910d" translate="yes" xml:space="preserve">
          <source>Returns a normalized string representation of &lt;code&gt;$x&lt;/code&gt; .</source>
          <target state="translated">Devuelve una representaci&amp;oacute;n de cadena normalizada de &lt;code&gt;$x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56735b633fdb38bf2e1577bfd57c4ec20ad07224" translate="yes" xml:space="preserve">
          <source>Returns a number between &lt;code&gt;0&lt;/code&gt; &amp;amp; &lt;code&gt;1&lt;/code&gt; reflecting how confidently the raw source can be handled. For example, &lt;code&gt;0&lt;/code&gt; means the source cannot handle it, &lt;code&gt;0.5&lt;/code&gt; means it may be able to, and &lt;code&gt;1&lt;/code&gt; means it definitely can. See &lt;a href=&quot;TAP::Parser::IteratorFactory#detect_source&quot;&gt;&quot;detect_source&quot; in TAP::Parser::IteratorFactory&lt;/a&gt; for details on how this is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765e5ff450d6ae85c48fb752c475ad2344b2cec4" translate="yes" xml:space="preserve">
          <source>Returns a numeric value for a Unix-like file descriptor. Returns -1 if there isn't one. Optional. Default is fileno($fh).</source>
          <target state="translated">Devuelve un valor numérico para un descriptor de archivos tipo Unix.Devuelve -1 si no hay ninguno.Opcional.El valor predeterminado es fileno($fh).</target>
        </trans-unit>
        <trans-unit id="b85bb5b249f888f02c33e8bcae92e0d34d8747a2" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the author</source>
          <target state="translated">Devuelve una descripción de una línea del autor</target>
        </trans-unit>
        <trans-unit id="085619845cce2764231d5f073b28a019b850c6be" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the bundle</source>
          <target state="translated">Devuelve una descripción de una línea del paquete</target>
        </trans-unit>
        <trans-unit id="65f290bc48da4a7f28b295116bf32ff3707ae6f6" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the distribution</source>
          <target state="translated">Devuelve una descripción de una línea de la distribución</target>
        </trans-unit>
        <trans-unit id="d5e16f9806bf88053e899830890b09a474cdee19" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the module in four columns: The first column contains the word &lt;code&gt;Module&lt;/code&gt; , the second column consists of one character: an equals sign if this module is already installed and up-to-date, a less-than sign if this module is installed but can be upgraded, and a space if the module is not installed. The third column is the name of the module and the fourth column gives maintainer or distribution information.</source>
          <target state="translated">Devuelve una descripci&amp;oacute;n de una l&amp;iacute;nea del m&amp;oacute;dulo en cuatro columnas: la primera columna contiene la palabra &lt;code&gt;Module&lt;/code&gt; , la segunda columna consta de un car&amp;aacute;cter: un signo igual si este m&amp;oacute;dulo ya est&amp;aacute; instalado y actualizado, un signo menor que si este m&amp;oacute;dulo est&amp;aacute; instalado pero se puede actualizar, y un espacio si el m&amp;oacute;dulo no est&amp;aacute; instalado. La tercera columna es el nombre del m&amp;oacute;dulo y la cuarta columna proporciona informaci&amp;oacute;n sobre el mantenedor o la distribuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="aab97353a9a564a635e7bfd6c1c9333885951735" translate="yes" xml:space="preserve">
          <source>Returns a packed representation of the bucket array associated with a hash. Each element of the array is either an integer K, in which case it represents K empty buckets, or a reference to another array which contains the keys that are in that bucket.</source>
          <target state="translated">Devuelve una representación empaquetada del conjunto de cubos asociados a un hachís.Cada elemento de la matriz es un entero K,en cuyo caso representa K cubos vacíos,o una referencia a otra matriz que contiene las llaves que están en ese cubo.</target>
        </trans-unit>
        <trans-unit id="0de1832745700b7304c771977ab485ac554995ec" translate="yes" xml:space="preserve">
          <source>Returns a pointer to one element past the final element of the input C array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952a7c656395f75e103a065732bc235ed4e131b2" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the escaped text as held by &lt;code&gt;dsv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b2dad34c9af9b9e48afae62db216306d4b693d" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the escaped text as held by dsv.</source>
          <target state="translated">Devuelve un puntero al texto escapado tal y como lo tiene el DSV.</target>
        </trans-unit>
        <trans-unit id="45854f7b6cfbeb20b8e009a15ca9a490094c4ee3" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the next character after the parsed version string, as well as upgrading the passed in SV to an RV.</source>
          <target state="translated">Devuelve un puntero al siguiente personaje después de la cadena de la versión analizada,así como la actualización del pasado en SV a un RV.</target>
        </trans-unit>
        <trans-unit id="b18c67e8c76f7a2552948573d055ea1d9de8639e" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the physical string in the SV. The SV must contain a string. Prior to 5.9.3 it is not safe to execute this macro unless the SV's type &amp;gt;= &lt;code&gt;SVt_PV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca5459937679b6b48f08d353b33b366ffeba6a9" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the physical string in the SV. The SV must contain a string. Prior to 5.9.3 it is not safe to execute this macro unless the SV's type &amp;gt;= SVt_PV.</source>
          <target state="translated">Devuelve un puntero a la cadena f&amp;iacute;sica en el SV. El SV debe contener una cadena. Antes de 5.9.3 no es seguro ejecutar esta macro a menos que el tipo de SV&amp;gt; = SVt_PV.</target>
        </trans-unit>
        <trans-unit id="9b12f9961d47744c3a6551f011f71bd0d472fc25" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the prettified text as held by &lt;code&gt;dsv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751b690c1de8da5a67e95f434e3bb02c1f97da75" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the prettified text as held by dsv.</source>
          <target state="translated">Devuelve un puntero al texto pretendido como sostenido por el dsv.</target>
        </trans-unit>
        <trans-unit id="40cc63369afcb1bb4a7ce731db0694dd4e4dd51a" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the spot just after the last character in the string which is in the SV, where there is usually a trailing &lt;code&gt;NUL&lt;/code&gt; character (even though Perl scalars do not strictly require it). See &lt;code&gt;&lt;a href=&quot;#SvCUR&quot;&gt;&quot;SvCUR&quot;&lt;/a&gt;&lt;/code&gt;. Access the character as &lt;code&gt;*(SvEND(sv))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f6a7041767c74944f16c3dd82443358606f5aa" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the spot just after the last character in the string which is in the SV, where there is usually a trailing &lt;code&gt;NUL&lt;/code&gt; character (even though Perl scalars do not strictly require it). See &lt;code&gt;SvCUR&lt;/code&gt; . Access the character as *(SvEND(sv)).</source>
          <target state="translated">Devuelve un puntero al punto justo despu&amp;eacute;s del &amp;uacute;ltimo car&amp;aacute;cter de la cadena que est&amp;aacute; en el SV, donde normalmente hay un car&amp;aacute;cter &lt;code&gt;NUL&lt;/code&gt; al final (aunque los escalares de Perl no lo requieren estrictamente). Ver &lt;code&gt;SvCUR&lt;/code&gt; . Acceda al car&amp;aacute;cter como * (SvEND (sv)).</target>
        </trans-unit>
        <trans-unit id="f212176583214d345937848f8dbd3bc7e4f64f54" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. See &lt;code&gt;&lt;a href=&quot;#gv_stashpvn&quot;&gt;&quot;gv_stashpvn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcee1691ca884c9e72f762e9e662369b4236b3e" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. See &lt;code&gt;gv_stashpvn&lt;/code&gt; .</source>
          <target state="translated">Devuelve un puntero al alijo de un paquete espec&amp;iacute;fico. Consulte &lt;code&gt;gv_stashpvn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e282b84489a62c496fa8f05e9f39ee4b0e980a0" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. The &lt;code&gt;namelen&lt;/code&gt; parameter indicates the length of the &lt;code&gt;name&lt;/code&gt; , in bytes. &lt;code&gt;flags&lt;/code&gt; is passed to &lt;code&gt;gv_fetchpvn_flags()&lt;/code&gt; , so if set to &lt;code&gt;GV_ADD&lt;/code&gt; then the package will be created if it does not already exist. If the package does not exist and &lt;code&gt;flags&lt;/code&gt; is 0 (or any other setting that does not create packages) then NULL is returned.</source>
          <target state="translated">Devuelve un puntero al alijo de un paquete espec&amp;iacute;fico. El &lt;code&gt;namelen&lt;/code&gt; par&amp;aacute;metro indica la longitud del &lt;code&gt;name&lt;/code&gt; , en bytes. &lt;code&gt;flags&lt;/code&gt; se pasa a &lt;code&gt;gv_fetchpvn_flags()&lt;/code&gt; , por lo que si se establece en &lt;code&gt;GV_ADD&lt;/code&gt; , el paquete se crear&amp;aacute; si a&amp;uacute;n no existe. Si el paquete no existe y los &lt;code&gt;flags&lt;/code&gt; son 0 (o cualquier otra configuraci&amp;oacute;n que no cree paquetes), se devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="a7d7504a27e93a688530a237d2a5492fc73ed869" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. The &lt;code&gt;namelen&lt;/code&gt; parameter indicates the length of the &lt;code&gt;name&lt;/code&gt;, in bytes. &lt;code&gt;flags&lt;/code&gt; is passed to &lt;code&gt;gv_fetchpvn_flags()&lt;/code&gt;, so if set to &lt;code&gt;GV_ADD&lt;/code&gt; then the package will be created if it does not already exist. If the package does not exist and &lt;code&gt;flags&lt;/code&gt; is 0 (or any other setting that does not create packages) then &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2df4b092ba2f395387ccc2b641cceca25e59ce9" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. Uses &lt;code&gt;strlen&lt;/code&gt; to determine the length of &lt;code&gt;name&lt;/code&gt; , then calls &lt;code&gt;gv_stashpvn()&lt;/code&gt; .</source>
          <target state="translated">Devuelve un puntero al alijo de un paquete espec&amp;iacute;fico. Usa &lt;code&gt;strlen&lt;/code&gt; para determinar la longitud del &lt;code&gt;name&lt;/code&gt; , luego llama a &lt;code&gt;gv_stashpvn()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcc356b7db7448eb3e863486e1e4d2b9834f5ca6" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. Uses &lt;code&gt;strlen&lt;/code&gt; to determine the length of &lt;code&gt;name&lt;/code&gt;, then calls &lt;code&gt;gv_stashpvn()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbcc3b472c525493f720cd9e6594185078b9d5d" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the string in the SV, or a stringified form of the SV if the SV does not contain a string. The SV may cache the stringified version becoming &lt;code&gt;SvPOK&lt;/code&gt; . Handles 'get' magic. The &lt;code&gt;len&lt;/code&gt; variable will be set to the length of the string (this is a macro, so don't use &lt;code&gt;&amp;amp;len&lt;/code&gt; ). See also &lt;code&gt;SvPVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">Devuelve un puntero a la cadena en el SV, o una forma en cadena del SV si el SV no contiene una cadena. El SV puede almacenar en cach&amp;eacute; la versi&amp;oacute;n en &lt;code&gt;SvPOK&lt;/code&gt; convirti&amp;eacute;ndose en SvPOK . Maneja la magia 'get'. La variable &lt;code&gt;len&lt;/code&gt; se establecer&amp;aacute; con la longitud de la cadena (esta es una macro, as&amp;iacute; que no use &lt;code&gt;&amp;amp;len&lt;/code&gt; ). Consulte tambi&amp;eacute;n &lt;code&gt;SvPVx&lt;/code&gt; para obtener una versi&amp;oacute;n que garantiza evaluar sv solo una vez.</target>
        </trans-unit>
        <trans-unit id="a88f74097a1705ef494b11e74cd002439fe92345" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the string in the SV, or a stringified form of the SV if the SV does not contain a string. The SV may cache the stringified version becoming &lt;code&gt;SvPOK&lt;/code&gt;. Handles 'get' magic. The &lt;code&gt;len&lt;/code&gt; variable will be set to the length of the string (this is a macro, so don't use &lt;code&gt;&amp;amp;len&lt;/code&gt;). See also &lt;code&gt;&lt;a href=&quot;#SvPVx&quot;&gt;&quot;SvPVx&quot;&lt;/a&gt;&lt;/code&gt; for a version which guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cdf7cb07a9c099c40d2da202c258ffd257cb7b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the string value of an SV, and sets *lp to its length. If flags includes SV_GMAGIC, does an mg_get() first. Coerces sv to a string if necessary. Normally invoked via the &lt;code&gt;SvPV_flags&lt;/code&gt; macro. &lt;code&gt;sv_2pv()&lt;/code&gt; and &lt;code&gt;sv_2pv_nomg&lt;/code&gt; usually end up here too.</source>
          <target state="translated">Devuelve un puntero al valor de cadena de un SV y establece * lp en su longitud. Si las banderas incluyen SV_GMAGIC, primero hace un mg_get (). Coacciona a sv a una cadena si es necesario. Normalmente se invoca a trav&amp;eacute;s de la macro &lt;code&gt;SvPV_flags&lt;/code&gt; . &lt;code&gt;sv_2pv()&lt;/code&gt; y &lt;code&gt;sv_2pv_nomg&lt;/code&gt; generalmente tambi&amp;eacute;n terminan aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="9f2f0bb238e769b1aa485d0bda5d5603dbeb1af4" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the string value of an SV, and sets &lt;code&gt;*lp&lt;/code&gt; to its length. If flags has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, does an &lt;code&gt;mg_get()&lt;/code&gt; first. Coerces &lt;code&gt;sv&lt;/code&gt; to a string if necessary. Normally invoked via the &lt;code&gt;SvPV_flags&lt;/code&gt; macro. &lt;code&gt;sv_2pv()&lt;/code&gt; and &lt;code&gt;sv_2pv_nomg&lt;/code&gt; usually end up here too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccf75c310175c6a4488b8e04da79109516ce3e9" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the upgraded SV. Set the boolean qv if you want to force this SV to be interpreted as an &quot;extended&quot; version.</source>
          <target state="translated">Devuelve un puntero al SV mejorado.Configura el qv booleano si quieres forzar que este SV sea interpretado como una versión &quot;extendida&quot;.</target>
        </trans-unit>
        <trans-unit id="d9806bfe88ab20e21133de039751096c2b5db2cc" translate="yes" xml:space="preserve">
          <source>Returns a pre-compiled regular expression which will match a chunk of TAP corresponding to the token type. For example (not that you should really pay attention to this, &lt;code&gt;$grammar-&amp;gt;syntax_for('comment')&lt;/code&gt; will return &lt;code&gt;&lt;a href=&quot;../../functions/qr&quot;&gt;qr/^#(.*)/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Devuelve una expresi&amp;oacute;n regular precompilada que coincidir&amp;aacute; con un fragmento de TAP correspondiente al tipo de token. Por ejemplo (no es que realmente &lt;code&gt;$grammar-&amp;gt;syntax_for('comment')&lt;/code&gt; prestar atenci&amp;oacute;n a esto, $ grammar-&amp;gt; syntax_for ('comentario') devolver&amp;aacute; &lt;code&gt;&lt;a href=&quot;../../functions/qr&quot;&gt;qr/^#(.*)/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb53226f19fb687e17dfec05db69d695815b646a" translate="yes" xml:space="preserve">
          <source>Returns a pre-compiled regular expression which will match a chunk of TAP corresponding to the token type. For example (not that you should really pay attention to this, &lt;code&gt;$grammar-&amp;gt;syntax_for('comment')&lt;/code&gt; will return &lt;code&gt;qr/^#(.*)/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3207e7cc8b8fc0121180a8510dcd3eb14ba8aa26" translate="yes" xml:space="preserve">
          <source>Returns a random fractional number greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the value of EXPR. (EXPR should be positive.) If EXPR is omitted, the value &lt;code&gt;1&lt;/code&gt; is used. Currently EXPR with the value &lt;code&gt;0&lt;/code&gt; is also special-cased as &lt;code&gt;1&lt;/code&gt; (this was undocumented before Perl 5.8.0 and is subject to change in future versions of Perl). Automatically calls &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; unless &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; has already been called. See also &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d799d803f81669100d9de58e2fdb734bd9aa0e" translate="yes" xml:space="preserve">
          <source>Returns a random fractional number greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the value of EXPR. (EXPR should be positive.) If EXPR is omitted, the value &lt;code&gt;1&lt;/code&gt; is used. Currently EXPR with the value &lt;code&gt;0&lt;/code&gt; is also special-cased as &lt;code&gt;1&lt;/code&gt; (this was undocumented before Perl 5.8.0 and is subject to change in future versions of Perl). Automatically calls &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; unless &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; has already been called. See also &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Devuelve un n&amp;uacute;mero fraccionario aleatorio mayor o igual que &lt;code&gt;0&lt;/code&gt; y menor que el valor de EXPR. (EXPR debe ser positivo). Si se omite EXPR, se utiliza el valor &lt;code&gt;1&lt;/code&gt; . Actualmente, EXPR con el valor &lt;code&gt;0&lt;/code&gt; tambi&amp;eacute;n tiene un formato especial como &lt;code&gt;1&lt;/code&gt; (esto no estaba documentado antes de Perl 5.8.0 y est&amp;aacute; sujeto a cambios en futuras versiones de Perl). Llama autom&amp;aacute;ticamente a &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; a menos que ya se haya llamado a &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; . V&amp;eacute;ase tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf508d90600b43529e14c953f5a97c8d6689b38f" translate="yes" xml:space="preserve">
          <source>Returns a random fractional number greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the value of EXPR. (EXPR should be positive.) If EXPR is omitted, the value &lt;code&gt;1&lt;/code&gt; is used. Currently EXPR with the value &lt;code&gt;0&lt;/code&gt; is also special-cased as &lt;code&gt;1&lt;/code&gt; (this was undocumented before Perl 5.8.0 and is subject to change in future versions of Perl). Automatically calls &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; unless &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; has already been called. See also &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Devuelve un n&amp;uacute;mero fraccionario aleatorio mayor o igual que &lt;code&gt;0&lt;/code&gt; y menor que el valor de EXPR. (EXPR debe ser positivo). Si se omite EXPR, se utiliza el valor &lt;code&gt;1&lt;/code&gt; . Actualmente, EXPR con el valor &lt;code&gt;0&lt;/code&gt; tambi&amp;eacute;n tiene un formato especial como &lt;code&gt;1&lt;/code&gt; (esto no estaba documentado antes de Perl 5.8.0 y est&amp;aacute; sujeto a cambios en futuras versiones de Perl). Llama autom&amp;aacute;ticamente a &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; a menos que ya se haya llamado a &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; . V&amp;eacute;ase tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="615f1be3cb3c2f4b6b37c0d2b02695dba53f7f48" translate="yes" xml:space="preserve">
          <source>Returns a reference to %hash</source>
          <target state="translated">Devuelve una referencia a %hash</target>
        </trans-unit>
        <trans-unit id="4928b52facdef33a297a37259697ab23569e3b20" translate="yes" xml:space="preserve">
          <source>Returns a reference to a HASH where the keys are the message numbers and the values are the References: lines from the articles</source>
          <target state="translated">Devuelve una referencia a un HASH donde las claves son los números de los mensajes y los valores son las Referencias:líneas de los artículos</target>
        </trans-unit>
        <trans-unit id="ffe95d10b42d51f9703da93feb20ddb89337d57f" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are all the group names which match &lt;code&gt;PATTERN&lt;/code&gt; , or all of the groups if no pattern is specified, and each value contains the description text for the group.</source>
          <target state="translated">Devuelve una referencia a un hash donde las claves son todos los nombres de grupo que coinciden con &lt;code&gt;PATTERN&lt;/code&gt; , o todos los grupos si no se especifica ning&amp;uacute;n patr&amp;oacute;n, y cada valor contiene el texto de descripci&amp;oacute;n del grupo.</target>
        </trans-unit>
        <trans-unit id="78bd4c7f883c9af6844ec55948d66de1eb64f6e3" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are all the group names which match &lt;code&gt;PATTERN&lt;/code&gt; and each value is the description text for the group.</source>
          <target state="translated">Devuelve una referencia a un hash donde las claves son todos los nombres de grupo que coinciden con &lt;code&gt;PATTERN&lt;/code&gt; y cada valor es el texto de descripci&amp;oacute;n del grupo.</target>
        </trans-unit>
        <trans-unit id="555358955e66447c9845410e470999eeb0085f06" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are all the group names which match &lt;code&gt;PATTERN&lt;/code&gt;, or all of the groups if no pattern is specified, and each value contains the description text for the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb7e4208f1f422785ac5e8fe96d8f9097ffac62" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are all the possible distribution names and the values are the distribution descriptions.</source>
          <target state="translated">Devuelve una referencia a un hash donde las claves son todos los nombres posibles de la distribución y los valores son las descripciones de la distribución.</target>
        </trans-unit>
        <trans-unit id="41ec26a19426ec79ed0673c2ccdaab5bd48995f2" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are the group names and each value is a reference to an array containing the time the groups was created and an identifier, possibly an Email address, of the creator.</source>
          <target state="translated">Devuelve una referencia a un hash en el que las claves son los nombres de los grupos y cada valor es una referencia a una matriz que contiene la hora en que se crearon los grupos y un identificador,posiblemente una dirección de correo electrónico,del creador.</target>
        </trans-unit>
        <trans-unit id="17453cf382e7663b26c4fee31095feb280394c5f" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash with keys being features present in current implementation. Several optional features are used in the minimal interface: &lt;code&gt;appname&lt;/code&gt; should be present if the first argument to &lt;code&gt;new&lt;/code&gt; is recognized, and &lt;code&gt;minline&lt;/code&gt; should be present if &lt;code&gt;MinLine&lt;/code&gt; method is not dummy. &lt;code&gt;autohistory&lt;/code&gt; should be present if lines are put into history automatically (maybe subject to &lt;code&gt;MinLine&lt;/code&gt; ), and &lt;code&gt;addhistory&lt;/code&gt; if &lt;code&gt;addhistory&lt;/code&gt; method is not dummy.</source>
          <target state="translated">Devuelve una referencia a un hash con claves que son caracter&amp;iacute;sticas presentes en la implementaci&amp;oacute;n actual. Se utilizan varias caracter&amp;iacute;sticas opcionales en la interfaz m&amp;iacute;nima: &lt;code&gt;appname&lt;/code&gt; debe estar presente si se reconoce el primer argumento a &lt;code&gt;new&lt;/code&gt; , y &lt;code&gt;minline&lt;/code&gt; debe estar presente si el m&amp;eacute;todo &lt;code&gt;MinLine&lt;/code&gt; no es ficticio. &lt;code&gt;autohistory&lt;/code&gt; deber&amp;iacute;a estar presente si las l&amp;iacute;neas se colocan en el historial autom&amp;aacute;ticamente (tal vez sujeto a &lt;code&gt;MinLine&lt;/code&gt; ), y &lt;code&gt;addhistory&lt;/code&gt; si el m&amp;eacute;todo &lt;code&gt;addhistory&lt;/code&gt; no es ficticio.</target>
        </trans-unit>
        <trans-unit id="d55b5257d7028ad788055c5a22718dddf7496d57" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash with keys being features present in current implementation. Several optional features are used in the minimal interface: &lt;code&gt;appname&lt;/code&gt; should be present if the first argument to &lt;code&gt;new&lt;/code&gt; is recognized, and &lt;code&gt;minline&lt;/code&gt; should be present if &lt;code&gt;MinLine&lt;/code&gt; method is not dummy. &lt;code&gt;autohistory&lt;/code&gt; should be present if lines are put into history automatically (maybe subject to &lt;code&gt;MinLine&lt;/code&gt;), and &lt;code&gt;addhistory&lt;/code&gt; if &lt;code&gt;addhistory&lt;/code&gt; method is not dummy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e83ba134feb058a413f52ca605c72031800912" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list containing the lines, or</source>
          <target state="translated">Devuelve una referencia a una lista que contiene las líneas,o</target>
        </trans-unit>
        <trans-unit id="a73a5311ceb7c81983f36e1603ef6e15eb22357e" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list of all the active messages in &lt;code&gt;GROUP&lt;/code&gt; , or the current group if &lt;code&gt;GROUP&lt;/code&gt; is not specified.</source>
          <target state="translated">Devuelve una referencia a una lista de todos los mensajes activos en &lt;code&gt;GROUP&lt;/code&gt; , o el grupo actual si no se especifica &lt;code&gt;GROUP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b52fbecdc6756712f3097e809bcd2aa48cd9fff" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list of all the active messages in &lt;code&gt;GROUP&lt;/code&gt;, or the current group if &lt;code&gt;GROUP&lt;/code&gt; is not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3486db5bdeee77ac7492cb70ea10c73309efb0a7" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list which contains a list of groups which are recommended for a new user to subscribe to.</source>
          <target state="translated">Devuelve una referencia a una lista que contiene una lista de grupos a los que se recomienda suscribirse a un nuevo usuario.</target>
        </trans-unit>
        <trans-unit id="d6dfc9d6cb31fa87eb63c1c47373e4ad007e6281" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list which contains the message-ids of all news posted after &lt;code&gt;SINCE&lt;/code&gt; , that are in a groups which matched &lt;code&gt;GROUPS&lt;/code&gt; and a distribution which matches &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; .</source>
          <target state="translated">Devuelve una referencia a una lista que contiene los ID de mensaje de todas las noticias publicadas despu&amp;eacute;s de &lt;code&gt;SINCE&lt;/code&gt; , que est&amp;aacute;n en un grupo que coincide con &lt;code&gt;GROUPS&lt;/code&gt; y una distribuci&amp;oacute;n que coincide con &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74014424dd3eaf367a466e1a183bc4e68ba0637d" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list which contains the message-ids of all news posted after &lt;code&gt;SINCE&lt;/code&gt;, that are in a groups which matched &lt;code&gt;GROUPS&lt;/code&gt; and a distribution which matches &lt;code&gt;DISTRIBUTIONS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178c756c0070fffc4153009701333a87d6109001" translate="yes" xml:space="preserve">
          <source>Returns a reference to an ARRAY of rows, each row is an ARRAY of cells from the above chart, including labels. This:</source>
          <target state="translated">Devuelve una referencia a un ARRAY de filas,cada fila es un ARRAY de celdas del cuadro anterior,incluyendo las etiquetas.Esto:</target>
        </trans-unit>
        <trans-unit id="9a5ebe7eaaeb5e8db14fd11d03baf357b487217a" translate="yes" xml:space="preserve">
          <source>Returns a reference to an anonymous subroutine that, when executed, will call CODEREF with the Safe compartment 'in effect'. In other words, with the package namespace adjusted and the opmask enabled.</source>
          <target state="translated">Devuelve una referencia a una subrutina anónima que,cuando se ejecute,llamará al CODEREF con el compartimiento seguro &quot;en efecto&quot;.En otras palabras,con el espacio de nombres del paquete ajustado y la máscara de la opm habilitada.</target>
        </trans-unit>
        <trans-unit id="3afcce74b3b895c14382df3096068d0a37bf36e4" translate="yes" xml:space="preserve">
          <source>Returns a reference to an array where each element, itself an array reference, consists of the three fields of a line of the distrib.pats list maintained by some NNTP servers, namely: a weight, a wildmat and a value which the client may use to construct a Distribution header.</source>
          <target state="translated">Devuelve una referencia a una matriz en la que cada elemento,a su vez una referencia de matriz,consta de los tres campos de una línea de la lista distrib.pats mantenida por algunos servidores NNTP,a saber:un peso,un wildmat y un valor que el cliente puede utilizar para construir un encabezado de distribución.</target>
        </trans-unit>
        <trans-unit id="29f750b931900c32df3fa44962cae51f18d580a5" translate="yes" xml:space="preserve">
          <source>Returns a reference to an array which contain the names of the fields returned by &lt;code&gt;xover&lt;/code&gt; .</source>
          <target state="translated">Devuelve una referencia a una matriz que contiene los nombres de los campos devueltos por &lt;code&gt;xover&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="facf2cff097857d9d4b645376218ed9b966cc41a" translate="yes" xml:space="preserve">
          <source>Returns a reference to an array which contain the names of the fields returned by &lt;code&gt;xover&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec689a3e517335306f46c2053a044ceacb52aff" translate="yes" xml:space="preserve">
          <source>Returns a reference to the %hash.</source>
          <target state="translated">Devuelve una referencia al %hash.</target>
        </trans-unit>
        <trans-unit id="6600e08a5af2621b51163cee09e33d4a7b83fec5" translate="yes" xml:space="preserve">
          <source>Returns a reference to the hash.</source>
          <target state="translated">Devuelve una referencia al hachís.</target>
        </trans-unit>
        <trans-unit id="b0f26b2bf0c46a8afc11a3bf5491072a45f3046f" translate="yes" xml:space="preserve">
          <source>Returns a reference to the object underlying VARIABLE (the same value that was originally returned by the &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; call that bound the variable to a package.) Returns the undefined value if VARIABLE isn't tied to a package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c469df7eb03b91df007168353935c392b20a6a" translate="yes" xml:space="preserve">
          <source>Returns a reference to the object underlying VARIABLE (the same value that was originally returned by the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call that bound the variable to a package.) Returns the undefined value if VARIABLE isn't tied to a package.</source>
          <target state="translated">Devuelve una referencia al subyacente objeto variable (el mismo valor que fue devuelto originalmente por el &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; llamada que une la variable a un paquete.) Devuelve el valor indefinido si la variable no est&amp;aacute; ligado a un paquete.</target>
        </trans-unit>
        <trans-unit id="4fd036a2315a701fec7424b8505f28e3ef7e0a98" translate="yes" xml:space="preserve">
          <source>Returns a reference to the object underlying VARIABLE (the same value that was originally returned by the &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call that bound the variable to a package.) Returns the undefined value if VARIABLE isn't tied to a package.</source>
          <target state="translated">Devuelve una referencia al subyacente objeto variable (el mismo valor que fue devuelto originalmente por el &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; llamada que une la variable a un paquete.) Devuelve el valor indefinido si la variable no est&amp;aacute; ligado a un paquete.</target>
        </trans-unit>
        <trans-unit id="8e4a9958db2d459ae3e80355de054fcda823a5cd" translate="yes" xml:space="preserve">
          <source>Returns a reference to the regular scalar corresponding to this B::SV object. In other words, this method is the inverse operation to the svref_2object() subroutine. This scalar and other data it points at should be considered read-only: modifying them is neither safe nor guaranteed to have a sensible effect.</source>
          <target state="translated">Devuelve una referencia al escalar regular correspondiente a este objeto B::SV.En otras palabras,este método es la operación inversa a la subrutina svref_2object().Este escalar y otros datos a los que apunta deben considerarse de sólo lectura:modificarlos no es seguro ni garantiza un efecto sensato.</target>
        </trans-unit>
        <trans-unit id="71f364b844a4f88bbd2f6745f581b2d05dbe89db" translate="yes" xml:space="preserve">
          <source>Returns a scalar that has the value &lt;code&gt;$num&lt;/code&gt; in a numeric context and the value &lt;code&gt;$string&lt;/code&gt; in a string context.</source>
          <target state="translated">Devuelve un escalar que tiene el valor &lt;code&gt;$num&lt;/code&gt; en un contexto num&amp;eacute;rico y el valor &lt;code&gt;$string&lt;/code&gt; en un contexto de cadena.</target>
        </trans-unit>
        <trans-unit id="592225dd63109da96c964c6a87425fb2b362d1bf" translate="yes" xml:space="preserve">
          <source>Returns a single, generic OS type for a given operating system name. With no arguments, returns the OS type for the current value of &lt;code&gt;$^O&lt;/code&gt;. If the operating system is not recognized, the function will return the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a823e074342aa3b692686bda146fd73abdf993f1" translate="yes" xml:space="preserve">
          <source>Returns a sort key.</source>
          <target state="translated">Devuelve una llave de clasificación.</target>
        </trans-unit>
        <trans-unit id="00388bdb182045c1d860e7a7441d0b87c26ecc13" translate="yes" xml:space="preserve">
          <source>Returns a splice of the array.</source>
          <target state="translated">Devuelve un empalme de la matriz.</target>
        </trans-unit>
        <trans-unit id="f4933eba0add60e415478da1c68e0c12dbfe3402" translate="yes" xml:space="preserve">
          <source>Returns a string containing a portable, human-readable representation of the current SHA state.</source>
          <target state="translated">Devuelve una cadena que contiene una representación portátil y legible por los humanos del estado actual del SHA.</target>
        </trans-unit>
        <trans-unit id="23f7b6c9ae09efe5c4f1d8f337c10d106ef5f078" translate="yes" xml:space="preserve">
          <source>Returns a string containing all warnings and errors reported during the last time &lt;code&gt;check&lt;/code&gt; was called.</source>
          <target state="translated">Devuelve una cadena que contiene todas las advertencias y errores informados durante la &amp;uacute;ltima vez que se llam&amp;oacute; a la &lt;code&gt;check&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bb3ec99a85a8f7b5cec264a7a5e334619af049f" translate="yes" xml:space="preserve">
          <source>Returns a string describing the version.</source>
          <target state="translated">Devuelve una cadena que describe la versión.</target>
        </trans-unit>
        <trans-unit id="560ad6773aaeabd86bb34a6abf527b85bf339295" translate="yes" xml:space="preserve">
          <source>Returns a string describing what the SV is a reference to.</source>
          <target state="translated">Devuelve una cadena que describe a qué se refiere el SV.</target>
        </trans-unit>
        <trans-unit id="6d2c16a41e9d477e1648bbd1ca99b43c6ead2f97" translate="yes" xml:space="preserve">
          <source>Returns a string formatted by the usual &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt; conventions of the C library function &lt;a href=&quot;#sprintf-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;sprintf&lt;/code&gt;&lt;/a&gt;. See below for more details and see &lt;a href=&quot;http://man.he.net/man3/sprintf&quot;&gt;sprintf(3)&lt;/a&gt; or &lt;a href=&quot;http://man.he.net/man3/printf&quot;&gt;printf(3)&lt;/a&gt; on your system for an explanation of the general principles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcecd7cffd03491f568a8084530dad173866617" translate="yes" xml:space="preserve">
          <source>Returns a string formatted by the usual &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; conventions of the C library function &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;. See below for more details and see</source>
          <target state="translated">Devuelve una cadena formateada por las convenciones &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; habituales de la funci&amp;oacute;n de biblioteca C &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; . Consulte a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles y consulte</target>
        </trans-unit>
        <trans-unit id="b6f450b91a33f3ae3689a45cc3e6818d55571ccf" translate="yes" xml:space="preserve">
          <source>Returns a string formatted by the usual &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; conventions of the C library function &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;. See below for more details and see</source>
          <target state="translated">Devuelve una cadena formateada por las convenciones &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; habituales de la funci&amp;oacute;n de biblioteca C &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; . Consulte a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles y consulte</target>
        </trans-unit>
        <trans-unit id="202b7b47ba160cb50028572b7ad28637d3a8c311" translate="yes" xml:space="preserve">
          <source>Returns a string in the form &quot;0x...&quot; representing the value of the internal hash function used by perl on string STR.</source>
          <target state="translated">Devuelve una cadena en la forma &quot;0x...&quot; que representa el valor de la función hash interna utilizada por perl en la cadena STR.</target>
        </trans-unit>
        <trans-unit id="87194aea62990f0547030785b90b3212e124a93f" translate="yes" xml:space="preserve">
          <source>Returns a string of the form &quot;AUTHORID/TARBALL&quot;, where AUTHORID is the author's PAUSE ID and TARBALL is the distribution filename.</source>
          <target state="translated">Devuelve una cadena de la forma &quot;AUTORID/TARBALL&quot;,donde AUTORID es el ID de PAUSA del autor y TARBALL es el nombre del archivo de distribución.</target>
        </trans-unit>
        <trans-unit id="3ef24f53ed7b4b3b957b7c51523dd344daea3797" translate="yes" xml:space="preserve">
          <source>Returns a string representation of OBJ in base BASE with collation sequence COLLSEQ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc94fc30ba3cc2fa0b9159254cd41d822eea8bb0" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an opset. Can be handy for debugging.</source>
          <target state="translated">Devuelve una representación en cadena de una operación.Puede ser útil para la depuración.</target>
        </trans-unit>
        <trans-unit id="1bec116d350d2b93509b7d9dc1bcced2de27bdd3" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory.</source>
          <target state="translated">Devuelve una representación en cadena del directorio actual.</target>
        </trans-unit>
        <trans-unit id="4a8af8e750f17ce4e2d96c8eaead548542b60e80" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory. &quot;.&quot; on UNIX.</source>
          <target state="translated">Devuelve una representación en cadena del directorio actual.&quot;.&quot; en UNIX.</target>
        </trans-unit>
        <trans-unit id="77ef3a54abf0fabd7e61dc2cecc7ad7f2abc6542" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory: '[]' or '.'</source>
          <target state="translated">Devuelve una representación en cadena del directorio actual:'[]' o '.''.</target>
        </trans-unit>
        <trans-unit id="5277680674388d3bbc7e326522c1cd4452d83dec" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first existing directory from the following list:</source>
          <target state="translated">Devuelve una representación en cadena del primer directorio existente de la siguiente lista:</target>
        </trans-unit>
        <trans-unit id="c9b336aabb976a50f79ee5dec6a32ed8fad8410c" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from a list of possible temporary directories. Returns the current directory if no writable temporary directories are found. The list of directories checked depends on the platform; e.g. File::Spec::Unix checks &lt;code&gt;$ENV{TMPDIR}&lt;/code&gt; (unless taint is on) and</source>
          <target state="translated">Devuelve una representaci&amp;oacute;n de cadena del primer directorio grabable de una lista de posibles directorios temporales. Devuelve el directorio actual si no se encuentran directorios temporales grabables. La lista de directorios comprobados depende de la plataforma; por ejemplo, File :: Spec :: Unix comprueba &lt;code&gt;$ENV{TMPDIR}&lt;/code&gt; (a menos que est&amp;eacute; activado el taint)</target>
        </trans-unit>
        <trans-unit id="e32b0e0de234365f5abe153e4d7566e0b5a04ddf" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from the following list or '' if none are writable:</source>
          <target state="translated">Devuelve una representación en cadena del primer directorio escribible de la siguiente lista o '' si no hay ninguno escribible:</target>
        </trans-unit>
        <trans-unit id="a0d3d842c919e5a866092e0bb6deec566293781b" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from the following list or the current directory if none from the list are writable:</source>
          <target state="translated">Devuelve una representación en cadena del primer directorio escribible de la siguiente lista o del directorio actual si ninguno de la lista es escribible:</target>
        </trans-unit>
        <trans-unit id="58b3bd7b8f29cc4786b4557ea86fd0b33fd321fb" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the merged typemaps that can be included verbatim into XS. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5e90c022aa5537ad6eb0eff65c63bb424facef" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device.</source>
          <target state="translated">Devuelve una representación en cadena del dispositivo nulo.</target>
        </trans-unit>
        <trans-unit id="33f1afa9f4dc60ddad5ffcb246aaf7b3a56833f3" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device. &quot;/dev/null&quot; on UNIX.</source>
          <target state="translated">Devuelve una representación en cadena del dispositivo nulo.&quot;/dev/null&quot; en UNIX.</target>
        </trans-unit>
        <trans-unit id="a2aaef582976802d1a3c444daa581310d3ea08bc" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device: '_NLA0:' or '/dev/null'</source>
          <target state="translated">Devuelve una representación en cadena del dispositivo nulo:'_NLA0:' o '/dev/null'.</target>
        </trans-unit>
        <trans-unit id="605034adbe3cedd67ba705868c23c04adcc5604d" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the number in the given base. If a collation sequence is given, the collation sequence determines which characters are used in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005100788ced89709018dbe6806e675a340ecd90" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory.</source>
          <target state="translated">Devuelve una representación en forma de cadena del directorio principal.</target>
        </trans-unit>
        <trans-unit id="05c5bf0bf7df385d9aec918eb3fbeb645de31d72" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory. &quot;..&quot; on UNIX.</source>
          <target state="translated">Devuelve una representación en cadena del directorio principal.&quot;..&quot; en UNIX.</target>
        </trans-unit>
        <trans-unit id="ff31bc8d25cb56e6a34f4a31b112abed632e6889" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory: '[-]' or '..'</source>
          <target state="translated">Devuelve una representación en cadena del directorio principal:'[-]' o '..''.</target>
        </trans-unit>
        <trans-unit id="e638c79ff93a1833c5c089a4ded7d303efed4d93" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory.</source>
          <target state="translated">Devuelve una representación en cadena del directorio raíz.</target>
        </trans-unit>
        <trans-unit id="71cf646201c54c8e89f9b5a5e934830f492097b1" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory. &quot;/&quot; on UNIX.</source>
          <target state="translated">Devuelve una representación en cadena del directorio raíz.&quot;/&quot; en UNIX.</target>
        </trans-unit>
        <trans-unit id="cdc12f555b17b9044345b3ba73fb28e2292eddf7" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory: 'SYS$DISK:[000000]' or '/'</source>
          <target state="translated">Devuelve una representación en forma de cadena del directorio raíz:'SYS$DISK:[000000]' o '/'.</target>
        </trans-unit>
        <trans-unit id="f51477244f42679f2ab4b722dc1e0f9861aee449" translate="yes" xml:space="preserve">
          <source>Returns a string representing OBJ in decimal notation. The returned string should have no leading zeros, i.e., it should match &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ee308f6fe49527fc16e579aa24022a99372f36" translate="yes" xml:space="preserve">
          <source>Returns a string representing the current directory. On Mac OS, this is &quot;:&quot;.</source>
          <target state="translated">Devuelve una cadena que representa el directorio actual.En Mac OS,esto es &quot;:&quot;.</target>
        </trans-unit>
        <trans-unit id="1a64c5e445305e29235836bd694f435ebe2a0684" translate="yes" xml:space="preserve">
          <source>Returns a string representing the null device. On Mac OS, this is &quot;Dev:Null&quot;.</source>
          <target state="translated">Devuelve una cadena que representa el dispositivo nulo.En Mac OS,esto es &quot;Dev:Null&quot;.</target>
        </trans-unit>
        <trans-unit id="bdd3625c11a0a60a727560238ab857d33dc8a60e" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number using decimal notation. In Math::BigFloat, the output is zero padded according to the current accuracy or precision, if any of those are defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f96b799f6b66d181f8185e321db34d224e357bb" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number using decimal notation. The output corresponds to the output from &lt;code&gt;dparts()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135884f25a91cff7a18e2857a23586795760a4a2" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number using engineering notation. For finite non-zero numbers, the absolute value of the significand is greater than or equal to 1 and less than 1000, and the exponent is a multiple of 3. The output corresponds to the output from &lt;code&gt;eparts()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238665556a1d016fc9fe19ce84b0cd3f78b0c722" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number using normalized notation, the most common variant of scientific notation. For finite non-zero numbers, the absolute value of the significand is greater than or equal to 1 and less than 10. The output corresponds to the output from &lt;code&gt;nparts()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e4812cc9eed583a6078f1fb25cf305055c18a0" translate="yes" xml:space="preserve">
          <source>Returns a string representing the number using scientific notation where both the significand (mantissa) and the exponent are integers. The output corresponds to the output from &lt;code&gt;sparts()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4b7d54d23fa0e585938662d91a48d86580ab9f" translate="yes" xml:space="preserve">
          <source>Returns a string representing the parent directory. On Mac OS, this is &quot;::&quot;.</source>
          <target state="translated">Devuelve una cadena que representa el directorio principal.En Mac OS,esto es &quot;::&quot;.</target>
        </trans-unit>
        <trans-unit id="2bff7ec48659fcec317a6b6e70b50492af0c8f85" translate="yes" xml:space="preserve">
          <source>Returns a string representing the root directory. Under MacPerl, returns the name of the startup volume, since that's the closest in concept, although other volumes aren't rooted there. The name has a trailing &quot;:&quot;, because that's the correct specification for a volume name on Mac OS.</source>
          <target state="translated">Devuelve una cadena que representa el directorio raíz.En MacPerl,devuelve el nombre del volumen de inicio,ya que es el más cercano en concepto,aunque otros volúmenes no están enraizados allí.El nombre tiene un &quot;:&quot;,porque es la especificación correcta para un nombre de volumen en Mac OS.</target>
        </trans-unit>
        <trans-unit id="5717a42637ae241058bf30751c94c2540a304889" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in $dir recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e87eac1f6ad85a2ee1d885214ba3f53277c229" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in t/ but recursively.</source>
          <target state="translated">Devuelve una cuerda adecuada para la alimentación de la cáscara para devolver todas las pruebas en t/pero recursivamente.</target>
        </trans-unit>
        <trans-unit id="228127832081b05abdbbfd695053c4c0c21ba769" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in t/ but recursively. Equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092043d7a17cb71b26b87e7562f8a3995f950284" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in t/*.t.</source>
          <target state="translated">Devuelve una cuerda adecuada para la alimentación de la cáscara para devolver todas las pruebas en t/*.t.</target>
        </trans-unit>
        <trans-unit id="2e967e6e702a424e04f475bad8bee81c8f3ad6ad" translate="yes" xml:space="preserve">
          <source>Returns a string that formats the times in the TIMEDIFF object in the requested STYLE. TIMEDIFF is expected to be a Benchmark object similar to that returned by timediff().</source>
          <target state="translated">Devuelve una cadena que formatea los tiempos en el objeto TIMEDIFF en el ESTILO solicitado.Se espera que TIMEDIFF sea un objeto de referencia similar al devuelto por timediff().</target>
        </trans-unit>
        <trans-unit id="aa9f990aa572b190ac6125345ded82e913cd4094" translate="yes" xml:space="preserve">
          <source>Returns a string that is as close to the original representation as possible. If the original representation was a numeric literal, it will be returned the way perl would normally represent it in a string. This method is used whenever a version object is interpolated into a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79302e9adb838e3cc0d58e045cc7687b30d8ebe3" translate="yes" xml:space="preserve">
          <source>Returns a string with a standard 'normalized' dotted-decimal form with a leading-v and at least 3 components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e002f95bc3c570a4033291a594ce223a89fe85" translate="yes" xml:space="preserve">
          <source>Returns a suitable string describing the type of makefile being written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9820c36971f3ffd02e81158c76d27a12326e0757" translate="yes" xml:space="preserve">
          <source>Returns a textual summary of the major perl configuration values. See also &lt;code&gt;-V&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;&quot;Command Switches&quot; in perlrun&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e800e87b67cf4d6c01edd7f39567b25c80db69ed" translate="yes" xml:space="preserve">
          <source>Returns a textual summary of the major perl configuration values. See also &lt;code&gt;-V&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;.</source>
          <target state="translated">Devuelve un resumen textual de los principales valores de configuraci&amp;oacute;n de Perl. Consulte tambi&amp;eacute;n &lt;code&gt;-V&lt;/code&gt; en &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Conmutadores de comando en perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7abcb8c5e1de71f1807726c3777d9b9ac4bdd0e" translate="yes" xml:space="preserve">
          <source>Returns a true SV if &lt;code&gt;b&lt;/code&gt; is a true value, or a false SV if &lt;code&gt;b&lt;/code&gt; is 0.</source>
          <target state="translated">Devuelve un SV verdadero si &lt;code&gt;b&lt;/code&gt; es un valor verdadero, o un SV falso si &lt;code&gt;b&lt;/code&gt; es 0.</target>
        </trans-unit>
        <trans-unit id="3d25fa3e4b183b2860090a4720c2bedd9c36c5c5" translate="yes" xml:space="preserve">
          <source>Returns a true copy OBJ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7fb5743497b30a6117618897c9900ddf57838e" translate="yes" xml:space="preserve">
          <source>Returns a true or false value indicating, respectively, that alphabetic case is not or is significant when comparing file specifications. Cygwin and Win32 accept an optional drive argument.</source>
          <target state="translated">Devuelve un valor verdadero o falso que indica,respectivamente,que el caso alfabético no es o es significativo al comparar las especificaciones de los archivos.Cygwin y Win32 aceptan un argumento de unidad opcional.</target>
        </trans-unit>
        <trans-unit id="92b487d1ec1629983e5ce689a6c3fafc42be7c41" translate="yes" xml:space="preserve">
          <source>Returns a true or false value indicating, respectively, that alphabetic is not or is significant when comparing file specifications.</source>
          <target state="translated">Devuelve un valor verdadero o falso que indica,respectivamente,que el orden alfabético no es o es significativo al comparar las especificaciones de los archivos.</target>
        </trans-unit>
        <trans-unit id="8791a42bfa4b523a31b985722c6744f37061fdd2" translate="yes" xml:space="preserve">
          <source>Returns a true value (actually the handle itself) if it is present. Returns undef otherwise.</source>
          <target state="translated">Devuelve un valor real (en realidad el mango mismo)si está presente.Devuelve undef de otra manera.</target>
        </trans-unit>
        <trans-unit id="20719096c98ac0e20c43dc76fae3420cbccf672f" translate="yes" xml:space="preserve">
          <source>Returns a true value (actually the reason for skipping) if all tests were skipped.</source>
          <target state="translated">Devuelve un valor real (en realidad la razón de la omisión)si se han omitido todas las pruebas.</target>
        </trans-unit>
        <trans-unit id="04d8db8e32e1e3c49b45953a18f7b66147b5a83b" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is one, and false value otherwise.</source>
          <target state="translated">Devuelve un valor verdadero si OBJ es uno,y un valor falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="8ec5b6381f66afb74a4518ac2e2c84eb526cad42" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is ten, and false value otherwise.</source>
          <target state="translated">Devuelve un valor verdadero si OBJ es diez,y un valor falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="d5f61405c16fae034f5cc703d65aad9549ecde6e" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is two, and false value otherwise.</source>
          <target state="translated">Devuelve un valor verdadero si OBJ es dos,y un valor falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="80c27ca3c0799f492bab53b404c5a9484fdd10b9" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is zero, and false value otherwise.</source>
          <target state="translated">Devuelve un valor verdadero si OBJ es cero,y un valor falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="ced1f839258a2135af524614fee25eec1fb32c29" translate="yes" xml:space="preserve">
          <source>Returns a true value if the given handle has experienced any errors since it was opened or since the last call to &lt;code&gt;clearerr&lt;/code&gt; , or if the handle is invalid. It only returns false for a valid handle with no outstanding errors.</source>
          <target state="translated">Devuelve un valor verdadero si el identificador dado ha experimentado alg&amp;uacute;n error desde que se abri&amp;oacute; o desde la &amp;uacute;ltima llamada a &lt;code&gt;clearerr&lt;/code&gt; , o si el identificador no es v&amp;aacute;lido. Solo devuelve falso para un identificador v&amp;aacute;lido sin errores pendientes.</target>
        </trans-unit>
        <trans-unit id="b43af22d84c2ded789b19c226e5a4031286ffd58" translate="yes" xml:space="preserve">
          <source>Returns a true value if the given handle has experienced any errors since it was opened or since the last call to &lt;code&gt;clearerr&lt;/code&gt;, or if the handle is invalid. It only returns false for a valid handle with no outstanding errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ca7839e001f459a05bf2c8707fcbddda9f126b" translate="yes" xml:space="preserve">
          <source>Returns a unique identifier for &lt;code&gt;MSGNUM&lt;/code&gt; if given. If &lt;code&gt;MSGNUM&lt;/code&gt; is not given &lt;code&gt;uidl&lt;/code&gt; returns a reference to a hash where the keys are the message numbers and the values are the unique identifiers.</source>
          <target state="translated">Devuelve un identificador &amp;uacute;nico para &lt;code&gt;MSGNUM&lt;/code&gt; si se proporciona. Si &lt;code&gt;MSGNUM&lt;/code&gt; no se da &lt;code&gt;uidl&lt;/code&gt; devuelve una referencia a un hash donde las claves son los n&amp;uacute;meros de los mensajes y los valores son los identificadores &amp;uacute;nicos.</target>
        </trans-unit>
        <trans-unit id="f3115b87b153d3e8b7208c8c153b9ef2ec69d56c" translate="yes" xml:space="preserve">
          <source>Returns a valid CPAN::Meta object or dies if the supplied metadata hash reference fails to validate. Older-format metadata will be up-converted to version 2 if they validate against the original stated specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5438a38240e1e5d392fba7bf5e299554e4f73a8c" translate="yes" xml:space="preserve">
          <source>Returns a valid temporary filename but does not guarantee that the file will not be opened by someone else.</source>
          <target state="translated">Devuelve un nombre de archivo temporal válido pero no garantiza que el archivo no sea abierto por otra persona.</target>
        </trans-unit>
        <trans-unit id="2554d70912c9f7590af4651a052af04cd39908e1" translate="yes" xml:space="preserve">
          <source>Returns a value be a suitable value to pass to the C library function &lt;code&gt;exit&lt;/code&gt; (or to return from &lt;code&gt;main&lt;/code&gt;), to serve as an exit code indicating the nature of the way the interpreter terminated. This takes into account any failure of &lt;a href=&quot;#perl_parse&quot;&gt;&quot;perl_parse&quot;&lt;/a&gt; and any early exit from &lt;a href=&quot;#perl_run&quot;&gt;&quot;perl_run&quot;&lt;/a&gt;. The exit code is of the type required by the host operating system, so because of differing exit code conventions it is not portable to interpret specific numeric values as having specific meanings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70f4bda16a1627b2b96c62bb159cf833ff73717" translate="yes" xml:space="preserve">
          <source>Returns a value of true if the given section and subsection heading titles match any of the currently selected section specifications in effect from prior calls to &lt;b&gt;select()&lt;/b&gt; and &lt;b&gt;add_selection()&lt;/b&gt; (or if there are no explicitly selected/deselected sections).</source>
          <target state="translated">Devuelve un valor verdadero si la secci&amp;oacute;n dada y los t&amp;iacute;tulos de encabezado de subsecci&amp;oacute;n coinciden con cualquiera de las especificaciones de secci&amp;oacute;n actualmente seleccionadas en efecto de llamadas anteriores a &lt;b&gt;select ()&lt;/b&gt; y &lt;b&gt;add_selection ()&lt;/b&gt; (o si no hay secciones seleccionadas / deseleccionadas expl&amp;iacute;citamente).</target>
        </trans-unit>
        <trans-unit id="d93c01fa11f72dec39505ef81d9cc883f820568f" translate="yes" xml:space="preserve">
          <source>Returns a value representing the object in a pure decimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c1b3be29349e8d12e061fe92c283d88a109f76" translate="yes" xml:space="preserve">
          <source>Returns actual bytes read, or -1 on an error.</source>
          <target state="translated">Devuelve los bytes reales leídos,o -1 en un error.</target>
        </trans-unit>
        <trans-unit id="3e55593995cb9c7b8c01735b1eb8265e119ecb80" translate="yes" xml:space="preserve">
          <source>Returns all the context init callback references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdec84b86f02d4d619ba49ec7d20854cfaacb05" translate="yes" xml:space="preserve">
          <source>Returns all the context release callback references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9671066dc16dc277ce59858d28954d52b6ec521b" translate="yes" xml:space="preserve">
          <source>Returns all the exit callback references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0296416458ab000a8adab1b666edbba18ea86906" translate="yes" xml:space="preserve">
          <source>Returns all the post load callback references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53a0fafc0c67779d73de70c35a5f8e7123e0109" translate="yes" xml:space="preserve">
          <source>Returns all the pre-subtest callback references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bebf2996eece42414681984794ddac354b2cac" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::AnyInflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$AnyInflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Uncompress::AnyInflate&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$AnyInflateError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="a19b4f3d224c77b8b1cadfec1f4f42c3d8e98cb0" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::AnyUncompress&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$AnyUncompressError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Uncompress::AnyUncompress&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$AnyUncompressError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="5a45155b042a961eb0e7ee9a823ec478e805af25" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Bunzip2&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$Bunzip2Error&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Uncompress::Bunzip2&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$Bunzip2Error&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="cb53d2a7e32eb184e834ea53668850307f4b3189" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$GunzipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$GunzipError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="f60796904c77b8633be7386d5c88b1256b566349" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Inflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$InflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Uncompress::Inflate&lt;/code&gt; Inflate en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$InflateError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="2f2a104a44992f3fb1f0ed5f97b388dc95e082ce" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$RawInflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$RawInflateError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="0e95a721c52415064dadcbe635db82471a03534f" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$UnzipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$UnzipError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="8721fb2889d9e13ff861209471d0ed44f0c16f84" translate="yes" xml:space="preserve">
          <source>Returns an ANSI version of FILENAME. This may be the short name if the long name cannot be represented in the system codepage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f1c9bb441902a5fdf35a5803a9f97377d4402e" translate="yes" xml:space="preserve">
          <source>Returns an SV containing the name of the CV, mainly for use in error reporting. The CV may actually be a GV instead, in which case the returned SV holds the GV's name. Anything other than a GV or CV is treated as a string already holding the sub name, but this could change in the future.</source>
          <target state="translated">Devuelve un SV que contiene el nombre del CV,principalmente para su uso en la notificación de errores.El CV puede ser en realidad un GV en su lugar,en cuyo caso el SV devuelto contiene el nombre del GV.Cualquier cosa que no sea un GV o un CV se trata como una cadena que ya contiene el subnombre,pero esto podría cambiar en el futuro.</target>
        </trans-unit>
        <trans-unit id="c17e6ded81e77cc3c4ed51e5c6e6e24ad493fca6" translate="yes" xml:space="preserve">
          <source>Returns an array of [mnt_dir, mnt_fsname, mnt_type, mnt_opts].</source>
          <target state="translated">Devuelve una matriz de [mnt_dir,mnt_fsname,mnt_type,mnt_opts].</target>
        </trans-unit>
        <trans-unit id="7eda9f2373bf66e043e40f6b34f45328c22ad0f1" translate="yes" xml:space="preserve">
          <source>Returns an arrayref which is the linearized MRO of the given class. Uses whichever MRO is currently in effect for that class by default, or the given MRO (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; if specified as &lt;code&gt;$type&lt;/code&gt; ).</source>
          <target state="translated">Devuelve un arrayref que es el MRO linealizado de la clase dada. Utiliza el MRO que est&amp;eacute; actualmente en vigor para esa clase de forma predeterminada, o el MRO dado (ya sea &lt;code&gt;c3&lt;/code&gt; o &lt;code&gt;dfs&lt;/code&gt; si se especifica como &lt;code&gt;$type&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4d4ff4f6806edd3a6320d5e85bf4178258149beb" translate="yes" xml:space="preserve">
          <source>Returns an arrayref which is the linearized MRO of the given class. Uses whichever MRO is currently in effect for that class by default, or the given MRO (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; if specified as &lt;code&gt;$type&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d93bd99672ee0d9f28bac4810f2e0a9f858ce0" translate="yes" xml:space="preserve">
          <source>Returns an empty string per default. Dedicated to overrides from within Makefile.PL after all constants have been defined.</source>
          <target state="translated">Devuelve una cadena vacía por defecto.Dedicado a las anulaciones desde dentro del Makefile.PL después de que todas las constantes han sido definidas.</target>
        </trans-unit>
        <trans-unit id="27565014fb4428ecce4834fb83146562b2298d8a" translate="yes" xml:space="preserve">
          <source>Returns an empty string per default. Used in Makefile.PLs to add some chunk of text to the Makefile after the object is initialized.</source>
          <target state="translated">Devuelve una cadena vacía por defecto.Se usa en Makefile.PLs para añadir algún trozo de texto al Makefile después de que el objeto sea inicializado.</target>
        </trans-unit>
        <trans-unit id="773ece94435dc9a0d9fb8f6598bb9ba0974097c7" translate="yes" xml:space="preserve">
          <source>Returns an empty string. Can be used in Makefile.PLs to write some text to the Makefile at the end.</source>
          <target state="translated">Devuelve una cuerda vacía.Puede ser usado en Makefile.PLs para escribir algún texto en el Makefile al final.</target>
        </trans-unit>
        <trans-unit id="0ba0e2b37cdb54b95bc084239f7a13f38cd0d1a3" translate="yes" xml:space="preserve">
          <source>Returns an even-sized list of those pairs for which the &lt;code&gt;BLOCK&lt;/code&gt; returned true in list context, or the count of the &lt;b&gt;number of pairs&lt;/b&gt; in scalar context. (Note, therefore, in scalar context that it returns a number half the size of the count of items it would have returned in list context).</source>
          <target state="translated">Devuelve una lista de tama&amp;ntilde;o uniforme de los pares para los que &lt;code&gt;BLOCK&lt;/code&gt; devolvi&amp;oacute; verdadero en el contexto de lista, o el recuento del &lt;b&gt;n&amp;uacute;mero de pares&lt;/b&gt; en el contexto escalar. (Tenga en cuenta, por lo tanto, en contexto escalar que devuelve un n&amp;uacute;mero de la mitad del tama&amp;ntilde;o del recuento de elementos que habr&amp;iacute;a devuelto en el contexto de lista).</target>
        </trans-unit>
        <trans-unit id="4a803084a92423f9bbdc2214f1af73fd1a3aa7f5" translate="yes" xml:space="preserve">
          <source>Returns an individual &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; instance for the given test name (usually the filename). Will return a new &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; instance if the name is not found.</source>
          <target state="translated">Devuelve una instancia de &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; para el nombre de prueba dado (normalmente el nombre de archivo). Devolver&amp;aacute; una nueva instancia de &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; si no se encuentra el nombre.</target>
        </trans-unit>
        <trans-unit id="62b15d972fb903972214f5d70085ccda39e072a3" translate="yes" xml:space="preserve">
          <source>Returns an instance the appropriate class for the test token passed in.</source>
          <target state="translated">Devuelve una instancia la clase apropiada para la prueba aprobada.</target>
        </trans-unit>
        <trans-unit id="462d0f4c2a845fcf98bc21660dfe6c0e9643a50c" translate="yes" xml:space="preserve">
          <source>Returns an integer of slightly tricky interpretation. The correct use of the return value is as a truth value indicating whether the program terminated non-locally. If zero is returned, this indicates that the program ran to completion, and it is safe to make other use of the interpreter (provided that the &lt;code&gt;PERL_EXIT_DESTRUCT_END&lt;/code&gt; flag was set as described above). If a non-zero value is returned, this indicates that the interpreter wants to terminate early. The interpreter should not be just abandoned because of this desire to terminate; the caller should proceed to shut the interpreter down cleanly with &lt;a href=&quot;#perl_destruct&quot;&gt;&quot;perl_destruct&quot;&lt;/a&gt; and free it with &lt;a href=&quot;#perl_free&quot;&gt;&quot;perl_free&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a430105ba2dff479c59f466e6a7f615afa34e2c7" translate="yes" xml:space="preserve">
          <source>Returns an integer of slightly tricky interpretation. The correct use of the return value is as a truth value indicating whether there was a failure in initialisation. If zero is returned, this indicates that initialisation was successful, and it is safe to proceed to call &lt;a href=&quot;#perl_run&quot;&gt;&quot;perl_run&quot;&lt;/a&gt; and make other use of it. If a non-zero value is returned, this indicates some problem that means the interpreter wants to terminate. The interpreter should not be just abandoned upon such failure; the caller should proceed to shut the interpreter down cleanly with &lt;a href=&quot;#perl_destruct&quot;&gt;&quot;perl_destruct&quot;&lt;/a&gt; and free it with &lt;a href=&quot;#perl_free&quot;&gt;&quot;perl_free&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d40f5ac8dac983ee95dd7bfc8356adb764626cf" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the degree of similarity between tags $lang1 and $lang2 (the order of which does not matter), where similarity is the number of common elements on the left, without regard to case and to x/i- alternation.</source>
          <target state="translated">Devuelve un número entero que representa el grado de similitud entre las marcas $lang1 y $lang2 (cuyo orden no importa),donde la similitud es el número de elementos comunes a la izquierda,sin tener en cuenta el caso y la alternancia x/i-.</target>
        </trans-unit>
        <trans-unit id="e8a66ed5f3634ee37b47145a41066925578dc94a" translate="yes" xml:space="preserve">
          <source>Returns an integer which is incremented every time a real local method in the package &lt;code&gt;$classname&lt;/code&gt; changes, or the local &lt;code&gt;@ISA&lt;/code&gt; of &lt;code&gt;$classname&lt;/code&gt; is modified.</source>
          <target state="translated">Devuelve un n&amp;uacute;mero entero que se incrementa cada vez que cambia un m&amp;eacute;todo local real en el paquete &lt;code&gt;$classname&lt;/code&gt; , o se modifica el &lt;code&gt;@ISA&lt;/code&gt; local de &lt;code&gt;$classname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64f539fe6070a18713233fc6559b33a398e0bfcb" translate="yes" xml:space="preserve">
          <source>Returns an item from the queue without dequeuing anything. Defaults to the head of queue (at index position 0) if no index is specified. Negative index values are supported as with &lt;a href=&quot;perldata#Subscripts&quot;&gt;arrays&lt;/a&gt; (i.e., -1 is the end of the queue, -2 is next to last, and so on).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b574803c8b1e2181ec8e414eb3fa6557fcc86585" translate="yes" xml:space="preserve">
          <source>Returns an item from the queue without dequeuing anything. Defaults to the the head of queue (at index position 0) if no index is specified. Negative index values are supported as with &lt;a href=&quot;../perldata#Subscripts&quot;&gt;arrays&lt;/a&gt; (i.e., -1 is the end of the queue, -2 is next to last, and so on).</source>
          <target state="translated">Devuelve un art&amp;iacute;culo de la cola sin retirar nada. Por defecto, el encabezado de la cola (en la posici&amp;oacute;n de &amp;iacute;ndice 0) si no se especifica ning&amp;uacute;n &amp;iacute;ndice. Los valores de &amp;iacute;ndice negativos se admiten como con las &lt;a href=&quot;../perldata#Subscripts&quot;&gt;matrices&lt;/a&gt; (es decir, -1 es el final de la cola, -2 es el pen&amp;uacute;ltimo, y as&amp;iacute; sucesivamente).</target>
        </trans-unit>
        <trans-unit id="6dd440f57a2a22171f9e14b2f8c43dc77aa1267f" translate="yes" xml:space="preserve">
          <source>Returns an iterator function that reads the tar file without loading it all in memory. Each time the function is called it will return the next file in the tarball. The files are returned as &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects. The iterator function returns the empty list once it has exhausted the files contained.</source>
          <target state="translated">Devuelve una funci&amp;oacute;n de iterador que lee el archivo tar sin cargarlo todo en la memoria. Cada vez que se llama a la funci&amp;oacute;n, devolver&amp;aacute; el siguiente archivo en el tarball. Los archivos se devuelven como objetos &lt;code&gt;Archive::Tar::File&lt;/code&gt; . La funci&amp;oacute;n de iterador devuelve la lista vac&amp;iacute;a una vez que ha agotado los archivos contenidos.</target>
        </trans-unit>
        <trans-unit id="39c744632042ee1d8ff098a788f88d056a97923b" translate="yes" xml:space="preserve">
          <source>Returns an list of test names, sorted by run order.</source>
          <target state="translated">Devuelve una lista de nombres de pruebas,ordenadas por orden de ejecución.</target>
        </trans-unit>
        <trans-unit id="50555a5a9082cda3a7fa62bdb8ea8d0ba16d034e" translate="yes" xml:space="preserve">
          <source>Returns an object given a byte string representing the number. The byte string is in big endian byte order, so the two-byte input string &quot;\x01\x00&quot; should give an output value representing the number 256.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2400b03d5bb52977b4a556d205668b7f579ec0" translate="yes" xml:space="preserve">
          <source>Returns an object given a string STR, a base BASE, and a collation sequence COLLSEQ. Each character in STR represents a numerical value identical to the character's position in COLLSEQ. All characters in STR must be present in COLLSEQ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0122de4d083040e8479ad25e16684d7f9b4840" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Msg::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="translated">Devuelve un objeto de tipo &lt;code&gt;IPC::Msg::stat&lt;/code&gt; que es una subclase de &lt;code&gt;Class::Struct&lt;/code&gt; . Proporciona los siguientes campos. Para obtener una descripci&amp;oacute;n de estos campos, consulte la documentaci&amp;oacute;n del sistema.</target>
        </trans-unit>
        <trans-unit id="3e515b33766c1367c6880cc1c26ff4ad90fd238d" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Msg::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt;. It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee587d40ecd5f70474f52815a34281ab59e7c9b0" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Semaphore::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see your system documentation.</source>
          <target state="translated">Devuelve un objeto de tipo &lt;code&gt;IPC::Semaphore::stat&lt;/code&gt; que es una subclase de &lt;code&gt;Class::Struct&lt;/code&gt; . Proporciona los siguientes campos. Para obtener una descripci&amp;oacute;n de estos campos, consulte la documentaci&amp;oacute;n de su sistema.</target>
        </trans-unit>
        <trans-unit id="6b827cf8f7a5a32e8460a9337d0a686d9fa9dec3" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Semaphore::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt;. It provides the following fields. For a description of these fields see your system documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6426cd8a7b7a9e8b6b5d780cbcd8174773b30f" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::SharedMem::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="translated">Devuelve un objeto de tipo &lt;code&gt;IPC::SharedMem::stat&lt;/code&gt; que es una subclase de &lt;code&gt;Class::Struct&lt;/code&gt; . Proporciona los siguientes campos. Para obtener una descripci&amp;oacute;n de estos campos, consulte la documentaci&amp;oacute;n del sistema.</target>
        </trans-unit>
        <trans-unit id="2a5ed191e33d6649590544e55bdebba4db48f736" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::SharedMem::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt;. It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f167c64d216f87bf03b47635cae9a5cabf0dccc8" translate="yes" xml:space="preserve">
          <source>Returns an octal string representation of the number. See also from_oct().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f610efd81b9b632576d1d7f64e5eb973c2277760" translate="yes" xml:space="preserve">
          <source>Returns an opaque value that represents the current position of the IO::File, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if this is not possible (eg an unseekable stream such as a terminal, pipe or socket). If the fgetpos() function is available in your C library it is used to implements getpos, else perl emulates getpos using C's ftell() function.</source>
          <target state="translated">Devuelve un valor opaco que representa la posici&amp;oacute;n actual del IO :: File, o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si esto no es posible (por ejemplo, un flujo inescrutable como un terminal, tuber&amp;iacute;a o conector). Si la funci&amp;oacute;n fgetpos () est&amp;aacute; disponible en su biblioteca C, se usa para implementar getpos, de lo contrario, perl emula getpos usando la funci&amp;oacute;n ftell () de C.</target>
        </trans-unit>
        <trans-unit id="92dc02640e39231bf7f122a8e07580087d86723f" translate="yes" xml:space="preserve">
          <source>Returns an opaque value that represents the current position of the IO::File, or &lt;code&gt;undef&lt;/code&gt; if this is not possible (eg an unseekable stream such as a terminal, pipe or socket). If the fgetpos() function is available in your C library it is used to implements getpos, else perl emulates getpos using C's ftell() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b7cc80eace1c559eddbadf188c99ddc969aadd" translate="yes" xml:space="preserve">
          <source>Returns an opset containing the listed operators.</source>
          <target state="translated">Devuelve una operación que contiene los operadores enumerados.</target>
        </trans-unit>
        <trans-unit id="d5e92487638153e66141842a1ae28226a70e43f8" translate="yes" xml:space="preserve">
          <source>Returns an opset corresponding to the current opmask.</source>
          <target state="translated">Devuelve un opset correspondiente a la opmask actual.</target>
        </trans-unit>
        <trans-unit id="f44f54f1b9d5a2c5d0e8a49b190b93d6ca8183c2" translate="yes" xml:space="preserve">
          <source>Returns an opset which contains no operators.</source>
          <target state="translated">Devuelve una operación que no contiene operadores.</target>
        </trans-unit>
        <trans-unit id="141fbbd5c09415bd719ab00ae84cd140a623e4ab" translate="yes" xml:space="preserve">
          <source>Returns an opset which includes all operators.</source>
          <target state="translated">Devuelve una operación que incluye a todos los operadores.</target>
        </trans-unit>
        <trans-unit id="d8bca58ba2ee164f6d95554d0baaa25d9c405d7d" translate="yes" xml:space="preserve">
          <source>Returns an opset which is the inverse set of the one supplied.</source>
          <target state="translated">Devuelve una operación que es el conjunto inverso al suministrado.</target>
        </trans-unit>
        <trans-unit id="2f95c9547b71fafaa3cb98b1e7d3f5ddc0155d13" translate="yes" xml:space="preserve">
          <source>Returns an unsigned value with one bit set for each drive letter currently defined. If &quot;A:&quot; is currently a valid drive letter, then the &lt;code&gt;1&lt;/code&gt; bit will be set in &lt;code&gt;$uDriveBits&lt;/code&gt;. If &quot;B:&quot; is valid, then the &lt;code&gt;2&lt;/code&gt; bit will be set. If &quot;Z:&quot; is valid, then the &lt;code&gt;2**26&lt;/code&gt; [&lt;code&gt;0x4000000&lt;/code&gt;] bit will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac21ef9acae8108ad6f7a5d0d937be30579ecf48" translate="yes" xml:space="preserve">
          <source>Returns an uppercased version of EXPR. This is the internal function implementing the &lt;code&gt;\U&lt;/code&gt; escape in double-quoted strings. It does not attempt to do titlecase mapping on initial letters. See &lt;a href=&quot;#ucfirst&quot;&gt;ucfirst&lt;/a&gt; for that.</source>
          <target state="translated">Devuelve una versi&amp;oacute;n en may&amp;uacute;sculas de EXPR. Esta es la funci&amp;oacute;n interna que implementa el escape &lt;code&gt;\U&lt;/code&gt; en cadenas entre comillas dobles. No intenta hacer un mapeo de may&amp;uacute;sculas y min&amp;uacute;sculas en letras iniciales. Vea &lt;a href=&quot;#ucfirst&quot;&gt;ucfirst&lt;/a&gt; para eso.</target>
        </trans-unit>
        <trans-unit id="7b299ed7024613171446591eb341d8d267f0ba3c" translate="yes" xml:space="preserve">
          <source>Returns an uppercased version of EXPR. This is the internal function implementing the &lt;code&gt;\U&lt;/code&gt; escape in double-quoted strings. It does not attempt to do titlecase mapping on initial letters. See &lt;a href=&quot;#ucfirst-EXPR&quot;&gt;&lt;code&gt;ucfirst&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dc9227494ca43d3cfc46778c8ffc1bef79303d" translate="yes" xml:space="preserve">
          <source>Returns an uppercased version of EXPR. This is the internal function implementing the &lt;code&gt;\U&lt;/code&gt; escape in double-quoted strings. It does not attempt to do titlecase mapping on initial letters. See &lt;a href=&quot;ucfirst&quot;&gt;ucfirst&lt;/a&gt; for that.</source>
          <target state="translated">Devuelve una versi&amp;oacute;n en may&amp;uacute;sculas de EXPR. Esta es la funci&amp;oacute;n interna que implementa el escape &lt;code&gt;\U&lt;/code&gt; en cadenas entre comillas dobles. No intenta hacer un mapeo de may&amp;uacute;sculas y min&amp;uacute;sculas en letras iniciales. Vea &lt;a href=&quot;ucfirst&quot;&gt;ucfirst&lt;/a&gt; para eso.</target>
        </trans-unit>
        <trans-unit id="52c46ccade2ebc64fb0e3019739a1213315b1950" translate="yes" xml:space="preserve">
          <source>Returns any extra text to be prepended to the &lt;code&gt;$extra&lt;/code&gt; argument of &lt;code&gt;xs_make_dlsyms&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d366d03f990379d1e604eeb3ec1812173bea0262" translate="yes" xml:space="preserve">
          <source>Returns bitwise and.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806d143df713eeb372e4087e5a7b9ff847dd2212" translate="yes" xml:space="preserve">
          <source>Returns bitwise exclusive or.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85087e524b10542364b06814a459f05b220d15d" translate="yes" xml:space="preserve">
          <source>Returns bitwise or.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea9e3d29c4940b70702067231eb71497a5d13ef" translate="yes" xml:space="preserve">
          <source>Returns bitwise signed and.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3cc2b2cb9b018c14d2b8567e52cb407dd11fe2" translate="yes" xml:space="preserve">
          <source>Returns bitwise signed exclusive or.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74afa3ff029f47ceaf22005bd80722a1cbbf6efe" translate="yes" xml:space="preserve">
          <source>Returns bitwise signed or.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f695d908b8bad70e0a01dfa2bc75e5b4c3484347" translate="yes" xml:space="preserve">
          <source>Returns bytes written or -1 on an error.</source>
          <target state="translated">Devuelve los bytes escritos o -1 sobre un error.</target>
        </trans-unit>
        <trans-unit id="e7402bb1f542294caec1afa2185b988aa0eefb95" translate="yes" xml:space="preserve">
          <source>Returns change in number of windows. If &lt;code&gt;cnt&lt;/code&gt; is given, it is incremented by the number of messages retrieved.</source>
          <target state="translated">Devuelve cambio en el n&amp;uacute;mero de ventanas. Si se da &lt;code&gt;cnt&lt;/code&gt; , se incrementa por el n&amp;uacute;mero de mensajes recuperados.</target>
        </trans-unit>
        <trans-unit id="bffc067a0702bae7c5d4c160fc823f87746528bf" translate="yes" xml:space="preserve">
          <source>Returns command-line arg(s) to linker for file listing dlsyms to export. Defaults to returning empty string, can be overridden by e.g. AIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baab0a40047a0b9b96def6bef441cce306d32f8a" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;TODO&lt;/code&gt; or &lt;code&gt;SKIP&lt;/code&gt; if either directive was present for a test line.</source>
          <target state="translated">Devuelve &lt;code&gt;TODO&lt;/code&gt; o &lt;code&gt;SKIP&lt;/code&gt; si alguna de las directivas estaba presente para una l&amp;iacute;nea de prueba.</target>
        </trans-unit>
        <trans-unit id="023c9f7c6cfaba4f7915ffdb89e1bd6dfa723981" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;&lt;a href=&quot;#hv_iterinit&quot;&gt;&quot;hv_iterinit&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#hv_iternext&quot;&gt;&quot;hv_iternext&quot;&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if &lt;code&gt;HV_ITERNEXT_WANTPLACEHOLDERS&lt;/code&gt; is set the placeholders keys (for restricted hashes) will be returned in addition to normal keys. By default placeholders are automatically skipped over. Currently a placeholder is implemented with a value that is &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt;. Note that the implementation of placeholders and restricted hashes may change, and the implementation currently is insufficiently abstracted for any change to be tidy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4c47ce950bafa940901ff63cd34aeb4805c2ca" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;&lt;a href=&quot;#hv_iterinit&quot;&gt;&quot;hv_iterinit&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47cc43f85a4d7cd2e2f444b1c97cbb38eed65d0" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">Devuelve entradas de un iterador hash. Ver &lt;code&gt;hv_iterinit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5389685ef7d9db4f13e68bc30c7a8fe6f00cdee" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; and &lt;code&gt;hv_iternext&lt;/code&gt; . The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if HV_ITERNEXT_WANTPLACEHOLDERS is set the placeholders keys (for restricted hashes) will be returned in addition to normal keys. By default placeholders are automatically skipped over. Currently a placeholder is implemented with a value that is &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; . Note that the implementation of placeholders and restricted hashes may change, and the implementation currently is insufficiently abstracted for any change to be tidy.</source>
          <target state="translated">Devuelve entradas de un iterador hash. Consulte &lt;code&gt;hv_iterinit&lt;/code&gt; y &lt;code&gt;hv_iternext&lt;/code&gt; . El valor de las &lt;code&gt;flags&lt;/code&gt; normalmente ser&amp;aacute; cero; si HV_ITERNEXT_WANTPLACEHOLDERS est&amp;aacute; configurado, las claves de marcadores de posici&amp;oacute;n (para hashes restringidos) se devolver&amp;aacute;n adem&amp;aacute;s de las claves normales. Por defecto, los marcadores de posici&amp;oacute;n se omiten autom&amp;aacute;ticamente. Actualmente, un marcador de posici&amp;oacute;n se implementa con un valor que es &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; . Tenga en cuenta que la implementaci&amp;oacute;n de marcadores de posici&amp;oacute;n y hashes restringidos puede cambiar, y la implementaci&amp;oacute;n actualmente no est&amp;aacute; suficientemente abstra&amp;iacute;da para que cualquier cambio sea ordenado.</target>
        </trans-unit>
        <trans-unit id="a93a739a1304b696a52b85e019108732f6bf7466" translate="yes" xml:space="preserve">
          <source>Returns false if the stat information differs or if the link count is greater than 1. Calls croak if there is a security anomaly.</source>
          <target state="translated">Devuelve falso si la información de las estadísticas difiere o si el recuento de enlaces es mayor que 1.Llama a croar si hay una anomalía de seguridad.</target>
        </trans-unit>
        <trans-unit id="b4d48cb7dd85d6422a4c733c21b385a4179efc4f" translate="yes" xml:space="preserve">
          <source>Returns false indicating that this is a real job rather than a 'spinner'. Spinners are returned when the scheduler still has pending jobs but can't (because of locking) return one right now.</source>
          <target state="translated">Las devoluciones falsas indican que este es un trabajo real en lugar de un 'spinner'.Los giradores se devuelven cuando el programador todavía tiene trabajos pendientes pero no puede (debido al bloqueo)devolver uno ahora mismo.</target>
        </trans-unit>
        <trans-unit id="3f0f4a98ea06f65844fba9a641a25e67bf7f4c86" translate="yes" xml:space="preserve">
          <source>Returns false on error but croaks() if there is a security anomaly. The filehandle is not closed since on some occasions this is not required.</source>
          <target state="translated">Devuelve falso en el error,pero se quiebra si hay una anomalía de seguridad.El archivador no está cerrado ya que en algunas ocasiones no es necesario.</target>
        </trans-unit>
        <trans-unit id="1ab1400bb9572c4afc6a8ca43144492eb8661975" translate="yes" xml:space="preserve">
          <source>Returns false on failure.</source>
          <target state="translated">Devuelve falso en el fracaso.</target>
        </trans-unit>
        <trans-unit id="217e2367fb9a2d3efa5b2f3790dc77b76b206625" translate="yes" xml:space="preserve">
          <source>Returns false, so as to preserve failure.</source>
          <target state="translated">Devuelve falso,para preservar el fracaso.</target>
        </trans-unit>
        <trans-unit id="714c47847df2df4e45121d2349ab99ae2dc08615" translate="yes" xml:space="preserve">
          <source>Returns false. Why? Because &lt;code&gt;diag()&lt;/code&gt; is often used in conjunction with a failing test (&lt;code&gt;ok() || diag()&lt;/code&gt; ) it &quot;passes through&quot; the failure.</source>
          <target state="translated">Devuelve falso. &amp;iquest;Por qu&amp;eacute;? Debido a que &lt;code&gt;diag()&lt;/code&gt; se usa a menudo junto con una prueba fallida ( &lt;code&gt;ok() || diag()&lt;/code&gt; ), &quot;supera&quot; la falla.</target>
        </trans-unit>
        <trans-unit id="0aa49868f203687232715fa8996ff0133f2f7b61" translate="yes" xml:space="preserve">
          <source>Returns false. Why? Because &lt;code&gt;diag()&lt;/code&gt; is often used in conjunction with a failing test (&lt;code&gt;ok() || diag()&lt;/code&gt;) it &quot;passes through&quot; the failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c4aa79e37f4a57ccbcca748998eea1fd22c8c2" translate="yes" xml:space="preserve">
          <source>Returns file position. Optional. Default to be determined.</source>
          <target state="translated">Devuelve la posición del archivo.Opcional.Por defecto a determinar.</target>
        </trans-unit>
        <trans-unit id="934e037d870e5f6977afb84d17ba3004bdbd13cc" translate="yes" xml:space="preserve">
          <source>Returns file-extension for &lt;code&gt;xs_make_dlsyms&lt;/code&gt; method's output file, including any &quot;.&quot; character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86028f15606b4124cdcc97bf19499af840ba7cc5" translate="yes" xml:space="preserve">
          <source>Returns from a subroutine, &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#do-EXPR&quot;&gt;&lt;code&gt;do FILE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sort-SUBNAME-LIST&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt; block or regex eval block (but not a &lt;a href=&quot;#grep-BLOCK-LIST&quot;&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#map-BLOCK-LIST&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#do-BLOCK&quot;&gt;&lt;code&gt;do BLOCK&lt;/code&gt;&lt;/a&gt; block) with the value given in EXPR. Evaluation of EXPR may be in list, scalar, or void context, depending on how the return value will be used, and the context may vary from one execution to the next (see &lt;a href=&quot;#wantarray&quot;&gt;&lt;code&gt;wantarray&lt;/code&gt;&lt;/a&gt;). If no EXPR is given, returns an empty list in list context, the undefined value in scalar context, and (of course) nothing at all in void context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51714bf33b11ba0200086c21d32b54c81a3c8c9e" translate="yes" xml:space="preserve">
          <source>Returns from a subroutine, &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; with the value given in EXPR. Evaluation of EXPR may be in list, scalar, or void context, depending on how the return value will be used, and the context may vary from one execution to the next (see &lt;a href=&quot;wantarray&quot;&gt;wantarray&lt;/a&gt;). If no EXPR is given, returns an empty list in list context, the undefined value in scalar context, and (of course) nothing at all in void context.</source>
          <target state="translated">Retorna de una subrutina, &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; con el valor dado en EXPR. La evaluaci&amp;oacute;n de EXPR puede estar en contexto de lista, escalar o nulo, dependiendo de c&amp;oacute;mo se usar&amp;aacute; el valor de retorno, y el contexto puede variar de una ejecuci&amp;oacute;n a la siguiente (ver &lt;a href=&quot;wantarray&quot;&gt;wantarray&lt;/a&gt; ). Si no se da EXPR, devuelve una lista vac&amp;iacute;a en el contexto de lista, el valor indefinido en el contexto escalar y (por supuesto) nada en absoluto en el contexto vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="3a72d1db8163081b6b30ed57914c55833f693f8b" translate="yes" xml:space="preserve">
          <source>Returns from a subroutine, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; with the value given in EXPR. Evaluation of EXPR may be in list, scalar, or void context, depending on how the return value will be used, and the context may vary from one execution to the next (see &lt;a href=&quot;#wantarray&quot;&gt;wantarray&lt;/a&gt;). If no EXPR is given, returns an empty list in list context, the undefined value in scalar context, and (of course) nothing at all in void context.</source>
          <target state="translated">Retorna de una subrutina, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; con el valor dado en EXPR. La evaluaci&amp;oacute;n de EXPR puede estar en contexto de lista, escalar o nulo, dependiendo de c&amp;oacute;mo se usar&amp;aacute; el valor de retorno, y el contexto puede variar de una ejecuci&amp;oacute;n a la siguiente (ver &lt;a href=&quot;#wantarray&quot;&gt;wantarray&lt;/a&gt; ). Si no se da EXPR, devuelve una lista vac&amp;iacute;a en el contexto de lista, el valor indefinido en el contexto escalar y (por supuesto) nada en absoluto en el contexto vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="25cf97237f94a7f054c5b5f76f4761c9bfa22841" translate="yes" xml:space="preserve">
          <source>Returns just the filehandle alone when called in scalar context.</source>
          <target state="translated">Devuelve sólo el filehandle solo cuando se le llama en un contexto escalar.</target>
        </trans-unit>
        <trans-unit id="063c2bf6755f0dfe78c195f6e64814029ac9b16f" translate="yes" xml:space="preserve">
          <source>Returns list of extra arguments to give to the link command; the arguments are the same as for prelink(), with addition of array reference to the results of prelink(); this reference is indexed by key &lt;code&gt;prelink_res&lt;/code&gt; .</source>
          <target state="translated">Devuelve una lista de argumentos adicionales para dar al comando de enlace; los argumentos son los mismos que para prelink (), con la adici&amp;oacute;n de una referencia de matriz a los resultados de prelink (); esta referencia est&amp;aacute; indexada por clave &lt;code&gt;prelink_res&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd4feb220c26cf069f2f140c6c07fffb451d750a" translate="yes" xml:space="preserve">
          <source>Returns list of extra arguments to give to the link command; the arguments are the same as for prelink(), with addition of array reference to the results of prelink(); this reference is indexed by key &lt;code&gt;prelink_res&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934af1d2fdc455f3125756e9f6d5752f62bc6852" translate="yes" xml:space="preserve">
          <source>Returns most significant digit of the response code.</source>
          <target state="translated">Devuelve el dígito más significativo del código de respuesta.</target>
        </trans-unit>
        <trans-unit id="f7cd4d9dca1520e40236aae631eaaceb998c3cfe" translate="yes" xml:space="preserve">
          <source>Returns non zero if the account in whose security context the current process/thread is running belongs to the local group of Administrators in the built-in system domain; returns 0 if not. On Windows Vista it will only return non-zero if the process is actually running with elevated privileges. Returns &lt;code&gt;undef&lt;/code&gt; and prints a warning if an error occurred. This function always returns 1 on Win9X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cbf33d163802b79fa05ca3b5b2b59d30228089" translate="yes" xml:space="preserve">
          <source>Returns non-zero if the last code value was greater than zero and less than 400. This holds true for most command servers. Servers where this does not hold may override this method.</source>
          <target state="translated">Devuelve no cero si el último valor del código era mayor que cero y menor que 400.Esto es cierto para la mayoría de los servidores de comando.Los servidores en los que esto no se mantiene pueden anular este método.</target>
        </trans-unit>
        <trans-unit id="d3b8a42be1eb6c0144ee87cd3bf27d0b57fd222a" translate="yes" xml:space="preserve">
          <source>Returns not-a-number [C99].</source>
          <target state="translated">Devuelve no-un-número [C99].</target>
        </trans-unit>
        <trans-unit id="4487051efaa96f640a93948c10b0ceb316d405f7" translate="yes" xml:space="preserve">
          <source>Returns nothing.</source>
          <target state="translated">No devuelve nada.</target>
        </trans-unit>
        <trans-unit id="0cad33650d847fe6e499a00521fbe83e413a941a" translate="yes" xml:space="preserve">
          <source>Returns nothing. Depending on the arguments, this may call &lt;code&gt;death&lt;/code&gt; or &lt;code&gt;blurt&lt;/code&gt;, the former of which is fatal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87a2fd152dcd6ba09ab9c19b3519254c4ff232e" translate="yes" xml:space="preserve">
          <source>Returns one character from STDIN. Identical to Perl's &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">Devuelve un car&amp;aacute;cter de STDIN. Id&amp;eacute;ntico al &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; Perl , consulte &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="979d11763679b89ce5902586f155d24d7b79b38a" translate="yes" xml:space="preserve">
          <source>Returns one character from STDIN. Identical to Perl's &lt;code&gt;getc()&lt;/code&gt;, see &lt;a href=&quot;perlfunc#getc&quot;&gt;&quot;getc&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2375116b6abafc2c2c6df8319b3cfdd2f7f853d" translate="yes" xml:space="preserve">
          <source>Returns one line from &lt;code&gt;STDIN&lt;/code&gt; , similar to &amp;lt;&amp;gt;, also known as the &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;.</source>
          <target state="translated">Devuelve una l&amp;iacute;nea de &lt;code&gt;STDIN&lt;/code&gt; , similar a &amp;lt;&amp;gt;, tambi&amp;eacute;n conocida como funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; , ver &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d029c8095e350fb53c7659ac399cba7ed02a2697" translate="yes" xml:space="preserve">
          <source>Returns one line from &lt;code&gt;STDIN&lt;/code&gt;, similar to &amp;lt;&amp;gt;, also known as the &lt;code&gt;readline()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#readline&quot;&gt;&quot;readline&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dddf180784dc0cd16ce28c5081452103da6dbf4" translate="yes" xml:space="preserve">
          <source>Returns one of</source>
          <target state="translated">Devuelve uno de los</target>
        </trans-unit>
        <trans-unit id="75c678135234b51071924580b31e837d67c04323" translate="yes" xml:space="preserve">
          <source>Returns or sets the INPUT mapping code for this entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b6e02a375a7a25cfdac6b7ebf8ea24a3907d99" translate="yes" xml:space="preserve">
          <source>Returns or sets the OUTPUT mapping code for this entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb496aa02cc715c5ae7b70fa4a2f134b881285c" translate="yes" xml:space="preserve">
          <source>Returns or sets the prototype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64603cc55ad9d3a1e4340b352fdd95f03e40ebe2" translate="yes" xml:space="preserve">
          <source>Returns success status of RMS$_SYNCH if the requested service completes its task immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749c2334f29b2b96a440124d9ec5143c2f80d479" translate="yes" xml:space="preserve">
          <source>Returns the</source>
          <target state="translated">Devuelve el</target>
        </trans-unit>
        <trans-unit id="773f1a724ca36104619389fbf1cec199e82b1724" translate="yes" xml:space="preserve">
          <source>Returns the &quot;marketing&quot; name of the Windows operating system version being used. It returns names like these (random samples):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557330f645f04cff83abddfdc4f9adc9c3332136" translate="yes" xml:space="preserve">
          <source>Returns the &quot;type&quot; of a token, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; .</source>
          <target state="translated">Devuelve el &quot;tipo&quot; de un token, como &lt;code&gt;comment&lt;/code&gt; o &lt;code&gt;test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bff4e906169e9dbacf2503589d26a15341de30ac" translate="yes" xml:space="preserve">
          <source>Returns the &quot;type&quot; of a token, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3092cfd1a43c21ebf72be5f6bdb5aec039845045" translate="yes" xml:space="preserve">
          <source>Returns the 'dist' target to make an archive for distribution. This target simply checks to make sure the Makefile is up-to-date and depends on $(DIST_DEFAULT).</source>
          <target state="translated">Devuelve el objetivo 'dist' para hacer un archivo para su distribución.Este objetivo simplemente comprueba que el Makefile está actualizado y depende de $(DIST_DEFAULT).</target>
        </trans-unit>
        <trans-unit id="644c63c246c363e1c2b2762a7fb9132830ec3365" translate="yes" xml:space="preserve">
          <source>Returns the 'tardist' target which is simply so 'make tardist' works. The real work is done by the dynamically named tardistfile_target() method, tardist should have that as a dependency.</source>
          <target state="translated">Devuelve el objetivo &quot;tardo&quot; que es simplemente tan &quot;hacer tardo&quot; funciona.El trabajo real es hecho por el método llamado dinámicamente tardistfile_target(),tardist debería tener eso como una dependencia.</target>
        </trans-unit>
        <trans-unit id="c6bda7de8b1dbb955384b2e58142215b10c59cff" translate="yes" xml:space="preserve">
          <source>Returns the 'zipdist' target which is simply so 'make zipdist' works. The real work is done by the dynamically named zipdistfile_target() method, zipdist should have that as a dependency.</source>
          <target state="translated">Devuelve el objetivo &quot;zipdist&quot;,que es simplemente así que &quot;hacer zipdist&quot; funciona.El trabajo real se hace por el método llamado dinámicamente zipdistfile_target(),zipdist debería tener eso como una dependencia.</target>
        </trans-unit>
        <trans-unit id="44bd3b68bb54a52ff91997d214cdcc021951e284" translate="yes" xml:space="preserve">
          <source>Returns the 3-digit code from the last command. If a command is pending then the value 0 is returned. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;&quot;PSEUDO RESPONSES&quot;&lt;/a&gt; below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e8982ee783013779d97c7331f00522da1ee66a" translate="yes" xml:space="preserve">
          <source>Returns the 3-digit code from the last command. If a command is pending then the value 0 is returned. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&lt;/a&gt; below.)</source>
          <target state="translated">Devuelve el c&amp;oacute;digo de 3 d&amp;iacute;gitos del &amp;uacute;ltimo comando. Si hay un comando pendiente, se devuelve el valor 0. (Ver &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;RESPUESTAS DE PSEUDO a&lt;/a&gt; continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="36371a9d31017fb373e9894397ca1c32fc07f066" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object underlying Test::More for you to play with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1c168a1ebb8df5eb2d122e19cd7bd0e00bcf56" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;builder&quot;&gt;Test::Builder&lt;/a&gt; object underlying Test::More for you to play with.</source>
          <target state="translated">Devuelve el objeto &lt;a href=&quot;builder&quot;&gt;Test :: Builder&lt;/a&gt; subyacente a Test :: More para que juegues.</target>
        </trans-unit>
        <trans-unit id="f5507e12b916a918138b845b088ea21dff7ff3ee" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Archive::Tar::File&lt;/code&gt; object that was just added, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">Devuelve el objeto &lt;code&gt;Archive::Tar::File&lt;/code&gt; que se acaba de agregar, o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso de error.</target>
        </trans-unit>
        <trans-unit id="81b87a6d6d070c68602b17ca19c598ef7235d501" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Archive::Tar::File&lt;/code&gt; object that was just added, or &lt;code&gt;undef&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7afd4cf126138fccad1f937301ab4ad085f958" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects matching the filenames provided. If no filename list was passed, all &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects in the current Tar object are returned.</source>
          <target state="translated">Devuelve los objetos &lt;code&gt;Archive::Tar::File&lt;/code&gt; que coinciden con los nombres de archivo proporcionados. Si no se pas&amp;oacute; ninguna lista de nombres de archivo, se devuelven todos los objetos &lt;code&gt;Archive::Tar::File&lt;/code&gt; en el objeto Tar actual.</target>
        </trans-unit>
        <trans-unit id="18671403779dd31de76b9fe01546806bf78127b9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;ExtUtils::Typemaps::InputMap&lt;/code&gt; object for the entry if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70033990dc0fe04c6e9c89ff528c69dac139371" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;ExtUtils::Typemaps::Type&lt;/code&gt; object for the entry if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce4ef390197fdededc2353ce0fd02b79840b6a4" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;NaN&lt;/code&gt; payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986fa720e3d09a3735810c3a21de46891f4828d6" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing BEGIN blocks.</source>
          <target state="translated">Devuelve el objeto AV (es decir,en la clase B::AV)que representa los bloques BEGIN.</target>
        </trans-unit>
        <trans-unit id="a61d7ca2ff81836b68b4bd6b0696a28d3c795627" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing CHECK blocks.</source>
          <target state="translated">Devuelve el objeto AV (es decir,en la clase B::AV)que representa los bloques CHECK.</target>
        </trans-unit>
        <trans-unit id="84ebbf61627560d00156045e65f11744afbbda08" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing END blocks.</source>
          <target state="translated">Devuelve el objeto AV (es decir,en la clase B::AV)que representa los bloques END.</target>
        </trans-unit>
        <trans-unit id="9c7140959c4fee8329410b704f68b2e8bb6de30b" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing INIT blocks.</source>
          <target state="translated">Devuelve el objeto AV (es decir,en la clase B::AV)que representa los bloques INIT.</target>
        </trans-unit>
        <trans-unit id="4c7726b64a07afedf3cadbf758c4a94739a0b5c1" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing UNITCHECK blocks.</source>
          <target state="translated">Devuelve el objeto AV (es decir,en la clase B::AV)que representa los bloques de UNITCHECK.</target>
        </trans-unit>
        <trans-unit id="f7a1ec841b04ed28cca7d060727c954136ed545f" translate="yes" xml:space="preserve">
          <source>Returns the AV of the specified Perl global or package array with the given name (so it won't work on lexical variables). &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">Devuelve el AV de la matriz de paquetes o global de Perl especificada con el nombre dado (por lo que no funcionar&amp;aacute; en variables l&amp;eacute;xicas). &lt;code&gt;flags&lt;/code&gt; se pasan a &lt;code&gt;gv_fetchpv&lt;/code&gt; . Si se establece &lt;code&gt;GV_ADD&lt;/code&gt; y la variable Perl no existe, se crear&amp;aacute;. Si &lt;code&gt;flags&lt;/code&gt; es cero y la variable no existe, se devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="efaad6a6896f84e1432b5634db8caf4662225e7c" translate="yes" xml:space="preserve">
          <source>Returns the AV of the specified Perl global or package array with the given name (so it won't work on lexical variables). &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt;. If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537c3fae1ebf14119d6add6de3bb8c7c62768be8" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as binary string. Works only for integers.</source>
          <target state="translated">Devuelve el BigRat como cadena binaria.Funciona sólo para números enteros.</target>
        </trans-unit>
        <trans-unit id="24aa2429417a873bfe983d192714c535f6f41be5" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as hexadecimal string. Works only for integers.</source>
          <target state="translated">Devuelve el BigRat como cadena hexadecimal.Funciona sólo para números enteros.</target>
        </trans-unit>
        <trans-unit id="ab8db70421e588cfad590ba346078ddb17d6903a" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as octal string. Works only for integers.</source>
          <target state="translated">Devuelve el BigRat como cuerda octal.Funciona sólo para números enteros.</target>
        </trans-unit>
        <trans-unit id="3c649216dc6938b841f0aeaae7c037cd9226545c" translate="yes" xml:space="preserve">
          <source>Returns the CPAN::Author object of the maintainer who uploaded this distribution</source>
          <target state="translated">Devuelve el CPAN::Objeto del autor del mantenedor que subió esta distribución</target>
        </trans-unit>
        <trans-unit id="ed6f1df4390323a945eaf6da29122d9d7d968327" translate="yes" xml:space="preserve">
          <source>Returns the CPAN::Distribution object that contains the current version of this module.</source>
          <target state="translated">Devuelve el CPAN::Objeto de distribución que contiene la versión actual de este módulo.</target>
        </trans-unit>
        <trans-unit id="4e65e5e3a2dc703ffc81bfca0637962c4bc721c5" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt; when the Parser was created.</source>
          <target state="translated">Devuelve los tiempos de CPU (como los &lt;a href=&quot;../functions/times&quot;&gt;tiempos&lt;/a&gt; en que se cre&amp;oacute; el analizador.</target>
        </trans-unit>
        <trans-unit id="0b216502674bf502147c6841aea85103e9d2ed72" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt; when the end of TAP input was seen.</source>
          <target state="translated">Devuelve los tiempos de CPU (como los &lt;a href=&quot;../functions/times&quot;&gt;tiempos&lt;/a&gt; en los que se vio el final de la entrada TAP.</target>
        </trans-unit>
        <trans-unit id="df1bdd13c68472cd7cfb17d526aefc22246a39bc" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;perlfunc#times&quot;&gt;&quot;times&quot; in perlfunc&lt;/a&gt; when the Parser was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e9cd6ad79a9fd999baf2e427b47a111d5f4417" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;perlfunc#times&quot;&gt;&quot;times&quot; in perlfunc&lt;/a&gt; when the end of TAP input was seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d298a8675f08c9497878e3cf97947b2a586539f2" translate="yes" xml:space="preserve">
          <source>Returns the CV of the specified Perl subroutine. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpvn_flags&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl subroutine does not exist then it will be declared (which has the same effect as saying &lt;code&gt;sub name;&lt;/code&gt; ). If &lt;code&gt;GV_ADD&lt;/code&gt; is not set and the subroutine does not exist then NULL is returned.</source>
          <target state="translated">Devuelve el CV de la subrutina Perl especificada. &lt;code&gt;flags&lt;/code&gt; se pasan a &lt;code&gt;gv_fetchpvn_flags&lt;/code&gt; . Si se establece &lt;code&gt;GV_ADD&lt;/code&gt; y la subrutina Perl no existe, se declarar&amp;aacute; (lo que tiene el mismo efecto que decir &lt;code&gt;sub name;&lt;/code&gt; ). Si no se establece &lt;code&gt;GV_ADD&lt;/code&gt; y la subrutina no existe, se devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="61628b0a08438c5d5e809cbd6dbe59231d067ed8" translate="yes" xml:space="preserve">
          <source>Returns the CV of the specified Perl subroutine. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpvn_flags&lt;/code&gt;. If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl subroutine does not exist then it will be declared (which has the same effect as saying &lt;code&gt;sub name;&lt;/code&gt;). If &lt;code&gt;GV_ADD&lt;/code&gt; is not set and the subroutine does not exist then NULL is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9464e3f21444d849fa5ca49658d343068696eeb1" translate="yes" xml:space="preserve">
          <source>Returns the Depth-First Search linearization of &lt;code&gt;@ISA&lt;/code&gt; the given stash. The return value is a read-only AV*. &lt;code&gt;level&lt;/code&gt; should be 0 (it is used internally in this function's recursion).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf34184c10fde09175b3280e9b95c75b930e13f" translate="yes" xml:space="preserve">
          <source>Returns the Depth-First Search linearization of @ISA the given stash. The return value is a read-only AV*. &lt;code&gt;level&lt;/code&gt; should be 0 (it is used internally in this function's recursion).</source>
          <target state="translated">Devuelve la linealizaci&amp;oacute;n de b&amp;uacute;squeda en profundidad de @ISA el alijo dado. El valor de retorno es un AV * de solo lectura. &lt;code&gt;level&lt;/code&gt; debe ser 0 (se usa internamente en la recursividad de esta funci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="f3bb5670f054717b159feb9b9732555768713ad3" translate="yes" xml:space="preserve">
          <source>Returns the HMAC-SHA-1/224/256/384/512 digest of</source>
          <target state="translated">Devuelve el resumen del HMAC-SHA-1/224/256/384/512 de</target>
        </trans-unit>
        <trans-unit id="7b095ea66a5f74c241fda1fcfc0f3782ca0f9c54" translate="yes" xml:space="preserve">
          <source>Returns the HV of the specified Perl hash. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">Devuelve el HV del hash Perl especificado. &lt;code&gt;flags&lt;/code&gt; se pasan a &lt;code&gt;gv_fetchpv&lt;/code&gt; . Si se establece &lt;code&gt;GV_ADD&lt;/code&gt; y la variable Perl no existe, se crear&amp;aacute;. Si &lt;code&gt;flags&lt;/code&gt; es cero y la variable no existe, se devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="15e09280789fc5b12603bf4816415527863b8acc" translate="yes" xml:space="preserve">
          <source>Returns the HV of the specified Perl hash. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt;. If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae648da7903390da1c8863de50aa5f123d2d569" translate="yes" xml:space="preserve">
          <source>Returns the ID of the thread. Thread IDs are unique integers with the main thread in a program being 0, and incrementing by 1 for every thread created.</source>
          <target state="translated">Devuelve la identificación del hilo.Los ID de los hilos son enteros únicos con el hilo principal de un programa siendo 0,e incrementándose en 1 por cada hilo creado.</target>
        </trans-unit>
        <trans-unit id="fc9ab720b7f2a57a3ff28409dc115ce9b93b30f5" translate="yes" xml:space="preserve">
          <source>Returns the IO::File's current position, or -1 on error.</source>
          <target state="translated">Devuelve la posición actual de IO::File,o -1 por error.</target>
        </trans-unit>
        <trans-unit id="e0859a1b7107e4d8dcf787be1f3522722577e831" translate="yes" xml:space="preserve">
          <source>Returns the Latin-1 (including ASCII and control characters) equivalent of the input native code point given by &lt;code&gt;ch&lt;/code&gt;. Thus, &lt;code&gt;NATIVE_TO_LATIN1(193)&lt;/code&gt; on EBCDIC platforms returns 65. These each represent the character &lt;code&gt;&quot;A&quot;&lt;/code&gt; on their respective platforms. On ASCII platforms no conversion is needed, so this macro expands to just its input, adding no time nor space requirements to the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80231f6d9f9c07146e482e2bc9b11ca9b2769858" translate="yes" xml:space="preserve">
          <source>Returns the MRO of the given class (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; ).</source>
          <target state="translated">Devuelve el MRO de la clase dada (ya sea &lt;code&gt;c3&lt;/code&gt; o &lt;code&gt;dfs&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d4b74b97b4a872b5bb2a916af819a39064b00995" translate="yes" xml:space="preserve">
          <source>Returns the MRO of the given class (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821017612ac6cfdd0f3f8c6f9f46e81952ff357e" translate="yes" xml:space="preserve">
          <source>Returns the Nth digit in OBJ as a Perl scalar. N is a Perl scalar, where zero refers to the rightmost (least significant) digit, and negative values count from the left (most significant digit). If $obj represents the number 123, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b7cbe2e82499e11a40661f3f1b420ae4bdb2e8" translate="yes" xml:space="preserve">
          <source>Returns the Nth root of OBJ, truncated to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c310da04f2c916d16c1dfb8bbad9b9e0d93f55bb" translate="yes" xml:space="preserve">
          <source>Returns the OP's parent. If it has no parent, or if your perl wasn't built with &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; , returns NULL.</source>
          <target state="translated">Devuelve el padre del OP. Si no tiene padre, o si su perl no fue construido con &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; , devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="83da1ba2181a2b43d4749acf0b27100a078cb90a" translate="yes" xml:space="preserve">
          <source>Returns the OP's parent. If it has no parent, or if your perl wasn't built with &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt;, returns NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22478030a1ea2bac8f7f1a2fefee70d7119eb4de" translate="yes" xml:space="preserve">
          <source>Returns the PADLIST object (i.e. in class B::PADLIST) of the global comppadlist. In Perl 5.16 and earlier it returns an AV object (class B::AV).</source>
          <target state="translated">Devuelve el objeto PADLIST (es decir,en la clase B::PADLIST)de la lista global.En Perl 5.16 y anteriores devuelve un objeto AV (clase B::AV).</target>
        </trans-unit>
        <trans-unit id="4432f1d6ac3b94221425a15bb485cfe6c4ef29f2" translate="yes" xml:space="preserve">
          <source>Returns the POD data in the given section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4e2edd77e2fbe8ab85e69bd4a074d4835973de" translate="yes" xml:space="preserve">
          <source>Returns the SV (if any) returned by the method, or &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3938ec41dac79cf90f8a35a5402a74b64db5051f" translate="yes" xml:space="preserve">
          <source>Returns the SV (if any) returned by the method, or NULL on failure.</source>
          <target state="translated">Devuelve el SV (si lo hay)devuelto por el método,o NULL al fallar.</target>
        </trans-unit>
        <trans-unit id="d9ae6a3e90556af0a58312f6c8f5a6dfe0531c83" translate="yes" xml:space="preserve">
          <source>Returns the SV at the specified index in the array. The &lt;code&gt;key&lt;/code&gt; is the index. If lval is true, you are guaranteed to get a real SV back (in case it wasn't real before), which you can then modify. Check that the return value is non-null before dereferencing it to a &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">Devuelve el SV en el &amp;iacute;ndice especificado en la matriz. La &lt;code&gt;key&lt;/code&gt; es el &amp;iacute;ndice. Si lval es verdadero, tiene la garant&amp;iacute;a de recuperar un SV real (en caso de que no fuera real antes), que luego puede modificar. Compruebe que el valor de retorno no sea nulo antes de eliminar la referencia a un &lt;code&gt;SV*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96d73b679d6f9f6565334b1ca2c05bf50ebe0c90" translate="yes" xml:space="preserve">
          <source>Returns the SV at the specified index in the array. The &lt;code&gt;key&lt;/code&gt; is the index. If lval is true, you are guaranteed to get a real SV back (in case it wasn't real before), which you can then modify. Check that the return value is non-null before dereferencing it to a &lt;code&gt;SV*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e731f2ce68230e148be05fab3c6e6367e24c28" translate="yes" xml:space="preserve">
          <source>Returns the SV for &lt;code&gt;$@&lt;/code&gt;, creating it if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc95d995c648f3e5efe5bd8de55e1e4c9f4df2bb" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;amagic_generation&lt;/code&gt; . As of Perl 5.18, this is just an alias to &lt;code&gt;PL_na&lt;/code&gt; , so its value is meaningless.</source>
          <target state="translated">Devuelve el objeto SV correspondiente a la variable C &lt;code&gt;amagic_generation&lt;/code&gt; . A partir de Perl 5.18, esto es solo un alias de &lt;code&gt;PL_na&lt;/code&gt; , por lo que su valor no tiene sentido.</target>
        </trans-unit>
        <trans-unit id="b0f811a3bdf6d2eb966d0c16e021f3522f281bb5" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;amagic_generation&lt;/code&gt;. As of Perl 5.18, this is just an alias to &lt;code&gt;PL_na&lt;/code&gt;, so its value is meaningless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d704a67336c03147fc7ed90d617645b6b1c51b6" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_no&lt;/code&gt; .</source>
          <target state="translated">Devuelve el objeto SV correspondiente a la variable C &lt;code&gt;sv_no&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f135133822762a4b5c646a61e81d206ac6ea719a" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_no&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4836bd4a2981b6da0a9a1a815dbe758c8f4a54f" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_undef&lt;/code&gt; .</source>
          <target state="translated">Devuelve el objeto SV correspondiente a la variable C &lt;code&gt;sv_undef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3d1943220594ad94cd1d78ea91c5f335dcca0f0" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283b11ced8b29bf19a62b8ac4b5800a68b4bf6b" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_yes&lt;/code&gt; .</source>
          <target state="translated">Devuelve el objeto SV correspondiente a la variable C &lt;code&gt;sv_yes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b17a3bc7319d68a1f921d2b2a1d4312613490a5e" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_yes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4eb3a26c49ad7805cf81891436e5c0fbecda4e7" translate="yes" xml:space="preserve">
          <source>Returns the SV of the specified Perl scalar. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">Devuelve el SV del escalar de Perl especificado. &lt;code&gt;flags&lt;/code&gt; se pasan a &lt;code&gt;gv_fetchpv&lt;/code&gt; . Si se establece &lt;code&gt;GV_ADD&lt;/code&gt; y la variable Perl no existe, se crear&amp;aacute;. Si &lt;code&gt;flags&lt;/code&gt; es cero y la variable no existe, se devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="6b6822f52617175abaf60190bd7b520e61157f10" translate="yes" xml:space="preserve">
          <source>Returns the SV of the specified Perl scalar. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt;. If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9142ffc1740fb05792037b696ff2b138014c5d8e" translate="yes" xml:space="preserve">
          <source>Returns the SV which corresponds to the specified key in the hash. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. If &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. This means that if there is no value in the hash associated with the given key, then one is created and a pointer to it is returned. The &lt;code&gt;SV*&lt;/code&gt; it points to can be assigned to. But always check that the return value is non-null before dereferencing it to an &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">Devuelve el SV que corresponde a la clave especificada en el hash. El valor absoluto de &lt;code&gt;klen&lt;/code&gt; es la longitud de la clave. Si &lt;code&gt;klen&lt;/code&gt; es negativo, se supone que la clave est&amp;aacute; en Unicode codificado en UTF-8. Si se establece &lt;code&gt;lval&lt;/code&gt; , la recuperaci&amp;oacute;n ser&amp;aacute; parte de una tienda. Esto significa que si no hay ning&amp;uacute;n valor en el hash asociado con la clave dada, entonces se crea uno y se devuelve un puntero. El &lt;code&gt;SV*&lt;/code&gt; al que apunta se puede asignar. Pero siempre verifique que el valor de retorno no sea nulo antes de eliminar la referencia a un &lt;code&gt;SV*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9e3e842b6a886f90dbc1f39212fd27dd50dfc8c" translate="yes" xml:space="preserve">
          <source>Returns the SV which corresponds to the specified key in the hash. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. If &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. This means that if there is no value in the hash associated with the given key, then one is created and a pointer to it is returned. The &lt;code&gt;SV*&lt;/code&gt; it points to can be assigned to. But always check that the return value is non-null before dereferencing it to an &lt;code&gt;SV*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8939d4f22418ee3872f0a426602f1b7fd0de83a" translate="yes" xml:space="preserve">
          <source>Returns the Unicode (not-native) code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">Devuelve el punto de c&amp;oacute;digo Unicode (no nativo) del primer car&amp;aacute;cter en la cadena &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; que se supone que est&amp;aacute; en codificaci&amp;oacute;n UTF-8; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; puntos a 1 m&amp;aacute;s all&amp;aacute; del final de &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;retlen&lt;/code&gt; se establecer&amp;aacute; con la longitud, en bytes, de ese car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="06a84a4787435693faaf4622928f0382f6484f04" translate="yes" xml:space="preserve">
          <source>Returns the Unicode (not-native) code point of the first character in the string &lt;code&gt;s&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;send&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;s&lt;/code&gt;. &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af43a95c70ff3a78c17e8ede165581061e57305f" translate="yes" xml:space="preserve">
          <source>Returns the Unicode code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">Devuelve el punto de c&amp;oacute;digo Unicode del primer car&amp;aacute;cter de la cadena &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; que se supone que est&amp;aacute; en codificaci&amp;oacute;n UTF-8; &lt;code&gt;retlen&lt;/code&gt; se establecer&amp;aacute; en la longitud, en bytes, de ese car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="f37561ae8d3064396e62d22e4eb6d0ce09993d57" translate="yes" xml:space="preserve">
          <source>Returns the Unicode code point of the first character in the string &lt;code&gt;s&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64aff81687d3652da7252cc3a977c68538bc1ae" translate="yes" xml:space="preserve">
          <source>Returns the Unicode equivalent of the input native code point given by &lt;code&gt;ch&lt;/code&gt;. Thus, &lt;code&gt;NATIVE_TO_UNI(195)&lt;/code&gt; on EBCDIC platforms returns 67. These each represent the character &lt;code&gt;&quot;C&quot;&lt;/code&gt; on their respective platforms. On ASCII platforms no conversion is needed, so this macro expands to just its input, adding no time nor space requirements to the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492c09171260cfe2e532067f792c91bbd4044631" translate="yes" xml:space="preserve">
          <source>Returns the Unix/Posix numeric file descriptor for the handle. Normally &lt;code&gt;PerlIOBase_fileno()&lt;/code&gt; (which just asks next layer down) will suffice for this.</source>
          <target state="translated">Devuelve el descriptor de archivo num&amp;eacute;rico Unix / Posix para el identificador. Normalmente, &lt;code&gt;PerlIOBase_fileno()&lt;/code&gt; (que solo pide la siguiente capa hacia abajo) ser&amp;aacute; suficiente para esto.</target>
        </trans-unit>
        <trans-unit id="278a43bcda9b8d5eb062922e0b9229cb7bea4d53" translate="yes" xml:space="preserve">
          <source>Returns the YAML text of that schema. Dies if something fails.</source>
          <target state="translated">Devuelve el texto YAML de ese esquema.Muere si algo falla.</target>
        </trans-unit>
        <trans-unit id="03fae2b54e62c379689beb511e4111e2e0cbef31" translate="yes" xml:space="preserve">
          <source>Returns the absolute path to the file. Note that this file may not actually exist on disk yet, e.g. if the module was read from an in-memory filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73707906843d9f9da0aff09625567c072e4a1131" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of its argument. If VALUE is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea5aa9d70a1ca00f811ab40cd023520a123329d" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of its argument. If VALUE is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Devuelve el valor absoluto de su argumento. Si se omite VALUE, usa &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b37d5915c91dfd34321e7faf69a23b4abf6310bf" translate="yes" xml:space="preserve">
          <source>Returns the actual pointer stored in the key slot of the hash entry. The pointer may be either &lt;code&gt;char*&lt;/code&gt; or &lt;code&gt;SV*&lt;/code&gt; , depending on the value of &lt;code&gt;HeKLEN()&lt;/code&gt; . Can be assigned to. The &lt;code&gt;HePV()&lt;/code&gt; or &lt;code&gt;HeSVKEY()&lt;/code&gt; macros are usually preferable for finding the value of a key.</source>
          <target state="translated">Devuelve el puntero real almacenado en la ranura de clave de la entrada hash. El puntero puede ser &lt;code&gt;char*&lt;/code&gt; o &lt;code&gt;SV*&lt;/code&gt; , seg&amp;uacute;n el valor de &lt;code&gt;HeKLEN()&lt;/code&gt; . Puede asignarse a. Las &lt;code&gt;HePV()&lt;/code&gt; o &lt;code&gt;HeSVKEY()&lt;/code&gt; suelen ser preferibles para encontrar el valor de una clave.</target>
        </trans-unit>
        <trans-unit id="83bd0ff2495a640da6b4aee612d8cd5be183553a" translate="yes" xml:space="preserve">
          <source>Returns the actual pointer stored in the key slot of the hash entry. The pointer may be either &lt;code&gt;char*&lt;/code&gt; or &lt;code&gt;SV*&lt;/code&gt;, depending on the value of &lt;code&gt;HeKLEN()&lt;/code&gt;. Can be assigned to. The &lt;code&gt;HePV()&lt;/code&gt; or &lt;code&gt;HeSVKEY()&lt;/code&gt; macros are usually preferable for finding the value of a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e5e023623e7e131167efad74d53bdf90ea001b" translate="yes" xml:space="preserve">
          <source>Returns the address of a function inside a loaded library. The information about what you can do with this address has been lost in the mist of time. Use the Win32::API module instead of this deprecated function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a802408c554ecadee8ec043662d1413781b7b0" translate="yes" xml:space="preserve">
          <source>Returns the address of the shared memory that has been attached to in a format suitable for use with &lt;code&gt;&lt;a href=&quot;../functions/pack&quot;&gt;pack('P')&lt;/a&gt;&lt;/code&gt;. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the shared memory has not been attached.</source>
          <target state="translated">Devuelve la direcci&amp;oacute;n de la memoria compartida a la que se ha adjuntado en un formato adecuado para su uso con el &lt;code&gt;&lt;a href=&quot;../functions/pack&quot;&gt;pack('P')&lt;/a&gt;&lt;/code&gt; . Devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si no se ha adjuntado la memoria compartida.</target>
        </trans-unit>
        <trans-unit id="099f37e8019dd406fe2690829e2f201816229fac" translate="yes" xml:space="preserve">
          <source>Returns the address of the shared memory that has been attached to in a format suitable for use with &lt;code&gt;pack('P')&lt;/code&gt;. Returns &lt;code&gt;undef&lt;/code&gt; if the shared memory has not been attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4996d78af5874f47b502316ec30ad85cac81f20" translate="yes" xml:space="preserve">
          <source>Returns the adler32 value for the dictionary.</source>
          <target state="translated">Devuelve el valor de adler32 para el diccionario.</target>
        </trans-unit>
        <trans-unit id="8110545d8490355aa62470c7b4a8c19fede7c3aa" translate="yes" xml:space="preserve">
          <source>Returns the adler32 value for the uncompressed data to date.</source>
          <target state="translated">Devuelve el valor adler32 de los datos no comprimidos hasta la fecha.</target>
        </trans-unit>
        <trans-unit id="f3e6dd8f1f7509a1eece5632cf8ade00a550e8a1" translate="yes" xml:space="preserve">
          <source>Returns the anchor or node within the linked-to page, or an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) if none appears in the link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0cc537778ddaa80a53b04a625f4f104d9bc72d" translate="yes" xml:space="preserve">
          <source>Returns the approximate line number in which the link was encountered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210b877f7a2c1fe6cf54c9b7efe9eabb40ff0f65" translate="yes" xml:space="preserve">
          <source>Returns the arctangent of Y/X in the range -PI to PI.</source>
          <target state="translated">Devuelve el arctangente de Y/X en el rango -PI a PI.</target>
        </trans-unit>
        <trans-unit id="4769fe2b9d1c2183b13ccf9423b37f570f4f5775" translate="yes" xml:space="preserve">
          <source>Returns the arrayref containing all the events from the subtest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b87d41159fcb5d9bb46a3d4b918a53b817c2f0f" translate="yes" xml:space="preserve">
          <source>Returns the author's ID of the module.</source>
          <target state="translated">Devuelve la identificación del autor del módulo.</target>
        </trans-unit>
        <trans-unit id="fe922d38921730375ec3bda35fa42bccb6c0d784" translate="yes" xml:space="preserve">
          <source>Returns the author's email address</source>
          <target state="translated">Devuelve la dirección de correo electrónico del autor</target>
        </trans-unit>
        <trans-unit id="115d31cf996a7c09a0151cf631c1919d8e8d1653" translate="yes" xml:space="preserve">
          <source>Returns the author's name</source>
          <target state="translated">Devuelve el nombre del autor</target>
        </trans-unit>
        <trans-unit id="613408706936527cb8b30f75a308a36d14781eab" translate="yes" xml:space="preserve">
          <source>Returns the banner message which the server replied with when the initial connection was made.</source>
          <target state="translated">Devuelve el mensaje del banner con el que el servidor respondió cuando se hizo la conexión inicial.</target>
        </trans-unit>
        <trans-unit id="ffcfc0234f5a9b4636ff504c5d6d49d7cec25b99" translate="yes" xml:space="preserve">
          <source>Returns the binary string representation of OBJ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71210f2e62087ea963b73d1f1d105999c2f3ec57" translate="yes" xml:space="preserve">
          <source>Returns the buffer size used to carry out the compression.</source>
          <target state="translated">Devuelve el tamaño del buffer utilizado para realizar la compresión.</target>
        </trans-unit>
        <trans-unit id="d32e46ff68fcb957de232438cd9bacf3b7e170ff" translate="yes" xml:space="preserve">
          <source>Returns the buffer size used to carry out the decompression.</source>
          <target state="translated">Devuelve el tamaño de la memoria intermedia utilizada para llevar a cabo la descompresión.</target>
        </trans-unit>
        <trans-unit id="95cdd7b169f0b5542a52bf3fc10a842663c05011" translate="yes" xml:space="preserve">
          <source>Returns the canonicalized name of the C type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3895d01f81623a76c7e95e3e633d7d4cd48a45ef" translate="yes" xml:space="preserve">
          <source>Returns the casefolded version of EXPR. This is the internal function implementing the &lt;code&gt;\F&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">Devuelve la versi&amp;oacute;n plegada de EXPR. Esta es la funci&amp;oacute;n interna que implementa el escape &lt;code&gt;\F&lt;/code&gt; en cadenas entre comillas dobles.</target>
        </trans-unit>
        <trans-unit id="7478bfde85132ab5287293ffbe4f80921537ea44" translate="yes" xml:space="preserve">
          <source>Returns the character represented by that NUMBER in the character set. For example, &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;A&quot;&lt;/code&gt; in either ASCII or Unicode, and chr(0x263a) is a Unicode smiley face.</source>
          <target state="translated">Devuelve el car&amp;aacute;cter representado por ese N&amp;Uacute;MERO en el juego de caracteres. Por ejemplo, &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&quot;A&quot;&lt;/code&gt; en ASCII o Unicode, y chr (0x263a) es una carita sonriente Unicode.</target>
        </trans-unit>
        <trans-unit id="cbc33cdff6a32e384af7664e0f3e3d792d382300" translate="yes" xml:space="preserve">
          <source>Returns the character represented by that NUMBER in the character set. For example, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;A&quot;&lt;/code&gt; in either ASCII or Unicode, and chr(0x263a) is a Unicode smiley face.</source>
          <target state="translated">Devuelve el car&amp;aacute;cter representado por ese N&amp;Uacute;MERO en el juego de caracteres. Por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&quot;A&quot;&lt;/code&gt; en ASCII o Unicode, y chr (0x263a) es una carita sonriente Unicode.</target>
        </trans-unit>
        <trans-unit id="b6c869d999e14157c980d926bad5f65cbb8ab41d" translate="yes" xml:space="preserve">
          <source>Returns the character represented by that NUMBER in the character set. For example, &lt;code&gt;chr(65)&lt;/code&gt; is &lt;code&gt;&quot;A&quot;&lt;/code&gt; in either ASCII or Unicode, and chr(0x263a) is a Unicode smiley face.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb199f5090a474ebe28f0646c2b3618d0563582d" translate="yes" xml:space="preserve">
          <source>Returns the character used for quoting strings on this platform. This is usually a &lt;code&gt;'&lt;/code&gt; (single quote) on most systems, but some systems use different quotes. For example, &lt;code&gt;Win32&lt;/code&gt; uses &lt;code&gt;&quot;&lt;/code&gt; (double quote).</source>
          <target state="translated">Devuelve el car&amp;aacute;cter utilizado para citar cadenas en esta plataforma. Suele ser una &lt;code&gt;'&lt;/code&gt; (comilla simple) en la mayor&amp;iacute;a de los sistemas, pero algunos sistemas utilizan comillas diferentes. Por ejemplo, &lt;code&gt;Win32&lt;/code&gt; usa &lt;code&gt;&quot;&lt;/code&gt; (comillas dobles).</target>
        </trans-unit>
        <trans-unit id="e8448bf8848e22ad03564ea6713f1239f54e36c4" translate="yes" xml:space="preserve">
          <source>Returns the class of an object without the part of the classname preceding the first &lt;code&gt;&quot;::&quot;&lt;/code&gt; . This is used to turn &lt;code&gt;&quot;B::UNOP&quot;&lt;/code&gt; into &lt;code&gt;&quot;UNOP&quot;&lt;/code&gt; for example.</source>
          <target state="translated">Devuelve la clase de un objeto sin la parte del nombre de clase que precede al primer &lt;code&gt;&quot;::&quot;&lt;/code&gt; . Esto se utiliza para convertir &lt;code&gt;&quot;B::UNOP&quot;&lt;/code&gt; en &lt;code&gt;&quot;UNOP&quot;&lt;/code&gt; , por ejemplo.</target>
        </trans-unit>
        <trans-unit id="3a911e39a5da9916ffe461d218094fd5eac8d833" translate="yes" xml:space="preserve">
          <source>Returns the class of an object without the part of the classname preceding the first &lt;code&gt;&quot;::&quot;&lt;/code&gt;. This is used to turn &lt;code&gt;&quot;B::UNOP&quot;&lt;/code&gt; into &lt;code&gt;&quot;UNOP&quot;&lt;/code&gt; for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5264dd1dc2780bd589669333fc619e8c145ba657" translate="yes" xml:space="preserve">
          <source>Returns the clean_subdirs target. This is used by the clean target to call clean on any subdirectories which contain Makefiles.</source>
          <target state="translated">Devuelve el objetivo de los subordinados limpios.Esto es usado por el objetivo clean para llamar a clean en cualquier subdirectorio que contenga Makefiles.</target>
        </trans-unit>
        <trans-unit id="a40f04f61ed94ea46c22a5564f81aa3af8cee02e" translate="yes" xml:space="preserve">
          <source>Returns the compile date (as a string), equivalent to what is shown by &lt;code&gt;perl -V&lt;/code&gt;</source>
          <target state="translated">Devuelve la fecha de compilaci&amp;oacute;n (como una cadena), equivalente a lo que muestra &lt;code&gt;perl -V&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca2b3208f58937ac730f25a7f1621ad213d12d3e" translate="yes" xml:space="preserve">
          <source>Returns the compression level being used.</source>
          <target state="translated">Devuelve el nivel de compresión que se está usando.</target>
        </trans-unit>
        <trans-unit id="296dffd4d83e098002d0989a035a14f44c5be0b6" translate="yes" xml:space="preserve">
          <source>Returns the computed hash stored in the hash entry.</source>
          <target state="translated">Devuelve el hash computarizado almacenado en la entrada de hash.</target>
        </trans-unit>
        <trans-unit id="bd4543cfbb9431e0ed34c31843d7ee80a71eeab2" translate="yes" xml:space="preserve">
          <source>Returns the concatenation of all the values returned by the &lt;code&gt;BLOCK&lt;/code&gt; in list context, or the count of the number of items that would have been returned in scalar context.</source>
          <target state="translated">Devuelve la concatenaci&amp;oacute;n de todos los valores devueltos por &lt;code&gt;BLOCK&lt;/code&gt; en el contexto de lista, o el recuento del n&amp;uacute;mero de elementos que se habr&amp;iacute;an devuelto en contexto escalar.</target>
        </trans-unit>
        <trans-unit id="7697306fa0a13e73fa40eca03fcc22eef02b04a2" translate="yes" xml:space="preserve">
          <source>Returns the content of the META.yml of this distro as a hashref. Note: works only after an attempt has been made to &lt;code&gt;make&lt;/code&gt; the distribution. Returns undef otherwise. Also returns undef if the content of META.yml is not authoritative. (The rules about what exactly makes the content authoritative are still in flux.)</source>
          <target state="translated">Devuelve el contenido de META.yml de esta distribuci&amp;oacute;n como hashref. Nota: funciona solo despu&amp;eacute;s de que se ha intentado &lt;code&gt;make&lt;/code&gt; la distribuci&amp;oacute;n. Devuelve undef de lo contrario. Tambi&amp;eacute;n devuelve undef si el contenido de META.yml no es autorizado. (Las reglas sobre qu&amp;eacute; es exactamente lo que hace que el contenido sea autoritario a&amp;uacute;n est&amp;aacute;n en proceso de cambio).</target>
        </trans-unit>
        <trans-unit id="9b35a2fe131e688b9db1d3591f5dcf2a62f9e796" translate="yes" xml:space="preserve">
          <source>Returns the contents of $ENV{TMPDIR}, if that directory exits or the current working directory otherwise. Under MacPerl, $ENV{TMPDIR} will contain a path like &quot;MacintoshHD:Temporary Items:&quot;, which is a hidden directory on your startup volume.</source>
          <target state="translated">Devuelve el contenido de $ENV{TMPDIR},si ese directorio sale o el directorio de trabajo actual de otra manera.En MacPerl,$ENV{TMPDIR}contendrá una ruta como &quot;MacintoshHD:Elementos Temporales:&quot;,que es un directorio oculto en el volumen de inicio.</target>
        </trans-unit>
        <trans-unit id="0f161ded5c89a2f214ab3c554c29c2cf54cc25f0" translate="yes" xml:space="preserve">
          <source>Returns the contents of a named buffer of the last successful match. If $all is true, then returns an array ref containing one entry per buffer, otherwise returns the first defined buffer.</source>
          <target state="translated">Devuelve el contenido de una memoria intermedia con nombre del último partido exitoso.Si $all es verdadero,entonces devuelve un array ref que contiene una entrada por buffer,de lo contrario devuelve el primer buffer definido.</target>
        </trans-unit>
        <trans-unit id="c481d635318d5270129f3710fa2b63e432d0469d" translate="yes" xml:space="preserve">
          <source>Returns the context of the current pure perl subroutine call. In scalar context, returns the caller's package name if there</source>
          <target state="translated">Devuelve el contexto de la actual llamada de subrutina de perl puro.En el contexto escalar,devuelve el nombre del paquete del llamante si hay</target>
        </trans-unit>
        <trans-unit id="ff141d79c524a6a8e3d02b224c5c020d44d57219" translate="yes" xml:space="preserve">
          <source>Returns the cosine of EXPR (expressed in radians). If EXPR is omitted, takes the cosine of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629a1bf5ae31e2428f6761a91af5e45898a92a1d" translate="yes" xml:space="preserve">
          <source>Returns the cosine of EXPR (expressed in radians). If EXPR is omitted, takes the cosine of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Devuelve el coseno de EXPR (expresado en radianes). Si se omite EXPR, toma el coseno de &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="382366cbd1645fc7a8be88934fd05350c798da6f" translate="yes" xml:space="preserve">
          <source>Returns the crc32 value for the uncompressed data to date.</source>
          <target state="translated">Devuelve el valor crc32 de los datos no comprimidos hasta la fecha.</target>
        </trans-unit>
        <trans-unit id="96ae9c4a96664dc70dd7bd85d43ba95afc713573" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;cutting&lt;/code&gt; state: a boolean-valued scalar which evaluates to true if text from the input file is currently being &quot;cut&quot; (meaning it is</source>
          <target state="translated">Devuelve el estado de &lt;code&gt;cutting&lt;/code&gt; actual : un escalar con valor booleano que se eval&amp;uacute;a como verdadero si el texto del archivo de entrada se est&amp;aacute; &quot;cortando&quot; actualmente (lo que significa que</target>
        </trans-unit>
        <trans-unit id="976a18edb481a5d30870d6df3e178d5686c461ba" translate="yes" xml:space="preserve">
          <source>Returns the current Windows ANSI code page identifier for the operating system. See also GetOEMCP(), GetConsoleCP() and GetConsoleOutputCP().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1a14517cc73ee3846bc96e07fa9fecd6234b97" translate="yes" xml:space="preserve">
          <source>Returns the current accuracy. For &lt;code&gt;$x-&amp;gt;accuracy()&lt;/code&gt; it will return either the local accuracy, or if not defined, the global. This means the return value represents the accuracy that will be in effect for $x:</source>
          <target state="translated">Devuelve la precisi&amp;oacute;n actual. Para &lt;code&gt;$x-&amp;gt;accuracy()&lt;/code&gt; devolver&amp;aacute; la precisi&amp;oacute;n local o, si no est&amp;aacute; definida, la global. Esto significa que el valor de retorno representa la precisi&amp;oacute;n que estar&amp;aacute; vigente para $ x:</target>
        </trans-unit>
        <trans-unit id="9ab41cff2a71d5df164ca2f4fc69050a70621047" translate="yes" xml:space="preserve">
          <source>Returns the current content for the in-memory file</source>
          <target state="translated">Devuelve el contenido actual del archivo en memoria</target>
        </trans-unit>
        <trans-unit id="810f5973b59e7cdd5b0d52b6480f5843daebe730" translate="yes" xml:space="preserve">
          <source>Returns the current content for the in-memory file as a scalar reference. Normal users won't need this, but it will save memory if you are dealing with very large data files in your tar archive, since it will pass the contents by reference, rather than make a copy of it first.</source>
          <target state="translated">Devuelve el contenido actual del archivo en memoria como una referencia escalar.Los usuarios normales no necesitarán esto,pero ahorrará memoria si se trata de archivos de datos muy grandes en su archivo tar,ya que pasará el contenido por referencia,en lugar de hacer una copia primero.</target>
        </trans-unit>
        <trans-unit id="f977f32eb061f0a71d6ca2651f96525fc6d9a70e" translate="yes" xml:space="preserve">
          <source>Returns the current debugging flag for &lt;code&gt;walkoptree&lt;/code&gt; . If the optional DEBUG argument is non-zero, it sets the debugging flag to that. See the description of &lt;code&gt;walkoptree&lt;/code&gt; above for what the debugging flag does.</source>
          <target state="translated">Devuelve el indicador de depuraci&amp;oacute;n actual para &lt;code&gt;walkoptree&lt;/code&gt; . Si el argumento DEBUG opcional es distinto de cero, establece el indicador de depuraci&amp;oacute;n en ese. Consulte la descripci&amp;oacute;n de &lt;code&gt;walkoptree&lt;/code&gt; anterior para saber qu&amp;eacute; hace la bandera de depuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a0d848bf6adc398cca9fd34be89ede52d5316cc3" translate="yes" xml:space="preserve">
          <source>Returns the current debugging flag for &lt;code&gt;walkoptree&lt;/code&gt;. If the optional DEBUG argument is non-zero, it sets the debugging flag to that. See the description of &lt;code&gt;walkoptree&lt;/code&gt; above for what the debugging flag does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401aa41391125b7bdfa5659f72078a7692f72646" translate="yes" xml:space="preserve">
          <source>Returns the current default per-thread stack size. The default is zero, which means the system default stack size is currently in use.</source>
          <target state="translated">Devuelve el tamaño de pila por defecto actual por cada hilo.El valor predeterminado es cero,lo que significa que el tamaño de pila predeterminado del sistema está actualmente en uso.</target>
        </trans-unit>
        <trans-unit id="2be9304f6344655b4c4dd53810f18f19259018ba" translate="yes" xml:space="preserve">
          <source>Returns the current error string (usually, the last error reported). If a true value was specified, it will give the &lt;code&gt;Carp::longmess&lt;/code&gt; equivalent of the error, in effect giving you a stacktrace.</source>
          <target state="translated">Devuelve la cadena de error actual (normalmente, el &amp;uacute;ltimo error informado). Si se especific&amp;oacute; un valor verdadero, le dar&amp;aacute; el equivalente &lt;code&gt;Carp::longmess&lt;/code&gt; del error, de hecho le dar&amp;aacute; un stacktrace.</target>
        </trans-unit>
        <trans-unit id="2ec8302516eca5089fb22e9dc7a8a81e81cc5479" translate="yes" xml:space="preserve">
          <source>Returns the current filename and line number for the interior sequence object. If called in a list context, it returns a list of two elements: first the filename, then the line number. If called in a scalar context, it returns a string containing the filename, followed by a colon (':'), followed by the line number.</source>
          <target state="translated">Devuelve el nombre de archivo actual y el número de línea del objeto de la secuencia interior.Si se llama en un contexto de lista,devuelve una lista de dos elementos:primero el nombre de archivo,luego el número de línea.Si se llama en un contexto escalar,devuelve una cadena que contiene el nombre de archivo,seguido de dos puntos (':'),seguido del número de línea.</target>
        </trans-unit>
        <trans-unit id="37b6eeba52eff8f31c174b55de2a528ba7738f6f" translate="yes" xml:space="preserve">
          <source>Returns the current filename and line number for the paragraph object. If called in a list context, it returns a list of two elements: first the filename, then the line number. If called in a scalar context, it returns a string containing the filename, followed by a colon (':'), followed by the line number.</source>
          <target state="translated">Devuelve el nombre de archivo actual y el número de línea del objeto del párrafo.Si se llama en un contexto de lista,devuelve una lista de dos elementos:primero el nombre de archivo,luego el número de línea.Si se llama en un contexto escalar,devuelve una cadena que contiene el nombre de archivo,seguido de dos puntos (':'),seguido del número de línea.</target>
        </trans-unit>
        <trans-unit id="301b27c4f96019f2f8c4ae36f6c0daa0acd40fa1" translate="yes" xml:space="preserve">
          <source>Returns the current floating point rounding mode, one of</source>
          <target state="translated">Devuelve el actual modo de redondeo de punto flotante,uno de</target>
        </trans-unit>
        <trans-unit id="f0387df63a5b00558cfcef9815f10187b319abcf" translate="yes" xml:space="preserve">
          <source>Returns the current input filehandle object.</source>
          <target state="translated">Devuelve el objeto filehandle de entrada actual.</target>
        </trans-unit>
        <trans-unit id="d4e23f65fe6c601f83268ea94d91d626be93cd66" translate="yes" xml:space="preserve">
          <source>Returns the current original equipment manufacturer (OEM) code page identifier for the operating system. See also GetACP(), GetConsoleCP() and GetConsoleOutputCP().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389d6746fc95646c0fcea387d7243321ece3de32" translate="yes" xml:space="preserve">
          <source>Returns the current position</source>
          <target state="translated">Devuelve la posición actual</target>
        </trans-unit>
        <trans-unit id="ca57687adb753c94505a09242d12b6dd3b23e9fb" translate="yes" xml:space="preserve">
          <source>Returns the current position of the &lt;a href=&quot;#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt; routines on DIRHANDLE. Value may be given to &lt;a href=&quot;#seekdir-DIRHANDLE%2CPOS&quot;&gt;&lt;code&gt;seekdir&lt;/code&gt;&lt;/a&gt; to access a particular location in a directory. &lt;a href=&quot;#telldir-DIRHANDLE&quot;&gt;&lt;code&gt;telldir&lt;/code&gt;&lt;/a&gt; has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39864a44dcc985b087ce0a4132e9be9ba1df0dc" translate="yes" xml:space="preserve">
          <source>Returns the current position of the &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routines on DIRHANDLE. Value may be given to &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; to access a particular location in a directory. &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">Devuelve la posici&amp;oacute;n actual de los &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; rutinas en DIRHANDLE. Se puede dar valor a &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; para acceder a una ubicaci&amp;oacute;n particular en un directorio. &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; tiene las mismas advertencias sobre la posible compactaci&amp;oacute;n de directorios que la rutina de la biblioteca del sistema correspondiente.</target>
        </trans-unit>
        <trans-unit id="7222e4c7a3a8ced2fa61913ad73cf5ff5a8ea68c" translate="yes" xml:space="preserve">
          <source>Returns the current position of the &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routines on DIRHANDLE. Value may be given to &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; to access a particular location in a directory. &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">Devuelve la posici&amp;oacute;n actual de los &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; rutinas en DIRHANDLE. Se puede dar valor a &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; para acceder a una ubicaci&amp;oacute;n particular en un directorio. &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; tiene las mismas advertencias sobre la posible compactaci&amp;oacute;n de directorios que la rutina de la biblioteca del sistema correspondiente.</target>
        </trans-unit>
        <trans-unit id="c58b4b7839bacdcd78f0ce8300cc1cdc9e5b82f1" translate="yes" xml:space="preserve">
          <source>Returns the current precision. For &lt;code&gt;$x-&amp;gt;precision()&lt;/code&gt; it will return either the local precision of $x, or if not defined, the global. This means the return value represents the prevision that will be in effect for $x:</source>
          <target state="translated">Devuelve la precisi&amp;oacute;n actual. Para &lt;code&gt;$x-&amp;gt;precision()&lt;/code&gt; devolver&amp;aacute; la precisi&amp;oacute;n local de $ x, o si no est&amp;aacute; definida, la global. Esto significa que el valor de retorno representa la previsi&amp;oacute;n que estar&amp;aacute; vigente para $ x:</target>
        </trans-unit>
        <trans-unit id="2c348d2f127bac6601e5a42a0e120902e638767c" translate="yes" xml:space="preserve">
          <source>Returns the current priority for a process, a process group, or a user. (See</source>
          <target state="translated">Devuelve la prioridad actual de un proceso,un grupo de procesos o un usuario.(Véase</target>
        </trans-unit>
        <trans-unit id="2c29acd7d7db7afa60ffc9748158f43472aefe78" translate="yes" xml:space="preserve">
          <source>Returns the current priority for a process, a process group, or a user. (See &lt;a href=&quot;http://man.he.net/man2/getpriority&quot;&gt;getpriority(2)&lt;/a&gt;.) Will raise a fatal exception if used on a machine that doesn't implement &lt;a href=&quot;http://man.he.net/man2/getpriority&quot;&gt;getpriority(2)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394afc364365646d2c296178fd66e9b02a388b18" translate="yes" xml:space="preserve">
          <source>Returns the current process group for the specified PID. Use a PID of &lt;code&gt;0&lt;/code&gt; to get the current process group for the current process. Will raise an exception if used on a machine that doesn't implement &lt;a href=&quot;http://man.he.net/man2/getpgrp&quot;&gt;getpgrp(2)&lt;/a&gt;. If PID is omitted, returns the process group of the current process. Note that the POSIX version of &lt;a href=&quot;#getpgrp-PID&quot;&gt;&lt;code&gt;getpgrp&lt;/code&gt;&lt;/a&gt; does not accept a PID argument, so only &lt;code&gt;PID==0&lt;/code&gt; is truly portable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25edb437e0678c7aed490d4fa1cade2a3a6bb2f" translate="yes" xml:space="preserve">
          <source>Returns the current process group for the specified PID. Use a PID of &lt;code&gt;0&lt;/code&gt; to get the current process group for the current process. Will raise an exception if used on a machine that doesn't implement getpgrp(2). If PID is omitted, returns the process group of the current process. Note that the POSIX version of &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; does not accept a PID argument, so only &lt;code&gt;PID==0&lt;/code&gt; is truly portable.</source>
          <target state="translated">Devuelve el grupo de procesos actual para el PID especificado. Utilice un PID de &lt;code&gt;0&lt;/code&gt; para obtener el grupo de procesos actual para el proceso actual. Generar&amp;aacute; una excepci&amp;oacute;n si se usa en una m&amp;aacute;quina que no implementa getpgrp (2). Si se omite PID, devuelve el grupo de procesos del proceso actual. Tenga en cuenta que la versi&amp;oacute;n POSIX de &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; no acepta un argumento PID, por lo que solo &lt;code&gt;PID==0&lt;/code&gt; es verdaderamente port&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="19cbb236442174d3d328d82505adcc3440a6be36" translate="yes" xml:space="preserve">
          <source>Returns the current process group for the specified PID. Use a PID of &lt;code&gt;0&lt;/code&gt; to get the current process group for the current process. Will raise an exception if used on a machine that doesn't implement getpgrp(2). If PID is omitted, returns the process group of the current process. Note that the POSIX version of &lt;code&gt;&lt;a href=&quot;getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; does not accept a PID argument, so only &lt;code&gt;PID==0&lt;/code&gt; is truly portable.</source>
          <target state="translated">Devuelve el grupo de procesos actual para el PID especificado. Utilice un PID de &lt;code&gt;0&lt;/code&gt; para obtener el grupo de procesos actual para el proceso actual. Generar&amp;aacute; una excepci&amp;oacute;n si se usa en una m&amp;aacute;quina que no implementa getpgrp (2). Si se omite PID, devuelve el grupo de procesos del proceso actual. Tenga en cuenta que la versi&amp;oacute;n POSIX de &lt;code&gt;&lt;a href=&quot;getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; no acepta un argumento PID, por lo que solo &lt;code&gt;PID==0&lt;/code&gt; es verdaderamente port&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="fc91437897d6caaf074aaf310cc8b71a9efba0ef" translate="yes" xml:space="preserve">
          <source>Returns the current time. Example:</source>
          <target state="translated">Devuelve la hora actual.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="568b25d7cd87cbaf6286b8da7e742768573264ff" translate="yes" xml:space="preserve">
          <source>Returns the current uncompressed line number. If &lt;code&gt;EXPR&lt;/code&gt; is present it has the effect of setting the line number. Note that setting the line number does not change the current position within the file/buffer being read.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de l&amp;iacute;nea actual sin comprimir. Si &lt;code&gt;EXPR&lt;/code&gt; est&amp;aacute; presente, tiene el efecto de establecer el n&amp;uacute;mero de l&amp;iacute;nea. Tenga en cuenta que configurar el n&amp;uacute;mero de l&amp;iacute;nea no cambia la posici&amp;oacute;n actual dentro del archivo / b&amp;uacute;fer que se est&amp;aacute; leyendo.</target>
        </trans-unit>
        <trans-unit id="1c7ca6c3d06ba8c8f091422f3579921b1ba88d59" translate="yes" xml:space="preserve">
          <source>Returns the current value of the semaphore &lt;code&gt;SEM&lt;/code&gt; .</source>
          <target state="translated">Devuelve el valor actual del sem&amp;aacute;foro &lt;code&gt;SEM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7578d46fea874995ebe39b715f47e906c3ed6771" translate="yes" xml:space="preserve">
          <source>Returns the current value of the semaphore &lt;code&gt;SEM&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc79b8bcff16613d3bb8b47a656313f95474a39" translate="yes" xml:space="preserve">
          <source>Returns the current version of state storage.</source>
          <target state="translated">Devuelve la versión actual del almacenamiento de estado.</target>
        </trans-unit>
        <trans-unit id="7c44a2f225c0656c4984e0204b4d9b37b2725674" translate="yes" xml:space="preserve">
          <source>Returns the current working directory.</source>
          <target state="translated">Devuelve el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="478c9ea0f19b93ca94223b86995c4a5859571749" translate="yes" xml:space="preserve">
          <source>Returns the current working directory. On error returns &lt;code&gt;undef&lt;/code&gt;, with &lt;code&gt;$!&lt;/code&gt; set to indicate the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6e7924c57cdc747ad5877b4c9045a9ea3113f0" translate="yes" xml:space="preserve">
          <source>Returns the currently selected filehandle. If FILEHANDLE is supplied, sets the new current default filehandle for output. This has two effects: first, a &lt;a href=&quot;#write-FILEHANDLE&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; without a filehandle default to this FILEHANDLE. Second, references to variables related to output will refer to this output channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e49c468b58f004c51887df11de2e77395328246" translate="yes" xml:space="preserve">
          <source>Returns the currently selected filehandle. If FILEHANDLE is supplied, sets the new current default filehandle for output. This has two effects: first, a &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; without a filehandle default to this FILEHANDLE. Second, references to variables related to output will refer to this output channel.</source>
          <target state="translated">Devuelve el identificador de archivo seleccionado actualmente. Si se proporciona FILEHANDLE, establece el nuevo identificador de archivo predeterminado actual para la salida. Esto tiene dos efectos: primero, una &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; o una &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; sin un identificador de archivo predeterminado en este ARCHIVO. En segundo lugar, las referencias a variables relacionadas con la salida se referir&amp;aacute;n a este canal de salida.</target>
        </trans-unit>
        <trans-unit id="5002587273ce83892d07569c520d1d13bbd5a0a5" translate="yes" xml:space="preserve">
          <source>Returns the currently selected filehandle. If FILEHANDLE is supplied, sets the new current default filehandle for output. This has two effects: first, a &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; without a filehandle default to this FILEHANDLE. Second, references to variables related to output will refer to this output channel.</source>
          <target state="translated">Devuelve el identificador de archivo seleccionado actualmente. Si se proporciona FILEHANDLE, establece el nuevo identificador de archivo predeterminado actual para la salida. Esto tiene dos efectos: primero, una &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; o una &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; sin un identificador de archivo predeterminado en este ARCHIVO. En segundo lugar, las referencias a variables relacionadas con la salida se referir&amp;aacute;n a este canal de salida.</target>
        </trans-unit>
        <trans-unit id="5923554a461f2216ab02bd2082e338016fb58ae3" translate="yes" xml:space="preserve">
          <source>Returns the data which MakeMaker turns into the META.yml file and the META.json file.</source>
          <target state="translated">Devuelve los datos que MakeMaker convierte en el archivo META.yml y el archivo META.json.</target>
        </trans-unit>
        <trans-unit id="96644b5860d13ad1a9106536cacd06bad375aeef" translate="yes" xml:space="preserve">
          <source>Returns the data which MakeMaker turns into the META.yml file and the META.json file. It is always in version 2.0 of the format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3ebec2434ff5cdedd394ac444cf5c4ec8d5c9e" translate="yes" xml:space="preserve">
          <source>Returns the data, if any, that is present immediately after the compressed data stream once uncompression is complete.</source>
          <target state="translated">Devuelve los datos,si los hay,que están presentes inmediatamente después del flujo de datos comprimido una vez que se ha completado la descompresión.</target>
        </trans-unit>
        <trans-unit id="5867cb1e4587fc25d5eb63cdf9e0c49bdd800916" translate="yes" xml:space="preserve">
          <source>Returns the data, if any, that is present immediately after the compressed data stream once uncompression is complete. It only makes sense to call this method once the end of the compressed data stream has been encountered.</source>
          <target state="translated">Devuelve los datos,si los hay,que están presentes inmediatamente después del flujo de datos comprimido una vez que la descompresión se ha completado.Sólo tiene sentido llamar a este método una vez que se ha encontrado el final del flujo de datos comprimido.</target>
        </trans-unit>
        <trans-unit id="ca7ad4546f41d5baf4a4566eb474c608964d4b90" translate="yes" xml:space="preserve">
          <source>Returns the date on the remote server. This date will be in a UNIX time format (seconds since 1970)</source>
          <target state="translated">Devuelve la fecha en el servidor remoto.Esta fecha estará en un formato de tiempo UNIX (segundos desde 1970)</target>
        </trans-unit>
        <trans-unit id="62e3785ee4c58ec99d1c8581fa7c9d36014742ac" translate="yes" xml:space="preserve">
          <source>Returns the deflation strategy currently used. Valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">Devuelve la estrategia de deflaci&amp;oacute;n utilizada actualmente. Los valores v&amp;aacute;lidos son &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; y &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fefa9aae6f8cd6e75ba881310b3120d8174d4ca8" translate="yes" xml:space="preserve">
          <source>Returns the deflation strategy currently used. Valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;, &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74cd04d7eeb4c72216a4982acc93abc4513fc13" translate="yes" xml:space="preserve">
          <source>Returns the description of the test, if any. This is the portion after the test number but before the directive.</source>
          <target state="translated">Devuelve la descripción de la prueba,si la hay.Esta es la parte después del número de la prueba pero antes de la directiva.</target>
        </trans-unit>
        <trans-unit id="e4e6b2be83f8d33a5aa3a2fee1a42645a4ebc110" translate="yes" xml:space="preserve">
          <source>Returns the difference between two Benchmark times as a Benchmark object suitable for passing to timestr().</source>
          <target state="translated">Devuelve la diferencia entre dos tiempos de referencia como un objeto de referencia adecuado para pasar a timestr().</target>
        </trans-unit>
        <trans-unit id="61b2fdc67d2ca33f1adf62666ddf8117fae5cdd2" translate="yes" xml:space="preserve">
          <source>Returns the different types of tokens which this grammar can parse.</source>
          <target state="translated">Devuelve los diferentes tipos de fichas que esta gramática puede analizar.</target>
        </trans-unit>
        <trans-unit id="990db58c7885c866cc62a909fe1fd15ee853afe2" translate="yes" xml:space="preserve">
          <source>Returns the digest algorithm for this object. The values are 1, 224, 256, 384, 512, 512224, and 512256 for SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256, respectively.</source>
          <target state="translated">Devuelve el algoritmo de digestión para este objeto.Los valores son 1,224,256,384,512,512224,y 512256 para SHA-1,SHA-224,SHA-256,SHA-384,SHA-512,SHA-512/224,y SHA-512/256,respectivamente.</target>
        </trans-unit>
        <trans-unit id="8f298412e0fd4c8b924547738fa518215dbcf58f" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a Base64 string.</source>
          <target state="translated">Devuelve el resumen codificado como una cadena de Base64.</target>
        </trans-unit>
        <trans-unit id="8dadd7fd9276d3f1c746af1004060c45b877ab3e" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a binary string.</source>
          <target state="translated">Devuelve el resumen codificado como una cadena binaria.</target>
        </trans-unit>
        <trans-unit id="b4edd4a2c8a97d7fda881271014c00cf593e6ffb" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a hexadecimal string.</source>
          <target state="translated">Devuelve el resumen codificado como una cadena hexadecimal.</target>
        </trans-unit>
        <trans-unit id="0daf1408abc93979de94874fb4786c860c8907d9" translate="yes" xml:space="preserve">
          <source>Returns the directory into which this distribution has been unpacked.</source>
          <target state="translated">Devuelve el directorio en el que se ha desempaquetado esta distribución.</target>
        </trans-unit>
        <trans-unit id="41f80c4d8a32cca7a61a2ef98ffcd3073a4d2a68" translate="yes" xml:space="preserve">
          <source>Returns the distribution filename without any archive suffix. E.g &quot;Foo-Bar-0.01&quot;</source>
          <target state="translated">Devuelve el nombre del archivo de distribución sin ningún sufijo de archivo.Por ejemplo &quot;Foo-Bar-0.01&quot;</target>
        </trans-unit>
        <trans-unit id="2855fccbb327c40b86c61f3ed950206a083798e7" translate="yes" xml:space="preserve">
          <source>Returns the domain that the remote SMTP server identified itself as during connection.</source>
          <target state="translated">Devuelve el dominio que el servidor SMTP remoto se identificó durante la conexión.</target>
        </trans-unit>
        <trans-unit id="859714b6dbb604925a2d42f6cf987ac1cdc52056" translate="yes" xml:space="preserve">
          <source>Returns the double factorial of &lt;code&gt;$x&lt;/code&gt;. If &lt;code&gt;$x&lt;/code&gt; is an even integer, returns the product of all positive, even integers up to and including &lt;code&gt;$x&lt;/code&gt;, i.e., 2*4*6*...*$x. If &lt;code&gt;$x&lt;/code&gt; is an odd integer, returns the product of all positive, odd integers, i.e., 1*3*5*...*$x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af8735ffc632663b1893be544a5b1b96d09db64" translate="yes" xml:space="preserve">
          <source>Returns the double factorial of OBJ. If OBJ is an even integer, returns the product of all positive, even integers up to and including OBJ, i.e., 2*4*6*...*OBJ. If OBJ is an odd integer, returns the product of all positive, odd integers, i.e., 1*3*5*...*OBJ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c36120af9460aec3cc2b1903075909c2d71c5a" translate="yes" xml:space="preserve">
          <source>Returns the dump of a single scalar without printing. If the second argument is true, the return value does not contain enclosing ticks. Does not handle data structures.</source>
          <target state="translated">Devuelve el volcado de un solo escalar sin imprimir.Si el segundo argumento es cierto,el valor de retorno no contiene garrapatas de encierro.No maneja estructuras de datos.</target>
        </trans-unit>
        <trans-unit id="11b578378f3d405a2621ca9e3ecbd469fe7be940" translate="yes" xml:space="preserve">
          <source>Returns the effective group identifier. Similar to Perl' s builtin variable &lt;code&gt;$(&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24EGID&quot;&gt;$EGID in perlvar&lt;/a&gt;.</source>
          <target state="translated">Devuelve el identificador de grupo efectivo. Similar a la variable incorporada de Perl &lt;code&gt;$(&lt;/code&gt; , vea &lt;a href=&quot;perlvar#%24EGID&quot;&gt;$ EGID en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fe3bb6c8f94b701aac00eff987dfb4491a2df16" translate="yes" xml:space="preserve">
          <source>Returns the effective group identifier. Similar to Perl' s builtin variable &lt;code&gt;$(&lt;/code&gt;, see &lt;a href=&quot;perlvar#%24EGID&quot;&gt;&quot;$EGID&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf9d9242d7f4a649796a00a1ff9152de5e8ccba" translate="yes" xml:space="preserve">
          <source>Returns the effective name of a stash, or NULL if there is none. The effective name represents a location in the symbol table where this stash resides. It is updated automatically when packages are aliased or deleted. A stash that is no longer in the symbol table has no effective name. This name is preferable to &lt;code&gt;HvNAME&lt;/code&gt; for use in MRO linearisations and isa caches.</source>
          <target state="translated">Devuelve el nombre efectivo de un alijo, o NULL si no hay ninguno. El nombre efectivo representa una ubicaci&amp;oacute;n en la tabla de s&amp;iacute;mbolos donde reside este alijo. Se actualiza autom&amp;aacute;ticamente cuando los paquetes tienen un alias o se eliminan. Un alijo que ya no est&amp;aacute; en la tabla de s&amp;iacute;mbolos no tiene un nombre efectivo. Este nombre es preferible a &lt;code&gt;HvNAME&lt;/code&gt; para su uso en linealizaciones MRO y cach&amp;eacute;s isa.</target>
        </trans-unit>
        <trans-unit id="1513a41df1c372a8219479e522129ba7990d7146" translate="yes" xml:space="preserve">
          <source>Returns the effective user identifier. Identical to Perl's builtin &lt;code&gt;$&amp;gt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24EUID&quot;&gt;&quot;$EUID&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f056d864c5d30d613c81021e2a25b1b55f0fa9d1" translate="yes" xml:space="preserve">
          <source>Returns the effective user identifier. Identical to Perl's builtin &lt;code&gt;$&amp;gt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24EUID&quot;&gt;$EUID in perlvar&lt;/a&gt;.</source>
          <target state="translated">Devuelve el identificador de usuario efectivo. Id&amp;eacute;ntico a la variable &lt;code&gt;$&amp;gt;&lt;/code&gt; incorporada de Perl , vea &lt;a href=&quot;perlvar#%24EUID&quot;&gt;$ EUID en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df9722f22146f1ba6c097ad8c2ca0e935d546d9c" translate="yes" xml:space="preserve">
          <source>Returns the empty string. Mac OS has no real root directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a42512df26a9af0a5e28e5981d42b330a2edfe3" translate="yes" xml:space="preserve">
          <source>Returns the entire perl configuration information in the form of the original config.sh shell variable assignment script.</source>
          <target state="translated">Devuelve toda la información de configuración de perl en forma del script original de asignación de variables de shell config.sh.</target>
        </trans-unit>
        <trans-unit id="6529ad8b91a2c3471ef20fdcd2d2962940ab84e1" translate="yes" xml:space="preserve">
          <source>Returns the entry in &lt;code&gt;@dirs&lt;/code&gt; (or &lt;code&gt;@INC&lt;/code&gt; by default) that contains the module &lt;code&gt;$module&lt;/code&gt;. A list of directories can be passed in as an optional parameter, otherwise @INC is searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4161e2e62196817c55ca3f4eabde933f4a749f" translate="yes" xml:space="preserve">
          <source>Returns the entry in the list with the highest numerical value. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Devuelve la entrada de la lista con el valor num&amp;eacute;rico m&amp;aacute;s alto. Si la lista est&amp;aacute; vac&amp;iacute;a, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a679d374c817b3dc15c06524c2102a10baaba7f0" translate="yes" xml:space="preserve">
          <source>Returns the entry in the list with the highest numerical value. If the list is empty then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee51cb3c3a1af36e40de4701691c54500f8a276" translate="yes" xml:space="preserve">
          <source>Returns the error string for the specified errno. Identical to the string form of &lt;code&gt;$!&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">Devuelve la cadena de error para el errno especificado. Id&amp;eacute;ntico a la forma de cadena de &lt;code&gt;$!&lt;/code&gt; , vea &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ ERRNO en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3045d4a888d42a3ef82df1c5a1a5a81487985bac" translate="yes" xml:space="preserve">
          <source>Returns the error string for the specified errno. Identical to the string form of &lt;code&gt;$!&lt;/code&gt;, see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;&quot;$ERRNO&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a7bd187e44e76e3ebbe4819b8629ad50b3874" translate="yes" xml:space="preserve">
          <source>Returns the event mask which represents the events that happened on IO during the last call to &lt;code&gt;poll&lt;/code&gt; .</source>
          <target state="translated">Devuelve la m&amp;aacute;scara de evento que representa los eventos que ocurrieron en IO durante la &amp;uacute;ltima llamada a la &lt;code&gt;poll&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21920e8de56267e5f2205c157a48abb3224a4c61" translate="yes" xml:space="preserve">
          <source>Returns the event mask which represents the events that happened on IO during the last call to &lt;code&gt;poll&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96aa625e2fa3c0d3dd23bda309e3b597a29f21a" translate="yes" xml:space="preserve">
          <source>Returns the factorial of &lt;code&gt;$x&lt;/code&gt;, i.e., the product of all positive integers up to and including &lt;code&gt;$x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58a89666eb04c597470657cf8fc34cfb2d0053c" translate="yes" xml:space="preserve">
          <source>Returns the factorial of OBJ, i.e., the product of all positive integers up to and including OBJ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a606f18b6203d3b5235b217660d9827dbae303" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for a filehandle or directory handle, or undefined if the filehandle is not open. If there is no real file descriptor at the OS level, as can happen with filehandles connected to memory objects via &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; with a reference for the third argument, -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842c516cf6fbbca8413e030f19ccfea2ece85184" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for a filehandle, or undefined if the filehandle is not open. If there is no real file descriptor at the OS level, as can happen with filehandles connected to memory objects via &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with a reference for the third argument, -1 is returned.</source>
          <target state="translated">Devuelve el descriptor de archivo para un identificador de archivo, o indefinido si el identificador de archivo no est&amp;aacute; abierto. Si no hay un descriptor de archivo real a nivel del sistema operativo, como puede suceder con los identificadores de archivos conectados a los objetos de memoria a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; con una referencia para el tercer argumento, se devuelve -1.</target>
        </trans-unit>
        <trans-unit id="b8e4620189d1043104facd9f1d5508657352dac3" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for a filehandle, or undefined if the filehandle is not open. If there is no real file descriptor at the OS level, as can happen with filehandles connected to memory objects via &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with a reference for the third argument, -1 is returned.</source>
          <target state="translated">Devuelve el descriptor de archivo para un identificador de archivo, o indefinido si el identificador de archivo no est&amp;aacute; abierto. Si no hay un descriptor de archivo real a nivel del sistema operativo, como puede suceder con los identificadores de archivos conectados a los objetos de memoria a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; con una referencia para el tercer argumento, se devuelve -1.</target>
        </trans-unit>
        <trans-unit id="c1461c62fed9d2cb70b8885542758d1fd2ef17b9" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for the underlying database.</source>
          <target state="translated">Devuelve el descriptor del archivo para la base de datos subyacente.</target>
        </trans-unit>
        <trans-unit id="74f896c352f6e6a82d4f528980bb6104e47a7296" translate="yes" xml:space="preserve">
          <source>Returns the file version number from the VERSIONINFO resource of the executable file or DLL. This is a tuple of four 16 bit numbers. In list context these four numbers will be returned. In scalar context they are concatenated into a string, separated by dots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f20adcdf09867985f35137ad55c8f1eba6e594" translate="yes" xml:space="preserve">
          <source>Returns the filehandle of a temporary file.</source>
          <target state="translated">Devuelve el filehandle de un archivo temporal.</target>
        </trans-unit>
        <trans-unit id="06f70c27b3badc241e28918c68390d5fe9f8cb0f" translate="yes" xml:space="preserve">
          <source>Returns the filename of the module found in @INC. The first file found is reported, just as perl itself stops searching @INC once it finds a module.</source>
          <target state="translated">Devuelve el nombre de archivo del módulo que se encuentra en @INC.El primer archivo encontrado es reportado,así como el propio Perl deja de buscar en el @INC una vez que encuentra un módulo.</target>
        </trans-unit>
        <trans-unit id="eead9a74f584bf3fccdf0480645642eb840ae88b" translate="yes" xml:space="preserve">
          <source>Returns the filename of the module found in PERL5LIB or @INC. The first file found is reported. The advantage of this method over &lt;code&gt;inst_file&lt;/code&gt; is that modules that have been tested but not yet installed are included because PERL5LIB keeps track of tested modules.</source>
          <target state="translated">Devuelve el nombre de archivo del m&amp;oacute;dulo que se encuentra en PERL5LIB o @INC. Se informa del primer archivo encontrado. La ventaja de este m&amp;eacute;todo sobre &lt;code&gt;inst_file&lt;/code&gt; es que los m&amp;oacute;dulos que se han probado pero que a&amp;uacute;n no se han instalado se incluyen porque PERL5LIB realiza un seguimiento de los m&amp;oacute;dulos probados.</target>
        </trans-unit>
        <trans-unit id="c169b09baf652910c9137b2f8cd5dd0d184cfb4b" translate="yes" xml:space="preserve">
          <source>Returns the filename on CPAN that is associated with the module.</source>
          <target state="translated">Devuelve el nombre de archivo en el CPAN que está asociado con el módulo.</target>
        </trans-unit>
        <trans-unit id="6357a5bed7cc37d5a874ca5877338cd1b9bd9033" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;$size&lt;/code&gt; elements from &lt;code&gt;@list&lt;/code&gt;. If &lt;code&gt;$size&lt;/code&gt; is negative, returns all but the last &lt;code&gt;$size&lt;/code&gt; elements from &lt;code&gt;@list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4625aaf28660b9b639231ba5f0970428e37caf7" translate="yes" xml:space="preserve">
          <source>Returns the first PERL_VERSION where the MODULE was marked as deprecated. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the MODULE has not been marked as deprecated.</source>
          <target state="translated">Devuelve la primera PERL_VERSION donde el M&amp;Oacute;DULO se marc&amp;oacute; como obsoleto. Devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si el M&amp;Oacute;DULO no se ha marcado como obsoleto.</target>
        </trans-unit>
        <trans-unit id="4333087024b6d761d001f5f6ca43b62f409e81b8" translate="yes" xml:space="preserve">
          <source>Returns the first pair of values from the list for which the &lt;code&gt;BLOCK&lt;/code&gt; returned true in list context, or an empty list of no such pair was found. In scalar context it returns a simple boolean value, rather than either the key or the value found.</source>
          <target state="translated">Devuelve el primer par de valores de la lista para los que el &lt;code&gt;BLOCK&lt;/code&gt; devolvi&amp;oacute; verdadero en el contexto de lista, o una lista vac&amp;iacute;a de tal par no se encontr&amp;oacute;. En contexto escalar, devuelve un valor booleano simple, en lugar de la clave o el valor encontrado.</target>
        </trans-unit>
        <trans-unit id="b7e24115abacb6ff7e6f95dd001a4c074efd2ab9" translate="yes" xml:space="preserve">
          <source>Returns the first perl version where the MODULE was marked as deprecated. Returns &lt;code&gt;undef&lt;/code&gt; if the MODULE has not been marked as deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ed5d36bc10c7fc0651d43e0cea1e3b9a337e34" translate="yes" xml:space="preserve">
          <source>Returns the flags indicating compile-time options that were used to build the zlib library. See the zlib documentation for a description of the flags returned by &lt;code&gt;zlibCompileFlags&lt;/code&gt; .</source>
          <target state="translated">Devuelve los indicadores que indican las opciones en tiempo de compilaci&amp;oacute;n que se usaron para construir la biblioteca zlib. Consulte la documentaci&amp;oacute;n de zlib para obtener una descripci&amp;oacute;n de los indicadores devueltos por &lt;code&gt;zlibCompileFlags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e37bd17510881c72c91702b9113a5f9500fe6e53" translate="yes" xml:space="preserve">
          <source>Returns the flags indicating compile-time options that were used to build the zlib library. See the zlib documentation for a description of the flags returned by &lt;code&gt;zlibCompileFlags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafc52a30958cc2a65b7c327d2f21f623ff74d21" translate="yes" xml:space="preserve">
          <source>Returns the floating seconds between the two times, which should have been returned by &lt;code&gt;gettimeofday()&lt;/code&gt; . If the second argument is omitted, then the current time is used.</source>
          <target state="translated">Devuelve los segundos flotantes entre los dos tiempos, que deber&amp;iacute;an haber sido devueltos por &lt;code&gt;gettimeofday()&lt;/code&gt; . Si se omite el segundo argumento, se usa la hora actual.</target>
        </trans-unit>
        <trans-unit id="a9b689820c41e7273ae78d7ac95397f673fa488f" translate="yes" xml:space="preserve">
          <source>Returns the floating seconds between the two times, which should have been returned by &lt;code&gt;gettimeofday()&lt;/code&gt;. If the second argument is omitted, then the current time is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03613a4fafca0a661e31e90b59391eb9ca5e8d98" translate="yes" xml:space="preserve">
          <source>Returns the format if it is valid, NULL if not.</source>
          <target state="translated">Devuelve el formato si es válido,NULL si no.</target>
        </trans-unit>
        <trans-unit id="65033d7a8f9ba51143d61cad9b444105938a8550" translate="yes" xml:space="preserve">
          <source>Returns the full compiler call for C programs and stores the definition in CONST_CCCMD.</source>
          <target state="translated">Devuelve la llamada completa del compilador para los programas C y almacena la definición en CONST_CCCMD.</target>
        </trans-unit>
        <trans-unit id="4038313df0e510dc52d21bceee61e65a3a16cbc6" translate="yes" xml:space="preserve">
          <source>Returns the full name of the character indicated by the numeric code. For example,</source>
          <target state="translated">Devuelve el nombre completo del personaje indicado por el código numérico.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="ff3d2b908b08a50e0877f9010ffa004e68d21fcb" translate="yes" xml:space="preserve">
          <source>Returns the full path from the tar header; this is basically a concatenation of the &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; fields.</source>
          <target state="translated">Devuelve la ruta completa del encabezado tar; esto es b&amp;aacute;sicamente una concatenaci&amp;oacute;n de los campos de &lt;code&gt;prefix&lt;/code&gt; y &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0c3147a5eefff706461b195d810511d1e6430d4" translate="yes" xml:space="preserve">
          <source>Returns the full path of the first occurrence to the file. Package names (eg 'A::B') are automatically converted to directory names in the selected directory. (eg on unix 'A::B' is converted to 'A/B'). Additionally, '.pm', '.pl' and '.pod' are appended to the search automatically if required.</source>
          <target state="translated">Devuelve la ruta completa de la primera ocurrencia al archivo.Los nombres de los paquetes (por ejemplo 'A::B')se convierten automáticamente en nombres de directorios en el directorio seleccionado.(por ejemplo,en unix 'A::B' se convierte en 'A/B').Además,'.pm','.pl' y '.pod' se añaden a la búsqueda automáticamente si es necesario.</target>
        </trans-unit>
        <trans-unit id="ee619bd4ffcf121b5599c99a22a41135db997de2" translate="yes" xml:space="preserve">
          <source>Returns the full path to the downloaded file on success, and false on failure.</source>
          <target state="translated">Devuelve la ruta completa del archivo descargado en caso de éxito,y falsa en caso de fracaso.</target>
        </trans-unit>
        <trans-unit id="b76539e82aa4a9674f933cab497fe301325f7c78" translate="yes" xml:space="preserve">
          <source>Returns the full pathname of one of the Windows special folders. The folder will be created if it doesn't exist and the optional CREATE argument is true. The following FOLDER constants are defined by the Win32 module, but only exported on demand:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b6a0183e400a3b07be8c3097337e804777f103" translate="yes" xml:space="preserve">
          <source>Returns the full pathname of the current directory.</source>
          <target state="translated">Devuelve la ruta completa del directorio actual.</target>
        </trans-unit>
        <trans-unit id="f87ad3966e4b9144c40f54e6402dcf1a4b2f83af" translate="yes" xml:space="preserve">
          <source>Returns the full pathname to the new directory.</source>
          <target state="translated">Devuelve la ruta completa al nuevo directorio.</target>
        </trans-unit>
        <trans-unit id="61c9941bc1311ec2b5a0442e358024e9c55bb1ba" translate="yes" xml:space="preserve">
          <source>Returns the glob which contains the subroutine to call to invoke the method on the &lt;code&gt;stash&lt;/code&gt; . In fact in the presence of autoloading this may be the glob for &quot;AUTOLOAD&quot;. In this case the corresponding variable $AUTOLOAD is already setup.</source>
          <target state="translated">Devuelve el glob que contiene la subrutina a llamar para invocar el m&amp;eacute;todo en el &lt;code&gt;stash&lt;/code&gt; . De hecho, en presencia de carga autom&amp;aacute;tica, este puede ser el glob de &quot;AUTOLOAD&quot;. En este caso, la variable correspondiente $ AUTOLOAD ya est&amp;aacute; configurada.</target>
        </trans-unit>
        <trans-unit id="c1384978725700da61ca65b2644dda976824ef5f" translate="yes" xml:space="preserve">
          <source>Returns the glob which contains the subroutine to call to invoke the method on the &lt;code&gt;stash&lt;/code&gt;. In fact in the presence of autoloading this may be the glob for &quot;AUTOLOAD&quot;. In this case the corresponding variable &lt;code&gt;$AUTOLOAD&lt;/code&gt; is already setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d487433b7940246f543f885491d71d018b0bec9" translate="yes" xml:space="preserve">
          <source>Returns the glob with the given &lt;code&gt;name&lt;/code&gt; and a defined subroutine or &lt;code&gt;NULL&lt;/code&gt; . The glob lives in the given &lt;code&gt;stash&lt;/code&gt; , or in the stashes accessible via @ISA and UNIVERSAL::.</source>
          <target state="translated">Devuelve el glob con el &lt;code&gt;name&lt;/code&gt; dado y una subrutina definida o &lt;code&gt;NULL&lt;/code&gt; . El glob vive en el &lt;code&gt;stash&lt;/code&gt; dado , o en los escondites accesibles a trav&amp;eacute;s de @ISA y UNIVERSAL ::.</target>
        </trans-unit>
        <trans-unit id="bc22e23b2d0cc1b26e1fc6d893ff57ad1503fdb5" translate="yes" xml:space="preserve">
          <source>Returns the glob with the given &lt;code&gt;name&lt;/code&gt; and a defined subroutine or &lt;code&gt;NULL&lt;/code&gt;. The glob lives in the given &lt;code&gt;stash&lt;/code&gt;, or in the stashes accessible via &lt;code&gt;@ISA&lt;/code&gt; and &lt;code&gt;UNIVERSAL::&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0fcfd9bd05252135f8b3058bce147b24a1b982" translate="yes" xml:space="preserve">
          <source>Returns the global variable &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f7774943a0c2db3977a0b79f44e33be3fdd91e" translate="yes" xml:space="preserve">
          <source>Returns the greatest common divisor (GCD).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324641166b6678740713477c9ab6f7ffa8b324be" translate="yes" xml:space="preserve">
          <source>Returns the greatest common divisor of OBJ1 and OBJ2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef4351018b25a393d9cb64adb970a306dbdda38" translate="yes" xml:space="preserve">
          <source>Returns the hash entry which corresponds to the specified key in the hash. &lt;code&gt;hash&lt;/code&gt; must be a valid precomputed hash number for the given &lt;code&gt;key&lt;/code&gt; , or 0 if you want the function to compute it. IF &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. Make sure the return value is non-null before accessing it. The return value when &lt;code&gt;hv&lt;/code&gt; is a tied hash is a pointer to a static location, so be sure to make a copy of the structure if you need to store it somewhere.</source>
          <target state="translated">Devuelve la entrada hash que corresponde a la clave especificada en el hash. &lt;code&gt;hash&lt;/code&gt; debe ser un n&amp;uacute;mero hash precalculado v&amp;aacute;lido para la &lt;code&gt;key&lt;/code&gt; dada , o 0 si desea que la funci&amp;oacute;n lo calcule. SI se establece &lt;code&gt;lval&lt;/code&gt; , la recuperaci&amp;oacute;n ser&amp;aacute; parte de una tienda. Aseg&amp;uacute;rese de que el valor de retorno no sea nulo antes de acceder a &amp;eacute;l. El valor de retorno cuando &lt;code&gt;hv&lt;/code&gt; es un hash vinculado es un puntero a una ubicaci&amp;oacute;n est&amp;aacute;tica, as&amp;iacute; que aseg&amp;uacute;rese de hacer una copia de la estructura si necesita almacenarla en alg&amp;uacute;n lugar.</target>
        </trans-unit>
        <trans-unit id="af6a42d3ea995e6a5d760d7f7428f6cba6a0c88d" translate="yes" xml:space="preserve">
          <source>Returns the hash entry which corresponds to the specified key in the hash. &lt;code&gt;hash&lt;/code&gt; must be a valid precomputed hash number for the given &lt;code&gt;key&lt;/code&gt;, or 0 if you want the function to compute it. IF &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. Make sure the return value is non-null before accessing it. The return value when &lt;code&gt;hv&lt;/code&gt; is a tied hash is a pointer to a static location, so be sure to make a copy of the structure if you need to store it somewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32614fc90f0a28fbb48c622d08ef281a17449acd" translate="yes" xml:space="preserve">
          <source>Returns the hash reference from the first matching YAML file that the user has deposited in the &lt;code&gt;prefs_dir/&lt;/code&gt; directory. The first succeeding match wins. The files in the &lt;code&gt;prefs_dir/&lt;/code&gt; are processed alphabetically, and the canonical distro name (e.g. AUTHOR/Foo-Bar-3.14.tar.gz) is matched against the regular expressions stored in the $root-&amp;gt;{match}{distribution} attribute value. Additionally all module names contained in a distribution are matched against the regular expressions in the $root-&amp;gt;{match}{module} attribute value. The two match values are ANDed together. Each of the two attributes are optional.</source>
          <target state="translated">Devuelve la referencia hash del primer archivo YAML coincidente que el usuario ha depositado en el directorio &lt;code&gt;prefs_dir/&lt;/code&gt; . El primer partido siguiente gana. Los archivos en &lt;code&gt;prefs_dir/&lt;/code&gt; se procesan alfab&amp;eacute;ticamente, y el nombre de la distribuci&amp;oacute;n can&amp;oacute;nica (por ejemplo, AUTHOR / Foo-Bar-3.14.tar.gz) se compara con las expresiones regulares almacenadas en el valor del atributo $ root -&amp;gt; {match} {distribution} . Adem&amp;aacute;s, todos los nombres de m&amp;oacute;dulo contenidos en una distribuci&amp;oacute;n se comparan con las expresiones regulares en el valor del atributo $ root -&amp;gt; {match} {module}. Los dos valores de coincidencia se unen mediante AND. Cada uno de los dos atributos es opcional.</target>
        </trans-unit>
        <trans-unit id="d089b1e8dbdbbd95886ba11042d00902332c4f2b" translate="yes" xml:space="preserve">
          <source>Returns the hash reference that has been announced by a distribution as the &lt;code&gt;requires&lt;/code&gt; and &lt;code&gt;build_requires&lt;/code&gt; elements. These can be declared either by the &lt;code&gt;META.yml&lt;/code&gt; (if authoritative) or can be deposited after the run of &lt;code&gt;Build.PL&lt;/code&gt; in the file &lt;code&gt;./_build/prereqs&lt;/code&gt; or after the run of &lt;code&gt;Makfile.PL&lt;/code&gt; written as the &lt;code&gt;PREREQ_PM&lt;/code&gt; hash in a comment in the produced &lt;code&gt;Makefile&lt;/code&gt; .</source>
          <target state="translated">Devuelve la referencia a un hash que ha sido anunciado por una distribuci&amp;oacute;n como la &lt;code&gt;requires&lt;/code&gt; y &lt;code&gt;build_requires&lt;/code&gt; elementos. Estos pueden ser declarados por &lt;code&gt;META.yml&lt;/code&gt; (si tiene autoridad) o pueden ser depositados despu&amp;eacute;s de ejecutar &lt;code&gt;Build.PL&lt;/code&gt; en el archivo &lt;code&gt;./_build/prereqs&lt;/code&gt; o despu&amp;eacute;s de ejecutar &lt;code&gt;Makfile.PL&lt;/code&gt; escrito como el hash &lt;code&gt;PREREQ_PM&lt;/code&gt; en un comentario en el &lt;code&gt;Makefile&lt;/code&gt; producido .</target>
        </trans-unit>
        <trans-unit id="1ec60ca6442dbfd7584d2f6d6141752446b3582e" translate="yes" xml:space="preserve">
          <source>Returns the hexadecimal string representation of the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9ebf8ea7bb35d267f0cb62310b0886e4d2ed06" translate="yes" xml:space="preserve">
          <source>Returns the highest &lt;code&gt;MSGNUM&lt;/code&gt; of all the messages accessed.</source>
          <target state="translated">Devuelve el &lt;code&gt;MSGNUM&lt;/code&gt; m&amp;aacute;s alto de todos los mensajes a los que se accede.</target>
        </trans-unit>
        <trans-unit id="9ce35f7f613bd71260c30034c6760ae3d6a9cbcd" translate="yes" xml:space="preserve">
          <source>Returns the highest index in the array. The number of elements in the array is &lt;code&gt;av_top_index(av) + 1&lt;/code&gt; . Returns -1 if the array is empty.</source>
          <target state="translated">Devuelve el &amp;iacute;ndice m&amp;aacute;s alto de la matriz. El n&amp;uacute;mero de elementos de la matriz es &lt;code&gt;av_top_index(av) + 1&lt;/code&gt; . Devuelve -1 si la matriz est&amp;aacute; vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="f6b2afc237a4f4788cd7e0428f16c0f62a5dc83b" translate="yes" xml:space="preserve">
          <source>Returns the highest index in the array. The number of elements in the array is &lt;code&gt;av_top_index(av) + 1&lt;/code&gt;. Returns -1 if the array is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2670d7ef05ea6b77e23aa1a4696ff750d445dd63" translate="yes" xml:space="preserve">
          <source>Returns the highest installed version of the bundle in either @INC or &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}&lt;/code&gt; . Note that this is different from CPAN::Module::inst_file.</source>
          <target state="translated">Devuelve la versi&amp;oacute;n m&amp;aacute;s alta instalada del paquete en @INC o &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}&lt;/code&gt; . Tenga en cuenta que esto es diferente de CPAN :: Module :: inst_file.</target>
        </trans-unit>
        <trans-unit id="e78ffd8f2fc19496c20b90a1ba41e86a57f2e8fd" translate="yes" xml:space="preserve">
          <source>Returns the hostname and service name of the local address (that is, the socket address given by the &lt;code&gt;sockname&lt;/code&gt; method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa8512edaf253370e0afd9dd9ae104f9f979089" translate="yes" xml:space="preserve">
          <source>Returns the hostname and service name of the peer address (that is, the socket address given by the &lt;code&gt;peername&lt;/code&gt; method), similar to the &lt;code&gt;sockhost_service&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d854cbfcc6c64b54904b8a051f15a69e6ddaeff" translate="yes" xml:space="preserve">
          <source>Returns the ids of the user's supplementary groups. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24GID&quot;&gt;$GID in perlvar&lt;/a&gt;.</source>
          <target state="translated">Devuelve los identificadores de los grupos complementarios del usuario. Similar a la variable incorporada de Perl &lt;code&gt;$)&lt;/code&gt; , vea &lt;a href=&quot;perlvar#%24GID&quot;&gt;$ GID en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72b362811f8ca302962c2dd8d976d8035eee4ef0" translate="yes" xml:space="preserve">
          <source>Returns the ids of the user's supplementary groups. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt;, see &lt;a href=&quot;perlvar#%24GID&quot;&gt;&quot;$GID&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bac36dbf168e51c702bc31012df565e0be8740" translate="yes" xml:space="preserve">
          <source>Returns the input code page used by the console associated with the calling process. To set the console's input code page, see SetConsoleCP(). See also GetConsoleOutputCP(), GetACP() and GetOEMCP().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7620000b24a4e593deab419ed4222290b0646033" translate="yes" xml:space="preserve">
          <source>Returns the input unchanged, but at the same time it gives a branch prediction hint to the compiler that this condition is likely to be false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce47738eba47f8e7ab1009a5d321c51dae6fc416" translate="yes" xml:space="preserve">
          <source>Returns the input unchanged, but at the same time it gives a branch prediction hint to the compiler that this condition is likely to be true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c17f9ab56c19dd8776ed61db008d21dff14d62" translate="yes" xml:space="preserve">
          <source>Returns the integer (but still as floating point) nearest to the argument [C99].</source>
          <target state="translated">Devuelve el número entero (pero aún como punto flotante)más cercano al argumento [C99].</target>
        </trans-unit>
        <trans-unit id="bc8633327d9f68f045e49839423602ec76259699" translate="yes" xml:space="preserve">
          <source>Returns the integer part and the fraction part. If the fraction part can not be represented as an integer, upgrading is performed or NaN is returned. The output of &lt;code&gt;dparts()&lt;/code&gt; corresponds to the output from &lt;code&gt;bdstr()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763dc9a9f4fb9d68733056b026f7cae2f0ad85e4" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of EXPR. If EXPR is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. You should not use this function for rounding: one because it truncates towards &lt;code&gt;0&lt;/code&gt;, and two because machine representations of floating-point numbers can sometimes produce counterintuitive results. For example, &lt;code&gt;int(-6.725/0.025)&lt;/code&gt; produces -268 rather than the correct -269; that's because it's really more like -268.99999999999994315658 instead. Usually, the &lt;a href=&quot;#sprintf-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;sprintf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;posix#floor&quot;&gt;&lt;code&gt;POSIX::floor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;posix#ceil&quot;&gt;&lt;code&gt;POSIX::ceil&lt;/code&gt;&lt;/a&gt; functions will serve you better than will &lt;a href=&quot;#int-EXPR&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac0de93b6553ad32ba9295e6bd7485987a87868" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . You should not use this function for rounding: one because it truncates towards &lt;code&gt;0&lt;/code&gt; , and two because machine representations of floating-point numbers can sometimes produce counterintuitive results. For example, &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produces -268 rather than the correct -269; that's because it's really more like -268.99999999999994315658 instead. Usually, the &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the &lt;code&gt;POSIX::floor&lt;/code&gt; and &lt;code&gt;POSIX::ceil&lt;/code&gt; functions will serve you better than will int().</source>
          <target state="translated">Devuelve la parte entera de EXPR. Si se omite EXPR, usa &lt;code&gt;$_&lt;/code&gt; . No debe usar esta funci&amp;oacute;n para redondear: una porque se trunca hacia &lt;code&gt;0&lt;/code&gt; y dos porque las representaciones de m&amp;aacute;quina de n&amp;uacute;meros de punto flotante a veces pueden producir resultados contradictorios. Por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produce -268 en lugar del -269 correcto; eso es porque en realidad es m&amp;aacute;s como -268.99999999999994315658. Por lo general, las funciones &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;POSIX::floor&lt;/code&gt; y &lt;code&gt;POSIX::ceil&lt;/code&gt; te servir&amp;aacute;n mejor que int ().</target>
        </trans-unit>
        <trans-unit id="dfa5ef7ea249ae1077fb57cf7217e12518dc83de" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . You should not use this function for rounding: one because it truncates towards &lt;code&gt;0&lt;/code&gt; , and two because machine representations of floating-point numbers can sometimes produce counterintuitive results. For example, &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produces -268 rather than the correct -269; that's because it's really more like -268.99999999999994315658 instead. Usually, the &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the &lt;code&gt;POSIX::floor&lt;/code&gt; and &lt;code&gt;POSIX::ceil&lt;/code&gt; functions will serve you better than will int().</source>
          <target state="translated">Devuelve la parte entera de EXPR. Si se omite EXPR, usa &lt;code&gt;$_&lt;/code&gt; . No debe usar esta funci&amp;oacute;n para redondear: una porque se trunca hacia &lt;code&gt;0&lt;/code&gt; y dos porque las representaciones de m&amp;aacute;quina de n&amp;uacute;meros de punto flotante a veces pueden producir resultados contradictorios. Por ejemplo, &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produce -268 en lugar del -269 correcto; eso es porque en realidad es m&amp;aacute;s como -268.99999999999994315658. Por lo general, las funciones &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;POSIX::floor&lt;/code&gt; y &lt;code&gt;POSIX::ceil&lt;/code&gt; te servir&amp;aacute;n mejor que int ().</target>
        </trans-unit>
        <trans-unit id="1383a246e6d34e5863de8dc2235891b42039056e" translate="yes" xml:space="preserve">
          <source>Returns the integer toward zero from the argument [C99].</source>
          <target state="translated">Devuelve el entero hacia cero del argumento [C99].</target>
        </trans-unit>
        <trans-unit id="16c734093958bc40ddded22a1e3739aa6b5e201d" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; , or &lt;code&gt;NULL&lt;/code&gt; if the hash entry does not contain an &lt;code&gt;SV*&lt;/code&gt; key.</source>
          <target state="translated">Devuelve la clave como &lt;code&gt;SV*&lt;/code&gt; , o &lt;code&gt;NULL&lt;/code&gt; si la entrada hash no contiene una clave &lt;code&gt;SV*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57286d3680e42c6fd1ee76f86624697c1c3e4dae" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; . Will create and return a temporary mortal &lt;code&gt;SV*&lt;/code&gt; if the hash entry contains only a &lt;code&gt;char*&lt;/code&gt; key.</source>
          <target state="translated">Devuelve la clave como &lt;code&gt;SV*&lt;/code&gt; . Crear&amp;aacute; y devolver&amp;aacute; un &lt;code&gt;SV*&lt;/code&gt; mortal temporal * si la entrada hash contiene solo una clave &lt;code&gt;char*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3416c02cac653aad64ff8f44995aab2ecb884e1" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; from the current position of the hash iterator. The return value will always be a mortal copy of the key. Also see &lt;code&gt;&lt;a href=&quot;#hv_iterinit&quot;&gt;&quot;hv_iterinit&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1833fd9dff65195d16a1ebc8979c79da203a00f7" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; from the current position of the hash iterator. The return value will always be a mortal copy of the key. Also see &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">Devuelve la clave como &lt;code&gt;SV*&lt;/code&gt; desde la posici&amp;oacute;n actual del iterador hash. El valor de retorno siempre ser&amp;aacute; una copia mortal de la clave. Consulte tambi&amp;eacute;n &lt;code&gt;hv_iterinit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5edf5d3d5df928ef74b90349d51097c46b5b8a0b" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt;, or &lt;code&gt;NULL&lt;/code&gt; if the hash entry does not contain an &lt;code&gt;SV*&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4a37d7254bd83cfad3102a585f553939429d16" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt;. Will create and return a temporary mortal &lt;code&gt;SV*&lt;/code&gt; if the hash entry contains only a &lt;code&gt;char*&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d0fbab1742276468e9423e30c839ad1800cf2" translate="yes" xml:space="preserve">
          <source>Returns the key from the current position of the hash iterator. See &lt;code&gt;&lt;a href=&quot;#hv_iterinit&quot;&gt;&quot;hv_iterinit&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd09cc32c42bd53f61048e9ebb81223343deeeb0" translate="yes" xml:space="preserve">
          <source>Returns the key from the current position of the hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">Devuelve la clave de la posici&amp;oacute;n actual del iterador hash. Ver &lt;code&gt;hv_iterinit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="613f3207f2ea6d917ddc3db1f409d97d7369fedf" translate="yes" xml:space="preserve">
          <source>Returns the key slot of the hash entry as a &lt;code&gt;char*&lt;/code&gt; value, doing any necessary dereferencing of possibly &lt;code&gt;SV*&lt;/code&gt; keys. The length of the string is placed in &lt;code&gt;len&lt;/code&gt; (this is a macro, so do</source>
          <target state="translated">Devuelve la ranura de clave de la entrada hash como un valor &lt;code&gt;char*&lt;/code&gt; , haciendo cualquier desreferenciaci&amp;oacute;n necesaria de posibles claves &lt;code&gt;SV*&lt;/code&gt; . La longitud de la cadena se coloca en &lt;code&gt;len&lt;/code&gt; (esta es una macro, as&amp;iacute; que</target>
        </trans-unit>
        <trans-unit id="9237afbe47e8ba6c277877d10fc33539c548e36d" translate="yes" xml:space="preserve">
          <source>Returns the label attached to a cop, and stores its length in bytes into &lt;code&gt;*len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f4e10bcc5ee3dbdf97c19bd406c3326cfb53ca" translate="yes" xml:space="preserve">
          <source>Returns the label attached to a cop, and stores its length in bytes into &lt;code&gt;*len&lt;/code&gt;. Upon return, &lt;code&gt;*flags&lt;/code&gt; will be set to either &lt;code&gt;SVf_UTF8&lt;/code&gt; or 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5942431dbf68e730ea4cb9e6e6e169a658f824c8" translate="yes" xml:space="preserve">
          <source>Returns the label attached to a cop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d0f5c019ce3eb05a8b98cbb66a0e90c8d32353" translate="yes" xml:space="preserve">
          <source>Returns the label attached to a cop. The flags pointer may be set to &lt;code&gt;SVf_UTF8&lt;/code&gt; or 0.</source>
          <target state="translated">Devuelve la etiqueta pegada a un polic&amp;iacute;a. El puntero de banderas se puede establecer en &lt;code&gt;SVf_UTF8&lt;/code&gt; o 0.</target>
        </trans-unit>
        <trans-unit id="953eea21d6bd5b91e9d5498e86e881f25d5215e0" translate="yes" xml:space="preserve">
          <source>Returns the last &lt;code&gt;$size&lt;/code&gt; elements from &lt;code&gt;@list&lt;/code&gt;. If &lt;code&gt;$size&lt;/code&gt; is negative, returns all but the first &lt;code&gt;$size&lt;/code&gt; elements from &lt;code&gt;@list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea273948872be379b7a1ea9390f0137218504b7" translate="yes" xml:space="preserve">
          <source>Returns the last encountered error as string. Pass it a true value to get the &lt;code&gt;Carp::longmess()&lt;/code&gt; output instead.</source>
          <target state="translated">Devuelve el &amp;uacute;ltimo error encontrado como una cadena. Pase un valor verdadero para obtener la salida &lt;code&gt;Carp::longmess()&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="407db97d61223688d3d11bacaba5b1ba0a7614b8" translate="yes" xml:space="preserve">
          <source>Returns the last error encountered by a routine from this module. It is just like &lt;code&gt;$^E&lt;/code&gt; except it isn't changed by anything except routines from this module. Ideally you could just use &lt;code&gt;$^E&lt;/code&gt;, but current versions of Perl often overwrite &lt;code&gt;$^E&lt;/code&gt; before you get a chance to check it and really old versions of Perl don't really support &lt;code&gt;$^E&lt;/code&gt; under Win32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028b8442d2b4f7335ece6103fe5456ee9609a42b" translate="yes" xml:space="preserve">
          <source>Returns the last error message generated by zlib.</source>
          <target state="translated">Devuelve el último mensaje de error generado por zlib.</target>
        </trans-unit>
        <trans-unit id="12f5a1aed52002fee13903cd606de0d685254e32" translate="yes" xml:space="preserve">
          <source>Returns the latest version of this module available on CPAN.</source>
          <target state="translated">Devuelve la última versión de este módulo disponible en el CPAN.</target>
        </trans-unit>
        <trans-unit id="fd57bcaf9af9c928e01a73cd1ce079bb95c63cb2" translate="yes" xml:space="preserve">
          <source>Returns the least common multiple (LCM).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c039c10bf6f2af16bc45450d4afb9df7b68b222a" translate="yes" xml:space="preserve">
          <source>Returns the length in</source>
          <target state="translated">Devuelve la longitud en</target>
        </trans-unit>
        <trans-unit id="41a52612cbc7e2be685ec3cbf1a3dafe6b1f4a9f" translate="yes" xml:space="preserve">
          <source>Returns the length of the stash's effective name.</source>
          <target state="translated">Devuelve la longitud del nombre efectivo del escondite.</target>
        </trans-unit>
        <trans-unit id="963569222dbb77b072cd4bbad2e88491ba58df87" translate="yes" xml:space="preserve">
          <source>Returns the length of the stash's name.</source>
          <target state="translated">Devuelve la longitud del nombre del escondite.</target>
        </trans-unit>
        <trans-unit id="013a7feb80a48cdf339db9a0dc1826c26a6d63c1" translate="yes" xml:space="preserve">
          <source>Returns the length of the string in the SV. Handles magic and type coercion and sets the UTF8 flag appropriately. See also &lt;code&gt;&lt;a href=&quot;#SvCUR&quot;&gt;&quot;SvCUR&quot;&lt;/a&gt;&lt;/code&gt;, which gives raw access to the &lt;code&gt;xpv_cur&lt;/code&gt; slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ec9309768f702c45b063f73c3c38472811452e" translate="yes" xml:space="preserve">
          <source>Returns the length of the string in the SV. Handles magic and type coercion and sets the UTF8 flag appropriately. See also &lt;code&gt;SvCUR&lt;/code&gt; , which gives raw access to the xpv_cur slot.</source>
          <target state="translated">Devuelve la longitud de la cadena en el SV. Maneja la magia y la coerci&amp;oacute;n de tipos y establece la bandera UTF8 de manera apropiada. Consulte tambi&amp;eacute;n &lt;code&gt;SvCUR&lt;/code&gt; , que brinda acceso sin formato a la ranura xpv_cur.</target>
        </trans-unit>
        <trans-unit id="f299d2b87ffb2db73101730f2ee0a484600a2b0c" translate="yes" xml:space="preserve">
          <source>Returns the length of the string which is in the SV. See &lt;code&gt;&lt;a href=&quot;#SvLEN&quot;&gt;&quot;SvLEN&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df9f2e7b309d465f129ded466c81d5d06e108dd" translate="yes" xml:space="preserve">
          <source>Returns the length of the string which is in the SV. See &lt;code&gt;SvLEN&lt;/code&gt; .</source>
          <target state="translated">Devuelve la longitud de la cadena que est&amp;aacute; en el SV. Consulte &lt;code&gt;SvLEN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2effde579f3aaa3f8cf6fdafe4e1f5838fb8683" translate="yes" xml:space="preserve">
          <source>Returns the length that the decoded string would have without actually decoding it. This will return the same value as &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(decode_base64($str))&lt;/a&gt;&lt;/code&gt;, but should be more efficient.</source>
          <target state="translated">Devuelve la longitud que tendr&amp;iacute;a la cadena decodificada sin realmente decodificarla. Esto devolver&amp;aacute; el mismo valor que &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(decode_base64($str))&lt;/a&gt;&lt;/code&gt; , pero deber&amp;iacute;a ser m&amp;aacute;s eficiente.</target>
        </trans-unit>
        <trans-unit id="e870ddfa7aeb8402a771276dfef13e234ebdad4c" translate="yes" xml:space="preserve">
          <source>Returns the length that the decoded string would have without actually decoding it. This will return the same value as &lt;code&gt;length(decode_base64($str))&lt;/code&gt;, but should be more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a33baf9547a4472661c0afbec5744eecd89513a" translate="yes" xml:space="preserve">
          <source>Returns the length that the encoded string would have without actually encoding it. This will return the same value as &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(encode_base64($bytes))&lt;/a&gt;&lt;/code&gt;, but should be more efficient.</source>
          <target state="translated">Devuelve la longitud que tendr&amp;iacute;a la cadena codificada sin realmente codificarla. Esto devolver&amp;aacute; el mismo valor que &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(encode_base64($bytes))&lt;/a&gt;&lt;/code&gt; , pero deber&amp;iacute;a ser m&amp;aacute;s eficiente.</target>
        </trans-unit>
        <trans-unit id="5fc8aacae5d6d8750846daf8e1656ac4306c5014" translate="yes" xml:space="preserve">
          <source>Returns the length that the encoded string would have without actually encoding it. This will return the same value as &lt;code&gt;length(encode_base64($bytes))&lt;/code&gt;, but should be more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc6144d11b2a22ce5a6cbd0607959c33ca249d8" translate="yes" xml:space="preserve">
          <source>Returns the link as contents of &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; . Reciprocal to &lt;b&gt;parse()&lt;/b&gt;.</source>
          <target state="translated">Devuelve el enlace como contenido de &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; . Rec&amp;iacute;proco a &lt;b&gt;parse ()&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ceb25e39e8d8ba6ebf5e257d77bbe8dff06a47a9" translate="yes" xml:space="preserve">
          <source>Returns the linked-to page or url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988ee81ba1078c106143e337b9309d97a5306c83" translate="yes" xml:space="preserve">
          <source>Returns the list of the keys that are legal in a restricted hash but do not have a value associated to them. Thus if 'foo' is a &quot;hidden&quot; key of the %hash it will return false for both &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; tests.</source>
          <target state="translated">Devuelve la lista de claves que son legales en un hash restringido pero que no tienen un valor asociado. Por lo tanto, si 'foo' es una clave &quot;oculta&quot; del% hash, devolver&amp;aacute; falso tanto para las pruebas &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; como para las &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28e0245a3e129fd4484b122e823d5432aa793974" translate="yes" xml:space="preserve">
          <source>Returns the list of the keys that are legal in a restricted hash but do not have a value associated to them. Thus if 'foo' is a &quot;hidden&quot; key of the %hash it will return false for both &lt;code&gt;defined&lt;/code&gt; and &lt;code&gt;exists&lt;/code&gt; tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e1d54e5a4be24e929ad91ea9a240f2f1515f46" translate="yes" xml:space="preserve">
          <source>Returns the list of the keys that are legal in a restricted hash. In the case of an unrestricted hash this is identical to calling keys(%hash).</source>
          <target state="translated">Devuelve la lista de las llaves que son legales en un hash restringido.En el caso de un hash no restringido esto es idéntico a llamar a las claves(%hash).</target>
        </trans-unit>
        <trans-unit id="c17722e7f3347f219bada8c0cf6e41454bd993e0" translate="yes" xml:space="preserve">
          <source>Returns the literal text of the &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;not ok&lt;/code&gt; status.</source>
          <target state="translated">Devuelve el texto literal del estado &lt;code&gt;ok&lt;/code&gt; o &lt;code&gt;not ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad7de00c063e5387a4ca0ed4f00b8f52b276e670" translate="yes" xml:space="preserve">
          <source>Returns the location of a Pod file, given a Pod/module/script name (like &quot;Foo::Bar&quot; or &quot;perlvar&quot; or &quot;perldoc&quot;), and an idea of what files/directories to look in. It searches according to the various options set by the accessors above. (For example, if the &lt;code&gt;inc&lt;/code&gt; attribute is on, as it is by default, then the perl @INC directories are implicitly added to the list of directories (if any) that you specify.)</source>
          <target state="translated">Devuelve la ubicaci&amp;oacute;n de un archivo de Pod, dado un nombre de Pod / m&amp;oacute;dulo / script (como &quot;Foo :: Bar&quot; o &quot;perlvar&quot; o &quot;perldoc&quot;), y una idea de qu&amp;eacute; archivos / directorios buscar. Busca seg&amp;uacute;n las diversas opciones establecidas por los descriptores de acceso anteriores. (Por ejemplo, si el atributo &lt;code&gt;inc&lt;/code&gt; est&amp;aacute; activado, como est&amp;aacute; por defecto, los directorios perl @INC se agregan impl&amp;iacute;citamente a la lista de directorios (si corresponde) que especifique).</target>
        </trans-unit>
        <trans-unit id="4ebd0614c6ffb9a2af844e2360967ef7bcb25b66" translate="yes" xml:space="preserve">
          <source>Returns the location of a pod document given a search directory and a module (e.g. &lt;code&gt;File::Find&lt;/code&gt; ) or script (e.g. &lt;code&gt;perldoc&lt;/code&gt; ) name.</source>
          <target state="translated">Devuelve la ubicaci&amp;oacute;n de un documento de pod dado un directorio de b&amp;uacute;squeda y un m&amp;oacute;dulo (por ejemplo, &lt;code&gt;File::Find&lt;/code&gt; ) o un nombre de script (por ejemplo, &lt;code&gt;perldoc&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="918720201fa1d56645488e5f578498e919b632d9" translate="yes" xml:space="preserve">
          <source>Returns the location of the SV in the string delimited by &lt;code&gt;big&lt;/code&gt; and &lt;code&gt;bigend&lt;/code&gt; (&lt;code&gt;bigend&lt;/code&gt;) is the char following the last char). It returns &lt;code&gt;NULL&lt;/code&gt; if the string can't be found. The &lt;code&gt;sv&lt;/code&gt; does not have to be &lt;code&gt;fbm_compiled&lt;/code&gt;, but the search will not be as fast then.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1f274a82de40cbf58abadb14458c7f8a28f2f4" translate="yes" xml:space="preserve">
          <source>Returns the location of the SV in the string delimited by &lt;code&gt;big&lt;/code&gt; and &lt;code&gt;bigend&lt;/code&gt; . It returns &lt;code&gt;NULL&lt;/code&gt; if the string can't be found. The &lt;code&gt;sv&lt;/code&gt; does not have to be fbm_compiled, but the search will not be as fast then.</source>
          <target state="translated">Devuelve la ubicaci&amp;oacute;n del SV en la cadena delimitada por &lt;code&gt;big&lt;/code&gt; y &lt;code&gt;bigend&lt;/code&gt; . Devuelve &lt;code&gt;NULL&lt;/code&gt; si no se puede encontrar la cadena. El &lt;code&gt;sv&lt;/code&gt; no tiene que ser fbm_compiled, pero la b&amp;uacute;squeda no ser&amp;aacute; tan r&amp;aacute;pida en ese momento.</target>
        </trans-unit>
        <trans-unit id="528d432bf181e92a41c022cba63f44ae604eca34" translate="yes" xml:space="preserve">
          <source>Returns the logarithm of OBJ to base BASE truncted to an integer. This method has two output arguments, the OBJECT and a STATUS. The STATUS is Perl scalar; it is 1 if OBJ is the exact result, 0 if the result was truncted to give OBJ, and undef if it is unknown whether OBJ is the exact result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a8042ee65d8a3ae0a9e9f976fe072ccf40a831" translate="yes" xml:space="preserve">
          <source>Returns the make variant we're generating the Makefile for. This attempts to do some normalization on the information from %Config or the user.</source>
          <target state="translated">Devuelve la variante de marca para la que estamos generando el Expediente de Marca.Esto intenta hacer una normalización de la información de %Config o del usuario.</target>
        </trans-unit>
        <trans-unit id="4e236569973d85c26d367dda953c500f8b575795" translate="yes" xml:space="preserve">
          <source>Returns the message-id of the &quot;current article&quot;.</source>
          <target state="translated">Devuelve el mensaje-id del &quot;artículo actual&quot;.</target>
        </trans-unit>
        <trans-unit id="8659d6757518a828b16f4ac813a0e6c3cacd4f13" translate="yes" xml:space="preserve">
          <source>Returns the message-id of the article.</source>
          <target state="translated">Devuelve el mensaje-id del artículo.</target>
        </trans-unit>
        <trans-unit id="a60166ade68a067f7a864aed4323fa91c9e6343a" translate="yes" xml:space="preserve">
          <source>Returns the modular exponentiation, i.e., (OBJ1 ** OBJ2) % OBJ3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413d5389aff78050d39f72eae6cb6315c2de59fa" translate="yes" xml:space="preserve">
          <source>Returns the modular multiplicative inverse, i.e., return OBJ3 so that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8b867a7418bb91867926bc892862411542c463" translate="yes" xml:space="preserve">
          <source>Returns the module name of the JSON decoder. Unlike &lt;a href=&quot;#json_backend&quot;&gt;&quot;json_backend&quot;&lt;/a&gt;, this is not necessarily a full &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;-style module, but only something that will provide a &lt;code&gt;decode_json&lt;/code&gt; subroutine. If &lt;code&gt;CPAN_META_JSON_DECODER&lt;/code&gt; is set, this will be whatever that's set to. If not, this will be whatever has been selected as &lt;a href=&quot;#json_backend&quot;&gt;&quot;json_backend&quot;&lt;/a&gt;. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; for more notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad1dfb950031a1f34b82846805e579415d28f2d" translate="yes" xml:space="preserve">
          <source>Returns the module name of the JSON serializer. If &lt;code&gt;CPAN_META_JSON_BACKEND&lt;/code&gt; is set, this will be whatever that's set to. If not, this will either be &lt;a href=&quot;JSON::PP&quot;&gt;JSON::PP&lt;/a&gt; or &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;. If &lt;code&gt;PERL_JSON_BACKEND&lt;/code&gt; is set, this will return &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; as further delegation is handled by the &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; module. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6c7941c0b111e87fefb5fc7cca4f11de5edce7" translate="yes" xml:space="preserve">
          <source>Returns the module name of the JSON serializer. This will either be &lt;a href=&quot;../../json/pp&quot;&gt;JSON::PP&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt;. Even if &lt;code&gt;PERL_JSON_BACKEND&lt;/code&gt; is set, this will return &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; as further delegation is handled by the &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; module. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for details.</source>
          <target state="translated">Devuelve el nombre del m&amp;oacute;dulo del serializador JSON. Este ser&amp;aacute; &lt;a href=&quot;../../json/pp&quot;&gt;JSON :: PP&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; . Incluso si se establece &lt;code&gt;PERL_JSON_BACKEND&lt;/code&gt; , esto devolver&amp;aacute; &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; ya que el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; maneja la delegaci&amp;oacute;n adicional . Consulte &lt;a href=&quot;#ENVIRONMENT&quot;&gt;MEDIO AMBIENTE&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="8abb6e7122e2b3b30db43e817f658031460a9c1e" translate="yes" xml:space="preserve">
          <source>Returns the module name of the YAML serializer. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601fe51433cdf65884cd2aaffc3a6c69698b7864" translate="yes" xml:space="preserve">
          <source>Returns the module name of the YAML serializer. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for details.</source>
          <target state="translated">Devuelve el nombre del m&amp;oacute;dulo del serializador YAML. Consulte &lt;a href=&quot;#ENVIRONMENT&quot;&gt;MEDIO AMBIENTE&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="2d18f3bd27de976dd09a3782f7d7c5c4b440d263" translate="yes" xml:space="preserve">
          <source>Returns the most significant digit of the current status code. If a command is pending then &lt;code&gt;CMD_PENDING&lt;/code&gt; is returned.</source>
          <target state="translated">Devuelve el d&amp;iacute;gito m&amp;aacute;s significativo del c&amp;oacute;digo de estado actual. Si hay un comando pendiente, se devuelve &lt;code&gt;CMD_PENDING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a108dd103a0a5cd8e6a4473612918a69face8b2f" translate="yes" xml:space="preserve">
          <source>Returns the mount type and flags for a specified mount point. A comma-separated string of mntent-&amp;gt;mnt_type (always &quot;system&quot; or &quot;user&quot;), then the mntent-&amp;gt;mnt_opts, where the first is always &quot;binmode&quot; or &quot;textmode&quot;.</source>
          <target state="translated">Devuelve el tipo de montaje y las banderas para un punto de montaje especificado. Una cadena separada por comas de mntent-&amp;gt; mnt_type (siempre &quot;sistema&quot; o &quot;usuario&quot;), luego mntent-&amp;gt; mnt_opts, donde el primero es siempre &quot;binmode&quot; o &quot;textmode&quot;.</target>
        </trans-unit>
        <trans-unit id="09efdfb408434e477aded841b131fd9d43f9ac7d" translate="yes" xml:space="preserve">
          <source>Returns the mro linearisation for the given stash. By default, this will be whatever &lt;code&gt;mro_get_linear_isa_dfs&lt;/code&gt; returns unless some other MRO is in effect for the stash. The return value is a read-only AV*.</source>
          <target state="translated">Devuelve la linealizaci&amp;oacute;n mro para el alijo dado. De forma predeterminada, esto ser&amp;aacute; lo que devuelva &lt;code&gt;mro_get_linear_isa_dfs&lt;/code&gt; a menos que haya otro MRO en vigor para el alijo. El valor de retorno es un AV * de solo lectura.</target>
        </trans-unit>
        <trans-unit id="dea494c6706252bebec4d7195db034a6c2309ab2" translate="yes" xml:space="preserve">
          <source>Returns the mtime of the test, in seconds from the epoch.</source>
          <target state="translated">Devuelve el tiempo de la prueba,en segundos de la época.</target>
        </trans-unit>
        <trans-unit id="a2184020dc9ac4a61ff4df0e43340602c3175d95" translate="yes" xml:space="preserve">
          <source>Returns the multiplicative inverse of &lt;code&gt;$x&lt;/code&gt; modulo &lt;code&gt;$mod&lt;/code&gt; . If</source>
          <target state="translated">Devuelve el inverso multiplicativo de &lt;code&gt;$x&lt;/code&gt; m&amp;oacute;dulo &lt;code&gt;$mod&lt;/code&gt; . Si</target>
        </trans-unit>
        <trans-unit id="3a8b9431357ac61a374b7fde8d1db2040eba6bcd" translate="yes" xml:space="preserve">
          <source>Returns the multiplicative inverse of &lt;code&gt;$x&lt;/code&gt; modulo &lt;code&gt;$mod&lt;/code&gt;. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7190bd6c98a1fb828aaa401dc90fbc0af099715e" translate="yes" xml:space="preserve">
          <source>Returns the name of a lexical sub, otherwise &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Devuelve el nombre de un &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , en caso contrario, indef .</target>
        </trans-unit>
        <trans-unit id="029c9101933b300aa2ef9ddb2bdfd913e5e9d362" translate="yes" xml:space="preserve">
          <source>Returns the name of a lexical sub, otherwise &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9f563404f6c49b4a80c8bdbeb593f0afa89468" translate="yes" xml:space="preserve">
          <source>Returns the name of the C type as it was set on construction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ecba0a27acc05dfda9b8de332e1ade088b1d27" translate="yes" xml:space="preserve">
          <source>Returns the name of the XS type of the INPUT map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eef14fc0a5905db58b0930e3cc743697f7b5bf2" translate="yes" xml:space="preserve">
          <source>Returns the name of the XS type of the OUTPUT map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab14211e26d0a87a6eb2a1c465cadf2d40b82b27" translate="yes" xml:space="preserve">
          <source>Returns the name of the XS type that this C type is associated to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cb9b4002639ad8ccbea767d46c9c7470e80d8b" translate="yes" xml:space="preserve">
          <source>Returns the name of the class used for tracking individual tests. This class should either subclass from &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; or provide an identical interface.</source>
          <target state="translated">Devuelve el nombre de la clase utilizada para realizar un seguimiento de las pruebas individuales. Esta clase debe ser una subclase de &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; o proporcionar una interfaz id&amp;eacute;ntica.</target>
        </trans-unit>
        <trans-unit id="4e0f387e3183348b4afeb859e07825cef057bc74" translate="yes" xml:space="preserve">
          <source>Returns the name of the current builder. Top level builders default to &lt;code&gt;$0&lt;/code&gt; (the name of the executable). Child builders are named via the &lt;code&gt;child&lt;/code&gt; method. If no name is supplied, will be named &quot;Child of $parent-&amp;gt;name&quot;.</source>
          <target state="translated">Devuelve el nombre del constructor actual. Los constructores de nivel superior tienen como valor predeterminado &lt;code&gt;$0&lt;/code&gt; (el nombre del ejecutable). Los constructores &lt;code&gt;child&lt;/code&gt; se nombran mediante el m&amp;eacute;todo secundario . Si no se proporciona ning&amp;uacute;n nombre, se llamar&amp;aacute; &quot;Hijo de $ parent-&amp;gt; name&quot;.</target>
        </trans-unit>
        <trans-unit id="41b56c7efcd427fd3492d55c78d6c32c9077e684" translate="yes" xml:space="preserve">
          <source>Returns the name of the current working directory. See also &lt;a href=&quot;cwd&quot;&gt;Cwd&lt;/a&gt;.</source>
          <target state="translated">Devuelve el nombre del directorio de trabajo actual. Consulte tambi&amp;eacute;n &lt;a href=&quot;cwd&quot;&gt;Cwd&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="baece99d59a060f3e4da17808e2b71ecf624ff08" translate="yes" xml:space="preserve">
          <source>Returns the name of the file on the server.</source>
          <target state="translated">Devuelve el nombre del archivo en el servidor.</target>
        </trans-unit>
        <trans-unit id="9f8543a7125681d2b6350c66855d212e6330b6b8" translate="yes" xml:space="preserve">
          <source>Returns the name of the given &lt;code&gt;$code&lt;/code&gt; reference, if it has one. Normal named subs will give a fully-qualified name consisting of the package and the localname separated by &lt;code&gt;::&lt;/code&gt;. Anonymous code references will give &lt;code&gt;__ANON__&lt;/code&gt; as the localname. If the package the code was compiled in has been deleted (e.g. using &lt;code&gt;delete_package&lt;/code&gt; from &lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt;), &lt;code&gt;__ANON__&lt;/code&gt; will be returned as the package name. If a name has been set using &lt;a href=&quot;#set_subname&quot;&gt;&quot;set_subname&quot;&lt;/a&gt;, this name will be returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdc36e986b937123029f6d748c89622624b61fb" translate="yes" xml:space="preserve">
          <source>Returns the name of the input file being read.</source>
          <target state="translated">Devuelve el nombre del archivo de entrada que se está leyendo.</target>
        </trans-unit>
        <trans-unit id="1fc1e8db08650ad957de971c64144c87c67a05b6" translate="yes" xml:space="preserve">
          <source>Returns the name of the last file stored on the server using the &lt;code&gt;STOU&lt;/code&gt; command.</source>
          <target state="translated">Devuelve el nombre del &amp;uacute;ltimo archivo almacenado en el servidor mediante el comando &lt;code&gt;STOU&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2ee1f5da5c10654163e7e194521a4ddea7cd449" translate="yes" xml:space="preserve">
          <source>Returns the name of the output file being written.</source>
          <target state="translated">Devuelve el nombre del archivo de salida que se está escribiendo.</target>
        </trans-unit>
        <trans-unit id="a182fdc89a33bddcefc9b6ab2bf786c2ecb64d21" translate="yes" xml:space="preserve">
          <source>Returns the name of the package represented by this module. If there is more than one package, it makes a best guess based on the filename. If it's a script (i.e. not a *.pm) the package name is 'main'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e47f5d703adcf47b0e9c112efd8ded3b018369e" translate="yes" xml:space="preserve">
          <source>Returns the name of the temporary directory created.</source>
          <target state="translated">Devuelve el nombre del directorio temporal creado.</target>
        </trans-unit>
        <trans-unit id="def4c500995e11bd7fc6da23c7bae31ef0d8faa4" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;*retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">Devuelve el punto de c&amp;oacute;digo nativo del primer car&amp;aacute;cter de la cadena &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; que se supone que est&amp;aacute; en codificaci&amp;oacute;n UTF-8; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; puntos a 1 m&amp;aacute;s all&amp;aacute; del final de &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;*retlen&lt;/code&gt; se establecer&amp;aacute; con la longitud, en bytes, de ese car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="f543bf4c35cf24791ef8462c88410aaee329c4de" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">Devuelve el punto de c&amp;oacute;digo nativo del primer car&amp;aacute;cter de la cadena &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; que se supone que est&amp;aacute; en codificaci&amp;oacute;n UTF-8; &lt;code&gt;retlen&lt;/code&gt; se establecer&amp;aacute; en la longitud, en bytes, de ese car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="9e2a4b7924792de3564e19038f9b066a5322cbe7" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;s&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf66169e5a3f9afbdea78e54888dfb550184ef4b" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;s&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;send&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;s&lt;/code&gt;. &lt;code&gt;*retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff720d268ce91cc4db8b355e6d3642a3e315200" translate="yes" xml:space="preserve">
          <source>Returns the native equivalent of the input Latin-1 code point (including ASCII and control characters) given by &lt;code&gt;ch&lt;/code&gt;. Thus, &lt;code&gt;LATIN1_TO_NATIVE(66)&lt;/code&gt; on EBCDIC platforms returns 194. These each represent the character &lt;code&gt;&quot;B&quot;&lt;/code&gt; on their respective platforms. On ASCII platforms no conversion is needed, so this macro expands to just its input, adding no time nor space requirements to the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fed062c585611d4063f7be410a809cb98bfce6e" translate="yes" xml:space="preserve">
          <source>Returns the native equivalent of the input Unicode code point given by &lt;code&gt;ch&lt;/code&gt;. Thus, &lt;code&gt;UNI_TO_NATIVE(68)&lt;/code&gt; on EBCDIC platforms returns 196. These each represent the character &lt;code&gt;&quot;D&quot;&lt;/code&gt; on their respective platforms. On ASCII platforms no conversion is needed, so this macro expands to just its input, adding no time nor space requirements to the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2afa6341a6574083567d5422a5df3ccc8875e1" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm (base</source>
          <target state="translated">Devuelve el logaritmo natural (base</target>
        </trans-unit>
        <trans-unit id="13bd374d3b2cc82d9382619baa41fb49a3a7c4f1" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to the argument, according to the current rounding mode (see &lt;a href=&quot;#fegetround&quot;&gt;&quot;fegetround&quot;&lt;/a&gt;) [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac9d9894ddd9718f456f1063ac204406c45c4d2" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to the argument, according to the current rounding mode (see &lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt;) [C99].</source>
          <target state="translated">Devuelve el entero m&amp;aacute;s cercano al argumento, de acuerdo con el modo de redondeo actual (ver &lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt; ) [C99].</target>
        </trans-unit>
        <trans-unit id="a6d03e57cd4567e9c5073f1d037dd6ee5948ea19" translate="yes" xml:space="preserve">
          <source>Returns the new position, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt;</source>
          <target state="translated">Devuelve la nueva posici&amp;oacute;n, o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso de falla. Una posici&amp;oacute;n de cero se devuelve como la cadena &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="515fb650ae5861f76dbe19bddd9144340146dde8" translate="yes" xml:space="preserve">
          <source>Returns the new position, or &lt;code&gt;undef&lt;/code&gt; on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5ebf02895ea09558fa52ddd689cb37cd02b884" translate="yes" xml:space="preserve">
          <source>Returns the new position, or the undefined value on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; thus &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; returns true on success and false on failure, yet you can still easily determine the new position.</source>
          <target state="translated">Devuelve la nueva posici&amp;oacute;n o el valor indefinido en caso de falla. Una posici&amp;oacute;n de cero se devuelve como la cadena &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; por lo tanto, &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; devuelve verdadero en caso de &amp;eacute;xito y falso en caso de error, pero a&amp;uacute;n puede determinar f&amp;aacute;cilmente la nueva posici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="33bae96f20220fca11d5d5a87f212bd820f0fc18" translate="yes" xml:space="preserve">
          <source>Returns the new position, or the undefined value on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; thus &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; returns true on success and false on failure, yet you can still easily determine the new position.</source>
          <target state="translated">Devuelve la nueva posici&amp;oacute;n o el valor indefinido en caso de falla. Una posici&amp;oacute;n de cero se devuelve como la cadena &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; por lo tanto, &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; devuelve verdadero en caso de &amp;eacute;xito y falso en caso de error, pero a&amp;uacute;n puede determinar f&amp;aacute;cilmente la nueva posici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8c8086b6b093dfe5b76ed51a20df41eeba198fe3" translate="yes" xml:space="preserve">
          <source>Returns the new position, or the undefined value on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt;; thus &lt;a href=&quot;#sysseek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;sysseek&lt;/code&gt;&lt;/a&gt; returns true on success and false on failure, yet you can still easily determine the new position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa758d598b74c0e7a3f3db7d8f54b4236387c465" translate="yes" xml:space="preserve">
          <source>Returns the next character from the input file attached to FILEHANDLE, or the undefined value at end of file or if there was an error (in the latter case &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; is set). If FILEHANDLE is omitted, reads from STDIN. This is not particularly efficient. However, it cannot be used by itself to fetch single characters without waiting for the user to hit enter. For that, try something more like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c7ecc40fd6af76f3ced9a4d4d799db79632915" translate="yes" xml:space="preserve">
          <source>Returns the next character from the input file attached to FILEHANDLE, or the undefined value at end of file or if there was an error (in the latter case &lt;code&gt;$!&lt;/code&gt; is set). If FILEHANDLE is omitted, reads from STDIN. This is not particularly efficient. However, it cannot be used by itself to fetch single characters without waiting for the user to hit enter. For that, try something more like:</source>
          <target state="translated">Devuelve el siguiente car&amp;aacute;cter del archivo de entrada adjunto a FILEHANDLE, o el valor indefinido al final del archivo o si hubo un error (en el &amp;uacute;ltimo caso, &lt;code&gt;$!&lt;/code&gt; Est&amp;aacute; configurado). Si se omite FILEHANDLE, lee de STDIN. Esto no es particularmente eficaz. Sin embargo, no se puede utilizar por s&amp;iacute; solo para buscar caracteres individuales sin esperar a que el usuario presione Intro. Para eso, prueba algo m&amp;aacute;s como:</target>
        </trans-unit>
        <trans-unit id="137f2ef901667a009bb8ae7bae674b2169f8f480" translate="yes" xml:space="preserve">
          <source>Returns the next directory entry for a directory opened by &lt;a href=&quot;#opendir-DIRHANDLE%2CEXPR&quot;&gt;&lt;code&gt;opendir&lt;/code&gt;&lt;/a&gt;. If used in list context, returns all the rest of the entries in the directory. If there are no more entries, returns the undefined value in scalar context and the empty list in list context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba81cb9a638e9d555d09818617f5dc9a9283715" translate="yes" xml:space="preserve">
          <source>Returns the next directory entry for a directory opened by &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;. If used in list context, returns all the rest of the entries in the directory. If there are no more entries, returns the undefined value in scalar context and the empty list in list context.</source>
          <target state="translated">Devuelve la siguiente entrada de directorio para un directorio abierto por &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; . Si se usa en el contexto de la lista, devuelve el resto de las entradas del directorio. Si no hay m&amp;aacute;s entradas, devuelve el valor indefinido en contexto escalar y la lista vac&amp;iacute;a en contexto de lista.</target>
        </trans-unit>
        <trans-unit id="5148c8f92e23d2faa8c6a65ac6aee920f391f96f" translate="yes" xml:space="preserve">
          <source>Returns the next directory entry for a directory opened by &lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;. If used in list context, returns all the rest of the entries in the directory. If there are no more entries, returns the undefined value in scalar context and the empty list in list context.</source>
          <target state="translated">Devuelve la siguiente entrada de directorio para un directorio abierto por &lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; . Si se usa en el contexto de la lista, devuelve el resto de las entradas del directorio. Si no hay m&amp;aacute;s entradas, devuelve el valor indefinido en contexto escalar y la lista vac&amp;iacute;a en contexto de lista.</target>
        </trans-unit>
        <trans-unit id="5211b758214a3e671cffde89772c624ecf18b64c" translate="yes" xml:space="preserve">
          <source>Returns the next representable floating point number after &lt;code&gt;x&lt;/code&gt; in the direction of &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</source>
          <target state="translated">Devuelve el siguiente n&amp;uacute;mero de coma flotante representable despu&amp;eacute;s de &lt;code&gt;x&lt;/code&gt; en la direcci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</target>
        </trans-unit>
        <trans-unit id="29490a85b0ae3e75ce6162054b7efb26213e119f" translate="yes" xml:space="preserve">
          <source>Returns the next representable floating point number after &lt;code&gt;x&lt;/code&gt; in the direction of &lt;code&gt;y&lt;/code&gt; [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95637d8a94c7b2c23f6a0b2531ccd52d6915ac3c" translate="yes" xml:space="preserve">
          <source>Returns the null list for the MacPerl application, since the concept is usually meaningless under Mac OS. But if you're using the MacPerl tool under MPW, it gives back $ENV{Commands} suitably split, as is done in :lib:ExtUtils:MM_Mac.pm.</source>
          <target state="translated">Devuelve la lista nula para la aplicación MacPerl,ya que el concepto no suele tener sentido en Mac OS.Pero si usas la herramienta MacPerl bajo MPW,devuelve $ENV{Comandos}convenientemente divididos,como se hace en :lib:ExtUtils:MM_Mac.pm.</target>
        </trans-unit>
        <trans-unit id="69d52809fdcc15911c76607c1065aaeb2979a417" translate="yes" xml:space="preserve">
          <source>Returns the number for the protocol being used on the socket, if known. If the protocol is unknown, as with an &lt;code&gt;AF_UNIX&lt;/code&gt; socket, zero is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7297d761976afebf5e633e6d14fb6a955cd614" translate="yes" xml:space="preserve">
          <source>Returns the number for the socket domain type. For example, for an &lt;code&gt;AF_INET&lt;/code&gt; socket the value of &lt;code&gt;&amp;amp;AF_INET&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2e1c3f4a60c7893154e84ecf5ce77b9959056b" translate="yes" xml:space="preserve">
          <source>Returns the number for the socket type. For example, for a &lt;code&gt;SOCK_STREAM&lt;/code&gt; socket the value of &lt;code&gt;&amp;amp;SOCK_STREAM&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b0f8d8da906b843c8b694b9581488fdb8b5f27" translate="yes" xml:space="preserve">
          <source>Returns the number of UTF-8 characters between the UTF-8 pointers &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; .</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de caracteres UTF-8 entre las UTF-8 punteros &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8ddab3121d4de9336d5963a359dc16c705dc849" translate="yes" xml:space="preserve">
          <source>Returns the number of UTF-8 characters between the UTF-8 pointers &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb85472e3b77bee0934e39a40d445532d815833a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes actually read. On EOF it returns 0 and in the case of an error, -1.</source>
          <target state="translated">Devuelve el número de bytes leídos realmente.En EOF devuelve 0 y en caso de error,-1.</target>
        </trans-unit>
        <trans-unit id="cae35ff2e723caccf4c8ada05d7f356476081286" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes beginning at &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which form a legal UTF-8 (or UTF-EBCDIC) encoded character, looking no further than &lt;code&gt;e - s&lt;/code&gt; bytes into &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. Returns 0 if the sequence starting at &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; through &lt;code&gt;e - 1&lt;/code&gt; is not well-formed UTF-8</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de bytes que comienzan en &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; que forman un car&amp;aacute;cter codificado en UTF-8 (o UTF-EBCDIC) legal, sin buscar m&amp;aacute;s que &lt;code&gt;e - s&lt;/code&gt; bytes en &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; . Devuelve 0 si la secuencia a partir de &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; a trav&amp;eacute;s de &lt;code&gt;e - 1&lt;/code&gt; no est&amp;aacute; bien formada UTF-8</target>
        </trans-unit>
        <trans-unit id="75174ddfd486232efb60d582a8b83b5c3b742cc2" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in the converted string (not including the spares).</source>
          <target state="translated">Devuelve el número de bytes de la cadena convertida (sin incluir los repuestos).</target>
        </trans-unit>
        <trans-unit id="88c11762c84d1f08358d14b45267f8562d2a11aa" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in the converted string.</source>
          <target state="translated">Devuelve el número de bytes de la cadena convertida.</target>
        </trans-unit>
        <trans-unit id="3add76e354d1acc7e90baad934359228e1bbd96f" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes read before any &amp;lt;CRLF&amp;gt; translation.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de bytes le&amp;iacute;dos antes de cualquier traducci&amp;oacute;n &amp;lt;CRLF&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="38304001d06d1583304e8a4b127b5889da6a60ac" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes read so far.</source>
          <target state="translated">Devuelve el número de bytes leídos hasta ahora.</target>
        </trans-unit>
        <trans-unit id="c6d00c06d1d76be8e8f1893de5ecccb4b142785a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes written before any &amp;lt;CRLF&amp;gt; translation.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de bytes escritos antes de cualquier traducci&amp;oacute;n &amp;lt;CRLF&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f443b8f3a0d624bb61d780540c492aff968406a7" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in the sequence of UTF-8-encoded bytes starting at &lt;code&gt;s&lt;/code&gt; and ending at the byte just before &lt;code&gt;e&lt;/code&gt;. If &amp;lt;s&amp;gt; and &amp;lt;e&amp;gt; point to the same place, it returns 0 with no warning raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c877b0d9321a27659b38a0779f16c4d6f7be50bc" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in the string in an SV, counting wide UTF-8 bytes as a single character. Handles magic and type coercion.</source>
          <target state="translated">Devuelve el número de caracteres de la cadena en un SV,contando los anchos bytes UTF-8 como un solo carácter.Maneja la magia y escribe la coacción.</target>
        </trans-unit>
        <trans-unit id="0e7dc8ec42d520f8664de7d9c8a5ab07b4bf4e10" translate="yes" xml:space="preserve">
          <source>Returns the number of digest bits for this object. The values are 160, 224, 256, 384, 512, 224, and 256 for SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224 and SHA-512/256, respectively.</source>
          <target state="translated">Devuelve el número de bits de digestión para este objeto.Los valores son 160,224,256,384,512,224 y 256 para SHA-1,SHA-224,SHA-256,SHA-384,SHA-512,SHA-512/224 y SHA-512/256,respectivamente.</target>
        </trans-unit>
        <trans-unit id="58e5482055ad776becff57fabacedfac48285db7" translate="yes" xml:space="preserve">
          <source>Returns the number of digits in the decimal representation of the number. In list context, returns the length of the integer and fraction part. For BigInt's, the length of the fraction part will always be 0.</source>
          <target state="translated">Devuelve el número de dígitos en la representación decimal del número.En el contexto de la lista,devuelve la longitud del entero y la parte de la fracción.Para los BigInt's,la longitud de la parte de la fracción siempre será 0.</target>
        </trans-unit>
        <trans-unit id="dbe8512e3bfbe06b82284278acd213dd03ad8aca" translate="yes" xml:space="preserve">
          <source>Returns the number of digits in the decimal representation of the number. In list context, returns the length of the integer and fraction part. For Math::BigInt objects, the length of the fraction part is always 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77d93ca6d9bb32f039ad2172d039d9679dbe239" translate="yes" xml:space="preserve">
          <source>Returns the number of distinct names defined in the pattern used for the last successful match.</source>
          <target state="translated">Devuelve el número de nombres distintos definidos en el patrón utilizado para la última coincidencia exitosa.</target>
        </trans-unit>
        <trans-unit id="2d4beed58f26f66976d2d26980a8559d762abfa2" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the array.</source>
          <target state="translated">Devuelve el número de elementos de la matriz.</target>
        </trans-unit>
        <trans-unit id="4b3d570b52a9fa6cdd92f738830c90a7a485426b" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the input C array (so you want your zero-based indices to be less than but not equal to).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df16e722c3137a93ad268e13ef0e85e15fe5d5c5" translate="yes" xml:space="preserve">
          <source>Returns the number of files read in scalar context, and a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects in list context.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de archivos le&amp;iacute;dos en contexto escalar y una lista de objetos &lt;code&gt;Archive::Tar::File&lt;/code&gt; en contexto de lista.</target>
        </trans-unit>
        <trans-unit id="19895a3ddf8cf0c9db7f98e090316c26dcf1d313" translate="yes" xml:space="preserve">
          <source>Returns the number of files successfully changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76d0167eb4dc83e86b7efc4472b19864a8c6d5c" translate="yes" xml:space="preserve">
          <source>Returns the number of handles that the object will check for when one of the &lt;code&gt;can_&lt;/code&gt; methods is called or the object is passed to the &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; static method.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de identificadores que el objeto comprobar&amp;aacute; cuando se &lt;code&gt;can_&lt;/code&gt; uno de los m&amp;eacute;todos can_ o se pase el objeto al m&amp;eacute;todo est&amp;aacute;tico &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="153886416fb30b34d55c31be8d0c34b15c9a8973" translate="yes" xml:space="preserve">
          <source>Returns the number of handles that the object will check for when one of the &lt;code&gt;can_&lt;/code&gt; methods is called or the object is passed to the &lt;code&gt;select&lt;/code&gt; static method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1ac41e0ae5e8fa43dbd73a32a079046e874802" translate="yes" xml:space="preserve">
          <source>Returns the number of hash buckets that happen to be in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb985a707fab944f8c24283ab158416ea1a522ac" translate="yes" xml:space="preserve">
          <source>Returns the number of hash buckets that happen to be in use. This function is wrapped by the macro &lt;code&gt;HvFILL&lt;/code&gt; .</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de dep&amp;oacute;sitos de hash que est&amp;aacute;n en uso. Esta funci&amp;oacute;n est&amp;aacute; envuelta por la macro &lt;code&gt;HvFILL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c36f861ad3db4d659e52c582865413664670812" translate="yes" xml:space="preserve">
          <source>Returns the number of items still in the queue. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the queue has been ended (see below), and there are no more items in the queue.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de elementos que a&amp;uacute;n est&amp;aacute;n en la cola. Devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si la cola ha finalizado (ver m&amp;aacute;s abajo) y no hay m&amp;aacute;s elementos en la cola.</target>
        </trans-unit>
        <trans-unit id="5734d2bbb65e0d5c17c5b98f543060777d8e0ad6" translate="yes" xml:space="preserve">
          <source>Returns the number of items still in the queue. Returns &lt;code&gt;undef&lt;/code&gt; if the queue has been ended (see below), and there are no more items in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00dee940b5a7f851e498c2a31eab039aa0c0ffe" translate="yes" xml:space="preserve">
          <source>Returns the number of iterations.</source>
          <target state="translated">Devuelve el número de iteraciones.</target>
        </trans-unit>
        <trans-unit id="0dd115724bfc059eb48f89636817e70be2f7297b" translate="yes" xml:space="preserve">
          <source>Returns the number of messages in the mailbox. However if there are no messages on the server the string &lt;code&gt;&quot;0E0&quot;&lt;/code&gt; will be returned. This is will give a true value in a boolean context, but zero in a numeric context.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de mensajes en el buz&amp;oacute;n. Sin embargo, si no hay mensajes en el servidor , se devolver&amp;aacute; la cadena &lt;code&gt;&quot;0E0&quot;&lt;/code&gt; . Esto le dar&amp;aacute; un valor verdadero en un contexto booleano, pero cero en un contexto num&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="f8126ef0c283f1a4db9ded40d38fb29313df2b45" translate="yes" xml:space="preserve">
          <source>Returns the number of non-leap seconds since whatever time the system considers to be the epoch, suitable for feeding to &lt;a href=&quot;#gmtime-EXPR&quot;&gt;&lt;code&gt;gmtime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#localtime-EXPR&quot;&gt;&lt;code&gt;localtime&lt;/code&gt;&lt;/a&gt;. On most systems the epoch is 00:00:00 UTC, January 1, 1970; a prominent exception being Mac OS Classic which uses 00:00:00, January 1, 1904 in the current local time zone for its epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb802c993b1565f12edfe1942e602faebed7b94" translate="yes" xml:space="preserve">
          <source>Returns the number of non-leap seconds since whatever time the system considers to be the epoch, suitable for feeding to &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;. On most systems the epoch is 00:00:00 UTC, January 1, 1970; a prominent exception being Mac OS Classic which uses 00:00:00, January 1, 1904 in the current local time zone for its epoch.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de segundos que no bisiestos, ya la hora que el sistema considera que es la &amp;eacute;poca, adecuado para alimentar a &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; . En la mayor&amp;iacute;a de los sistemas, la &amp;eacute;poca es 00:00:00 UTC, 1 de enero de 1970; una excepci&amp;oacute;n destacada es Mac OS Classic que usa 00:00:00, 1 de enero de 1904 en la zona horaria local actual para su &amp;eacute;poca.</target>
        </trans-unit>
        <trans-unit id="662bde2620f3ee7619d37225b183a8442b4c6d25" translate="yes" xml:space="preserve">
          <source>Returns the number of non-leap seconds since whatever time the system considers to be the epoch, suitable for feeding to &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;. On most systems the epoch is 00:00:00 UTC, January 1, 1970; a prominent exception being Mac OS Classic which uses 00:00:00, January 1, 1904 in the current local time zone for its epoch.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de segundos que no bisiestos, ya la hora que el sistema considera que es la &amp;eacute;poca, adecuado para alimentar a &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; . En la mayor&amp;iacute;a de los sistemas, la &amp;eacute;poca es 00:00:00 UTC, 1 de enero de 1970; una excepci&amp;oacute;n destacada es Mac OS Classic que usa 00:00:00, 1 de enero de 1904 en la zona horaria local actual para su &amp;eacute;poca.</target>
        </trans-unit>
        <trans-unit id="82a0291a92a69c8a33c62fd82a61c84e1ff9b325" translate="yes" xml:space="preserve">
          <source>Returns the number of octets from $buffer that have been successfully saved to be returned on future FILL/READ calls. Optional. Default is to push data into a temporary layer above this one.</source>
          <target state="translated">Devuelve el número de octetos de $buffer que han sido guardados con éxito para ser devueltos en futuras llamadas FILL/READ.Opcional.Por defecto es empujar los datos a una capa temporal por encima de esta.</target>
        </trans-unit>
        <trans-unit id="7ab52c3d733611d3fabb7545c94df797da439f07" translate="yes" xml:space="preserve">
          <source>Returns the number of octets from $buffer that have been successfully written.</source>
          <target state="translated">Devuelve el número de octetos de $buffer que se han escrito con éxito.</target>
        </trans-unit>
        <trans-unit id="cf5c8b3845cd4fdd2e0cb4812ccb86f72bbe2512" translate="yes" xml:space="preserve">
          <source>Returns the number of octets placed in $buffer (must be less than or equal to $len). Optional. Default is to use FILL instead.</source>
          <target state="translated">Devuelve el número de octetos colocados en $buffer (debe ser menor o igual a $len).Opcional.Por defecto se usa FILL en su lugar.</target>
        </trans-unit>
        <trans-unit id="fee7858afbaff7dc16cb9b958a05d79fc3c147ad" translate="yes" xml:space="preserve">
          <source>Returns the number of parsers. Parsers are removed from the multiplexer when their input is exhausted.</source>
          <target state="translated">Devuelve el número de analizadores.Los analizadores se eliminan del multiplexor cuando su entrada se agota.</target>
        </trans-unit>
        <trans-unit id="4268fbc1b2eeb24c8765b497975f451cd1c4a2c1" translate="yes" xml:space="preserve">
          <source>Returns the number of processes waiting for the semaphore &lt;code&gt;SEM&lt;/code&gt; to become greater than its current value</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de procesos que esperan que el sem&amp;aacute;foro &lt;code&gt;SEM&lt;/code&gt; sea ​​mayor que su valor actual</target>
        </trans-unit>
        <trans-unit id="88269404adb70353c659aa28cf6b5e21e2bd28d4" translate="yes" xml:space="preserve">
          <source>Returns the number of processes waiting for the semaphore &lt;code&gt;SEM&lt;/code&gt; to become zero.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de procesos que esperan que el sem&amp;aacute;foro &lt;code&gt;SEM&lt;/code&gt; se convierta en cero.</target>
        </trans-unit>
        <trans-unit id="881f9b9bc1fd39a10f83e683ca82a8d742aeed5f" translate="yes" xml:space="preserve">
          <source>Returns the number of tests for a given test suite result.</source>
          <target state="translated">Devuelve el número de pruebas para un determinado resultado del conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="813c8498e317e592cb3735e49115edd07c9ad543" translate="yes" xml:space="preserve">
          <source>Returns the number of tests planned, according to the plan. For example, a plan of '1..17' will mean that 17 tests were planned.</source>
          <target state="translated">Devuelve el número de pruebas previstas,según el plan.Por ejemplo,un plan de &quot;1..17&quot; significará que se planearon 17 pruebas.</target>
        </trans-unit>
        <trans-unit id="3f62a51b7d445c7479e59cd7cd311363e35b9b16" translate="yes" xml:space="preserve">
          <source>Returns the number of tests planned. For example, a plan of &lt;code&gt;1..17&lt;/code&gt; will cause this method to return '17'.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de pruebas planificadas. Por ejemplo, un plan de &lt;code&gt;1..17&lt;/code&gt; har&amp;aacute; que este m&amp;eacute;todo devuelva '17'.</target>
        </trans-unit>
        <trans-unit id="828b69f875f906af59cfebfa2f9d766028bed463" translate="yes" xml:space="preserve">
          <source>Returns the number of tests which actually were run. Hopefully this will match the number of &lt;code&gt;$parser-&amp;gt;tests_planned&lt;/code&gt; .</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de pruebas que realmente se ejecutaron. Con suerte, esto coincidir&amp;aacute; con el n&amp;uacute;mero de &lt;code&gt;$parser-&amp;gt;tests_planned&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae1ae954e727d23ba6e5859d4b1bc549fa001592" translate="yes" xml:space="preserve">
          <source>Returns the number of tests which actually were run. Hopefully this will match the number of &lt;code&gt;$parser-&amp;gt;tests_planned&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236e8477487bf88654bb1edb69fec361bc308c37" translate="yes" xml:space="preserve">
          <source>Returns the number of the decimal digits in OBJ. The output is a Perl scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1af1dcee34c4b6dcddf996ebcb65d0d656b355" translate="yes" xml:space="preserve">
          <source>Returns the number of the decimal digits in the number. The output is a Perl scalar.</source>
          <target state="translated">Devuelve el número de los dígitos decimales del número.La salida es un escalar de Perl.</target>
        </trans-unit>
        <trans-unit id="5042b0a93a204c5a793cbaaf65ebaf49f13dc1b7" translate="yes" xml:space="preserve">
          <source>Returns the number of the test, even if the original TAP output did not supply that number.</source>
          <target state="translated">Devuelve el número de la prueba,incluso si la salida original del TAP no proporcionó ese número.</target>
        </trans-unit>
        <trans-unit id="ff843e17d50bc873333eb5032771dba1f9b94a17" translate="yes" xml:space="preserve">
          <source>Returns the number of trailing decimal zeros. The output is a Perl scalar. The number zero has no trailing decimal zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a517ce082141e4f0cc6c00dea94c9725cf43fa5c" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written to &lt;code&gt;$buffer&lt;/code&gt; , zero if eof or a negative number on error.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de bytes sin comprimir escritos en &lt;code&gt;$buffer&lt;/code&gt; , cero si eof o un n&amp;uacute;mero negativo en caso de error.</target>
        </trans-unit>
        <trans-unit id="c3add4632f31a15ef557e8b1a843d4ca1f231632" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written to &lt;code&gt;$buffer&lt;/code&gt;, zero if eof or a negative number on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3197c4fab1aea1beec1624e01489e167b47d9d" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written, or &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if unsuccessful.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de bytes escritos sin comprimir, o &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si no tiene &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="0e54dbb63d6ac000050abe9740ade54660f22e33" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written, or &lt;code&gt;undef&lt;/code&gt; if unsuccessful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ffb96c993f53ccb8f1f615987845984c3b8222" translate="yes" xml:space="preserve">
          <source>Returns the number of unread chars.</source>
          <target state="translated">Devuelve el número de caracteres no leídos.</target>
        </trans-unit>
        <trans-unit id="e9f8a9694005f03954e8b2ae78f14a269d593d4b" translate="yes" xml:space="preserve">
          <source>Returns the numeric value of the first character of EXPR. If EXPR is an empty string, returns 0. If EXPR is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. (Note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f804bf0367ece8be05ac406880d3ac3ef13d10c3" translate="yes" xml:space="preserve">
          <source>Returns the numeric value of the first character of EXPR. If EXPR is an empty string, returns 0. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . (Note</source>
          <target state="translated">Devuelve el valor num&amp;eacute;rico del primer car&amp;aacute;cter de EXPR. Si EXPR es una cadena vac&amp;iacute;a, devuelve 0. Si se omite EXPR, usa &lt;code&gt;$_&lt;/code&gt; . (Nota</target>
        </trans-unit>
        <trans-unit id="fe48d260c4a1908d637c80ad7270fc55e5eff63a" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the protocol being used on the socket, if known. If the protocol is unknown, as with an AF_UNIX socket, zero is returned.</source>
          <target state="translated">Devuelve el número numérico del protocolo que se está usando en el enchufe,si se conoce.Si el protocolo es desconocido,como en el caso del socket AF_UNIX,se devuelve el cero.</target>
        </trans-unit>
        <trans-unit id="76939a93dfaa37bd7042a86840e76339b42c8f57" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the socket domain type. For example, for an AF_INET socket the value of &amp;amp;AF_INET will be returned.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero num&amp;eacute;rico del tipo de dominio de socket. Por ejemplo, para un socket AF_INET, se devolver&amp;aacute; el valor de &amp;amp; AF_INET.</target>
        </trans-unit>
        <trans-unit id="0d4ad4d31c2549368486e5f63628667ff1fcafee" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the socket type. For example, for a SOCK_STREAM socket the value of &amp;amp;SOCK_STREAM will be returned.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero num&amp;eacute;rico del tipo de conector. Por ejemplo, para un socket SOCK_STREAM se devolver&amp;aacute; el valor de &amp;amp; SOCK_STREAM.</target>
        </trans-unit>
        <trans-unit id="02715cdde7577d8ebcd7275003732bf58eb9d020" translate="yes" xml:space="preserve">
          <source>Returns the numerical product of all the elements in &lt;code&gt;@list&lt;/code&gt; . If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;1&lt;/code&gt; is returned.</source>
          <target state="translated">Devuelve el producto num&amp;eacute;rico de todos los elementos de &lt;code&gt;@list&lt;/code&gt; . Si &lt;code&gt;@list&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o, se devuelve &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="472a93bb829067e87c5a0b2452fce0fc5544982b" translate="yes" xml:space="preserve">
          <source>Returns the numerical product of all the elements in &lt;code&gt;@list&lt;/code&gt;. If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;1&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e18a0badca7cf503234b27166d85615736adc0" translate="yes" xml:space="preserve">
          <source>Returns the numerical sum of all the elements in &lt;code&gt;@list&lt;/code&gt; . For backwards compatibility, if &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Devuelve la suma num&amp;eacute;rica de todos los elementos de &lt;code&gt;@list&lt;/code&gt; . Para compatibilidad con versiones anteriores, si &lt;code&gt;@list&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b950ba66e9fb64916c3d5948c5010fa119b12970" translate="yes" xml:space="preserve">
          <source>Returns the numerical sum of all the elements in &lt;code&gt;@list&lt;/code&gt;. For backwards compatibility, if &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ad5a1ae05fff0701f32a1e8e9cba1d56841b86" translate="yes" xml:space="preserve">
          <source>Returns the object as a scalar. This will lose some data if the object cannot be represented by a normal Perl scalar (integer or float), so use &lt;a href=&quot;#as_int%28%29&quot;&gt;&quot;as_int()&quot;&lt;/a&gt; or &lt;a href=&quot;#as_float%28%29&quot;&gt;&quot;as_float()&quot;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3831814d8a8e59012333ac1ed83f5becc9ec75d" translate="yes" xml:space="preserve">
          <source>Returns the object as a scalar. This will lose some data if the object cannot be represented by a normal Perl scalar (integer or float), so use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int()&lt;/a&gt; or &lt;a href=&quot;#as_float()&quot;&gt;as_float()&lt;/a&gt; instead.</source>
          <target state="translated">Devuelve el objeto como escalar. Esto perder&amp;aacute; algunos datos si el objeto no puede ser representado por un escalar de Perl normal (entero o flotante), as&amp;iacute; que use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int ()&lt;/a&gt; o &lt;a href=&quot;#as_float()&quot;&gt;as_float () en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="bfcbf575f0bb3f9931cc605f7c28b21d7fa6dc86" translate="yes" xml:space="preserve">
          <source>Returns the octal string representation of the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fd815d843c1acef5a39e6fd6c97398400eb2b4" translate="yes" xml:space="preserve">
          <source>Returns the offset in the bottom pad of the lex or the fake lex. &lt;code&gt;cv&lt;/code&gt; is the CV in which to start the search, and seq is the current &lt;code&gt;cop_seq&lt;/code&gt; to match against. If &lt;code&gt;warn&lt;/code&gt; is true, print appropriate warnings. The &lt;code&gt;out_&lt;/code&gt;* vars return values, and so are pointers to where the returned values should be stored. &lt;code&gt;out_capture&lt;/code&gt;, if non-null, requests that the innermost instance of the lexical is captured; &lt;code&gt;out_name&lt;/code&gt; is set to the innermost matched pad name or fake pad name; &lt;code&gt;out_flags&lt;/code&gt; returns the flags normally associated with the &lt;code&gt;PARENT_FAKELEX_FLAGS&lt;/code&gt; field of a fake pad name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa388f66b6e4485adca42c1ebd6b3383a26f5a6" translate="yes" xml:space="preserve">
          <source>Returns the offset in the bottom pad of the lex or the fake lex. cv is the CV in which to start the search, and seq is the current cop_seq to match against. If warn is true, print appropriate warnings. The out_* vars return values, and so are pointers to where the returned values should be stored. out_capture, if non-null, requests that the innermost instance of the lexical is captured; out_name is set to the innermost matched pad name or fake pad name; out_flags returns the flags normally associated with the PARENT_FAKELEX_FLAGS field of a fake pad name.</source>
          <target state="translated">Devuelve el desplazamiento en la parte inferior de la lex o la falsa lex.cv es el CV en el que se inicia la búsqueda,y seq es el cop_seq actual con el que se compara.Si la advertencia es verdadera,imprime las advertencias apropiadas.Los vars out_*devuelven valores,y también lo hacen los punteros a donde los valores devueltos deben ser almacenados.out_capture,si no es nulo,solicita que la instancia más interna del léxico sea capturada;out_name se establece con el nombre de la almohadilla más interna o el nombre de la almohadilla falsa;out_flags devuelve las banderas normalmente asociadas con el campo PARENT_FAKELEX_FLAGS de un nombre de almohadilla falso.</target>
        </trans-unit>
        <trans-unit id="71384b7d8016cb7d1aff03eeb51e237ce1600ed5" translate="yes" xml:space="preserve">
          <source>Returns the offset of where the last &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; search left off for the variable in question (&lt;code&gt;$_&lt;/code&gt; is used when the variable is not specified). Note that 0 is a valid match offset. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indicates that the search position is reset (usually due to match failure, but can also be because no match has yet been run on the scalar).</source>
          <target state="translated">Devuelve el desplazamiento de donde qued&amp;oacute; la &amp;uacute;ltima b&amp;uacute;squeda &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; para la variable en cuesti&amp;oacute;n ( se usa &lt;code&gt;$_&lt;/code&gt; cuando no se especifica la variable). Tenga en cuenta que 0 es un desplazamiento de coincidencia v&amp;aacute;lido. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indica que la posici&amp;oacute;n de b&amp;uacute;squeda se restablece (generalmente debido a un error de coincidencia, pero tambi&amp;eacute;n puede deberse a que a&amp;uacute;n no se ha ejecutado ninguna coincidencia en el escalar).</target>
        </trans-unit>
        <trans-unit id="66cc4dc5054d673c3da8a7081460cafa3e4cf176" translate="yes" xml:space="preserve">
          <source>Returns the offset of where the last &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; search left off for the variable in question (&lt;code&gt;$_&lt;/code&gt; is used when the variable is not specified). Note that 0 is a valid match offset. &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indicates that the search position is reset (usually due to match failure, but can also be because no match has yet been run on the scalar).</source>
          <target state="translated">Devuelve el desplazamiento de donde qued&amp;oacute; la &amp;uacute;ltima b&amp;uacute;squeda &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; para la variable en cuesti&amp;oacute;n ( se usa &lt;code&gt;$_&lt;/code&gt; cuando no se especifica la variable). Tenga en cuenta que 0 es un desplazamiento de coincidencia v&amp;aacute;lido. &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indica que la posici&amp;oacute;n de b&amp;uacute;squeda se restablece (generalmente debido a un error de coincidencia, pero tambi&amp;eacute;n puede deberse a que a&amp;uacute;n no se ha ejecutado ninguna coincidencia en el escalar).</target>
        </trans-unit>
        <trans-unit id="a52faf89974c99885581127ebc481456511763e8" translate="yes" xml:space="preserve">
          <source>Returns the offset of where the last &lt;code&gt;m//g&lt;/code&gt; search left off for the variable in question (&lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; is used when the variable is not specified). This offset is in characters unless the (no-longer-recommended) &lt;a href=&quot;bytes&quot;&gt;&lt;code&gt;use bytes&lt;/code&gt;&lt;/a&gt; pragma is in effect, in which case the offset is in bytes. Note that 0 is a valid match offset. &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; indicates that the search position is reset (usually due to match failure, but can also be because no match has yet been run on the scalar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783e80c8529244f11ec8f9f07c22e72429a89029" translate="yes" xml:space="preserve">
          <source>Returns the original line of text which was parsed.</source>
          <target state="translated">Devuelve la línea de texto original que fue analizada.</target>
        </trans-unit>
        <trans-unit id="15cf5bb8318b019aa97f4e10cb1b8c3c025b9930" translate="yes" xml:space="preserve">
          <source>Returns the original name which was trimmed to &lt;code&gt;$trimmed&lt;/code&gt; by a previous call to addsym(), or &lt;code&gt;undef&lt;/code&gt; if &lt;code&gt;$trimmed&lt;/code&gt; does not correspond to a member of this set of symbols. This method must be called via an existing object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10e5e2d757ab8ff2f97171a6c6fb63040a6960f" translate="yes" xml:space="preserve">
          <source>Returns the output code page used by the console associated with the calling process. To set the console's output code page, see SetConsoleOutputCP(). See also GetConsoleCP(), GetACP(), and GetOEMCP().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fc8546da5a908dbc3796e28a45b07488c75616" translate="yes" xml:space="preserve">
          <source>Returns the output filehandle object.</source>
          <target state="translated">Devuelve el objeto filehandle de salida.</target>
        </trans-unit>
        <trans-unit id="5610af4d62d5aa9322723256f29746865d56266c" translate="yes" xml:space="preserve">
          <source>Returns the package name of a stash, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;stash&lt;/code&gt; isn't a stash. See &lt;code&gt;&lt;a href=&quot;#SvSTASH&quot;&gt;&quot;SvSTASH&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#CvSTASH&quot;&gt;&quot;CvSTASH&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60430b499b4b64b22304735760bb5727bfef14af" translate="yes" xml:space="preserve">
          <source>Returns the package name of a stash, or NULL if &lt;code&gt;stash&lt;/code&gt; isn't a stash. See &lt;code&gt;SvSTASH&lt;/code&gt; , &lt;code&gt;CvSTASH&lt;/code&gt; .</source>
          <target state="translated">Devuelve el nombre del paquete de un alijo, o NULL si el &lt;code&gt;stash&lt;/code&gt; no es un alijo. Consulte &lt;code&gt;SvSTASH&lt;/code&gt; , &lt;code&gt;CvSTASH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f53c486b840e82ba9e20e14b41e3c15acfbb369c" translate="yes" xml:space="preserve">
          <source>Returns the packed &lt;code&gt;sockaddr&lt;/code&gt; address of the other end of the socket connection. It calls &lt;code&gt;getpeername&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df6a8c8fbc70891bb4ba8a59a169bc5a6ae61ed" translate="yes" xml:space="preserve">
          <source>Returns the packed &lt;code&gt;sockaddr&lt;/code&gt; address of this end of the connection. It's the same as &lt;code&gt;getsockname(2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fff387ed8c8cc9f10b8ce139430dc3f6589c9c" translate="yes" xml:space="preserve">
          <source>Returns the packed sockaddr address of the other end of the SOCKET connection.</source>
          <target state="translated">Devuelve la dirección de sockaddr empaquetada del otro extremo de la conexión SOCKET.</target>
        </trans-unit>
        <trans-unit id="89b4231ee691a1a4005bb409d80fced81b7744e2" translate="yes" xml:space="preserve">
          <source>Returns the packed sockaddr address of this end of the SOCKET connection, in case you don't know the address because you have several different IPs that the connection might have come in on.</source>
          <target state="translated">Devuelve la dirección sockaddr empaquetada de este extremo de la conexión SOCKET,en caso de que no conozcas la dirección porque tienes varias IPs diferentes en las que la conexión podría haber entrado.</target>
        </trans-unit>
        <trans-unit id="c0667351ad0e63a57bb566abac7473bf0fcb555e" translate="yes" xml:space="preserve">
          <source>Returns the pad name as a mortal SV.</source>
          <target state="translated">Devuelve el nombre del pad como un SV mortal.</target>
        </trans-unit>
        <trans-unit id="30f16ac7990a07e134fd7ccd455f37484319b0c2" translate="yes" xml:space="preserve">
          <source>Returns the parent &lt;code&gt;Test::Builder&lt;/code&gt; instance, if any. Only used with child builders for nested TAP.</source>
          <target state="translated">Devuelve la instancia principal de &lt;code&gt;Test::Builder&lt;/code&gt; , si la hubiera. Solo se usa con constructores secundarios para TAP anidado.</target>
        </trans-unit>
        <trans-unit id="818ef82d882a61a50cd69e49286003d20c9b0802" translate="yes" xml:space="preserve">
          <source>Returns the parent OP of &lt;code&gt;o&lt;/code&gt;, if it has a parent. Returns &lt;code&gt;NULL&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e471fd4c24036dd84d6c7f3be3ccbce8312808" translate="yes" xml:space="preserve">
          <source>Returns the parent OP of o, if it has a parent. Returns NULL otherwise. This function is only available on perls built with &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; .</source>
          <target state="translated">Devuelve el OP padre de o, si tiene un padre. Devuelve NULL de lo contrario. Esta funci&amp;oacute;n solo est&amp;aacute; disponible en perls compiladas con &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b72ed6ea351fa7a3d9c61ea32093d26bc16168a" translate="yes" xml:space="preserve">
          <source>Returns the path name to the file on the server which contains the specified message.</source>
          <target state="translated">Devuelve el nombre de la ruta de acceso al archivo del servidor que contiene el mensaje especificado.</target>
        </trans-unit>
        <trans-unit id="7d0b8fd86f3e9a8881b3cff51fb48a696cf204d3" translate="yes" xml:space="preserve">
          <source>Returns the path to a module given the module or package name. A list of directories can be passed in as an optional parameter, otherwise @INC is searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec3c6352306cfa9beb43e8c29b31607e59b37c0" translate="yes" xml:space="preserve">
          <source>Returns the pathanme to the fifo at the peer end</source>
          <target state="translated">Devuelve el pathanme a la fifo en el extremo del par</target>
        </trans-unit>
        <trans-unit id="4a63db9f3e3139732db96feb937992356457415d" translate="yes" xml:space="preserve">
          <source>Returns the pathname to the fifo at the local end</source>
          <target state="translated">Devuelve el nombre a la fifo en el extremo local</target>
        </trans-unit>
        <trans-unit id="a6535e8030518a1d17c6c9df8232881c6a225cd9" translate="yes" xml:space="preserve">
          <source>Returns the paths to the root directories of all logical drives currently defined. This includes all types of drive letters, such as floppies, CD-ROMs, hard disks, and network shares. A typical return value on a poorly equipped computer would be &lt;code&gt;(&quot;A:\\&quot;,&quot;C:\\&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6322fba9b0bced2797934424013559a7d3c83a1e" translate="yes" xml:space="preserve">
          <source>Returns the position of the first occurence of the byte &lt;code&gt;c&lt;/code&gt; in the literal string &lt;code&gt;&quot;list&quot;&lt;/code&gt;, or NULL if &lt;code&gt;c&lt;/code&gt; doesn't appear in &lt;code&gt;&quot;list&quot;&lt;/code&gt;. All bytes are treated as unsigned char. Thus this macro can be used to determine if &lt;code&gt;c&lt;/code&gt; is in a set of particular characters. Unlike &lt;a href=&quot;http://man.he.net/man3/strchr&quot;&gt;strchr(3)&lt;/a&gt;, it works even if &lt;code&gt;c&lt;/code&gt; is &lt;code&gt;NUL&lt;/code&gt; (and the set doesn't include &lt;code&gt;NUL&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8304c2725119f232b821921ec287a53510a44d3" translate="yes" xml:space="preserve">
          <source>Returns the process id of the last process that performed an operation on the semaphore &lt;code&gt;SEM&lt;/code&gt; .</source>
          <target state="translated">Devuelve el ID de proceso del &amp;uacute;ltimo proceso que realiz&amp;oacute; una operaci&amp;oacute;n en el sem&amp;aacute;foro &lt;code&gt;SEM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d77fce132f5165c1ea86331e990b64a6e7666d96" translate="yes" xml:space="preserve">
          <source>Returns the process id of the last process that performed an operation on the semaphore &lt;code&gt;SEM&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30abfb715705790f2643fb7d63590be70980c30" translate="yes" xml:space="preserve">
          <source>Returns the process id of the parent process.</source>
          <target state="translated">Devuelve la identificación del proceso de los padres.</target>
        </trans-unit>
        <trans-unit id="35910985fbd72ac3da1261e44ed585a6917b73ed" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the current process. Until the process terminates, the process identifier uniquely identifies the process throughout the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24e95431b32943074e6b0e7739f39e159b654d8" translate="yes" xml:space="preserve">
          <source>Returns the process identifier. Identical to Perl's builtin variable &lt;code&gt;$$&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24PID&quot;&gt;$PID in perlvar&lt;/a&gt;.</source>
          <target state="translated">Devuelve el identificador del proceso. Id&amp;eacute;ntico a la variable incorporada &lt;code&gt;$$&lt;/code&gt; de Perl , vea &lt;a href=&quot;perlvar#%24PID&quot;&gt;$ PID en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4629afe54dab1f8290fa3dcd09f56ad9b96c16f" translate="yes" xml:space="preserve">
          <source>Returns the process identifier. Identical to Perl's builtin variable &lt;code&gt;$$&lt;/code&gt;, see &lt;a href=&quot;perlvar#%24PID&quot;&gt;&quot;$PID&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47973897fb6d304d1949955fdcd9f889945c508" translate="yes" xml:space="preserve">
          <source>Returns the processor type: 386, 486 or 586 for x86 processors, 8664 for the x64 processor and 2200 for the Itanium. Since it returns the native processor type it will return a 64-bit processor type even when called from a 32-bit Perl running on 64-bit Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775fecc09cc1becf057ebf941542ce38caf1b66f" translate="yes" xml:space="preserve">
          <source>Returns the prototype of a function as a string (or &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if the function has no prototype). FUNCTION is a reference to, or the name of, the function whose prototype you want to retrieve. If FUNCTION is omitted, &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b236461eeaca748a2b3ad95de81116a2fe96d741" translate="yes" xml:space="preserve">
          <source>Returns the prototype of a function as a string (or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the function has no prototype). FUNCTION is a reference to, or the name of, the function whose prototype you want to retrieve. If FUNCTION is omitted, $_ is used.</source>
          <target state="translated">Devuelve el prototipo de una funci&amp;oacute;n como una cadena (o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si la funci&amp;oacute;n no tiene prototipo). FUNCTION es una referencia o el nombre de la funci&amp;oacute;n cuyo prototipo desea recuperar. Si se omite FUNCTION, se usa $ _.</target>
        </trans-unit>
        <trans-unit id="eb14b93e077b170f79f45700e7bb8c3b8c795487" translate="yes" xml:space="preserve">
          <source>Returns the prototype of a function as a string (or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the function has no prototype). FUNCTION is a reference to, or the name of, the function whose prototype you want to retrieve. If FUNCTION is omitted, $_ is used.</source>
          <target state="translated">Devuelve el prototipo de una funci&amp;oacute;n como una cadena (o &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si la funci&amp;oacute;n no tiene prototipo). FUNCTION es una referencia o el nombre de la funci&amp;oacute;n cuyo prototipo desea recuperar. Si se omite FUNCTION, se usa $ _.</target>
        </trans-unit>
        <trans-unit id="77973b8a8cc870ce7fb49885fbe45c72d83472c8" translate="yes" xml:space="preserve">
          <source>Returns the prototype of the given &lt;code&gt;$code&lt;/code&gt; reference, if it has one, as a string. This is the same as the &lt;code&gt;CORE::prototype&lt;/code&gt; operator; it is included here simply for symmetry and completeness with the other functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4602770cf57c81f36923a8dae095a6ad56dcdfaf" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's IV slot, without checks or conversions. Only use when you are sure &lt;code&gt;SvIOK&lt;/code&gt; is true. See also &lt;code&gt;&lt;a href=&quot;#SvIV&quot;&gt;&quot;SvIV&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a434e75a0357a748778c7ebac461e4592d53da12" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's IV slot, without checks or conversions. Only use when you are sure SvIOK is true. See also &lt;code&gt;SvIV()&lt;/code&gt; .</source>
          <target state="translated">Devuelve el valor bruto en la ranura IV del SV, sin cheques ni conversiones. &amp;Uacute;selo solo cuando est&amp;eacute; seguro de que SvIOK es verdadero. Consulte tambi&amp;eacute;n &lt;code&gt;SvIV()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcc37d1f00af266762487dcf762ac9e0336a550e" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's NV slot, without checks or conversions. Only use when you are sure &lt;code&gt;SvNOK&lt;/code&gt; is true. See also &lt;code&gt;&lt;a href=&quot;#SvNV&quot;&gt;&quot;SvNV&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4e9edd1be6b65ecaf809ad87d2118fc29fbe3c" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's NV slot, without checks or conversions. Only use when you are sure SvNOK is true. See also &lt;code&gt;SvNV()&lt;/code&gt; .</source>
          <target state="translated">Devuelve el valor bruto en la ranura NV del SV, sin cheques ni conversiones. &amp;Uacute;selo solo cuando est&amp;eacute; seguro de que SvNOK es verdadero. Consulte tambi&amp;eacute;n &lt;code&gt;SvNV()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e9b0c914f79295682b1d59908ec05f693cb6e70" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's UV slot, without checks or conversions. Only use when you are sure &lt;code&gt;SvIOK&lt;/code&gt; is true. See also &lt;code&gt;&lt;a href=&quot;#SvUV&quot;&gt;&quot;SvUV&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dd8ebb6b0d5ad2aae103bba8da84b75a8ffa52" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's UV slot, without checks or conversions. Only use when you are sure SvIOK is true. See also &lt;code&gt;SvUV()&lt;/code&gt; .</source>
          <target state="translated">Devuelve el valor bruto en la ranura UV del SV, sin verificaciones ni conversiones. &amp;Uacute;selo solo cuando est&amp;eacute; seguro de que SvIOK es verdadero. Consulte tambi&amp;eacute;n &lt;code&gt;SvUV()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94b7d2f8ba8604b5f4a41178258115bbfa2a44d6" translate="yes" xml:space="preserve">
          <source>Returns the realclean_subdirs target. This is used by the realclean target to call realclean on any subdirectories which contain Makefiles.</source>
          <target state="translated">Devuelve el objetivo de realclean_subdirs.Esto es usado por el objetivo realclean para llamar a realclean en cualquier subdirectorio que contenga Makefiles.</target>
        </trans-unit>
        <trans-unit id="4ac58687ff93e9e124997c224255653c7d53d34d" translate="yes" xml:space="preserve">
          <source>Returns the reference address of a reference $obj. If $obj is not a reference, returns $obj.</source>
          <target state="translated">Devuelve la dirección de referencia de un objeto de referencia.Si $obj no es una referencia,devuelve $obj.</target>
        </trans-unit>
        <trans-unit id="cfdfe21321198d76b312eaf4cebc6dd9147bcc57" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the FQDN after the</source>
          <target state="translated">Devuelve el resto del FQDN después de la</target>
        </trans-unit>
        <trans-unit id="31d0dc2c160c4b14fc3010d461589d3d91985d0f" translate="yes" xml:space="preserve">
          <source>Returns the remainer after truncated division (T-division). See &lt;a href=&quot;#btdiv%28%29&quot;&gt;&quot;btdiv()&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691ad0a16b9216b6ca373d7fe2f48a065eda5988" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in microseconds, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if an error occurred.</source>
          <target state="translated">Devuelve el tiempo restante de la alarma en microsegundos, o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si ocurri&amp;oacute; un error.</target>
        </trans-unit>
        <trans-unit id="b2c7ad58ab8b3e1e4f302c418cfe5e468e78303d" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in microseconds, or &lt;code&gt;undef&lt;/code&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411816d1a113ef6da9e977f72dfb94f0b749f7ac" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in seconds, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if an error occurred.</source>
          <target state="translated">Devuelve el tiempo restante en la alarma en segundos, o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si ocurri&amp;oacute; un error.</target>
        </trans-unit>
        <trans-unit id="54f5cbac97f602237203e368c9428f82278335b1" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in seconds, or &lt;code&gt;undef&lt;/code&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eef1268befe76109a67d8095e53297c74347d75" translate="yes" xml:space="preserve">
          <source>Returns the result after decrementing OBJ by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80661285b4f82b85606b49b9790cc377ad98e8b0" translate="yes" xml:space="preserve">
          <source>Returns the result after incrementing OBJ by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac57a2b82980e5a2ac4a13e8edbe23c1b1d09078" translate="yes" xml:space="preserve">
          <source>Returns the result after shifting OBJ N digits to the left in base B. This is equivalent to multiplying by B**N, except that it might be much faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cb8a11e77ad7c75fa3969dc30a7aea6839527e" translate="yes" xml:space="preserve">
          <source>Returns the result after shifting OBJ N digits to thee right in base B. This is equivalent to performing integer division by B**N and discarding the remainder, except that it might be much faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934d3c76d9239f8ba316060557ce7e19d1235609" translate="yes" xml:space="preserve">
          <source>Returns the result of adding OBJ2 to OBJ1.</source>
          <target state="translated">Devuelve el resultado de añadir OBJ2 a OBJ1.</target>
        </trans-unit>
        <trans-unit id="0985e11191ccc8ef75f712db00960e57ec19eb9d" translate="yes" xml:space="preserve">
          <source>Returns the result of dividing OBJ1 by OBJ2 and truncating the result to an integer.</source>
          <target state="translated">Devuelve el resultado de dividir OBJ1 por OBJ2 y truncar el resultado a un entero.</target>
        </trans-unit>
        <trans-unit id="ede343da45a3982e8cca0190748b0cbeaa826658" translate="yes" xml:space="preserve">
          <source>Returns the result of multiplying OBJ2 and OBJ1.</source>
          <target state="translated">Devuelve el resultado de multiplicar OBJ2 y OBJ1.</target>
        </trans-unit>
        <trans-unit id="6fdfa3ad313771603cd096432bfa11331e25b9ea" translate="yes" xml:space="preserve">
          <source>Returns the result of subtracting OBJ2 by OBJ1. If &lt;code&gt;flag&lt;/code&gt; is false or omitted, OBJ1 might be modified. If &lt;code&gt;flag&lt;/code&gt; is true, OBJ2 might be modified.</source>
          <target state="translated">Devuelve el resultado de restar OBJ2 por OBJ1. Si el &lt;code&gt;flag&lt;/code&gt; es falso o se omite, OBJ1 podr&amp;iacute;a modificarse. Si el &lt;code&gt;flag&lt;/code&gt; es verdadero, OBJ2 podr&amp;iacute;a modificarse.</target>
        </trans-unit>
        <trans-unit id="2f75492cf713678a79f0a1d5e57aa692c5a28a64" translate="yes" xml:space="preserve">
          <source>Returns the result of the last call to the &lt;code&gt;BLOCK&lt;/code&gt; . If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. If &lt;code&gt;@list&lt;/code&gt; only contains one element then that element is returned and &lt;code&gt;BLOCK&lt;/code&gt; is not executed.</source>
          <target state="translated">Devuelve el resultado de la &amp;uacute;ltima llamada al &lt;code&gt;BLOCK&lt;/code&gt; . Si &lt;code&gt;@list&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Si &lt;code&gt;@list&lt;/code&gt; solo contiene un elemento, ese elemento se devuelve y &lt;code&gt;BLOCK&lt;/code&gt; no se ejecuta.</target>
        </trans-unit>
        <trans-unit id="a8f1e34169d62615b296e0847cb09c41202f3831" translate="yes" xml:space="preserve">
          <source>Returns the result of the last call to the &lt;code&gt;BLOCK&lt;/code&gt;. If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;undef&lt;/code&gt; is returned. If &lt;code&gt;@list&lt;/code&gt; only contains one element then that element is returned and &lt;code&gt;BLOCK&lt;/code&gt; is not executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd23a6b58f73aa5d163a67f87e6c7280edfa788a" translate="yes" xml:space="preserve">
          <source>Returns the revision number of UTS #10 this module consults, that should correspond with the DUCET incorporated.</source>
          <target state="translated">Devuelve el número de revisión de la UTS #10 que este módulo consulta,que debe corresponder con el DUCET incorporado.</target>
        </trans-unit>
        <trans-unit id="cdbb628bb09e88629a54dd3f1600b416756da742" translate="yes" xml:space="preserve">
          <source>Returns the root op (i.e. an object in the appropriate B::OP-derived class) of the main part of the Perl program.</source>
          <target state="translated">Devuelve la raíz op (es decir,un objeto en la clase apropiada B::OP-derivada)de la parte principal del programa Perl.</target>
        </trans-unit>
        <trans-unit id="daceb31fe6fe504ec1ab27ccb86dca2c396ef1fa" translate="yes" xml:space="preserve">
          <source>Returns the self object on success, undefined on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08858eb52cbd19872dd2a91cd76cd7365cadae6" translate="yes" xml:space="preserve">
          <source>Returns the shared memory identifier.</source>
          <target state="translated">Devuelve el identificador de la memoria compartida.</target>
        </trans-unit>
        <trans-unit id="e3b82bb19c310fe49809964c8064562a663d6221" translate="yes" xml:space="preserve">
          <source>Returns the sibling of &lt;code&gt;o&lt;/code&gt;, or &lt;code&gt;NULL&lt;/code&gt; if there is no sibling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9103bc997591b4f276dae9dcd284ec32253cd98d" translate="yes" xml:space="preserve">
          <source>Returns the sibling of o, or NULL if there is no sibling</source>
          <target state="translated">Devuelve el hermano de o,o NULL si no hay ningún hermano</target>
        </trans-unit>
        <trans-unit id="b300c67a26ffa581cc4197668db773b7863e7459" translate="yes" xml:space="preserve">
          <source>Returns the significand (mantissa) and exponent corresponding to engineering notation. In scalar context, only the significand is returned. For finite non-zero numbers, the significand's absolute value is greater than or equal to 1 and less than 1000, and the exponent is a multiple of 3. The output of &lt;code&gt;eparts()&lt;/code&gt; corresponds to the output from &lt;code&gt;bestr()&lt;/code&gt;. In Math::BigInt, if the significand can not be represented as an integer, upgrading is performed or NaN is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacaa816f15c1dc3251681b9038b2dcce5117fb4" translate="yes" xml:space="preserve">
          <source>Returns the significand (mantissa) and exponent corresponding to normalized notation. In scalar context, only the significand is returned. For finite non-zero numbers, the significand's absolute value is greater than or equal to 1 and less than 10. The output of &lt;code&gt;nparts()&lt;/code&gt; corresponds to the output from &lt;code&gt;bnstr()&lt;/code&gt;. In Math::BigInt, if the significand can not be represented as an integer, upgrading is performed or NaN is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9edcc12755b6d27075cd92b9748c74e1f6a4f5" translate="yes" xml:space="preserve">
          <source>Returns the significand (mantissa) and the exponent as integers. In Math::BigFloat, both are returned as Math::BigInt objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908664c88a4307e520de03b724e034bb1579993b" translate="yes" xml:space="preserve">
          <source>Returns the significand (mantissa) and the exponent as integers. In scalar context, only the significand is returned. The significand is the integer with the smallest absolute value. The output of &lt;code&gt;sparts()&lt;/code&gt; corresponds to the output from &lt;code&gt;bsstr()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02372b8e65ce97967d61061cc3de8dd182282cb" translate="yes" xml:space="preserve">
          <source>Returns the sine of EXPR (expressed in radians). If EXPR is omitted, returns sine of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba0588cfc9bf2485932a5a79df24f172279e9c6" translate="yes" xml:space="preserve">
          <source>Returns the sine of EXPR (expressed in radians). If EXPR is omitted, returns sine of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Devuelve el seno de EXPR (expresado en radianes). Si se omite EXPR, devuelve un seno de &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13b988b656f88a25d6b8534b212c52399ee80bc3" translate="yes" xml:space="preserve">
          <source>Returns the size in bytes for the given file as stored on the remote server.</source>
          <target state="translated">Devuelve el tamaño en bytes del archivo dado tal y como está almacenado en el servidor remoto.</target>
        </trans-unit>
        <trans-unit id="0fd6072d4c702765557cf9c9abbbcc1ca94b9ba5" translate="yes" xml:space="preserve">
          <source>Returns the size of a file pointed to by &lt;code&gt;$win32Handle&lt;/code&gt;, optionally storing the high order 32 bits into &lt;code&gt;$iSizeHigh&lt;/code&gt; if it is not &lt;code&gt;[]&lt;/code&gt;. If $iSizeHigh is &lt;code&gt;[]&lt;/code&gt;, a non-zero value indicates success. Otherwise, on failure the return value will be &lt;code&gt;0xffffffff&lt;/code&gt; and &lt;code&gt;fileLastError()&lt;/code&gt; will not be &lt;code&gt;NO_ERROR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e15d217df6a17c8d97da5665c9189954385074" translate="yes" xml:space="preserve">
          <source>Returns the size of the string buffer in the SV, not including any part attributable to &lt;code&gt;SvOOK&lt;/code&gt; . See &lt;code&gt;SvCUR&lt;/code&gt; .</source>
          <target state="translated">Devuelve el tama&amp;ntilde;o del b&amp;uacute;fer de cadena en el SV, sin incluir ninguna parte atribuible a &lt;code&gt;SvOOK&lt;/code&gt; . Ver &lt;code&gt;SvCUR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="994ac80be84b1c88cf5f4c9799c9fa49923c3728" translate="yes" xml:space="preserve">
          <source>Returns the size of the string buffer in the SV, not including any part attributable to &lt;code&gt;SvOOK&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#SvCUR&quot;&gt;&quot;SvCUR&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deff1a1ce13a811d24a68718da12a4011d78ad85" translate="yes" xml:space="preserve">
          <source>Returns the smallest part of the FQDN which can be used to identify the host.</source>
          <target state="translated">Devuelve la parte más pequeña del FQDN que puede ser usada para identificar al huésped.</target>
        </trans-unit>
        <trans-unit id="6aace9ff52696965a2aca85b48192ec03e77b04e" translate="yes" xml:space="preserve">
          <source>Returns the square root of OBJ, truncated to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ea7d106b3348445ad7c6d489849aceafa81ac3" translate="yes" xml:space="preserve">
          <source>Returns the stack size for a particular thread. A return value of zero indicates the system default stack size was used for the thread.</source>
          <target state="translated">Devuelve el tamaño de la pila de un hilo en particular.Un valor de retorno de cero indica el tamaño de pila por defecto del sistema que se utilizó para el hilo.</target>
        </trans-unit>
        <trans-unit id="6376883dea84f50be2bb934689fe6bef04f6d0f7" translate="yes" xml:space="preserve">
          <source>Returns the starting op of the main part of the Perl program.</source>
          <target state="translated">Devuelve el inicio de la parte principal del programa Perl.</target>
        </trans-unit>
        <trans-unit id="d3065df28d2b23358010686a7550749e685f79ba" translate="yes" xml:space="preserve">
          <source>Returns the stash of the CV. A stash is the symbol table hash, containing the package-scoped variables in the package where the subroutine was defined. For more information, see &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">Devuelve el alijo del CV. Un alijo es el hash de la tabla de s&amp;iacute;mbolos, que contiene las variables de &amp;aacute;mbito de paquete en el paquete donde se defini&amp;oacute; la subrutina. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1f0bb6740de7587d6844e1f412c95f92f304e1d" translate="yes" xml:space="preserve">
          <source>Returns the stash of the SV.</source>
          <target state="translated">Devuelve el alijo del SV.</target>
        </trans-unit>
        <trans-unit id="704232bcdbc3c70aca2219ce3e4fbb819e866978" translate="yes" xml:space="preserve">
          <source>Returns the string &lt;code&gt; at %s line %d&lt;/code&gt;, where &lt;code&gt;%s&lt;/code&gt; is replaced with the filename, and &lt;code&gt;%d&lt;/code&gt; is replaced with the line number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f966e8a880ea7511ad99a930a5bdfda30c867abe" translate="yes" xml:space="preserve">
          <source>Returns the stringified form of the values in the list, subject to the configuration options below. The values will be named &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">Devuelve la forma en cadena de los valores de la lista, sujeto a las opciones de configuraci&amp;oacute;n siguientes. Los valores se &lt;code&gt;$VAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd93cdf43d7b00945abd54f2f9268dfbe9432751" translate="yes" xml:space="preserve">
          <source>Returns the stringified form of the values stored in the object (preserving the order in which they were supplied to &lt;code&gt;new&lt;/code&gt; ), subject to the configuration options below. In a list context, it returns a list of strings corresponding to the supplied values.</source>
          <target state="translated">Devuelve la forma en cadena de los valores almacenados en el objeto (conservando el orden en el que se proporcionaron a &lt;code&gt;new&lt;/code&gt; ), sujeto a las opciones de configuraci&amp;oacute;n siguientes. En un contexto de lista, devuelve una lista de cadenas correspondientes a los valores proporcionados.</target>
        </trans-unit>
        <trans-unit id="180b68b00fc74fb9c7b36fad250ac0115e04628c" translate="yes" xml:space="preserve">
          <source>Returns the stringified form of the values stored in the object (preserving the order in which they were supplied to &lt;code&gt;new&lt;/code&gt;), subject to the configuration options below. In a list context, it returns a list of strings corresponding to the supplied values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c89825d0d3455a8fcbcae4b7096ecbad05dc53" translate="yes" xml:space="preserve">
          <source>Returns the sum of the base 10 digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebec182c33fde665bf986502917cab4add7ec8a" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Benchmark times as a Benchmark object suitable for passing to timestr().</source>
          <target state="translated">Devuelve la suma de dos tiempos de referencia como un objeto de referencia adecuado para pasar a timestr().</target>
        </trans-unit>
        <trans-unit id="f6822f634825c2fc618e64dda74ca77d744f1c2a" translate="yes" xml:space="preserve">
          <source>Returns the system identifier for the semaphore set.</source>
          <target state="translated">Devuelve el identificador del sistema para el conjunto de semáforos.</target>
        </trans-unit>
        <trans-unit id="cb6c1ef855e52f1907c90fb23a471aeeec576f7e" translate="yes" xml:space="preserve">
          <source>Returns the system message queue identifier.</source>
          <target state="translated">Devuelve el identificador de la cola de mensajes del sistema.</target>
        </trans-unit>
        <trans-unit id="00b03ab234d7468f6beb3d969a96580e7b637c7a" translate="yes" xml:space="preserve">
          <source>Returns the test plan, if found.</source>
          <target state="translated">Devuelve el plan de pruebas,si se encuentra.</target>
        </trans-unit>
        <trans-unit id="0abaf4d3a631432f2373c928cd0eeac33b04645f" translate="yes" xml:space="preserve">
          <source>Returns the tests for a given generation. This is a hashref or a hash, depending on context called. The keys to the hash are the individual test names and the value is a hashref with various interesting values. Each k/v pair might resemble something like this:</source>
          <target state="translated">Devuelve las pruebas para una generación determinada.Esto es un hashref o un hash,dependiendo del contexto llamado.Las claves del hash son los nombres de las pruebas individuales y el valor es un hashref con varios valores interesantes.Cada par k/v podría parecerse a algo como esto:</target>
        </trans-unit>
        <trans-unit id="61f0847ebbe47972cdc75098fb13436b1a0a7f69" translate="yes" xml:space="preserve">
          <source>Returns the text message returned from the last command. In a scalar context it returns a single string, in a list context it will return each line as a separate element. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;&quot;PSEUDO RESPONSES&quot;&lt;/a&gt; below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fd0e735c5571e3935fb38043c3d22c834fcdc7" translate="yes" xml:space="preserve">
          <source>Returns the text message returned from the last command. In a scalar context it returns a single string, in a list context it will return each line as a separate element. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&lt;/a&gt; below.)</source>
          <target state="translated">Devuelve el mensaje de texto devuelto por el &amp;uacute;ltimo comando. En un contexto escalar, devuelve una sola cadena, en un contexto de lista, devolver&amp;aacute; cada l&amp;iacute;nea como un elemento separado. (Ver &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;RESPUESTAS DE PSEUDO a&lt;/a&gt; continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="0081bef38bb527bcce7cba7bad4cfc2f230f8cb4" translate="yes" xml:space="preserve">
          <source>Returns the thread identifier of the calling thread. Until the thread terminates, the thread identifier uniquely identifies the thread throughout the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c44afcdd39adc1d907085b68dc1328eb7cd3007" translate="yes" xml:space="preserve">
          <source>Returns the thread object to allow for method chaining:</source>
          <target state="translated">Devuelve el objeto de hilo para permitir el encadenamiento de métodos:</target>
        </trans-unit>
        <trans-unit id="f0c5bdaab3901a070c8ff8976040622396c4fc54" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes compressed bytes input to inflate.</source>
          <target state="translated">Devuelve el número total de bytes comprimidos de entrada para inflar.</target>
        </trans-unit>
        <trans-unit id="c4608b14c708e673ffb160c24fbb6c9c9cca1c3c" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes uncompressed bytes input to deflate.</source>
          <target state="translated">Devuelve el número total de bytes de entrada de bytes no comprimidos para desinflarse.</target>
        </trans-unit>
        <trans-unit id="06d2f89d66b6e7fed6561b11134472534b1ff3d6" translate="yes" xml:space="preserve">
          <source>Returns the total number of compressed bytes output from deflate.</source>
          <target state="translated">Devuelve el número total de bytes comprimidos de salida del desinflado.</target>
        </trans-unit>
        <trans-unit id="e092ecc1045e3db259589051f70b5ddb29616d9c" translate="yes" xml:space="preserve">
          <source>Returns the total number of items in the tied array associated with object</source>
          <target state="translated">Devuelve el número total de artículos en la matriz atada asociada con el objeto</target>
        </trans-unit>
        <trans-unit id="427a725c8edd92830c88e3b37e3c91c03dd17d77" translate="yes" xml:space="preserve">
          <source>Returns the total number of tests run.</source>
          <target state="translated">Devuelve el número total de pruebas realizadas.</target>
        </trans-unit>
        <trans-unit id="1981b6345507b455c470b49283a6ecbb90fc90fa" translate="yes" xml:space="preserve">
          <source>Returns the total number of uncompressed bytes output from inflate.</source>
          <target state="translated">Devuelve el número total de bytes no comprimidos que salen del inflado.</target>
        </trans-unit>
        <trans-unit id="687348c0e8cae8a71cef6f88ad8bd16bc6b19bdf" translate="yes" xml:space="preserve">
          <source>Returns the trimmed name which was generated from &lt;code&gt;$name&lt;/code&gt; by a previous call to addsym(), or &lt;code&gt;undef&lt;/code&gt; if &lt;code&gt;$name&lt;/code&gt; is not a member of this set of symbols. This method must be called via an existing object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689f1582b0eb5b567883c72791b662055f790c66" translate="yes" xml:space="preserve">
          <source>Returns the type of result, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; .</source>
          <target state="translated">Devuelve el tipo de resultado, como &lt;code&gt;comment&lt;/code&gt; o &lt;code&gt;test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11a7a9c993935ef5e8f5c5a282348ec41355d91f" translate="yes" xml:space="preserve">
          <source>Returns the type of result, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0c5a0d8a50d2af0a7b4e3f09d981bfca34a344" translate="yes" xml:space="preserve">
          <source>Returns the type of the SV. See &lt;code&gt;&lt;a href=&quot;#svtype&quot;&gt;&quot;svtype&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6996ea16c99b1393d93a1d7ce3eb9ad6f40d481b" translate="yes" xml:space="preserve">
          <source>Returns the type of the SV. See &lt;code&gt;svtype&lt;/code&gt; .</source>
          <target state="translated">Devuelve el tipo de SV. Ver &lt;code&gt;svtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="715c5bce89d3f7cdc947e756f837c60db557decd" translate="yes" xml:space="preserve">
          <source>Returns the type of the link; one of: &lt;code&gt;&quot;url&quot;&lt;/code&gt; for things like &lt;code&gt;http://www.foo&lt;/code&gt;, &lt;code&gt;&quot;man&quot;&lt;/code&gt; for man pages, or &lt;code&gt;&quot;pod&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6b42c4d1a9ea14e0eb7b552f7e0166fc5e5a67" translate="yes" xml:space="preserve">
          <source>Returns the uncompressed file offset.</source>
          <target state="translated">Devuelve el desplazamiento del archivo sin comprimir.</target>
        </trans-unit>
        <trans-unit id="e09ce086f2c768a62d3b57de3257993e8dd3af9a" translate="yes" xml:space="preserve">
          <source>Returns the undefined value if the array is empty, although this may also happen at other times. If ARRAY is omitted, pops the &lt;a href=&quot;perlvar#%40ARGV&quot;&gt;&lt;code&gt;@ARGV&lt;/code&gt;&lt;/a&gt; array in the main program, but the &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt; array in subroutines, just like &lt;a href=&quot;#shift-ARRAY&quot;&gt;&lt;code&gt;shift&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b13dba661fcc526017b777ec9f0f6a6fc961688" translate="yes" xml:space="preserve">
          <source>Returns the undefined value if the array is empty, although this may also happen at other times. If ARRAY is omitted, pops the &lt;code&gt;@ARGV&lt;/code&gt; array in the main program, but the &lt;code&gt;@_&lt;/code&gt; array in subroutines, just like &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Devuelve el valor indefinido si la matriz est&amp;aacute; vac&amp;iacute;a, aunque esto tambi&amp;eacute;n puede suceder en otros momentos. Si se omite ARRAY, aparece el arreglo &lt;code&gt;@ARGV&lt;/code&gt; en el programa principal, pero el arreglo &lt;code&gt;@_&lt;/code&gt; en las subrutinas, al igual que &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6ccc500f6a9b6dee674b7e4875674f5071805d9" translate="yes" xml:space="preserve">
          <source>Returns the undefined value if the array is empty, although this may also happen at other times. If ARRAY is omitted, pops the &lt;code&gt;@ARGV&lt;/code&gt; array in the main program, but the &lt;code&gt;@_&lt;/code&gt; array in subroutines, just like &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Devuelve el valor indefinido si la matriz est&amp;aacute; vac&amp;iacute;a, aunque esto tambi&amp;eacute;n puede suceder en otros momentos. Si se omite ARRAY, aparece el arreglo &lt;code&gt;@ARGV&lt;/code&gt; en el programa principal, pero el arreglo &lt;code&gt;@_&lt;/code&gt; en las subrutinas, al igual que &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3d0f43cfce15598765e845778013a5554d7f7ba" translate="yes" xml:space="preserve">
          <source>Returns the user's identifier. Identical to Perl's builtin &lt;code&gt;$&amp;lt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24UID&quot;&gt;&quot;$UID&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fdde83d2b8ad29f3a1a2c3bd2bc04ec145f517" translate="yes" xml:space="preserve">
          <source>Returns the user's identifier. Identical to Perl's builtin &lt;code&gt;$&amp;lt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24UID&quot;&gt;$UID in perlvar&lt;/a&gt;.</source>
          <target state="translated">Devuelve el identificador del usuario. Id&amp;eacute;ntico a la variable &lt;code&gt;$&amp;lt;&lt;/code&gt; incorporada de Perl , vea &lt;a href=&quot;perlvar#%24UID&quot;&gt;$ UID en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85efab0e57c4279f7b5baf43ffb326faed2626c3" translate="yes" xml:space="preserve">
          <source>Returns the user's real group identifier. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24GID&quot;&gt;$GID in perlvar&lt;/a&gt;.</source>
          <target state="translated">Devuelve el identificador de grupo real del usuario. Similar a la variable incorporada de Perl &lt;code&gt;$)&lt;/code&gt; , vea &lt;a href=&quot;perlvar#%24GID&quot;&gt;$ GID en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b11e0c190eb19edd4a3260db95abeb8020a0a1a3" translate="yes" xml:space="preserve">
          <source>Returns the user's real group identifier. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt;, see &lt;a href=&quot;perlvar#%24GID&quot;&gt;&quot;$GID&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e812815a1e2024070e5e86f1962e4e372093107" translate="yes" xml:space="preserve">
          <source>Returns the value from the current position of the hash iterator. See &lt;code&gt;&lt;a href=&quot;#hv_iterkey&quot;&gt;&quot;hv_iterkey&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1e01fc4f899b71104441ca6cde6b2bc0d8e11e" translate="yes" xml:space="preserve">
          <source>Returns the value from the current position of the hash iterator. See &lt;code&gt;hv_iterkey&lt;/code&gt; .</source>
          <target state="translated">Devuelve el valor de la posici&amp;oacute;n actual del iterador hash. Ver &lt;code&gt;hv_iterkey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52fd08e361909d4be5dbfd42ddda55c8051f004d" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;code&gt;$num&lt;/code&gt; taken to the power &lt;code&gt;$exp&lt;/code&gt; in the modulus &lt;code&gt;$mod&lt;/code&gt; using binary exponentiation. &lt;code&gt;bmodpow&lt;/code&gt; is far superior to writing</source>
          <target state="translated">Devuelve el valor de &lt;code&gt;$num&lt;/code&gt; llevado a la potencia &lt;code&gt;$exp&lt;/code&gt; en el m&amp;oacute;dulo &lt;code&gt;$mod&lt;/code&gt; usando exponenciaci&amp;oacute;n binaria. &lt;code&gt;bmodpow&lt;/code&gt; es muy superior a la escritura</target>
        </trans-unit>
        <trans-unit id="3b09599e7e883f641c6cc99b4d5d6382e5376f16" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with all the ASCII non-&quot;word&quot; characters backslashed. (That is, all ASCII characters not matching &lt;code&gt;/[A-Za-z_0-9]/&lt;/code&gt; will be preceded by a backslash in the returned string, regardless of any locale settings.) This is the internal function implementing the &lt;code&gt;\Q&lt;/code&gt; escape in double-quoted strings. (See below for the behavior on non-ASCII code points.)</source>
          <target state="translated">Devuelve el valor de EXPR con todos los caracteres ASCII que no son &quot;palabra&quot; con barra invertida. (Es decir, todos los caracteres ASCII que no coincidan con &lt;code&gt;/[A-Za-z_0-9]/&lt;/code&gt; estar&amp;aacute;n precedidos por una barra invertida en la cadena devuelta, independientemente de la configuraci&amp;oacute;n regional). Esta es la funci&amp;oacute;n interna que implementa el escape &lt;code&gt;\Q&lt;/code&gt; en doble -cadenas entre comillas. (Consulte a continuaci&amp;oacute;n el comportamiento en puntos de c&amp;oacute;digo no ASCII).</target>
        </trans-unit>
        <trans-unit id="2d400c54fe42741adfb28f14ca6863c2eec3b9ba" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with the first character in uppercase (titlecase in Unicode). This is the internal function implementing the &lt;code&gt;\u&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">Devuelve el valor de EXPR con el primer car&amp;aacute;cter en may&amp;uacute;sculas (t&amp;iacute;tulo en Unicode). Esta es la funci&amp;oacute;n interna que implementa el escape &lt;code&gt;\u&lt;/code&gt; en cadenas entre comillas dobles.</target>
        </trans-unit>
        <trans-unit id="95ceac0c306dd626f5ab7cda760028cad6d8817d" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with the first character lowercased. This is the internal function implementing the &lt;code&gt;\l&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">Devuelve el valor de EXPR con el primer car&amp;aacute;cter en min&amp;uacute;sculas. Esta es la funci&amp;oacute;n interna que implementa el escape &lt;code&gt;\l&lt;/code&gt; en cadenas entre comillas dobles.</target>
        </trans-unit>
        <trans-unit id="80d806fc05d99f3ddf19bdf38625c225ea436a77" translate="yes" xml:space="preserve">
          <source>Returns the value of a symbolic link, if symbolic links are implemented. If not, raises an exception. If there is a system error, returns the undefined value and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno). If EXPR is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c53e13d60d27926fdd5b2424eee55ad7bc1748d" translate="yes" xml:space="preserve">
          <source>Returns the value of a symbolic link, if symbolic links are implemented. If not, raises an exception. If there is a system error, returns the undefined value and sets &lt;code&gt;$!&lt;/code&gt; (errno). If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Devuelve el valor de un enlace simb&amp;oacute;lico, si se implementan enlaces simb&amp;oacute;licos. Si no es as&amp;iacute;, genera una excepci&amp;oacute;n. Si hay un error del sistema, devuelve el valor indefinido y establece &lt;code&gt;$!&lt;/code&gt; (errno). Si se omite EXPR, usa &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2375760a832779382294e9fa907c5d3e3ad7f675" translate="yes" xml:space="preserve">
          <source>Returns the value of an ASCII-range hex digit and advances the string pointer. Behaviour is only well defined when isXDIGIT(*str) is true.</source>
          <target state="translated">Devuelve el valor de un dígito hexadecimal de rango ASCII y avanza el puntero de la cadena.El comportamiento sólo está bien definido cuando isXDIGIT(*str)es verdadero.</target>
        </trans-unit>
        <trans-unit id="c7b80e8466f98eb2c40b79beaca15b258d25281c" translate="yes" xml:space="preserve">
          <source>Returns the value of errno.</source>
          <target state="translated">Devuelve el valor de errno.</target>
        </trans-unit>
        <trans-unit id="9adec3509ce8f9ad18ba22035f03aad2a0b1e785" translate="yes" xml:space="preserve">
          <source>Returns the value of the IV,</source>
          <target state="translated">Devuelve el valor de la intravenosa,</target>
        </trans-unit>
        <trans-unit id="a67d21554f8528cd56f302014c728725b03d27a7" translate="yes" xml:space="preserve">
          <source>Returns the value of the object's reference count.</source>
          <target state="translated">Devuelve el valor de la cuenta de referencia del objeto.</target>
        </trans-unit>
        <trans-unit id="6d5892b050c68187c107cb04b63f683fd62d7dbd" translate="yes" xml:space="preserve">
          <source>Returns the value of the object's reference count. Exposed to perl code via Internals::SvREFCNT().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed600390a736f758647014b404d8da9e8f3672f0" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified environment variable. The same information is available through the &lt;code&gt;%ENV&lt;/code&gt; array.</source>
          <target state="translated">Devuelve el valor de la variable de entorno especificada. La misma informaci&amp;oacute;n est&amp;aacute; disponible a trav&amp;eacute;s de la matriz &lt;code&gt;%ENV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2b158779c21c22f9687811637ee298f2a0a92bb" translate="yes" xml:space="preserve">
          <source>Returns the value slot (type &lt;code&gt;SV*&lt;/code&gt; ) stored in the hash entry. Can be assigned to.</source>
          <target state="translated">Devuelve la ranura de valor (tipo &lt;code&gt;SV*&lt;/code&gt; ) almacenada en la entrada hash. Puede asignarse a.</target>
        </trans-unit>
        <trans-unit id="a7f85dd8571b1cb267439ca86d721acdbd733e58" translate="yes" xml:space="preserve">
          <source>Returns the value slot (type &lt;code&gt;SV*&lt;/code&gt;) stored in the hash entry. Can be assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f304fc671c17ec909353d9d852ad6f9b8756324c" translate="yes" xml:space="preserve">
          <source>Returns the value used by the constructor, and passed to IO::Socket::INET, to connect to the host.</source>
          <target state="translated">Devuelve el valor usado por el constructor,y pasado a IO::Socket::INET,para conectar con el anfitrión.</target>
        </trans-unit>
        <trans-unit id="a85ff1e53b5e1a669f0e70a135361c1a2fe021b2" translate="yes" xml:space="preserve">
          <source>Returns the value used by the constructor, and passed to the IO::Socket super class to connect to the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ebf4dd62b1de35d6b110fc2c3bf137a56f04b5" translate="yes" xml:space="preserve">
          <source>Returns the values of the input in a random order</source>
          <target state="translated">Devuelve los valores de la entrada en un orden aleatorio</target>
        </trans-unit>
        <trans-unit id="aae391a8019cffd16e88e8c77d6ee4981b00cb05" translate="yes" xml:space="preserve">
          <source>Returns the values of the semaphore set as an array.</source>
          <target state="translated">Devuelve los valores del conjunto de semáforos como una matriz.</target>
        </trans-unit>
        <trans-unit id="1fb2d6d7143a44bab6b7ad4c661432960ba1accb" translate="yes" xml:space="preserve">
          <source>Returns the version as defined by the $VERSION variable for the package as returned by the &lt;code&gt;name&lt;/code&gt; method if no arguments are given. If given the name of a package it will attempt to return the version of that package if it is specified in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa727c04d26ffd29634f2a1d3e06d3d49642e86" translate="yes" xml:space="preserve">
          <source>Returns the version number (a string) of the Unicode Standard which the &lt;code&gt;table&lt;/code&gt; file used by the collator object is based on. If the table does not include a version line (starting with &lt;code&gt;@version&lt;/code&gt; ), returns &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; .</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de versi&amp;oacute;n (una cadena) del est&amp;aacute;ndar Unicode en el que se basa el archivo de &lt;code&gt;table&lt;/code&gt; utilizado por el objeto clasificador . Si la tabla no incluye una l&amp;iacute;nea de versi&amp;oacute;n (comenzando con &lt;code&gt;@version&lt;/code&gt; ), devuelve &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee65cc99d3df9b93656e4d4dd9fd22ca76492725" translate="yes" xml:space="preserve">
          <source>Returns the version number (a string) of the Unicode Standard which the &lt;code&gt;table&lt;/code&gt; file used by the collator object is based on. If the table does not include a version line (starting with &lt;code&gt;@version&lt;/code&gt;), returns &lt;code&gt;&quot;unknown&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43991c04c0c1372a551cb8ce01e6a866bc87957" translate="yes" xml:space="preserve">
          <source>Returns the version number of UTS #10 this module consults, that should correspond with the DUCET incorporated.</source>
          <target state="translated">Devuelve el número de versión de la UTS #10 que consulta este módulo,que debe corresponder con el DUCET incorporado.</target>
        </trans-unit>
        <trans-unit id="df2014ff2454fb3c77163e1b8bb40e5c6fa511b5" translate="yes" xml:space="preserve">
          <source>Returns the version number of the available module in readable format.</source>
          <target state="translated">Devuelve el número de versión del módulo disponible en formato legible.</target>
        </trans-unit>
        <trans-unit id="37862cfa298d82ed45105eae51b8f01143f37444" translate="yes" xml:space="preserve">
          <source>Returns the version number of the installed module in readable format.</source>
          <target state="translated">Devuelve el número de versión del módulo instalado en formato legible.</target>
        </trans-unit>
        <trans-unit id="6984540058ab0766dafaf794c5a7db314a164bd0" translate="yes" xml:space="preserve">
          <source>Returns the version of the underlying bzip2 library.</source>
          <target state="translated">Devuelve la versión de la biblioteca bzip2 subyacente.</target>
        </trans-unit>
        <trans-unit id="1d2fb973769b42e32f64b5b9e7e5484fe7f157f7" translate="yes" xml:space="preserve">
          <source>Returns the version of the zlib library.</source>
          <target state="translated">Devuelve la versión de la biblioteca zlib.</target>
        </trans-unit>
        <trans-unit id="7d63e1e041bf6c2b63dc17e62e16171c075c7660" translate="yes" xml:space="preserve">
          <source>Returns the wall-clock time when the Parser was created.</source>
          <target state="translated">Devuelve la hora del reloj de pared cuando se creó el Parser.</target>
        </trans-unit>
        <trans-unit id="6a5155335fff92a3cb435faf1ea8f2b5273df9bb" translate="yes" xml:space="preserve">
          <source>Returns the wall-clock time when the end of TAP input was seen.</source>
          <target state="translated">Devuelve la hora del reloj de pared cuando se vio el final de la entrada del TAP.</target>
        </trans-unit>
        <trans-unit id="ed2e4f04106b910dc53430cf4bfefc37bd047fe7" translate="yes" xml:space="preserve">
          <source>Returns true if</source>
          <target state="translated">Vuelve a ser cierto si</target>
        </trans-unit>
        <trans-unit id="4da324a95fbc80c5b9fe720971dc0126ec92b091" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;$ref&lt;/code&gt; is a weak reference.</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;$ref&lt;/code&gt; es una referencia d&amp;eacute;bil.</target>
        </trans-unit>
        <trans-unit id="1155c9e68db39511f0de8326e8d18486b945ad9a" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;$self-&amp;gt;make&lt;/code&gt; is the given type; possibilities are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47aeb6d44fb13be59145db7788f8704196e2d02b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;$var&lt;/code&gt; is readonly.</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;$var&lt;/code&gt; es de solo lectura.</target>
        </trans-unit>
        <trans-unit id="f95d2b325ed0e71c04b8d53f29a9fcbf4645953b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;&amp;lt;$self-&lt;/code&gt; make&amp;gt;&amp;gt; is the given type; possibilities are:</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;&amp;lt;$self-&lt;/code&gt; make &amp;gt;&amp;gt; es el tipo dado; las posibilidades son:</target>
        </trans-unit>
        <trans-unit id="6640c925e7db6ea286cf7fbbe8c1821aa2b2b7ed" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Archive::Tar&lt;/code&gt; can extract &lt;code&gt;bzip2&lt;/code&gt; compressed archives</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;Archive::Tar&lt;/code&gt; puede extraer archivos comprimidos &lt;code&gt;bzip2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b91a1bf7f6b585e29a11652bd861ba2dc7f67773" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Archive::Tar&lt;/code&gt; can extract &lt;code&gt;xz&lt;/code&gt; compressed archives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097a09a0980755f5b5aaee6c4ea94d3ded8c2f1c" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Archive::Tar&lt;/code&gt; can extract &lt;code&gt;zlib&lt;/code&gt; compressed archives</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;Archive::Tar&lt;/code&gt; puede extraer archivos comprimidos &lt;code&gt;zlib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59bc9c2639d834534f1b566fe4403442250c1dc3" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Compress::Zlib&lt;/code&gt; is available. Note that this does not mean that &lt;code&gt;Compress::Zlib&lt;/code&gt; is being used: see &lt;a href=&quot;#gzip_external&quot;&gt;&quot;gzip_external&quot;&lt;/a&gt; and &lt;a href=&quot;gzip_used&quot;&gt;gzip_used&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f4c5181323486757b7012ccc41933f9e15252b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Compress::Zlib&lt;/code&gt; is available. Note that this does not mean that &lt;code&gt;Compress::Zlib&lt;/code&gt; is being used: see &lt;a href=&quot;#gzip_external&quot;&gt;gzip_external&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/gzip_used&quot;&gt;gzip_used&lt;/a&gt;.</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;Compress::Zlib&lt;/code&gt; est&amp;aacute; disponible. Tenga en cuenta que esto no significa que se est&amp;eacute; utilizando &lt;code&gt;Compress::Zlib&lt;/code&gt; : consulte &lt;a href=&quot;#gzip_external&quot;&gt;gzip_external&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/gzip_used&quot;&gt;gzip_used&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20bf1d834149c96f974797ae3b16c138792ec181" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;arg&lt;/code&gt; is subject to overloading of some operations.</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;arg&lt;/code&gt; est&amp;aacute; sujeto a la sobrecarga de algunas operaciones.</target>
        </trans-unit>
        <trans-unit id="e2615132d98702c39aee2818f6b4d6e992a35f89" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;make&lt;/code&gt; can handle (probably by quoting) dependencies that contain a space. Currently known true for GNU make, false for BSD pmake derivative.</source>
          <target state="translated">Devuelve verdadero si &lt;code&gt;make&lt;/code&gt; puede manejar (probablemente citando) dependencias que contienen un espacio. Actualmente conocido como verdadero para GNU make, falso para BSD pmake derivative.</target>
        </trans-unit>
        <trans-unit id="54cd219f1b8f354df7498a317923841afc88ab3b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;o&lt;/code&gt; has a sibling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64ae7a302c259faf3a91bf8054b43f98292b3d6" translate="yes" xml:space="preserve">
          <source>Returns true if C, XS, MYEXTLIB or similar objects exist within this object that need a compiler. Does not descend into subdirectories as needs_linking() does.</source>
          <target state="translated">Devuelve verdadero si C,XS,MYEXTLIB u objetos similares existen dentro de este objeto que necesitan un compilador.No desciende a subdirectorios como lo hace needs_linking().</target>
        </trans-unit>
        <trans-unit id="e2a943d4344737fedde0486fc361844b04fbfab3" translate="yes" xml:space="preserve">
          <source>Returns true if MODULE is marked as deprecated in PERL_VERSION. If PERL_VERSION is omitted, it defaults to the current version of Perl.</source>
          <target state="translated">Vuelve a ser cierto si MÓDULO está marcado como desaprobado en PERL_VERSION.Si se omite PERL_VERSION,se vuelve por defecto a la versión actual de Perl.</target>
        </trans-unit>
        <trans-unit id="9ddf8ac076f87248553a1744aa4c9f8d19563b6f" translate="yes" xml:space="preserve">
          <source>Returns true if MODULE was bundled with the specified version of Perl. You can optionally specify a minimum version of the module, and can also specify a version of Perl. If a version of Perl isn't specified, &lt;code&gt;is_core()&lt;/code&gt; will use the numeric version of Perl that is running (ie &lt;code&gt;$]&lt;/code&gt; ).</source>
          <target state="translated">Devuelve verdadero si MODULE se incluy&amp;oacute; con la versi&amp;oacute;n especificada de Perl. Opcionalmente, puede especificar una versi&amp;oacute;n m&amp;iacute;nima del m&amp;oacute;dulo y tambi&amp;eacute;n puede especificar una versi&amp;oacute;n de Perl. Si no se especifica una versi&amp;oacute;n de Perl, &lt;code&gt;is_core()&lt;/code&gt; utilizar&amp;aacute; la versi&amp;oacute;n num&amp;eacute;rica de Perl que se est&amp;aacute; ejecutando (es decir, &lt;code&gt;$]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2f84c33683e690decd21f85ec88daa5065b4d119" translate="yes" xml:space="preserve">
          <source>Returns true if MODULE was bundled with the specified version of Perl. You can optionally specify a minimum version of the module, and can also specify a version of Perl. If a version of Perl isn't specified, &lt;code&gt;is_core()&lt;/code&gt; will use the numeric version of Perl that is running (ie &lt;code&gt;$]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50f3867b6c57790c9d0ffb22d4f984c8e12beaf" translate="yes" xml:space="preserve">
          <source>Returns true if a backtrace could be retrieved, false if not.</source>
          <target state="translated">Devuelve verdadero si se puede recuperar un rastro,falso si no.</target>
        </trans-unit>
        <trans-unit id="1b44016bfcbe04b6586f1a44576dbe6c5dd811ca" translate="yes" xml:space="preserve">
          <source>Returns true if a thread is still running (i.e., if its entry point function has not yet finished or exited).</source>
          <target state="translated">Devuelve verdadero si un hilo sigue funcionando (es decir,si su función de punto de entrada aún no ha terminado o salido).</target>
        </trans-unit>
        <trans-unit id="dcd6286ed136ef27ce6f021e3f240e0d956cc9d3" translate="yes" xml:space="preserve">
          <source>Returns true if all copies succeeded, false otherwise.</source>
          <target state="translated">Devuelve verdadero si todas las copias tuvieron éxito,falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="c484acc777160fa213787bde200b697b5e359b72" translate="yes" xml:space="preserve">
          <source>Returns true if all moves succeeded, false otherwise.</source>
          <target state="translated">Devuelve verdadero si todos los movimientos tuvieron éxito,falso si no.</target>
        </trans-unit>
        <trans-unit id="4cd52e44aee1c2b93a268d7810d65d84bab492cb" translate="yes" xml:space="preserve">
          <source>Returns true if and only if $x is equal to $y, and false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa5fb3de84fcea76398233f763d4c515904d227" translate="yes" xml:space="preserve">
          <source>Returns true if and only if $x is greater than $y, and false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a31eb12d2b4d0e932b8f9e2591307ff6cf07663" translate="yes" xml:space="preserve">
          <source>Returns true if and only if $x is greater than or equal to $y, and false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8084c34601360a87ea17f61061a220e2246eb416" translate="yes" xml:space="preserve">
          <source>Returns true if and only if $x is less than or equal to $y, and false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eabb62a27ddb22185cc60bd0072d9d099e1628" translate="yes" xml:space="preserve">
          <source>Returns true if and only if $x is not equal to $y, and false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de48b342093ad5d26eae4ecf7389dda0a98fe8a" translate="yes" xml:space="preserve">
          <source>Returns true if implementation has a buffer, and can return pointer to whole buffer and its size. Used by perl for &lt;b&gt;-T&lt;/b&gt; / &lt;b&gt;-B&lt;/b&gt; tests. Other uses would be very obscure...</source>
          <target state="translated">Devuelve verdadero si la implementaci&amp;oacute;n tiene un b&amp;uacute;fer y puede devolver el puntero a todo el b&amp;uacute;fer y su tama&amp;ntilde;o. Utilizado por perl para pruebas &lt;b&gt;-T&lt;/b&gt; / &lt;b&gt;-B&lt;/b&gt; . Otros usos ser&amp;iacute;an muy oscuros ...</target>
        </trans-unit>
        <trans-unit id="10a3a96d5fac5f6ce937d9b2bf9324cc77950396" translate="yes" xml:space="preserve">
          <source>Returns true if implementation has all the interfaces required to allow perl's &lt;code&gt;sv_gets&lt;/code&gt; to &quot;bypass&quot; normal IO mechanism. This can vary from handle to handle.</source>
          <target state="translated">Devuelve verdadero si la implementaci&amp;oacute;n tiene todas las interfaces necesarias para permitir que &lt;code&gt;sv_gets&lt;/code&gt; de perl &quot; omita &quot; el mecanismo de E / S normal. Esto puede variar de un mango a otro.</target>
        </trans-unit>
        <trans-unit id="7c4d79c3bcbcf8b9b73ef2220614c471f056802d" translate="yes" xml:space="preserve">
          <source>Returns true if it is valid, false if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a0c9d61807bdca034a1ddbe7a877069a3e72f0" translate="yes" xml:space="preserve">
          <source>Returns true if o has a sibling</source>
          <target state="translated">Se devuelve verdadero si tiene un hermano.</target>
        </trans-unit>
        <trans-unit id="da60c4762a50d2388782db8a105b48bd656d3e40" translate="yes" xml:space="preserve">
          <source>Returns true if perl thinks &lt;code&gt;$var&lt;/code&gt; is a number. See &lt;a href=&quot;../perlapi#looks_like_number&quot;&gt;looks_like_number in perlapi&lt;/a&gt;.</source>
          <target state="translated">Devuelve verdadero si perl piensa que &lt;code&gt;$var&lt;/code&gt; es un n&amp;uacute;mero. Ver &lt;a href=&quot;../perlapi#looks_like_number&quot;&gt;looks_like_number en perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e9583feec69091c04c2d1da509e7a1f5603a7cb" translate="yes" xml:space="preserve">
          <source>Returns true if perl thinks &lt;code&gt;$var&lt;/code&gt; is a number. See &lt;a href=&quot;perlapi#looks_like_number&quot;&gt;&quot;looks_like_number&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd5069f1020afc9a12639bf7ffb4954393da1cb" translate="yes" xml:space="preserve">
          <source>Returns true if some new text was added to the buffer, or false if the buffer has reached the end of the input text.</source>
          <target state="translated">Devuelve verdadero si se ha añadido algún texto nuevo al búfer,o falso si el búfer ha llegado al final del texto de entrada.</target>
        </trans-unit>
        <trans-unit id="5bf6c266e6971bff3c0632523caf0469c2fae0a5" translate="yes" xml:space="preserve">
          <source>Returns true if successful.</source>
          <target state="translated">Vuelve a la realidad si tiene éxito.</target>
        </trans-unit>
        <trans-unit id="61d51461172eed59e4390319f9a62c6f1c196914" translate="yes" xml:space="preserve">
          <source>Returns true if the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method has been called.</source>
          <target state="translated">Devuelve verdadero si se ha llamado al m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="232bf3b06c2fd6a22982a7b652ca12e58b31fa7c" translate="yes" xml:space="preserve">
          <source>Returns true if the &lt;code&gt;close&lt;/code&gt; method has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efca7dadde7431809e7bd764986970c8e6ed89a" translate="yes" xml:space="preserve">
          <source>Returns true if the SV has a true value by Perl's rules. Use the &lt;code&gt;SvTRUE&lt;/code&gt; macro instead, which may call &lt;code&gt;sv_true()&lt;/code&gt; or may instead use an in-line version.</source>
          <target state="translated">Devuelve verdadero si el SV tiene un valor verdadero seg&amp;uacute;n las reglas de Perl. &lt;code&gt;SvTRUE&lt;/code&gt; lugar, utilice la macro SvTRUE , que puede llamar a &lt;code&gt;sv_true()&lt;/code&gt; o puede utilizar una versi&amp;oacute;n en l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="c788f1858dc6c04f02a0039b15605291ddd9b724" translate="yes" xml:space="preserve">
          <source>Returns true if the SV has get magic or overloading. If either is true then the scalar is active data, and has the potential to return a new value every time it is accessed. Hence you must be careful to only read it once per user logical operation and work with that returned value. If neither is true then the scalar's value cannot change unless written to.</source>
          <target state="translated">Vuelve a la realidad si el SV se ha vuelto mágico o se ha sobrecargado.Si cualquiera de los dos es cierto,entonces el escalar es un dato activo,y tiene el potencial de devolver un nuevo valor cada vez que se accede a él.Por lo tanto,hay que tener cuidado de leerlo sólo una vez por operación lógica de usuario y trabajar con ese valor devuelto.Si ninguno de los dos es verdadero entonces el valor del escalar no puede cambiar a menos que se escriba en él.</target>
        </trans-unit>
        <trans-unit id="f516034ddab4dc82ec24aa62a130edf02e5ef266" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is &lt;code&gt;NaN&lt;/code&gt; (not-a-number) [C99].</source>
          <target state="translated">Devuelve verdadero si el argumento es &lt;code&gt;NaN&lt;/code&gt; (no un n&amp;uacute;mero) [C99].</target>
        </trans-unit>
        <trans-unit id="b203b18b3c4abc08a3fe30ef9a1a52388c595620" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is a compiled regular expression as returned by &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, false if it is not.</source>
          <target state="translated">Devuelve verdadero si el argumento es una expresi&amp;oacute;n regular compilada como lo devuelve &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; , falso si no lo es.</target>
        </trans-unit>
        <trans-unit id="1d5fbb4d9cd385e4d11e33a14ed00b0bbbb7893c" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is a compiled regular expression as returned by &lt;code&gt;qr//&lt;/code&gt;, false if it is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a935c230a2ab8bc372e69c5ed9a2f7ffc933c1a8" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is a finite number (that is, not an infinity, or the not-a-number) [C99].</source>
          <target state="translated">Devuelve verdadero si el argumento es un número finito (es decir,no un infinito,o el no-un-número)[C99].</target>
        </trans-unit>
        <trans-unit id="1f10c37fb922fab58eefa878c1a15696e8ebfad8" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is an infinity (positive or negative) [C99].</source>
          <target state="translated">Devuelve verdadero si el argumento es un infinito (positivo o negativo)[C99].</target>
        </trans-unit>
        <trans-unit id="92ae4d0a491f5c0e34207aef83ac4ea519198664" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is normal (that is, not a subnormal/denormal, and not an infinity, or a not-a-number) [C99].</source>
          <target state="translated">Devuelve verdadero si el argumento es normal (es decir,no un subnormal/denormal,y no un infinito,o un no-número)[C99].</target>
        </trans-unit>
        <trans-unit id="44b26f3c539db2d944b5552b0f604174d5edba2a" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is readonly, otherwise returns false. Exposed to perl code via Internals::SvREADONLY().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1844058c6994d709c3ba6ac15baaa2f4d7c2f8" translate="yes" xml:space="preserve">
          <source>Returns true if the context of the currently executing subroutine or &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; is looking for a list value. Returns false if the context is looking for a scalar. Returns the undefined value if the context is looking for no value (void context).</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
