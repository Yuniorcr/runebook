<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="e8f4fc6abff769c701a3cd104bd7d5e13a65f76f" translate="yes" xml:space="preserve">
          <source>The configure phase occurs before any dynamic configuration has been attempted. Libraries required by the configure phase &lt;b&gt;must&lt;/b&gt; be available for use before the distribution building tool has been executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb35472fba52fde6c0d287b9880009008ce62bd4" translate="yes" xml:space="preserve">
          <source>The conformance test for the UCA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e8c71c043d1ee5895cf5c5a239168a7f0a8975" translate="yes" xml:space="preserve">
          <source>The confusion arises because people incorrectly assume that the sigil denotes the variable type.</source>
          <target state="translated">La confusión surge porque la gente asume incorrectamente que el sigilo denota el tipo variable.</target>
        </trans-unit>
        <trans-unit id="72def2ab61e0c7e7dccd965b3f9393136d20aa03" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;pi&lt;/code&gt; and some handy multiples of it (pi2, pi4, and pip2 (pi/2) and pip4 (pi/4)) are also available if separately exported:</source>
          <target state="translated">La constante &lt;code&gt;pi&lt;/code&gt; y algunos pr&amp;aacute;cticos m&amp;uacute;ltiplos de ella (pi2, pi4 y pip2 (pi / 2) y pip4 (pi / 4)) tambi&amp;eacute;n est&amp;aacute;n disponibles si se exportan por separado:</target>
        </trans-unit>
        <trans-unit id="c81821f9e03375c52f91dde5667119328458dcfd" translate="yes" xml:space="preserve">
          <source>The constant function &lt;code&gt;Storable::BIN_VERSION_NV&lt;/code&gt; returns a comparable number that represents the highest file version number that this version of Storable fully supports (but see discussion of &lt;code&gt;$Storable::accept_future_minor&lt;/code&gt; above). The constant &lt;code&gt;Storable::BIN_WRITE_VERSION_NV&lt;/code&gt; function returns what file version is written and might be less than &lt;code&gt;Storable::BIN_VERSION_NV&lt;/code&gt; in some configurations.</source>
          <target state="translated">La funci&amp;oacute;n constante &lt;code&gt;Storable::BIN_VERSION_NV&lt;/code&gt; devuelve un n&amp;uacute;mero comparable que representa el n&amp;uacute;mero de versi&amp;oacute;n de archivo m&amp;aacute;s alto que esta versi&amp;oacute;n de Storable es totalmente compatible (pero consulte la discusi&amp;oacute;n de &lt;code&gt;$Storable::accept_future_minor&lt;/code&gt; arriba). La funci&amp;oacute;n &lt;code&gt;Storable::BIN_WRITE_VERSION_NV&lt;/code&gt; constante devuelve qu&amp;eacute; versi&amp;oacute;n de archivo est&amp;aacute; escrita y puede ser menor que &lt;code&gt;Storable::BIN_VERSION_NV&lt;/code&gt; en algunas configuraciones.</target>
        </trans-unit>
        <trans-unit id="1404d0959d5fe2f0dd1fe9c942e64fc147050eb7" translate="yes" xml:space="preserve">
          <source>The constants for specific &lt;code&gt;code&lt;/code&gt; values can be imported individually or using the &lt;code&gt;:signal_h_si_code&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9018d00ba0cf85500f9049cabc293077c6a815d2" translate="yes" xml:space="preserve">
          <source>The construct</source>
          <target state="translated">La construcción</target>
        </trans-unit>
        <trans-unit id="8226460345430ec3df47c2bd35c2d238766995a6" translate="yes" xml:space="preserve">
          <source>The construct &lt;code&gt;\$v{timep}=@{[$v{timep}=$arg]}&lt;/code&gt; used in the above example has a two-fold purpose: first, when this line is processed by &lt;b&gt;xsubpp&lt;/b&gt;, the Perl snippet &lt;code&gt;$v{timep}=$arg&lt;/code&gt; is evaluated. Second, the text of the evaluated snippet is output into the generated C file (inside a C comment)! During the processing of &lt;code&gt;char *host&lt;/code&gt; line, &lt;code&gt;$arg&lt;/code&gt; will evaluate to &lt;code&gt;ST(0)&lt;/code&gt; , and &lt;code&gt;$v{timep}&lt;/code&gt; will evaluate to &lt;code&gt;ST(1)&lt;/code&gt; .</source>
          <target state="translated">La construcci&amp;oacute;n &lt;code&gt;\$v{timep}=@{[$v{timep}=$arg]}&lt;/code&gt; usada en el ejemplo anterior tiene un prop&amp;oacute;sito doble: primero, cuando esta l&amp;iacute;nea es procesada por &lt;b&gt;xsubpp&lt;/b&gt; , el fragmento de Perl &lt;code&gt;$v{timep}=$arg&lt;/code&gt; se eval&amp;uacute;a $ arg . En segundo lugar, &amp;iexcl;el texto del fragmento evaluado se env&amp;iacute;a al archivo C generado (dentro de un comentario C)! Durante el procesamiento de la l&amp;iacute;nea de &lt;code&gt;char *host&lt;/code&gt; , &lt;code&gt;$arg&lt;/code&gt; se evaluar&amp;aacute; como &lt;code&gt;ST(0)&lt;/code&gt; y &lt;code&gt;$v{timep}&lt;/code&gt; como &lt;code&gt;ST(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f2f29b3b2c632054cc482de2585e44d1631920b" translate="yes" xml:space="preserve">
          <source>The construct &lt;code&gt;\$v{timep}=@{[$v{timep}=$arg]}&lt;/code&gt; used in the above example has a two-fold purpose: first, when this line is processed by &lt;b&gt;xsubpp&lt;/b&gt;, the Perl snippet &lt;code&gt;$v{timep}=$arg&lt;/code&gt; is evaluated. Second, the text of the evaluated snippet is output into the generated C file (inside a C comment)! During the processing of &lt;code&gt;char *host&lt;/code&gt; line, &lt;code&gt;$arg&lt;/code&gt; will evaluate to &lt;code&gt;ST(0)&lt;/code&gt;, and &lt;code&gt;$v{timep}&lt;/code&gt; will evaluate to &lt;code&gt;ST(1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59007854896f819ee065a798da86e7867bce96e" translate="yes" xml:space="preserve">
          <source>The constructor &lt;code&gt;new&lt;/code&gt; creates and returns an empty &lt;code&gt;TAP::Parser::YAMLish::Reader&lt;/code&gt; object.</source>
          <target state="translated">El constructor &lt;code&gt;new&lt;/code&gt; crea y devuelve un objeto &lt;code&gt;TAP::Parser::YAMLish::Reader&lt;/code&gt; vac&amp;iacute;o .</target>
        </trans-unit>
        <trans-unit id="1bad8668cdf1d431ad701326f6748ece18b79658" translate="yes" xml:space="preserve">
          <source>The constructor &lt;code&gt;new&lt;/code&gt; creates and returns an empty &lt;code&gt;TAP::Parser::YAMLish::Writer&lt;/code&gt; object.</source>
          <target state="translated">El constructor &lt;code&gt;new&lt;/code&gt; crea y devuelve un objeto &lt;code&gt;TAP::Parser::YAMLish::Writer&lt;/code&gt; vac&amp;iacute;o .</target>
        </trans-unit>
        <trans-unit id="4c2fcf35a44aabf097cd59f3a3854953c70e5fcd" translate="yes" xml:space="preserve">
          <source>The constructor can also accept additional parameters that define the object. Let's write a real constructor for the &lt;code&gt;File&lt;/code&gt; class we used earlier:</source>
          <target state="translated">El constructor tambi&amp;eacute;n puede aceptar par&amp;aacute;metros adicionales que definen el objeto. Escribamos un constructor real para la clase &lt;code&gt;File&lt;/code&gt; que usamos anteriormente:</target>
        </trans-unit>
        <trans-unit id="3a88176407788666ff0021721dd4e56b3400cf3f" translate="yes" xml:space="preserve">
          <source>The constructor creates a new object and optionally initialises it with a set of handles.</source>
          <target state="translated">El constructor crea un nuevo objeto y opcionalmente lo inicializa con un juego de manijas.</target>
        </trans-unit>
        <trans-unit id="26002f2b8ad63b7adc28307355437aa48afa5d7b" translate="yes" xml:space="preserve">
          <source>The constructor for a &lt;code&gt;Net::Netrc&lt;/code&gt; object is not called new as it does not really create a new object. But instead is called &lt;code&gt;lookup&lt;/code&gt; as this is essentially what it does.</source>
          <target state="translated">El constructor de un objeto &lt;code&gt;Net::Netrc&lt;/code&gt; no se llama nuevo ya que en realidad no crea un objeto nuevo. Pero en cambio se llama &lt;code&gt;lookup&lt;/code&gt; ya que esto es esencialmente lo que hace.</target>
        </trans-unit>
        <trans-unit id="5e4047980f5ac3eb3127d3d68b5f254e9299a0fd" translate="yes" xml:space="preserve">
          <source>The constructor for all the singletons used to represent modules, distributions, authors, and bundles. If the object already exists, this method returns the object; otherwise, it calls the constructor.</source>
          <target state="translated">El constructor de todos los singletons utilizados para representar módulos,distribuciones,autores y paquetes.Si el objeto ya existe,este método devuelve el objeto;en caso contrario,llama al constructor.</target>
        </trans-unit>
        <trans-unit id="392e17e9526fa6867e8438f1a219ca39e5568acc" translate="yes" xml:space="preserve">
          <source>The constructor must be passed a metadata structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54cf785d15de998f3ac18ade864f218319b1ee1" translate="yes" xml:space="preserve">
          <source>The constructor of a generated class can be passed a list of</source>
          <target state="translated">Al constructor de una clase generada se le puede pasar una lista de</target>
        </trans-unit>
        <trans-unit id="bb7df7aab984a9c0e691c8f805de279350cf56e0" translate="yes" xml:space="preserve">
          <source>The constructor returns a new &lt;code&gt;Digest::MD5&lt;/code&gt; object which encapsulate the state of the MD5 message-digest algorithm.</source>
          <target state="translated">El constructor devuelve un nuevo objeto &lt;code&gt;Digest::MD5&lt;/code&gt; que encapsula el estado del algoritmo de resumen de mensajes MD5.</target>
        </trans-unit>
        <trans-unit id="2e6b2441df01bfc969fd7dfde15484f966dcaf52" translate="yes" xml:space="preserve">
          <source>The constructor returns a new &lt;code&gt;TAP::Formatter::Color&lt;/code&gt; object. If &lt;a href=&quot;../../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; is not installed, returns undef.</source>
          <target state="translated">El constructor devuelve un nuevo objeto &lt;code&gt;TAP::Formatter::Color&lt;/code&gt; . Si &lt;a href=&quot;../../term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; no est&amp;aacute; instalado, devuelve undef.</target>
        </trans-unit>
        <trans-unit id="4747d0a8e21ed88de854df16a2a22a83e805b50c" translate="yes" xml:space="preserve">
          <source>The constructor returns a new &lt;code&gt;TAP::Formatter::Color&lt;/code&gt; object. If &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; is not installed, returns undef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972195b07373ba2fa384173c37fb399dc7626fb1" translate="yes" xml:space="preserve">
          <source>The constructor returns a new &lt;code&gt;TAP::Formatter::Console::Session&lt;/code&gt; object.</source>
          <target state="translated">El constructor devuelve un nuevo objeto &lt;code&gt;TAP::Formatter::Console::Session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64d08d3b354e3667ab5da2f82eaec44dd6d25ea5" translate="yes" xml:space="preserve">
          <source>The constructor returns a new &lt;code&gt;TAP::Formatter::Console&lt;/code&gt; object. If a &lt;a href=&quot;../harness&quot;&gt;TAP::Harness&lt;/a&gt; is created with no &lt;code&gt;formatter&lt;/code&gt; a &lt;code&gt;TAP::Formatter::Console&lt;/code&gt; is automatically created. If any of the following options were given to TAP::Harness-&amp;gt;new they well be passed to this constructor which accepts an optional hashref whose allowed keys are:</source>
          <target state="translated">El constructor devuelve un nuevo objeto &lt;code&gt;TAP::Formatter::Console&lt;/code&gt; . Si se crea un &lt;a href=&quot;../harness&quot;&gt;TAP :: Harness&lt;/a&gt; sin &lt;code&gt;formatter&lt;/code&gt; se crea autom&amp;aacute;ticamente un &lt;code&gt;TAP::Formatter::Console&lt;/code&gt; . Si se le dio alguna de las siguientes opciones a TAP :: Harness-&amp;gt; new, se pasar&amp;aacute;n a este constructor que acepta un hashref opcional cuyas claves permitidas son:</target>
        </trans-unit>
        <trans-unit id="8909e70f1c9cdb1bc8623d8b0a2d889cffc98a88" translate="yes" xml:space="preserve">
          <source>The constructor returns a new &lt;code&gt;TAP::Formatter::Console&lt;/code&gt; object. If a &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; is created with no &lt;code&gt;formatter&lt;/code&gt; a &lt;code&gt;TAP::Formatter::Console&lt;/code&gt; is automatically created. If any of the following options were given to TAP::Harness-&amp;gt;new they well be passed to this constructor which accepts an optional hashref whose allowed keys are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf8ec5d8f9e8688b8b1e013d18928a0b5fdbbeb" translate="yes" xml:space="preserve">
          <source>The constructor returns a new &lt;code&gt;TAP::Harness&lt;/code&gt; object. It accepts an optional hashref whose allowed keys are:</source>
          <target state="translated">El constructor devuelve un nuevo objeto &lt;code&gt;TAP::Harness&lt;/code&gt; . Acepta un hashref opcional cuyas claves permitidas son:</target>
        </trans-unit>
        <trans-unit id="093c7ac00d4bfb4c1a8deee532d1b8ad2334e8c0" translate="yes" xml:space="preserve">
          <source>The constructor returns some object that encapsulate the state of the message-digest algorithm. You can add data to the object and finally ask for the digest. The &quot;XXX&quot; should of course be replaced by the proper name of the digest algorithm you want to use.</source>
          <target state="translated">El constructor devuelve algún objeto que encapsula el estado del algoritmo de digestión de mensajes.Puede añadir datos al objeto y finalmente pedir el resumen.El &quot;XXX&quot; debe ser reemplazado por el nombre propio del algoritmo de digestión que quieres usar.</target>
        </trans-unit>
        <trans-unit id="b8c0174cc6aa4e80ad4122d0657361b0e191a979" translate="yes" xml:space="preserve">
          <source>The constructor should be passed a valid metadata structure but invalid structures are accepted. If no meta-spec version is provided, version 1.0 will be assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4929a7c6855e45789fbb16fa26a8399b54ccaf" translate="yes" xml:space="preserve">
          <source>The content from the __DATA__ block is not filtered. This is a serious limitation, e.g. for the &lt;a href=&quot;switch&quot;&gt;Switch&lt;/a&gt; module. See &lt;a href=&quot;http://search.cpan.org/perldoc?Switch#LIMITATIONS&quot;&gt;http://search.cpan.org/perldoc?Switch#LIMITATIONS&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ebdab724a22632fec3a1d054882b1bc817c7d6" translate="yes" xml:space="preserve">
          <source>The content of the here doc is treated just as it would be if the string were embedded in backticks. Thus the content is interpolated as though it were double quoted and then executed via the shell, with the results of the execution returned.</source>
          <target state="translated">El contenido de este documento se trata como si la cuerda estuviera incrustada en un palo.Así,el contenido es interpolado como si fuera doblemente citado y luego ejecutado a través de la concha,con los resultados de la ejecución devueltos.</target>
        </trans-unit>
        <trans-unit id="2c33213d12b4d00abe49d77a5bff9aee654312d3" translate="yes" xml:space="preserve">
          <source>The content of the text chunk in the buffer is commonly exactly one complete line of input, up to and including a newline terminator, but there are situations where it is otherwise. The octets of the buffer may be intended to be interpreted as either UTF-8 or Latin-1. The function &lt;a href=&quot;#lex_bufutf8&quot;&gt;&quot;lex_bufutf8&quot;&lt;/a&gt; tells you which. Do not use the &lt;code&gt;SvUTF8&lt;/code&gt; flag on this scalar, which may disagree with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af50a9986dd8fc345d5bd2a482a8608eafdf212" translate="yes" xml:space="preserve">
          <source>The content of the text chunk in the buffer is commonly exactly one complete line of input, up to and including a newline terminator, but there are situations where it is otherwise. The octets of the buffer may be intended to be interpreted as either UTF-8 or Latin-1. The function &lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt; tells you which. Do not use the &lt;code&gt;SvUTF8&lt;/code&gt; flag on this scalar, which may disagree with it.</source>
          <target state="translated">El contenido del fragmento de texto en el b&amp;uacute;fer suele ser exactamente una l&amp;iacute;nea completa de entrada, hasta e incluyendo un terminador de nueva l&amp;iacute;nea, pero hay situaciones en las que es diferente. Los octetos de la memoria intermedia se pueden interpretar como UTF-8 o Latin-1. La funci&amp;oacute;n &lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt; te dice cu&amp;aacute;l. No use el indicador &lt;code&gt;SvUTF8&lt;/code&gt; en este escalar, que puede no estar de acuerdo con &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="3c50b9c6cd39ffa60fa752e0357613216ec7e1d3" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;$/&lt;/code&gt; are used to determine what constitutes a line terminator.</source>
          <target state="translated">El contenido de &lt;code&gt;$/&lt;/code&gt; se utiliza para determinar qu&amp;eacute; constituye un terminador de l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="09777bcf55808641ba4d5a5b61fa0d9ce1740b32" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;$@&lt;/code&gt; immediately after autodie triggered an exception. This may be useful when dealing with modules such as &lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt; that set (but do not throw) &lt;code&gt;$@&lt;/code&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ca5978cb2d9772e7d9f41db4210fa03ba32d12" translate="yes" xml:space="preserve">
          <source>The contents of SVs may be printed using the &lt;code&gt;SVf&lt;/code&gt; format, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d18ed7c7a8db27a58a80fd58640cc3bbfe1bce" translate="yes" xml:space="preserve">
          <source>The contents of the Comment header field, if present. If no comment is present, the value will be undef. Note this is different from a zero length comment, which will return an empty string.</source>
          <target state="translated">El contenido del campo del encabezado del comentario,si está presente.Si no hay ningún comentario,el valor será indef.Tenga en cuenta que esto es diferente de un comentario de longitud cero,que devolverá una cadena vacía.</target>
        </trans-unit>
        <trans-unit id="f67589a8aeaaf0494de7c02234d42e486e771e87" translate="yes" xml:space="preserve">
          <source>The contents of the Name header field, if present. If no name is present, the value will be undef. Note this is different from a zero length name, which will return an empty string.</source>
          <target state="translated">El contenido del campo de cabecera del nombre,si está presente.Si no hay ningún nombre presente,el valor será indef.Tenga en cuenta que esto es diferente de un nombre de longitud cero,que devolverá una cadena vacía.</target>
        </trans-unit>
        <trans-unit id="9456b1413183ce2a7cacbf69ac958ec33df9e078" translate="yes" xml:space="preserve">
          <source>The contents of the above &quot;=begin :yetanotherformat&quot; ... &quot;=end :yetanotherformat&quot; region</source>
          <target state="translated">El contenido de lo anterior &quot;=comienzo :otro formato&quot; ...&quot;=fin :otroformato&quot;.</target>
        </trans-unit>
        <trans-unit id="7bdc8b3d3c8ea3698e851bea6c870ef22be74842" translate="yes" xml:space="preserve">
          <source>The contents of the string are split into arguments using a call to &lt;code&gt;Text::ParseWords::shellwords&lt;/code&gt; . As with &lt;code&gt;GetOptionsFromArray&lt;/code&gt; , the global &lt;code&gt;@ARGV&lt;/code&gt; is not touched.</source>
          <target state="translated">El contenido de la cadena se divide en argumentos mediante una llamada a &lt;code&gt;Text::ParseWords::shellwords&lt;/code&gt; . Al igual que con &lt;code&gt;GetOptionsFromArray&lt;/code&gt; , el &lt;code&gt;@ARGV&lt;/code&gt; global no se modifica .</target>
        </trans-unit>
        <trans-unit id="07cf397badd80566fee8d86ba0e84ac06f7a748f" translate="yes" xml:space="preserve">
          <source>The contents of the string are split into arguments using a call to &lt;code&gt;Text::ParseWords::shellwords&lt;/code&gt;. As with &lt;code&gt;GetOptionsFromArray&lt;/code&gt;, the global &lt;code&gt;@ARGV&lt;/code&gt; is not touched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0a191734836657a10b5b7b1f37002c95e61a13" translate="yes" xml:space="preserve">
          <source>The contents of the string changes, but not the nature of the string. Perl doesn't know any more after the call than before that the contents of the string indicates the affirmative.</source>
          <target state="translated">El contenido de la cuerda cambia,pero no la naturaleza de la misma.Perl no sabe más después de la llamada que antes que el contenido de la cadena indica la afirmación.</target>
        </trans-unit>
        <trans-unit id="fa23695f3fe9b71ce5ed23d56ccd05be2c1e1b36" translate="yes" xml:space="preserve">
          <source>The contents should be an integer; different bits of it are used for different pragmatic flags. Here's an example:</source>
          <target state="translated">El contenido debe ser un número entero;se utilizan diferentes partes del mismo para diferentes banderas pragmáticas.Aquí hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="29b067c45824f7dfd004988f65509a605101a269" translate="yes" xml:space="preserve">
          <source>The context (void, scalar or list) for the return value(s) for &lt;code&gt;-&amp;gt;join()&lt;/code&gt; is determined at the time of thread creation.</source>
          <target state="translated">El contexto (vac&amp;iacute;o, escalar o lista) para los valores devueltos para &lt;code&gt;-&amp;gt;join()&lt;/code&gt; se determina en el momento de la creaci&amp;oacute;n del hilo.</target>
        </trans-unit>
        <trans-unit id="2981bb07b7171fe17187abbda366aca2482181b3" translate="yes" xml:space="preserve">
          <source>The context in which the subroutine was called by autodie; usually the same as the context in which you called the autodying subroutine. This can be 'list', 'scalar', or undefined (unknown). It will never be 'void', as &lt;code&gt;autodie&lt;/code&gt; always captures the return value in one way or another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdacee8e16379859c5cc73f585093cfac3b0ac5" translate="yes" xml:space="preserve">
          <source>The context object has API compatible implementations of the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d48ce1ec215b9e3fdc0488fca135ada53527334" translate="yes" xml:space="preserve">
          <source>The context object is the primary interface for authors of testing tools written with &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. The context object represents the context in which a test takes place (File and Line Number), and provides a quick way to generate events from that context. The context object also takes care of sending events to the correct &lt;a href=&quot;Test2::Hub&quot;&gt;Test2::Hub&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafef0e58c037c46bb556fc0f1a1471183c9edb3" translate="yes" xml:space="preserve">
          <source>The context type may also be used as the</source>
          <target state="translated">El tipo de contexto también puede utilizarse como</target>
        </trans-unit>
        <trans-unit id="67c74c2a8a5b26d0759477b6c197cf9395cba8a0" translate="yes" xml:space="preserve">
          <source>The context-free version of Perl_warner is called Perl_warner_nocontext, and does not take the extra argument. Instead it does &lt;code&gt;dTHX;&lt;/code&gt; to get the context from thread-local storage. We &lt;code&gt;#define warner Perl_warner_nocontext&lt;/code&gt; so that extensions get source compatibility at the expense of performance. (Passing an arg is cheaper than grabbing it from thread-local storage.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3e46d3e11cb302e5746c299ddd22b0f06326e3" translate="yes" xml:space="preserve">
          <source>The context-free version of Perl_warner is called Perl_warner_nocontext, and does not take the extra argument. Instead it does dTHX; to get the context from thread-local storage. We &lt;code&gt;#define warner Perl_warner_nocontext&lt;/code&gt; so that extensions get source compatibility at the expense of performance. (Passing an arg is cheaper than grabbing it from thread-local storage.)</source>
          <target state="translated">La versi&amp;oacute;n sin contexto de Perl_warner se llama Perl_warner_nocontext y no toma el argumento adicional. En su lugar, hace dTHX; para obtener el contexto del almacenamiento local de subprocesos. Nos &lt;code&gt;#define warner Perl_warner_nocontext&lt;/code&gt; de manera que las extensiones consiguen fuente de compatibilidad a expensas del rendimiento. (Pasar un argumento es m&amp;aacute;s barato que tomarlo del almacenamiento local de subprocesos).</target>
        </trans-unit>
        <trans-unit id="427dbaaec2be0f9303d86d3fada6d103291e20da" translate="yes" xml:space="preserve">
          <source>The contexts where no warnings or errors are raised are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a306525389293789c4d3b564d2695ad27f640911" translate="yes" xml:space="preserve">
          <source>The conversion from Perl to C is left as an exercise to the reader, but the prototype would be:</source>
          <target state="translated">La conversión de Perl a C se deja como un ejercicio para el lector,pero el prototipo sería:</target>
        </trans-unit>
        <trans-unit id="5dab7a329fdfbc3426218724b9a43e87edffc6ee" translate="yes" xml:space="preserve">
          <source>The copy constructor is called only before a call to a function declared to implement a mutator, for example, if &lt;code&gt;++$b;&lt;/code&gt; in the code above is effected via a method declared for key &lt;code&gt;'++'&lt;/code&gt; (or 'nomethod', passed &lt;code&gt;'++'&lt;/code&gt; as the fourth argument) or, by autogeneration, &lt;code&gt;'+='&lt;/code&gt; . It is not called if the increment operation is effected by a call to the method for &lt;code&gt;'+'&lt;/code&gt; since, in the equivalent code,</source>
          <target state="translated">El constructor de copia se llama solo antes de una llamada a una funci&amp;oacute;n declarada para implementar un mutador, por ejemplo, si &lt;code&gt;++$b;&lt;/code&gt; en el c&amp;oacute;digo anterior se efect&amp;uacute;a mediante un m&amp;eacute;todo declarado para la clave &lt;code&gt;'++'&lt;/code&gt; (o 'nomethod', pasado &lt;code&gt;'++'&lt;/code&gt; como cuarto argumento) o, por autogeneraci&amp;oacute;n, &lt;code&gt;'+='&lt;/code&gt; . No se llama si la operaci&amp;oacute;n de incremento se efect&amp;uacute;a mediante una llamada al m&amp;eacute;todo para &lt;code&gt;'+'&lt;/code&gt; ya que, en el c&amp;oacute;digo equivalente,</target>
        </trans-unit>
        <trans-unit id="1a338324ec1f9edaef696d6d917c941261b8a116" translate="yes" xml:space="preserve">
          <source>The copy constructor is called only before a call to a function declared to implement a mutator, for example, if &lt;code&gt;++$b;&lt;/code&gt; in the code above is effected via a method declared for key &lt;code&gt;'++'&lt;/code&gt; (or 'nomethod', passed &lt;code&gt;'++'&lt;/code&gt; as the fourth argument) or, by autogeneration, &lt;code&gt;'+='&lt;/code&gt;. It is not called if the increment operation is effected by a call to the method for &lt;code&gt;'+'&lt;/code&gt; since, in the equivalent code,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed73a5b2044d7fb703c52c07bf589cfde908abd5" translate="yes" xml:space="preserve">
          <source>The copy constructor is not called if Perl determines that it is unnecessary because there is no other reference to the data being modified.</source>
          <target state="translated">El constructor de la copia no se llama si Perl determina que es innecesario porque no hay otra referencia a los datos que se están modificando.</target>
        </trans-unit>
        <trans-unit id="535c9ed5919c829adefa54d7a3ea16590ff263e1" translate="yes" xml:space="preserve">
          <source>The core &lt;a href=&quot;Devel::Peek&quot;&gt;Devel::Peek&lt;/a&gt; module lets us examine SVs from a Perl program. Let's see, for instance, how Perl treats the constant &lt;code&gt;&quot;hello&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc11db58db7976be6cbb0391f46874d6c6c0bdfd" translate="yes" xml:space="preserve">
          <source>The core &lt;a href=&quot;HTTP::Tiny&quot;&gt;HTTP::Tiny&lt;/a&gt; module can fetch web resources and give their content back to you as a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd210b745dfa94e566cd092061cca3c4c3e619ac" translate="yes" xml:space="preserve">
          <source>The core &lt;a href=&quot;devel/peek&quot;&gt;Devel::Peek&lt;/a&gt; module lets us examine SVs from a Perl program. Let's see, for instance, how Perl treats the constant &lt;code&gt;&quot;hello&quot;&lt;/code&gt; .</source>
          <target state="translated">El m&amp;oacute;dulo central &lt;a href=&quot;devel/peek&quot;&gt;Devel :: Peek&lt;/a&gt; nos permite examinar los SV desde un programa Perl. Veamos, por ejemplo, c&amp;oacute;mo trata Perl el constante &lt;code&gt;&quot;hello&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="216872d0879be12be32ab51a2f74dd9e0b301e2c" translate="yes" xml:space="preserve">
          <source>The core development team (known as the Perl Porters) are a group of highly altruistic individuals committed to producing better software for free than you could hope to purchase for money. You may snoop on pending developments via the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f&quot;&gt;archives&lt;/a&gt; or read the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fdev.perl.org%2fperl5%2fdocs%2fp5p-faq.html&quot;&gt;faq&lt;/a&gt;, or you can subscribe to the mailing list by sending perl5-porters-subscribe@perl.org a subscription request (an empty message with no subject is fine).</source>
          <target state="translated">El equipo de desarrollo central (conocido como Perl Porters) es un grupo de individuos altamente altruistas comprometidos con producir mejor software de forma gratuita del que podr&amp;iacute;a esperar comprar por dinero. Usted puede espiar a los desarrollos pendientes a trav&amp;eacute;s de los &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f&quot;&gt;archivos&lt;/a&gt; o leer el &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fdev.perl.org%2fperl5%2fdocs%2fp5p-faq.html&quot;&gt;FAQ&lt;/a&gt; , o puede suscribirse a la lista de correo mediante el env&amp;iacute;o de una solicitud de suscripci&amp;oacute;n perl5-porters-subscribe@perl.org (un mensaje vac&amp;iacute;o sin asunto est&amp;aacute; bien).</target>
        </trans-unit>
        <trans-unit id="722caaf3f888051207be247f57e2eb71f8ea20ba" translate="yes" xml:space="preserve">
          <source>The core development team (known as the Perl Porters) are a group of highly altruistic individuals committed to producing better software for free than you could hope to purchase for money. You may snoop on pending developments via the &lt;a href=&quot;http://www.nntp.perl.org/group/perl.perl5.porters/&quot;&gt;archives&lt;/a&gt; or you can subscribe to the mailing list by sending perl5-porters-subscribe@perl.org a subscription request (an empty message with no subject is fine).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd6f3115d2d6dbe91a070c10c729356bd227008" translate="yes" xml:space="preserve">
          <source>The core distribution can now run its regression tests in parallel on Unix-like platforms. Instead of running &lt;code&gt;make test&lt;/code&gt; , set &lt;code&gt;TEST_JOBS&lt;/code&gt; in your environment to the number of tests to run in parallel, and run &lt;code&gt;make test_harness&lt;/code&gt; . On a Bourne-like shell, this can be done as</source>
          <target state="translated">La distribuci&amp;oacute;n principal ahora puede ejecutar sus pruebas de regresi&amp;oacute;n en paralelo en plataformas similares a Unix. En lugar de ejecutar &lt;code&gt;make test&lt;/code&gt; , configure &lt;code&gt;TEST_JOBS&lt;/code&gt; en su entorno con el n&amp;uacute;mero de pruebas que se ejecutar&amp;aacute;n en paralelo y ejecute &lt;code&gt;make test_harness&lt;/code&gt; . En un caparaz&amp;oacute;n similar a Bourne, esto se puede hacer como</target>
        </trans-unit>
        <trans-unit id="b674b66d3912143b8c38b5c16cba55bf33d927a4" translate="yes" xml:space="preserve">
          <source>The core distribution can now run its regression tests in parallel on Unix-like platforms. Instead of running &lt;code&gt;make test&lt;/code&gt;, set &lt;code&gt;TEST_JOBS&lt;/code&gt; in your environment to the number of tests to run in parallel, and run &lt;code&gt;make test_harness&lt;/code&gt;. On a Bourne-like shell, this can be done as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cc3805e3a5e355489c3ee53c0ef93bf5066f34" translate="yes" xml:space="preserve">
          <source>The core provides a wrapper program,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e662bc8801eef788dff3d6316ec77e7ad811db79" translate="yes" xml:space="preserve">
          <source>The core uses the same testing style as the rest of Perl, a simple &quot;ok/not ok&quot; run through Test::Harness, but there are a few special considerations.</source>
          <target state="translated">El núcleo utiliza el mismo estilo de prueba que el resto de Perl,un simple &quot;ok/no ok&quot; a través de Test::Harness,pero hay algunas consideraciones especiales.</target>
        </trans-unit>
        <trans-unit id="a3ac8ff08d630fcfeea5350e81e0c2b799df3c84" translate="yes" xml:space="preserve">
          <source>The corpse of a &lt;b&gt;process&lt;/b&gt;, in the form of a file left in the &lt;b&gt;working directory&lt;/b&gt; of the process, usually as a result of certain kinds of fatal errors.</source>
          <target state="translated">El cad&amp;aacute;ver de un &lt;b&gt;proceso&lt;/b&gt; , en forma de archivo que se deja en el &lt;b&gt;directorio&lt;/b&gt; de &lt;b&gt;trabajo&lt;/b&gt; del proceso, generalmente como resultado de cierto tipo de errores fatales.</target>
        </trans-unit>
        <trans-unit id="ad72ec528dbf7e40ea844e46e3a129f3b3eadb6f" translate="yes" xml:space="preserve">
          <source>The correct code is &lt;code&gt;MAN3PODS =&amp;gt; { }&lt;/code&gt; .</source>
          <target state="translated">El c&amp;oacute;digo correcto es &lt;code&gt;MAN3PODS =&amp;gt; { }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d267e23c37d16b49140100273b7c13b82e17e524" translate="yes" xml:space="preserve">
          <source>The correct code is &lt;code&gt;MAN3PODS =&amp;gt; { }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb7322d9e711d10a989215f61754b35fdcb57a5" translate="yes" xml:space="preserve">
          <source>The correct procedure, then, is to use &lt;code&gt;newRV_noinc&lt;/code&gt; instead of &lt;code&gt;newRV_inc&lt;/code&gt; . Then, if and when the last reference is destroyed, the reference count of the SV will go to zero and it will be destroyed, stopping any memory leak.</source>
          <target state="translated">El procedimiento correcto, entonces, es usar &lt;code&gt;newRV_noinc&lt;/code&gt; en lugar de &lt;code&gt;newRV_inc&lt;/code&gt; . Luego, si se destruye la &amp;uacute;ltima referencia, el recuento de referencias del SV ir&amp;aacute; a cero y se destruir&amp;aacute;, deteniendo cualquier p&amp;eacute;rdida de memoria.</target>
        </trans-unit>
        <trans-unit id="e90480b056b891e1197a3bfca2f65f9341469925" translate="yes" xml:space="preserve">
          <source>The correspondence between OPs and</source>
          <target state="translated">La correspondencia entre las OP y</target>
        </trans-unit>
        <trans-unit id="3e632bae0f91b7fe9b42695b7f4eb9541547d7ab" translate="yes" xml:space="preserve">
          <source>The corresponding bright foreground color attributes (colors 8 to 15) are:</source>
          <target state="translated">Los correspondientes atributos de color brillante de primer plano (colores 8 a 15)son:</target>
        </trans-unit>
        <trans-unit id="15d3a8f91abd0b678be46a5c74457eb9c1a22a59" translate="yes" xml:space="preserve">
          <source>The corresponding command to get the current value of &lt;code&gt;$version&lt;/code&gt; is:</source>
          <target state="translated">El comando correspondiente para obtener el valor actual de &lt;code&gt;$version&lt;/code&gt; es:</target>
        </trans-unit>
        <trans-unit id="05b1215b3085d02b291dbd96e47ab01de8dfb44a" translate="yes" xml:space="preserve">
          <source>The corresponding values are interpreted as regular expressions. The &lt;code&gt;distribution&lt;/code&gt; related one will be matched against the canonical distribution name, e.g. &quot;AUTHOR/Foo-Bar-3.14.tar.gz&quot;.</source>
          <target state="translated">Los valores correspondientes se interpretan como expresiones regulares. La &lt;code&gt;distribution&lt;/code&gt; relacionada se comparar&amp;aacute; con el nombre de la distribuci&amp;oacute;n can&amp;oacute;nica, por ejemplo, &quot;AUTHOR / Foo-Bar-3.14.tar.gz&quot;.</target>
        </trans-unit>
        <trans-unit id="128893376b086988df0b6fe82266dcff7ded3c2c" translate="yes" xml:space="preserve">
          <source>The corresponding values are references to functions which take three arguments: the first one is the</source>
          <target state="translated">Los valores correspondientes son referencias a funciones que toman tres argumentos:el primero es el</target>
        </trans-unit>
        <trans-unit id="6d3c7b629f0ebabb7666a1418d689e5fcefefd4a" translate="yes" xml:space="preserve">
          <source>The count of the saved lines in the history (assuming &lt;code&gt;HistFile&lt;/code&gt; above).</source>
          <target state="translated">El recuento de las l&amp;iacute;neas guardadas en el historial (asumiendo &lt;code&gt;HistFile&lt;/code&gt; arriba).</target>
        </trans-unit>
        <trans-unit id="8a76e9ed23620e2d0138b893f98a44b589dac036" translate="yes" xml:space="preserve">
          <source>The cpd tool detects cut-and-paste coding. If one instance of the cut-and-pasted code changes, all the other spots should probably be changed, too. Therefore such code should probably be turned into a subroutine or a macro.</source>
          <target state="translated">La herramienta de cpd detecta la codificación de corte y pegado.Si una instancia del código de cortar y pegar cambia,todos los otros puntos probablemente deberían ser cambiados también.Por lo tanto,tal código probablemente debería ser convertido en una subrutina o una macro.</target>
        </trans-unit>
        <trans-unit id="3e999a3fce2098896facdee408ae939b810f6fc0" translate="yes" xml:space="preserve">
          <source>The cperl PERL_PERTURB_KEYS_TOP hash strategy has a known problem with restricted hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4315b91912980da8ee0d1d0ed73982372319566a" translate="yes" xml:space="preserve">
          <source>The critical thing when considering performance is to remember there is no such thing as a &lt;code&gt;Golden Bullet&lt;/code&gt; , which is why there are no rules, only guidelines.</source>
          <target state="translated">Lo fundamental al considerar el rendimiento es recordar que no existe una &lt;code&gt;Golden Bullet&lt;/code&gt; , por lo que no hay reglas, solo pautas.</target>
        </trans-unit>
        <trans-unit id="fe5e8a5c2d99ce7c51902edfccff2bd041c5e28d" translate="yes" xml:space="preserve">
          <source>The critical thing when considering performance is to remember there is no such thing as a &lt;code&gt;Golden Bullet&lt;/code&gt;, which is why there are no rules, only guidelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2f6d378553efd3b9ab7bab3a4069e081f7b24e" translate="yes" xml:space="preserve">
          <source>The crucial thing to understand about the Windows environment is that the command line you type in is processed twice before Perl sees it. First, your command shell (usually CMD.EXE) preprocesses the command line, to handle redirection, environment variable expansion, and location of the executable to run. Then, the perl executable splits the remaining command line into individual arguments, using the C runtime library upon which Perl was built.</source>
          <target state="translated">Lo crucial para entender el entorno de Windows es que la línea de comandos que escribes se procesa dos veces antes de que Perl la vea.Primero,su shell de comandos (generalmente CMD.EXE)preprocesa la línea de comandos,para manejar la redirección,la expansión de la variable de entorno y la ubicación del ejecutable a ejecutar.Luego,el ejecutable de perl divide la línea de comandos restante en argumentos individuales,utilizando la biblioteca de tiempo de ejecución de C sobre la que se construyó Perl.</target>
        </trans-unit>
        <trans-unit id="1bc259f8a74780b8f0344bb67ea81414fbf6762f" translate="yes" xml:space="preserve">
          <source>The crypt package distributed with Cygwin is a Linux compatible 56-bit DES crypt port by Corinna Vinschen.</source>
          <target state="translated">El paquete de criptografía distribuido con Cygwin es un puerto de criptografía DES de 56 bits compatible con Linux de Corinna Vinschen.</target>
        </trans-unit>
        <trans-unit id="39208a8b75f909c397f1ded48c8402dc3fb7d1f8" translate="yes" xml:space="preserve">
          <source>The crypt() function is unimplemented due to excessive paranoia.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831281b1eb1b6cf65cdf498d326c123b4d2ac980" translate="yes" xml:space="preserve">
          <source>The csh_glob() function can also be exported, but you should not use it directly unless you really know what you are doing. It splits the pattern into words and feeds each one to bsd_glob(). Perl's own glob() function uses this internally.</source>
          <target state="translated">La función csh_glob()también puede ser exportada,pero no debes usarla directamente a menos que realmente sepas lo que estás haciendo.Divide el patrón en palabras y alimenta cada una de ellas a bsd_glob().La propia función glob()de Perl la utiliza internamente.</target>
        </trans-unit>
        <trans-unit id="bb0c5fc2762311ff2f0c2ca9c51463e63c575d45" translate="yes" xml:space="preserve">
          <source>The ctime() function provides a way of getting at the scalar sense of the original CORE::localtime() function.</source>
          <target state="translated">La función ctime()proporciona una forma de llegar al sentido escalar de la función CORE::localtime()original.</target>
        </trans-unit>
        <trans-unit id="cc603efa123dedf5ee9218533c5f2218c02b0847" translate="yes" xml:space="preserve">
          <source>The cube root [C99].</source>
          <target state="translated">La raíz cúbica [C99].</target>
        </trans-unit>
        <trans-unit id="64bb5be49b5cecef1e72ffa347e55d8d7f71bf40" translate="yes" xml:space="preserve">
          <source>The current Unicode definition of a Word Boundary matches between every white space character. Perl tailors this, starting in version 5.24, to generally not break up spans of white space, just as plain &lt;code&gt;\b&lt;/code&gt; has always functioned. This allows &lt;code&gt;\b{wb}&lt;/code&gt; to be a drop-in replacement for &lt;code&gt;\b&lt;/code&gt;, but with generally better results for natural language processing. (The exception to this tailoring is when a span of white space is immediately followed by something like U+0303, COMBINING TILDE. If the final space character in the span is a horizontal white space, it is broken out so that it attaches instead to the combining character. To be precise, if a span of white space that ends in a horizontal space has the character immediately following it have any of the Word Boundary property values &quot;Extend&quot;, &quot;Format&quot; or &quot;ZWJ&quot;, the boundary between the final horizontal space character and the rest of the span matches &lt;code&gt;\b{wb}&lt;/code&gt;. In all other cases the boundary between two white space characters matches &lt;code&gt;\B{wb}&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64523d7c78b273edb939e95b2a44e78339d21a0e" translate="yes" xml:space="preserve">
          <source>The current format name is stored in the variable &lt;code&gt;$~&lt;/code&gt; (&lt;code&gt;$FORMAT_NAME&lt;/code&gt; ), and the current top of form format name is in &lt;code&gt;$^&lt;/code&gt; (&lt;code&gt;$FORMAT_TOP_NAME&lt;/code&gt; ). The current output page number is stored in &lt;code&gt;$%&lt;/code&gt; (&lt;code&gt;$FORMAT_PAGE_NUMBER&lt;/code&gt; ), and the number of lines on the page is in &lt;code&gt;$=&lt;/code&gt; (&lt;code&gt;$FORMAT_LINES_PER_PAGE&lt;/code&gt; ). Whether to autoflush output on this handle is stored in &lt;code&gt;$|&lt;/code&gt; (&lt;code&gt;$OUTPUT_AUTOFLUSH&lt;/code&gt; ). The string output before each top of page (except the first) is stored in &lt;code&gt;$^L&lt;/code&gt; (&lt;code&gt;$FORMAT_FORMFEED&lt;/code&gt; ). These variables are set on a per-filehandle basis, so you'll need to select() into a different one to affect them:</source>
          <target state="translated">El nombre del formato actual se almacena en la variable &lt;code&gt;$~&lt;/code&gt; ( &lt;code&gt;$FORMAT_NAME&lt;/code&gt; ), y el nombre actual del formato de la parte superior del formulario est&amp;aacute; en &lt;code&gt;$^&lt;/code&gt; ( &lt;code&gt;$FORMAT_TOP_NAME&lt;/code&gt; ). El n&amp;uacute;mero de p&amp;aacute;gina de salida actual se almacena en &lt;code&gt;$%&lt;/code&gt; ( &lt;code&gt;$FORMAT_PAGE_NUMBER&lt;/code&gt; ) y el n&amp;uacute;mero de l&amp;iacute;neas de la p&amp;aacute;gina est&amp;aacute; en &lt;code&gt;$=&lt;/code&gt; ( &lt;code&gt;$FORMAT_LINES_PER_PAGE&lt;/code&gt; ). Si se va a eliminar autom&amp;aacute;ticamente la salida en este identificador se almacena en &lt;code&gt;$|&lt;/code&gt; ( &lt;code&gt;$OUTPUT_AUTOFLUSH&lt;/code&gt; ). La cadena de salida antes de cada parte superior de la p&amp;aacute;gina (excepto la primera) se almacena en &lt;code&gt;$^L&lt;/code&gt; ( &lt;code&gt;$FORMAT_FORMFEED&lt;/code&gt; ). Estas variables se configuran por manejo de archivo, por lo que deber&amp;aacute; seleccionar () en una diferente para afectarlas:</target>
        </trans-unit>
        <trans-unit id="15997f5af8679b322c9a721da40c3667459ea331" translate="yes" xml:space="preserve">
          <source>The current format name is stored in the variable &lt;code&gt;$~&lt;/code&gt; (&lt;code&gt;$FORMAT_NAME&lt;/code&gt;), and the current top of form format name is in &lt;code&gt;$^&lt;/code&gt; (&lt;code&gt;$FORMAT_TOP_NAME&lt;/code&gt;). The current output page number is stored in &lt;code&gt;$%&lt;/code&gt; (&lt;code&gt;$FORMAT_PAGE_NUMBER&lt;/code&gt;), and the number of lines on the page is in &lt;code&gt;$=&lt;/code&gt; (&lt;code&gt;$FORMAT_LINES_PER_PAGE&lt;/code&gt;). Whether to autoflush output on this handle is stored in &lt;code&gt;$|&lt;/code&gt; (&lt;code&gt;$OUTPUT_AUTOFLUSH&lt;/code&gt;). The string output before each top of page (except the first) is stored in &lt;code&gt;$^L&lt;/code&gt; (&lt;code&gt;$FORMAT_FORMFEED&lt;/code&gt;). These variables are set on a per-filehandle basis, so you'll need to select() into a different one to affect them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbf873260d45973f075c0f7d16575580f2c6333" translate="yes" xml:space="preserve">
          <source>The current hierarchy is:</source>
          <target state="translated">La jerarquía actual es:</target>
        </trans-unit>
        <trans-unit id="824b38e0c77c472868114a17d1e97b269bb0ba11" translate="yes" xml:space="preserve">
          <source>The current implementation does not allow specification of the required version of the module.</source>
          <target state="translated">La implementación actual no permite especificar la versión requerida del módulo.</target>
        </trans-unit>
        <trans-unit id="282bec354d0f4d4b762dd47ad0eb5b6ecfd1f6ce" translate="yes" xml:space="preserve">
          <source>The current input line is normally in $_, not $0. It generally does not have the newline stripped. ($0 is the name of the program executed.) See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;.</source>
          <target state="translated">La l&amp;iacute;nea de entrada actual est&amp;aacute; normalmente en $ _, no en $ 0. Generalmente no tiene la nueva l&amp;iacute;nea eliminada. ($ 0 es el nombre del programa ejecutado). Ver &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18f618cc025364ce800e5f345611b3c1497a1ed6" translate="yes" xml:space="preserve">
          <source>The current kinds of Magic Virtual Tables are:</source>
          <target state="translated">Los tipos actuales de Tablas Virtuales Mágicas son:</target>
        </trans-unit>
        <trans-unit id="5c4fde69768c885a1c05aaf0e69e2380f88e2b66" translate="yes" xml:space="preserve">
          <source>The current leading implementation of Perl 6, Rakudo, released a &quot;useful, usable, 'early adopter'&quot; distribution of Perl 6 (called Rakudo Star) in July of 2010. Please see &lt;a href=&quot;http://rakudo.org/&quot;&gt;http://rakudo.org/&lt;/a&gt; for more information.</source>
          <target state="translated">La implementaci&amp;oacute;n l&amp;iacute;der actual de Perl 6, Rakudo, lanz&amp;oacute; una distribuci&amp;oacute;n de Perl 6 &quot;&amp;uacute;til, utilizable y de primera adopci&amp;oacute;n&quot; (llamada Rakudo Star) en julio de 2010. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://rakudo.org/&quot;&gt;http://rakudo.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ee5778fbc1ab8fe240410952dd5b9eaf045d059" translate="yes" xml:space="preserve">
          <source>The current line number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf758edb971b2b4dec99794c86a54d09eddea2b6" translate="yes" xml:space="preserve">
          <source>The current locale is exposed to XS code except possibly &lt;code&gt;LC_NUMERIC&lt;/code&gt; (explained in the next paragraph). There have not been reports of problems with the other categories. Perl initializes things on start-up so that the current locale is the one which is indicated by the user's environment in effect at that time. See &lt;a href=&quot;perllocale#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot; in perllocale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d3f495bb4240a9d3bab6ec75da601351d12c2b" translate="yes" xml:space="preserve">
          <source>The current locale is exposed to XS code except possibly &lt;code&gt;LC_NUMERIC&lt;/code&gt; (explained in the next paragraph). There have not been reports of problems with the other categories. Perl initializes things on start-up so that the current locale is the one which is indicated by the user's environment in effect at that time. See &lt;a href=&quot;perllocale#ENVIRONMENT&quot;&gt;ENVIRONMENT in perllocale&lt;/a&gt;.</source>
          <target state="translated">La configuraci&amp;oacute;n regional actual est&amp;aacute; expuesta al c&amp;oacute;digo XS, excepto posiblemente &lt;code&gt;LC_NUMERIC&lt;/code&gt; (explicado en el siguiente p&amp;aacute;rrafo). No ha habido informes de problemas con las otras categor&amp;iacute;as. Perl inicializa las cosas al inicio para que la configuraci&amp;oacute;n regional actual sea la indicada por el entorno del usuario en ese momento. Ver &lt;a href=&quot;perllocale#ENVIRONMENT&quot;&gt;MEDIO AMBIENTE en perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06e14b6dd5c0c60379e0f9fc4367987da9456c3d" translate="yes" xml:space="preserve">
          <source>The current locale is set at execution time by &lt;a href=&quot;#The-setlocale-function&quot;&gt;setlocale()&lt;/a&gt; described below. If that function hasn't yet been called in the course of the program's execution, the current locale is that which was determined by the &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; in effect at the start of the program. If there is no valid environment, the current locale is whatever the system default has been set to. On POSIX systems, it is likely, but not necessarily, the &quot;C&quot; locale. On Windows, the default is set via the computer's &lt;code&gt;Control Panel-&amp;gt;Regional and Language Options&lt;/code&gt; (or its current equivalent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061c069ca3fcc48e2c1a6a5055f7be81ca6838c7" translate="yes" xml:space="preserve">
          <source>The current locale is set at execution time by &lt;a href=&quot;#The-setlocale-function&quot;&gt;setlocale()&lt;/a&gt; described below. If that function hasn't yet been called in the course of the program's execution, the current locale is that which was determined by the &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; in effect at the start of the program. If there is no valid environment, the current locale is whatever the system default has been set to. On POSIX systems, it is likely, but not necessarily, the &quot;C&quot; locale. On Windows, the default is set via the computer's &lt;code&gt;Control Panel-&amp;gt;Regional &lt;a href=&quot;functions/and&quot;&gt;and&lt;/a&gt; Language Options&lt;/code&gt; (or its current equivalent).</source>
          <target state="translated">La configuraci&amp;oacute;n regional actual se establece en el momento de la ejecuci&amp;oacute;n mediante &lt;a href=&quot;#The-setlocale-function&quot;&gt;setlocale () que se&lt;/a&gt; describe a continuaci&amp;oacute;n. Si esa funci&amp;oacute;n a&amp;uacute;n no ha sido llamada en el curso de la ejecuci&amp;oacute;n del programa, la ubicaci&amp;oacute;n actual es la que fue determinada por el &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENTORNO&lt;/a&gt; vigente al inicio del programa. Si no hay un entorno v&amp;aacute;lido, la configuraci&amp;oacute;n regional actual es la configuraci&amp;oacute;n predeterminada del sistema. En los sistemas POSIX, es probable, pero no necesariamente, la configuraci&amp;oacute;n regional &quot;C&quot;. En Windows, el valor predeterminado se establece a trav&amp;eacute;s del &lt;code&gt;Control Panel-&amp;gt;Regional &lt;a href=&quot;functions/and&quot;&gt;and&lt;/a&gt; Language Options&lt;/code&gt; la computadora- &amp;gt; Opciones regionales y de idioma (o su equivalente actual).</target>
        </trans-unit>
        <trans-unit id="b7f42f27fb52f98cb07c551fabc648053a689c30" translate="yes" xml:space="preserve">
          <source>The current locale is used when going outside of Perl with operations like &lt;a href=&quot;functions/system&quot;&gt;system LIST&lt;/a&gt; or &lt;a href=&quot;perlop#qx%2fSTRING%2f&quot;&gt;qx//&lt;/a&gt;, if those operations are locale-sensitive.</source>
          <target state="translated">La configuraci&amp;oacute;n regional actual se usa cuando se sale de Perl con operaciones como &lt;a href=&quot;functions/system&quot;&gt;system LIST&lt;/a&gt; o &lt;a href=&quot;perlop#qx%2fSTRING%2f&quot;&gt;qx //&lt;/a&gt; , si esas operaciones son sensibles a la configuraci&amp;oacute;n regional.</target>
        </trans-unit>
        <trans-unit id="69e663f7c7a676b0d28d32e89828d9474ab1d29d" translate="yes" xml:space="preserve">
          <source>The current locale is used when going outside of Perl with operations like &lt;a href=&quot;perlfunc#system-LIST&quot;&gt;system()&lt;/a&gt; or &lt;a href=&quot;perlop#qx%2FSTRING%2F&quot;&gt;qx//&lt;/a&gt;, if those operations are locale-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea51628874f50840c20248e49e31ecc39bc8aab0" translate="yes" xml:space="preserve">
          <source>The current major release of Perl is Perl 5, first released in 1994. It can run scripts from the previous major release, Perl 4 (March 1991), but has significant differences.</source>
          <target state="translated">El principal lanzamiento actual de Perl es el Perl 5,lanzado por primera vez en 1994.Puede ejecutar guiones de la versión principal anterior,Perl 4 (marzo de 1991),pero tiene diferencias significativas.</target>
        </trans-unit>
        <trans-unit id="1ad75b57a59621fb77288b117b229032ac9f513f" translate="yes" xml:space="preserve">
          <source>The current naming convention is:</source>
          <target state="translated">La actual convención de nombres es:</target>
        </trans-unit>
        <trans-unit id="b2e2b3b69c2218e4d8359acb1335a4024632d82a" translate="yes" xml:space="preserve">
          <source>The current offset on the Perl internal stack (cf. &lt;code&gt;SP&lt;/code&gt; ) is restored at the end of</source>
          <target state="translated">El desplazamiento actual en la pila interna de Perl (cf. &lt;code&gt;SP&lt;/code&gt; ) se restaura al final de</target>
        </trans-unit>
        <trans-unit id="6ab9fb3b5f482c273ca6d801c743b02bcacec72c" translate="yes" xml:space="preserve">
          <source>The current offset on the Perl internal stack (cf. &lt;code&gt;SP&lt;/code&gt;) is restored at the end of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c030186501458b34adb46e2d42aa7b81f218a056" translate="yes" xml:space="preserve">
          <source>The current page length (printable lines) of the currently selected output channel. The default is 60.</source>
          <target state="translated">La longitud de página actual (líneas imprimibles)del canal de salida seleccionado actualmente.El valor predeterminado es 60.</target>
        </trans-unit>
        <trans-unit id="3d4eb19bb10369473283d32cc7dd71a86ff46c90" translate="yes" xml:space="preserve">
          <source>The current page number of the currently selected output channel.</source>
          <target state="translated">El número de página actual del canal de salida seleccionado actualmente.</target>
        </trans-unit>
        <trans-unit id="770296232bd3d822ead8ffe492b7e0e282b9f95e" translate="yes" xml:space="preserve">
          <source>The current phase of the perl interpreter.</source>
          <target state="translated">La fase actual del intérprete de perl.</target>
        </trans-unit>
        <trans-unit id="2864f23a19f0c83d2f66d97a56cf54892b44918f" translate="yes" xml:space="preserve">
          <source>The current process identifier is normally also available via the predefined $$ variable. Under fork() emulation however $$ may contain a pseudo-process identifier that is only meaningful to the Perl kill(), wait() and waitpid() functions. The Win32::GetCurrentProcessId() function will always return the regular Windows process id, even when called from inside a pseudo-process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2857cd700aaf0537f04949257bdb10786ea5148" translate="yes" xml:space="preserve">
          <source>The current set of characters after which a string may be broken to fill continuation fields (starting with &lt;code&gt;^&lt;/code&gt;) in a format. The default is &quot; \n-&quot;, to break on a space, newline, or a hyphen.</source>
          <target state="translated">El conjunto actual de caracteres despu&amp;eacute;s del cual se puede romper una cadena para completar los campos de continuaci&amp;oacute;n (comenzando con &lt;code&gt;^&lt;/code&gt; ) en un formato. El valor predeterminado es &quot;\ n-&quot;, para dividirse en un espacio, una nueva l&amp;iacute;nea o un gui&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d0bc78c2888afaf94160d8cd4bd4fdc74663bf04" translate="yes" xml:space="preserve">
          <source>The current set of official keys is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981300e195cac4e7353f833304330d8ac58b67a9" translate="yes" xml:space="preserve">
          <source>The current set of warning checks enabled by the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma. It has the same scoping as the &lt;code&gt;$^H&lt;/code&gt; and &lt;code&gt;%^H&lt;/code&gt; variables. The exact values are considered internal to the &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; pragma and may change between versions of Perl.</source>
          <target state="translated">El conjunto actual de comprobaciones de advertencia habilitadas por el pragma de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; . Tiene el mismo alcance que las variables &lt;code&gt;$^H&lt;/code&gt; y &lt;code&gt;%^H&lt;/code&gt; Los valores exactos se consideran internos al pragma de &lt;a href=&quot;warnings&quot;&gt;advertencias&lt;/a&gt; y pueden cambiar entre versiones de Perl.</target>
        </trans-unit>
        <trans-unit id="5ff870c28a76abb15c6ef8bc6c01da1732cfc87c" translate="yes" xml:space="preserve">
          <source>The current set of warning checks enabled by the &lt;code&gt;use warnings&lt;/code&gt; pragma. It has the same scoping as the &lt;code&gt;$^H&lt;/code&gt; and &lt;code&gt;%^H&lt;/code&gt; variables. The exact values are considered internal to the &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; pragma and may change between versions of Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48b124af22e055d2f998460eddfa2b05c504d05" translate="yes" xml:space="preserve">
          <source>The current setting for a particular CV can be retrieved by &lt;a href=&quot;#cv_get_call_checker&quot;&gt;cv_get_call_checker&lt;/a&gt;.</source>
          <target state="translated">La configuraci&amp;oacute;n actual de un CV en particular se puede recuperar mediante &lt;a href=&quot;#cv_get_call_checker&quot;&gt;cv_get_call_checker&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="043e73127d721a29085be4df3900bb1371bf6328" translate="yes" xml:space="preserve">
          <source>The current setting for a particular CV can be retrieved by &lt;a href=&quot;#cv_get_call_checker_flags&quot;&gt;&quot;cv_get_call_checker_flags&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b952480064e555e874a4e5bab67374e0afa43170" translate="yes" xml:space="preserve">
          <source>The current state is quite close to this target. Known limitations:</source>
          <target state="translated">El estado actual está bastante cerca de este objetivo.Limitaciones conocidas:</target>
        </trans-unit>
        <trans-unit id="ba6118e27828276e003be0b716e1e27e35775418" translate="yes" xml:space="preserve">
          <source>The current time, hires or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c893fdb58e68676d453e9772eca0458d9ee9ef15" translate="yes" xml:space="preserve">
          <source>The current value giving the maximum number of open but unclosed parenthetical groups there may be at any point during a regular expression compilation. The default is currently 1000 nested groups. You may adjust it depending on your needs and the amount of memory available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc73114057d5a2e203bbe1e6af0220ea5c0d6452" translate="yes" xml:space="preserve">
          <source>The current value of &lt;a href=&quot;perlvar#%24%2C&quot;&gt;&lt;code&gt;$,&lt;/code&gt;&lt;/a&gt; (if any) is printed between each LIST item. The current value of &lt;a href=&quot;perlvar#%24%5C&quot;&gt;&lt;code&gt;$\&lt;/code&gt;&lt;/a&gt; (if any) is printed after the entire LIST has been printed. Because print takes a LIST, anything in the LIST is evaluated in list context, including any subroutines whose return lists you pass to &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;. Be careful not to follow the print keyword with a left parenthesis unless you want the corresponding right parenthesis to terminate the arguments to the print; put parentheses around all arguments (or interpose a &lt;code&gt;+&lt;/code&gt;, but that doesn't look as good).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b45957d0c48ff5a61159add09d1cced4fe06354" translate="yes" xml:space="preserve">
          <source>The current value of &lt;code&gt;$,&lt;/code&gt; (if any) is printed between each LIST item. The current value of &lt;code&gt;$\&lt;/code&gt; (if any) is printed after the entire LIST has been printed. Because print takes a LIST, anything in the LIST is evaluated in list context, including any subroutines whose return lists you pass to &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;. Be careful not to follow the print keyword with a left parenthesis unless you want the corresponding right parenthesis to terminate the arguments to the print; put parentheses around all arguments (or interpose a &lt;code&gt;+&lt;/code&gt; , but that doesn't look as good).</source>
          <target state="translated">El valor actual de &lt;code&gt;$,&lt;/code&gt; (si lo hay) se imprime entre cada elemento de la LISTA. El valor actual de &lt;code&gt;$\&lt;/code&gt; (si lo hay) se imprime despu&amp;eacute;s de que se haya impreso la LISTA completa. Dado que la impresi&amp;oacute;n toma una LISTA, cualquier elemento de la LISTA se eval&amp;uacute;a en el contexto de la lista, incluidas las subrutinas cuyas listas de retorno se pasan a &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; . Tenga cuidado de no seguir la palabra clave print con un par&amp;eacute;ntesis izquierdo a menos que desee que el par&amp;eacute;ntesis derecho correspondiente termine los argumentos de la impresi&amp;oacute;n; ponga par&amp;eacute;ntesis alrededor de todos los argumentos (o interponga un &lt;code&gt;+&lt;/code&gt; , pero eso no se ve tan bien).</target>
        </trans-unit>
        <trans-unit id="d3b381c8d22a96ce946901e90864741d92df1af5" translate="yes" xml:space="preserve">
          <source>The current value of &lt;code&gt;$,&lt;/code&gt; (if any) is printed between each LIST item. The current value of &lt;code&gt;$\&lt;/code&gt; (if any) is printed after the entire LIST has been printed. Because print takes a LIST, anything in the LIST is evaluated in list context, including any subroutines whose return lists you pass to &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;. Be careful not to follow the print keyword with a left parenthesis unless you want the corresponding right parenthesis to terminate the arguments to the print; put parentheses around all arguments (or interpose a &lt;code&gt;+&lt;/code&gt; , but that doesn't look as good).</source>
          <target state="translated">El valor actual de &lt;code&gt;$,&lt;/code&gt; (si lo hay) se imprime entre cada elemento de la LISTA. El valor actual de &lt;code&gt;$\&lt;/code&gt; (si lo hay) se imprime despu&amp;eacute;s de que se haya impreso la LISTA completa. Dado que la impresi&amp;oacute;n toma una LISTA, cualquier elemento de la LISTA se eval&amp;uacute;a en el contexto de la lista, incluidas las subrutinas cuyas listas de retorno se pasan a &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; . Tenga cuidado de no seguir la palabra clave print con un par&amp;eacute;ntesis izquierdo a menos que desee que el par&amp;eacute;ntesis derecho correspondiente termine los argumentos de la impresi&amp;oacute;n; ponga par&amp;eacute;ntesis alrededor de todos los argumentos (o interponga un &lt;code&gt;+&lt;/code&gt; , pero eso no se ve tan bien).</target>
        </trans-unit>
        <trans-unit id="16a7c40e8bbfe13e91d735da741af8520eabede2" translate="yes" xml:space="preserve">
          <source>The current value of &lt;code&gt;$archname&lt;/code&gt; can be found with this command:</source>
          <target state="translated">El valor actual de &lt;code&gt;$archname&lt;/code&gt; se puede encontrar con este comando:</target>
        </trans-unit>
        <trans-unit id="db4a25bfed587546962de5c8d6543f967c92521a" translate="yes" xml:space="preserve">
          <source>The current value of the &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt; accumulator for &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format()&lt;/a&gt;&lt;/code&gt; lines. A format contains &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline()&lt;/a&gt;&lt;/code&gt; calls that put their result into &lt;code&gt;$^A&lt;/code&gt; . After calling its format, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt; prints out the contents of &lt;code&gt;$^A&lt;/code&gt; and empties. So you never really see the contents of &lt;code&gt;$^A&lt;/code&gt; unless you call &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline()&lt;/a&gt;&lt;/code&gt; yourself and then look at it. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; and &lt;a href=&quot;functions/formline&quot;&gt;formline PICTURE,LIST&lt;/a&gt;.</source>
          <target state="translated">El valor actual del acumulador &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt; para las l&amp;iacute;neas de &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format()&lt;/a&gt;&lt;/code&gt; . Un formato contiene &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline()&lt;/a&gt;&lt;/code&gt; llamadas que ponen su resultado en &lt;code&gt;$^A&lt;/code&gt; . Despu&amp;eacute;s de llamar a su formato, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt; imprime el contenido de &lt;code&gt;$^A&lt;/code&gt; y lo vac&amp;iacute;a. Por lo tanto, nunca ve realmente el contenido de &lt;code&gt;$^A&lt;/code&gt; menos que llame a &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline()&lt;/a&gt;&lt;/code&gt; usted mismo y luego lo mire. Vea &lt;a href=&quot;perlform&quot;&gt;PERLFORM&lt;/a&gt; y &lt;a href=&quot;functions/formline&quot;&gt;FORMLINE IMAGEN, LISTA&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf446124f3a4c45cac5e41b4dd3df5f6adedf891" translate="yes" xml:space="preserve">
          <source>The current value of the &lt;code&gt;write()&lt;/code&gt; accumulator for &lt;code&gt;format()&lt;/code&gt; lines. A format contains &lt;code&gt;formline()&lt;/code&gt; calls that put their result into &lt;code&gt;$^A&lt;/code&gt;. After calling its format, &lt;code&gt;write()&lt;/code&gt; prints out the contents of &lt;code&gt;$^A&lt;/code&gt; and empties. So you never really see the contents of &lt;code&gt;$^A&lt;/code&gt; unless you call &lt;code&gt;formline()&lt;/code&gt; yourself and then look at it. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; and &lt;a href=&quot;perlfunc#formline-PICTURE%2CLIST&quot;&gt;&quot;formline PICTURE,LIST&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cef4c84f23112c510335f5bb9c61930fcb65b7" translate="yes" xml:space="preserve">
          <source>The current value of the debugging flags. May be read or set. Like its &lt;a href=&quot;perlrun#-Dletters&quot;&gt;command-line equivalent&lt;/a&gt;, you can use numeric or symbolic values, e.g. &lt;code&gt;$^D = 10&lt;/code&gt; or &lt;code&gt;$^D = &quot;st&quot;&lt;/code&gt;. See &lt;a href=&quot;perlrun#-Dnumber&quot;&gt;&quot;&lt;b&gt;-D&lt;/b&gt;&lt;i&gt;number&lt;/i&gt;&quot; in perlrun&lt;/a&gt;. The contents of this variable also affects the debugger operation. See &lt;a href=&quot;perldebguts#Debugger-Internals&quot;&gt;&quot;Debugger Internals&quot; in perldebguts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed07dc52d8f87fe5efbcd1795acd592cb2bcdd55" translate="yes" xml:space="preserve">
          <source>The current value of the debugging flags. May be read or set. Like its command-line equivalent, you can use numeric or symbolic values, eg &lt;code&gt;$^D = 10&lt;/code&gt; or &lt;code&gt;$^D = &quot;st&quot;&lt;/code&gt; .</source>
          <target state="translated">El valor actual de los indicadores de depuraci&amp;oacute;n. Puede leerse o configurarse. Al igual que su equivalente en la l&amp;iacute;nea de comandos, puede utilizar valores num&amp;eacute;ricos o simb&amp;oacute;licos, por ejemplo, &lt;code&gt;$^D = 10&lt;/code&gt; o &lt;code&gt;$^D = &quot;st&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="761048a9f6779920117c38b6975281ec2824cbaa" translate="yes" xml:space="preserve">
          <source>The current value of the flag associated with the &lt;b&gt;-c&lt;/b&gt; switch. Mainly of use with &lt;b&gt;-MO=...&lt;/b&gt; to allow code to alter its behavior when being compiled, such as for example to &lt;code&gt;AUTOLOAD&lt;/code&gt; at compile time rather than normal, deferred loading. Setting &lt;code&gt;$^C = 1&lt;/code&gt; is similar to calling &lt;code&gt;B::minus_c&lt;/code&gt; .</source>
          <target state="translated">El valor actual de la bandera asociada con el &lt;b&gt;modificador -c&lt;/b&gt; . Se usa principalmente con &lt;b&gt;-MO = ...&lt;/b&gt; para permitir que el c&amp;oacute;digo altere su comportamiento cuando se compila, como por ejemplo, &lt;code&gt;AUTOLOAD&lt;/code&gt; en tiempo de compilaci&amp;oacute;n en lugar de la carga diferida normal. Establecer &lt;code&gt;$^C = 1&lt;/code&gt; es similar a llamar a &lt;code&gt;B::minus_c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8dafa28f68632a10855a57c5eacb6743b86c198f" translate="yes" xml:space="preserve">
          <source>The current value of the flag associated with the &lt;b&gt;-c&lt;/b&gt; switch. Mainly of use with &lt;b&gt;-MO=...&lt;/b&gt; to allow code to alter its behavior when being compiled, such as for example to &lt;code&gt;AUTOLOAD&lt;/code&gt; at compile time rather than normal, deferred loading. Setting &lt;code&gt;$^C = 1&lt;/code&gt; is similar to calling &lt;code&gt;B::minus_c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5468ce0ac69ee02e09a591df294df02b8e8e00dd" translate="yes" xml:space="preserve">
          <source>The current value of the inplace-edit extension. Use &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to disable inplace editing.</source>
          <target state="translated">El valor actual de la extensi&amp;oacute;n de edici&amp;oacute;n in situ. Use &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; para deshabilitar la edici&amp;oacute;n en el lugar.</target>
        </trans-unit>
        <trans-unit id="eb25a57f6557411f85b4814f0d93efdbea2e3515" translate="yes" xml:space="preserve">
          <source>The current value of the inplace-edit extension. Use &lt;code&gt;undef&lt;/code&gt; to disable inplace editing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0d30902e8f62034444f0c46f34be59caec65d2" translate="yes" xml:space="preserve">
          <source>The current value of the regex debugging flags. Set to 0 for no debug output even when the &lt;code&gt;re 'debug'&lt;/code&gt; module is loaded. See &lt;a href=&quot;re&quot;&gt;re&lt;/a&gt; for details.</source>
          <target state="translated">El valor actual de los indicadores de depuraci&amp;oacute;n de expresiones regulares. Se establece en 0 para que no haya salida de depuraci&amp;oacute;n incluso cuando se carga el m&amp;oacute;dulo &lt;code&gt;re 'debug'&lt;/code&gt; . Consulte &lt;a href=&quot;re&quot;&gt;re&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="a22922d7a166dbc35ec6d0a0c534fd11892caf1b" translate="yes" xml:space="preserve">
          <source>The current value of the warning switch, initially true if &lt;b&gt;-w&lt;/b&gt; was used, false otherwise, but directly modifiable.</source>
          <target state="translated">El valor actual del interruptor de advertencia, inicialmente verdadero si se utiliz&amp;oacute; &lt;b&gt;-w&lt;/b&gt; , falso en caso contrario, pero directamente modificable.</target>
        </trans-unit>
        <trans-unit id="434ca8d76bd8ecc27a064789f98b19395ab4f212" translate="yes" xml:space="preserve">
          <source>The current version of the standards for &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; is available at &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399/functions/atan2.html&quot;&gt;http://www.opengroup.org/onlinepubs/009695399/functions/atan2.html&lt;/a&gt;.</source>
          <target state="translated">La versi&amp;oacute;n actual de los est&amp;aacute;ndares para &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; est&amp;aacute; disponible en &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399/functions/atan2.html&quot;&gt;http://www.opengroup.org/onlinepubs/009695399/functions/atan2.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b563eb1b6cfef1294ee2d2ec105a8fc001fb852" translate="yes" xml:space="preserve">
          <source>The current version of the standards for &lt;code&gt;atan2&lt;/code&gt; is available at &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399/functions/atan2.html&quot;&gt;http://www.opengroup.org/onlinepubs/009695399/functions/atan2.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af70deb3b449e89c48e84135fbdeb7d79f07a9c" translate="yes" xml:space="preserve">
          <source>The current version of this module is always available from its web site at &lt;a href=&quot;http://www.eyrie.org/~eagle/software/ansicolor/&quot;&gt;http://www.eyrie.org/~eagle/software/ansicolor/&lt;/a&gt;. It is also part of the Perl core distribution as of 5.6.0.</source>
          <target state="translated">La versi&amp;oacute;n actual de este m&amp;oacute;dulo siempre est&amp;aacute; disponible en su sitio web en &lt;a href=&quot;http://www.eyrie.org/~eagle/software/ansicolor/&quot;&gt;http://www.eyrie.org/~eagle/software/ansicolor/&lt;/a&gt; . Tambi&amp;eacute;n es parte de la distribuci&amp;oacute;n principal de Perl a partir de 5.6.0.</target>
        </trans-unit>
        <trans-unit id="b31c3cebc8faae4e8a4925e48535264d89073d95" translate="yes" xml:space="preserve">
          <source>The current version of this module is always available from its web site at &lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;.</source>
          <target state="translated">La versi&amp;oacute;n actual de este m&amp;oacute;dulo siempre est&amp;aacute; disponible en su sitio web en &lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f5a8854edfd01b7a5e559e1a5294ccbba9d0afe6" translate="yes" xml:space="preserve">
          <source>The current version of this module is always available from its web site at &lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;. It is also part of the Perl core distribution as of 5.6.0.</source>
          <target state="translated">La versi&amp;oacute;n actual de este m&amp;oacute;dulo siempre est&amp;aacute; disponible en su sitio web en &lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt; . Tambi&amp;eacute;n es parte de la distribuci&amp;oacute;n principal de Perl a partir de 5.6.0.</target>
        </trans-unit>
        <trans-unit id="cbd165143fe6d4a52227133b4ee1638e509ed516" translate="yes" xml:space="preserve">
          <source>The current version of this module is always available from its web site at &lt;a href=&quot;https://www.eyrie.org/~eagle/software/ansicolor/&quot;&gt;https://www.eyrie.org/~eagle/software/ansicolor/&lt;/a&gt;. It is also part of the Perl core distribution as of 5.6.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a674a12f3426ba3d689c7c921dc0c45b179571fc" translate="yes" xml:space="preserve">
          <source>The current version of this module is always available from its web site at &lt;a href=&quot;https://www.eyrie.org/~eagle/software/podlators/&quot;&gt;https://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c2bb6087cce8c28cf4e7d17487f87fbaa02086" translate="yes" xml:space="preserve">
          <source>The current version of this module is always available from its web site at &lt;a href=&quot;https://www.eyrie.org/~eagle/software/podlators/&quot;&gt;https://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;. It is also part of the Perl core distribution as of 5.6.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47cd4fd8d9bd245ee61848360efac4088607cb6" translate="yes" xml:space="preserve">
          <source>The current version of this script is always available from its web site at &lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;. It is also part of the Perl core distribution as of 5.6.0.</source>
          <target state="translated">La versi&amp;oacute;n actual de este script siempre est&amp;aacute; disponible en su sitio web en &lt;a href=&quot;http://www.eyrie.org/~eagle/software/podlators/&quot;&gt;http://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt; . Tambi&amp;eacute;n es parte de la distribuci&amp;oacute;n principal de Perl a partir de 5.6.0.</target>
        </trans-unit>
        <trans-unit id="7b5c546ea518bb4350e7bf7b54f3310abe5cc06c" translate="yes" xml:space="preserve">
          <source>The current version of this script is always available from its web site at &lt;a href=&quot;https://www.eyrie.org/~eagle/software/podlators/&quot;&gt;https://www.eyrie.org/~eagle/software/podlators/&lt;/a&gt;. It is also part of the Perl core distribution as of 5.6.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8fe5626c6979a9718f106c0652b7d905296f64" translate="yes" xml:space="preserve">
          <source>The current version was written by Graham Barr.</source>
          <target state="translated">La versión actual fue escrita por Graham Barr.</target>
        </trans-unit>
        <trans-unit id="7c32f08e82229236d88693ec9eaad5ec8a635209" translate="yes" xml:space="preserve">
          <source>The current working directory of the program is</source>
          <target state="translated">El actual directorio de trabajo del programa es</target>
        </trans-unit>
        <trans-unit id="403572c903ddf0d90233f3ad9327b2e78dc32883" translate="yes" xml:space="preserve">
          <source>The currently active COP (control op) roughly representing the current statement in the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588f5e820c106e9822f858102bdf0e7ae9b574c7" translate="yes" xml:space="preserve">
          <source>The customary Perl approach for processing all the lines in a file is to do so one line at a time:</source>
          <target state="translated">El enfoque habitual de Perl para procesar todas las líneas de un archivo es hacerlo una línea a la vez:</target>
        </trans-unit>
        <trans-unit id="a4504c4a63cdd557da723133c8d2b75666dc8630" translate="yes" xml:space="preserve">
          <source>The cwd() is the most natural form for the current architecture. For most systems it is identical to `pwd` (but without the trailing line terminator).</source>
          <target state="translated">El cwd()es la forma más natural para la arquitectura actual.Para la mayoría de los sistemas es idéntica a `pwd` (pero sin el terminador de la línea de arrastre).</target>
        </trans-unit>
        <trans-unit id="40c9ebfbdf9a557c5ad182c1d60f03fd99fa74ef" translate="yes" xml:space="preserve">
          <source>The data argument passes in the value (if any) associated with the attribute. For example, if &lt;code&gt;&amp;amp;foo&lt;/code&gt; had been declared:</source>
          <target state="translated">El argumento de datos pasa el valor (si lo hay) asociado con el atributo. Por ejemplo, si se hubiera declarado &lt;code&gt;&amp;amp;foo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4057a2800ea2edef8acd376fce4a738947ca16f2" translate="yes" xml:space="preserve">
          <source>The data can be aggregated into obvious structures, especially if there's a large amount of data in each aggregate.</source>
          <target state="translated">Los datos pueden agregarse en estructuras obvias,especialmente si hay una gran cantidad de datos en cada agregado.</target>
        </trans-unit>
        <trans-unit id="f1737bbb402e005395886a66a62fefd166798f8a" translate="yes" xml:space="preserve">
          <source>The data is stored as a list of values from the time and times functions:</source>
          <target state="translated">Los datos se almacenan como una lista de valores de las funciones de tiempo y tiempos:</target>
        </trans-unit>
        <trans-unit id="083ecdb4eb83b1283f9d7370b6905eb300e214e7" translate="yes" xml:space="preserve">
          <source>The data may be retrieved using the &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; function if the underlying type of the byte stream is known.</source>
          <target state="translated">Los datos se pueden recuperar usando la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; si se conoce el tipo subyacente del flujo de bytes.</target>
        </trans-unit>
        <trans-unit id="71f7b6c4c962003ad0e8bfcff7666dfb17bf3d56" translate="yes" xml:space="preserve">
          <source>The data may be retrieved using the &lt;code&gt;unpack&lt;/code&gt; function if the underlying type of the byte stream is known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63af91535a394b6aa4a43c6ecef621c3c5bffb80" translate="yes" xml:space="preserve">
          <source>The data of the file is not immediately available. This attribute indicates that the file data has been physically moved to offline storage. This attribute is used by Remote Storage, the hierarchical storage management software. Applications should not arbitrarily change this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb2c0f943e4592858ab2d05373119174b2d2dda" translate="yes" xml:space="preserve">
          <source>The data was added as a Unicode string and when writing it out to disk, the &lt;code&gt;:utf8&lt;/code&gt; line discipline wasn't set by &lt;code&gt;Archive::Tar&lt;/code&gt; , so Perl tried to convert the string to ISO-8859 and failed. The written file now contains garbage.</source>
          <target state="translated">Los datos se agregaron como una cadena Unicode y, al escribirlos en el disco, &lt;code&gt;Archive::Tar&lt;/code&gt; no estableci&amp;oacute; la disciplina de l&amp;iacute;nea &lt;code&gt;:utf8&lt;/code&gt; , por lo que Perl intent&amp;oacute; convertir la cadena a ISO-8859 y fall&amp;oacute;. El archivo escrito ahora contiene basura.</target>
        </trans-unit>
        <trans-unit id="a586674f2132d76d932dd3ae8f2556dfbebc1fb6" translate="yes" xml:space="preserve">
          <source>The data was added as a Unicode string and when writing it out to disk, the &lt;code&gt;:utf8&lt;/code&gt; line discipline wasn't set by &lt;code&gt;Archive::Tar&lt;/code&gt;, so Perl tried to convert the string to ISO-8859 and failed. The written file now contains garbage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ccb288f67ba8fe0c8510721b3e70886d45432a" translate="yes" xml:space="preserve">
          <source>The date and day names in dates formatted by &lt;code&gt;strftime()&lt;/code&gt; could be manipulated to advantage by a malicious user able to subvert the &lt;code&gt;LC_DATE&lt;/code&gt; locale. (&quot;Look--it says I wasn't in the building on Sunday.&quot;)</source>
          <target state="translated">Los nombres de fecha y d&amp;iacute;a en fechas formateadas por &lt;code&gt;strftime()&lt;/code&gt; podr&amp;iacute;an ser manipulados de manera ventajosa por un usuario malintencionado capaz de subvertir la &lt;code&gt;LC_DATE&lt;/code&gt; regional LC_DATE . (&quot;Mire, dice que no estaba en el edificio el domingo&quot;).</target>
        </trans-unit>
        <trans-unit id="c40b16f78ce75cc859be91a0613f27d3f68c2364" translate="yes" xml:space="preserve">
          <source>The day of the year is in the list returned by the &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; function. Without an argument &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; uses the current time.</source>
          <target state="translated">El d&amp;iacute;a del a&amp;ntilde;o est&amp;aacute; en la lista devuelta por la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; . Sin un argumento, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; usa la hora actual.</target>
        </trans-unit>
        <trans-unit id="1c7a95dfcca9858a8405f98faf2612dd1935a1f7" translate="yes" xml:space="preserve">
          <source>The day of the year is in the list returned by the &lt;code&gt;localtime&lt;/code&gt; function. Without an argument &lt;code&gt;localtime&lt;/code&gt; uses the current time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d7e957f2b60e8e8af1a45f78007f3a710223c2" translate="yes" xml:space="preserve">
          <source>The days of just flinging strings around are over. It's well established that modern programs need to be capable of communicating funny accented letters, and things like euro symbols. This means that programmers need new habits. It's easy to program Unicode capable software, but it does require discipline to do it right.</source>
          <target state="translated">Los días en que sólo se tiraban cuerdas se han acabado.Está bien establecido que los programas modernos deben ser capaces de comunicar letras con acentos divertidos,y cosas como los símbolos del euro.Esto significa que los programadores necesitan nuevos hábitos.Es fácil programar software compatible con Unicode,pero requiere disciplina para hacerlo bien.</target>
        </trans-unit>
        <trans-unit id="7d9856be0d4d4aa47742843ac8ee15803c0a6dbf" translate="yes" xml:space="preserve">
          <source>The debugger does not currently work in conjunction with the &lt;b&gt;-W&lt;/b&gt; command-line switch, because it itself is not free of warnings.</source>
          <target state="translated">El depurador no funciona actualmente junto con el &lt;b&gt;modificador&lt;/b&gt; de l&amp;iacute;nea de comandos &lt;b&gt;-W&lt;/b&gt; , porque en s&amp;iacute; mismo no est&amp;aacute; libre de advertencias.</target>
        </trans-unit>
        <trans-unit id="bff20683f233c3b1a43e85dddcc26c68e9457e08" translate="yes" xml:space="preserve">
          <source>The debugger has numerous options settable using the &lt;code&gt;o&lt;/code&gt; command, either interactively or from the environment or an rc file. (./.perldb or ~/.perldb under Unix.)</source>
          <target state="translated">El depurador tiene numerosas opciones que se pueden configurar mediante el comando &lt;code&gt;o&lt;/code&gt; , ya sea de forma interactiva o desde el entorno o un archivo rc. (./.perldb o ~ / .perldb en Unix).</target>
        </trans-unit>
        <trans-unit id="2b8f02d76c62b5ac783a580e7846d6536aa86d85" translate="yes" xml:space="preserve">
          <source>The debugger probably contains enough configuration hooks that you won't ever have to modify it yourself. You may change the behaviour of the debugger from within the debugger using its &lt;code&gt;o&lt;/code&gt; command, from the command line via the &lt;code&gt;PERLDB_OPTS&lt;/code&gt; environment variable, and from customization files.</source>
          <target state="translated">El depurador probablemente contiene suficientes enlaces de configuraci&amp;oacute;n para que nunca tenga que modificarlo usted mismo. Puede cambiar el comportamiento del depurador desde dentro del depurador usando su comando &lt;code&gt;o&lt;/code&gt; , desde la l&amp;iacute;nea de comando a trav&amp;eacute;s de la variable de entorno &lt;code&gt;PERLDB_OPTS&lt;/code&gt; y desde los archivos de personalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="24bc00b2a7165b041b9ffd101df7fc63fd2218dd" translate="yes" xml:space="preserve">
          <source>The debugger prompt is something like</source>
          <target state="translated">El mensaje del depurador es algo así como</target>
        </trans-unit>
        <trans-unit id="f8e855d0dba7087b2dc163f59ea22e7610600301" translate="yes" xml:space="preserve">
          <source>The debugging output at compile time looks like this:</source>
          <target state="translated">La salida de depuración en tiempo de compilación se ve así:</target>
        </trans-unit>
        <trans-unit id="5cc26823ddc27c25d44117d4b49405e558f3683c" translate="yes" xml:space="preserve">
          <source>The declared variable is not introduced (is not visible) until after the current statement. Thus,</source>
          <target state="translated">La variable declarada no se introduce (no es visible)hasta después de la declaración actual.Por lo tanto,</target>
        </trans-unit>
        <trans-unit id="9ae51c467cb04a1b525475d0b1964978fbf97d39" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;:perlio&lt;/code&gt; layer retries &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; as described above; interrupted &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt; calls will always be retried.</source>
          <target state="translated">El valor predeterminado &lt;code&gt;:perlio&lt;/code&gt; capa perlio vuelve a intentar &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; como se describe anteriormente; las llamadas de &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; interrumpida y &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt; siempre se reintentar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="cc07a8196664bfcb190df25e9665ffed3bb1d528" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;:perlio&lt;/code&gt; layer retries &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; as described above; interrupted &lt;code&gt;wait&lt;/code&gt; and &lt;code&gt;waitpid&lt;/code&gt; calls will always be retried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af57631245798d230b9a42590aed5504edc7411" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;TIEHASH&lt;/code&gt; method stores &quot;extra&quot; arguments to tie() starting from offset 1 in the array referenced by &lt;code&gt;&lt;a href=&quot;../functions/tied&quot;&gt;tied(%tiedhash)&lt;/a&gt;&lt;/code&gt;; this is the same storage algorithm as in TIEHASH subroutine above. Hence, a typical package inheriting from &lt;b&gt;Tie::ExtraHash&lt;/b&gt; does not need to overwrite this method.</source>
          <target state="translated">El m&amp;eacute;todo predeterminado &lt;code&gt;TIEHASH&lt;/code&gt; almacena argumentos &quot;extra&quot; para tie () comenzando desde el desplazamiento 1 en la matriz referenciada por &lt;code&gt;&lt;a href=&quot;../functions/tied&quot;&gt;tied(%tiedhash)&lt;/a&gt;&lt;/code&gt; ; este es el mismo algoritmo de almacenamiento que en la subrutina TIEHASH anterior. Por lo tanto, un paquete t&amp;iacute;pico que hereda de &lt;b&gt;Tie :: ExtraHash&lt;/b&gt; no necesita sobrescribir este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="d8f318f7bfa1b89c48af52e1a8f99d1af186c96f" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;TIEHASH&lt;/code&gt; method stores &quot;extra&quot; arguments to tie() starting from offset 1 in the array referenced by &lt;code&gt;tied(%tiedhash)&lt;/code&gt;; this is the same storage algorithm as in TIEHASH subroutine above. Hence, a typical package inheriting from &lt;b&gt;Tie::ExtraHash&lt;/b&gt; does not need to overwrite this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e1aaf469c61ad0505179ca4ef693920d67bf62" translate="yes" xml:space="preserve">
          <source>The default behavior for matching can be changed, using various modifiers. Modifiers that relate to the interpretation of the pattern are listed just below. Modifiers that alter the way a pattern is used by Perl are detailed in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt; and &lt;a href=&quot;perlop#Gory-details-of-parsing-quoted-constructs&quot;&gt;&quot;Gory details of parsing quoted constructs&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bacf1d67275db56db4c207815d6942a42814176" translate="yes" xml:space="preserve">
          <source>The default behavior is restored with the &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; locale&lt;/code&gt; pragma, or upon reaching the end of the block enclosing &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . Note that &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; calls may be nested, and that what is in effect within an inner scope will revert to the outer scope's rules at the end of the inner scope.</source>
          <target state="translated">El comportamiento predeterminado se restaura con el pragma &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; locale&lt;/code&gt; , o al llegar al final del bloque que encierra &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . Tenga en cuenta que las llamadas a la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; pueden estar anidadas, y que lo que est&amp;aacute; en efecto dentro de un alcance interno volver&amp;aacute; a las reglas del alcance externo al final del alcance interno.</target>
        </trans-unit>
        <trans-unit id="7e3af61d974b45e2899ef4868c4839bde44f6b43" translate="yes" xml:space="preserve">
          <source>The default behavior is restored with the &lt;code&gt;no locale&lt;/code&gt; pragma, or upon reaching the end of the block enclosing &lt;code&gt;use locale&lt;/code&gt;. Note that &lt;code&gt;use locale&lt;/code&gt; calls may be nested, and that what is in effect within an inner scope will revert to the outer scope's rules at the end of the inner scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc252c3cc028e1614732f1daa492845981dc49a" translate="yes" xml:space="preserve">
          <source>The default behavior is to allow either VMS or Unix syntax on input and to return VMS syntax on output unless Unix syntax has been explicitly requested via the &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; CRTL feature.</source>
          <target state="translated">El comportamiento predeterminado es permitir la sintaxis VMS o Unix en la entrada y devolver la sintaxis VMS en la salida a menos que la sintaxis Unix se haya solicitado expl&amp;iacute;citamente a trav&amp;eacute;s de la funci&amp;oacute;n &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9abf79a3fe513de5ab5f6341a0a6954a2315c50" translate="yes" xml:space="preserve">
          <source>The default behaviour for what</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dccc7bf2df4ee545fc6ed04ddf3f01c1358bdf3" translate="yes" xml:space="preserve">
          <source>The default behaviour of file test operators is to use the simple mode bits as returned by the stat() family of system calls. However, many operating systems have additional features to define more complex access rights, for example ACLs (Access Control Lists). For such environments, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest&lt;/code&gt; may help the permission operators to return results more consistent with other tools.</source>
          <target state="translated">El comportamiento predeterminado de los operadores de prueba de archivos es utilizar los bits de modo simple devueltos por la familia stat () de llamadas al sistema. Sin embargo, muchos sistemas operativos tienen caracter&amp;iacute;sticas adicionales para definir derechos de acceso m&amp;aacute;s complejos, por ejemplo, ACL (listas de control de acceso). Para tales entornos, el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest&lt;/code&gt; puede ayudar a los operadores de permisos a devolver resultados m&amp;aacute;s consistentes con otras herramientas.</target>
        </trans-unit>
        <trans-unit id="b1be0363bbe710d46dddb1e57d79fb15e7183b86" translate="yes" xml:space="preserve">
          <source>The default behaviour of file test operators is to use the simple mode bits as returned by the stat() family of system calls. However, many operating systems have additional features to define more complex access rights, for example ACLs (Access Control Lists). For such environments, &lt;code&gt;use filetest&lt;/code&gt; may help the permission operators to return results more consistent with other tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3d08e8e13d1af1b8292d5961459da70c0fafa4" translate="yes" xml:space="preserve">
          <source>The default blacklist for Locale::Maketext also prevents use of the following methods in bracket notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e443bdcb2163a4573139a1dc139dfc380443bd8" translate="yes" xml:space="preserve">
          <source>The default blacklist is [qw|ftp|], as &lt;code&gt;/bin/ftp&lt;/code&gt; is rather unreliable.</source>
          <target state="translated">La lista negra predeterminada es [qw | ftp |], ya que &lt;code&gt;/bin/ftp&lt;/code&gt; no es confiable.</target>
        </trans-unit>
        <trans-unit id="ed0767b7e5643475189138ab836319b55629d878" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">El tamaño de la memoria intermedia por defecto es 4096.</target>
        </trans-unit>
        <trans-unit id="8bc00fd19b1a0edf6b2c0d08377dcc6685c37357" translate="yes" xml:space="preserve">
          <source>The default can be overridden by setting the environment variable PERLIO to a space separated list of layers (&lt;code&gt;unix&lt;/code&gt; or platform low level layer is always pushed first).</source>
          <target state="translated">El valor predeterminado se puede anular configurando la variable de entorno PERLIO en una lista de capas separadas por espacios (la capa de bajo nivel de &lt;code&gt;unix&lt;/code&gt; o plataforma siempre se empuja primero).</target>
        </trans-unit>
        <trans-unit id="34b91bbcac281ec343e20574aee63c504ba37c87" translate="yes" xml:space="preserve">
          <source>The default command shells on DOS descendant operating systems (such as they are) usually do not expand wildcard arguments supplied to programs. They consider it the application's job to handle that. This is commonly achieved by linking the application (in our case, perl) with startup code that the C runtime libraries usually provide. However, doing that results in incompatible perl versions (since the behavior of the argv expansion code differs depending on the compiler, and it is even buggy on some compilers). Besides, it may be a source of frustration if you use such a perl binary with an alternate shell that *does* expand wildcards.</source>
          <target state="translated">Los shells de comandos por defecto en los sistemas operativos descendientes del DOS (como son)no suelen ampliar los argumentos comodín suministrados a los programas.Consideran que el trabajo de la aplicación es manejar eso.Esto se logra comúnmente enlazando la aplicación (en nuestro caso,perl)con el código de inicio que las bibliotecas de tiempo de ejecución de C suelen proporcionar.Sin embargo,hacer eso resulta en versiones de perl incompatibles (ya que el comportamiento del código de expansión de argv difiere dependiendo del compilador,e incluso es un error en algunos compiladores).Además,puede ser una fuente de frustración si se usa un binario de perl con un shell alternativo que *hace*que se expandan los comodines.</target>
        </trans-unit>
        <trans-unit id="83afe3e15499ebffd14384524a4838c21ad9ac57" translate="yes" xml:space="preserve">
          <source>The default delivery policy of signals changed in Perl v5.8.0 from immediate (also known as &quot;unsafe&quot;) to deferred, also known as &quot;safe signals&quot;. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for more information.</source>
          <target state="translated">La pol&amp;iacute;tica de entrega predeterminada de se&amp;ntilde;ales cambi&amp;oacute; en Perl v5.8.0 de inmediato (tambi&amp;eacute;n conocido como &quot;inseguro&quot;) a diferido, tambi&amp;eacute;n conocido como &quot;se&amp;ntilde;ales seguras&quot;. Consulte &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d0b1ff51c2db16d895d3583e8ea3357f71cb7399" translate="yes" xml:space="preserve">
          <source>The default directory for this is the &lt;code&gt;plugins/CPAN::Plugin::Specfile&lt;/code&gt; directory in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e779baf9efd4d9532a5adc61d0ecb2fb82fd6ccb" translate="yes" xml:space="preserve">
          <source>The default exports of &lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt; do a complicated calculation when given a year value less than 1000. This leads to surprising results in many cases. See &lt;a href=&quot;#Year-Value-Interpretation&quot;&gt;&quot;Year Value Interpretation&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60de20ca32864441bb2ece16480b765adbc68d5" translate="yes" xml:space="preserve">
          <source>The default filename translation is roughly &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr|/.|./|;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">La traducci&amp;oacute;n predeterminada del nombre de archivo es aproximadamente &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr|/.|./|;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f540cdd4f440c064d7b134e9369a41da6337cfdb" translate="yes" xml:space="preserve">
          <source>The default filename translation is roughly &lt;code&gt;tr|/.|./|&lt;/code&gt;, swapping dots and slashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b0d8e26001e75f3757789c285eac1caf4919f4" translate="yes" xml:space="preserve">
          <source>The default for &lt;code&gt;$svShare&lt;/code&gt; is &lt;code&gt;&quot;rw&quot;&lt;/code&gt; which provides the same sharing as using regular perl &lt;code&gt;open()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189d94e0a4457922028f86938b0ce7520f054dc0" translate="yes" xml:space="preserve">
          <source>The default for this field, if it cannot be extracted, is to copy &lt;code&gt;$Config{osname}&lt;/code&gt;. The two may be differing in casing (OpenBSD vs openbsd).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141616a08e099cc503e54695ac44f2c439029e1f" translate="yes" xml:space="preserve">
          <source>The default for this option is off.</source>
          <target state="translated">El valor predeterminado de esta opción está desactivado.</target>
        </trans-unit>
        <trans-unit id="841e53532f4d336433d317d532f99affc692102b" translate="yes" xml:space="preserve">
          <source>The default hash function has been modified with the intention of making it harder to infer the hash seed.</source>
          <target state="translated">La función de hachís por defecto ha sido modificada con la intención de hacer más difícil la inferencia de la semilla de hachís.</target>
        </trans-unit>
        <trans-unit id="917b792910290b9f104f9e9bb1c1c376f6e62a1b" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
          <target state="translated">La implementación por defecto no hace nada.</target>
        </trans-unit>
        <trans-unit id="ba4a564c2fb984db1b9ac70f6b103f10fd3f2c07" translate="yes" xml:space="preserve">
          <source>The default in Perl 5.8.0 and later is to automatically use the &lt;code&gt;:perlio&lt;/code&gt; layer.</source>
          <target state="translated">El valor predeterminado en Perl 5.8.0 y posterior es usar autom&amp;aacute;ticamente la capa &lt;code&gt;:perlio&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5b539403338a04682d5065664097088c7ee8126" translate="yes" xml:space="preserve">
          <source>The default indent space length is three. You can use &lt;code&gt;indent_length&lt;/code&gt; to change the length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c034d8cea0ccefbe74b407c47763a2d7febf85bd" translate="yes" xml:space="preserve">
          <source>The default input &lt;b&gt;stream&lt;/b&gt; for your program, which if possible shouldn&amp;rsquo;t care where its data is coming from. Represented within a Perl program by the &lt;b&gt;filehandle&lt;/b&gt;&lt;code&gt;STDIN&lt;/code&gt; .</source>
          <target state="translated">El &lt;b&gt;flujo de&lt;/b&gt; entrada predeterminado para su programa, que si es posible no deber&amp;iacute;a importarle de d&amp;oacute;nde provienen sus datos. Representado dentro de un programa Perl por el &lt;b&gt;identificador de archivo &lt;/b&gt; &lt;code&gt;STDIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aeb8819256c2fefb2deae155f9c497a4ece2df39" translate="yes" xml:space="preserve">
          <source>The default input &lt;b&gt;stream&lt;/b&gt; for your program, which if possible shouldn&amp;rsquo;t care where its data is coming from. Represented within a Perl program by the &lt;b&gt;filehandle&lt;/b&gt;&lt;code&gt;STDIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65b453abcd65763f1788a5bfac88b6cf8e06702" translate="yes" xml:space="preserve">
          <source>The default input and pattern-searching space. The following pairs are equivalent:</source>
          <target state="translated">El espacio de entrada y de búsqueda de patrones por defecto.Los siguientes pares son equivalentes:</target>
        </trans-unit>
        <trans-unit id="cea52ce10c001ee673712587e9b895266781fd26" translate="yes" xml:space="preserve">
          <source>The default installation directory of Perl under PASE is /QOpenSys/perl. This can be modified if needed with Configure parameter -Dprefix=/some/dir.</source>
          <target state="translated">El directorio de instalación por defecto de Perl en PASE es /QOpenSys/perl.Esto puede ser modificado si es necesario con el parámetro de configuración -Dprefix=/some/dir.</target>
        </trans-unit>
        <trans-unit id="c02bd4590e22b3fdced3d71cd3c3281cc1a0a660" translate="yes" xml:space="preserve">
          <source>The default installation location for this release uses the traditional UNIX directory layout under /usr/local. This is the recommended location for most users, and will leave the Apple-supplied Perl and its modules undisturbed.</source>
          <target state="translated">La ubicación de instalación por defecto para esta versión utiliza la disposición tradicional del directorio UNIX en /usr/local.Esta es la ubicación recomendada para la mayoría de los usuarios,y dejará el Perl suministrado por Apple y sus módulos sin perturbar.</target>
        </trans-unit>
        <trans-unit id="2cf27b908bba58a1adbe27495a165db5ad0a8770" translate="yes" xml:space="preserve">
          <source>The default is 0.</source>
          <target state="translated">El valor por defecto es 0.</target>
        </trans-unit>
        <trans-unit id="b6e007f998a46a63459c07f21e8e579bcd3ddb9e" translate="yes" xml:space="preserve">
          <source>The default is 0;</source>
          <target state="translated">El valor por defecto es 0;</target>
        </trans-unit>
        <trans-unit id="2fede1b14731afaa7b9b9368ecc641901f9fa509" translate="yes" xml:space="preserve">
          <source>The default is 1 when &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt; are enabled, 0 otherwise;</source>
          <target state="translated">El valor predeterminado es 1 cuando las &lt;a href=&quot;../warnings&quot;&gt;advertencias&lt;/a&gt; est&amp;aacute;n habilitadas, 0 en caso contrario;</target>
        </trans-unit>
        <trans-unit id="b58a909406f580df200ff808a155d67c594063fb" translate="yes" xml:space="preserve">
          <source>The default is 1 when &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; are enabled, 0 otherwise;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515832f976590cbb3c71bc0d7d3d0a86a107732b" translate="yes" xml:space="preserve">
          <source>The default is 1.</source>
          <target state="translated">El valor por defecto es 1.</target>
        </trans-unit>
        <trans-unit id="895305ba9904fa755bf8e86c105e9e415a01803b" translate="yes" xml:space="preserve">
          <source>The default is 15 seconds. If you set this value to 0, no timeout will occur, but this is not recommended.</source>
          <target state="translated">El valor predeterminado es de 15 segundos.Si ajusta este valor a 0,no se producirá ningún tiempo de espera,pero no se recomienda.</target>
        </trans-unit>
        <trans-unit id="df47c42104d45d72a320a61c09a39d1b3d97871e" translate="yes" xml:space="preserve">
          <source>The default is 1;</source>
          <target state="translated">El valor por defecto es 1;</target>
        </trans-unit>
        <trans-unit id="f462ad28c3fd0db899a9c6ebf2e36d1b531777fa" translate="yes" xml:space="preserve">
          <source>The default is 4096.</source>
          <target state="translated">El valor por defecto es 4096.</target>
        </trans-unit>
        <trans-unit id="32bc975de1e1a4635ed927b65955622d6412a442" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d612105f440a62563ca32f22b838324e618ccdeb" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b05c3b862baf5dbb3b6628baf4b68b1570abdb4" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;1&lt;/code&gt; .</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e7ce922e57105bce0e95e91cfca276a6a4bf1ac" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;1&lt;/code&gt; for the root user and &lt;code&gt;0&lt;/code&gt; for normal users.</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;1&lt;/code&gt; para el usuario root y &lt;code&gt;0&lt;/code&gt; para usuarios normales.</target>
        </trans-unit>
        <trans-unit id="96a31382338c2cce7d4e50686f56e0e9ff7debef" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf2b1ea0900573472d5b071e3de19f7567ee6bd" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b961dbd8be6b25800dc4b37b67546efccad28f8e" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; .</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfbfc9925e2dd8470367ef4195617d71c6222d8e" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc194b0254a7cf1688815756a4f2837510b9b267" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; .</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a908c10942fd5ae6b565f1ce15f1bbfadcedfbe1" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40557fe038c23288a394f8bc56206a7b66f1744c" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;die&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb390eebfd5c04071c6f9ae432a01e30ec460a80" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;pod&lt;/code&gt; .</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;pod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a27550390154dabd1f6cbb3ac3486e6b597d5bd" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;pod&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0a0f1ca8eef2f6fbf6f39dbd7668ad5fbc612a" translate="yes" xml:space="preserve">
          <source>The default is Z_DEFAULT_COMPRESSION.</source>
          <target state="translated">El valor por defecto es Z_DEFAULT_COMPRESSION.</target>
        </trans-unit>
        <trans-unit id="ae93ce6388b29eb983caf1def75b439a9873a0b9" translate="yes" xml:space="preserve">
          <source>The default is Z_DEFAULT_STRATEGY.</source>
          <target state="translated">El valor por defecto es Z_DEFAULT_STRATEGY.</target>
        </trans-unit>
        <trans-unit id="c52e69ffb8153da22fcf2e0c6d6adcb6a6ff963d" translate="yes" xml:space="preserve">
          <source>The default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30329767ad59c2dc5630061d1ce79106ced2716" translate="yes" xml:space="preserve">
          <source>The default is no dictionary.</source>
          <target state="translated">El valor por defecto no es un diccionario.</target>
        </trans-unit>
        <trans-unit id="0eaff3b0b1b9eb661e7fc7bd656a07d77ba2a1ef" translate="yes" xml:space="preserve">
          <source>The default is not to cuddle.</source>
          <target state="translated">El defecto es no acurrucarse.</target>
        </trans-unit>
        <trans-unit id="7226202181b27bad8c72a76152482ae3e839b2c6" translate="yes" xml:space="preserve">
          <source>The default is to simply return the event package name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c65dc0d3752b5562d0e04006d66de6352709010" translate="yes" xml:space="preserve">
          <source>The default is to try &lt;code&gt;native&lt;/code&gt; , &lt;code&gt;tcp&lt;/code&gt; , &lt;code&gt;udp&lt;/code&gt; , &lt;code&gt;unix&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;stream&lt;/code&gt; , &lt;code&gt;console&lt;/code&gt; . Under systems with the Win32 API, &lt;code&gt;eventlog&lt;/code&gt; will be added as the first mechanism to try if &lt;code&gt;Win32::EventLog&lt;/code&gt; is available.</source>
          <target state="translated">El valor predeterminado es probar &lt;code&gt;native&lt;/code&gt; , &lt;code&gt;tcp&lt;/code&gt; , &lt;code&gt;udp&lt;/code&gt; , &lt;code&gt;unix&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;stream&lt;/code&gt; , &lt;code&gt;console&lt;/code&gt; . En sistemas con la API de Win32, el &lt;code&gt;eventlog&lt;/code&gt; se agregar&amp;aacute; como el primer mecanismo para probar si &lt;code&gt;Win32::EventLog&lt;/code&gt; est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="ae6954e08dfdc077f1f7dcc91f272e939cf877ea" translate="yes" xml:space="preserve">
          <source>The default is to try &lt;code&gt;native&lt;/code&gt;, &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;udp&lt;/code&gt;, &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;pipe&lt;/code&gt;, &lt;code&gt;stream&lt;/code&gt;, &lt;code&gt;console&lt;/code&gt;. Under systems with the Win32 API, &lt;code&gt;eventlog&lt;/code&gt; will be added as the first mechanism to try if &lt;code&gt;Win32::EventLog&lt;/code&gt; is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bb3e1a426b5cc38eac62d98ea857e63ed9b5dd" translate="yes" xml:space="preserve">
          <source>The default iterator variable in a &lt;code&gt;foreach&lt;/code&gt; loop if no other variable is supplied.</source>
          <target state="translated">La variable de iterador predeterminada en un bucle &lt;code&gt;foreach&lt;/code&gt; si no se proporciona ninguna otra variable.</target>
        </trans-unit>
        <trans-unit id="375ddf0ab7799023484d02f8a221ca6afd3b2054" translate="yes" xml:space="preserve">
          <source>The default memory limit is 2Mib. You can adjust the maximum read cache size by supplying the &lt;code&gt;memory&lt;/code&gt; option. The argument is the desired cache size, in bytes.</source>
          <target state="translated">El l&amp;iacute;mite de memoria predeterminado es 2Mib. Puede ajustar el tama&amp;ntilde;o m&amp;aacute;ximo de cach&amp;eacute; de lectura proporcionando la opci&amp;oacute;n de &lt;code&gt;memory&lt;/code&gt; . El argumento es el tama&amp;ntilde;o de cach&amp;eacute; deseado, en bytes.</target>
        </trans-unit>
        <trans-unit id="97d617432e38273ff2337188090afe707d321e91" translate="yes" xml:space="preserve">
          <source>The default method is ZIP_CM_DEFLATE.</source>
          <target state="translated">El método por defecto es ZIP_CM_DEFLATE.</target>
        </trans-unit>
        <trans-unit id="d06faea5104288d8b0b633dc0567b8b191f0df74" translate="yes" xml:space="preserve">
          <source>The default name of the new configuration file is &quot;libnet.cfg&quot;, and by default it is written to the current directory, unless otherwise specified using the -o option, &lt;code&gt;-o newfile&lt;/code&gt; .</source>
          <target state="translated">El nombre predeterminado del nuevo archivo de configuraci&amp;oacute;n es &quot;libnet.cfg&quot; y, de manera predeterminada, se escribe en el directorio actual, a menos que se especifique lo contrario usando la opci&amp;oacute;n &lt;code&gt;-o newfile&lt;/code&gt; , -o archivo nuevo .</target>
        </trans-unit>
        <trans-unit id="408dfa6f2b57602d832595e17787ee724e235423" translate="yes" xml:space="preserve">
          <source>The default name of the new configuration file is &quot;libnet.cfg&quot;, and by default it is written to the current directory, unless otherwise specified using the -o option, &lt;code&gt;-o newfile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5074809750e6c620d635552cb416989d3d15b2" translate="yes" xml:space="preserve">
          <source>The default name of the old configuration file is by default &quot;libnet.cfg&quot;, unless otherwise specified using the -i option, &lt;code&gt;-i oldfile&lt;/code&gt; , and it is searched first from the current directory, and then from your module path.</source>
          <target state="translated">El nombre predeterminado del archivo de configuraci&amp;oacute;n anterior es &quot;libnet.cfg&quot;, a menos que se especifique lo contrario usando la opci&amp;oacute;n &lt;code&gt;-i oldfile&lt;/code&gt; , -i archivo antiguo , y se busca primero desde el directorio actual y luego desde la ruta del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="1fef6f94288b1eff625c2f95ef7ecffd1ba05913" translate="yes" xml:space="preserve">
          <source>The default name of the old configuration file is by default &quot;libnet.cfg&quot;, unless otherwise specified using the -i option, &lt;code&gt;-i oldfile&lt;/code&gt;, and it is searched first from the current directory, and then from your module path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb6185afb472dae00827acf41154ba83b345446" translate="yes" xml:space="preserve">
          <source>The default normalizer just concatenates the arguments with character 28 in between. (In ASCII, this is called FS or control-\.) This always works correctly for functions with only one string argument, and also when the arguments never contain character 28. However, it can confuse certain argument lists:</source>
          <target state="translated">El normalizador por defecto sólo concatena los argumentos con el carácter 28 en medio.(En ASCII,esto se llama FS o control-\.)Esto siempre funciona correctamente para las funciones con un solo argumento de cadena,y también cuando los argumentos nunca contienen el carácter 28.Sin embargo,puede confundir ciertas listas de argumentos:</target>
        </trans-unit>
        <trans-unit id="b39e82de8afe051a851d53770ae84cf3c68d41cb" translate="yes" xml:space="preserve">
          <source>The default normalizer will turn this into something like &lt;code&gt;&quot;13\034ARRAY(0x436c1f)&quot;&lt;/code&gt; . That would be all right, except that a subsequent array of numbers might be stored at a different location even though it contains the same data. If this happens, &lt;code&gt;Memoize&lt;/code&gt; will think that the arguments are different, even though they are equivalent. In this case, a normalizer like this is appropriate:</source>
          <target state="translated">El normalizador predeterminado lo convertir&amp;aacute; en algo como &lt;code&gt;&quot;13\034ARRAY(0x436c1f)&quot;&lt;/code&gt; . Eso estar&amp;iacute;a bien, excepto que una matriz posterior de n&amp;uacute;meros podr&amp;iacute;a almacenarse en una ubicaci&amp;oacute;n diferente aunque contenga los mismos datos. Si esto sucede, &lt;code&gt;Memoize&lt;/code&gt; pensar&amp;aacute; que los argumentos son diferentes, aunque sean equivalentes. En este caso, un normalizador como este es apropiado:</target>
        </trans-unit>
        <trans-unit id="82517263c6d17f4e83cb2dad91556a271e1fb059" translate="yes" xml:space="preserve">
          <source>The default normalizer will turn this into something like &lt;code&gt;&quot;13\034ARRAY(0x436c1f)&quot;&lt;/code&gt;. That would be all right, except that a subsequent array of numbers might be stored at a different location even though it contains the same data. If this happens, &lt;code&gt;Memoize&lt;/code&gt; will think that the arguments are different, even though they are equivalent. In this case, a normalizer like this is appropriate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d60aed408340ddef56e731c14beba1f193a756" translate="yes" xml:space="preserve">
          <source>The default of building Perl statically may cause problems with complex applications like Tk: in that case consider building shared Perl</source>
          <target state="translated">El defecto de construir Perl estáticamente puede causar problemas con aplicaciones complejas como Tk:en ese caso considere construir Perl compartido</target>
        </trans-unit>
        <trans-unit id="ac5f6413f6edd9db793b85ce42ea2d862be3c9a0" translate="yes" xml:space="preserve">
          <source>The default operator mask for a newly created compartment is the ':default' optag.</source>
          <target state="translated">La máscara de operador por defecto para un compartimiento recién creado es el optag ':default'.</target>
        </trans-unit>
        <trans-unit id="cd7a35f6ae99c836f5d425b35999dec2510b2218" translate="yes" xml:space="preserve">
          <source>The default options gathered by Configure with the assistance of</source>
          <target state="translated">Las opciones predeterminadas reunidas por Configurar con la ayuda de</target>
        </trans-unit>
        <trans-unit id="340bacd1cab82a806d284b26719b4d768c188a8d" translate="yes" xml:space="preserve">
          <source>The default output &lt;b&gt;stream&lt;/b&gt; for nasty remarks that don&amp;rsquo;t belong in &lt;b&gt;standard output&lt;/b&gt;. Represented within a Perl program by the output&amp;gt; &lt;b&gt;filehandle&lt;/b&gt;&lt;code&gt;STDERR&lt;/code&gt; . You can use this stream explicitly, but the &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; built-ins write to your standard error stream automatically (unless trapped or otherwise intercepted).</source>
          <target state="translated">El &lt;b&gt;flujo de&lt;/b&gt; salida predeterminado para comentarios desagradables que no pertenecen a &lt;b&gt;la salida est&amp;aacute;ndar&lt;/b&gt; . Representado dentro de un programa Perl por la salida&amp;gt; &lt;b&gt;gestor de archivo &lt;/b&gt; &lt;code&gt;STDERR&lt;/code&gt; . Puede utilizar esta secuencia de forma expl&amp;iacute;cita, pero los &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; integrados de &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; y advertencia escriben autom&amp;aacute;ticamente en su secuencia de error est&amp;aacute;ndar (a menos que est&amp;eacute;n atrapados o interceptados).</target>
        </trans-unit>
        <trans-unit id="9d2c9ac156cbf55108641e915b384d66d9246e77" translate="yes" xml:space="preserve">
          <source>The default output &lt;b&gt;stream&lt;/b&gt; for nasty remarks that don&amp;rsquo;t belong in &lt;b&gt;standard output&lt;/b&gt;. Represented within a Perl program by the output&amp;gt; &lt;b&gt;filehandle&lt;/b&gt;&lt;code&gt;STDERR&lt;/code&gt;. You can use this stream explicitly, but the &lt;code&gt;die&lt;/code&gt; and &lt;code&gt;warn&lt;/code&gt; built-ins write to your standard error stream automatically (unless trapped or otherwise intercepted).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa254ec270a416bb3ac03f5a884b155a435c80cb" translate="yes" xml:space="preserve">
          <source>The default output &lt;b&gt;stream&lt;/b&gt; for your program, which if possible shouldn&amp;rsquo;t care where its data is going. Represented within a Perl program by the &lt;b&gt;filehandle&lt;/b&gt;&lt;code&gt;STDOUT&lt;/code&gt; .</source>
          <target state="translated">El &lt;b&gt;flujo de&lt;/b&gt; salida predeterminado para su programa, que si es posible no deber&amp;iacute;a importarle a d&amp;oacute;nde van sus datos. Representado dentro de un programa Perl por el &lt;b&gt;identificador de archivo &lt;/b&gt; &lt;code&gt;STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce1dc62266e22cc3e68d183b4a85d64622b5e7d5" translate="yes" xml:space="preserve">
          <source>The default output &lt;b&gt;stream&lt;/b&gt; for your program, which if possible shouldn&amp;rsquo;t care where its data is going. Represented within a Perl program by the &lt;b&gt;filehandle&lt;/b&gt;&lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96d4d616212a6cfd4d2816b5ab3f17c9db66319" translate="yes" xml:space="preserve">
          <source>The default output of self-referential structures can be &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed, but the nested references to &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">La salida predeterminada de las estructuras autorreferenciales se puede &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uar , pero las referencias anidadas a &lt;code&gt;$VAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab4464102ba1e6fbe0c2c60b9748efe43e91939d" translate="yes" xml:space="preserve">
          <source>The default output of self-referential structures can be &lt;code&gt;eval&lt;/code&gt;ed, but the nested references to &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f2d9e51d87e9b71a9bd992e69d11af3ccda88f" translate="yes" xml:space="preserve">
          <source>The default path for perl binary is /QOpenSys/perl/bin/perl. You'll want to symlink /QOpenSys/usr/bin/perl to this file so you don't have to modify your path.</source>
          <target state="translated">La ruta por defecto para el binario de perl es /QOpenSys/perl/bin/perl.Querrás enlazar /QOpenSys/usr/bin/perl a este archivo para no tener que modificar tu ruta.</target>
        </trans-unit>
        <trans-unit id="c0e7903465e131bba24e8f9fa0f5926ebf1b8dce" translate="yes" xml:space="preserve">
          <source>The default per-thread stack size for different platforms varies significantly, and is almost always far more than is needed for most applications. On Win32, Perl's makefile explicitly sets the default stack to 16 MB; on most other platforms, the system default is used, which again may be much larger than is needed.</source>
          <target state="translated">El tamaño de pila por hilo predeterminado para las diferentes plataformas varía significativamente,y casi siempre es mucho más de lo que se necesita para la mayoría de las aplicaciones.En Win32,el makefile de Perl establece explícitamente la pila por defecto en 16 MB;en la mayoría de las demás plataformas se utiliza el sistema por defecto,que también puede ser mucho mayor de lo necesario.</target>
        </trans-unit>
        <trans-unit id="02fbe3c9bc6d319100d5d82a643c83d45a2aaf27" translate="yes" xml:space="preserve">
          <source>The default per-thread stack size may be set at the start of the application through the use of the environment variable &lt;code&gt;PERL5_ITHREADS_STACK_SIZE&lt;/code&gt; :</source>
          <target state="translated">El tama&amp;ntilde;o de pila por subproceso predeterminado se puede establecer al inicio de la aplicaci&amp;oacute;n mediante el uso de la variable de entorno &lt;code&gt;PERL5_ITHREADS_STACK_SIZE&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="94af03e91a740f430511958dbcda39a82148e50f" translate="yes" xml:space="preserve">
          <source>The default per-thread stack size may be set at the start of the application through the use of the environment variable &lt;code&gt;PERL5_ITHREADS_STACK_SIZE&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17c04396f5d2338f66524479b64e4296e2bc5c4" translate="yes" xml:space="preserve">
          <source>The default perl executable is flexible enough to support most usages. However, one may want something yet more flexible; for example, one may want to find Perl DLL relatively to the location of the EXE file; or one may want to ignore the environment when setting the Perl-library search patch, etc.</source>
          <target state="translated">El ejecutable de perl por defecto es lo suficientemente flexible como para soportar la mayoría de los usos.Sin embargo,uno puede querer algo aún más flexible;por ejemplo,uno puede querer encontrar la DLL de Perl relativamente a la ubicación del archivo EXE;o uno puede querer ignorar el entorno al establecer el parche de búsqueda de la biblioteca de Perl,etc.</target>
        </trans-unit>
        <trans-unit id="7009bdcf386245a7873fc69dc2c48c3bfdcf71d9" translate="yes" xml:space="preserve">
          <source>The default permissions to use if a new file is created. The actual permissions will be modified by the user's umask, so you should probably use 0666 here. (See &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;.)</source>
          <target state="translated">Los permisos predeterminados que se utilizar&amp;aacute;n si se crea un archivo nuevo. Los permisos reales ser&amp;aacute;n modificados por la umask del usuario, por lo que probablemente deber&amp;iacute;a usar 0666 aqu&amp;iacute;. (Ver &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="81e2f33b41f0b680f7cab719bcc71740e182cd7b" translate="yes" xml:space="preserve">
          <source>The default permissions to use if a new file is created. The actual permissions will be modified by the user's umask, so you should probably use 0666 here. (See &lt;a href=&quot;perlfunc#umask&quot;&gt;&quot;umask&quot; in perlfunc&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af672db5716c0b823ab6d08666d2a653d572eae5" translate="yes" xml:space="preserve">
          <source>The default place to put the next value or input record when a &lt;code&gt;&amp;lt;FH&amp;gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; operation's result is tested by itself as the sole criterion of a &lt;code&gt;while&lt;/code&gt; test. Outside a &lt;code&gt;while&lt;/code&gt; test, this will not happen.</source>
          <target state="translated">El lugar predeterminado para colocar el siguiente valor o registro de entrada cuando un &lt;code&gt;&amp;lt;FH&amp;gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; o el resultado de &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; operaci&amp;oacute;n se prueba por s&amp;iacute; mismo como el &amp;uacute;nico criterio de una prueba &lt;code&gt;while&lt;/code&gt; . Fuera de una prueba de &lt;code&gt;while&lt;/code&gt; , esto no suceder&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="d37b151c3f1ab65346e3808827390e5bd84764e9" translate="yes" xml:space="preserve">
          <source>The default place to put the next value or input record when a &lt;code&gt;&amp;lt;FH&amp;gt;&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;readdir&lt;/code&gt; or &lt;code&gt;each&lt;/code&gt; operation's result is tested by itself as the sole criterion of a &lt;code&gt;while&lt;/code&gt; test. Outside a &lt;code&gt;while&lt;/code&gt; test, this will not happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5df9208ed1f779ba0f9d5864d277d9b22483511" translate="yes" xml:space="preserve">
          <source>The default rendering is top-down, so they're not in execution order. This form reflects the way the stack is used to parse and evaluate expressions; the add operates on the two terms below it in the tree.</source>
          <target state="translated">La representación por defecto es de arriba a abajo,por lo que no están en orden de ejecución.Esta forma refleja la forma en que la pila se utiliza para analizar y evaluar las expresiones;la suma funciona con los dos términos que están debajo de ella en el árbol.</target>
        </trans-unit>
        <trans-unit id="2fc20ab6a2146e41cd4461ac23c56be7f29f5c25" translate="yes" xml:space="preserve">
          <source>The default rounding mode is 'even'. By using &lt;code&gt;Math::BigFloat-&amp;gt;round_mode($round_mode);&lt;/code&gt; you can get and set the default mode for subsequent rounding. The usage of &lt;code&gt;$Math::BigFloat::$round_mode&lt;/code&gt; is no longer supported. The second parameter to the round functions then overrides the default temporarily.</source>
          <target state="translated">El modo de redondeo predeterminado es &quot;par&quot;. Usando &lt;code&gt;Math::BigFloat-&amp;gt;round_mode($round_mode);&lt;/code&gt; puede obtener y establecer el modo predeterminado para el redondeo posterior. Ya no se admite el uso de &lt;code&gt;$Math::BigFloat::$round_mode&lt;/code&gt; . El segundo par&amp;aacute;metro de las funciones redondas anula temporalmente el predeterminado.</target>
        </trans-unit>
        <trans-unit id="0c0082ed0ee0f68ac7247af3405f6e36532a7d14" translate="yes" xml:space="preserve">
          <source>The default set of layers should give acceptable results on all platforms</source>
          <target state="translated">El conjunto de capas por defecto debería dar resultados aceptables en todas las plataformas</target>
        </trans-unit>
        <trans-unit id="df981f37a11491520138a9699f03c2d8e3a6701d" translate="yes" xml:space="preserve">
          <source>The default set of layers should give acceptable results on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f212f2163021f600388dfedb85757788b2ee77" translate="yes" xml:space="preserve">
          <source>The default sort function is cmp, string comparison, which would sort &lt;code&gt;(1, 2, 10)&lt;/code&gt; into &lt;code&gt;(1, 10, 2)&lt;/code&gt; . &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; , used above, is the numerical comparison operator.</source>
          <target state="translated">La funci&amp;oacute;n de clasificaci&amp;oacute;n predeterminada es cmp, comparaci&amp;oacute;n de cadenas, que clasificar&amp;iacute;a &lt;code&gt;(1, 2, 10)&lt;/code&gt; en &lt;code&gt;(1, 10, 2)&lt;/code&gt; . &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; , usado arriba, es el operador de comparaci&amp;oacute;n num&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="353560b1cc4cc620cb2f91f0d6a0c54645b715f0" translate="yes" xml:space="preserve">
          <source>The default sort function is cmp, string comparison, which would sort &lt;code&gt;(1, 2, 10)&lt;/code&gt; into &lt;code&gt;(1, 10, 2)&lt;/code&gt;. &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;, used above, is the numerical comparison operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d032c7cba8f64635473f913417491617017d4ca8" translate="yes" xml:space="preserve">
          <source>The default stringification for version objects returns exactly the same string as was used to create it, whether you used &lt;code&gt;new()&lt;/code&gt; or &lt;code&gt;qv()&lt;/code&gt;, with one exception. The sole exception is if the object was created using &lt;code&gt;qv()&lt;/code&gt; and the initializer did not have two decimal places or a leading 'v' (both optional), then the stringified form will have a leading 'v' prepended, in order to support round-trip processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa9ec2a72f812d2fff5978a7051ec1d9ead2a46" translate="yes" xml:space="preserve">
          <source>The default subscript separator is &quot;\034&quot;, the same as SUBSEP in &lt;b&gt;awk&lt;/b&gt;.</source>
          <target state="translated">El separador de sub&amp;iacute;ndice predeterminado es &quot;\ 034&quot;, lo mismo que SUBSEP en &lt;b&gt;awk&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="497fecb3c603ebf0c33d9ba37b78e38f23ed6d1f" translate="yes" xml:space="preserve">
          <source>The default text formatter is &lt;a href=&quot;Pod::Text&quot;&gt;Pod::Text&lt;/a&gt;. The base class for Pod::Usage can be defined by pre-setting &lt;code&gt;$Pod::Usage::Formatter&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedbef30ad12f7c78358c3195161f7bf65ed2265" translate="yes" xml:space="preserve">
          <source>The default text formatter is &lt;a href=&quot;text&quot;&gt;Pod::Text&lt;/a&gt;. The base class for Pod::Usage can be defined by pre-setting &lt;code&gt;$Pod::Usage::Formatter&lt;/code&gt;</source>
          <target state="translated">El formateador de texto predeterminado es &lt;a href=&quot;text&quot;&gt;Pod :: Text&lt;/a&gt; . La clase base para Pod :: Usage se puede definir configurando previamente &lt;code&gt;$Pod::Usage::Formatter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2eca7e39567cc3a4e38f07441f8e4f7046f9b14f" translate="yes" xml:space="preserve">
          <source>The default type for the constants. If not specified &lt;code&gt;IV&lt;/code&gt; is assumed.</source>
          <target state="translated">El tipo predeterminado para las constantes. Si no se especifica, se asume &lt;code&gt;IV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a6f652439685a6a403073936eade467faa79602" translate="yes" xml:space="preserve">
          <source>The default typemap in the</source>
          <target state="translated">El mapa de caracteres por defecto en el</target>
        </trans-unit>
        <trans-unit id="82f3cb0c641077271c3068ea9c85e22ba715cfbb" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;div_scale&lt;/code&gt; is 40.</source>
          <target state="translated">El valor predeterminado para &lt;code&gt;div_scale&lt;/code&gt; es 40.</target>
        </trans-unit>
        <trans-unit id="609bf4918ead31f720f19323f5cf2348643f6d2e" translate="yes" xml:space="preserve">
          <source>The default value for CCHOME in the makefiles for Visual C++ may not be correct for some versions. Make sure the default exists and is valid.</source>
          <target state="translated">El valor por defecto de CCHOME en los makefiles para Visual C++puede no ser correcto para algunas versiones.Asegúrate de que el valor por defecto existe y es válido.</target>
        </trans-unit>
        <trans-unit id="80bc06aeaa38f855546b7a2a3a5c29a6a05fdf78" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;30&lt;/code&gt; seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f34862d6782defbe2c5b2a0445c8f00de39fa4d" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;XSINTERFACE_FUNC&lt;/code&gt; and &lt;code&gt;XSINTERFACE_FUNC_SET&lt;/code&gt; . An INTERFACE keyword with an empty list of functions can be omitted if INTERFACE_MACRO keyword is used.</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;XSINTERFACE_FUNC&lt;/code&gt; y &lt;code&gt;XSINTERFACE_FUNC_SET&lt;/code&gt; . Se puede omitir una palabra clave INTERFACE con una lista vac&amp;iacute;a de funciones si se usa la palabra clave INTERFACE_MACRO.</target>
        </trans-unit>
        <trans-unit id="32834cb885f5de67f85718b2d51a3b3a71e20354" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;XSINTERFACE_FUNC&lt;/code&gt; and &lt;code&gt;XSINTERFACE_FUNC_SET&lt;/code&gt;. An INTERFACE keyword with an empty list of functions can be omitted if INTERFACE_MACRO keyword is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae2f809fd681df4fcb45c0c13d99a0283fc66b8" translate="yes" xml:space="preserve">
          <source>The definition used for complex arguments of atan2() is</source>
          <target state="translated">La definición utilizada para los argumentos complejos de atan2()es</target>
        </trans-unit>
        <trans-unit id="6431fb44fb840f90a758f20a67dcf8b7a9374aa9" translate="yes" xml:space="preserve">
          <source>The del_dup() Method</source>
          <target state="translated">El método del_dup()</target>
        </trans-unit>
        <trans-unit id="4c063e0f96bfc07d5c7996a96961c2627b3a8bf5" translate="yes" xml:space="preserve">
          <source>The delimiter is used to determine the &lt;b&gt;exact&lt;/b&gt; whitespace to remove from the beginning of each line. All lines &lt;b&gt;must&lt;/b&gt; have at least the same starting whitespace (except lines only containing a newline) or perl will croak. Tabs and spaces can be mixed, but are matched exactly. One tab will not be equal to 8 spaces!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1ded41373481d9b3a2afdb892465f6f5d0d39d" translate="yes" xml:space="preserve">
          <source>The delimiter provided to &lt;code&gt;extract_bracketed&lt;/code&gt; was not one of &lt;code&gt;'()[]&amp;lt;&amp;gt;{}'&lt;/code&gt; .</source>
          <target state="translated">El delimitador proporcionado para &lt;code&gt;extract_bracketed&lt;/code&gt; no era uno de &lt;code&gt;'()[]&amp;lt;&amp;gt;{}'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c4b77b961d2e96dc174edd63ec1e4a27ffd7394" translate="yes" xml:space="preserve">
          <source>The delimiter provided to &lt;code&gt;extract_bracketed&lt;/code&gt; was not one of &lt;code&gt;'()[]&amp;lt;&amp;gt;{}'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6b6844fe43a8d8ec1aad6ff952638a46635ab3" translate="yes" xml:space="preserve">
          <source>The denizens of makemaker@perl.org.</source>
          <target state="translated">Los habitantes de makemaker@perl.org.</target>
        </trans-unit>
        <trans-unit id="04df92977d147f1a13e2b1c8b477d27313374630" translate="yes" xml:space="preserve">
          <source>The deprecated features will be grouped by the version of Perl in which they will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1156b058c0b8098efde49eb59cb1671d23c2fe" translate="yes" xml:space="preserve">
          <source>The dereferencing cases (as opposed to method-calling cases) are somewhat extended by the &lt;code&gt;postderef&lt;/code&gt; feature. For the details of that feature, consult &lt;a href=&quot;perlref#Postfix-Dereference-Syntax&quot;&gt;&quot;Postfix Dereference Syntax&quot; in perlref&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c12d31655a68b617bd8f8ac7d7b41ffa97d8df" translate="yes" xml:space="preserve">
          <source>The dereferencing cases (as opposed to method-calling cases) are somewhat extended by the experimental &lt;code&gt;postderef&lt;/code&gt; feature. For the details of that feature, consult &lt;a href=&quot;perlref#Postfix-Dereference-Syntax&quot;&gt;Postfix Dereference Syntax in perlref&lt;/a&gt;.</source>
          <target state="translated">Los casos de desreferenciaci&amp;oacute;n (a diferencia de los casos de llamadas a m&amp;eacute;todos) est&amp;aacute;n algo extendidos por la caracter&amp;iacute;stica experimental &lt;code&gt;postderef&lt;/code&gt; . Para los detalles de esa caracter&amp;iacute;stica, consulte &lt;a href=&quot;perlref#Postfix-Dereference-Syntax&quot;&gt;Sintaxis de desreferencia de Postfix en perlref&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e1ecac0ff0943f872a0e4773ff40533e7fc7967" translate="yes" xml:space="preserve">
          <source>The description will also include tags for other special editions, like &quot;R2&quot;, &quot;Media Center&quot;, &quot;Tablet PC&quot;, or &quot;Starter Edition&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06b4b9a1d8e7058531ada60d67614dbcf01dfd0" translate="yes" xml:space="preserve">
          <source>The deserializing hook called on the object during deserialization. But wait: if we're deserializing, there's no object yet... right?</source>
          <target state="translated">El gancho de deserialización llamó al objeto durante la deserialización.Pero espera:si estamos deserializando,no hay ningún objeto todavía...¿verdad?</target>
        </trans-unit>
        <trans-unit id="8a2f99ef5bda346c32f63e70a7361acb83da8b02" translate="yes" xml:space="preserve">
          <source>The design intent is for &lt;code&gt;\d&lt;/code&gt; to exactly match the set of characters that can safely be used with &quot;normal&quot; big-endian positional decimal syntax, where, for example 123 means one 'hundred', plus two 'tens', plus three 'ones'. This positional notation does not necessarily apply to characters that match the other type of &quot;digit&quot;, &lt;code&gt;\p{Numeric_Type=Digit}&lt;/code&gt; , and so &lt;code&gt;\d&lt;/code&gt; doesn't match them.</source>
          <target state="translated">La intenci&amp;oacute;n del dise&amp;ntilde;o es que &lt;code&gt;\d&lt;/code&gt; coincida exactamente con el conjunto de caracteres que se pueden usar de forma segura con la sintaxis decimal posicional de big-endian &quot;normal&quot;, donde, por ejemplo, 123 significa cien, m&amp;aacute;s dos decenas, m&amp;aacute;s tres. unos '. Esta notaci&amp;oacute;n posicional no se aplica necesariamente a los caracteres que coinciden con el otro tipo de &quot;d&amp;iacute;gito&quot;, &lt;code&gt;\p{Numeric_Type=Digit}&lt;/code&gt; , por lo que &lt;code&gt;\d&lt;/code&gt; no los coincide.</target>
        </trans-unit>
        <trans-unit id="f61094774e8ce7d5c193ad9edc881d479e0d9584" translate="yes" xml:space="preserve">
          <source>The design intent is for &lt;code&gt;\d&lt;/code&gt; to exactly match the set of characters that can safely be used with &quot;normal&quot; big-endian positional decimal syntax, where, for example 123 means one 'hundred', plus two 'tens', plus three 'ones'. This positional notation does not necessarily apply to characters that match the other type of &quot;digit&quot;, &lt;code&gt;\p{Numeric_Type=Digit}&lt;/code&gt;, and so &lt;code&gt;\d&lt;/code&gt; doesn't match them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a51af6f52e45aaf611688acf5b39dc61f9ae40" translate="yes" xml:space="preserve">
          <source>The desire of users to express filenames of the form &lt;code&gt;&amp;lt;Foo$Dir&amp;gt;.Bar&lt;/code&gt; on the command line unquoted causes problems, too: &lt;a href=&quot;perlop#qx%2FSTRING%2F&quot;&gt;&lt;code&gt;``&lt;/code&gt;&lt;/a&gt; command output capture has to perform a guessing game. It assumes that a string &lt;code&gt;&amp;lt;[^&amp;lt;&amp;gt;]+\$[^&amp;lt;&amp;gt;]&amp;gt;&lt;/code&gt; is a reference to an environment variable, whereas anything else involving &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt; is redirection, and generally manages to be 99% right. Of course, the problem remains that scripts cannot rely on any Unix tools being available, or that any tools found have Unix-like command line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ec3b1b57d74d9cf92c20c7537d430a4cb91982" translate="yes" xml:space="preserve">
          <source>The desire of users to express filenames of the form &lt;code&gt;&amp;lt;Foo$Dir&amp;gt;.Bar&lt;/code&gt; on the command line unquoted causes problems, too: &lt;code&gt;``&lt;/code&gt; command output capture has to perform a guessing game. It assumes that a string &lt;code&gt;&amp;lt;[^&amp;lt;&amp;gt;]+\$[^&amp;lt;&amp;gt;]&amp;gt;&lt;/code&gt; is a reference to an environment variable, whereas anything else involving &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt; is redirection, and generally manages to be 99% right. Of course, the problem remains that scripts cannot rely on any Unix tools being available, or that any tools found have Unix-like command line arguments.</source>
          <target state="translated">El deseo de los usuarios de expresar nombres de archivo de la forma &lt;code&gt;&amp;lt;Foo$Dir&amp;gt;.Bar&lt;/code&gt; en la l&amp;iacute;nea de comando sin comillas tambi&amp;eacute;n causa problemas: &lt;code&gt;``&lt;/code&gt; la captura de salida del comando tiene que realizar un juego de adivinanzas. Se asume que una cadena &lt;code&gt;&amp;lt;[^&amp;lt;&amp;gt;]+\$[^&amp;lt;&amp;gt;]&amp;gt;&lt;/code&gt; es una referencia a una variable de entorno, mientras que cualquier otra cosa que involucre a &lt;code&gt;&amp;lt;&lt;/code&gt; o &lt;code&gt;&amp;gt;&lt;/code&gt; es una redirecci&amp;oacute;n, y generalmente logra ser 99% correcta. Por supuesto, el problema sigue siendo que los scripts no pueden depender de que haya ninguna herramienta Unix disponible, o que cualquier herramienta encontrada tenga argumentos de l&amp;iacute;nea de comandos similares a Unix.</target>
        </trans-unit>
        <trans-unit id="a11af240187e8ce0ea57c0f5d9817fa72798ba59" translate="yes" xml:space="preserve">
          <source>The desired exit status to pass to the &lt;b&gt;exit()&lt;/b&gt; function. This should be an integer, or else the string &quot;NOEXIT&quot; to indicate that control should simply be returned without terminating the invoking process.</source>
          <target state="translated">El estado de salida deseado para pasar a la funci&amp;oacute;n &lt;b&gt;exit ()&lt;/b&gt; . Debe ser un n&amp;uacute;mero entero, o bien la cadena &quot;NOEXIT&quot; para indicar que el control simplemente debe devolverse sin terminar el proceso de invocaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a47bdc95431692c8deb0f97084523a81a5887de3" translate="yes" xml:space="preserve">
          <source>The desired level of &quot;verboseness&quot; to use when printing the usage message. If the corresponding value is 0, then only the &quot;SYNOPSIS&quot; section of the pod documentation is printed. If the corresponding value is 1, then the &quot;SYNOPSIS&quot; section, along with any section entitled &quot;OPTIONS&quot;, &quot;ARGUMENTS&quot;, or &quot;OPTIONS AND ARGUMENTS&quot; is printed. If the corresponding value is 2 or more then the entire manpage is printed.</source>
          <target state="translated">El nivel deseado de &quot;verborrea&quot; para usar cuando se imprima el mensaje de uso.Si el valor correspondiente es 0,entonces sólo se imprime la sección de &quot;SINOPSIS&quot; de la documentación de la vaina.Si el valor correspondiente es 1,entonces se imprime la sección &quot;SINOPSIS&quot;,junto con cualquier sección titulada &quot;OPCIONES&quot;,&quot;ARGUMENTOS&quot;,u &quot;OPCIONES Y ARGUMENTOS&quot;.Si el valor correspondiente es 2 o más,entonces se imprime la página entera.</target>
        </trans-unit>
        <trans-unit id="a260934a8f226c98347f68c3fcc330ccf45f5926" translate="yes" xml:space="preserve">
          <source>The desired level of &quot;verboseness&quot; to use when printing the usage message. If the value is 0, then only the &quot;SYNOPSIS&quot; section of the pod documentation is printed. If the value is 1, then the &quot;SYNOPSIS&quot; section, along with any section entitled &quot;OPTIONS&quot;, &quot;ARGUMENTS&quot;, or &quot;OPTIONS AND ARGUMENTS&quot; is printed. If the corresponding value is 2 or more then the entire manpage is printed, using &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; if available; otherwise &lt;a href=&quot;Pod::Text&quot;&gt;Pod::Text&lt;/a&gt; is used for the formatting. For better readability, the all-capital headings are downcased, e.g. &lt;code&gt;SYNOPSIS&lt;/code&gt; =&amp;gt; &lt;code&gt;Synopsis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3e64d006f3001c3df4472f5962fd664df30c48" translate="yes" xml:space="preserve">
          <source>The desired level of verbosity to use:</source>
          <target state="translated">El nivel deseado de verbosidad a utilizar:</target>
        </trans-unit>
        <trans-unit id="d21703722988891fb3f110d6e6d4a04ddd13048a" translate="yes" xml:space="preserve">
          <source>The destination directory is C:\Symbian\perl\X.Y.Z. For more details, see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8c4d84dbcf0f5f2d69ca16b4ced3235af3fefd" translate="yes" xml:space="preserve">
          <source>The destination for the option must be an array or array reference.</source>
          <target state="translated">El destino de la opción debe ser una matriz o referencia de matriz.</target>
        </trans-unit>
        <trans-unit id="409e973fa41301f9011188be107ecc88ef0e437c" translate="yes" xml:space="preserve">
          <source>The details for those items which may deviate from what this emulation returns and what a native &lt;code&gt;nl_langinfo()&lt;/code&gt; would return are specified in &lt;a href=&quot;I18N::Langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2940ce84da888fbb72c23c514c9cdd4e2c7bab4a" translate="yes" xml:space="preserve">
          <source>The detection algorithm works something like this:</source>
          <target state="translated">El algoritmo de detección funciona algo así:</target>
        </trans-unit>
        <trans-unit id="8e261118eabba6fd9f550b8549a8f692c8f65be6" translate="yes" xml:space="preserve">
          <source>The develop phase's prereqs are libraries needed to work on the distribution's source code as its author does. These tools might be needed to build a release tarball, to run author-only tests, or to perform other tasks related to developing new versions of the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd0b50108607e59344e69b0de3bc9fd4f301247" translate="yes" xml:space="preserve">
          <source>The diagnostics Pragma</source>
          <target state="translated">El diagnóstico Pragma</target>
        </trans-unit>
        <trans-unit id="9e8272da23da05393615d77b37bcea56278deff5" translate="yes" xml:space="preserve">
          <source>The diagnostics of this test normally just refer to 'the object'. If you'd like them to be more specific, you can supply an $object_name (for example 'Test customer').</source>
          <target state="translated">Los diagnósticos de esta prueba normalmente sólo se refieren al &quot;objeto&quot;.Si desea que sean más específicos,puede proporcionar un $nombre_del_objeto (por ejemplo 'Cliente de prueba').</target>
        </trans-unit>
        <trans-unit id="67027b213e7e98e89fd8e5ebf75f4789f0806d73" translate="yes" xml:space="preserve">
          <source>The diagram below represents a single source stream, with the flow of source from a Perl script file on the left into the Perl parser on the right. This is how Perl normally operates.</source>
          <target state="translated">El siguiente diagrama representa un flujo de fuente única,con el flujo de fuente de un archivo de escritura Perl a la izquierda en el analizador de Perl a la derecha.Así es como funciona normalmente el Perl.</target>
        </trans-unit>
        <trans-unit id="09d12bc25e1c17128a784d1b2ff7f2b3ea6c5f9e" translate="yes" xml:space="preserve">
          <source>The die on line 4 pops the context stack back down to the CxEVAL, leaving it as:</source>
          <target state="translated">El dado en la línea 4 hace saltar la pila de contexto de nuevo a la CxEVAL,dejándola como:</target>
        </trans-unit>
        <trans-unit id="930610eed704196a6c02e9606fed36fd7cdf0a59" translate="yes" xml:space="preserve">
          <source>The die pops the first &lt;code&gt;CxEVAL&lt;/code&gt; off the context stack, sets &lt;code&gt;PL_restartop&lt;/code&gt; from it, does a &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; , and control returns to the top &lt;code&gt;docatch&lt;/code&gt; . This then starts another third-level runops level, which executes the nextstate, pushmark and die ops on line 4. At the point that the second &lt;code&gt;pp_die&lt;/code&gt; is called, the C call stack looks exactly like that above, even though we are no longer within an inner eval; this is because of the optimization mentioned earlier. However, the context stack now looks like this, ie with the top CxEVAL popped:</source>
          <target state="translated">El dado saca el primer &lt;code&gt;CxEVAL&lt;/code&gt; de la pila de contexto, establece &lt;code&gt;PL_restartop&lt;/code&gt; a partir de &amp;eacute;l, realiza un &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; y el control vuelve al &lt;code&gt;docatch&lt;/code&gt; superior . Esto luego inicia otro nivel de runops de tercer nivel, que ejecuta las operaciones nextstate, pushmark y die en la l&amp;iacute;nea 4. En el punto en que se llama al segundo &lt;code&gt;pp_die&lt;/code&gt; , la pila de llamadas C se ve exactamente como la anterior, aunque ya no estamos dentro una evaluaci&amp;oacute;n interna; esto se debe a la optimizaci&amp;oacute;n mencionada anteriormente. Sin embargo, la pila de contexto ahora se ve as&amp;iacute;, es decir, con el CxEVAL superior desplegado:</target>
        </trans-unit>
        <trans-unit id="bbbbc185d1013ac982e3992e43afeb11193aeae4" translate="yes" xml:space="preserve">
          <source>The die pops the first &lt;code&gt;CxEVAL&lt;/code&gt; off the context stack, sets &lt;code&gt;PL_restartop&lt;/code&gt; from it, does a &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt;, and control returns to the top &lt;code&gt;docatch&lt;/code&gt;. This then starts another third-level runops level, which executes the nextstate, pushmark and die ops on line 4. At the point that the second &lt;code&gt;pp_die&lt;/code&gt; is called, the C call stack looks exactly like that above, even though we are no longer within an inner eval; this is because of the optimization mentioned earlier. However, the context stack now looks like this, ie with the top CxEVAL popped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed5acbfe1a4a69e2eecb34b13c8306880da82cf" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;extract_tagged&lt;/code&gt; and the anonymous subroutines generated by &lt;code&gt;gen_extract_tagged&lt;/code&gt; , is that those generated subroutines:</source>
          <target state="translated">La diferencia entre &lt;code&gt;extract_tagged&lt;/code&gt; y las subrutinas an&amp;oacute;nimas generadas por &lt;code&gt;gen_extract_tagged&lt;/code&gt; , es que las subrutinas generadas:</target>
        </trans-unit>
        <trans-unit id="4192a9e6844188f610795705ae7b4477088fe04b" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;extract_tagged&lt;/code&gt; and the anonymous subroutines generated by &lt;code&gt;gen_extract_tagged&lt;/code&gt;, is that those generated subroutines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6f28f40692ae97e2ea2e8080e59d267505ccf0" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;minlen&lt;/code&gt; and &lt;code&gt;minlenret&lt;/code&gt; can be seen in the following pattern:</source>
          <target state="translated">La diferencia entre &lt;code&gt;minlen&lt;/code&gt; y &lt;code&gt;minlenret&lt;/code&gt; se puede ver en el siguiente patr&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="f8ae9fbf98646f2ef8526e7b39bf817f11262438" translate="yes" xml:space="preserve">
          <source>The difference between a block and a script is that scripts are closer to the linguistic notion of a set of code points required to represent languages, while block is more of an artifact of the Unicode code point numbering and separation into blocks of consecutive code points (so far the size of a block is some multiple of 16, like 128 or 256).</source>
          <target state="translated">La diferencia entre un bloque y una escritura es que las escrituras se acercan más a la noción lingüística de un conjunto de puntos de código necesarios para representar los idiomas,mientras que el bloque es más bien un artefacto de la numeración de puntos de código Unicode y la separación en bloques de puntos de código consecutivos (hasta ahora el tamaño de un bloque es algún múltiplo de 16,como 128 o 256).</target>
        </trans-unit>
        <trans-unit id="4e0fd5df1eb8c3e578915cd6f8934c4fe5cf676a" translate="yes" xml:space="preserve">
          <source>The difference between these two properties involves characters that are used in multiple scripts. For example the digits '0' through '9' are used in many parts of the world. These are placed in a script named &lt;code&gt;Common&lt;/code&gt; . Other characters are used in just a few scripts. For example, the &lt;code&gt;&quot;KATAKANA-HIRAGANA DOUBLE HYPHEN&quot;&lt;/code&gt; is used in both Japanese scripts, Katakana and Hiragana, but nowhere else. The &lt;code&gt;Script&lt;/code&gt; property places all characters that are used in multiple scripts in the &lt;code&gt;Common&lt;/code&gt; script, while the &lt;code&gt;Script_Extensions&lt;/code&gt; property places those that are used in only a few scripts into each of those scripts; while still using &lt;code&gt;Common&lt;/code&gt; for those used in many scripts. Thus both these match:</source>
          <target state="translated">La diferencia entre estas dos propiedades implica caracteres que se utilizan en varios guiones. Por ejemplo, los d&amp;iacute;gitos del '0' al '9' se utilizan en muchas partes del mundo. Estos se colocan en un script denominado &lt;code&gt;Common&lt;/code&gt; . Otros caracteres se utilizan en unos pocos guiones. Por ejemplo, &lt;code&gt;&quot;KATAKANA-HIRAGANA DOUBLE HYPHEN&quot;&lt;/code&gt; se usa en ambos alfabetos japoneses, Katakana e Hiragana, pero en ning&amp;uacute;n otro lugar. La propiedad &lt;code&gt;Script&lt;/code&gt; coloca todos los caracteres que se utilizan en varios scripts en el script &lt;code&gt;Common&lt;/code&gt; , mientras que la propiedad &lt;code&gt;Script_Extensions&lt;/code&gt; coloca los que se utilizan en s&amp;oacute;lo unos pocos scripts en cada uno de esos scripts; mientras sigue utilizando &lt;code&gt;Common&lt;/code&gt; para los que se utilizan en muchos scripts. Por lo tanto, ambos coinciden:</target>
        </trans-unit>
        <trans-unit id="6e605910d48501bdad38af7496eb4f572c4cfa33" translate="yes" xml:space="preserve">
          <source>The difference between these two properties involves characters that are used in multiple scripts. For example the digits '0' through '9' are used in many parts of the world. These are placed in a script named &lt;code&gt;Common&lt;/code&gt;. Other characters are used in just a few scripts. For example, the &lt;code&gt;&quot;KATAKANA-HIRAGANA DOUBLE HYPHEN&quot;&lt;/code&gt; is used in both Japanese scripts, Katakana and Hiragana, but nowhere else. The &lt;code&gt;Script&lt;/code&gt; property places all characters that are used in multiple scripts in the &lt;code&gt;Common&lt;/code&gt; script, while the &lt;code&gt;Script_Extensions&lt;/code&gt; property places those that are used in only a few scripts into each of those scripts; while still using &lt;code&gt;Common&lt;/code&gt; for those used in many scripts. Thus both these match:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc2b3e05da478b77fc3b12b2fa311b0e5889311" translate="yes" xml:space="preserve">
          <source>The difference here is the addition of the temporary variable &lt;code&gt;$data&lt;/code&gt;. This is used to store a copy of the compressed data while it is being uncompressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f324cedd823e628f1ed8025386bfb26cab3778ab" translate="yes" xml:space="preserve">
          <source>The difference is clear to see and the dereferencing approach is slower. While it managed to execute an average of 628,930 times a second during our test, the direct approach managed to run an additional 204,403 times, unfortunately. Unfortunately, because there are many examples of code written using the multiple layer direct variable access, and it's usually horrible. It is, however, minusculy faster. The question remains whether the minute gain is actually worth the eyestrain, or the loss of maintainability.</source>
          <target state="translated">La diferencia es clara de ver y el enfoque de la derivación es más lento.Mientras que logró ejecutar un promedio de 628.930 veces por segundo durante nuestra prueba,el enfoque directo logró ejecutar 204.403 veces adicionales,desafortunadamente.Desafortunadamente,porque hay muchos ejemplos de código escrito usando la variable de acceso directo de múltiples capas,y suele ser horrible.Es,sin embargo,minuscólicamente más rápido.La pregunta sigue siendo si la ganancia diminuta vale realmente la pena el esfuerzo de la vista,o la pérdida de la capacidad de mantenimiento.</target>
        </trans-unit>
        <trans-unit id="c9d466e6cdc3e3b171ba671cc22acace7243054b" translate="yes" xml:space="preserve">
          <source>The difference is the sigil, that special character in front of the array name. The &lt;code&gt;$&lt;/code&gt; sigil means &quot;exactly one item&quot;, while the &lt;code&gt;@&lt;/code&gt; sigil means &quot;zero or more items&quot;. The &lt;code&gt;$&lt;/code&gt; gets you a single scalar, while the &lt;code&gt;@&lt;/code&gt; gets you a list.</source>
          <target state="translated">La diferencia es el sigilo, ese car&amp;aacute;cter especial delante del nombre de la matriz. El &lt;code&gt;$&lt;/code&gt; sigil significa &quot;exactamente un elemento&quot;, mientras que el &lt;code&gt;@&lt;/code&gt; sigil significa &quot;cero o m&amp;aacute;s elementos&quot;. El &lt;code&gt;$&lt;/code&gt; le da un solo escalar, mientras que el &lt;code&gt;@&lt;/code&gt; le da una lista.</target>
        </trans-unit>
        <trans-unit id="82ff75d7fe49900a75f8b7a1628df2b78931946c" translate="yes" xml:space="preserve">
          <source>The difference to &lt;code&gt;incr_reset&lt;/code&gt; is that only text until the parse error occurred is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b0921f524dbbf7564616e5853365d0c767bfc6" translate="yes" xml:space="preserve">
          <source>The digest can be delivered in three formats:</source>
          <target state="translated">El resumen puede ser entregado en tres formatos:</target>
        </trans-unit>
        <trans-unit id="0155d0c091234cee22dc790957626f27306487e0" translate="yes" xml:space="preserve">
          <source>The direction you must follow the great circle (also known as</source>
          <target state="translated">La dirección en la que debes seguir el gran círculo (también conocido como</target>
        </trans-unit>
        <trans-unit id="03d134305af0df1045ab396312ef86cfab55c5d9" translate="yes" xml:space="preserve">
          <source>The direction you would have to go from London to Tokyo (in radians, straight north being zero, straight east being pi/2).</source>
          <target state="translated">La dirección en la que tendrías que ir de Londres a Tokio (en radianes,la recta norte es cero,la recta este es pi/2).</target>
        </trans-unit>
        <trans-unit id="9159a72a045b505fc788bec97c5202fb7f87247c" translate="yes" xml:space="preserve">
          <source>The directory portion may or may not be returned with a trailing '/'.</source>
          <target state="translated">La parte del directorio puede o no ser devuelta con un &quot;/&quot;.</target>
        </trans-unit>
        <trans-unit id="efd54b0e8774d4521e37e9c7dad7074640dfad53" translate="yes" xml:space="preserve">
          <source>The directory you are put into when you log in. On a Unix system, the name is often placed into &lt;code&gt;$ENV{HOME}&lt;/code&gt; or &lt;code&gt;$ENV{LOGDIR}&lt;/code&gt; by</source>
          <target state="translated">El directorio en el que se le coloca cuando inicia sesi&amp;oacute;n. En un sistema Unix, el nombre a menudo se coloca en &lt;code&gt;$ENV{HOME}&lt;/code&gt; o &lt;code&gt;$ENV{LOGDIR}&lt;/code&gt; por</target>
        </trans-unit>
        <trans-unit id="0f834768c044521ed2139a347066ecd1f6fd454d" translate="yes" xml:space="preserve">
          <source>The directory, if specified, must appear immediately following the &lt;b&gt;-x&lt;/b&gt; with no intervening whitespace.</source>
          <target state="translated">El directorio, si se especifica, debe aparecer inmediatamente despu&amp;eacute;s de &lt;b&gt;-x&lt;/b&gt; sin espacios en blanco intermedios.</target>
        </trans-unit>
        <trans-unit id="d7f8724048da79577878989633dd2a49c69c9ec2" translate="yes" xml:space="preserve">
          <source>The display name describes the native Windows version, so even on a 32-bit Perl this function may return a &quot;Windows ... (64-bit)&quot; name when running on a 64-bit Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33156bb6057d33c4b599fbfc979b33f776601d44" translate="yes" xml:space="preserve">
          <source>The distinction between &lt;code&gt;OBJECT&lt;/code&gt; and &lt;code&gt;LDFROM&lt;/code&gt;: &lt;code&gt;OBJECT&lt;/code&gt; is the make target, so make will try to build it. However, &lt;code&gt;LDFROM&lt;/code&gt; is what will actually be linked together to make the shared object or static library (SO/SL), so if you override it, make sure it includes what you want to make the final SO/SL, almost certainly including the XS basename with &lt;code&gt;$(OBJ_EXT)&lt;/code&gt; appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52decfdd93c450a71874ee33c51b4afa2f1bd5c0" translate="yes" xml:space="preserve">
          <source>The distribution is distributed under the terms of the GNU General Public License version 2 (&lt;a href=&quot;http://opensource.org/licenses/GPL-2.0&quot;&gt;http://opensource.org/licenses/GPL-2.0&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cba2181eae9ea18443bd663a1f8c3a87fbabe62" translate="yes" xml:space="preserve">
          <source>The distribution is distributed under the terms of the GNU Lesser General Public License version 2 (&lt;a href=&quot;http://opensource.org/licenses/LGPL-2.1&quot;&gt;http://opensource.org/licenses/LGPL-2.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4888c0e08e74f6e2698369bc2f948843f746c57a" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under a license that is &lt;b&gt;not&lt;/b&gt; approved by &lt;a href=&quot;http://www.opensource.org/&quot;&gt;www.opensource.org&lt;/a&gt; but that allows distribution without restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18e66ed77e39494025272eb1fa0055f83f4e24c" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under a license that is not approved by &lt;a href=&quot;http://www.opensource.org/&quot;&gt;www.opensource.org&lt;/a&gt; but that allows distribution without restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f50f8aa35b8ab9124cad20b747796d784792a1" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under some other Open Source Initiative-approved license listed at &lt;a href=&quot;http://www.opensource.org/licenses/&quot;&gt;http://www.opensource.org/licenses/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78bde88df9f9ec717c7aea6abe37d463f7f3091" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under the Apache Software License version 1.1 (&lt;a href=&quot;http://opensource.org/licenses/Apache-1.1&quot;&gt;http://opensource.org/licenses/Apache-1.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de749c864adb80ca7d1e8d280af821d8d4c9935" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under the Artistic License version 1, as specified by the Artistic file in the standard perl distribution (&lt;a href=&quot;http://opensource.org/licenses/Artistic-Perl-1.0&quot;&gt;http://opensource.org/licenses/Artistic-Perl-1.0&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ac3a668622bd0a049080f2c7b27295e3ec4b97" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under the BSD 3-Clause License (&lt;a href=&quot;http://opensource.org/licenses/BSD-3-Clause&quot;&gt;http://opensource.org/licenses/BSD-3-Clause&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b566ce554e210d4ce11e3e299eeba816ff34110" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under the MIT License (&lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aac6612aedc9abedbc7808782068e6b14c9dad1" translate="yes" xml:space="preserve">
          <source>The distribution is licensed under the Mozilla Public License. (&lt;a href=&quot;http://opensource.org/licenses/MPL-1.0&quot;&gt;http://opensource.org/licenses/MPL-1.0&lt;/a&gt; or &lt;a href=&quot;http://opensource.org/licenses/MPL-1.1&quot;&gt;http://opensource.org/licenses/MPL-1.1&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ec48fe5b9db3aa7699bae9e6f37f57f64c6873" translate="yes" xml:space="preserve">
          <source>The distribution may be copied and redistributed under the same terms as perl itself (this is by far the most common licensing option for modules on CPAN). This is a dual license, in which the user may choose between either the GPL or the Artistic license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6a3b8d2999345748a288e76e75c0daa029db33" translate="yes" xml:space="preserve">
          <source>The distribution may be copied and redistributed under the same terms as perl itself (this is by far the most common licensing option for modules on CPAN). This is a dual license, in which the user may choose between either the GPL version 1 or the Artistic version 1 license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68561decd1a625d00c793764ccc0278b512e1101" translate="yes" xml:space="preserve">
          <source>The distribution may not be redistributed without special permission from the author and/or copyright holder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b84d36cdfd8993b5da988b0d1072e922c4f772" translate="yes" xml:space="preserve">
          <source>The distribution metadata for a CPAN dist</source>
          <target state="translated">Los metadatos de distribución para un CPAN dist</target>
        </trans-unit>
        <trans-unit id="36683b868091d21c8930b291476202549c6dcddb" translate="yes" xml:space="preserve">
          <source>The distribution of a bundle should follow the same convention as other distributions.</source>
          <target state="translated">La distribución de un paquete debe seguir la misma convención que las demás distribuciones.</target>
        </trans-unit>
        <trans-unit id="51432e8130a916aea0132035b34ce241b04f9cf8" translate="yes" xml:space="preserve">
          <source>The distroprefs system of &lt;code&gt;CPAN.pm&lt;/code&gt; addresses this problem by allowing the user to specify extra informations and recipes in YAML files to either</source>
          <target state="translated">El sistema distroprefs de &lt;code&gt;CPAN.pm&lt;/code&gt; resuelve este problema permitiendo al usuario especificar informaci&amp;oacute;n adicional y recetas en archivos YAML para</target>
        </trans-unit>
        <trans-unit id="593a274a7d2141476dcb8b11db34f2f4536141e3" translate="yes" xml:space="preserve">
          <source>The division (/) and the following functions</source>
          <target state="translated">La división (/)y las siguientes funciones</target>
        </trans-unit>
        <trans-unit id="863f717363dbe8d220d352a111c6c709f1a560be" translate="yes" xml:space="preserve">
          <source>The djgpp environment for DOS, &lt;a href=&quot;http://www.delorie.com/djgpp/&quot;&gt;http://www.delorie.com/djgpp/&lt;/a&gt; and &lt;a href=&quot;perldos&quot;&gt;perldos&lt;/a&gt;.</source>
          <target state="translated">El entorno djgpp para DOS, &lt;a href=&quot;http://www.delorie.com/djgpp/&quot;&gt;http://www.delorie.com/djgpp/&lt;/a&gt; y &lt;a href=&quot;perldos&quot;&gt;perldos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02d01132aeec36ca260315fce03b39bb29168535" translate="yes" xml:space="preserve">
          <source>The do-or-die equivalents are set up simply by calling Fatal's &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; routine, passing it the names of the functions to be replaced. You may wrap both user-defined functions and overridable CORE operators (except &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, or any other built-in that cannot be expressed via prototypes) in this way.</source>
          <target state="translated">Los equivalentes de vida o muerte se configuran simplemente llamando a la rutina de &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n de Fatal , pas&amp;aacute;ndole los nombres de las funciones a reemplazar. Puede envolver tanto las funciones definidas por el usuario como los operadores CORE reemplazables (excepto &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; o cualquier otro incorporado que no se pueda expresar mediante prototipos) de esta manera.</target>
        </trans-unit>
        <trans-unit id="d89559d6a4bade96c4b212e54a4534bbb62aa15a" translate="yes" xml:space="preserve">
          <source>The do-or-die equivalents are set up simply by calling Fatal's &lt;code&gt;import&lt;/code&gt; routine, passing it the names of the functions to be replaced. You may wrap both user-defined functions and overridable CORE operators (except &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;system&lt;/code&gt;, &lt;code&gt;print&lt;/code&gt;, or any other built-in that cannot be expressed via prototypes) in this way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15384d55904491a7259b275ff7854d9b17c0ddff" translate="yes" xml:space="preserve">
          <source>The documentation below is only for the methods of the CPAN::Meta object. For information on the meaning of individual fields, consult the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467707c3656000f994482e7ea5cafe87685ee6c8" translate="yes" xml:space="preserve">
          <source>The documentation for the Perl API explains what some of the internal functions do, as well as the many macros used in the source.</source>
          <target state="translated">La documentación de la API de Perl explica lo que hacen algunas de las funciones internas,así como las numerosas macros utilizadas en la fuente.</target>
        </trans-unit>
        <trans-unit id="f1c9061e68c820097f175c9e3bd485176b2a01c2" translate="yes" xml:space="preserve">
          <source>The documentation of &lt;a href=&quot;Locale::Maketext&quot;&gt;Locale::Maketext&lt;/a&gt; advises that the standard bracket method &lt;code&gt;numf&lt;/code&gt; is limited and that you must override that for better results. It even suggests the use of &lt;a href=&quot;Number::Format&quot;&gt;Number::Format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae102196b6b483518d27e0d97d3595cd35f7b66" translate="yes" xml:space="preserve">
          <source>The dot</source>
          <target state="translated">El punto</target>
        </trans-unit>
        <trans-unit id="3f38f6b4980cd9d2e94100bc5fdda9f827f655ac" translate="yes" xml:space="preserve">
          <source>The dot (or period), &lt;code&gt;.&lt;/code&gt; is probably the most used, and certainly the most well-known character class. By default, a dot matches any character, except for the newline. That default can be changed to add matching the newline by using the</source>
          <target state="translated">El punto (o punto) &lt;code&gt;.&lt;/code&gt; es probablemente la clase de personaje m&amp;aacute;s utilizada, y ciertamente la m&amp;aacute;s conocida. De forma predeterminada, un punto coincide con cualquier car&amp;aacute;cter, excepto con la nueva l&amp;iacute;nea. Ese valor predeterminado se puede cambiar para agregar que coincida con la nueva l&amp;iacute;nea utilizando el</target>
        </trans-unit>
        <trans-unit id="a8d050074e0d8db225e0ced36924986b2d59e591" translate="yes" xml:space="preserve">
          <source>The dynamic nature of the regular expression variables means that their value is limited to the block that they are in, as demonstrated by this bit of code:</source>
          <target state="translated">La naturaleza dinámica de las variables de expresión regular significa que su valor se limita al bloque en el que se encuentran,como demuestra este trozo de código:</target>
        </trans-unit>
        <trans-unit id="4214b1d60eaaef0d8bb7337abe8a20ad57121d02" translate="yes" xml:space="preserve">
          <source>The earliest development of &lt;code&gt;newgetopt.pl&lt;/code&gt; started in 1990, with Perl version 4. As a result, its development, and the development of Getopt::Long, has gone through several stages. Since backward compatibility has always been extremely important, the current version of Getopt::Long still supports a lot of constructs that nowadays are no longer necessary or otherwise unwanted. This section describes briefly some of these 'features'.</source>
          <target state="translated">El primer desarrollo de &lt;code&gt;newgetopt.pl&lt;/code&gt; comenz&amp;oacute; en 1990, con la versi&amp;oacute;n 4 de Perl. Como resultado, su desarrollo y el desarrollo de Getopt :: Long ha pasado por varias etapas. Dado que la compatibilidad con versiones anteriores siempre ha sido extremadamente importante, la versi&amp;oacute;n actual de Getopt :: Long todav&amp;iacute;a admite muchas construcciones que hoy en d&amp;iacute;a ya no son necesarias o no deseadas. Esta secci&amp;oacute;n describe brevemente algunas de estas 'caracter&amp;iacute;sticas'.</target>
        </trans-unit>
        <trans-unit id="a629fbdcc51d0664a749c16709dba8d145f34d93" translate="yes" xml:space="preserve">
          <source>The easier it is to reproduce your bug, the more likely it will be fixed -- if nobody can duplicate your problem, it probably won't be addressed.</source>
          <target state="translated">Cuanto más fácil sea reproducir tu bicho,más probable es que se arregle...si nadie puede duplicar tu problema,es probable que no se solucione.</target>
        </trans-unit>
        <trans-unit id="a0f603eb4b75174f5f5f8c92980d04d40846be1f" translate="yes" xml:space="preserve">
          <source>The easier it is to understand a reproducible bug, the more likely it will be fixed. Any insight you can provide into the problem will help a great deal. In other words, try to analyze the problem (to the extent you can) and report your discoveries.</source>
          <target state="translated">Cuanto más fácil es entender un error reproducible,más probable es que se arregle.Cualquier comprensión que pueda proporcionar sobre el problema ayudará mucho.En otras palabras,trata de analizar el problema (en la medida de lo posible)e informa de tus descubrimientos.</target>
        </trans-unit>
        <trans-unit id="affd4579291392539b898984b2d64fdfbc46e13c" translate="yes" xml:space="preserve">
          <source>The easiest and most portable option available for creating your own source filter is to write it completely in Perl. To distinguish this from the previous two techniques, I'll call it a Perl source filter.</source>
          <target state="translated">La opción más fácil y portátil disponible para crear su propio filtro de fuente es escribirlo completamente en Perl.Para distinguir esto de las dos técnicas anteriores,lo llamaré un filtro de fuente de Perl.</target>
        </trans-unit>
        <trans-unit id="74aa13205a264868ad41eb543a1a088589f0736a" translate="yes" xml:space="preserve">
          <source>The easiest conceptual solution is to count the lines in the file then start at the beginning and print the number of lines (minus the last N) to a new file.</source>
          <target state="translated">La solución conceptual más fácil es contar las líneas del archivo y luego comenzar por el principio e imprimir el número de líneas (menos la última N)en un nuevo archivo.</target>
        </trans-unit>
        <trans-unit id="06308af6d2242e4fa49dd6cd28115c9993df529e" translate="yes" xml:space="preserve">
          <source>The easiest way is to have a module also named CPAN do it for you by using the &lt;code&gt;cpan&lt;/code&gt; command that comes with Perl. You can give it a list of modules to install:</source>
          <target state="translated">La forma m&amp;aacute;s f&amp;aacute;cil es hacer que un m&amp;oacute;dulo tambi&amp;eacute;n llamado CPAN lo haga por usted usando el comando &lt;code&gt;cpan&lt;/code&gt; que viene con Perl. Puede darle una lista de m&amp;oacute;dulos para instalar:</target>
        </trans-unit>
        <trans-unit id="2cfa0d7d193c99cb54063076caae508cae649aa1" translate="yes" xml:space="preserve">
          <source>The easiest way to do this is to read a key in nonblocking mode with the &lt;a href=&quot;Term::ReadKey&quot;&gt;Term::ReadKey&lt;/a&gt; module from CPAN, passing it an argument of -1 to indicate not to block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ecd0af899536563eb76ce8a93b28def2b41789" translate="yes" xml:space="preserve">
          <source>The easiest way to do this is to read a key in nonblocking mode with the &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ReadKey&quot;&gt;Term::ReadKey&lt;/a&gt; module from CPAN, passing it an argument of -1 to indicate not to block:</source>
          <target state="translated">La forma m&amp;aacute;s sencilla de hacer esto es leer una clave en modo sin bloqueo con el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ReadKey&quot;&gt;Term :: ReadKey&lt;/a&gt; de CPAN, pas&amp;aacute;ndole un argumento de -1 para indicar que no se debe bloquear:</target>
        </trans-unit>
        <trans-unit id="3b2853b05b0394d3d1c3bfe698cbfe924daa1822" translate="yes" xml:space="preserve">
          <source>The easiest way to examine the op tree is to stop Perl after it has finished parsing, and get it to dump out the tree. This is exactly what the compiler backends &lt;a href=&quot;B::Terse&quot;&gt;B::Terse&lt;/a&gt;, &lt;a href=&quot;B::Concise&quot;&gt;B::Concise&lt;/a&gt; and CPAN module &amp;lt;B::Debug do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab82d3c686ea0162144c8d6cfd2e56593a5e530" translate="yes" xml:space="preserve">
          <source>The easiest way to examine the op tree is to stop Perl after it has finished parsing, and get it to dump out the tree. This is exactly what the compiler backends &lt;a href=&quot;b/terse&quot;&gt;B::Terse&lt;/a&gt;, &lt;a href=&quot;b/concise&quot;&gt;B::Concise&lt;/a&gt; and &lt;a href=&quot;b/debug&quot;&gt;B::Debug&lt;/a&gt; do.</source>
          <target state="translated">La forma m&amp;aacute;s sencilla de examinar el &amp;aacute;rbol de operaciones es detener Perl despu&amp;eacute;s de que haya terminado de analizar y hacer que se deshaga del &amp;aacute;rbol. Esto es exactamente lo que hacen los backends del compilador &lt;a href=&quot;b/terse&quot;&gt;B :: Terse&lt;/a&gt; , &lt;a href=&quot;b/concise&quot;&gt;B :: Concise&lt;/a&gt; y &lt;a href=&quot;b/debug&quot;&gt;B :: Debug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e420b4167196d87c0672e2ec36244ffaaeacf17d" translate="yes" xml:space="preserve">
          <source>The easiest way to get a template set of macros to use is by specifying the &lt;code&gt;-g&lt;/code&gt; (&lt;code&gt;--global&lt;/code&gt; ) option with h2xs (see &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;).</source>
          <target state="translated">La forma m&amp;aacute;s f&amp;aacute;cil de obtener un conjunto de plantillas de macros para usar es especificando la opci&amp;oacute;n &lt;code&gt;-g&lt;/code&gt; ( &lt;code&gt;--global&lt;/code&gt; ) con h2xs (ver &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4c6326467cfffc66387125a93100da358b0b5c86" translate="yes" xml:space="preserve">
          <source>The easiest way to get a template set of macros to use is by specifying the &lt;code&gt;-g&lt;/code&gt; (&lt;code&gt;--global&lt;/code&gt;) option with h2xs (see &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c9c21dcd497445970db52d8583cffea3bdb68e" translate="yes" xml:space="preserve">
          <source>The easiest way to specify an individual typable character is to enclose it in brackets:</source>
          <target state="translated">La forma más fácil de especificar un carácter mecanografiado individual es encerrarlo entre paréntesis:</target>
        </trans-unit>
        <trans-unit id="d739701e48fac0ec01f64967528c5978352a4aef" translate="yes" xml:space="preserve">
          <source>The easiest way to tell if a subroutine was inlined is by using &lt;a href=&quot;B::Deparse&quot;&gt;B::Deparse&lt;/a&gt;. Consider this example of two subroutines returning &lt;code&gt;1&lt;/code&gt;, one with a &lt;code&gt;()&lt;/code&gt; prototype causing it to be inlined, and one without (with deparse output truncated for clarity):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b4571e42b1eb8646fcc517dc4040a5571233f2" translate="yes" xml:space="preserve">
          <source>The easiest way to tell if a subroutine was inlined is by using &lt;a href=&quot;b/deparse&quot;&gt;B::Deparse&lt;/a&gt;. Consider this example of two subroutines returning &lt;code&gt;1&lt;/code&gt; , one with a &lt;code&gt;()&lt;/code&gt; prototype causing it to be inlined, and one without (with deparse output truncated for clarity):</source>
          <target state="translated">La forma m&amp;aacute;s f&amp;aacute;cil de saber si una subrutina estaba en l&amp;iacute;nea es usando &lt;a href=&quot;b/deparse&quot;&gt;B :: Deparse&lt;/a&gt; . Considere este ejemplo de dos subrutinas que devuelven &lt;code&gt;1&lt;/code&gt; , una con un prototipo &lt;code&gt;()&lt;/code&gt; que hace que est&amp;eacute; en l&amp;iacute;nea y otra sin (con la salida deparse truncada para mayor claridad):</target>
        </trans-unit>
        <trans-unit id="0f8acfaed2cccc718ab47b22e571180e63f71aac" translate="yes" xml:space="preserve">
          <source>The easiest way to test is to do something like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0eee7295ee278e006e907a6f9a925e3a5df708" translate="yes" xml:space="preserve">
          <source>The easist way to deal with this issue is to use the pre-defined &quot;utf8&quot; &lt;b&gt;DBM_Filter&lt;/b&gt; (see &lt;a href=&quot;dbm_filter&quot;&gt;DBM_Filter&lt;/a&gt;) that was designed to deal with this situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1861cd9be51843a146c51b85f741a8d483f14173" translate="yes" xml:space="preserve">
          <source>The easy answer is &quot;Don't do that!&quot;</source>
          <target state="translated">La respuesta fácil es &quot;¡No hagas eso!&quot;</target>
        </trans-unit>
        <trans-unit id="8aef9d5f47b23df02c1f4b866ddffffba9a2ae25" translate="yes" xml:space="preserve">
          <source>The effect of &lt;code&gt;:std&lt;/code&gt; is not lexical as it modifies the layer stack of the global handles. If you wish to apply only this global effect and not the effect on handles that are opened in that scope, you can isolate the call to this pragma in its own lexical scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4605050fae7c9f6ca47b8c647d8260a448789c" translate="yes" xml:space="preserve">
          <source>The effect of multiple &lt;code&gt;-I&lt;/code&gt; options is to &lt;code&gt;unshift&lt;/code&gt; them onto &lt;code&gt;@INC&lt;/code&gt; from right to left. So for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0597cca28cb7230a0e356c17782e46be9384f5c8" translate="yes" xml:space="preserve">
          <source>The effect of using &quot;failure_auto_handler&quot; is like an AUTO lexicon, except that it 1) compiles $key even if it starts with &quot;_&quot;, and 2) you have a record in the new hashref $lh-&amp;gt;{'failure_lex'} of all the keys that have failed for this object. This should avoid your program dying -- as long as your keys aren't actually invalid as bracket code, and as long as they don't try calling methods that don't exist.</source>
          <target state="translated">El efecto de usar &quot;failure_auto_handler&quot; es como un l&amp;eacute;xico AUTO, excepto que 1) compila $ key incluso si comienza con &quot;_&quot;, y 2) tiene un registro en el nuevo hashref $ lh -&amp;gt; {'failure_lex'} de todas las claves que han fallado para este objeto. Esto deber&amp;iacute;a evitar que su programa muera, siempre que sus claves no sean realmente inv&amp;aacute;lidas como c&amp;oacute;digo de corchetes, y siempre que no intenten llamar a m&amp;eacute;todos que no existen.</target>
        </trans-unit>
        <trans-unit id="e111bef16ba68c39a0b6040a000b635141c8f1f2" translate="yes" xml:space="preserve">
          <source>The effective gid of this process. If you are on a machine that supports membership in multiple groups simultaneously, gives a space separated list of groups you are in. The first number is the one returned by &lt;code&gt;getegid()&lt;/code&gt; , and the subsequent ones by &lt;code&gt;getgroups()&lt;/code&gt; , one of which may be the same as the first number.</source>
          <target state="translated">El gid efectivo de este proceso. Si est&amp;aacute;s en una m&amp;aacute;quina que admite la membres&amp;iacute;a en varios grupos simult&amp;aacute;neamente, da una lista separada por espacios de los grupos en los que est&amp;aacute;s. El primer n&amp;uacute;mero es el devuelto por &lt;code&gt;getegid()&lt;/code&gt; y los siguientes por &lt;code&gt;getgroups()&lt;/code&gt; , uno de los cuales puede ser el mismo que el primer n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="c57c7b93a855188d4ab0c627a896d86afd3718eb" translate="yes" xml:space="preserve">
          <source>The effective gid of this process. If you are on a machine that supports membership in multiple groups simultaneously, gives a space separated list of groups you are in. The first number is the one returned by &lt;code&gt;getegid()&lt;/code&gt;, and the subsequent ones by &lt;code&gt;getgroups()&lt;/code&gt;, one of which may be the same as the first number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391c814eb86428160d8ecfb1e5d99a0a23856f18" translate="yes" xml:space="preserve">
          <source>The effective uid of this process. For example:</source>
          <target state="translated">El uso efectivo de este proceso.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="78e522cbb08752f888e4a4c422be723520118862" translate="yes" xml:space="preserve">
          <source>The element &lt;code&gt;$ENV{DEFAULT}&lt;/code&gt; is special: when read, it returns Perl's current default device and directory, and when set, it resets them, regardless of the definition of</source>
          <target state="translated">El elemento &lt;code&gt;$ENV{DEFAULT}&lt;/code&gt; es especial: cuando se lee, devuelve el dispositivo y directorio predeterminados actuales de Perl, y cuando se establece, los restablece, independientemente de la definici&amp;oacute;n de</target>
        </trans-unit>
        <trans-unit id="1927e85810982ff4bedcbd8fe6ac46c4f4acfd36" translate="yes" xml:space="preserve">
          <source>The element is a hash, initialized by default to &lt;code&gt;()&lt;/code&gt; .</source>
          <target state="translated">El elemento es un hash, inicializado de forma predeterminada en &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff2bffd6b7ca0e9e867ed8229203222ba2cd6dd2" translate="yes" xml:space="preserve">
          <source>The element is a hash, initialized by default to &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010155a37e502b613f4bf666146b070b50ac9cf2" translate="yes" xml:space="preserve">
          <source>The element is a scalar, and by default is initialized to &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (but see &lt;a href=&quot;#Initializing-with-new&quot;&gt;Initializing with new&lt;/a&gt;).</source>
          <target state="translated">El elemento es un escalar y, de forma predeterminada, se inicializa en &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (pero consulte &lt;a href=&quot;#Initializing-with-new&quot;&gt;Inicializar con nuevo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f75fd8ea331a93e38c3ea51d7c4505b3a3d036f7" translate="yes" xml:space="preserve">
          <source>The element is a scalar, and by default is initialized to &lt;code&gt;undef&lt;/code&gt; (but see &lt;a href=&quot;#Initializing-with-new&quot;&gt;&quot;Initializing with new&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7fe592a2def98474e3260c74013058ff355fc6" translate="yes" xml:space="preserve">
          <source>The element is an array, initialized by default to &lt;code&gt;()&lt;/code&gt; .</source>
          <target state="translated">El elemento es una matriz, inicializada de forma predeterminada en &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52aeddd404b7b928ef7ca86f1f29047b71eeb8ca" translate="yes" xml:space="preserve">
          <source>The element is an array, initialized by default to &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942bdb865668cc5d25526303c780ec9824d73845" translate="yes" xml:space="preserve">
          <source>The element's value must be a reference blessed to the named class or to one of its subclasses. The element is not initialized by default.</source>
          <target state="translated">El valor del elemento debe ser una referencia bendecida a la clase nombrada o a una de sus subclases.El elemento no está inicializado por defecto.</target>
        </trans-unit>
        <trans-unit id="96e4b34c1d85fc2315f1a2e433a4a09c9e1219d5" translate="yes" xml:space="preserve">
          <source>The elements must be identical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb20ee6aa799cc8c00cade7ca9b921cb0624824" translate="yes" xml:space="preserve">
          <source>The elements we're getting from the array start with a &lt;code&gt;$&lt;/code&gt; because we're getting just a single value out of the array; you ask for a scalar, you get a scalar.</source>
          <target state="translated">Los elementos que obtenemos de la matriz comienzan con &lt;code&gt;$&lt;/code&gt; porque solo obtenemos un valor de la matriz; pides un escalar, obtienes un escalar.</target>
        </trans-unit>
        <trans-unit id="c2d2a5272ddb492896f4b1aa2fdc89f7d8b57cf1" translate="yes" xml:space="preserve">
          <source>The elliptical statement cannot stand in for an expression that is part of a larger statement, since the &lt;code&gt;...&lt;/code&gt; is also the three-dot version of the flip-flop operator (see &lt;a href=&quot;perlop#Range-Operators&quot;&gt;Range Operators in perlop&lt;/a&gt;).</source>
          <target state="translated">La declaraci&amp;oacute;n el&amp;iacute;ptica no puede reemplazar una expresi&amp;oacute;n que es parte de una declaraci&amp;oacute;n m&amp;aacute;s grande, ya que &lt;code&gt;...&lt;/code&gt; es tambi&amp;eacute;n la versi&amp;oacute;n de tres puntos del operador flip-flop (ver &lt;a href=&quot;perlop#Range-Operators&quot;&gt;Operadores de rango en perlop&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="81b37f465ff28273358e52fdc4fa0d8ce3005267" translate="yes" xml:space="preserve">
          <source>The elliptical statement cannot stand in for an expression that is part of a larger statement. These examples of attempts to use an ellipsis are syntax errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545891d79255fc3bc69760f930c3f25bc8ae8965" translate="yes" xml:space="preserve">
          <source>The email you got when you received your CPAN ID will tell you how to log in to PAUSE, the Perl Authors Upload SErver. From the menus there, you can upload your module to CPAN.</source>
          <target state="translated">El correo electrónico que recibiste cuando recibiste tu ID de CPAN te dirá cómo entrar en PAUSE,el SErver de carga de los autores de Perl.Desde los menús de allí,puedes subir tu módulo al CPAN.</target>
        </trans-unit>
        <trans-unit id="327ff1bdde855523cde51b50cbe96fda9133ba11" translate="yes" xml:space="preserve">
          <source>The empty pattern &lt;code&gt;//&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4129d1babbccbe45b1d8ec086eee7286a139eb46" translate="yes" xml:space="preserve">
          <source>The encoding being specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64546adcd99f15ed4491ee50ced298a5f03d14c6" translate="yes" xml:space="preserve">
          <source>The encoding event is generated when a test file wants to specify the encoding to be used when formatting its output. This event is intended to be produced by formatter classes and used for interpreting test names, message contents, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588a9b522600848c7a034e730acfdc94a0b61885" translate="yes" xml:space="preserve">
          <source>The encoding is assumed to be an Encode object, on entry the PV of the sv is assumed to be octets in that encoding, and the sv will be converted into Unicode (and UTF-8).</source>
          <target state="translated">Se supone que la codificación es un objeto Encode,al entrar el PV del sv se supone que son octetos en esa codificación,y el sv se convertirá en Unicode (y UTF-8).</target>
        </trans-unit>
        <trans-unit id="2aac7e4350e18d454240d654ed5501855f5c3e7e" translate="yes" xml:space="preserve">
          <source>The encoding is assumed to be an Encode object, the PV of the ssv is assumed to be octets in that encoding and decoding the input starts from the position which (PV + *offset) pointed to. The dsv will be concatenated the decoded UTF-8 string from ssv. Decoding will terminate when the string tstr appears in decoding output or the input ends on the PV of the ssv. The value which the offset points will be modified to the last input position on the ssv.</source>
          <target state="translated">Se supone que la codificación es un objeto de codificación,el PV del ssv se supone que son octetos en esa codificación y la decodificación de la entrada comienza desde la posición a la que (PV+*offset)apuntaba.El dsv se concatenará con la cadena UTF-8 decodificada a partir del ssv.La decodificación terminará cuando la cadena tstr aparezca en la salida de decodificación o la entrada termine en el PV del ssv.El valor de los puntos de desviación se modificará hasta la última posición de entrada en el ssv.</target>
        </trans-unit>
        <trans-unit id="e2d9b11db298559d7d705aec3e36d98ebb2389cc" translate="yes" xml:space="preserve">
          <source>The encoding name determined to be suitable for file system interfaces involving file names. &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; know this encoding as &quot;locale_fs&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050d2bf9033fce6c43078983175c16f9530f4831" translate="yes" xml:space="preserve">
          <source>The encoding name determined to be suitable for the current locale. &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; know this encoding as &quot;locale&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3062423073ff3110a760ac5983fd2a737512781" translate="yes" xml:space="preserve">
          <source>The encoding pragma is not supported on EBCDIC platforms.</source>
          <target state="translated">La pragmatización de la codificación no está soportada en las plataformas EBCDIC.</target>
        </trans-unit>
        <trans-unit id="04abf26a5ca58977d603141fc0ef79876490369d" translate="yes" xml:space="preserve">
          <source>The encoding requested is not supported by the Encode module.</source>
          <target state="translated">La codificación solicitada no está soportada por el módulo de codificación.</target>
        </trans-unit>
        <trans-unit id="dc406e81e6f88430afa8892d13871c0d72a82fe4" translate="yes" xml:space="preserve">
          <source>The encoding that corresponds to ANSI varies between different editions of Windows. For many western editions of Windows ANSI corresponds to CP-1252 which is a character set similar to ISO-8859-1. Conceptually the ANSI character set is a similar concept to the POSIX locale CODESET so this module figures out what the ANSI code page is and make this available as $ENCODING_LOCALE and the &quot;locale&quot; Encoding alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b0be99c7e0fde92c59a2dde4b75bd2c5e6a66a" translate="yes" xml:space="preserve">
          <source>The encodings of &lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; are individually settable by parameters to the pragma:</source>
          <target state="translated">Las codificaciones de &lt;code&gt;STDIN&lt;/code&gt; y &lt;code&gt;STDOUT&lt;/code&gt; se pueden configurar individualmente mediante par&amp;aacute;metros en el pragma:</target>
        </trans-unit>
        <trans-unit id="6d62118e6065a9d454aaecd74844f2def3aa8534" translate="yes" xml:space="preserve">
          <source>The encodings to be used for reading and writing output to the a console. &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; know these encodings as &quot;console_in&quot; and &quot;console_out&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d58ea5991c657606e31a1ebddfdcbdfe42b5a94" translate="yes" xml:space="preserve">
          <source>The end result of all this is a list of pairs of filenames. By default that is what is returned by &lt;code&gt;globmap&lt;/code&gt; . In this example the data structure returned will look like this</source>
          <target state="translated">El resultado final de todo esto es una lista de pares de nombres de archivos. De forma predeterminada, eso es lo que devuelve &lt;code&gt;globmap&lt;/code&gt; . En este ejemplo, la estructura de datos devuelta se ver&amp;aacute; as&amp;iacute;</target>
        </trans-unit>
        <trans-unit id="d6253ff05c4cc919ddf707ca73edb1a406fe9c35" translate="yes" xml:space="preserve">
          <source>The end result of all this is a list of pairs of filenames. By default that is what is returned by &lt;code&gt;globmap&lt;/code&gt;. In this example the data structure returned will look like this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fda9b67eec164f9ff303e259fb27be29ca04c85" translate="yes" xml:space="preserve">
          <source>The engine implementing &lt;code&gt;pack()&lt;/code&gt; Perl function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66180c8b26ee487f27a0dc49b26d2d5244b75b6e" translate="yes" xml:space="preserve">
          <source>The engine implementing &lt;code&gt;pack()&lt;/code&gt; Perl function. Note: parameters &lt;code&gt;next_in_list&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; are not used. This call should not be used; use &lt;code&gt;packlist&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463670dd77f9d4b250cfbf1933d859da20649fdf" translate="yes" xml:space="preserve">
          <source>The engine implementing &lt;code&gt;unpack()&lt;/code&gt; Perl function. Note: parameters &lt;code&gt;strbeg&lt;/code&gt;, &lt;code&gt;new_s&lt;/code&gt; and &lt;code&gt;ocnt&lt;/code&gt; are not used. This call should not be used, use &lt;code&gt;unpackstring&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733a0f46f2e4433da326d8b3d8649ddcec9e6f67" translate="yes" xml:space="preserve">
          <source>The engine implementing pack() Perl function.</source>
          <target state="translated">El motor que implementa la función pack()Perl.</target>
        </trans-unit>
        <trans-unit id="3347858c5b43f539e0e1c803ce10b0c1e284b3a5" translate="yes" xml:space="preserve">
          <source>The engine implementing pack() Perl function. Note: parameters next_in_list and flags are not used. This call should not be used; use packlist instead.</source>
          <target state="translated">El motor que implementa la función Pack()Perl.Nota:los parámetros next_in_list y flags no se utilizan.Esta llamada no debería ser usada;usa packlist en su lugar.</target>
        </trans-unit>
        <trans-unit id="1108f56aaa943f349a8b769e2a9d1fa1d3614cf4" translate="yes" xml:space="preserve">
          <source>The engine implementing the &lt;code&gt;unpack()&lt;/code&gt; Perl function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5023a760442586ad60fa18e526984ee22ee1b465" translate="yes" xml:space="preserve">
          <source>The engine implementing the unpack() Perl function.</source>
          <target state="translated">El motor que implementa la función unpack()Perl.</target>
        </trans-unit>
        <trans-unit id="23836ad0aab663b81186836eab5aaaa304905073" translate="yes" xml:space="preserve">
          <source>The engine implementing unpack() Perl function. Note: parameters strbeg, new_s and ocnt are not used. This call should not be used, use unpackstring instead.</source>
          <target state="translated">El motor que implementa la función &quot;unpack()Perl&quot;.Nota:los parámetros strbeg,new_s y ocnt no se utilizan.Esta llamada no debería ser usada,usa en su lugar un unpackstring.</target>
        </trans-unit>
        <trans-unit id="d9382e3775d5db72bf3f9d8d46eb30460f658e51" translate="yes" xml:space="preserve">
          <source>The engine's private copy of the flags the pattern was compiled with. Usually this is the same as &lt;code&gt;extflags&lt;/code&gt; unless the engine chose to modify one of them.</source>
          <target state="translated">Copia privada del motor de las banderas con las que se compil&amp;oacute; el patr&amp;oacute;n. Por lo general, esto es lo mismo que &lt;code&gt;extflags&lt;/code&gt; a menos que el motor elija modificar uno de ellos.</target>
        </trans-unit>
        <trans-unit id="9ce2a132adf5c2ffffe82f2f2320a1ff022e1a1c" translate="yes" xml:space="preserve">
          <source>The entire file system is compressed such as via &quot;DoubleSpace&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e628a3e380b1bb720e0473c9d50225fb2d2a7bf" translate="yes" xml:space="preserve">
          <source>The entire getaddrinfo() subsystem can be exported using the tag &lt;code&gt;:addrinfo&lt;/code&gt; ; this exports the getaddrinfo() and getnameinfo() functions, and all the &lt;code&gt;AI_*&lt;/code&gt; , &lt;code&gt;NI_*&lt;/code&gt; , &lt;code&gt;NIx_*&lt;/code&gt; and &lt;code&gt;EAI_*&lt;/code&gt; constants.</source>
          <target state="translated">El subsistema completo getaddrinfo () se puede exportar usando la etiqueta &lt;code&gt;:addrinfo&lt;/code&gt; ; esto exporta las funciones getaddrinfo () y getnameinfo (), y todas las &lt;code&gt;AI_*&lt;/code&gt; , &lt;code&gt;NI_*&lt;/code&gt; , &lt;code&gt;NIx_*&lt;/code&gt; y &lt;code&gt;EAI_*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9deffc2b03edaef07355a1dc99c65f075b4e32e" translate="yes" xml:space="preserve">
          <source>The entire getaddrinfo() subsystem can be exported using the tag &lt;code&gt;:addrinfo&lt;/code&gt;; this exports the getaddrinfo() and getnameinfo() functions, and all the &lt;code&gt;AI_*&lt;/code&gt;, &lt;code&gt;NI_*&lt;/code&gt;, &lt;code&gt;NIx_*&lt;/code&gt; and &lt;code&gt;EAI_*&lt;/code&gt; constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425561102978b28bf5fcfefe3513eb2739c2c06d" translate="yes" xml:space="preserve">
          <source>The entire hardware and software context in which a program runs. A program written in a platform-dependent language might break if you change any of the following: machine, operating system, libraries, compiler, or system configuration. The</source>
          <target state="translated">Todo el contexto de hardware y software en el que se ejecuta un programa.Un programa escrito en un lenguaje dependiente de la plataforma puede romperse si se cambia cualquiera de los siguientes elementos:máquina,sistema operativo,bibliotecas,compilador o configuración del sistema.El</target>
        </trans-unit>
        <trans-unit id="062ee9dd6945c627c0db8805ff34b8bebe56650f" translate="yes" xml:space="preserve">
          <source>The entire upgrading/downgrading is still experimental and might not work as you expect or may even have bugs. You might get errors like this:</source>
          <target state="translated">Toda la actualización y degradación es todavía experimental y puede que no funcione como esperas o incluso puede que tenga fallos.Podrías tener errores como este:</target>
        </trans-unit>
        <trans-unit id="5e462b82c7819411d2795ec13fd404d6485cf8ac" translate="yes" xml:space="preserve">
          <source>The environment is not automatically made available as separate scalar variables.</source>
          <target state="translated">El entorno no se pone a disposición automáticamente como variables escalares separadas.</target>
        </trans-unit>
        <trans-unit id="4a714b26cc76c6e720a2c1944b7c3273669f5c69" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;PERL_RL&lt;/code&gt; governs which ReadLine clone is loaded. If the value is false, a dummy interface is used. If the value is true, it should be tail of the name of the package to use, such as &lt;code&gt;Perl&lt;/code&gt; or &lt;code&gt;Gnu&lt;/code&gt; .</source>
          <target state="translated">La variable de entorno &lt;code&gt;PERL_RL&lt;/code&gt; gobierna qu&amp;eacute; clon de ReadLine se carga. Si el valor es falso, se utiliza una interfaz ficticia. Si el valor es verdadero, debe ser la cola del nombre del paquete a usar, como &lt;code&gt;Perl&lt;/code&gt; o &lt;code&gt;Gnu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="390b6e9b1745d2d828a2345d3a86cf8b0b336f56" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;PERL_RL&lt;/code&gt; governs which ReadLine clone is loaded. If the value is false, a dummy interface is used. If the value is true, it should be tail of the name of the package to use, such as &lt;code&gt;Perl&lt;/code&gt; or &lt;code&gt;Gnu&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee4db4f603bb2d952278fab3f0573c9f206b756" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;PERL_SIGNALS&lt;/code&gt; is set to &lt;code&gt;unsafe&lt;/code&gt; (see &lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;&quot;PERL_SIGNALS&quot; in perlrun&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c8987c252d8945d5eef3157bdde1da3d4677a3" translate="yes" xml:space="preserve">
          <source>The error function [C99].</source>
          <target state="translated">La función de error [C99].</target>
        </trans-unit>
        <trans-unit id="c03bfb5951202558a79d3146a129bcd7599c5997" translate="yes" xml:space="preserve">
          <source>The error level, should be 'WARNING' or 'ERROR'.</source>
          <target state="translated">El nivel de error,debería ser &quot;ADVERTENCIA&quot; o &quot;ERROR&quot;.</target>
        </trans-unit>
        <trans-unit id="489643f4ea640ba730461cfbd32bed09509bae25" translate="yes" xml:space="preserve">
          <source>The error message or object will be used as an exception, by default returning control to the nearest enclosing &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, but subject to modification by a &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handler. In any case, the &lt;code&gt;croak_sv&lt;/code&gt; function never returns normally.</source>
          <target state="translated">El mensaje de error u objeto se utilizar&amp;aacute; como una excepci&amp;oacute;n, devolviendo el control por defecto a la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; m&amp;aacute;s cercana , pero sujeto a modificaci&amp;oacute;n por un controlador $ SIG {__ DIE__} . En cualquier caso, la funci&amp;oacute;n &lt;code&gt;croak_sv&lt;/code&gt; nunca regresa normalmente.</target>
        </trans-unit>
        <trans-unit id="4301dd87f0c694dc26ff0db9df44403205bacc19" translate="yes" xml:space="preserve">
          <source>The error message or object will be used as an exception, by default returning control to the nearest enclosing &lt;code&gt;eval&lt;/code&gt;, but subject to modification by a &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handler. In any case, the &lt;code&gt;croak_sv&lt;/code&gt; function never returns normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664a7836db566d6a3f4c07aec582c78faf8e8984" translate="yes" xml:space="preserve">
          <source>The error message or object will by default be written to standard error, but this is subject to modification by a &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handler.</source>
          <target state="translated">El mensaje de error u objeto se escribir&amp;aacute; de forma predeterminada como error est&amp;aacute;ndar, pero esto est&amp;aacute; sujeto a modificaciones por parte de un controlador &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b67bc4e2f3fe19fc43d4ef72e9869cbd0c9674e2" translate="yes" xml:space="preserve">
          <source>The error message will be used as an exception, by default returning control to the nearest enclosing &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, but subject to modification by a &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handler. In any case, the &lt;code&gt;croak&lt;/code&gt; function never returns normally.</source>
          <target state="translated">El mensaje de error se utilizar&amp;aacute; como una excepci&amp;oacute;n, devolviendo el control de forma predeterminada a la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; m&amp;aacute;s cercana , pero sujeto a modificaciones por parte de un controlador $ SIG {__ DIE__} . En cualquier caso, la funci&amp;oacute;n &lt;code&gt;croak&lt;/code&gt; nunca vuelve normalmente.</target>
        </trans-unit>
        <trans-unit id="b00b7771ac407f2dd89d3f22f11d4228e791df56" translate="yes" xml:space="preserve">
          <source>The error message will be used as an exception, by default returning control to the nearest enclosing &lt;code&gt;eval&lt;/code&gt;, but subject to modification by a &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handler. In any case, the &lt;code&gt;croak&lt;/code&gt; function never returns normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900d77a6d61d64e8af52decba69cafd8be937ac1" translate="yes" xml:space="preserve">
          <source>The error number returned by a &lt;b&gt;syscall&lt;/b&gt; when it fails. Perl refers to the error by the name &lt;code&gt;$!&lt;/code&gt; (or &lt;code&gt;$OS_ERROR&lt;/code&gt; if you use the English module).</source>
          <target state="translated">El n&amp;uacute;mero de error devuelto por una &lt;b&gt;llamada&lt;/b&gt; al &lt;b&gt;sistema&lt;/b&gt; cuando falla. Perl se refiere al error con el nombre &lt;code&gt;$!&lt;/code&gt; (o &lt;code&gt;$OS_ERROR&lt;/code&gt; si usa el m&amp;oacute;dulo en ingl&amp;eacute;s).</target>
        </trans-unit>
        <trans-unit id="4c482150704e0bf7cda4048aa90adb166f9af2aa" translate="yes" xml:space="preserve">
          <source>The error value will be a dualvar; comparable to the &lt;code&gt;EAI_*&lt;/code&gt; error constants, or printable as a human-readable error message string. If no error occurred it will be zero numerically and an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b014cdbfece5798eb6937c7e465a37ae5041c3" translate="yes" xml:space="preserve">
          <source>The error value will be a dualvar; comparable to the &lt;code&gt;EAI_*&lt;/code&gt; error constants, or printable as a human-readable error message string. The host and service names will be plain strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953076d4b6c381c0ffffe4399cd4fbc39f8ceb23" translate="yes" xml:space="preserve">
          <source>The error value will be a dualvar; comparable to the &lt;code&gt;EI_*&lt;/code&gt; error constants, or printable as a human-readable error message string. If no error occurred it will be zero numerically and an empty string.</source>
          <target state="translated">El valor de error ser&amp;aacute; un dualvar; comparable a las constantes de error &lt;code&gt;EI_*&lt;/code&gt; , o imprimible como una cadena de mensaje de error legible por humanos. Si no se produjo ning&amp;uacute;n error, ser&amp;aacute; cero num&amp;eacute;ricamente y una cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="4f48137cede1f63ecf865be7641415458ec370ab" translate="yes" xml:space="preserve">
          <source>The error value will be a dualvar; comparable to the &lt;code&gt;EI_*&lt;/code&gt; error constants, or printable as a human-readable error message string. The host and service names will be plain strings.</source>
          <target state="translated">El valor de error ser&amp;aacute; un dualvar; comparable a las constantes de error &lt;code&gt;EI_*&lt;/code&gt; , o imprimible como una cadena de mensaje de error legible por humanos. Los nombres de host y servicio ser&amp;aacute;n cadenas simples.</target>
        </trans-unit>
        <trans-unit id="69f6f9a5df3062e908bd0165d9c2b9fe0563d15c" translate="yes" xml:space="preserve">
          <source>The errors facet is a list instead of a single item, any number of errors can be listed. In this facet &lt;code&gt;details&lt;/code&gt; describes the error, or may contain the raw error message itself (such as an exception). In perl exception may be blessed objects, as such the raw data for this facet may contain nested items which are blessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce05d758ea509461baa38b741595abae13996ba5" translate="yes" xml:space="preserve">
          <source>The escape is the beginning or final end point of a range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1c1519bb36749c3cad434bbe27ce9cca770380" translate="yes" xml:space="preserve">
          <source>The evaluation modifier &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///e&lt;/a&gt;&lt;/code&gt; wraps an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{...}&lt;/a&gt;&lt;/code&gt; around the replacement string and the evaluated result is substituted for the matched substring. Some examples:</source>
          <target state="translated">El modificador de evaluaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///e&lt;/a&gt;&lt;/code&gt; envuelve un &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{...}&lt;/a&gt;&lt;/code&gt; alrededor de la cadena de reemplazo y el resultado evaluado se sustituye por la subcadena coincidente. Algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="acb75763cbe80034d5f373af05d3a0392a02769b" translate="yes" xml:space="preserve">
          <source>The evaluation modifier &lt;code&gt;s///e&lt;/code&gt; wraps an &lt;code&gt;eval{...}&lt;/code&gt; around the replacement string and the evaluated result is substituted for the matched substring. Some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfba3806303ac6dda3f30dd80fde49f7e2183210" translate="yes" xml:space="preserve">
          <source>The event from &lt;code&gt;ok(1, &quot;pass&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863be168c93a9b4e951447892af8574c10035f63" translate="yes" xml:space="preserve">
          <source>The event of a plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c657becf62f17dba34f2c0a7892b03eec9664a" translate="yes" xml:space="preserve">
          <source>The exact implementation of this macro varies by architecture and version of perl, and the return value may change per invocation, so the value is only valid for the duration of a single perl process.</source>
          <target state="translated">La aplicación exacta de esta macro varía según la arquitectura y la versión de perl,y el valor de retorno puede cambiar por cada invocación,por lo que el valor sólo es válido durante la duración de un solo proceso de perl.</target>
        </trans-unit>
        <trans-unit id="77f569ab2ca56d55a753f65526e499d75cae3e5d" translate="yes" xml:space="preserve">
          <source>The exact line number may vary, but if the warning (W) comes from a line line this</source>
          <target state="translated">El número de línea exacto puede variar,pero si la advertencia (W)viene de una línea de línea esta</target>
        </trans-unit>
        <trans-unit id="995bdcd8d207fa374f9f43b6e279df6bd565026b" translate="yes" xml:space="preserve">
          <source>The exact line numbers may vary between Perl releases. The warnings are benign and can be ignored: in later C compiler releases the warnings should be gone.</source>
          <target state="translated">Los números de línea exactos pueden variar entre los lanzamientos de Perl.Las advertencias son benignas y pueden ser ignoradas:en posteriores versiones del compilador C las advertencias deberían desaparecer.</target>
        </trans-unit>
        <trans-unit id="44fc79e864b1257675cf101f1f7fd3a57bf639a9" translate="yes" xml:space="preserve">
          <source>The exact manner in which the address is returned in $symref is not currently defined. The only initial requirement is that $symref can be passed to, and understood by, dl_install_xsub().</source>
          <target state="translated">La manera exacta en que la dirección se devuelve en $symref no está definida actualmente.El único requisito inicial es que $symref puede ser pasado a,y entendido por,dl_install_xsub().</target>
        </trans-unit>
        <trans-unit id="e70c2ef4d5d588ebbe05350bafa35fc8f80a6a1c" translate="yes" xml:space="preserve">
          <source>The exact meaning of the $gcos field varies but it usually contains the real name of the user (as opposed to the login name) and other information pertaining to the user. Beware, however, that in many system users are able to change this information and therefore it cannot be trusted and therefore the $gcos is tainted (see &lt;a href=&quot;../perlsec&quot;&gt;perlsec&lt;/a&gt;). The $passwd and $shell, user's encrypted password and login shell, are also tainted, for the same reason.</source>
          <target state="translated">El significado exacto del campo $ gcos var&amp;iacute;a, pero generalmente contiene el nombre real del usuario (a diferencia del nombre de inicio de sesi&amp;oacute;n) y otra informaci&amp;oacute;n perteneciente al usuario. Sin embargo, tenga en cuenta que en muchos sistemas los usuarios pueden cambiar esta informaci&amp;oacute;n y, por lo tanto, no se puede confiar en ella y, por lo tanto, el $ gcos est&amp;aacute; contaminado (ver &lt;a href=&quot;../perlsec&quot;&gt;perlsec&lt;/a&gt; ). El $ passwd y $ shell, la contrase&amp;ntilde;a cifrada del usuario y el shell de inicio de sesi&amp;oacute;n, tambi&amp;eacute;n est&amp;aacute;n contaminados por la misma raz&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d7d6887be4411b65036ddda7abbe1d73b16c3d9f" translate="yes" xml:space="preserve">
          <source>The exact meaning of the $gcos field varies but it usually contains the real name of the user (as opposed to the login name) and other information pertaining to the user. Beware, however, that in many system users are able to change this information and therefore it cannot be trusted and therefore the $gcos is tainted (see &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;). The $passwd and $shell, user's encrypted password and login shell, are also tainted, for the same reason.</source>
          <target state="translated">El significado exacto del campo $ gcos var&amp;iacute;a, pero generalmente contiene el nombre real del usuario (a diferencia del nombre de inicio de sesi&amp;oacute;n) y otra informaci&amp;oacute;n perteneciente al usuario. Sin embargo, tenga en cuenta que en muchos sistemas los usuarios pueden cambiar esta informaci&amp;oacute;n y, por lo tanto, no se puede confiar en ella y, por lo tanto, el $ gcos est&amp;aacute; contaminado (ver &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; ). El $ passwd y $ shell, la contrase&amp;ntilde;a cifrada del usuario y el shell de inicio de sesi&amp;oacute;n, tambi&amp;eacute;n est&amp;aacute;n contaminados por la misma raz&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6462c6eed55545498a4b1274ffec108a59806854" translate="yes" xml:space="preserve">
          <source>The exact rules for how often (??{}) and (?{}) are executed in a pattern are unspecified. In the case of a successful match you can assume that they DWIM and will be executed in left to right order the appropriate number of times in the accepting path of the pattern as would any other meta-pattern. How non-accepting pathways and match failures affect the number of times a pattern is executed is specifically unspecified and may vary depending on what optimizations can be applied to the pattern and is likely to change from version to version.</source>
          <target state="translated">Las reglas exactas para la frecuencia (??{})y (?{})de ejecución en un patrón no están especificadas.En el caso de una coincidencia exitosa se puede asumir que se DWIM y se ejecutará en orden de izquierda a derecha el número apropiado de veces en el camino de aceptación del patrón como lo haría cualquier otro meta-patrón.La forma en que las vías de no aceptación y los fallos de coincidencia afectan al número de veces que se ejecuta un patrón no está específicamente especificada y puede variar dependiendo de las optimizaciones que se puedan aplicar al patrón y es probable que cambie de una versión a otra.</target>
        </trans-unit>
        <trans-unit id="fdf1655ab3b8310f5b318568059958f807b33f0d" translate="yes" xml:space="preserve">
          <source>The exact rules for how often &lt;code&gt;(??{})&lt;/code&gt; and &lt;code&gt;(?{})&lt;/code&gt; are executed in a pattern are unspecified. In the case of a successful match you can assume that they DWIM and will be executed in left to right order the appropriate number of times in the accepting path of the pattern as would any other meta-pattern. How non-accepting pathways and match failures affect the number of times a pattern is executed is specifically unspecified and may vary depending on what optimizations can be applied to the pattern and is likely to change from version to version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7beaad311b9cd2e0a10bf6f8d5a018e83ebb91c" translate="yes" xml:space="preserve">
          <source>The exact same effect could, incidentally, be achieved with a single &quot;=for&quot; paragraph:</source>
          <target state="translated">Exactamente el mismo efecto podría,por cierto,lograrse con un solo párrafo &quot;=para&quot;:</target>
        </trans-unit>
        <trans-unit id="fb72ca6692327d6fee94ee24d9e91cba6dc1e016" translate="yes" xml:space="preserve">
          <source>The exact semantics and interface of TYPE and ATTRS are still evolving. TYPE is currently bound to the use of the &lt;a href=&quot;fields&quot;&gt;fields&lt;/a&gt; pragma, and attributes are handled using the &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; pragma, or, starting from Perl 5.8.0, also via the &lt;a href=&quot;Attribute::Handlers&quot;&gt;Attribute::Handlers&lt;/a&gt; module. See &lt;a href=&quot;perlsub#Private-Variables-via-my%28%29&quot;&gt;&quot;Private Variables via my()&quot; in perlsub&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61acc8b78f6506711798cda20b87d0c0557e6d78" translate="yes" xml:space="preserve">
          <source>The exact semantics and interface of TYPE and ATTRS are still evolving. TYPE is currently bound to the use of the &lt;code&gt;fields&lt;/code&gt; pragma, and attributes are handled using the &lt;code&gt;attributes&lt;/code&gt; pragma, or, starting from Perl 5.8.0, also via the &lt;code&gt;Attribute::Handlers&lt;/code&gt; module. See &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details, and &lt;a href=&quot;../fields&quot;&gt;fields&lt;/a&gt;, &lt;a href=&quot;../attributes&quot;&gt;attributes&lt;/a&gt;, and &lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt;.</source>
          <target state="translated">La sem&amp;aacute;ntica exacta y la interfaz de TYPE y ATTRS a&amp;uacute;n est&amp;aacute;n evolucionando. TYPE est&amp;aacute; actualmente vinculado al uso de los &lt;code&gt;fields&lt;/code&gt; pragma, y ​​los atributos se manejan usando los &lt;code&gt;attributes&lt;/code&gt; pragma o, a partir de Perl 5.8.0, tambi&amp;eacute;n a trav&amp;eacute;s del m&amp;oacute;dulo &lt;code&gt;Attribute::Handlers&lt;/code&gt; . Consulte &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Variables privadas a trav&amp;eacute;s de my () en perlsub&lt;/a&gt; para obtener detalles y &lt;a href=&quot;../fields&quot;&gt;campos&lt;/a&gt; , &lt;a href=&quot;../attributes&quot;&gt;atributos&lt;/a&gt; y &lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90e321854a7d357a33050984753578010a7cc972" translate="yes" xml:space="preserve">
          <source>The exact semantics and interface of TYPE and ATTRS are still evolving. TYPE is currently bound to the use of the &lt;code&gt;fields&lt;/code&gt; pragma, and attributes are handled using the &lt;code&gt;attributes&lt;/code&gt; pragma, or, starting from Perl 5.8.0, also via the &lt;code&gt;Attribute::Handlers&lt;/code&gt; module. See &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details, and &lt;a href=&quot;fields&quot;&gt;fields&lt;/a&gt;, &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;, and &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt;.</source>
          <target state="translated">La sem&amp;aacute;ntica exacta y la interfaz de TYPE y ATTRS a&amp;uacute;n est&amp;aacute;n evolucionando. TYPE est&amp;aacute; actualmente vinculado al uso de los &lt;code&gt;fields&lt;/code&gt; pragma, y ​​los atributos se manejan usando los &lt;code&gt;attributes&lt;/code&gt; pragma o, a partir de Perl 5.8.0, tambi&amp;eacute;n a trav&amp;eacute;s del m&amp;oacute;dulo &lt;code&gt;Attribute::Handlers&lt;/code&gt; . Consulte &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Variables privadas a trav&amp;eacute;s de my () en perlsub&lt;/a&gt; para obtener detalles y &lt;a href=&quot;fields&quot;&gt;campos&lt;/a&gt; , &lt;a href=&quot;attributes&quot;&gt;atributos&lt;/a&gt; y &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b162d38593f0c61d02eda524507bf4fd01fab9" translate="yes" xml:space="preserve">
          <source>The exact semantics and interface of TYPE and ATTRS are still evolving. TYPE may be a bareword, a constant declared with &lt;a href=&quot;constant&quot;&gt;&lt;code&gt;use constant&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#__PACKAGE__&quot;&gt;&lt;code&gt;__PACKAGE__&lt;/code&gt;&lt;/a&gt;. It is currently bound to the use of the &lt;a href=&quot;fields&quot;&gt;fields&lt;/a&gt; pragma, and attributes are handled using the &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; pragma, or starting from Perl 5.8.0 also via the &lt;a href=&quot;Attribute::Handlers&quot;&gt;Attribute::Handlers&lt;/a&gt; module. See &lt;a href=&quot;perlsub#Private-Variables-via-my%28%29&quot;&gt;&quot;Private Variables via my()&quot; in perlsub&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c046e7769f3ecfcaed8dd98a806a8be83eb888" translate="yes" xml:space="preserve">
          <source>The exact semantics and interface of TYPE and ATTRS are still evolving. TYPE may be a bareword, a constant declared with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; constant&lt;/code&gt; , or &lt;code&gt;__PACKAGE__&lt;/code&gt; . It is currently bound to the use of the &lt;code&gt;fields&lt;/code&gt; pragma, and attributes are handled using the &lt;code&gt;attributes&lt;/code&gt; pragma, or starting from Perl 5.8.0 also via the &lt;code&gt;Attribute::Handlers&lt;/code&gt; module. See &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details, and &lt;a href=&quot;fields&quot;&gt;fields&lt;/a&gt;, &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;, and &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt;.</source>
          <target state="translated">La sem&amp;aacute;ntica exacta y la interfaz de TYPE y ATTRS a&amp;uacute;n est&amp;aacute;n evolucionando. TYPE puede ser una palabra simple, una constante declarada con &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; constant&lt;/code&gt; o &lt;code&gt;__PACKAGE__&lt;/code&gt; . Actualmente est&amp;aacute; vinculado al uso de los &lt;code&gt;fields&lt;/code&gt; pragma, y ​​los atributos se manejan usando los &lt;code&gt;attributes&lt;/code&gt; pragma, o comenzando desde Perl 5.8.0 tambi&amp;eacute;n a trav&amp;eacute;s del m&amp;oacute;dulo &lt;code&gt;Attribute::Handlers&lt;/code&gt; . Consulte &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Variables privadas a trav&amp;eacute;s de my () en perlsub&lt;/a&gt; para obtener detalles y &lt;a href=&quot;fields&quot;&gt;campos&lt;/a&gt; , &lt;a href=&quot;attributes&quot;&gt;atributos&lt;/a&gt; y &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8bfadb028cf247124d08e25f901567b324753c6" translate="yes" xml:space="preserve">
          <source>The exact semantics and interface of TYPE and ATTRS are still evolving. TYPE may be a bareword, a constant declared with &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; constant&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;__package__&quot;&gt;__PACKAGE__&lt;/a&gt;&lt;/code&gt;. It is currently bound to the use of the &lt;code&gt;fields&lt;/code&gt; pragma, and attributes are handled using the &lt;code&gt;attributes&lt;/code&gt; pragma, or starting from Perl 5.8.0 also via the &lt;code&gt;Attribute::Handlers&lt;/code&gt; module. See &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details, and &lt;a href=&quot;../fields&quot;&gt;fields&lt;/a&gt;, &lt;a href=&quot;../attributes&quot;&gt;attributes&lt;/a&gt;, and &lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt;.</source>
          <target state="translated">La sem&amp;aacute;ntica exacta y la interfaz de TYPE y ATTRS a&amp;uacute;n est&amp;aacute;n evolucionando. TYPE puede ser una palabra simple, una constante declarada con &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; constant&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;__package__&quot;&gt;__PACKAGE__&lt;/a&gt;&lt;/code&gt; . Actualmente est&amp;aacute; vinculado al uso de los &lt;code&gt;fields&lt;/code&gt; pragma, y ​​los atributos se manejan usando los &lt;code&gt;attributes&lt;/code&gt; pragma, o comenzando desde Perl 5.8.0 tambi&amp;eacute;n a trav&amp;eacute;s del m&amp;oacute;dulo &lt;code&gt;Attribute::Handlers&lt;/code&gt; . Consulte &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Variables privadas a trav&amp;eacute;s de my () en perlsub&lt;/a&gt; para obtener detalles y &lt;a href=&quot;../fields&quot;&gt;campos&lt;/a&gt; , &lt;a href=&quot;../attributes&quot;&gt;atributos&lt;/a&gt; y &lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8d599de382831818fdc3314909d743d15fa4f85" translate="yes" xml:space="preserve">
          <source>The exact set of characters matched by &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt;, and &lt;code&gt;\w&lt;/code&gt; varies depending on various pragma and regular expression modifiers. It is possible to restrict the match to the ASCII range by using the &lt;code&gt;/a&lt;/code&gt; regular expression modifier. See &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt;.</source>
          <target state="translated">El conjunto exacto de caracteres que coinciden con &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt; y &lt;code&gt;\w&lt;/code&gt; var&amp;iacute;a en funci&amp;oacute;n de varios modificadores de pragma y expresiones regulares. Es posible restringir la coincidencia al rango ASCII usando el modificador de expresi&amp;oacute;n regular &lt;code&gt;/a&lt;/code&gt; . Ver &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23a6f9e0bca7b676930bcaa64329c3c867e0685e" translate="yes" xml:space="preserve">
          <source>The exact set of characters matched by &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, and &lt;code&gt;\w&lt;/code&gt; varies depending on various pragma and regular expression modifiers. It is possible to restrict the match to the ASCII range by using the &lt;code&gt;/a&lt;/code&gt; regular expression modifier. See &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319ae490a71e74c46be21bc09971371ff532d6a8" translate="yes" xml:space="preserve">
          <source>The example above uses &lt;code&gt;select()&lt;/code&gt;, but any similar mechanism should work analogously. &lt;code&gt;IO::Socket::IP&lt;/code&gt; takes care when creating new socket filehandles to preserve the actual file descriptor number, so such techniques as &lt;code&gt;poll&lt;/code&gt; or &lt;code&gt;epoll&lt;/code&gt; should be transparent to its reallocation of a different socket underneath, perhaps in order to switch protocol family between &lt;code&gt;PF_INET&lt;/code&gt; and &lt;code&gt;PF_INET6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130d6baa202fd58693c4e06f24211f73d068ae4b" translate="yes" xml:space="preserve">
          <source>The example below illustrates this feature using the pattern for floating point numbers that was presented earlier on. The three subpatterns that are used more than once are the optional sign, the digit sequence for an integer and the decimal fraction. The &lt;code&gt;DEFINE&lt;/code&gt; group at the end of the pattern contains their definition. Notice that the decimal fraction pattern is the first place where we can reuse the integer pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c6e96fbcd4407d552a2d3c6f391d06e2768883" translate="yes" xml:space="preserve">
          <source>The example below illustrates this feature using the pattern for floating point numbers that was presented earlier on. The three subpatterns that are used more than once are the optional sign, the digit sequence for an integer and the decimal fraction. The DEFINE group at the end of the pattern contains their definition. Notice that the decimal fraction pattern is the first place where we can reuse the integer pattern.</source>
          <target state="translated">El ejemplo que figura a continuación ilustra esta característica utilizando el patrón de números en coma flotante que se presentó anteriormente.Los tres subpatrones que se utilizan más de una vez son el signo opcional,la secuencia de dígitos para un número entero y la fracción decimal.El grupo DEFINE al final del patrón contiene su definición.Note que el patrón de la fracción decimal es el primer lugar donde podemos reutilizar el patrón del número entero.</target>
        </trans-unit>
        <trans-unit id="c669b79bf926dbbee70a1aab0498c88f6e21bd08" translate="yes" xml:space="preserve">
          <source>The example below shows what you need if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95b2fc7c1cff73cb10b6820506fd203858d5dd0" translate="yes" xml:space="preserve">
          <source>The example does not untaint &lt;code&gt;$data&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect, because the characters matched by &lt;code&gt;\w&lt;/code&gt; are determined by the locale. Perl considers that locale definitions are untrustworthy because they contain data from outside the program. If you are writing a locale-aware program, and want to launder data with a regular expression containing &lt;code&gt;\w&lt;/code&gt; , put &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; locale&lt;/code&gt; ahead of the expression in the same block. See &lt;a href=&quot;perllocale#SECURITY&quot;&gt;SECURITY in perllocale&lt;/a&gt; for further discussion and examples.</source>
          <target state="translated">El ejemplo no elimina &lt;code&gt;$data&lt;/code&gt; si &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; est&amp;aacute; en vigor, porque los caracteres que coinciden con &lt;code&gt;\w&lt;/code&gt; est&amp;aacute;n determinados por la locale. Perl considera que las definiciones de configuraci&amp;oacute;n regional no son confiables porque contienen datos externos al programa. Si est&amp;aacute; escribiendo un programa que reconoce la configuraci&amp;oacute;n regional y desea lavar datos con una expresi&amp;oacute;n regular que contenga &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; locale&lt;/code&gt; coloque ninguna configuraci&amp;oacute;n regional antes de la expresi&amp;oacute;n en el mismo bloque. Consulte &lt;a href=&quot;perllocale#SECURITY&quot;&gt;SEGURIDAD en perllocale&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n y ejemplos.</target>
        </trans-unit>
        <trans-unit id="36698f0de180b3f94fb468b665a41ca7be987afb" translate="yes" xml:space="preserve">
          <source>The example does not untaint &lt;code&gt;$data&lt;/code&gt; if &lt;code&gt;use locale&lt;/code&gt; is in effect, because the characters matched by &lt;code&gt;\w&lt;/code&gt; are determined by the locale. Perl considers that locale definitions are untrustworthy because they contain data from outside the program. If you are writing a locale-aware program, and want to launder data with a regular expression containing &lt;code&gt;\w&lt;/code&gt;, put &lt;code&gt;no locale&lt;/code&gt; ahead of the expression in the same block. See &lt;a href=&quot;perllocale#SECURITY&quot;&gt;&quot;SECURITY&quot; in perllocale&lt;/a&gt; for further discussion and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1c21f507054a9e5bf00808f679503b139b9cd1" translate="yes" xml:space="preserve">
          <source>The examples above use a relative path to the perl interpreter, getting whatever version is first in the user's path. If you want a specific version of Perl, say, perl5.14.1, you should place that directly in the &lt;code&gt;#!&lt;/code&gt; line's path.</source>
          <target state="translated">Los ejemplos anteriores usan una ruta relativa al int&amp;eacute;rprete de perl, obteniendo la primera versi&amp;oacute;n en la ruta del usuario. Si desea una versi&amp;oacute;n espec&amp;iacute;fica de Perl, digamos perl5.14.1, debe colocarla directamente en el &lt;code&gt;#!&lt;/code&gt; camino de la l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="ba7768ce3ab49f321e6775f2de42c2a895f7304f" translate="yes" xml:space="preserve">
          <source>The examples given at the start of the document (an error handler and an event driven program) are typical of the two main sorts of flow control that you are likely to encounter with callbacks. There is a very important distinction between them, so pay attention.</source>
          <target state="translated">Los ejemplos que se dan al principio del documento (un manejador de errores y un programa impulsado por eventos)son típicos de los dos tipos principales de control de flujo que es probable que se encuentre con las devoluciones de llamada.Hay una distinción muy importante entre ellos,así que presta atención.</target>
        </trans-unit>
        <trans-unit id="d5744c543ee5f3d510361cac5aaaa06664739511" translate="yes" xml:space="preserve">
          <source>The examples illustrate several aspects: the first three queries target modules, authors, or distros directly and yield exactly one result. The last two use regular expressions and yield several results. The last one targets all of bundles, modules, authors, and distros simultaneously. When more than one result is available, they are printed in one-line format.</source>
          <target state="translated">Los ejemplos ilustran varios aspectos:las tres primeras consultas se dirigen directamente a los módulos,autores o distros y dan exactamente un resultado.Las dos últimas utilizan expresiones regulares y dan varios resultados.La última se dirige a todos los paquetes,módulos,autores y distros simultáneamente.Cuando se dispone de más de un resultado,se imprimen en formato de una línea.</target>
        </trans-unit>
        <trans-unit id="ddf2315db7343aee83255d9099df21a0faac3030" translate="yes" xml:space="preserve">
          <source>The examples in the previous section display an annoying weakness. We were only matching 3-letter words, or chunks of words of 4 letters or less. We'd like to be able to match words or, more generally, strings of any length, without writing out tedious alternatives like &lt;code&gt;\w\w\w\w|\w\w\w|\w\w|\w&lt;/code&gt; .</source>
          <target state="translated">Los ejemplos de la secci&amp;oacute;n anterior muestran una debilidad molesta. Solo coincid&amp;iacute;amos palabras de 3 letras, o trozos de palabras de 4 letras o menos. Nos gustar&amp;iacute;a poder hacer coincidir palabras o, m&amp;aacute;s en general, cadenas de cualquier longitud, sin escribir alternativas tediosas como &lt;code&gt;\w\w\w\w|\w\w\w|\w\w|\w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da6aadb818ba37828bf9750c2c1c42a56a0d0753" translate="yes" xml:space="preserve">
          <source>The examples in the previous section display an annoying weakness. We were only matching 3-letter words, or chunks of words of 4 letters or less. We'd like to be able to match words or, more generally, strings of any length, without writing out tedious alternatives like &lt;code&gt;\w\w\w\w|\w\w\w|\w\w|\w&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a56adef05fecf63fd9cba639dd925bcaf1cb87b" translate="yes" xml:space="preserve">
          <source>The examples show a very simple class that implements a</source>
          <target state="translated">Los ejemplos muestran una clase muy simple que implementa una</target>
        </trans-unit>
        <trans-unit id="45802eeee4d1f7759548f95073ecb55a63eb7a92" translate="yes" xml:space="preserve">
          <source>The examples show this class implemented with different levels of support by &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; . All supported combinations are shown. The difference between implementations is often quite small. The implementations are:</source>
          <target state="translated">Los ejemplos muestran esta clase implementada con diferentes niveles de soporte por &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; . Se muestran todas las combinaciones admitidas. La diferencia entre implementaciones suele ser bastante peque&amp;ntilde;a. Las implementaciones son:</target>
        </trans-unit>
        <trans-unit id="7cfc17e4302419b2090ffa8fca11900025b88c94" translate="yes" xml:space="preserve">
          <source>The examples show this class implemented with different levels of support by &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt;. All supported combinations are shown. The difference between implementations is often quite small. The implementations are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51ffd2e5bcc1a6d7d14bd6f95a324550850104d" translate="yes" xml:space="preserve">
          <source>The excellent Calendar FAQ at &lt;a href=&quot;http://www.tondering.dk/claus/calendar.html&quot;&gt;http://www.tondering.dk/claus/calendar.html&lt;/a&gt;</source>
          <target state="translated">Las excelentes preguntas frecuentes sobre el calendario en &lt;a href=&quot;http://www.tondering.dk/claus/calendar.html&quot;&gt;http://www.tondering.dk/claus/calendar.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b98aabfe9b6ba71ecfd39be082dced0eadaf1cc4" translate="yes" xml:space="preserve">
          <source>The excellent Filter::Util::Call module (by Paul Marquess) provides a usable Perl interface to source filtering, but it is often too powerful and not nearly as simple as it could be.</source>
          <target state="translated">El excelente módulo Filter::Util::Call (de Paul Marquess)proporciona una interfaz de Perl utilizable para el filtrado de la fuente,pero a menudo es demasiado potente y no tan simple como podría ser.</target>
        </trans-unit>
        <trans-unit id="52ea595fb3e7d2ce456e743df519b555912d5e12" translate="yes" xml:space="preserve">
          <source>The exception is for organization-specific email (e.g. foo@yourcompany.com) where policy can be codified in your program. In that case, you could look at $ENV{USER}, $ENV{LOGNAME}, and getpwuid($&amp;lt;) in scalar context, like so:</source>
          <target state="translated">La excepci&amp;oacute;n es para el correo electr&amp;oacute;nico espec&amp;iacute;fico de la organizaci&amp;oacute;n (por ejemplo, foo@yourcompany.com) donde la pol&amp;iacute;tica se puede codificar en su programa. En ese caso, podr&amp;iacute;a mirar $ ENV {USER}, $ ENV {LOGNAME} y getpwuid ($ &amp;lt;) en contexto escalar, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="1b5fd23c00f654857837ce525e2feca5e5a60486" translate="yes" xml:space="preserve">
          <source>The exception to the above rule is when the left-hand string begins with &lt;code&gt;0&lt;/code&gt; and is longer than one character, in this case the magic increment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc87b76bc5dac6308b19a21f2fb89ffe909a88b" translate="yes" xml:space="preserve">
          <source>The exception to the principle of &quot;one tainted value taints the whole expression&quot; is with the ternary conditional operator &lt;code&gt;?:&lt;/code&gt;. Since code with a ternary conditional</source>
          <target state="translated">La excepci&amp;oacute;n al principio de &quot;un valor contaminado corrompe toda la expresi&amp;oacute;n&quot; es con el operador condicional ternario &lt;code&gt;?:&lt;/code&gt; . Dado que el c&amp;oacute;digo con un condicional ternario</target>
        </trans-unit>
        <trans-unit id="5c4020c3e362c07677c68b98797130c8e33e53fa" translate="yes" xml:space="preserve">
          <source>The exception to this rule are</source>
          <target state="translated">La excepción a esta regla son</target>
        </trans-unit>
        <trans-unit id="06cb57f51318b2c753120a0083873c4679095e1b" translate="yes" xml:space="preserve">
          <source>The exception to this rule is if you are calling a Perl subroutine directly from an XSUB function. In this case it is not necessary to use the &lt;code&gt;dSP&lt;/code&gt; macro explicitly--it will be declared for you automatically.</source>
          <target state="translated">La excepci&amp;oacute;n a esta regla es si est&amp;aacute; llamando a una subrutina de Perl directamente desde una funci&amp;oacute;n XSUB. En este caso, no es necesario utilizar la macro &lt;code&gt;dSP&lt;/code&gt; expl&amp;iacute;citamente; se declarar&amp;aacute; autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="0d894dabcea23f9b036a1c82348cf80da10ab49b" translate="yes" xml:space="preserve">
          <source>The exceptions are:</source>
          <target state="translated">Las excepciones son:</target>
        </trans-unit>
        <trans-unit id="3e26c68194190c41dfdad74105f0e492dc235a18" translate="yes" xml:space="preserve">
          <source>The execution order is indicated by &lt;code&gt;===&amp;gt;&lt;/code&gt; marks, thus it is &lt;code&gt;3
4 5 6&lt;/code&gt; (node &lt;code&gt;6&lt;/code&gt; is not included into above listing), i.e., &lt;code&gt;gvsv gvsv add whatever&lt;/code&gt; .</source>
          <target state="translated">El orden de ejecuci&amp;oacute;n se indica con &lt;code&gt;===&amp;gt;&lt;/code&gt; marcas, por lo que es &lt;code&gt;3 4 5 6&lt;/code&gt; (el nodo &lt;code&gt;6&lt;/code&gt; no est&amp;aacute; incluido en la lista anterior), es decir, &lt;code&gt;gvsv gvsv add whatever&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db1745f72327cdbec0c0f35f7353b51ef20c7bd5" translate="yes" xml:space="preserve">
          <source>The execution order is indicated by &lt;code&gt;===&amp;gt;&lt;/code&gt; marks, thus it is &lt;code&gt;3 4 5 6&lt;/code&gt; (node &lt;code&gt;6&lt;/code&gt; is not included into above listing), i.e., &lt;code&gt;gvsv gvsv add whatever&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a81e1fe7a2f079c1b9f8b207b9fe9d777e92c5" translate="yes" xml:space="preserve">
          <source>The executive summary: learn how your filesystem works. The permissions on a file say what can happen to the data in that file. The permissions on a directory say what can happen to the list of files in that directory. If you delete a file, you're removing its name from the directory (so the operation depends on the permissions of the directory, not of the file). If you try to write to the file, the permissions of the file govern whether you're allowed to.</source>
          <target state="translated">El resumen ejecutivo:aprenda cómo funciona su sistema de archivos.Los permisos de un archivo dicen lo que puede suceder con los datos de ese archivo.Los permisos de un directorio dicen lo que puede suceder con la lista de archivos de ese directorio.Si eliminas un archivo,estás eliminando su nombre del directorio (por lo que la operación depende de los permisos del directorio,no del archivo).Si intentas escribir en el archivo,los permisos del archivo determinan si estás autorizado a hacerlo.</target>
        </trans-unit>
        <trans-unit id="8bd1d5ba511947aaf27cf0898729cbcdb3363ec9" translate="yes" xml:space="preserve">
          <source>The existence of a rule does not imply selecting a test. You must still specify the tests to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fc393062d8546f20ed1b167ba8df5f73019ce5" translate="yes" xml:space="preserve">
          <source>The exit code of the executed program.</source>
          <target state="translated">El código de salida del programa ejecutado.</target>
        </trans-unit>
        <trans-unit id="137ed18115f3228ba7f07a48e55913ee96e30593" translate="yes" xml:space="preserve">
          <source>The exit status value to return.</source>
          <target state="translated">El valor del estado de salida para regresar.</target>
        </trans-unit>
        <trans-unit id="0c5c8d24f00e7eedd0cb8f1fea1a1b90fbdc8c11" translate="yes" xml:space="preserve">
          <source>The exit() function does not always exit immediately. It calls any defined &lt;code&gt;END&lt;/code&gt; routines first, but these &lt;code&gt;END&lt;/code&gt; routines may not themselves abort the exit. Likewise any object destructors that need to be called are called before the real exit. &lt;code&gt;END&lt;/code&gt; routines and destructors can change the exit status by modifying &lt;code&gt;$?&lt;/code&gt; . If this is a problem, you can call &lt;code&gt;POSIX::_exit($status)&lt;/code&gt; to avoid END and destructor processing. See &lt;a href=&quot;../perlmod&quot;&gt;perlmod&lt;/a&gt; for details.</source>
          <target state="translated">La funci&amp;oacute;n exit () no siempre sale inmediatamente. Primero llama a cualquier rutina &lt;code&gt;END&lt;/code&gt; definida , pero estas rutinas &lt;code&gt;END&lt;/code&gt; no pueden abortar la salida por s&amp;iacute; mismas. Del mismo modo, cualquier destructor de objeto que deba llamarse se llama antes de la salida real. &lt;code&gt;END&lt;/code&gt; rutinas END y los destructores pueden cambiar el estado de salida modificando &lt;code&gt;$?&lt;/code&gt; . Si esto es un problema, puede llamar a &lt;code&gt;POSIX::_exit($status)&lt;/code&gt; para evitar el procesamiento de END y destructor. Vea &lt;a href=&quot;../perlmod&quot;&gt;perlmod&lt;/a&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="680c902ef0b900a40fad1c488731545af94f9d10" translate="yes" xml:space="preserve">
          <source>The exit() function does not always exit immediately. It calls any defined &lt;code&gt;END&lt;/code&gt; routines first, but these &lt;code&gt;END&lt;/code&gt; routines may not themselves abort the exit. Likewise any object destructors that need to be called are called before the real exit. &lt;code&gt;END&lt;/code&gt; routines and destructors can change the exit status by modifying &lt;code&gt;$?&lt;/code&gt; . If this is a problem, you can call &lt;code&gt;POSIX::_exit($status)&lt;/code&gt; to avoid END and destructor processing. See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for details.</source>
          <target state="translated">La funci&amp;oacute;n exit () no siempre sale inmediatamente. Primero llama a cualquier rutina &lt;code&gt;END&lt;/code&gt; definida , pero estas rutinas &lt;code&gt;END&lt;/code&gt; no pueden abortar la salida por s&amp;iacute; mismas. Del mismo modo, cualquier destructor de objeto que deba llamarse se llama antes de la salida real. &lt;code&gt;END&lt;/code&gt; rutinas END y los destructores pueden cambiar el estado de salida modificando &lt;code&gt;$?&lt;/code&gt; . Si esto es un problema, puede llamar a &lt;code&gt;POSIX::_exit($status)&lt;/code&gt; para evitar el procesamiento de END y destructor. Vea &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="878ff23487a7f8c43fec8d4483cc1765c4df9eb4" translate="yes" xml:space="preserve">
          <source>The experimental &lt;code&gt;given&lt;/code&gt; statement is</source>
          <target state="translated">La declaraci&amp;oacute;n &lt;code&gt;given&lt;/code&gt; experimental es</target>
        </trans-unit>
        <trans-unit id="19bd303111f858742510d8d90c5638313c02c5ce" translate="yes" xml:space="preserve">
          <source>The experimental &lt;code&gt;legacy&lt;/code&gt; pragma was swallowed by the &lt;code&gt;feature&lt;/code&gt; pragma.</source>
          <target state="translated">El pragma del &lt;code&gt;legacy&lt;/code&gt; experimental fue absorbido por el pragma de &lt;code&gt;feature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52d7e8e19cc3efaf2aec8d989a33421d70ed317d" translate="yes" xml:space="preserve">
          <source>The experimental declared_refs feature is not enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccc48fde094b67b79701d699ac45d91d085adcc" translate="yes" xml:space="preserve">
          <source>The experimental feature &lt;code&gt;&quot;(?[...])&quot;&lt;/code&gt; starting in v5.18 accomplishes this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868cc46704185b2a446e1b7a62d0312275a48c48" translate="yes" xml:space="preserve">
          <source>The explanation above has omitted some detail; refer to UAX#24 &quot;Unicode Script Property&quot;: &lt;a href=&quot;https://www.unicode.org/reports/tr24&quot;&gt;https://www.unicode.org/reports/tr24&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0349830ce8cbe97566441b2e1c5b4811ccfb44c1" translate="yes" xml:space="preserve">
          <source>The exponent is an &lt;code&gt;'e'&lt;/code&gt; or &lt;code&gt;'E'&lt;/code&gt;, followed by an integer. So the exponent regexp is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f321e42a52fdc6b5d89f69bf0fc91962da84c32f" translate="yes" xml:space="preserve">
          <source>The exponent is an &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt; , followed by an integer. So the exponent regexp is</source>
          <target state="translated">El exponente es una &lt;code&gt;e&lt;/code&gt; o &lt;code&gt;E&lt;/code&gt; , seguida de un n&amp;uacute;mero entero. Entonces, la expresi&amp;oacute;n regular del exponente es</target>
        </trans-unit>
        <trans-unit id="dc560dadf22f2caa4887dcda366e49e8868f1d51" translate="yes" xml:space="preserve">
          <source>The exponentiation operator is &quot;**&quot;, not &quot;^&quot;. &quot;^&quot; is the XOR operator, as in C. (You know, one could get the feeling that &lt;b&gt;awk&lt;/b&gt; is basically incompatible with C.)</source>
          <target state="translated">El operador de exponenciaci&amp;oacute;n es &quot;**&quot;, no &quot;^&quot;. &quot;^&quot; es el operador XOR, como en C. (Sabes, uno podr&amp;iacute;a tener la sensaci&amp;oacute;n de que &lt;b&gt;awk&lt;/b&gt; es b&amp;aacute;sicamente incompatible con C.)</target>
        </trans-unit>
        <trans-unit id="009dcc9526e9f6902be1b067b6a2b9829ed8f757" translate="yes" xml:space="preserve">
          <source>The expression is evaluated in scalar context. So the following will work:</source>
          <target state="translated">La expresión se evalúa en un contexto escalar.Así que lo siguiente funcionará:</target>
        </trans-unit>
        <trans-unit id="09c23065a9eeac610af39d5a880a04c9ff912e79" translate="yes" xml:space="preserve">
          <source>The ext/ODBM_File/odbm is known to fail with static builds (Configure -Uusedl) due to a known bug in Tru64's static libdbm library. The good news is that you very probably don't need to ever use the ODBM_File extension since more advanced NDBM_File works fine, not to mention the even more advanced DB_File.</source>
          <target state="translated">El archivo ext/ODBM_File/odbm es conocido por fallar con construcciones estáticas (Configure -Uusedl)debido a un error conocido en la biblioteca libdbm estática de Tru64.La buena noticia es que muy probablemente no necesites usar nunca la extensión ODBM_File ya que la más avanzada NDBM_File funciona bien,sin mencionar la aún más avanzada DB_File.</target>
        </trans-unit>
        <trans-unit id="31ec63f172c0fdca1326836d5d87e5fe035f0607" translate="yes" xml:space="preserve">
          <source>The extended filetest functionality is used by Perl only when the argument of the operators is a filename, not when it is a filehandle.</source>
          <target state="translated">La funcionalidad extendida de prueba de archivos es utilizada por Perl sólo cuando el argumento de los operadores es un nombre de archivo,no cuando es un filehandle.</target>
        </trans-unit>
        <trans-unit id="b669bdb080a6675f7c6ed5d24b2ef14539648c80" translate="yes" xml:space="preserve">
          <source>The extension is dynamically linked</source>
          <target state="translated">La extensión está vinculada dinámicamente</target>
        </trans-unit>
        <trans-unit id="f990232badfb418cbf7dd0574833889e9f679aa9" translate="yes" xml:space="preserve">
          <source>The extension is pure perl, so doesn't need linking to the perl executable</source>
          <target state="translated">La extensión es perl puro,por lo que no necesita enlazarse con el ejecutable de perl</target>
        </trans-unit>
        <trans-unit id="13f70d182dd718c2ffdf92971d2248139cbe171e" translate="yes" xml:space="preserve">
          <source>The extension is statically linked to the perl binary</source>
          <target state="translated">La extensión está estáticamente ligada al perl binario</target>
        </trans-unit>
        <trans-unit id="b14db60112e20420246ea9d3dec3923a929f96a3" translate="yes" xml:space="preserve">
          <source>The extracted information is stored in 5 entries in the &lt;code&gt;build&lt;/code&gt; hash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1beda77ee5a84052f068e6757ef13cea3f36f8f" translate="yes" xml:space="preserve">
          <source>The extracted string, including the specified delimiters. If the extraction fails &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">La cadena extra&amp;iacute;da, incluidos los delimitadores especificados. Si la extracci&amp;oacute;n falla, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2570abc8ab1be73d003248dd246a24a2fc5f319" translate="yes" xml:space="preserve">
          <source>The extracted string, including the specified delimiters. If the extraction fails &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3130a57897b10b0bc008c6b4f6ef79e3b3444412" translate="yes" xml:space="preserve">
          <source>The extracted termcap entry is available in the object as &lt;code&gt;$self-&amp;gt;{TERMCAP}&lt;/code&gt; .</source>
          <target state="translated">La entrada termcap extra&amp;iacute;da est&amp;aacute; disponible en el objeto como &lt;code&gt;$self-&amp;gt;{TERMCAP}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adf0aca1542de815275e994553ee7120f60337c3" translate="yes" xml:space="preserve">
          <source>The extracted termcap entry is available in the object as &lt;code&gt;$self-&amp;gt;{TERMCAP}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c328df413a33fa608e46c6826495b03f8d0ee0f6" translate="yes" xml:space="preserve">
          <source>The extraction process works by applying each extractor in sequence to the text string.</source>
          <target state="translated">El proceso de extracción funciona aplicando cada extractor en secuencia a la cadena de texto.</target>
        </trans-unit>
        <trans-unit id="7ad2005947669b79c8509770fad3b2b296acf5fd" translate="yes" xml:space="preserve">
          <source>The fact that such a FILE * has been 'exported' is recorded, (normally by pushing a new :stdio &quot;layer&quot; onto the PerlIO *), which may affect future PerlIO operations on the original PerlIO *. You should not call &lt;code&gt;fclose()&lt;/code&gt; on the file unless you call &lt;code&gt;PerlIO_releaseFILE()&lt;/code&gt; to disassociate it from the PerlIO *. (Do not use PerlIO_importFILE() for doing the disassociation.)</source>
          <target state="translated">El hecho de que dicho ARCHIVO * haya sido 'exportado' se registra (normalmente presionando una nueva &quot;capa&quot;: stdio en PerlIO *), lo que puede afectar las operaciones futuras de PerlIO en el PerlIO * original. No debe llamar a &lt;code&gt;fclose()&lt;/code&gt; en el archivo a menos que llame a &lt;code&gt;PerlIO_releaseFILE()&lt;/code&gt; para disociarlo de PerlIO *. (No utilice PerlIO_importFILE () para realizar la disociaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="357aafdac768e27bb52a043649452bd876a53d4d" translate="yes" xml:space="preserve">
          <source>The factory itself is never instantiated (this</source>
          <target state="translated">La fábrica en sí nunca es instanciada (esto</target>
        </trans-unit>
        <trans-unit id="ee17924499933b661b8e0c34b82c36eff25eeaf5" translate="yes" xml:space="preserve">
          <source>The fastgetcwd() function is provided as a synonym for cwd().</source>
          <target state="translated">La función fastgetcwd()se proporciona como sinónimo de cwd().</target>
        </trans-unit>
        <trans-unit id="3c06a8aa0a4d260ed2765600496ce1fc1ffcef9e" translate="yes" xml:space="preserve">
          <source>The feature logical name &lt;code&gt;PERL_VMS_VTF7_FILENAMES&lt;/code&gt; controls if UNICODE characters in Unix filenames are encoded in VTF-7 notation in the resulting OpenVMS file specification. [Currently under development]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533f832808f430e9fde8557e2b27391f20356a2e" translate="yes" xml:space="preserve">
          <source>The feature logical name DECC$FILENAME_UNIX_REPORT modifies traditional Perl behavior in the conversion of file specifications from Unix to VMS format in order to follow the extended character handling rules now expected by the CRTL. Specifically, when this feature is in effect, the &lt;code&gt;./.../&lt;/code&gt; in a Unix path is now translated to &lt;code&gt;[.^.^.^.]&lt;/code&gt; instead of the traditional VMS &lt;code&gt;[...]&lt;/code&gt; . To be compatible with what MakeMaker expects, if a VMS path cannot be translated to a Unix path, it is passed through unchanged, so &lt;code&gt;unixify(&quot;[...]&quot;)&lt;/code&gt; will return &lt;code&gt;[...]&lt;/code&gt; .</source>
          <target state="translated">El nombre l&amp;oacute;gico de la funci&amp;oacute;n DECC $ FILENAME_UNIX_REPORT modifica el comportamiento tradicional de Perl en la conversi&amp;oacute;n de especificaciones de archivos de formato Unix a VMS para seguir las reglas de manejo de caracteres extendidas que ahora espera el CRTL. Espec&amp;iacute;ficamente, cuando esta caracter&amp;iacute;stica est&amp;aacute; en efecto, el &lt;code&gt;./.../&lt;/code&gt; en una ruta de Unix ahora se traduce a &lt;code&gt;[.^.^.^.]&lt;/code&gt; En lugar del VMS tradicional &lt;code&gt;[...]&lt;/code&gt; . Para ser compatible con lo que espera MakeMaker, si una ruta VMS no se puede traducir a una ruta Unix, se pasa sin cambios, por lo que &lt;code&gt;unixify(&quot;[...]&quot;)&lt;/code&gt; devolver&amp;aacute; &lt;code&gt;[...]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd427ddb1d40a440a4569bc32b983da79c223869" translate="yes" xml:space="preserve">
          <source>The feature logical name DECC$FILENAME_UNIX_REPORT modifies traditional Perl behavior in the conversion of file specifications from Unix to VMS format in order to follow the extended character handling rules now expected by the CRTL. Specifically, when this feature is in effect, the &lt;code&gt;./.../&lt;/code&gt; in a Unix path is now translated to &lt;code&gt;[.^.^.^.]&lt;/code&gt; instead of the traditional VMS &lt;code&gt;[...]&lt;/code&gt;. To be compatible with what MakeMaker expects, if a VMS path cannot be translated to a Unix path, it is passed through unchanged, so &lt;code&gt;unixify(&quot;[...]&quot;)&lt;/code&gt; will return &lt;code&gt;[...]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ee4cd3c900fba7f346eaf4d73c2e59283171b2" translate="yes" xml:space="preserve">
          <source>The feature needs to be enabled with &lt;code&gt;Configure -Dusecbacktrace&lt;/code&gt; .</source>
          <target state="translated">La funci&amp;oacute;n debe habilitarse con &lt;code&gt;Configure -Dusecbacktrace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b1fe35afa1a3972e367d70f65936f774e7c1fb4" translate="yes" xml:space="preserve">
          <source>The feature needs to be enabled with &lt;code&gt;Configure -Dusecbacktrace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9967e9df7e264da6bcdb44f5aee030bc917d02a" translate="yes" xml:space="preserve">
          <source>The features you got from your mother and father, mixed together unpredictably. (See also &lt;b&gt;inheritance&lt;/b&gt; and &lt;b&gt;single inheritance&lt;/b&gt;.) In computer languages (including Perl), it is the notion that a given class may have multiple direct ancestors or &lt;b&gt;base classes&lt;/b&gt;.</source>
          <target state="translated">Las caracter&amp;iacute;sticas que obtuviste de tu madre y tu padre, se mezclaron de manera impredecible. (Consulte tambi&amp;eacute;n &lt;b&gt;herencia&lt;/b&gt; y &lt;b&gt;herencia &lt;/b&gt;&lt;b&gt;&amp;uacute;nica&lt;/b&gt; ). En los lenguajes inform&amp;aacute;ticos (incluido Perl), es la noci&amp;oacute;n de que una clase determinada puede tener m&amp;uacute;ltiples ancestros directos o &lt;b&gt;clases base&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ddb61ef14874404dd766423660c7d397637ace24" translate="yes" xml:space="preserve">
          <source>The features you got from your mother, if she told you that you don&amp;rsquo;t have a father. (See also &lt;b&gt;inheritance&lt;/b&gt; and &lt;b&gt;multiple inheritance&lt;/b&gt;.) In computer languages, the idea that &lt;b&gt;classes&lt;/b&gt; reproduce asexually so that a given class can only have one direct ancestor or &lt;b&gt;base class&lt;/b&gt;. Perl supplies no such restriction, though you may certainly program Perl that way if you like.</source>
          <target state="translated">Las caracter&amp;iacute;sticas que obtuvo de su madre, si ella le dijera que no tiene padre. (Consulte tambi&amp;eacute;n &lt;b&gt;herencia&lt;/b&gt; y &lt;b&gt;herencia &lt;/b&gt;&lt;b&gt;m&amp;uacute;ltiple&lt;/b&gt; ). En los lenguajes inform&amp;aacute;ticos, la idea de que las &lt;b&gt;clases se&lt;/b&gt; reproducen asexualmente de modo que una clase determinada solo puede tener un antepasado directo o una &lt;b&gt;clase base&lt;/b&gt; . Perl no proporciona tal restricci&amp;oacute;n, aunque ciertamente puede programar Perl de esa manera si lo desea.</target>
        </trans-unit>
        <trans-unit id="587f845c68a8e5df6c3b5c11be163e859d4bde0c" translate="yes" xml:space="preserve">
          <source>The few places where stricter matching is used is in the middle of numbers, the &quot;name&quot; property, and in the Perl extension properties that begin or end with an underscore. Stricter matching cares about white space (except adjacent to non-word characters), hyphens, and non-interior underscores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3635eb281607d1f863de82b6a5a308964a4737" translate="yes" xml:space="preserve">
          <source>The field &quot;@*&quot; can be used for printing multi-line, nontruncated values; it should (but need not) appear by itself on a line. A final line feed is chomped off, but all other characters are emitted verbatim.</source>
          <target state="translated">El campo &quot;@*&quot; puede utilizarse para imprimir valores multilínea,no truncados;debería (pero no es necesario)aparecer por sí mismo en una línea.El salto de línea final se corta,pero todos los demás caracteres se emiten textualmente.</target>
        </trans-unit>
        <trans-unit id="90122eb3cf35f8e2aff21a4431fdb4311bb6f9c0" translate="yes" xml:space="preserve">
          <source>The field of Linguistics has expended a great deal of effort over the past century trying to find grammatical patterns which hold across languages; it's been a constant process of people making generalizations that should apply to all languages, only to find out that, all too often, these generalizations fail -- sometimes failing for just a few languages, sometimes whole classes of languages, and sometimes nearly every language in the world except English. Broad statistical trends are evident in what the &quot;average language&quot; is like as far as what its rules can look like, must look like, and cannot look like. But the &quot;average language&quot; is just as unreal a concept as the &quot;average person&quot; -- it runs up against the fact no language (or person) is, in fact, average. The wisdom of past experience leads us to believe that any given language can do whatever it wants, in any order, with appeal to any kind of grammatical categories wants -- case, number, tense, real or metaphoric characteristics of the things that words refer to, arbitrary or predictable classifications of words based on what endings or prefixes they can take, degree or means of certainty about the truth of statements expressed, and so on, ad infinitum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f6e6f64de0d391d989196e8ebb7ddb708ac60a" translate="yes" xml:space="preserve">
          <source>The fields are discussed in more detail below:</source>
          <target state="translated">Los campos se examinan con más detalle a continuación:</target>
        </trans-unit>
        <trans-unit id="c46c3f9340cdb846123d0b6b0164cec0b439e50c" translate="yes" xml:space="preserve">
          <source>The fields are tab-separated. The first column is the depth (zero being the innermost non-skipped frame). In the hex:offset, the hex is where the program counter was in &lt;code&gt;S_parse_body&lt;/code&gt;, and the :offset (might be missing) tells how much inside the &lt;code&gt;S_parse_body&lt;/code&gt; the program counter was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21955b9d1337383a18b406fff73dac35d4d6488" translate="yes" xml:space="preserve">
          <source>The fields are tab-separated. The first column is the depth (zero being the innermost non-skipped frame). In the hex:offset, the hex is where the program counter was in S_parse_body, and the :offset (might be missing) tells how much inside the S_parse_body the program counter was.</source>
          <target state="translated">Los campos están separados por tabulaciones.La primera columna es la profundidad (el cero es el marco más interno no saltado).En el hex:offset,el hex es donde estaba el contador del programa en S_parse_body,y el :offset (podría faltar)dice cuánto dentro del S_parse_body estaba el contador del programa.</target>
        </trans-unit>
        <trans-unit id="f2427d714dfbcb812d5c2c0e464389b37b28e37a" translate="yes" xml:space="preserve">
          <source>The fields in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aabcb5c5289f7ad819b54aa9417f88080d7fec5" translate="yes" xml:space="preserve">
          <source>The fields of interest which may appear in this line are</source>
          <target state="translated">Los campos de interés que pueden aparecer en esta línea son</target>
        </trans-unit>
        <trans-unit id="834f0bb251e57720466af45a551b7e653c4d2d6b" translate="yes" xml:space="preserve">
          <source>The fields of the context struct and the arguments to the &lt;code&gt;cx_*&lt;/code&gt; functions are subject to change between perl releases, representing whatever is convenient or efficient for that release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fbc7508d5d457aedc840547581d13fb785d13c" translate="yes" xml:space="preserve">
          <source>The file</source>
          <target state="translated">El archivo</target>
        </trans-unit>
        <trans-unit id="99944ba23fa1671290cc70fdf7f917ecb5343db9" translate="yes" xml:space="preserve">
          <source>The file (name) the error occurred in.</source>
          <target state="translated">El archivo (nombre)en el que se produjo el error.</target>
        </trans-unit>
        <trans-unit id="801d0d7bebcd5bd5a38aa07b4d567dc82dc85f4a" translate="yes" xml:space="preserve">
          <source>The file (name) the error occurred in. Defaults to the name of the current file being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74280467b06cd39e1ebe6f256e50f06eca04fcbe" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;perlio.c&lt;/code&gt; provides the following layers:</source>
          <target state="translated">El archivo &lt;code&gt;perlio.c&lt;/code&gt; proporciona las siguientes capas:</target>
        </trans-unit>
        <trans-unit id="b4bb1e7661bc100161f83c2b2d4bc9930cd6bed6" translate="yes" xml:space="preserve">
          <source>The file MANIFEST.SKIP may contain regular expressions of files that should be ignored by mkmanifest() and filecheck(). The regular expressions should appear one on each line. Blank lines and lines which start with &lt;code&gt;#&lt;/code&gt; are skipped. Use &lt;code&gt;\#&lt;/code&gt; if you need a regular expression to start with a &lt;code&gt;#&lt;/code&gt; .</source>
          <target state="translated">El archivo MANIFEST.SKIP puede contener expresiones regulares de archivos que mkmanifest () y filecheck () deben ignorar. Las expresiones regulares deben aparecer una en cada l&amp;iacute;nea. Se omiten las l&amp;iacute;neas en blanco y las que comienzan con &lt;code&gt;#&lt;/code&gt; . Use &lt;code&gt;\#&lt;/code&gt; si necesita una expresi&amp;oacute;n regular para comenzar con &lt;code&gt;#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b4d65899438f61d608a7cb61bcc5fc30c8781c4" translate="yes" xml:space="preserve">
          <source>The file MANIFEST.SKIP may contain regular expressions of files that should be ignored by mkmanifest() and filecheck(). The regular expressions should appear one on each line. Blank lines and lines which start with &lt;code&gt;#&lt;/code&gt; are skipped. Use &lt;code&gt;\#&lt;/code&gt; if you need a regular expression to start with a &lt;code&gt;#&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2791b558da2cb7ec65180cdaeb2459b7a1726fa1" translate="yes" xml:space="preserve">
          <source>The file Makefile.PL should look something like this:</source>
          <target state="translated">El archivo Makefile.PL debería verse algo así:</target>
        </trans-unit>
        <trans-unit id="76e388baaf2a00fb72a8272cf31814ec70994241" translate="yes" xml:space="preserve">
          <source>The file Mytest.pm should start with something like this:</source>
          <target state="translated">El archivo Mytest.pm debería empezar con algo como esto:</target>
        </trans-unit>
        <trans-unit id="a37078c2a2fb3ae7f022a61feee12e4a85c77a67" translate="yes" xml:space="preserve">
          <source>The file Unicode/Collate/allkeys.txt was copied verbatim from &lt;a href=&quot;http://www.unicode.org/Public/UCA/6.3.0/allkeys.txt&quot;&gt;http://www.unicode.org/Public/UCA/6.3.0/allkeys.txt&lt;/a&gt;. For this file, Copyright (c) 2001-2012 Unicode, Inc. Distributed under the Terms of Use in &lt;a href=&quot;http://www.unicode.org/copyright.html&quot;&gt;http://www.unicode.org/copyright.html&lt;/a&gt;.</source>
          <target state="translated">El archivo Unicode / Collate / allkeys.txt se copi&amp;oacute; literalmente de &lt;a href=&quot;http://www.unicode.org/Public/UCA/6.3.0/allkeys.txt&quot;&gt;http://www.unicode.org/Public/UCA/6.3.0/allkeys.txt&lt;/a&gt; . Para este archivo, Copyright (c) 2001-2012 Unicode, Inc. Distribuido bajo los T&amp;eacute;rminos de uso en &lt;a href=&quot;http://www.unicode.org/copyright.html&quot;&gt;http://www.unicode.org/copyright.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30a5f318824f5507113c28e19247cf8309413692" translate="yes" xml:space="preserve">
          <source>The file Unicode/Collate/allkeys.txt was copied verbatim from &lt;a href=&quot;http://www.unicode.org/Public/UCA/9.0.0/allkeys.txt&quot;&gt;http://www.unicode.org/Public/UCA/9.0.0/allkeys.txt&lt;/a&gt;. For this file, Copyright (c) 2016 Unicode, Inc.; distributed under the Terms of Use in &lt;a href=&quot;http://www.unicode.org/terms_of_use.html&quot;&gt;http://www.unicode.org/terms_of_use.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588cd9780438caba5355d1e82516b077a96efe46" translate="yes" xml:space="preserve">
          <source>The file in which the error occurred (eg, &lt;code&gt;myscript.pl&lt;/code&gt; or &lt;code&gt;MyTest.pm&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1744236e794a4c53bf20da07fd1df8dc62fc8e81" translate="yes" xml:space="preserve">
          <source>The file is</source>
          <target state="translated">El archivo es</target>
        </trans-unit>
        <trans-unit id="e4567b3de0171c763b083662777b94d3405e1c0f" translate="yes" xml:space="preserve">
          <source>The file is a sparse file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a1515b1fc6663ef9dea0c0281497256e9502ad" translate="yes" xml:space="preserve">
          <source>The file is being used for temporary storage. File systems avoid writing data back to mass storage if sufficient cache memory is available, because often the application deletes the temporary file shortly after the handle is closed. In that case, the system can entirely avoid writing the data. Otherwise, the data will be written after the handle is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a42520a58ddeeb12292112f2a308b0310a0a00" translate="yes" xml:space="preserve">
          <source>The file is removed when the filehandle is closed or when the program exits. No access to the filename is provided.</source>
          <target state="translated">El archivo se elimina cuando se cierra el filehandle o cuando el programa sale.No se proporciona acceso al nombre del archivo.</target>
        </trans-unit>
        <trans-unit id="5b68113e94418bbe01dba1e8408762baaba90492" translate="yes" xml:space="preserve">
          <source>The file must return true as the last statement to indicate successful execution of any initialization code, so it's customary to end such a file with &lt;code&gt;1;&lt;/code&gt; unless you're sure it'll return true otherwise. But it's better just to put the &lt;code&gt;1;&lt;/code&gt; , in case you add more statements.</source>
          <target state="translated">El archivo debe devolver verdadero como la &amp;uacute;ltima declaraci&amp;oacute;n para indicar la ejecuci&amp;oacute;n exitosa de cualquier c&amp;oacute;digo de inicializaci&amp;oacute;n, por lo que es habitual terminar dicho archivo con &lt;code&gt;1;&lt;/code&gt; a menos que est&amp;eacute; seguro de que volver&amp;aacute; a ser verdadero de lo contrario. Pero es mejor poner el &lt;code&gt;1;&lt;/code&gt; , en caso de que agregue m&amp;aacute;s declaraciones.</target>
        </trans-unit>
        <trans-unit id="db479c8e212dd28f37cf11de532fb13a4706ab4c" translate="yes" xml:space="preserve">
          <source>The file must return true as the last statement to indicate successful execution of any initialization code, so it's customary to end such a file with &lt;code&gt;1;&lt;/code&gt; unless you're sure it'll return true otherwise. But it's better just to put the &lt;code&gt;1;&lt;/code&gt;, in case you add more statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda785c206d1d83026d51c7970996f0a544bbd22" translate="yes" xml:space="preserve">
          <source>The file named in VERSION_FROM is not added as a dependency to Makefile. This is not really correct, but it would be a major pain during development to have to rewrite the Makefile for any smallish change in that file. If you want to make sure that the Makefile contains the correct VERSION macro after any change of the file, you would have to do something like</source>
          <target state="translated">El archivo llamado en VERSION_FROM no se añade como una dependencia al Makefile.Esto no es realmente correcto,pero sería un gran dolor durante el desarrollo tener que reescribir el Makefile por cualquier pequeño cambio en ese archivo.Si quiere asegurarse de que el Makefile contiene la macro VERSION correcta después de cualquier cambio en el fichero,tendría que hacer algo como</target>
        </trans-unit>
        <trans-unit id="1264aef66e240939ce372646b5dc5401497e1664" translate="yes" xml:space="preserve">
          <source>The file or directory has an associated reparse point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af548b827b63fa83aaea96b3b1471e3f70a720b8" translate="yes" xml:space="preserve">
          <source>The file or directory has no other attributes set. This attribute is valid only if used alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a20833b40e53533fae911a70eb77893d34ddc0e" translate="yes" xml:space="preserve">
          <source>The file or directory is an archive file or directory. Applications use this attribute to mark files for backup or removal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a28a2595e27b62a75bd273e98ef20b3ef8db95b" translate="yes" xml:space="preserve">
          <source>The file or directory is compressed. For a file, this means that all of the data in the file is compressed. For a directory, this means that compression is the default for newly created files and subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d84e09e4ae07a74635af247678d4e0053654f7b" translate="yes" xml:space="preserve">
          <source>The file or directory is encrypted. For a file, this means that all data streams in the file are encrypted. For a directory, this means that encryption is the default for newly created files and subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97235d485d43a9b6726df3990eccad2157355604" translate="yes" xml:space="preserve">
          <source>The file or directory is hidden. It is not included in an ordinary directory listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511d8ef3c0880481e73ffbe5546aad0ca9af7623" translate="yes" xml:space="preserve">
          <source>The file or directory is part of, or is used exclusively by, the operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a862ef7b392abfc56ec7987f674bfc97e4e196" translate="yes" xml:space="preserve">
          <source>The file or directory is read-only. Applications can read the file but cannot write to it or delete it. In the case of a directory, applications cannot delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdaf2cba4d9764ecdf7f47c7aa146b4c33b7bbf0" translate="yes" xml:space="preserve">
          <source>The file redirection characters &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, and &quot;|&quot; can be quoted by double quotes (although there are suggestions that this may not always be true). Single quotes are not treated as quotes by the shell or the C runtime, they don't get stripped by the shell (just to make this type of quoting completely useless). The caret &quot;^&quot; has also been observed to behave as a quoting character, but this appears to be a shell feature, and the caret is not stripped from the command line, so Perl still sees it (and the C runtime phase does not treat the caret as a quote character).</source>
          <target state="translated">Los caracteres de redirecci&amp;oacute;n de archivos &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot; y &quot;|&quot; se puede citar con comillas dobles (aunque se sugiere que esto no siempre sea cierto). Las comillas simples no son tratadas como comillas por el shell o el tiempo de ejecuci&amp;oacute;n de C, no son eliminadas por el shell (solo para hacer que este tipo de comillas sea completamente in&amp;uacute;til). Tambi&amp;eacute;n se ha observado que el signo de intercalaci&amp;oacute;n &quot;^&quot; se comporta como un car&amp;aacute;cter de comillas, pero esto parece ser una caracter&amp;iacute;stica de shell, y el signo de intercalaci&amp;oacute;n no se quita de la l&amp;iacute;nea de comando, por lo que Perl a&amp;uacute;n lo ve (y la fase de tiempo de ejecuci&amp;oacute;n de C no trata el s&amp;iacute;mbolo de intercalaci&amp;oacute;n como car&amp;aacute;cter de cita).</target>
        </trans-unit>
        <trans-unit id="50901ff92251eec862c454e35476bb796a0417dd" translate="yes" xml:space="preserve">
          <source>The file returned by File::Temp will have been opened in binary mode if such a mode is available. If that is not correct, use the &lt;code&gt;binmode()&lt;/code&gt; function to change the mode of the filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fb6cb3aabc05d2c0113ff975b6b538671a53b3" translate="yes" xml:space="preserve">
          <source>The file returned by File::Temp will have been opened in binary mode if such a mode is available. If that is not correct, use the C</source>
          <target state="translated">El archivo devuelto por File::Temp se habrá abierto en modo binario si tal modo está disponible.Si eso no es correcto,use el C</target>
        </trans-unit>
        <trans-unit id="ce9457f95e305ab599387997a39303f4f4596d9a" translate="yes" xml:space="preserve">
          <source>The file specifications of &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; will be converted to &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;[-]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1bf193f0391c5390c8fed583c48df05d19c307" translate="yes" xml:space="preserve">
          <source>The file system preserves Unicode in file names [true for &quot;NTFS&quot;].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb5efb93d11a4fd3e9514acb9b3c301836d1d02" translate="yes" xml:space="preserve">
          <source>The file system preserves the case of file names [usually true]. That is, it doesn't change the case of file names such as forcing them to upper- or lower-case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04a32c75b0e4d58abe85e387d4b6865a5c9ef55" translate="yes" xml:space="preserve">
          <source>The file system supports compression on a per-file basis [true for &quot;NTFS&quot;].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d32a15b0b05b7bd2cbe516ad58a7e5b3062c6e8" translate="yes" xml:space="preserve">
          <source>The file system supports setting Access Control Lists on files [true for &quot;NTFS&quot;].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fe12a81a2024d0eb3a6b039559611ea6c933d5" translate="yes" xml:space="preserve">
          <source>The file system supports the ability to not ignore the case of file names [but might ignore case the way you are using it]. That is, the file system has the ability to force you to get the letter case of a file's name exactly right to be able to open it. This is true for &quot;NTFS&quot; file systems, even though case in file names is usually still ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3318e11fa92791fcdb7d551f55db23d41576d211" translate="yes" xml:space="preserve">
          <source>The file type, or extension, is always present in a VMS-format file specification even if it's zero-length. This means that, by default, &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt; will return a trailing dot on a file with no extension, so where you would see &lt;code&gt;&quot;a&quot;&lt;/code&gt; on Unix you'll see &lt;code&gt;&quot;a.&quot;&lt;/code&gt; on VMS. However, the trailing dot may be suppressed by enabling the &lt;code&gt;DECC$READDIR_DROPDOTNOTYPE&lt;/code&gt; feature in the environment (see the CRTL documentation on feature logical names).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c1f1869978b35696fb14c540a8ba10948b7605" translate="yes" xml:space="preserve">
          <source>The file type, or extension, is always present in a VMS-format file specification even if it's zero-length. This means that, by default, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; will return a trailing dot on a file with no extension, so where you would see &lt;code&gt;&quot;a&quot;&lt;/code&gt; on Unix you'll see &lt;code&gt;&quot;a.&quot;&lt;/code&gt; on VMS. However, the trailing dot may be suppressed by enabling the &lt;code&gt;DECC$READDIR_DROPDOTNOTYPE&lt;/code&gt; feature in the environment (see the CRTL documentation on feature logical names).</source>
          <target state="translated">El tipo de archivo, o extensi&amp;oacute;n, siempre est&amp;aacute; presente en una especificaci&amp;oacute;n de archivo con formato VMS, incluso si tiene una longitud cero. Esto significa que, de forma predeterminada, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; devolver&amp;aacute; un punto final en un archivo sin extensi&amp;oacute;n, por lo que donde ver&amp;aacute; &lt;code&gt;&quot;a&quot;&lt;/code&gt; en Unix, ver&amp;aacute; &lt;code&gt;&quot;a.&quot;&lt;/code&gt; en VMS. Sin embargo, el punto final se puede suprimir habilitando la funci&amp;oacute;n &lt;code&gt;DECC$READDIR_DROPDOTNOTYPE&lt;/code&gt; en el entorno (consulte la documentaci&amp;oacute;n de CRTL sobre nombres l&amp;oacute;gicos de funciones).</target>
        </trans-unit>
        <trans-unit id="4023271c9fc7425e571468846ea1d383c9d49eba" translate="yes" xml:space="preserve">
          <source>The file types are:</source>
          <target state="translated">Los tipos de archivo son:</target>
        </trans-unit>
        <trans-unit id="913f7be6fa85f1e72e30e862d223c440b0b1e681" translate="yes" xml:space="preserve">
          <source>The file will not be indexed by the content indexing service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43719b35ec87acc604024ce99c0c8fb60624b26e" translate="yes" xml:space="preserve">
          <source>The file's mode</source>
          <target state="translated">El modo de archivo</target>
        </trans-unit>
        <trans-unit id="a95c16ea1ecea8120f9e1164c67484d409f61395" translate="yes" xml:space="preserve">
          <source>The file's name</source>
          <target state="translated">El nombre del archivo</target>
        </trans-unit>
        <trans-unit id="4b9a5685b1075bc4b20ae964579e2b1d813d620d" translate="yes" xml:space="preserve">
          <source>The filehandle behaves normally for the parent, but I/O to that filehandle is piped from/to the STDOUT/STDIN of the child process. In the child process, the filehandle isn't opened--I/O happens from/to the new STDOUT/STDIN. Typically this is used like the normal piped open when you want to exercise more control over just how the pipe command gets executed, such as when running setuid and you don't want to have to scan shell commands for metacharacters.</source>
          <target state="translated">El filehandle se comporta normalmente para el padre,pero la E/S de ese filehandle se canaliza desde/hacia el STDOUT/STDIN del proceso del hijo.En el proceso hijo,el filehandle no se abre,la E/S pasa desde/a el nuevo STDOUT/STDIN.Típicamente,esto se usa como el pipe pipe normal abierto cuando se quiere ejercer un mayor control sobre la forma en que se ejecuta el comando pipe,como cuando se ejecuta setuid y no se quiere tener que buscar metacaracteres en los comandos del shell.</target>
        </trans-unit>
        <trans-unit id="92ee26a1481d9c364e91c69e1999f81d1550b5da" translate="yes" xml:space="preserve">
          <source>The filehandle will be closed when its reference count reaches zero. If it is a lexically scoped variable declared with &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt;, that usually means the end of the enclosing scope. However, this automatic close does not check for errors, so it is better to explicitly close filehandles, especially those used for writing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d3d5cbabb04fbe3144e08782ff5dbb8eaf643d" translate="yes" xml:space="preserve">
          <source>The filehandle will be closed when its reference count reaches zero. If it is a lexically scoped variable declared with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, that usually means the end of the enclosing scope. However, this automatic close does not check for errors, so it is better to explicitly close filehandles, especially those used for writing:</source>
          <target state="translated">El identificador de archivo se cerrar&amp;aacute; cuando su recuento de referencias llegue a cero. Si es una variable de &amp;aacute;mbito l&amp;eacute;xico declarada con &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , eso generalmente significa el final del &amp;aacute;mbito adjunto. Sin embargo, este cierre autom&amp;aacute;tico no busca errores, por lo que es mejor cerrar expl&amp;iacute;citamente los identificadores de archivos, especialmente los que se usan para escribir:</target>
        </trans-unit>
        <trans-unit id="c6da7495029a8eadd3a9c0429778422e3ffb1d61" translate="yes" xml:space="preserve">
          <source>The filehandle will be closed when its reference count reaches zero. If it is a lexically scoped variable declared with &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, that usually means the end of the enclosing scope. However, this automatic close does not check for errors, so it is better to explicitly close filehandles, especially those used for writing:</source>
          <target state="translated">El identificador de archivo se cerrar&amp;aacute; cuando su recuento de referencias llegue a cero. Si es una variable de &amp;aacute;mbito l&amp;eacute;xico declarada con &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , eso generalmente significa el final del &amp;aacute;mbito adjunto. Sin embargo, este cierre autom&amp;aacute;tico no busca errores, por lo que es mejor cerrar expl&amp;iacute;citamente los identificadores de archivos, especialmente los que se usan para escribir:</target>
        </trans-unit>
        <trans-unit id="f157c14e0e96a0cb19a8e1a0df5c9ee87ca4b5e2" translate="yes" xml:space="preserve">
          <source>The filehandles STDIN, STDOUT, and STDERR are predefined. (The filehandles &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; , and &lt;code&gt;stderr&lt;/code&gt; will also work except in packages, where they would be interpreted as local identifiers rather than global.) Additional filehandles may be created with the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; function, amongst others. See &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; and &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; for details on this.</source>
          <target state="translated">Los identificadores de archivo STDIN, STDOUT y STDERR est&amp;aacute;n predefinidos. (Los identificadores de archivo &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; y &lt;code&gt;stderr&lt;/code&gt; tambi&amp;eacute;n funcionar&amp;aacute;n excepto en paquetes, donde se interpretar&amp;iacute;an como identificadores locales en lugar de globales). Se pueden crear identificadores de archivo adicionales con la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; , entre otras. Vea &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; y &lt;a href=&quot;functions/open&quot;&gt;abra&lt;/a&gt; para obtener detalles sobre esto.</target>
        </trans-unit>
        <trans-unit id="dabead5f141fbdd7cbaf6b6ee9ed1c9d5ac4b10f" translate="yes" xml:space="preserve">
          <source>The filehandles STDIN, STDOUT, and STDERR are predefined. (The filehandles &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; will also work except in packages, where they would be interpreted as local identifiers rather than global.) Additional filehandles may be created with the &lt;code&gt;open()&lt;/code&gt; function, amongst others. See &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; and &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt; for details on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586bcd238ccd4b9fecd344d54e37e9531bdb9cd2" translate="yes" xml:space="preserve">
          <source>The filehandles may also be integers, in which case they are understood as file descriptors.</source>
          <target state="translated">Los mangos de los archivos también pueden ser enteros,en cuyo caso se entienden como descriptores de archivos.</target>
        </trans-unit>
        <trans-unit id="66a7978092f9f45d843d817f4a627ae3fdb00a8b" translate="yes" xml:space="preserve">
          <source>The filename of the data store holding the data that App::Prove::State reads.</source>
          <target state="translated">El nombre de archivo del almacén de datos que contiene los datos que App::Probar::Estado lee.</target>
        </trans-unit>
        <trans-unit id="6d594502076d5702a51ff03f260fd4c765a898ae" translate="yes" xml:space="preserve">
          <source>The filename of the perllibrary that will be used together with this extension. Defaults to libperl.a.</source>
          <target state="translated">El nombre de archivo de la perlibrería que se utilizará junto con esta extensión.Por defecto a libperl.a.</target>
        </trans-unit>
        <trans-unit id="76201dda41fb8f7d14160ae0f46e9ddf9f7d7f60" translate="yes" xml:space="preserve">
          <source>The filename passed to the one- and two-argument forms of &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; will have leading and trailing whitespace deleted and normal redirection characters honored. This property, known as &quot;magic open&quot;, can often be used to good effect. A user could specify a filename of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b0656face1bd799f2d3aeeb4a33e8ccdb99fbf" translate="yes" xml:space="preserve">
          <source>The filename passed to the one- and two-argument forms of open() will have leading and trailing whitespace deleted and normal redirection characters honored. This property, known as &quot;magic open&quot;, can often be used to good effect. A user could specify a filename of</source>
          <target state="translated">El nombre del archivo pasado a las formas de uno y dos argumentos de open()tendrá los espacios en blanco principales y finales borrados y los caracteres de redirección normales honrados.Esta propiedad,conocida como &quot;magic open&quot;,a menudo puede ser utilizada con buenos resultados.Un usuario podría especificar un nombre de archivo de</target>
        </trans-unit>
        <trans-unit id="6d720ff4e8b207a8fa86d2d1f6ed053fe36cb247" translate="yes" xml:space="preserve">
          <source>The files</source>
          <target state="translated">Los archivos</target>
        </trans-unit>
        <trans-unit id="5e8ac4ea16fdec255bb3d994323e38344f15cd1a" translate="yes" xml:space="preserve">
          <source>The files in the &quot;qnx&quot; directory are:</source>
          <target state="translated">Los archivos en el directorio &quot;qnx&quot; son:</target>
        </trans-unit>
        <trans-unit id="ccf1a34f9c5304eccd7056360fe19cfcc880dfc0" translate="yes" xml:space="preserve">
          <source>The filesystem may support neither access timestamp nor change timestamp (meaning that about the only portable timestamp is the modification timestamp), or one second granularity of any timestamps (e.g. the FAT filesystem limits the time granularity to two seconds).</source>
          <target state="translated">El sistema de archivos puede no admitir ni la marca de tiempo de acceso ni la marca de tiempo de modificación (lo que significa que la única marca de tiempo portátil es la marca de tiempo de modificación),o la granularidad de un segundo de cualquier marca de tiempo (por ejemplo,el sistema de archivos FAT limita la granularidad de tiempo a dos segundos).</target>
        </trans-unit>
        <trans-unit id="9640e3801c8da6fb8d4c4212946957e9fbfe8dbf" translate="yes" xml:space="preserve">
          <source>The filesystem may support neither hard links (&lt;a href=&quot;perlfunc#link-OLDFILE%2CNEWFILE&quot;&gt;&lt;code&gt;link&lt;/code&gt;&lt;/a&gt;) nor symbolic links (&lt;a href=&quot;perlfunc#symlink-OLDFILE%2CNEWFILE&quot;&gt;&lt;code&gt;symlink&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#readlink-EXPR&quot;&gt;&lt;code&gt;readlink&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#lstat-FILEHANDLE&quot;&gt;&lt;code&gt;lstat&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acc2f4b822151bd730e57f84d225c79d062f507" translate="yes" xml:space="preserve">
          <source>The filesystem may support neither hard links (&lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt;) nor symbolic links (&lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">El sistema de ficheros puede soportar enlaces ni duros ( &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; ) ni enlaces simb&amp;oacute;licos ( &lt;code&gt;&lt;a href=&quot;functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="15629c3f6edb637003db8544e5aa317bc95e5e82" translate="yes" xml:space="preserve">
          <source>The filesystem of Symbian devices uses DOSish syntax, &quot;drives&quot; separated from paths by a colon, and backslashes for the path. The exact assignment of the drives probably varies between platforms, but for example in Series 60 you might see C: as the (flash) main memory, D: as the RAM drive, E: as the memory card (MMC), Z: as the ROM. In Series 80 D: is the memory card. As far the devices go the NUL: is the bit bucket, the COMx: are the serial lines, IRCOMx: are the IR ports, TMP: might be C:\System\Temp. Remember to double those backslashes in doublequoted strings.</source>
          <target state="translated">El sistema de archivos de los dispositivos Symbian utiliza la sintaxis DOSish,&quot;unidades&quot; separadas de las rutas por dos puntos y barras invertidas para la ruta.La asignación exacta de las unidades probablemente varía entre plataformas,pero por ejemplo en la Serie 60 se podría ver C:como la memoria principal (flash),D:como la unidad de RAM,E:como la tarjeta de memoria (MMC),Z:como la ROM.En la Serie 80 D:es la tarjeta de memoria.En cuanto a los dispositivos,el NUL:es el cubo de bits,el COMx:son las líneas serie,IRCOMx:son los puertos IR,TMP:podría ser C:\N-Temperatura del sistema.Recuerda doblar las barras invertidas en las cadenas de doble cita.</target>
        </trans-unit>
        <trans-unit id="60abfd860ab77072c0ffed33f686231d933f221b" translate="yes" xml:space="preserve">
          <source>The filetest operators &lt;code&gt;-t&lt;/code&gt; , &lt;code&gt;-T&lt;/code&gt; and &lt;code&gt;-B&lt;/code&gt; are not implemented, as they require more information than just a stat buffer.</source>
          <target state="translated">Los operadores de prueba de archivos &lt;code&gt;-t&lt;/code&gt; , &lt;code&gt;-T&lt;/code&gt; y &lt;code&gt;-B&lt;/code&gt; no est&amp;aacute;n implementados, ya que requieren m&amp;aacute;s informaci&amp;oacute;n que solo un b&amp;uacute;fer de estad&amp;iacute;sticas.</target>
        </trans-unit>
        <trans-unit id="2f0292fee7197d3e8ac530c889c496fd989569af" translate="yes" xml:space="preserve">
          <source>The filetest operators &lt;code&gt;-t&lt;/code&gt;, &lt;code&gt;-T&lt;/code&gt; and &lt;code&gt;-B&lt;/code&gt; are not implemented, as they require more information than just a stat buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32f19af093b1f7fb24c634263035e297b5a2ba3" translate="yes" xml:space="preserve">
          <source>The filter ensures that Perl parses the code between the &amp;lt;DEBUG_BEGIN&amp;gt; and &lt;code&gt;DEBUG_END&lt;/code&gt; markers only when the &lt;code&gt;DEBUG&lt;/code&gt; environment variable exists. That means that when &lt;code&gt;DEBUG&lt;/code&gt; does exist, the code above should be passed through the filter unchanged. The marker lines can also be passed through as-is, because the Perl parser will see them as comment lines. When &lt;code&gt;DEBUG&lt;/code&gt; isn't set, we need a way to disable the debug code. A simple way to achieve that is to convert the lines between the two markers into comments:</source>
          <target state="translated">El filtro asegura que Perl analiza el c&amp;oacute;digo entre los marcadores &amp;lt;DEBUG_BEGIN&amp;gt; y &lt;code&gt;DEBUG_END&lt;/code&gt; solo cuando existe la variable de entorno &lt;code&gt;DEBUG&lt;/code&gt; . Eso significa que cuando &lt;code&gt;DEBUG&lt;/code&gt; existe, el c&amp;oacute;digo anterior debe pasar a trav&amp;eacute;s del filtro sin cambios. Las l&amp;iacute;neas de marcador tambi&amp;eacute;n se pueden pasar tal cual, porque el analizador de Perl las ver&amp;aacute; como l&amp;iacute;neas de comentario. Cuando &lt;code&gt;DEBUG&lt;/code&gt; no est&amp;aacute; configurado, necesitamos una forma de deshabilitar el c&amp;oacute;digo de depuraci&amp;oacute;n. Una forma sencilla de lograrlo es convertir las l&amp;iacute;neas entre los dos marcadores en comentarios:</target>
        </trans-unit>
        <trans-unit id="3cfa6a6fd2754ac19a694b001066c8361c789aec" translate="yes" xml:space="preserve">
          <source>The filter included are:</source>
          <target state="translated">Los filtros incluidos son:</target>
        </trans-unit>
        <trans-unit id="06dac022e678c85372a6fa4a8e6e10c155086a90" translate="yes" xml:space="preserve">
          <source>The filter is applied to</source>
          <target state="translated">El filtro se aplica a</target>
        </trans-unit>
        <trans-unit id="6311b9692024a04fd6e913eb59f189ec85a241cf" translate="yes" xml:space="preserve">
          <source>The filter is applied to the key</source>
          <target state="translated">El filtro se aplica a la llave</target>
        </trans-unit>
        <trans-unit id="edd6196707ee8763311d3aafd47d83821af190dd" translate="yes" xml:space="preserve">
          <source>The filter is applied to the value</source>
          <target state="translated">El filtro se aplica al valor</target>
        </trans-unit>
        <trans-unit id="6693f0e2b9229e67ead2ac6746c8771a8ed55fa9" translate="yes" xml:space="preserve">
          <source>The final &lt;code&gt;PUTBACK&lt;/code&gt; is used to leave the Perl stack in a consistent state before exiting the function. This is necessary because when we popped the return value from the stack with &lt;code&gt;POPi&lt;/code&gt; it updated only our local copy of the stack pointer. Remember, &lt;code&gt;PUTBACK&lt;/code&gt; sets the global stack pointer to be the same as our local copy.</source>
          <target state="translated">El &lt;code&gt;PUTBACK&lt;/code&gt; final se usa para dejar la pila de Perl en un estado consistente antes de salir de la funci&amp;oacute;n. Esto es necesario porque cuando sacamos el valor de retorno de la pila con &lt;code&gt;POPi&lt;/code&gt; , se actualizaba solo nuestra copia local del puntero de la pila. Recuerde, &lt;code&gt;PUTBACK&lt;/code&gt; establece el puntero de la pila global para que sea el mismo que nuestra copia local.</target>
        </trans-unit>
        <trans-unit id="6d574089f345d41e6ac1476fc2b80885aa410f07" translate="yes" xml:space="preserve">
          <source>The final character can't be a hyphen, colon, or period. URLs ending with these characters, while allowed by XHTML, can be awkward to extract from plain text.</source>
          <target state="translated">El carácter final no puede ser un guión,dos puntos o un punto.Las URLs que terminan con estos caracteres,aunque permitidas por el XHTML,pueden ser difíciles de extraer del texto simple.</target>
        </trans-unit>
        <trans-unit id="0a99e11f3a928dd6413c811829c3b9af3764501f" translate="yes" xml:space="preserve">
          <source>The final difference between regular bracketed character classes and these, is that it is not possible to get these to match a multi-character fold. Thus,</source>
          <target state="translated">La diferencia final entre las clases de caracteres entre corchetes regulares y éstas,es que no es posible hacer que éstas coincidan con un pliegue de varios caracteres.Por lo tanto,</target>
        </trans-unit>
        <trans-unit id="cde87782285bb08650f77bdd2e4ce0e06adc25ff" translate="yes" xml:space="preserve">
          <source>The final element of a list assignment may be an array or a hash:</source>
          <target state="translated">El elemento final de la asignación de una lista puede ser una matriz o un hash:</target>
        </trans-unit>
        <trans-unit id="bee7b4f4630bbb2daf491aa012bc945e164b3e70" translate="yes" xml:space="preserve">
          <source>The final example shows that the characters &lt;code&gt;&quot;{&quot;&lt;/code&gt; and &lt;code&gt;&quot;}&quot;&lt;/code&gt; are metacharacters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74663d384e88ec12c85ff6a9f4b23592b8a3858" translate="yes" xml:space="preserve">
          <source>The final line (with Index [242]) means that the value for all code points above the legal Unicode maximum code point have the value &quot;No_Block&quot;, which is the term Unicode uses for a non-existing block.</source>
          <target state="translated">La última línea (con el índice [242])significa que el valor de todos los puntos de código por encima del punto de código máximo legal de Unicode tienen el valor &quot;No_Bloque&quot;,que es el término que Unicode utiliza para un bloque inexistente.</target>
        </trans-unit>
        <trans-unit id="e6811c076957053b2764757de731f2de38b4111a" translate="yes" xml:space="preserve">
          <source>The final operation uses the backslash character to invalidate the special meaning of an open square bracket &lt;code&gt;[&lt;/code&gt;, the asterisk, backslash or the question mark. Two backslashes in sequence will result in the evaluation of the backslash as a character with no special meaning.</source>
          <target state="translated">La operaci&amp;oacute;n final utiliza el car&amp;aacute;cter de barra invertida para invalidar el significado especial de un corchete abierto &lt;code&gt;[&lt;/code&gt; , el asterisco, la barra invertida o el signo de interrogaci&amp;oacute;n. Dos barras invertidas en secuencia dar&amp;aacute;n como resultado la evaluaci&amp;oacute;n de la barra invertida como un car&amp;aacute;cter sin significado especial.</target>
        </trans-unit>
        <trans-unit id="be0c78c80ebce8da51fa36633d30ae64f567f49f" translate="yes" xml:space="preserve">
          <source>The final semicolon in a block is optional, as is the final comma in a list. Good style (see &lt;a href=&quot;perlstyle&quot;&gt;perlstyle&lt;/a&gt;) says to put them in except for one-liners:</source>
          <target state="translated">El punto y coma final en un bloque es opcional, al igual que la coma final en una lista. El buen estilo (ver estilo &lt;a href=&quot;perlstyle&quot;&gt;perl&lt;/a&gt; ) dice que los coloquemos excepto en las frases ingeniosas :</target>
        </trans-unit>
        <trans-unit id="16f205f9e57e8503952af3471732d873e8a9fc93" translate="yes" xml:space="preserve">
          <source>The final semicolon, if any, may be omitted from the value of EXPR or within the BLOCK.</source>
          <target state="translated">El punto y coma final,si lo hay,puede ser omitido del valor de EXPR o dentro del BLOQUE.</target>
        </trans-unit>
        <trans-unit id="701bfb8c787a64e7b1b253a3f8fa1a79c79b9b4d" translate="yes" xml:space="preserve">
          <source>The final semicolon, if any, may be omitted from the value of EXPR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f49a63a6bf839dcb9a9ccbe0a34339c52904e4c" translate="yes" xml:space="preserve">
          <source>The final semicolon, if any, may be omitted from within the BLOCK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee4566a0600358ccd1fe8d6c5a93a6cd48a9d99" translate="yes" xml:space="preserve">
          <source>The final stage is to call &lt;code&gt;test_test&lt;/code&gt; that will simply compare what you predeclared to what &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; actually outputted, and report the results back with a &quot;ok&quot; or &quot;not ok&quot; (with debugging) to the normal output.</source>
          <target state="translated">La etapa final es llamar &lt;code&gt;test_test&lt;/code&gt; que simplemente comparar&amp;aacute; lo que predeclaraste con lo que &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; realmente produjo, e informar&amp;aacute; los resultados con un &quot;ok&quot; o &quot;no ok&quot; (con depuraci&amp;oacute;n) a la salida normal.</target>
        </trans-unit>
        <trans-unit id="a77ba1afa8fadab31ac1c8125c1a4cf3b74fcb5e" translate="yes" xml:space="preserve">
          <source>The final stage is to call &lt;code&gt;test_test&lt;/code&gt; that will simply compare what you predeclared to what &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; actually outputted, and report the results back with a &quot;ok&quot; or &quot;not ok&quot; (with debugging) to the normal output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31473d1a074747714a49e0fc3e7edd46729c2ea4" translate="yes" xml:space="preserve">
          <source>The final step involves passing each filename matched by the &lt;code&gt;*.tar.gz&lt;/code&gt; file glob through the derived Perl regular expression in turn and expanding the output fileglob using it.</source>
          <target state="translated">El paso final consiste en pasar cada nombre de archivo que coincida con el archivo glob &lt;code&gt;*.tar.gz&lt;/code&gt; a trav&amp;eacute;s de la expresi&amp;oacute;n regular de Perl derivada y expandir el archivo de salida global us&amp;aacute;ndolo.</target>
        </trans-unit>
        <trans-unit id="d96d9b1e4edc6c2a13a6362b88a7c6a709b1d43c" translate="yes" xml:space="preserve">
          <source>The final two modifiers we will discuss here, &lt;code&gt;//g&lt;/code&gt; and &lt;code&gt;//c&lt;/code&gt; , concern multiple matches. The modifier &lt;code&gt;//g&lt;/code&gt; stands for global matching and allows the matching operator to match within a string as many times as possible. In scalar context, successive invocations against a string will have &lt;code&gt;//g&lt;/code&gt; jump from match to match, keeping track of position in the string as it goes along. You can get or set the position with the &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Las &amp;uacute;ltimas dos modificadores vamos a discutir aqu&amp;iacute;, &lt;code&gt;//g&lt;/code&gt; y &lt;code&gt;//c&lt;/code&gt; , se refieren a varias coincidencias. El modificador &lt;code&gt;//g&lt;/code&gt; significa coincidencia global y permite que el operador coincidente coincida dentro de una cadena tantas veces como sea posible. En el contexto escalar, las sucesivas invocaciones contra una cadena har&amp;aacute;n que &lt;code&gt;//g&lt;/code&gt; salte de una coincidencia a otra, manteniendo un registro de la posici&amp;oacute;n en la cadena a medida que avanza. Puede obtener o establecer la posici&amp;oacute;n con la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="789fdded843f5a388c6234d5037a293bfbacec0d" translate="yes" xml:space="preserve">
          <source>The final two modifiers we will discuss here, &lt;code&gt;/g&lt;/code&gt; and &lt;code&gt;/c&lt;/code&gt;, concern multiple matches. The modifier &lt;code&gt;/g&lt;/code&gt; stands for global matching and allows the matching operator to match within a string as many times as possible. In scalar context, successive invocations against a string will have &lt;code&gt;/g&lt;/code&gt; jump from match to match, keeping track of position in the string as it goes along. You can get or set the position with the &lt;code&gt;pos()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bb0429a21250927b8f2328dd69f3ab3c62b7fa" translate="yes" xml:space="preserve">
          <source>The final, fourth element (index [3], assigned to &lt;code&gt;$default&lt;/code&gt; in the &quot;block&quot; example) in the four element list returned by this function is used with the &lt;code&gt;&quot;a&quot;&lt;/code&gt; format types; it may also be useful for applications that wish to convert the returned inversion map data structure into some other, such as a hash. It gives the mapping that most code points map to under the property. If you establish the convention that any code point not explicitly listed in your data structure maps to this value, you can potentially make your data structure much smaller. As you construct your data structure from the one returned by this function, simply ignore those ranges that map to this value. For example, to convert to the data structure searchable by &lt;a href=&quot;#charinrange%28%29&quot;&gt;&quot;charinrange()&quot;&lt;/a&gt;, you can follow this recipe for properties that don't require adjustments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b0c89da94c5764d6322358005c665b7a6ec505" translate="yes" xml:space="preserve">
          <source>The final, fourth element (index [3], assigned to &lt;code&gt;$default&lt;/code&gt; in the &quot;block&quot; example) in the four element list returned by this function is used with the &lt;code&gt;&quot;a&quot;&lt;/code&gt; format types; it may also be useful for applications that wish to convert the returned inversion map data structure into some other, such as a hash. It gives the mapping that most code points map to under the property. If you establish the convention that any code point not explicitly listed in your data structure maps to this value, you can potentially make your data structure much smaller. As you construct your data structure from the one returned by this function, simply ignore those ranges that map to this value. For example, to convert to the data structure searchable by &lt;a href=&quot;#charinrange()&quot;&gt;charinrange()&lt;/a&gt;, you can follow this recipe for properties that don't require adjustments:</source>
          <target state="translated">El cuarto elemento final (&amp;iacute;ndice [3], asignado a &lt;code&gt;$default&lt;/code&gt; en el ejemplo de &quot;bloque&quot;) en la lista de cuatro elementos devueltos por esta funci&amp;oacute;n se usa con los tipos de formato &lt;code&gt;&quot;a&quot;&lt;/code&gt; ; tambi&amp;eacute;n puede ser &amp;uacute;til para aplicaciones que deseen convertir la estructura de datos del mapa de inversi&amp;oacute;n devuelta en alguna otra, como un hash. Proporciona el mapeo al que se asignan la mayor&amp;iacute;a de los puntos de c&amp;oacute;digo debajo de la propiedad. Si establece la convenci&amp;oacute;n de que cualquier punto de c&amp;oacute;digo que no se enumere expl&amp;iacute;citamente en su estructura de datos se corresponda con este valor, puede hacer que su estructura de datos sea mucho m&amp;aacute;s peque&amp;ntilde;a. A medida que construye su estructura de datos a partir de la devuelta por esta funci&amp;oacute;n, simplemente ignore los rangos que se asignan a este valor. Por ejemplo, para convertir a la estructura de datos que se puede buscar por &lt;a href=&quot;#charinrange()&quot;&gt;charinrange ()&lt;/a&gt;, puede seguir esta receta para las propiedades que no requieren ajustes:</target>
        </trans-unit>
        <trans-unit id="20c1b5c18477e5291b6b00c55abb0e8a3b781429" translate="yes" xml:space="preserve">
          <source>The find_dup() Method</source>
          <target state="translated">El método find_dup()</target>
        </trans-unit>
        <trans-unit id="a4105f4f4646c65f036c1e5edea46eddb3a8418a" translate="yes" xml:space="preserve">
          <source>The first (and now failed) goal of Unicode was to map all character repertoires into a fixed-length integer so that programmers are happy. Since each character is either a</source>
          <target state="translated">El primer (y ahora fallido)objetivo de Unicode era mapear todos los repertorios de personajes en un entero de longitud fija para que los programadores estén contentos.Ya que cada personaje es un</target>
        </trans-unit>
        <trans-unit id="172226a1c7ce5a6d06797585142c70179c0ec58b" translate="yes" xml:space="preserve">
          <source>The first &lt;b&gt;PAUSE&lt;/b&gt; author to upload a &lt;b&gt;namespace&lt;/b&gt; automatically becomes the &lt;b&gt;primary maintainer&lt;/b&gt; for that namespace. The &amp;ldquo;first come&amp;rdquo; permissions distinguish a &lt;b&gt;primary maintainer&lt;/b&gt; who was assigned that role from one who received it automatically.</source>
          <target state="translated">El primer autor de &lt;b&gt;PAUSA&lt;/b&gt; que carga un &lt;b&gt;espacio de nombres&lt;/b&gt; se convierte autom&amp;aacute;ticamente en el &lt;b&gt;mantenedor principal&lt;/b&gt; de ese espacio de nombres. Los permisos de &quot;orden de llegada&quot; distinguen a un &lt;b&gt;mantenedor principal al&lt;/b&gt; que se le asign&amp;oacute; ese rol de uno que lo recibi&amp;oacute; autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="97526a10437e54c9f14361d8f57177e27604beab" translate="yes" xml:space="preserve">
          <source>The first Perl argument to this function would be treated as a char and assigned to the variable a, and its address would be passed into the function foo. The second Perl argument would be treated as a string pointer and assigned to the variable b. The</source>
          <target state="translated">El primer argumento de Perl para esta función sería tratado como un char y asignado a la variable a,y su dirección se pasaría a la función foo.El segundo argumento Perl se trataría como un puntero de cadena y se asignaría a la variable b.El</target>
        </trans-unit>
        <trans-unit id="c3453154bc2cd37e63c9b0f3f784faca750ac354" translate="yes" xml:space="preserve">
          <source>The first alternative includes everything from the last pattern delimiter (&lt;code&gt;&quot;(&quot;&lt;/code&gt;, &lt;code&gt;&quot;(?:&quot;&lt;/code&gt; (described later),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e4f6464deede9ad4eff50e6de5039522d07e08" translate="yes" xml:space="preserve">
          <source>The first and second arguments may be strings, typeglobs, typeglob references, or objects inheriting from IO::Handle; they are used in all cases to obtain the</source>
          <target state="translated">El primer y segundo argumento pueden ser cuerdas,typeglobs,referencias typeglob,u objetos heredados de IO::Handle;se utilizan en todos los casos para obtener el</target>
        </trans-unit>
        <trans-unit id="f11ee434e9fca49f11d7860f46bcba7e793d3dea" translate="yes" xml:space="preserve">
          <source>The first and second forms explicitly identify the name of the class being created. The third form assumes the current package name as the class name.</source>
          <target state="translated">La primera y segunda forma identifican explícitamente el nombre de la clase que se está creando.La tercera forma asume el nombre del paquete actual como el nombre de la clase.</target>
        </trans-unit>
        <trans-unit id="1490a2bc188cd4f0f1d7d40df76c523f30ba9b64" translate="yes" xml:space="preserve">
          <source>The first argument &lt;code&gt;pointer&lt;/code&gt; should be the name of a variable that will point to the newly allocated memory.</source>
          <target state="translated">El primer &lt;code&gt;pointer&lt;/code&gt; argumento debe ser el nombre de una variable que apuntar&amp;aacute; a la memoria reci&amp;eacute;n asignada.</target>
        </trans-unit>
        <trans-unit id="80c48ff540490ea5dad5fc5e056d6677cb16264e" translate="yes" xml:space="preserve">
          <source>The first argument of &lt;code&gt;setlocale()&lt;/code&gt; gives the &lt;b&gt;category&lt;/b&gt;, the second the &lt;b&gt;locale&lt;/b&gt;. The category tells in what aspect of data processing you want to apply locale-specific rules. Category names are discussed in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;&quot;LOCALE CATEGORIES&quot;&lt;/a&gt; and &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt;. The locale is the name of a collection of customization information corresponding to a particular combination of language, country or territory, and codeset. Read on for hints on the naming of locales: not all systems name locales as in the example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f43aa625d664f2ba3718ef0a1149ca5df8580dd" translate="yes" xml:space="preserve">
          <source>The first argument of &lt;code&gt;setlocale()&lt;/code&gt; gives the &lt;b&gt;category&lt;/b&gt;, the second the &lt;b&gt;locale&lt;/b&gt;. The category tells in what aspect of data processing you want to apply locale-specific rules. Category names are discussed in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;LOCALE CATEGORIES&lt;/a&gt; and &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt;. The locale is the name of a collection of customization information corresponding to a particular combination of language, country or territory, and codeset. Read on for hints on the naming of locales: not all systems name locales as in the example.</source>
          <target state="translated">El primer argumento de &lt;code&gt;setlocale()&lt;/code&gt; da la &lt;b&gt;categor&amp;iacute;a&lt;/b&gt; , el segundo el &lt;b&gt;locale&lt;/b&gt; . La categor&amp;iacute;a indica en qu&amp;eacute; aspecto del procesamiento de datos desea aplicar reglas espec&amp;iacute;ficas de la configuraci&amp;oacute;n regional. Los nombres de las categor&amp;iacute;as se discuten en &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;CATEGOR&amp;Iacute;AS LOCALES&lt;/a&gt; y &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENTORNO&lt;/a&gt; . La configuraci&amp;oacute;n regional es el nombre de una colecci&amp;oacute;n de informaci&amp;oacute;n de personalizaci&amp;oacute;n correspondiente a una combinaci&amp;oacute;n particular de idioma, pa&amp;iacute;s o territorio y conjunto de c&amp;oacute;digos. Siga leyendo para obtener sugerencias sobre c&amp;oacute;mo nombrar las configuraciones regionales: no todos los sistemas nombran configuraciones regionales como en el ejemplo.</target>
        </trans-unit>
        <trans-unit id="fede859d91b131301182a8f517e78fcd79928ade" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;code&gt;find()&lt;/code&gt; is either a code reference to your &lt;code&gt;&amp;amp;wanted&lt;/code&gt; function, or a hash reference describing the operations to be performed for each file. The code reference is described in &lt;a href=&quot;#The-wanted-function&quot;&gt;&quot;The wanted function&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7b3a91ac2b665d00253c60dfd683fd8e3981ca" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;code&gt;find()&lt;/code&gt; is either a code reference to your &lt;code&gt;&amp;amp;wanted&lt;/code&gt; function, or a hash reference describing the operations to be performed for each file. The code reference is described in &lt;a href=&quot;#The-wanted-function&quot;&gt;The wanted function&lt;/a&gt; below.</source>
          <target state="translated">El primer argumento para &lt;code&gt;find()&lt;/code&gt; es una referencia de c&amp;oacute;digo a su funci&amp;oacute;n &lt;code&gt;&amp;amp;wanted&lt;/code&gt; , o una referencia hash que describe las operaciones que se realizar&amp;aacute;n para cada archivo. La referencia del c&amp;oacute;digo se describe en &lt;a href=&quot;#The-wanted-function&quot;&gt;La funci&amp;oacute;n deseada a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7c957468bac2255084a035a3220d83572a45006f" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;code&gt;open&lt;/code&gt;, labeled FILEHANDLE in this reference, is usually a scalar variable. (Exceptions exist, described in &quot;Other considerations&quot;, below.) If the call to &lt;code&gt;open&lt;/code&gt; succeeds, then the expression provided as FILEHANDLE will get assigned an open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbf5c859ede86efd02d67b5ed562cbefaa9fa86" translate="yes" xml:space="preserve">
          <source>The first call creates a mortal SV (with no value), the second converts an existing SV to a mortal SV (and thus defers a call to &lt;code&gt;SvREFCNT_dec&lt;/code&gt; ), and the third creates a mortal copy of an existing SV. Because &lt;code&gt;sv_newmortal&lt;/code&gt; gives the new SV no value, it must normally be given one via &lt;code&gt;sv_setpv&lt;/code&gt; , &lt;code&gt;sv_setiv&lt;/code&gt; , etc. :</source>
          <target state="translated">La primera llamada crea un SV mortal (sin valor), la segunda convierte un SV existente en un SV mortal (y por lo tanto difiere una llamada a &lt;code&gt;SvREFCNT_dec&lt;/code&gt; ) y la tercera crea una copia mortal de un SV existente. Debido a que &lt;code&gt;sv_newmortal&lt;/code&gt; no le da ning&amp;uacute;n valor al nuevo SV, normalmente se le debe dar uno a trav&amp;eacute;s de &lt;code&gt;sv_setpv&lt;/code&gt; , &lt;code&gt;sv_setiv&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="4477498f36568777dd7d39a288f8eb78c180c0b5" translate="yes" xml:space="preserve">
          <source>The first call will cache the result, say 37, in the scalar cache; the second will cach the list &lt;code&gt;(37)&lt;/code&gt; in the list cache. The third call doesn't call the real &lt;code&gt;complicated&lt;/code&gt; function; it gets the value 37 from the scalar cache.</source>
          <target state="translated">La primera llamada almacenar&amp;aacute; en cach&amp;eacute; el resultado, digamos 37, en la cach&amp;eacute; escalar; el segundo guardar&amp;aacute; la lista &lt;code&gt;(37)&lt;/code&gt; en el cach&amp;eacute; de listas. La tercera llamada no llama a la funci&amp;oacute;n &lt;code&gt;complicated&lt;/code&gt; real ; obtiene el valor 37 de la cach&amp;eacute; escalar.</target>
        </trans-unit>
        <trans-unit id="cb2fb10ae2990b48a149ecb6c3ef672018aecbe1" translate="yes" xml:space="preserve">
          <source>The first call-back registered is the call back for waiting. It is expected that the callback will call the current event loop until there is something waiting to get on the input filehandle. The parameter passed in is the return value of the second call back.</source>
          <target state="translated">La primera llamada registrada es la llamada de vuelta para la espera.Se espera que la devolución de llamada llame al bucle de eventos actuales hasta que haya algo esperando para entrar en el archivador de entrada.El parámetro que se pasa es el valor de retorno de la segunda llamada de devolución.</target>
        </trans-unit>
        <trans-unit id="356bc7c1108ec743988bf0e03b81bb507c0cc12b" translate="yes" xml:space="preserve">
          <source>The first code point of the foldcased version is returned (but note, as explained at &lt;a href=&quot;#Character-case-changing&quot;&gt;the top of this section&lt;/a&gt;, that there may be more).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e0061b9a6b011cebcff05349c5ac1b63fa9755" translate="yes" xml:space="preserve">
          <source>The first code point of the foldcased version is returned (but note, as explained just above, that there may be more.)</source>
          <target state="translated">Se devuelve el primer punto de código de la versión plegada (pero tened en cuenta,como se ha explicado anteriormente,que puede haber más.)</target>
        </trans-unit>
        <trans-unit id="f94f6bc950fffc56630abef7e060753be71264b0" translate="yes" xml:space="preserve">
          <source>The first code point of the lowercased version is returned (but note, as explained at &lt;a href=&quot;#Character-case-changing&quot;&gt;the top of this section&lt;/a&gt;, that there may be more).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e520b61d264ebe77754743fca0b946c106ddd342" translate="yes" xml:space="preserve">
          <source>The first code point of the lowercased version is returned (but note, as explained at &lt;a href=&quot;#Character-case-changing&quot;&gt;the top of this section&lt;/a&gt;, that there may be more). It will not attempt to read beyond &lt;code&gt;e - 1&lt;/code&gt;, provided that the constraint &lt;code&gt;s &amp;lt; e&lt;/code&gt; is true (this is asserted for in &lt;code&gt;-DDEBUGGING&lt;/code&gt; builds). If the UTF-8 for the input character is malformed in some way, the program may croak, or the function may return the REPLACEMENT CHARACTER, at the discretion of the implementation, and subject to change in future releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff810cbc1a30c3df94411ded7219d0513e8678c" translate="yes" xml:space="preserve">
          <source>The first code point of the lowercased version is returned (but note, as explained just above, that there may be more.)</source>
          <target state="translated">El primer punto de código de la versión en minúscula se devuelve (pero tenga en cuenta,como se explicó anteriormente,que puede haber más.)</target>
        </trans-unit>
        <trans-unit id="d7f11b85b3fd5fa2f0a6c5645eeff96adc2054e0" translate="yes" xml:space="preserve">
          <source>The first code point of the titlecased version is returned (but note, as explained at &lt;a href=&quot;#Character-case-changing&quot;&gt;the top of this section&lt;/a&gt;, that there may be more).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeb3f58f789aa5ac3e09cf711fff7133bd0293e" translate="yes" xml:space="preserve">
          <source>The first code point of the titlecased version is returned (but note, as explained just above, that there may be more.)</source>
          <target state="translated">Se devuelve el primer punto de código de la versión con título (pero tened en cuenta,como se ha explicado anteriormente,que puede haber más.)</target>
        </trans-unit>
        <trans-unit id="3acdfbd051e586c1763fcef89bd42028b50c7068" translate="yes" xml:space="preserve">
          <source>The first code point of the uppercased version is returned (but note, as explained at &lt;a href=&quot;#Character-case-changing&quot;&gt;the top of this section&lt;/a&gt;, that there may be more).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa79c84ba894862a3bdfa5a898231ba1c669dc5c" translate="yes" xml:space="preserve">
          <source>The first code point of the uppercased version is returned (but note, as explained at &lt;a href=&quot;#Character-case-changing&quot;&gt;the top of this section&lt;/a&gt;, that there may be more.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150061371074e1d388cb756c8513ea3bae095580" translate="yes" xml:space="preserve">
          <source>The first code point of the uppercased version is returned (but note, as explained just above, that there may be more.)</source>
          <target state="translated">Se devuelve el primer punto de código de la versión en mayúsculas (pero tenga en cuenta,como se explicó anteriormente,que puede haber más.)</target>
        </trans-unit>
        <trans-unit id="b31a69e396cbea336ac162c9e038d50204a60559" translate="yes" xml:space="preserve">
          <source>The first column gives the Unicode code point of the character (in hex format), the second column gives the (Unicode) name. The third column indicates by which class(es) the character is matched (assuming no locale is in effect that changes the &lt;code&gt;\s&lt;/code&gt; matching).</source>
          <target state="translated">La primera columna da el punto de c&amp;oacute;digo Unicode del car&amp;aacute;cter (en formato hexadecimal), la segunda columna da el nombre (Unicode). La tercera columna indica con qu&amp;eacute; clase (s) coincide el car&amp;aacute;cter (suponiendo que no haya ninguna configuraci&amp;oacute;n regional que cambie la coincidencia &lt;code&gt;\s&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8beadb10ab71cda6dd02fa1a65287381a215cc85" translate="yes" xml:space="preserve">
          <source>The first column in the table is a name for the property; the second column is an alternative name, if any, plus possibly some annotations. The alternative name is the property's full name, unless that would simply repeat the first column, in which case the second column indicates the property's short name (if different). The annotations are given only in the entry for the full name. If a property is obsolete, etc, the entry will be flagged with the same characters used in the table in the &lt;a href=&quot;#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;section above&lt;/a&gt;, like &lt;b&gt;D&lt;/b&gt; or &lt;b&gt;S&lt;/b&gt;.</source>
          <target state="translated">La primera columna de la tabla es el nombre de la propiedad; la segunda columna es un nombre alternativo, si lo hay, m&amp;aacute;s posiblemente algunas anotaciones. El nombre alternativo es el nombre completo de la propiedad, a menos que eso simplemente repita la primera columna, en cuyo caso la segunda columna indica el nombre corto de la propiedad (si es diferente). Las anotaciones se dan solo en la entrada del nombre completo. Si una propiedad es obsoleta, etc, la entrada se marcar&amp;aacute; con los mismos caracteres utilizados en la tabla en el &lt;a href=&quot;#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;apartado anterior&lt;/a&gt; , al igual que &lt;b&gt;D&lt;/b&gt; o &lt;b&gt;S&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="0a9e1d7bc901ecffb197db410cd69bf5871b1113" translate="yes" xml:space="preserve">
          <source>The first column in the table is a name for the property; the second column is an alternative name, if any, plus possibly some annotations. The alternative name is the property's full name, unless that would simply repeat the first column, in which case the second column indicates the property's short name (if different). The annotations are given only in the entry for the full name. The annotations for binary properties include a list of the first few ranges that the property matches. To avoid any ambiguity, the SPACE character is represented as &lt;code&gt;\x20&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eff62aa7ff2adaee41faf8fb6df470068a01954" translate="yes" xml:space="preserve">
          <source>The first column is a set of flags, the second column the return type, the third column the name. Columns after that are the arguments. The flags are documented at the top of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b11168c63a090c6a2f9c94f928cd13ec49996f7" translate="yes" xml:space="preserve">
          <source>The first command sends both standard out and standard error to the temporary file. The second command sends only the old standard output there, and the old standard error shows up on the old standard out.</source>
          <target state="translated">El primer comando envía tanto la salida estándar como el error estándar al archivo temporal.El segundo comando envía allí sólo la salida estándar antigua,y el error estándar antiguo aparece en la salida estándar antigua.</target>
        </trans-unit>
        <trans-unit id="05c623db7c7d3a79e0f86ce6c1022ffde1e91677" translate="yes" xml:space="preserve">
          <source>The first element of @os_flavor is the major family (ie. Unix, Windows, VMS, OS/2, etc...) and the rest are sub families.</source>
          <target state="translated">El primer elemento de @os_flavor es la familia principal (es decir,Unix,Windows,VMS,OS/2,etc...)y el resto son subfamilias.</target>
        </trans-unit>
        <trans-unit id="bf7e5d87f2410537daa86408c9c3f1321c88ab2f" translate="yes" xml:space="preserve">
          <source>The first entry in the string will run all tests in the top-level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b34621cb98b9f5d1895e9bf56ac10c10fa486de" translate="yes" xml:space="preserve">
          <source>The first example will be driven by an object of the class CPAN::Module, the second by an object of class CPAN::Distribution.</source>
          <target state="translated">El primer ejemplo será conducido por un objeto de la clase CPAN::Módulo,el segundo por un objeto de la clase CPAN::Distribución.</target>
        </trans-unit>
        <trans-unit id="0a27c7509a2d370dd780c83c9db9ebfcd9028447" translate="yes" xml:space="preserve">
          <source>The first extension is an embedded comment &lt;code&gt;(?#text)&lt;/code&gt;. This embeds a comment into the regular expression without affecting its meaning. The comment should not have any closing parentheses in the text. An example is</source>
          <target state="translated">La primera extensi&amp;oacute;n es un comentario incrustado &lt;code&gt;(?#text)&lt;/code&gt; . Esto incrusta un comentario en la expresi&amp;oacute;n regular sin afectar su significado. El comentario no debe tener ning&amp;uacute;n par&amp;eacute;ntesis de cierre en el texto. Un ejemplo es</target>
        </trans-unit>
        <trans-unit id="222cb4b3d3e8dffe112445249bb168e941db04b2" translate="yes" xml:space="preserve">
          <source>The first extra instruction sets DJGPP's FNCASE environment variable so that the new perl binary which you must build for an XS-type module will build correctly. The second extra instruction re-builds the perl binary in your module directory before you run &quot;make test&quot;, so that you are testing with the new module code you built with &quot;make&quot;. The third extra instruction installs the perl binary from your module directory into the standard DJGPP binary directory, &lt;code&gt;($DJDIR)/bin&lt;/code&gt; , replacing your previous perl binary.</source>
          <target state="translated">La primera instrucci&amp;oacute;n adicional establece la variable de entorno FNCASE de DJGPP para que el nuevo binario de perl que debe compilar para un m&amp;oacute;dulo de tipo XS se compile correctamente. La segunda instrucci&amp;oacute;n adicional reconstruye el binario de perl en el directorio de su m&amp;oacute;dulo antes de ejecutar &quot;make test&quot;, de modo que est&amp;eacute; probando con el nuevo c&amp;oacute;digo de m&amp;oacute;dulo que cre&amp;oacute; con &quot;make&quot;. La tercera instrucci&amp;oacute;n adicional instala el binario perl desde el directorio de su m&amp;oacute;dulo en el directorio binario est&amp;aacute;ndar DJGPP, &lt;code&gt;($DJDIR)/bin&lt;/code&gt; , reemplazando su binario perl anterior.</target>
        </trans-unit>
        <trans-unit id="238d815e97aa4aefd914191a6984e7eea1bebbe7" translate="yes" xml:space="preserve">
          <source>The first extra instruction sets DJGPP's FNCASE environment variable so that the new perl binary which you must build for an XS-type module will build correctly. The second extra instruction re-builds the perl binary in your module directory before you run &quot;make test&quot;, so that you are testing with the new module code you built with &quot;make&quot;. The third extra instruction installs the perl binary from your module directory into the standard DJGPP binary directory, &lt;code&gt;($DJDIR)/bin&lt;/code&gt;, replacing your previous perl binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae143bbfd14644c2528b32b8737fee2a5bff385" translate="yes" xml:space="preserve">
          <source>The first few lines tell you the modules that Net::FTP uses and their versions, this is useful data to me when a user reports a bug. The last seven lines show the communication with the server. Each line has three parts. The first part is the object itself, this is useful for separating the output if you are using multiple objects. The second part is either &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; to show data coming from the server or &lt;code&gt;&amp;amp;gt&amp;amp;gt&amp;amp;gt&amp;amp;gt&lt;/code&gt; to show data going to the server. The remainder of the line is the command being sent or response being received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b17d18688be07602898309d70943af3ccee567" translate="yes" xml:space="preserve">
          <source>The first few members of the struct give a function table size for compatibility check &quot;name&quot; for the layer, the size to &lt;code&gt;malloc&lt;/code&gt; for the per-instance data, and some flags which are attributes of the class as whole (such as whether it is a buffering layer), then follow the functions which fall into four basic groups:</source>
          <target state="translated">Los primeros miembros de la estructura dan un tama&amp;ntilde;o de tabla de funciones para la verificaci&amp;oacute;n de compatibilidad &quot;nombre&quot; para la capa, el tama&amp;ntilde;o de &lt;code&gt;malloc&lt;/code&gt; para los datos por instancia y algunos indicadores que son atributos de la clase en su conjunto (como si es una capa de almacenamiento en b&amp;uacute;fer), luego siga las funciones que se dividen en cuatro grupos b&amp;aacute;sicos:</target>
        </trans-unit>
        <trans-unit id="5570358324850dc9a5c098d989e656b82d59427c" translate="yes" xml:space="preserve">
          <source>The first five of these are like the escape sequences &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , and &lt;code&gt;\F&lt;/code&gt; . For Titlecase, see &lt;a href=&quot;#Titlecase&quot;&gt;Titlecase&lt;/a&gt;; For Foldcase, see &lt;a href=&quot;#Foldcase&quot;&gt;Foldcase&lt;/a&gt;.</source>
          <target state="translated">Los primeros cinco de estos son como las secuencias de escape &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , y &lt;code&gt;\F&lt;/code&gt; . Para Titlecase, consulte &lt;a href=&quot;#Titlecase&quot;&gt;Titlecase&lt;/a&gt; ; Para Foldcase, consulte &lt;a href=&quot;#Foldcase&quot;&gt;Foldcase&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="679923e26685f0bf8bfaf94ea7988b4c7276fdb8" translate="yes" xml:space="preserve">
          <source>The first five of these are like the escape sequences &lt;code&gt;\L&lt;/code&gt;, &lt;code&gt;\l&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\u&lt;/code&gt;, and &lt;code&gt;\F&lt;/code&gt;. For Titlecase, see &lt;a href=&quot;#Titlecase&quot;&gt;&quot;Titlecase&quot;&lt;/a&gt;; For Foldcase, see &lt;a href=&quot;#Foldcase&quot;&gt;&quot;Foldcase&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056eb59b4cd627258e760e1417c53352badda0af" translate="yes" xml:space="preserve">
          <source>The first form causes the most-significant</source>
          <target state="translated">La primera forma causa la más significativa</target>
        </trans-unit>
        <trans-unit id="655fd20aca46eac1f13d92b5af802dc31b11d56c" translate="yes" xml:space="preserve">
          <source>The first form is used to request a</source>
          <target state="translated">El primer formulario se utiliza para solicitar una</target>
        </trans-unit>
        <trans-unit id="37eddcbe0416a7dc5593d702e9505efc3b548dce" translate="yes" xml:space="preserve">
          <source>The first form lists all distribution files in and below an author's CPAN directory as stored in the CHECKSUMS files distributed on CPAN. The listing recurses into subdirectories.</source>
          <target state="translated">El primer formulario enumera todos los archivos de distribución en y debajo del directorio CPAN de un autor,tal y como se almacenan en los archivos CHECKSUMS distribuidos en el CPAN.El listado se repite en subdirectorios.</target>
        </trans-unit>
        <trans-unit id="46eae92ecd4f74796835635e06aeea1b041739b2" translate="yes" xml:space="preserve">
          <source>The first function calculates the length of the string to be appended by using &lt;code&gt;strlen&lt;/code&gt; . In the second, you specify the length of the string yourself. The third function processes its arguments like &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; and appends the formatted output. The fourth function works like &lt;code&gt;vsprintf&lt;/code&gt; . You can specify the address and length of an array of SVs instead of the va_list argument. The fifth function extends the string stored in the first SV with the string stored in the second SV. It also forces the second SV to be interpreted as a string.</source>
          <target state="translated">La primera funci&amp;oacute;n calcula la longitud de la cadena que se agregar&amp;aacute; mediante &lt;code&gt;strlen&lt;/code&gt; . En el segundo, usted mismo especifica la longitud de la cadena. La tercera funci&amp;oacute;n procesa sus argumentos como &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; y agrega la salida formateada. La cuarta funci&amp;oacute;n funciona como &lt;code&gt;vsprintf&lt;/code&gt; . Puede especificar la direcci&amp;oacute;n y la longitud de una matriz de SV en lugar del argumento va_list. La quinta funci&amp;oacute;n extiende la cadena almacenada en el primer SV con la cadena almacenada en el segundo SV. Tambi&amp;eacute;n obliga al segundo SV a interpretarse como una cadena.</target>
        </trans-unit>
        <trans-unit id="090b5d34cd572296fdf844e61d55479b085e6558" translate="yes" xml:space="preserve">
          <source>The first function calculates the length of the string to be appended by using &lt;code&gt;strlen&lt;/code&gt;. In the second, you specify the length of the string yourself. The third function processes its arguments like &lt;code&gt;sprintf&lt;/code&gt; and appends the formatted output. The fourth function works like &lt;code&gt;vsprintf&lt;/code&gt;. You can specify the address and length of an array of SVs instead of the va_list argument. The fifth function extends the string stored in the first SV with the string stored in the second SV. It also forces the second SV to be interpreted as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f464748e3494ffffc2bddda9e0371a39740923" translate="yes" xml:space="preserve">
          <source>The first function takes a literal string, the second uses the string stored in the SV. Remember that a stash is just a hash table, so you get back an &lt;code&gt;HV*&lt;/code&gt; . The &lt;code&gt;flags&lt;/code&gt; flag will create a new package if it is set to GV_ADD.</source>
          <target state="translated">La primera funci&amp;oacute;n toma una cadena literal, la segunda usa la cadena almacenada en el SV. Recuerde que un alijo es solo una tabla hash, por lo que obtiene un &lt;code&gt;HV*&lt;/code&gt; . La bandera de &lt;code&gt;flags&lt;/code&gt; crear&amp;aacute; un nuevo paquete si se establece en GV_ADD.</target>
        </trans-unit>
        <trans-unit id="753de98607835382ac405aaaec94b8f9df443117" translate="yes" xml:space="preserve">
          <source>The first function takes a literal string, the second uses the string stored in the SV. Remember that a stash is just a hash table, so you get back an &lt;code&gt;HV*&lt;/code&gt;. The &lt;code&gt;flags&lt;/code&gt; flag will create a new package if it is set to GV_ADD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ff098919bab433ee120cffa3fe9f71b92c1c9" translate="yes" xml:space="preserve">
          <source>The first gives data on bucket chain lengths and provides insight on how much work a fetch *miss* will take. In this case we have to inspect every item in a bucket before we can be sure the item is not in the list. The performance for an insert is equivalent to this case, as is a delete where the item is not in the hash.</source>
          <target state="translated">El primero da datos sobre la longitud de las cadenas de los cubos y proporciona una idea de cuánto trabajo requiere una recogida *despilfarrada*.En este caso tenemos que inspeccionar cada elemento de un cubo antes de que podamos estar seguros de que el elemento no está en la lista.El rendimiento de un inserto es equivalente a este caso,al igual que una eliminación cuando el artículo no está en el hash.</target>
        </trans-unit>
        <trans-unit id="44b1707c0aa3d824f6a27ecfef8a4304420287cd" translate="yes" xml:space="preserve">
          <source>The first interface is an object approach. &lt;code&gt;IO::Dir&lt;/code&gt; provides an object constructor and methods, which are just wrappers around perl's built in directory reading routines.</source>
          <target state="translated">La primera interfaz es un enfoque de objetos. &lt;code&gt;IO::Dir&lt;/code&gt; proporciona un constructor de objetos y m&amp;eacute;todos, que son simplemente envoltorios de las rutinas de lectura de directorios integradas de Perl.</target>
        </trans-unit>
        <trans-unit id="f4941dd26bc8de71bda8bbde95f00b715fc9713b" translate="yes" xml:space="preserve">
          <source>The first is an asterisk &lt;code&gt;*&lt;/code&gt; to match any sequence of zero or more characters.</source>
          <target state="translated">El primero es un asterisco &lt;code&gt;*&lt;/code&gt; para coincidir con cualquier secuencia de cero o m&amp;aacute;s caracteres.</target>
        </trans-unit>
        <trans-unit id="e06aed8ca3d744d52c854ac09d0dcc88676f13d3" translate="yes" xml:space="preserve">
          <source>The first is the '*' metacharacter. This will be replaced by the complete filename matched by the input file glob. So</source>
          <target state="translated">El primero es el metacaracter &quot;*&quot;.Este será reemplazado por el nombre completo del archivo que coincide con el globo del archivo de entrada.Así que</target>
        </trans-unit>
        <trans-unit id="53f5cd295a83b9a3745b8897953b75db40666387" translate="yes" xml:space="preserve">
          <source>The first is the 'default' format, which is used in both basic and exec modes to print all opcodes. The 2nd, goto-format, is used in exec mode when branches are encountered. They're not real opcodes, and are inserted to look like a closing curly brace. The tree-format is tree specific.</source>
          <target state="translated">El primero es el formato &quot;por defecto&quot;,que se utiliza tanto en el modo básico como en el modo ejecutivo para imprimir todos los opcodes.El segundo,el formato &quot;goto&quot;,se utiliza en el modo ejecutivo cuando se encuentran ramas.No son opcodes reales,y se insertan para que parezcan rizos de cierre.El formato de árbol es específico para cada árbol.</target>
        </trans-unit>
        <trans-unit id="32f6bb26a2f4ae1e809986ad78dbd60042fd1a3c" translate="yes" xml:space="preserve">
          <source>The first item is not fixable (except by upgrading to a later Visual Studio release), but it would be possible to work around the latter two items by using the Windows API functions &lt;code&gt;GetNumberFormat&lt;/code&gt; and &lt;code&gt;GetCurrencyFormat&lt;/code&gt;; patches welcome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34237558f2321ff711f52a04588fb6ee8079ad92" translate="yes" xml:space="preserve">
          <source>The first line (with Index [0]) means that the value for code point 0 is &quot;Basic Latin&quot;. The entry &quot;0x0080&quot; in the @blocks_ranges column in the second line means that the value from the first line, &quot;Basic Latin&quot;, extends to all code points in the range from 0 up to but not including 0x0080, that is, through 127. In other words, the code points from 0 to 127 are all in the &quot;Basic Latin&quot; block. Similarly, all code points in the range from 0x0080 up to (but not including) 0x0100 are in the block named &quot;Latin-1 Supplement&quot;, etc. (Notice that the return is the old-style block names; see &lt;a href=&quot;#Old-style-versus-new-style-block-names&quot;&gt;&quot;Old-style versus new-style block names&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fe0d63874f53e08f9d51c255d101fe5f08a938" translate="yes" xml:space="preserve">
          <source>The first line (with Index [0]) means that the value for code point 0 is &quot;Basic Latin&quot;. The entry &quot;0x0080&quot; in the @blocks_ranges column in the second line means that the value from the first line, &quot;Basic Latin&quot;, extends to all code points in the range from 0 up to but not including 0x0080, that is, through 127. In other words, the code points from 0 to 127 are all in the &quot;Basic Latin&quot; block. Similarly, all code points in the range from 0x0080 up to (but not including) 0x0100 are in the block named &quot;Latin-1 Supplement&quot;, etc. (Notice that the return is the old-style block names; see &lt;a href=&quot;#Old-style-versus-new-style-block-names&quot;&gt;Old-style versus new-style block names&lt;/a&gt;).</source>
          <target state="translated">La primera l&amp;iacute;nea (con &amp;Iacute;ndice [0]) significa que el valor del punto de c&amp;oacute;digo 0 es &quot;Lat&amp;iacute;n b&amp;aacute;sico&quot;. La entrada &quot;0x0080&quot; en la columna @blocks_ranges en la segunda l&amp;iacute;nea significa que el valor de la primera l&amp;iacute;nea, &quot;Lat&amp;iacute;n b&amp;aacute;sico&quot;, se extiende a todos los puntos de c&amp;oacute;digo en el rango desde 0 hasta 0x0080, es decir, hasta 127, pero sin incluirlo. En otras palabras, los puntos de c&amp;oacute;digo del 0 al 127 est&amp;aacute;n todos en el bloque &quot;Lat&amp;iacute;n b&amp;aacute;sico&quot;. De manera similar, todos los puntos de c&amp;oacute;digo en el rango de 0x0080 hasta (pero sin incluir) 0x0100 est&amp;aacute;n en el bloque llamado &quot;Suplemento Latin-1&quot;, etc. (Observe que el retorno son los nombres de bloque de estilo antiguo; consulte &lt;a href=&quot;#Old-style-versus-new-style-block-names&quot;&gt;Estilo antiguo versus nombres de bloques de nuevo estilo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0686c2b572c16f799b84765daa2d3e48250c69f7" translate="yes" xml:space="preserve">
          <source>The first line above defines &lt;code&gt;TIMESTAMP&lt;/code&gt; as a 9-element list, as returned by &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; in list context. To set it to the string returned by &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; in scalar context, an explicit &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; keyword is required.</source>
          <target state="translated">La primera l&amp;iacute;nea de arriba define &lt;code&gt;TIMESTAMP&lt;/code&gt; como una lista de 9 elementos, como lo devuelve &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; en el contexto de la lista. Para establecerlo en la cadena devuelta por &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; en contexto escalar, se requiere una palabra clave &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;cita .</target>
        </trans-unit>
        <trans-unit id="69decd40a9a2c32528b6b5800434c2cba08678b1" translate="yes" xml:space="preserve">
          <source>The first line above defines &lt;code&gt;TIMESTAMP&lt;/code&gt; as a 9-element list, as returned by &lt;code&gt;localtime()&lt;/code&gt; in list context. To set it to the string returned by &lt;code&gt;localtime()&lt;/code&gt; in scalar context, an explicit &lt;code&gt;scalar&lt;/code&gt; keyword is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d82ab0cc733d5c69ba599aa083f54d41b0cd704" translate="yes" xml:space="preserve">
          <source>The first line ensures that the errors in your argument specification are found early. When you ship your application you should comment out the first line, since it makes the second one useless.</source>
          <target state="translated">La primera línea asegura que los errores en la especificación de los argumentos se encuentren pronto.Cuando envíes tu solicitud deberías comentar la primera línea,ya que hace que la segunda sea inútil.</target>
        </trans-unit>
        <trans-unit id="1d816990178774f44d4b8769d3c845c853e30a87" translate="yes" xml:space="preserve">
          <source>The first line here indicates that the offset/length table contains 45 entries. Each entry is a pair of integers, denoted by &lt;code&gt;offset[&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;]&lt;/code&gt; . Entries are numbered starting with 1, so entry #1 here is &lt;code&gt;1[4]&lt;/code&gt; and entry #12 is &lt;code&gt;5[1]&lt;/code&gt; . &lt;code&gt;1[4]&lt;/code&gt; indicates that the node labeled &lt;code&gt;1:&lt;/code&gt; (the &lt;code&gt;1: ANYOF[bc]&lt;/code&gt;) begins at character position 1 in the pre-compiled form of the regex, and has a length of 4 characters. &lt;code&gt;5[1]&lt;/code&gt; in position 12 indicates that the node labeled &lt;code&gt;12:&lt;/code&gt; (the &lt;code&gt;12: EXACT &amp;lt;d&amp;gt;&lt;/code&gt;) begins at character position 5 in the pre-compiled form of the regex, and has a length of 1 character. &lt;code&gt;12[1]&lt;/code&gt; in position 14 indicates that the node labeled &lt;code&gt;14:&lt;/code&gt; (the &lt;code&gt;14: CURLYX[0] {1,32767}&lt;/code&gt;) begins at character position 12 in the pre-compiled form of the regex, and has a length of 1 character---that is, it corresponds to the &lt;code&gt;+&lt;/code&gt; symbol in the precompiled regex.</source>
          <target state="translated">La primera l&amp;iacute;nea aqu&amp;iacute; indica que la tabla de desplazamiento / longitud contiene 45 entradas. Cada entrada es un par de n&amp;uacute;meros enteros, denotados por &lt;code&gt;offset[&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;]&lt;/code&gt; . Las entradas se numeran comenzando con 1, por lo que la entrada # 1 aqu&amp;iacute; es &lt;code&gt;1[4]&lt;/code&gt; y la entrada # 12 es &lt;code&gt;5[1]&lt;/code&gt; . &lt;code&gt;1[4]&lt;/code&gt; indica que el nodo etiquetado &lt;code&gt;1:&lt;/code&gt; (el &lt;code&gt;1: ANYOF[bc]&lt;/code&gt; ) comienza en la posici&amp;oacute;n de car&amp;aacute;cter 1 en la forma precompilada de la expresi&amp;oacute;n regular, y tiene una longitud de 4 caracteres. &lt;code&gt;5[1]&lt;/code&gt; en la posici&amp;oacute;n 12 indica que el nodo etiquetado &lt;code&gt;12:&lt;/code&gt; (el &lt;code&gt;12: EXACT &amp;lt;d&amp;gt;&lt;/code&gt; ) comienza en la posici&amp;oacute;n de car&amp;aacute;cter 5 en la forma precompilada de la expresi&amp;oacute;n regular, y tiene una longitud de 1 car&amp;aacute;cter. &lt;code&gt;12[1]&lt;/code&gt; en la posici&amp;oacute;n 14 indica que el nodo etiquetado &lt;code&gt;14:&lt;/code&gt; (el &lt;code&gt;14: CURLYX[0] {1,32767}&lt;/code&gt; ) comienza en la posici&amp;oacute;n del car&amp;aacute;cter 12 en la forma precompilada de la expresi&amp;oacute;n regular y tiene una longitud de 1 car&amp;aacute;cter --- es decir, corresponde al s&amp;iacute;mbolo &lt;code&gt;+&lt;/code&gt; en la expresi&amp;oacute;n regular precompilada.</target>
        </trans-unit>
        <trans-unit id="e2bf1de2c16e8c0adbab29364ba1219b9e1777c7" translate="yes" xml:space="preserve">
          <source>The first line here indicates that the offset/length table contains 45 entries. Each entry is a pair of integers, denoted by &lt;code&gt;offset[length]&lt;/code&gt;. Entries are numbered starting with 1, so entry #1 here is &lt;code&gt;1[4]&lt;/code&gt; and entry #12 is &lt;code&gt;5[1]&lt;/code&gt;. &lt;code&gt;1[4]&lt;/code&gt; indicates that the node labeled &lt;code&gt;1:&lt;/code&gt; (the &lt;code&gt;1: ANYOF[bc]&lt;/code&gt;) begins at character position 1 in the pre-compiled form of the regex, and has a length of 4 characters. &lt;code&gt;5[1]&lt;/code&gt; in position 12 indicates that the node labeled &lt;code&gt;12:&lt;/code&gt; (the &lt;code&gt;12: EXACT &amp;lt;d&amp;gt;&lt;/code&gt;) begins at character position 5 in the pre-compiled form of the regex, and has a length of 1 character. &lt;code&gt;12[1]&lt;/code&gt; in position 14 indicates that the node labeled &lt;code&gt;14:&lt;/code&gt; (the &lt;code&gt;14: CURLYX[0] {1,32767}&lt;/code&gt;) begins at character position 12 in the pre-compiled form of the regex, and has a length of 1 character---that is, it corresponds to the &lt;code&gt;+&lt;/code&gt; symbol in the precompiled regex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daa98ec524432df6c19e25f5089a0ae5fbe0898" translate="yes" xml:space="preserve">
          <source>The first line is an abbreviation for the following two lines, except that it doesn't create the superfluous array variable &lt;code&gt;@array&lt;/code&gt; .</source>
          <target state="translated">La primera l&amp;iacute;nea es una abreviatura de las siguientes dos l&amp;iacute;neas, excepto que no crea la variable de matriz superflua &lt;code&gt;@array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7be109e4ec8d67123623c616eb3634806eefdaf2" translate="yes" xml:space="preserve">
          <source>The first line is an abbreviation for the following two lines, except that it doesn't create the superfluous array variable &lt;code&gt;@array&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c7b267b0324e3ee08f49728c4657a96f3be74f" translate="yes" xml:space="preserve">
          <source>The first line is the plan - it specifies the number of tests I'm going to run so that it's easy to check that the test script didn't exit before running all the expected tests. The following lines are the test results - 'ok' for pass, 'not ok' for fail. Each test has a number and, optionally, a description. And that's it. Any language that can produce output like that on STDOUT can be used to write tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cea67f4153eeb52ccd2e3da747660523e22317" translate="yes" xml:space="preserve">
          <source>The first line of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07b113f7912ed4a47b2646ff4b1fee0ebfd1d07" translate="yes" xml:space="preserve">
          <source>The first line of the commit message should be a short description without a period. It should be no longer than the subject line of an email, 50 characters being a good rule of thumb.</source>
          <target state="translated">La primera línea del mensaje de confirmación debe ser una breve descripción sin punto.No debe ser más larga que la línea de asunto de un correo electrónico,50 caracteres es una buena regla general.</target>
        </trans-unit>
        <trans-unit id="ae7ce29a18436b04a3b95f17b59a8ba620a5dab2" translate="yes" xml:space="preserve">
          <source>The first line shows the pre-compiled form of the regex. The second shows the size of the compiled form (in arbitrary units, usually 4-byte words) and the total number of bytes allocated for the offset/length table, usually 4+&lt;code&gt;size&lt;/code&gt; *8. The next line shows the label</source>
          <target state="translated">La primera l&amp;iacute;nea muestra la forma precompilada de la expresi&amp;oacute;n regular. El segundo muestra el tama&amp;ntilde;o del formulario compilado (en unidades arbitrarias, generalmente palabras de 4 bytes) y el n&amp;uacute;mero total de bytes asignados para la tabla de desplazamiento / longitud, generalmente 4+ &lt;code&gt;size&lt;/code&gt; * 8. La siguiente l&amp;iacute;nea muestra la etiqueta</target>
        </trans-unit>
        <trans-unit id="a20c750a487464791d892a303a995f218caaa79f" translate="yes" xml:space="preserve">
          <source>The first line shows the pre-compiled form of the regex. The second shows the size of the compiled form (in arbitrary units, usually 4-byte words) and the total number of bytes allocated for the offset/length table, usually 4+&lt;code&gt;size&lt;/code&gt;*8. The next line shows the label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7723c265ae779d21866a1c9e48b6be3d9e2e441" translate="yes" xml:space="preserve">
          <source>The first method takes periodically samples of the CPU program counter, and since the program counter can be correlated with the code generated for functions, we get a statistical view of in which functions the program is spending its time. The caveats are that very small/fast functions have lower probability of showing up in the profile, and that periodically interrupting the program (this is usually done rather frequently, in the scale of milliseconds) imposes an additional overhead that may skew the results. The first problem can be alleviated by running the code for longer (in general this is a good idea for profiling), the second problem is usually kept in guard by the profiling tools themselves.</source>
          <target state="translated">El primer método toma periódicamente muestras del contador del programa de la CPU,y como el contador del programa puede correlacionarse con el código generado para las funciones,obtenemos una visión estadística de en qué funciones el programa está empleando su tiempo.Las advertencias son que las funciones muy pequeñas/rápidas tienen una menor probabilidad de aparecer en el perfil,y que interrumpir periódicamente el programa (esto se suele hacer con bastante frecuencia,en la escala de milisegundos)impone una sobrecarga adicional que puede sesgar los resultados.El primer problema puede aliviarse ejecutando el código durante más tiempo (en general es una buena idea para la elaboración de perfiles),el segundo problema suele mantenerse en guardia por las propias herramientas de elaboración de perfiles.</target>
        </trans-unit>
        <trans-unit id="108fd116edbd3a8efddc6a912d5c851d634fe27e" translate="yes" xml:space="preserve">
          <source>The first name is called the</source>
          <target state="translated">El primer nombre se llama</target>
        </trans-unit>
        <trans-unit id="0263570650724ebe71f62b454fad700a5d663c69" translate="yes" xml:space="preserve">
          <source>The first number doesn't really mean anything, but it has to be 1. It's the second number that's important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c95867addff6e3f2248f91516c23a2994856b3e" translate="yes" xml:space="preserve">
          <source>The first of the three available techniques is to write the filter completely in C. The external module you create interfaces directly with the source filter hooks provided by Perl.</source>
          <target state="translated">La primera de las tres técnicas disponibles es escribir el filtro completamente en C.El módulo externo crea interfaces directamente con los ganchos del filtro de origen proporcionados por Perl.</target>
        </trans-unit>
        <trans-unit id="2cf31ee7914fd21827d64f65da992c78e2dd2481" translate="yes" xml:space="preserve">
          <source>The first of these is the operand providing the overloaded operator implementation - in this case, the object whose &lt;code&gt;minus()&lt;/code&gt; method is being called.</source>
          <target state="translated">El primero de ellos es el operando proporcionar la implementaci&amp;oacute;n operador sobrecargado - en este caso, el objeto cuya &lt;code&gt;minus()&lt;/code&gt; m&amp;eacute;todo est&amp;aacute; siendo llamado.</target>
        </trans-unit>
        <trans-unit id="32df19252ad74319d4ce1046b1c9ffb0a16536ba" translate="yes" xml:space="preserve">
          <source>The first of these two functions checks if a hash table entry exists, and the second deletes it.</source>
          <target state="translated">La primera de estas dos funciones comprueba si existe una entrada en la tabla de hash,y la segunda la borra.</target>
        </trans-unit>
        <trans-unit id="2baee74dbd5d9705ba409f49c41818c111db8f9c" translate="yes" xml:space="preserve">
          <source>The first one explicitly passes in the context, which is needed for e.g. threaded builds. The second one does that implicitly; do not get them mixed. If you are not passing in a aTHX_, you will need to do a dTHX (or a dVAR) as the first thing in the function.</source>
          <target state="translated">La primera pasa explícitamente en el contexto,lo que es necesario para,por ejemplo,construcciones con hilos.El segundo lo hace implícitamente;no los mezcle.Si no se pasa en un aTHX_,será necesario hacer un dTHX (o un dVAR)como primera cosa en la función.</target>
        </trans-unit>
        <trans-unit id="b5d9b746eaf9594387396efaab0691495a0a8b7a" translate="yes" xml:space="preserve">
          <source>The first one is &lt;code&gt;&quot;format&quot;&lt;/code&gt; , which is a sprintf()-style format string to be used for both numeric parts of the complex number(s). The is somewhat system-dependent but most often it corresponds to &lt;code&gt;&quot;%.15g&quot;&lt;/code&gt; . You can revert to the default by setting the &lt;code&gt;&lt;a href=&quot;../functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El primero es &lt;code&gt;&quot;format&quot;&lt;/code&gt; , que es una cadena de formato estilo sprintf () que se utilizar&amp;aacute; para ambas partes num&amp;eacute;ricas de los n&amp;uacute;meros complejos. Depende un poco del sistema, pero la mayor&amp;iacute;a de las veces corresponde a &lt;code&gt;&quot;%.15g&quot;&lt;/code&gt; . Puede volver al valor predeterminado configurando el &lt;code&gt;&lt;a href=&quot;../functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o en &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51d3fa9f9095d6ba6fd87e541115beff9437b3d9" translate="yes" xml:space="preserve">
          <source>The first one is &lt;code&gt;&quot;format&quot;&lt;/code&gt;, which is a sprintf()-style format string to be used for both numeric parts of the complex number(s). The is somewhat system-dependent but most often it corresponds to &lt;code&gt;&quot;%.15g&quot;&lt;/code&gt;. You can revert to the default by setting the &lt;code&gt;format&lt;/code&gt; to &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64110520d33c3683502b6895ec7f686e2b691a83" translate="yes" xml:space="preserve">
          <source>The first one is a B::PADNAMELIST under Perl 5.22, and a B::AV under earlier versions. The rest are currently B::AV objects, but that could change in future versions.</source>
          <target state="translated">El primero es un B::PADNAMELISTA bajo Perl 5.22,y un B::AV bajo versiones anteriores.El resto son actualmente objetos B::AV,pero eso podría cambiar en futuras versiones.</target>
        </trans-unit>
        <trans-unit id="094fe85cd4712afd8983c54311ea1fc6e32b5e2d" translate="yes" xml:space="preserve">
          <source>The first parameter is a scalar into which, upon success, the wide character represented by the multi-byte string contained in the second parameter is stored. The optional third parameter is ignored if it is larger than the actual length of the second parameter string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b59fd7f35cf6d9692928110737a220c45e66d67" translate="yes" xml:space="preserve">
          <source>The first parameter to &lt;code&gt;UTF8fARG&lt;/code&gt; is a boolean: 1 if the string is in UTF-8; 0 if string is in native byte encoding (Latin1). The second parameter is the number of bytes in the string to print. And the third and final parameter is a pointer to the first byte in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ea0aa1b4ed42878caaa6bf56a3d5e35dfb1b12" translate="yes" xml:space="preserve">
          <source>The first parameter to &lt;code&gt;globmap&lt;/code&gt; , &lt;code&gt;*.tar.gz&lt;/code&gt;, is an</source>
          <target state="translated">El primer par&amp;aacute;metro de &lt;code&gt;globmap&lt;/code&gt; , &lt;code&gt;*.tar.gz&lt;/code&gt; , es un</target>
        </trans-unit>
        <trans-unit id="bbc40cbdc77266be7323541d7a55e0277f7ff986" translate="yes" xml:space="preserve">
          <source>The first parameter to &lt;code&gt;globmap&lt;/code&gt;, &lt;code&gt;*.tar.gz&lt;/code&gt;, is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7f0d7f3250dff196379a82ef1042cf92584eab" translate="yes" xml:space="preserve">
          <source>The first part of each item is the language tag, between {...}. It is followed by an English name for the language or language-group. Language tags that I judge to be not for general use, are bracketed.</source>
          <target state="translated">La primera parte de cada elemento es la etiqueta del idioma,entre {...}.Está seguida por un nombre en inglés para el idioma o grupo de idiomas.Las etiquetas de idiomas que considero que no son de uso general,están entre corchetes.</target>
        </trans-unit>
        <trans-unit id="2850ab20f1390861bb35445270293546335b53f4" translate="yes" xml:space="preserve">
          <source>The first part of the report already shows the critical information regarding which subroutines are using the most time. The next gives some statistics about the source files profiled.</source>
          <target state="translated">En la primera parte del informe ya se muestra la información crítica sobre las subrutinas que se utilizan con mayor frecuencia.La siguiente da algunas estadísticas sobre los archivos fuente perfilados.</target>
        </trans-unit>
        <trans-unit id="397f188600044026c7930c78c4ec45f2d657488a" translate="yes" xml:space="preserve">
          <source>The first pass is finding the end of the quoted construct. This results in saving to a safe location a copy of the text (between the starting and ending delimiters), normalized as necessary to avoid needing to know what the original delimiters were.</source>
          <target state="translated">El primer paso es encontrar el final de la construcción citada.Esto resulta en guardar en un lugar seguro una copia del texto (entre el delimitador inicial y el final),normalizado según sea necesario para no necesitar saber cuáles eran los delimitadores originales.</target>
        </trans-unit>
        <trans-unit id="52dc28c1ba280be3247117e934caac44df1ea80f" translate="yes" xml:space="preserve">
          <source>The first portions of this document contains instructions to cross-compile Perl for Android 2.0 and later, using the binaries provided by Google. The latter portions describe how to build perl native using one of the toolchains available on the Play Store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fe7088bb4f27d081fbb7bc1dcf8f8999b582b8" translate="yes" xml:space="preserve">
          <source>The first quantifier '.*' starts out by matching the whole string 'the cat in the hat'.</source>
          <target state="translated">El primer cuantificador '.*' comienza emparejando toda la cadena 'el gato en el sombrero'.</target>
        </trans-unit>
        <trans-unit id="9c1c8c14ec1e3a07903d82f126aec6635328f772" translate="yes" xml:space="preserve">
          <source>The first quantifier &lt;code&gt;.*&lt;/code&gt; grabs as much of the string as possible while still having the regex match. The second quantifier &lt;code&gt;.*&lt;/code&gt; has no string left to it, so it matches 0 times.</source>
          <target state="translated">El primer cuantificador &lt;code&gt;.*&lt;/code&gt; Toma la mayor cantidad de cadena posible sin dejar de tener la coincidencia de expresiones regulares. El segundo cuantificador &lt;code&gt;.*&lt;/code&gt; No tiene ninguna cadena, por lo que coincide 0 veces.</target>
        </trans-unit>
        <trans-unit id="6e528105bd9590f0533aed7b713042470a33b8f6" translate="yes" xml:space="preserve">
          <source>The first reason is that this technique</source>
          <target state="translated">La primera razón es que esta técnica</target>
        </trans-unit>
        <trans-unit id="b01253c2ebd001b8b295bfdd61014e6f7807bcd2" translate="yes" xml:space="preserve">
          <source>The first regexp &lt;code&gt;world&lt;/code&gt; doesn't match because regexps are case-sensitive. The second regexp matches because the substring &lt;code&gt;'o W'&lt;/code&gt; occurs in the string &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; . The space character ' ' is treated like any other character in a regexp and is needed to match in this case. The lack of a space character is the reason the third regexp &lt;code&gt;'oW'&lt;/code&gt; doesn't match. The fourth regexp &lt;code&gt;'World '&lt;/code&gt; doesn't match because there is a space at the end of the regexp, but not at the end of the string. The lesson here is that regexps must match a part of the string</source>
          <target state="translated">El primer &lt;code&gt;world&lt;/code&gt; regexp no coincide porque las expresiones regulares distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas. La segunda expresi&amp;oacute;n regular coincide porque la subcadena &lt;code&gt;'o W'&lt;/code&gt; aparece en la cadena &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; . El car&amp;aacute;cter de espacio '' se trata como cualquier otro car&amp;aacute;cter en una expresi&amp;oacute;n regular y es necesario que coincida en este caso. La falta de un car&amp;aacute;cter de espacio es la raz&amp;oacute;n por la que la tercera &lt;code&gt;'oW'&lt;/code&gt; no coincide. La cuarta expresi&amp;oacute;n regular &lt;code&gt;'World '&lt;/code&gt; no coincide porque hay un espacio al final de la expresi&amp;oacute;n regular, pero no al final de la cadena. La lecci&amp;oacute;n aqu&amp;iacute; es que las expresiones regulares deben coincidir con una parte de la cadena</target>
        </trans-unit>
        <trans-unit id="d791e1a0374a959ba40ed9f40fd370a5d5a456cb" translate="yes" xml:space="preserve">
          <source>The first regexp &lt;code&gt;world&lt;/code&gt; doesn't match because regexps are case-sensitive. The second regexp matches because the substring &lt;code&gt;'o W'&lt;/code&gt; occurs in the string &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;. The space character &lt;code&gt;' '&lt;/code&gt; is treated like any other character in a regexp and is needed to match in this case. The lack of a space character is the reason the third regexp &lt;code&gt;'oW'&lt;/code&gt; doesn't match. The fourth regexp &quot;&lt;code&gt;World &lt;/code&gt;&quot; doesn't match because there is a space at the end of the regexp, but not at the end of the string. The lesson here is that regexps must match a part of the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddca4d833894463530776d04e09076c4eab205cd" translate="yes" xml:space="preserve">
          <source>The first regexp doesn't match because the string has more to it than &lt;code&gt;keep&lt;/code&gt; . Since the second regexp is exactly the string, it matches. Using both &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; in a regexp forces the complete string to match, so it gives you complete control over which strings match and which don't. Suppose you are looking for a fellow named bert, off in a string by himself:</source>
          <target state="translated">La primera expresi&amp;oacute;n regular no coincide porque la cadena tiene m&amp;aacute;s que &lt;code&gt;keep&lt;/code&gt; . Dado que la segunda expresi&amp;oacute;n regular es exactamente la cadena, coincide. El uso de &lt;code&gt;^&lt;/code&gt; y &lt;code&gt;$&lt;/code&gt; en una expresi&amp;oacute;n regular obliga a que la cadena completa coincida, por lo que le da un control completo sobre qu&amp;eacute; cadenas coinciden y cu&amp;aacute;les no. Suponga que est&amp;aacute; buscando a un tipo llamado bert, solo en una cadena:</target>
        </trans-unit>
        <trans-unit id="467dd0993aab8207646a6fe07d7110c16e4ae880" translate="yes" xml:space="preserve">
          <source>The first regexp doesn't match because the string has more to it than &lt;code&gt;keep&lt;/code&gt;. Since the second regexp is exactly the string, it matches. Using both &lt;code&gt;'^'&lt;/code&gt; and &lt;code&gt;'$'&lt;/code&gt; in a regexp forces the complete string to match, so it gives you complete control over which strings match and which don't. Suppose you are looking for a fellow named bert, off in a string by himself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187948592e3895c96d921caa597048a315b504cd" translate="yes" xml:space="preserve">
          <source>The first reports that both those the hashes contain the same data, while the second reports that they do not. Which you prefer is left as an exercise to the reader.</source>
          <target state="translated">El primero informa que ambos los hashes contienen los mismos datos,mientras que el segundo informa que no.El que prefiera se deja como ejercicio para el lector.</target>
        </trans-unit>
        <trans-unit id="8860a773058066d93bd3eee9e9232f1b245f86d6" translate="yes" xml:space="preserve">
          <source>The first section describes POSIX functions from the 1003.1 specification. The second section describes some classes for signal objects, TTY objects, and other miscellaneous objects. The remaining sections list various constants and macros in an organization which roughly follows IEEE Std 1003.1b-1993.</source>
          <target state="translated">La primera sección describe las funciones POSIX de la especificación 1003.1.La segunda sección describe algunas clases de objetos de señal,objetos TTY y otros objetos diversos.Las secciones restantes enumeran varias constantes y macros en una organización que sigue aproximadamente la IEEE Std 1003.1b-1993.</target>
        </trans-unit>
        <trans-unit id="9a3305f1afd295681118d876dec01ed7a5b8a456" translate="yes" xml:space="preserve">
          <source>The first section maps various C data types to a name, which corresponds somewhat with the various Perl types. The second section contains C code which &lt;b&gt;xsubpp&lt;/b&gt; uses to handle input parameters. The third section contains C code which &lt;b&gt;xsubpp&lt;/b&gt; uses to handle output parameters.</source>
          <target state="translated">La primera secci&amp;oacute;n asigna varios tipos de datos C a un nombre, que se corresponde de alguna manera con los distintos tipos de Perl. La segunda secci&amp;oacute;n contiene c&amp;oacute;digo C que &lt;b&gt;xsubpp&lt;/b&gt; usa para manejar los par&amp;aacute;metros de entrada. La tercera secci&amp;oacute;n contiene c&amp;oacute;digo C que &lt;b&gt;xsubpp&lt;/b&gt; usa para manejar los par&amp;aacute;metros de salida.</target>
        </trans-unit>
        <trans-unit id="5dec21809b3e94bb56bbf06b1ab08c273929b8df" translate="yes" xml:space="preserve">
          <source>The first section of this document provides an itemized checklist; subsequent sections provide a more detailed discussion of the items on the list. The final section, &quot;Common Pitfalls&quot;, describes some of the most popular mistakes made by CPAN authors.</source>
          <target state="translated">En la primera sección del presente documento se ofrece una lista de verificación pormenorizada;en las secciones siguientes se examinan más detalladamente los elementos de la lista.La sección final,&quot;Errores comunes&quot;,describe algunos de los errores más populares cometidos por los autores del CPAN.</target>
        </trans-unit>
        <trans-unit id="873fa0119aa76096529ccc05f5ae97f00f810fd3" translate="yes" xml:space="preserve">
          <source>The first set of stats gives some summary statistical information, including the quality score translated into &quot;Good&quot;, &quot;Poor&quot; and &quot;Bad&quot;, (score&amp;lt;=1.05, score&amp;lt;=1.2, score&amp;gt;1.2). See the documentation in bucket_stats() for more details.</source>
          <target state="translated">El primer conjunto de estad&amp;iacute;sticas proporciona informaci&amp;oacute;n estad&amp;iacute;stica resumida, incluido el puntaje de calidad traducido en &quot;Bueno&quot;, &quot;Deficiente&quot; y &quot;Malo&quot; (puntaje &amp;lt;= 1.05, puntaje &amp;lt;= 1.2, puntaje&amp;gt; 1.2). Consulte la documentaci&amp;oacute;n en bucket_stats () para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="da5f31247c2eb407c67afefcfd779d23549ec3df" translate="yes" xml:space="preserve">
          <source>The first situation being much more frequent, it makes sense to rewrite the boilerplate as</source>
          <target state="translated">Siendo la primera situación mucho más frecuente,tiene sentido reescribir la plantilla como</target>
        </trans-unit>
        <trans-unit id="ad55dcbd2815a02cf9af8564c1fdb6a55d76bf9e" translate="yes" xml:space="preserve">
          <source>The first state may happen in &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; and &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handlers.</source>
          <target state="translated">El primer estado puede ocurrir en los &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; y &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="470d1d04836c0a5dd42cc354e122ff4ddc8f36a3" translate="yes" xml:space="preserve">
          <source>The first step is to add this line:</source>
          <target state="translated">El primer paso es añadir esta línea:</target>
        </trans-unit>
        <trans-unit id="1d92a911344060c6031358fbe99f5d7b26fb10e8" translate="yes" xml:space="preserve">
          <source>The first step of processing such a line is the conversion, to binary, of the hexadecimal data, to obtain the four fields, while checking the checksum. No surprise here: we'll start with a simple &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; call to convert everything to binary:</source>
          <target state="translated">El primer paso para procesar dicha l&amp;iacute;nea es la conversi&amp;oacute;n, a binario, de los datos hexadecimales, para obtener los cuatro campos, mientras se verifica la suma de verificaci&amp;oacute;n. No es de extra&amp;ntilde;ar aqu&amp;iacute;: comenzaremos con una simple llamada de &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; para convertir todo a binario:</target>
        </trans-unit>
        <trans-unit id="3d051bbcc0b2bf5e763df328cc13763c82b21bfe" translate="yes" xml:space="preserve">
          <source>The first step of processing such a line is the conversion, to binary, of the hexadecimal data, to obtain the four fields, while checking the checksum. No surprise here: we'll start with a simple &lt;code&gt;pack&lt;/code&gt; call to convert everything to binary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2237935485a4e0e57cc8ab0badea71ce05f470d" translate="yes" xml:space="preserve">
          <source>The first string position that this regexp can match is at the first &lt;code&gt;'m'&lt;/code&gt; in &lt;code&gt;programming&lt;/code&gt; . At this position, the minimal &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}?&lt;/a&gt;&lt;/code&gt; matches just one &lt;code&gt;'m'&lt;/code&gt; . Although the second quantifier &lt;code&gt;.*?&lt;/code&gt; would prefer to match no characters, it is constrained by the end-of-string anchor &lt;code&gt;$&lt;/code&gt; to match the rest of the string.</source>
          <target state="translated">La primera posici&amp;oacute;n de cadena que esta expresi&amp;oacute;n regular puede coincidir es en la primera &lt;code&gt;'m'&lt;/code&gt; en la &lt;code&gt;programming&lt;/code&gt; . En esta posici&amp;oacute;n, el m&amp;iacute;nimo &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}?&lt;/a&gt;&lt;/code&gt; coincide con solo una &lt;code&gt;'m'&lt;/code&gt; . Aunque el segundo cuantificador &lt;code&gt;.*?&lt;/code&gt; preferir&amp;iacute;a no coincidir con ning&amp;uacute;n car&amp;aacute;cter, est&amp;aacute; limitado por el ancla de fin de cadena &lt;code&gt;$&lt;/code&gt; para que coincida con el resto de la cadena.</target>
        </trans-unit>
        <trans-unit id="5f895607d70ebcfe9c61321d68de376e6e1b258c" translate="yes" xml:space="preserve">
          <source>The first string position that this regexp can match is at the first &lt;code&gt;'m'&lt;/code&gt; in &lt;code&gt;programming&lt;/code&gt;. At this position, the minimal &lt;code&gt;m{1,2}?&lt;/code&gt; matches just one &lt;code&gt;'m'&lt;/code&gt;. Although the second quantifier &lt;code&gt;.*?&lt;/code&gt; would prefer to match no characters, it is constrained by the end-of-string anchor &lt;code&gt;'$'&lt;/code&gt; to match the rest of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea599d468c324040fff443da5016a605f7268fd" translate="yes" xml:space="preserve">
          <source>The first task in building a regexp is to decide what we want to match and what we want to exclude. In our case, we want to match both integers and floating point numbers and we want to reject any string that isn't a number.</source>
          <target state="translated">La primera tarea en la construcción de un regexp es decidir qué queremos igualar y qué queremos excluir.En nuestro caso,queremos hacer coincidir tanto números enteros como números en coma flotante y queremos rechazar cualquier cadena que no sea un número.</target>
        </trans-unit>
        <trans-unit id="a253a2302f0dd4214c0fa19a3c7600e1aeb7c19f" translate="yes" xml:space="preserve">
          <source>The first thing after the &quot;=over&quot; command should be an &quot;=item&quot;, unless there aren't going to be any items at all in this &quot;=over&quot; ... &quot;=back&quot; region.</source>
          <target state="translated">La primera cosa después del comando &quot;=over&quot; debería ser un &quot;=item&quot;,a menos que no vaya a haber ningún ítem en absoluto en este &quot;=over&quot;...&quot;=retorno&quot;.</target>
        </trans-unit>
        <trans-unit id="b4182d2194d7b0a192c4908dabaf70426956c4b1" translate="yes" xml:space="preserve">
          <source>The first thread will grab a lock on &lt;code&gt;$x&lt;/code&gt; , then, after a pause during which the second thread has probably had time to do some work, try to grab a lock on &lt;code&gt;$y&lt;/code&gt; . Meanwhile, the second thread grabs a lock on &lt;code&gt;$y&lt;/code&gt; , then later tries to grab a lock on &lt;code&gt;$x&lt;/code&gt; . The second lock attempt for both threads will block, each waiting for the other to release its lock.</source>
          <target state="translated">El primer hilo capturar&amp;aacute; un bloqueo en &lt;code&gt;$x&lt;/code&gt; , luego, despu&amp;eacute;s de una pausa durante la cual el segundo hilo probablemente haya tenido tiempo de hacer algo de trabajo, intente bloquear &lt;code&gt;$y&lt;/code&gt; . Mientras tanto, el segundo hilo captura un bloqueo en &lt;code&gt;$y&lt;/code&gt; , luego intenta agarrar un bloqueo en &lt;code&gt;$x&lt;/code&gt; . El segundo intento de bloqueo para ambos hilos se bloquear&amp;aacute;, cada uno esperando que el otro libere su bloqueo.</target>
        </trans-unit>
        <trans-unit id="1b0e5abdf339f37172dcc121e02e6f88bb538337" translate="yes" xml:space="preserve">
          <source>The first thread will grab a lock on &lt;code&gt;$x&lt;/code&gt;, then, after a pause during which the second thread has probably had time to do some work, try to grab a lock on &lt;code&gt;$y&lt;/code&gt;. Meanwhile, the second thread grabs a lock on &lt;code&gt;$y&lt;/code&gt;, then later tries to grab a lock on &lt;code&gt;$x&lt;/code&gt;. The second lock attempt for both threads will block, each waiting for the other to release its lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97805142bc0d01ba991305a8f5bc28f8f3fcba12" translate="yes" xml:space="preserve">
          <source>The first time through the loop, you will rewrite the entire file, from line 0 through the end. The second time through the loop, you will rewrite the entire file from line 1 through the end. The third time through the loop, you will rewrite the entire file from line 2 to the end. And so on.</source>
          <target state="translated">La primera vez que pase por el bucle,reescribirá todo el archivo,desde la línea 0 hasta el final.La segunda vez que pase por el bucle,reescribirá todo el archivo,desde la línea 1 hasta el final.La tercera vez que pases por el bucle,reescribirás todo el archivo desde la línea 2 hasta el final.Y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="0d6a59a26170358aef33f4d3978afce2e252997e" translate="yes" xml:space="preserve">
          <source>The first two arguments taken by this method are the name of the symbol and the value which should be assigned to it. The optional third argument is a string specifying the symbol table to be used; 'GLOBAL' specifies the global symbol table, and any other string specifies the local symbol table. If this argument is omitted, the default symbol table for the object is used. &lt;code&gt;setsym&lt;/code&gt; returns TRUE if successful, and FALSE otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579873cee61866ba7eb29c6c1922769d306aac89" translate="yes" xml:space="preserve">
          <source>The first two fields give the total amount of memory perl sbrk(2)ed (ess-broken? :-) and number of sbrk(2)s used. The third number is what perl thinks about continuity of returned chunks. So long as this number is positive, malloc() will assume that it is probable that sbrk(2) will provide continuous memory.</source>
          <target state="translated">Los dos primeros campos dan la cantidad total de memoria perl sbrk(2)ed (ess-broken? :-)y el número de sbrk(2)s utilizados.El tercer número es lo que Perl piensa sobre la continuidad de los trozos devueltos.Mientras este número sea positivo,malloc()asumirá que es probable que sbrk(2)proporcione memoria continua.</target>
        </trans-unit>
        <trans-unit id="0819c6d2283041c7cfda116e5fb9ae13c3a8c8e6" translate="yes" xml:space="preserve">
          <source>The first two forms return &lt;b&gt;true&lt;/b&gt; if the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt; should not be produced by composition normalization. For the final two forms to return &lt;b&gt;true&lt;/b&gt;, it is additionally required that this fact not otherwise be determinable from the Unicode data base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4becb05f0bd7170201aca65de03c239266000dbc" translate="yes" xml:space="preserve">
          <source>The first two forms return &lt;b&gt;true&lt;/b&gt; if the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt; should not be produced by composition normalization. For the final two forms to return &lt;b&gt;true&lt;/b&gt;, it is additionally required that this fact not otherwise be determinable from the Unicode data base.</source>
          <target state="translated">Las dos primeras formas devuelven &lt;b&gt;verdadero&lt;/b&gt; si el &lt;a href=&quot;#code-point-argument&quot;&gt;argumento del punto de c&amp;oacute;digo&lt;/a&gt; no debe producirse mediante la normalizaci&amp;oacute;n de la composici&amp;oacute;n. Para que las dos &amp;uacute;ltimas formas devuelvan &lt;b&gt;verdadero&lt;/b&gt; , se requiere adem&amp;aacute;s que este hecho no se pueda determinar de otra manera a partir de la base de datos Unicode.</target>
        </trans-unit>
        <trans-unit id="7edeb46a7cf77b29322b042169fd6545cca7858e" translate="yes" xml:space="preserve">
          <source>The first value to be substituted in the output string ( usually the column in a cursor addressing capability )</source>
          <target state="translated">El primer valor a sustituir en la cadena de salida (normalmente la columna en una capacidad de direccionamiento del cursor)</target>
        </trans-unit>
        <trans-unit id="6c0a32c5664fb58c1965f29a470eb892918927d8" translate="yes" xml:space="preserve">
          <source>The first version of TAP to include an explicit version number is 13.</source>
          <target state="translated">La primera versión de TAP que incluye un número de versión explícito es la 13.</target>
        </trans-unit>
        <trans-unit id="23a0afbda307c4ae7b5c2196fca71616dba92438" translate="yes" xml:space="preserve">
          <source>The first version of this article originally appeared in The Perl Journal #11, and is copyright 1998 The Perl Journal. It appears courtesy of Jon Orwant and The Perl Journal. This document may be distributed under the same terms as Perl itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba908120df7bb5731ed530b89b4f89b55fe9cb39" translate="yes" xml:space="preserve">
          <source>The first version of this document appeared on Perl Monks, where several people had useful suggestions. Thank you, Perl Monks.</source>
          <target state="translated">La primera versión de este documento apareció en Perl Monks,donde varias personas tenían sugerencias útiles.Gracias,Perl Monks.</target>
        </trans-unit>
        <trans-unit id="af8e62f88abda0ab386f2cc101dff094b50fe117" translate="yes" xml:space="preserve">
          <source>The first version, the one without the indirect object, ran the</source>
          <target state="translated">La primera versión,la que no tiene el objeto indirecto,ejecutó la</target>
        </trans-unit>
        <trans-unit id="6781fdff7b279779b03d140931fe35f9d498c177" translate="yes" xml:space="preserve">
          <source>The first will run all test files in all first-level subdirectories and all subdirectories they contain. The second will run tests in only the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf53ff13525a226bb832b26adcd06a8433dba05" translate="yes" xml:space="preserve">
          <source>The fix is to remove all Test::Builder1.5/2 related code. Either use the legacy Test::Builder API, or use Test2 directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b513d7712476adb9fe5c913d728ae8bf500df8" translate="yes" xml:space="preserve">
          <source>The fix is to use the API specified in &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; to look at or modify state as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5db8a38d2c3f00c90a5e9484dd046d60b873cc" translate="yes" xml:space="preserve">
          <source>The fixed-width font to use for verbatim text and code. Defaults to &lt;code&gt;CW&lt;/code&gt; . Some systems may want &lt;code&gt;CR&lt;/code&gt; instead. Only matters for &lt;b&gt;troff&lt;/b&gt; output.</source>
          <target state="translated">La fuente de ancho fijo que se utilizar&amp;aacute; para el texto y el c&amp;oacute;digo textuales. Por defecto es &lt;code&gt;CW&lt;/code&gt; . Algunos sistemas pueden querer &lt;code&gt;CR&lt;/code&gt; en su lugar. Solo importa para la salida de &lt;b&gt;troff&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="4411138b75b6f4d0eb399c58a09f8dac2bce859c" translate="yes" xml:space="preserve">
          <source>The fixed-width font to use for verbatim text and code. Defaults to &lt;code&gt;CW&lt;/code&gt; . Some systems may want &lt;code&gt;CR&lt;/code&gt; instead. Only matters for troff(1) output.</source>
          <target state="translated">La fuente de ancho fijo que se utilizar&amp;aacute; para el texto y el c&amp;oacute;digo textuales. Por defecto es &lt;code&gt;CW&lt;/code&gt; . Algunos sistemas pueden querer &lt;code&gt;CR&lt;/code&gt; en su lugar. Solo importa para la salida troff (1).</target>
        </trans-unit>
        <trans-unit id="e30f3c3943bfb47da6b22d33c6d6f3755c5c4c90" translate="yes" xml:space="preserve">
          <source>The fixed-width font to use for verbatim text and code. Defaults to &lt;code&gt;CW&lt;/code&gt;. Some systems may want &lt;code&gt;CR&lt;/code&gt; instead. Only matters for &lt;b&gt;troff&lt;/b&gt; output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f14452e50daa176a2948e6c80e179269ad7ea89" translate="yes" xml:space="preserve">
          <source>The fixed-width font to use for verbatim text and code. Defaults to &lt;code&gt;CW&lt;/code&gt;. Some systems may want &lt;code&gt;CR&lt;/code&gt; instead. Only matters for troff(1) output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ad2fb87b3a3c9138524933b76f13bbb404b147" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;SVs_PADSTALE&lt;/code&gt; is cleared on lexicals each time the &lt;code&gt;my()&lt;/code&gt; is executed, and set on scope exit. This allows the &lt;code&gt;&quot;Variable $x is not available&quot;&lt;/code&gt; warning to be generated in evals, such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239752a03e595c22089872230ac5d8660b72070d" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;UNICODE_WARN_ILLEGAL_INTERCHANGE&lt;/code&gt; selects all three of the above WARN flags; and &lt;code&gt;UNICODE_DISALLOW_ILLEGAL_INTERCHANGE&lt;/code&gt; selects all three DISALLOW flags. &lt;code&gt;UNICODE_DISALLOW_ILLEGAL_INTERCHANGE&lt;/code&gt; restricts the allowed inputs to the strict UTF-8 traditionally defined by Unicode. Similarly, &lt;code&gt;UNICODE_WARN_ILLEGAL_C9_INTERCHANGE&lt;/code&gt; and &lt;code&gt;UNICODE_DISALLOW_ILLEGAL_C9_INTERCHANGE&lt;/code&gt; are shortcuts to select the above-Unicode and surrogate flags, but not the non-character ones, as defined in &lt;a href=&quot;https://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode Corrigendum #9&lt;/a&gt;. See &lt;a href=&quot;perlunicode#Noncharacter-code-points&quot;&gt;&quot;Noncharacter code points&quot; in perlunicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f7fca8c3cfcccf779409e2e759e639d09b18b3" translate="yes" xml:space="preserve">
          <source>The flag SVs_PADSTALE is cleared on lexicals each time the my() is executed, and set on scope exit. This allows the 'Variable $x is not available' warning to be generated in evals, such as</source>
          <target state="translated">La bandera SVs_PADSTALE se borra en los léxicos cada vez que se ejecuta el my(),y se pone en la salida del osciloscopio.Esto permite que la advertencia &quot;Variable $x no está disponible&quot; se genere en evals,como</target>
        </trans-unit>
        <trans-unit id="f2aaf40e59e4745cf25b943d852f6d075ba40074" translate="yes" xml:space="preserve">
          <source>The flags &lt;code&gt;UTF8_WARN_ILLEGAL_INTERCHANGE&lt;/code&gt;, &lt;code&gt;UTF8_WARN_ILLEGAL_C9_INTERCHANGE&lt;/code&gt;, &lt;code&gt;UTF8_WARN_SURROGATE&lt;/code&gt;, &lt;code&gt;UTF8_WARN_NONCHAR&lt;/code&gt;, and &lt;code&gt;UTF8_WARN_SUPER&lt;/code&gt; will cause warning messages to be raised for their respective categories, but otherwise the code points are considered valid (not malformations). To get a category to both be treated as a malformation and raise a warning, specify both the WARN and DISALLOW flags. (But note that warnings are not raised if lexically disabled nor if &lt;code&gt;UTF8_CHECK_ONLY&lt;/code&gt; is also specified.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78429f471bd064af1845edc82bca0aa6e6778ce" translate="yes" xml:space="preserve">
          <source>The flags UTF8_WARN_ILLEGAL_INTERCHANGE, UTF8_WARN_SURROGATE, UTF8_WARN_NONCHAR, and UTF8_WARN_SUPER will cause warning messages to be raised for their respective categories, but otherwise the code points are considered valid (not malformations). To get a category to both be treated as a malformation and raise a warning, specify both the WARN and DISALLOW flags. (But note that warnings are not raised if lexically disabled nor if UTF8_CHECK_ONLY is also specified.)</source>
          <target state="translated">Las banderas UTF8_WARN_ILLEGAL_INTERCHANGE,UTF8_WARN_SURROGATE,UTF8_WARN_NONCHAR,y UTF8_WARN_SUPER harán que se eleven los mensajes de advertencia para sus respectivas categorías,pero por lo demás los puntos de código se consideran válidos (no las malformaciones).Para que una categoría sea tratada como una malformación y a la vez genere una advertencia,especifique las banderas WARN y DISALLOW.(Pero tenga en cuenta que las advertencias no se levantan si se inhabilita léxicamente ni si también se especifica UTF8_CHECK_ONLY).</target>
        </trans-unit>
        <trans-unit id="5e9a6e0acd0b69b277831006219122b07719e738" translate="yes" xml:space="preserve">
          <source>The flags default to zero, if you want something different you can either use &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;$POSIX::SigRt::SIGACTION_FLAGS&lt;/code&gt; , or you can derive from POSIX::SigRt and define your own &lt;code&gt;new()&lt;/code&gt; (the tied hash STORE method of the &lt;code&gt;%SIGRT&lt;/code&gt; calls &lt;code&gt;new($rtsig, $handler, $SIGACTION_FLAGS)&lt;/code&gt; , where the &lt;code&gt;$rtsig&lt;/code&gt; ranges from zero to &lt;code&gt;SIGRTMAX - SIGRTMIN + 1)&lt;/code&gt; .</source>
          <target state="translated">Las banderas est&amp;aacute;n predeterminadas a cero, si desea algo diferente, puede usar &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; en &lt;code&gt;$POSIX::SigRt::SIGACTION_FLAGS&lt;/code&gt; , o puede derivar de POSIX :: SigRt y definir su propio &lt;code&gt;new()&lt;/code&gt; (el m&amp;eacute;todo hash STORE vinculado del &lt;code&gt;%SIGRT&lt;/code&gt; llama a &lt;code&gt;new($rtsig, $handler, $SIGACTION_FLAGS)&lt;/code&gt; , donde &lt;code&gt;$rtsig&lt;/code&gt; var&amp;iacute;a de cero a &lt;code&gt;SIGRTMAX - SIGRTMIN + 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="723ee765d373688ffd88695151d122551f3cfc41" translate="yes" xml:space="preserve">
          <source>The flags default to zero, if you want something different you can either use &lt;code&gt;local&lt;/code&gt; on &lt;code&gt;$POSIX::SigRt::SIGACTION_FLAGS&lt;/code&gt;, or you can derive from POSIX::SigRt and define your own &lt;code&gt;new()&lt;/code&gt; (the tied hash STORE method of the &lt;code&gt;%SIGRT&lt;/code&gt; calls &lt;code&gt;new($rtsig, $handler, $SIGACTION_FLAGS)&lt;/code&gt;, where the &lt;code&gt;$rtsig&lt;/code&gt; ranges from zero to &lt;code&gt;SIGRTMAX - SIGRTMIN + 1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13aa1a177f443868b50bc938e7eaafe94399ebc" translate="yes" xml:space="preserve">
          <source>The flags parameter is mandatory. The valid flag values are R_CURSOR, R_FIRST, R_LAST, R_NEXT and R_PREV.</source>
          <target state="translated">El parámetro de banderas es obligatorio.Los valores de bandera válidos son R_CURSOR,R_FIRST,R_LAST,R_NEXT y R_PREV.</target>
        </trans-unit>
        <trans-unit id="3f1710e98626f16d762b28b22c17439d043e302f" translate="yes" xml:space="preserve">
          <source>The flags specify dictionary order and case folding:</source>
          <target state="translated">Las banderas especifican el orden del diccionario y el plegado del estuche:</target>
        </trans-unit>
        <trans-unit id="10543ef8424f431d7ff14981f10f88f0c585ac15" translate="yes" xml:space="preserve">
          <source>The flavor</source>
          <target state="translated">El sabor</target>
        </trans-unit>
        <trans-unit id="0aa322e2f3acfe06e30a26fc0d60aa65599ac7cd" translate="yes" xml:space="preserve">
          <source>The floating point infinity can be exported as a subroutine Inf():</source>
          <target state="translated">El infinito de punto flotante puede ser exportado como una subrutina Inf():</target>
        </trans-unit>
        <trans-unit id="b219578f1fed53f8498341e6252dcc91a786ab6d" translate="yes" xml:space="preserve">
          <source>The floating point number is taken and split first on the single decimal place, then each group of three digits to the right of the decimal makes up the next digit, and so on until the number of significant digits is exhausted, &lt;b&gt;plus&lt;/b&gt; enough trailing zeros to reach the next multiple of three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5e2b0312afcc71cd5da99161e1d75eaff20f77" translate="yes" xml:space="preserve">
          <source>The focus is on elements of style which are visible to the users of a module, rather than those parts which are only seen by the module's developers. However, many of the guidelines presented in this document can be extrapolated and applied successfully to a module's internals.</source>
          <target state="translated">El enfoque se centra en los elementos de estilo que son visibles para los usuarios de un módulo,más que en las partes que sólo ven los desarrolladores del módulo.Sin embargo,muchas de las directrices presentadas en este documento pueden extrapolarse y aplicarse con éxito a las partes internas de un módulo.</target>
        </trans-unit>
        <trans-unit id="9981cb315250daca0797ec1ef39fd43f6c6f6a86" translate="yes" xml:space="preserve">
          <source>The following &quot;public&quot; global names can be read by clients of this API. Beware that these should be considered &quot;readonly&quot;.</source>
          <target state="translated">Los siguientes nombres globales &quot;públicos&quot; pueden ser leídos por los clientes de esta API.Tenga en cuenta que estos deben ser considerados como &quot;sólo lectura&quot;.</target>
        </trans-unit>
        <trans-unit id="20617679e0f828efd3412a47a9694c121128bc85" translate="yes" xml:space="preserve">
          <source>The following &quot;virtual&quot; methods can be defined by the client. They will be called by the API at appropriate points. Note that unless specified otherwise, the debug API only defines empty, non-functional default versions of these methods.</source>
          <target state="translated">Los siguientes métodos &quot;virtuales&quot; pueden ser definidos por el cliente.Serán llamados por la API en los puntos apropiados.Tenga en cuenta que,a menos que se especifique lo contrario,la API de depuración sólo define versiones vacías y no funcionales por defecto de estos métodos.</target>
        </trans-unit>
        <trans-unit id="74f1711fbc30180876f2a4788abe7e66574474a6" translate="yes" xml:space="preserve">
          <source>The following (inefficiently) deletes all the values of %HASH and @ARRAY:</source>
          <target state="translated">Lo siguiente (ineficientemente)borra todos los valores de %HASH y @ARRAY:</target>
        </trans-unit>
        <trans-unit id="d00c5dd059bf93f0972cfd4b44a56b57fd0caf81" translate="yes" xml:space="preserve">
          <source>The following API list contains functions, thus one needs to provide pointers to the modifiable data explicitly (either C pointers, or Perlish &lt;code&gt;GV *&lt;/code&gt; s). Where the above macros take &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt;, a similar function takes &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; *&lt;/code&gt; .</source>
          <target state="translated">La siguiente lista de API contiene funciones, por lo que es necesario proporcionar punteros a los datos modificables expl&amp;iacute;citamente (punteros C o Perlish &lt;code&gt;GV *&lt;/code&gt; s). Donde las macros anteriores toman &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; , una funci&amp;oacute;n similar toma &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7722c25bc63a475d0687db360090ccce2f038b0" translate="yes" xml:space="preserve">
          <source>The following API list contains functions, thus one needs to provide pointers to the modifiable data explicitly (either C pointers, or Perlish &lt;code&gt;GV *&lt;/code&gt;s). Where the above macros take &lt;code&gt;int&lt;/code&gt;, a similar function takes &lt;code&gt;int *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1909e3498aef1b158b54d7174bc50b2ee9e5d97" translate="yes" xml:space="preserve">
          <source>The following API uses parts of Perl's internals in the current implementation. As such, they are efficient but may change in a future release.</source>
          <target state="translated">La siguiente API utiliza partes de los internos de Perl en la implementación actual.Como tal,son eficientes pero pueden cambiar en una futura versión.</target>
        </trans-unit>
        <trans-unit id="4a57e29ab087cd96e1aaf0f9eb948df8f4a4939a" translate="yes" xml:space="preserve">
          <source>The following CVE reports were previously filed against File-Path and are believed to have been addressed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cab3979d794d7afb5425a45a32e9d6f7ad6a57" translate="yes" xml:space="preserve">
          <source>The following NNTP command are unsupported by the package, and there are no plans to do so.</source>
          <target state="translated">El siguiente comando del NNTP no está respaldado por el paquete,y no hay planes de hacerlo.</target>
        </trans-unit>
        <trans-unit id="2d9e72c95e25f90c1fd2f371c21c4c0499d49748" translate="yes" xml:space="preserve">
          <source>The following RFC959 commands have not been implemented:</source>
          <target state="translated">Los siguientes comandos RFC959 no han sido implementados:</target>
        </trans-unit>
        <trans-unit id="8ed1bcda5c1f977c3cd2bdcf823f30eee9e9931d" translate="yes" xml:space="preserve">
          <source>The following SDK and compiler configurations and Nokia phones were tested at some point in time (+ = compiled and PerlApp run, - = not), both for Perl 5.8.x and 5.9.x:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237479489ace35ae45dfd88db2279ca4abed31a5" translate="yes" xml:space="preserve">
          <source>The following VMS-specific information applies to the indicated &quot;special&quot; Perl variables, in addition to the general information in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;. Where there is a conflict, this information takes precedence.</source>
          <target state="translated">La siguiente informaci&amp;oacute;n espec&amp;iacute;fica de VMS se aplica a las variables de Perl &quot;especiales&quot; indicadas, adem&amp;aacute;s de la informaci&amp;oacute;n general en &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; . Donde hay un conflicto, esta informaci&amp;oacute;n tiene prioridad.</target>
        </trans-unit>
        <trans-unit id="a7dd0dcb80676e8669cc8ad178e5203d579a6cf3" translate="yes" xml:space="preserve">
          <source>The following Win32-Methods are built-in:</source>
          <target state="translated">Los siguientes métodos de Win32 están incorporados:</target>
        </trans-unit>
        <trans-unit id="1c76188e19e8645c61f6a21008485b728f914f68" translate="yes" xml:space="preserve">
          <source>The following XS code shows the getnetconfigent() function which is used with ONC+ TIRPC. The getnetconfigent() function will return a pointer to a C structure and has the C prototype shown below. The example will demonstrate how the C pointer will become a Perl reference. Perl will consider this reference to be a pointer to a blessed object and will attempt to call a destructor for the object. A destructor will be provided in the XS source to free the memory used by getnetconfigent(). Destructors in XS can be created by specifying an XSUB function whose name ends with the word &lt;b&gt;DESTROY&lt;/b&gt;. XS destructors can be used to free memory which may have been malloc'd by another XSUB.</source>
          <target state="translated">El siguiente c&amp;oacute;digo XS muestra la funci&amp;oacute;n getnetconfigent () que se usa con ONC + TIRPC. La funci&amp;oacute;n getnetconfigent () devolver&amp;aacute; un puntero a una estructura C y tiene el prototipo C que se muestra a continuaci&amp;oacute;n. El ejemplo demostrar&amp;aacute; c&amp;oacute;mo el puntero C se convertir&amp;aacute; en una referencia de Perl. Perl considerar&amp;aacute; que esta referencia es un puntero a un objeto bendecido e intentar&amp;aacute; llamar a un destructor para el objeto. Se proporcionar&amp;aacute; un destructor en la fuente XS para liberar la memoria utilizada por getnetconfigent (). Los destructores en XS se pueden crear especificando una funci&amp;oacute;n XSUB cuyo nombre termine con la palabra &lt;b&gt;DESTROY&lt;/b&gt; . Los destructores XS se pueden usar para liberar memoria que puede haber sido mal ubicada por otro XSUB.</target>
        </trans-unit>
        <trans-unit id="63aaf3d4311946370f948fe1a874ef3b8b5e106b" translate="yes" xml:space="preserve">
          <source>The following XS file shows an XS subroutine, or XSUB, which demonstrates one possible interface to the rpcb_gettime() function. This XSUB represents a direct translation between C and Perl and so preserves the interface even from Perl. This XSUB will be invoked from Perl with the usage shown above. Note that the first three #include statements, for &lt;code&gt;EXTERN.h&lt;/code&gt; , &lt;code&gt;perl.h&lt;/code&gt; , and &lt;code&gt;XSUB.h&lt;/code&gt; , will always be present at the beginning of an XS file. This approach and others will be expanded later in this document. A #define for &lt;code&gt;PERL_NO_GET_CONTEXT&lt;/code&gt; should be present to fetch the interpreter context more efficiently, see &lt;a href=&quot;perlguts#How-multiple-interpreters-and-concurrency-are-supported&quot;&gt;perlguts&lt;/a&gt; for details.</source>
          <target state="translated">El siguiente archivo XS muestra una subrutina XS, o XSUB, que demuestra una posible interfaz para la funci&amp;oacute;n rpcb_gettime (). Este XSUB representa una traducci&amp;oacute;n directa entre C y Perl y, por lo tanto, conserva la interfaz incluso desde Perl. Este XSUB se invocar&amp;aacute; desde Perl con el uso que se muestra arriba. Tenga en cuenta que las tres primeras declaraciones #include, para &lt;code&gt;EXTERN.h&lt;/code&gt; , &lt;code&gt;perl.h&lt;/code&gt; y &lt;code&gt;XSUB.h&lt;/code&gt; , siempre estar&amp;aacute;n presentes al principio de un archivo XS. Este enfoque y otros se ampliar&amp;aacute;n m&amp;aacute;s adelante en este documento. Debe estar presente un #define para &lt;code&gt;PERL_NO_GET_CONTEXT&lt;/code&gt; para obtener el contexto del int&amp;eacute;rprete de manera m&amp;aacute;s eficiente, vea &lt;a href=&quot;perlguts#How-multiple-interpreters-and-concurrency-are-supported&quot;&gt;perlguts&lt;/a&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="6d04933d03d9fe0141ffb2c1060f6f198f4e41d2" translate="yes" xml:space="preserve">
          <source>The following XS file shows an XS subroutine, or XSUB, which demonstrates one possible interface to the rpcb_gettime() function. This XSUB represents a direct translation between C and Perl and so preserves the interface even from Perl. This XSUB will be invoked from Perl with the usage shown above. Note that the first three #include statements, for &lt;code&gt;EXTERN.h&lt;/code&gt;, &lt;code&gt;perl.h&lt;/code&gt;, and &lt;code&gt;XSUB.h&lt;/code&gt;, will always be present at the beginning of an XS file. This approach and others will be expanded later in this document. A #define for &lt;code&gt;PERL_NO_GET_CONTEXT&lt;/code&gt; should be present to fetch the interpreter context more efficiently, see &lt;a href=&quot;perlguts#How-multiple-interpreters-and-concurrency-are-supported&quot;&gt;perlguts&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47250eb8cd4ed87f2a860c613d9258f03e5ab61" translate="yes" xml:space="preserve">
          <source>The following XSUB allows a Perl program to access a C library function called sin(). The XSUB will imitate the C function which takes a single argument and returns a single value.</source>
          <target state="translated">El siguiente XSUB permite a un programa Perl acceder a una función de la biblioteca C llamada sin().El XSUB imitará la función C que toma un solo argumento y devuelve un solo valor.</target>
        </trans-unit>
        <trans-unit id="71f3a3c3ea9ed7f75901c1ba18beceaf1cdd2fef" translate="yes" xml:space="preserve">
          <source>The following XSUB is for a C function which requires special handling of its parameters. The Perl usage is given first.</source>
          <target state="translated">El siguiente XSUB es para una función C que requiere un manejo especial de sus parámetros.El uso de Perl se da primero.</target>
        </trans-unit>
        <trans-unit id="4f90e96487752832ff267e1d1e37b8167fdf3f66" translate="yes" xml:space="preserve">
          <source>The following XSUB uses the &lt;code&gt;SV *&lt;/code&gt; return type as a mnemonic only, and uses a CODE: block to indicate to the compiler that the programmer has supplied all the necessary code. The sv_newmortal() call will initialize the return value to undef, making that the default return value.</source>
          <target state="translated">El siguiente XSUB usa el tipo de retorno &lt;code&gt;SV *&lt;/code&gt; como mnem&amp;oacute;nico solamente, y usa un bloque CODE: para indicar al compilador que el programador ha proporcionado todo el c&amp;oacute;digo necesario. La llamada a sv_newmortal () inicializar&amp;aacute; el valor de retorno a undef, convirti&amp;eacute;ndolo en el valor de retorno predeterminado.</target>
        </trans-unit>
        <trans-unit id="a1bc7555b268b447bf525bbb361d23e74ba70916" translate="yes" xml:space="preserve">
          <source>The following XSUB will call the C rpcb_gettime() function and will return its two output values, timep and status, to Perl as a single list.</source>
          <target state="translated">El siguiente XSUB llamará a la función C rpcb_gettime()y devolverá sus dos valores de salida,timep y status,a Perl como una lista única.</target>
        </trans-unit>
        <trans-unit id="a13ba96373d895202485d58b843fc94572bbb6f9" translate="yes" xml:space="preserve">
          <source>The following XSUB will generate incorrect C code. The &lt;b&gt;xsubpp&lt;/b&gt; compiler will turn this into code which calls &lt;code&gt;rpcb_gettime()&lt;/code&gt; with parameters &lt;code&gt;(char
*host, time_t timep)&lt;/code&gt; , but the real &lt;code&gt;rpcb_gettime()&lt;/code&gt; wants the &lt;code&gt;timep&lt;/code&gt; parameter to be of type &lt;code&gt;time_t*&lt;/code&gt; rather than &lt;code&gt;time_t&lt;/code&gt; .</source>
          <target state="translated">El siguiente XSUB generar&amp;aacute; un c&amp;oacute;digo C incorrecto. El compilador &lt;b&gt;xsubpp&lt;/b&gt; convertir&amp;aacute; esto en c&amp;oacute;digo que llama a &lt;code&gt;rpcb_gettime()&lt;/code&gt; con par&amp;aacute;metros &lt;code&gt;(char *host, time_t timep)&lt;/code&gt; , pero el &lt;code&gt;rpcb_gettime()&lt;/code&gt; real quiere que el par&amp;aacute;metro &lt;code&gt;timep&lt;/code&gt; sea ​​del tipo &lt;code&gt;time_t*&lt;/code&gt; en lugar de &lt;code&gt;time_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8ca7ce02dc17e5f491e4977939dfb34745c228" translate="yes" xml:space="preserve">
          <source>The following XSUB will generate incorrect C code. The &lt;b&gt;xsubpp&lt;/b&gt; compiler will turn this into code which calls &lt;code&gt;rpcb_gettime()&lt;/code&gt; with parameters &lt;code&gt;(char *host, time_t timep)&lt;/code&gt;, but the real &lt;code&gt;rpcb_gettime()&lt;/code&gt; wants the &lt;code&gt;timep&lt;/code&gt; parameter to be of type &lt;code&gt;time_t*&lt;/code&gt; rather than &lt;code&gt;time_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e3e7ea3cadf3d440df4d4dd029f14c329e3532" translate="yes" xml:space="preserve">
          <source>The following are Win32 multilanguage editor/IDEs that support Perl:</source>
          <target state="translated">Los siguientes son los editores/IDEs multilingües de Win32 que soportan Perl:</target>
        </trans-unit>
        <trans-unit id="878ebe02234cd6605f8faf412927071c9b53a803" translate="yes" xml:space="preserve">
          <source>The following are additions that have been requested, but I have been reluctant to add due to them being very simple to implement in perl</source>
          <target state="translated">Las siguientes son adiciones que se han solicitado,pero he sido reacio a añadirlas debido a que son muy sencillas de implementar en perl</target>
        </trans-unit>
        <trans-unit id="f30d9daa89e8ddd37f1202a1d64d4bf0b2c5e1f9" translate="yes" xml:space="preserve">
          <source>The following are all accessor methods -- that is, they don't do anything on their own, but just alter the contents of the conversion object, which comprises the options for this particular batch conversion.</source>
          <target state="translated">Los siguientes son todos los métodos accesorios,es decir,no hacen nada por sí mismos,sino que sólo alteran el contenido del objeto de conversión,que comprende las opciones para esta conversión por lotes en particular.</target>
        </trans-unit>
        <trans-unit id="cd4d07e071310dab311d4b0da4565a6a9fb7c1f6" translate="yes" xml:space="preserve">
          <source>The following are also defined by POSIX/SUSv3, but unfortunately not very widely implemented:</source>
          <target state="translated">Los siguientes también están definidos por POSIX/SUSv3,pero desafortunadamente no muy ampliamente implementados:</target>
        </trans-unit>
        <trans-unit id="5b36027844e4806a69f430d629440d5e7ecab300" translate="yes" xml:space="preserve">
          <source>The following are common causes of compilation and/or execution failures, not common to Perl as such. The C FAQ is good bedtime reading. Please test your changes with as many C compilers and platforms as possible; we will, anyway, and it's nice to save oneself from public embarrassment.</source>
          <target state="translated">Las siguientes son causas comunes de fallos de compilación y/o ejecución,no comunes a Perl como tal.El FAQ de C es una buena lectura para la hora de dormir.Por favor,pruebe sus cambios con tantos compiladores y plataformas C como sea posible;lo haremos,de todos modos,y es bueno salvarse de la vergüenza pública.</target>
        </trans-unit>
        <trans-unit id="e2853c6c7f110e3e4c7ed324a99e91a718ca2300" translate="yes" xml:space="preserve">
          <source>The following are exported:</source>
          <target state="translated">Los siguientes se exportan:</target>
        </trans-unit>
        <trans-unit id="7791b6ab4309dfc3ea821f7f1d4091cb49b39854" translate="yes" xml:space="preserve">
          <source>The following are fast conversions from ISO 8859-1 (Latin-1) bytes to UTF-8 bytes and back, the code works even with older Perl 5 versions.</source>
          <target state="translated">Las siguientes son conversiones rápidas de ISO 8859-1 (Latin-1)bytes a UTF-8 bytes y viceversa,el código funciona incluso con versiones anteriores de Perl 5.</target>
        </trans-unit>
        <trans-unit id="c852e811877cc6e9c98b0f2d5fb593ccfc901a95" translate="yes" xml:space="preserve">
          <source>The following are methods in the DB base class. A client must access these methods by inheritance (*not* by calling them directly), since the API keeps track of clients through the inheritance mechanism.</source>
          <target state="translated">Los siguientes son métodos en la clase de base DB.Un cliente debe acceder a estos métodos por herencia (*no*llamándolos directamente),ya que la API mantiene un seguimiento de los clientes a través del mecanismo de herencia.</target>
        </trans-unit>
        <trans-unit id="10865635be3faf44cc57e9f25634d2220e52c67d" translate="yes" xml:space="preserve">
          <source>The following are such interfaces. Also, see &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;&quot;The &quot;Unicode Bug&quot;&quot;&lt;/a&gt;. For all of these interfaces Perl currently (as of v5.16.0) simply assumes byte strings both as arguments and results, or UTF-8 strings if the (deprecated) &lt;code&gt;encoding&lt;/code&gt; pragma has been used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3c274cc89ec17e7b845a436f38d1540dbbe5c4" translate="yes" xml:space="preserve">
          <source>The following are such interfaces. Also, see &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt;. For all of these interfaces Perl currently (as of v5.16.0) simply assumes byte strings both as arguments and results, or UTF-8 strings if the (deprecated) &lt;code&gt;encoding&lt;/code&gt; pragma has been used.</source>
          <target state="translated">Las siguientes son esas interfaces. Adem&amp;aacute;s, consulte &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;El error Unicode&lt;/a&gt; . Para todas estas interfaces, Perl actualmente (a partir de v5.16.0) simplemente asume cadenas de bytes como argumentos y resultados, o cadenas UTF-8 si se ha utilizado el pragma de &lt;code&gt;encoding&lt;/code&gt; (obsoleto) .</target>
        </trans-unit>
        <trans-unit id="5bd9bb59d1e1fb0197ed7d9b93043408c8c9a510" translate="yes" xml:space="preserve">
          <source>The following are the built-in attributes for subroutines:</source>
          <target state="translated">Los siguientes son los atributos incorporados para las subrutinas:</target>
        </trans-unit>
        <trans-unit id="e8e3f6674cdb74d0958b2c8c99d763306f790276" translate="yes" xml:space="preserve">
          <source>The following are the built-in attributes for variables:</source>
          <target state="translated">Los siguientes son los atributos incorporados para las variables:</target>
        </trans-unit>
        <trans-unit id="ff4fdef880964ea16866f7dda3f218be964bbbac" translate="yes" xml:space="preserve">
          <source>The following are unsupported due to the lack of mapping data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2f2e3af66effdb52e3d7832a18951cdcafd9d0" translate="yes" xml:space="preserve">
          <source>The following are valid ($t1 and $t2 are Time::Piece objects):</source>
          <target state="translated">Lo siguiente es válido ($t1 y $t2 son Tiempo::Objetos de la pieza):</target>
        </trans-unit>
        <trans-unit id="cbc24e337c1d628f49530f574e24235d24a7392e" translate="yes" xml:space="preserve">
          <source>The following article by Sean M. Burke and Jordan Lachler first appeared in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5045c4560d45f5e572e375de5ca429c353310df0" translate="yes" xml:space="preserve">
          <source>The following assume that the error has been copied into a separate scalar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f353aa81f91d6dfefc37a9410a376bf8429ba4d4" translate="yes" xml:space="preserve">
          <source>The following attributes may be specified as arguments to WriteMakefile() or as NAME=VALUE pairs on the command line. Attributes that became available with later versions of MakeMaker are indicated.</source>
          <target state="translated">Los siguientes atributos pueden ser especificados como argumentos de WriteMakefile()o como pares NAME=VALUE en la línea de comandos.Se indican los atributos que estuvieron disponibles con versiones posteriores de MakeMaker.</target>
        </trans-unit>
        <trans-unit id="b84f68ccf7654a835d7d4e99c76422bf128a4813" translate="yes" xml:space="preserve">
          <source>The following blocks are more or less equivalent:</source>
          <target state="translated">Los siguientes bloques son más o menos equivalentes:</target>
        </trans-unit>
        <trans-unit id="8676339e37a5a253bdb0cffb28423c7698d023a0" translate="yes" xml:space="preserve">
          <source>The following boolean methods are useful in determining the</source>
          <target state="translated">Los siguientes métodos booleanos son útiles para determinar la</target>
        </trans-unit>
        <trans-unit id="b20d8378cbbcad7ea8e16d1f3872a95fae060afe" translate="yes" xml:space="preserve">
          <source>The following bzip2 constants are exported by this module</source>
          <target state="translated">Este módulo exporta las siguientes constantes bzip2</target>
        </trans-unit>
        <trans-unit id="f401e4eb4fd748677014cc2aaf006246c60d726e" translate="yes" xml:space="preserve">
          <source>The following checks are currently performed:</source>
          <target state="translated">Actualmente se realizan las siguientes comprobaciones:</target>
        </trans-unit>
        <trans-unit id="a62f3d4985ed23dc7ef4b06d5778fb97c9f68862" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to supply initialization code for function parameters. The initialization code is eval'ed within double quotes by the compiler before it is added to the output so anything which should be interpreted literally [mainly &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , or &lt;code&gt;\\&lt;/code&gt; ] must be protected with backslashes. The variables &lt;code&gt;$var&lt;/code&gt; , &lt;code&gt;$arg&lt;/code&gt; , and &lt;code&gt;$type&lt;/code&gt; can be used as in typemaps.</source>
          <target state="translated">El siguiente c&amp;oacute;digo demuestra c&amp;oacute;mo proporcionar c&amp;oacute;digo de inicializaci&amp;oacute;n para par&amp;aacute;metros de funci&amp;oacute;n. El compilador eval&amp;uacute;a el c&amp;oacute;digo de inicializaci&amp;oacute;n entre comillas dobles antes de agregarlo a la salida, por lo que cualquier cosa que deba interpretarse literalmente [principalmente &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; o &lt;code&gt;\\&lt;/code&gt; ] debe protegerse con barras invertidas. Las variables &lt;code&gt;$var&lt;/code&gt; , &lt;code&gt;$arg&lt;/code&gt; y &lt;code&gt;$type&lt;/code&gt; se pueden usar como en los mapas de tipos.</target>
        </trans-unit>
        <trans-unit id="9746ef7b7145a5c34d6668413bb27b113b96441f" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to supply initialization code for function parameters. The initialization code is eval'ed within double quotes by the compiler before it is added to the output so anything which should be interpreted literally [mainly &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, or &lt;code&gt;\\&lt;/code&gt;] must be protected with backslashes. The variables &lt;code&gt;$var&lt;/code&gt;, &lt;code&gt;$arg&lt;/code&gt;, and &lt;code&gt;$type&lt;/code&gt; can be used as in typemaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994718a63d0e6e92c9d2b82a651bf83693f2d577" translate="yes" xml:space="preserve">
          <source>The following code opens up an output handle that will convert any output to a hexadecimal dump of the output bytes: for example &quot;A&quot; will be converted to &quot;41&quot; (on ASCII-based machines, on EBCDIC platforms the &quot;A&quot; will become &quot;c1&quot;)</source>
          <target state="translated">El siguiente código abre una manija de salida que convertirá cualquier salida en un volcado hexadecimal de los bytes de salida:por ejemplo,&quot;A&quot; se convertirá en &quot;41&quot; (en las máquinas basadas en ASCII,en las plataformas EBCDIC la &quot;A&quot; se convertirá en &quot;c1&quot;)</target>
        </trans-unit>
        <trans-unit id="b646612d9dad6d0db0d9ef47258da28b3b64f1c7" translate="yes" xml:space="preserve">
          <source>The following code will build up an ASCII string saying &lt;code&gt;'PerlPerlPerl'&lt;/code&gt; . The comments show the string after each step. Note that this code works in the same way on big-endian or little-endian machines.</source>
          <target state="translated">El siguiente c&amp;oacute;digo construir&amp;aacute; una cadena ASCII que dice &lt;code&gt;'PerlPerlPerl'&lt;/code&gt; . Los comentarios muestran la cadena despu&amp;eacute;s de cada paso. Tenga en cuenta que este c&amp;oacute;digo funciona de la misma manera en m&amp;aacute;quinas big-endian o little-endian.</target>
        </trans-unit>
        <trans-unit id="036e8023d85aa6d81194f031f72a68fa7f59b794" translate="yes" xml:space="preserve">
          <source>The following code will build up an ASCII string saying &lt;code&gt;'PerlPerlPerl'&lt;/code&gt;. The comments show the string after each step. Note that this code works in the same way on big-endian or little-endian machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67a84b8d82f9d95c5a2c0536fda7094ec319c8b" translate="yes" xml:space="preserve">
          <source>The following code works for single-level arrays. It uses a stringwise comparison, and does not distinguish defined versus undefined empty strings. Modify if you have other needs.</source>
          <target state="translated">El siguiente código funciona para matrices de un solo nivel.Utiliza una comparación de cadenas,y no distingue entre cadenas vacías definidas y no definidas.Modifíquelo si tiene otras necesidades.</target>
        </trans-unit>
        <trans-unit id="b42ca297dfa48bfb8bd9e9eb19ab8d4d7764f6d5" translate="yes" xml:space="preserve">
          <source>The following collations all make sense and you may meet any of them if you &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; .</source>
          <target state="translated">Las siguientes intercalaciones tienen sentido y puede encontrarlas si &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c757c0b2a139bcc3c8432fda1a1f80dbad9e220" translate="yes" xml:space="preserve">
          <source>The following collations all make sense and you may meet any of them if you &lt;code&gt;&quot;use locale&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5819e2e60b0b7a2348ddc793c274025d6f7880f" translate="yes" xml:space="preserve">
          <source>The following command characters are defined:</source>
          <target state="translated">Se definen los siguientes caracteres de comando:</target>
        </trans-unit>
        <trans-unit id="94b38038de165a0daa7082711aa19c3a2036cf7d" translate="yes" xml:space="preserve">
          <source>The following command line switches behave differently under VMS than described in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;. Note also that in order to pass uppercase switches to Perl, you need to enclose them in double-quotes on the command line, since the CRTL downcases all unquoted strings.</source>
          <target state="translated">Los siguientes conmutadores de l&amp;iacute;nea de comando se comportan de manera diferente en VMS que los descritos en &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; . Tenga en cuenta tambi&amp;eacute;n que para pasar conmutadores de may&amp;uacute;sculas a Perl, debe encerrarlos entre comillas dobles en la l&amp;iacute;nea de comando, ya que CRTL reduce todas las cadenas sin comillas.</target>
        </trans-unit>
        <trans-unit id="52448ab44f7b84ff23c0bb42cd9a8e27687108c1" translate="yes" xml:space="preserve">
          <source>The following command shows how to compute digests for typical inputs such as the NIST test vector &quot;abc&quot;:</source>
          <target state="translated">El siguiente comando muestra cómo calcular los compendios para entradas típicas como el vector de prueba del NIST &quot;abc&quot;:</target>
        </trans-unit>
        <trans-unit id="ab2ed20fd1e01c9d474d41404b2754af8ec50648" translate="yes" xml:space="preserve">
          <source>The following compilation warnings may happen in HP-UX releases earlier than 11.31 but are harmless:</source>
          <target state="translated">Las siguientes advertencias de compilación pueden ocurrir en versiones de HP-UX anteriores a la 11.31 pero son inofensivas:</target>
        </trans-unit>
        <trans-unit id="3f82c625cf5e705c9b15fb1534c5c11410cab28f" translate="yes" xml:space="preserve">
          <source>The following compiler versions are currently supported by IBM:</source>
          <target state="translated">Las siguientes versiones del compilador están actualmente soportadas por IBM:</target>
        </trans-unit>
        <trans-unit id="f0ad64f79a84fc4d8e60a250b5c99592e7f5b9c7" translate="yes" xml:space="preserve">
          <source>The following compound statements may be used to control flow:</source>
          <target state="translated">Las siguientes declaraciones compuestas pueden utilizarse para controlar el flujo:</target>
        </trans-unit>
        <trans-unit id="a4b58da98f934bf4b5cdd1337624b0bd2ba9de07" translate="yes" xml:space="preserve">
          <source>The following compression formats are supported by &lt;code&gt;IO::Compress::Zip&lt;/code&gt; and &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd012592d06772e0ce9bcaaa2cfc233e60576f7d" translate="yes" xml:space="preserve">
          <source>The following constants may be returned by getaddrinfo() or getnameinfo(). Others may be provided by the OS.</source>
          <target state="translated">Las siguientes constantes pueden ser devueltas por getaddrinfo()o getnameinfo().Otras pueden ser proporcionadas por el sistema operativo.</target>
        </trans-unit>
        <trans-unit id="b842779c0173418719ebe5c2a7970e42d7d014a5" translate="yes" xml:space="preserve">
          <source>The following constants may be supplied as $xflags.</source>
          <target state="translated">Las siguientes constantes pueden ser suministradas como $xflags.</target>
        </trans-unit>
        <trans-unit id="1be3497b66f11b1f18ed534aa513910c71b80ff0" translate="yes" xml:space="preserve">
          <source>The following debugger is actually useful:</source>
          <target state="translated">El siguiente depurador es realmente útil:</target>
        </trans-unit>
        <trans-unit id="becc45c3efb50622f9f813d964b04c0775034a75" translate="yes" xml:space="preserve">
          <source>The following describes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c779f6e32c9824a654c3d3bb9768a1c5fd1243ca" translate="yes" xml:space="preserve">
          <source>The following description of methods is still under development. Please refer to the code for not suitably documented sections and complain loudly to the makemaker@perl.org mailing list. Better yet, provide a patch.</source>
          <target state="translated">La siguiente descripción de los métodos está todavía en desarrollo.Por favor,consulte el código para las secciones no documentadas adecuadamente y quéjese en voz alta a la lista de correo makemaker@perl.org.Mejor aún,proporcione un parche.</target>
        </trans-unit>
        <trans-unit id="b3965f0e7b97198aca0dad023bdfa649bc3d7a07" translate="yes" xml:space="preserve">
          <source>The following documentation describes how to use FATAL warnings but the perl5 porters strongly recommend that you understand the risks before doing so, especially for library code intended for use by others, as there is no way for downstream users to change the choice of fatal categories.</source>
          <target state="translated">La siguiente documentación describe cómo utilizar las advertencias FATAL,pero los portadores de perl5 recomiendan encarecidamente que se comprendan los riesgos antes de hacerlo,especialmente para el código de biblioteca destinado a ser utilizado por otros,ya que no hay forma de que los usuarios posteriores cambien la elección de las categorías fatales.</target>
        </trans-unit>
        <trans-unit id="a7395fbf98116a6fe303ce2ccf2e783d73f2e981" translate="yes" xml:space="preserve">
          <source>The following efficiently counts the number of set bits in a bit vector:</source>
          <target state="translated">Lo siguiente cuenta eficientemente el número de bits establecidos en un vector de bits:</target>
        </trans-unit>
        <trans-unit id="b85e86d2a59836c1bf602fd66fd49161e113bc9d" translate="yes" xml:space="preserve">
          <source>The following encodings are always available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb10534c1168ba80ae676bc74fad8ea1b177125" translate="yes" xml:space="preserve">
          <source>The following encodings are not supported as yet; some because they are rarely used, some because of technical difficulties. They may be supported by external modules via CPAN in the future, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2679279cde508d70a24c6c066ec89faf688d0162" translate="yes" xml:space="preserve">
          <source>The following entries are used during installation &amp;amp; testing on the libnet package</source>
          <target state="translated">Las siguientes entradas se utilizan durante la instalaci&amp;oacute;n y prueba en el paquete libnet</target>
        </trans-unit>
        <trans-unit id="f9b777d6ecffc2871fa8ad1bd878e3ae6a3e84c6" translate="yes" xml:space="preserve">
          <source>The following environment variables are not specific to Perl: They are part of the standardized (ISO C, XPG4, POSIX 1.c) &lt;code&gt;setlocale()&lt;/code&gt; method for controlling an application's opinion on data. Windows is non-POSIX, but Perl arranges for the following to work as described anyway. If the locale given by an environment variable is not valid, Perl tries the next lower one in priority. If none are valid, on Windows, the system default locale is then tried. If all else fails, the &lt;code&gt;&quot;C&quot;&lt;/code&gt; locale is used. If even that doesn't work, something is badly broken, but Perl tries to forge ahead with whatever the locale settings might be.</source>
          <target state="translated">Las siguientes variables de entorno no son espec&amp;iacute;ficas de Perl: Forman parte del m&amp;eacute;todo &lt;code&gt;setlocale()&lt;/code&gt; estandarizado (ISO C, XPG4, POSIX 1.c) para controlar la opini&amp;oacute;n de una aplicaci&amp;oacute;n sobre los datos. Windows no es POSIX, pero Perl se encarga de que lo siguiente funcione como se describe de todos modos. Si la configuraci&amp;oacute;n regional proporcionada por una variable de entorno no es v&amp;aacute;lida, Perl intenta la siguiente m&amp;aacute;s baja en prioridad. Si ninguno es v&amp;aacute;lido, en Windows, se prueba la configuraci&amp;oacute;n regional predeterminada del sistema. Si todo lo dem&amp;aacute;s falla, se utiliza la configuraci&amp;oacute;n regional &lt;code&gt;&quot;C&quot;&lt;/code&gt; . Si incluso eso no funciona, algo est&amp;aacute; muy da&amp;ntilde;ado, pero Perl intenta seguir adelante con cualquiera que sea la configuraci&amp;oacute;n regional.</target>
        </trans-unit>
        <trans-unit id="ec33aa555d27541d5a7185de1c1d5ba6a82fafba" translate="yes" xml:space="preserve">
          <source>The following equivalences hold (assuming &lt;code&gt;$#a &amp;gt;= $i&lt;/code&gt; )</source>
          <target state="translated">Las siguientes equivalencias se mantienen (asumiendo &lt;code&gt;$#a &amp;gt;= $i&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="85ca43521cd7775d8d33759b4074f5573158c1e6" translate="yes" xml:space="preserve">
          <source>The following error handling mechanism is considered experimental and is subject to change pending feedback from users.</source>
          <target state="translated">El siguiente mecanismo de tratamiento de errores se considera experimental y está sujeto a cambios en espera de la respuesta de los usuarios.</target>
        </trans-unit>
        <trans-unit id="31f04627eff0a8273cc4b4ecad29c912ce9d0e0e" translate="yes" xml:space="preserve">
          <source>The following error handling mechanism is consistent throughout all code paths EXCEPT in cases where the ROOT node is nonexistent. In version 2.11 the maintainers attempted to rectify this inconsistency but too many downstream modules encountered problems. In such case, if you require root node evaluation or error checking prior to calling &lt;code&gt;make_path&lt;/code&gt; or &lt;code&gt;remove_tree&lt;/code&gt;, you should take additional precautions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd63c469244aad9fa5f13ff0ec636281c8ddaf6b" translate="yes" xml:space="preserve">
          <source>The following error occurs because of the Cygwin &lt;code&gt;#define&lt;/code&gt; of &lt;code&gt;_LONG_DOUBLE&lt;/code&gt; :</source>
          <target state="translated">El siguiente error ocurre debido a la &lt;code&gt;#define&lt;/code&gt; Cygwin de &lt;code&gt;_LONG_DOUBLE&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="21e6156937fd6a5960b9a95ea9a5b12a0208719f" translate="yes" xml:space="preserve">
          <source>The following error occurs because of the Cygwin &lt;code&gt;#define&lt;/code&gt; of &lt;code&gt;_LONG_DOUBLE&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8339d5177634294fee1f0a35f0053c9114caf8" translate="yes" xml:space="preserve">
          <source>The following errors were encountered while parsing the POD:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6803ff3ff7c0a56cc9e903a6a90daace782e458" translate="yes" xml:space="preserve">
          <source>The following escape sequences are available in constructs that interpolate, and in transliterations whose delimiters aren't single quotes (&lt;code&gt;&quot;'&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e111335c40da2391bb6d2b1d90ed4f7cf911e6e5" translate="yes" xml:space="preserve">
          <source>The following escape sequences are available in constructs that interpolate, and in transliterations:</source>
          <target state="translated">Las siguientes secuencias de escape están disponibles en construcciones que interpolan y en transliteraciones:</target>
        </trans-unit>
        <trans-unit id="82159e16248ad6f2c09cd225ffdcbbf320f234ef" translate="yes" xml:space="preserve">
          <source>The following escape sequences are available in constructs that interpolate, but not in transliterations.</source>
          <target state="translated">Las siguientes secuencias de escape están disponibles en construcciones que interpolan,pero no en transliteraciones.</target>
        </trans-unit>
        <trans-unit id="62d1bc8a7a340748e143b5a954b697a1e9a92d04" translate="yes" xml:space="preserve">
          <source>The following example contains all supported keywords and structures with the exception of &lt;code&gt;eexpect&lt;/code&gt; which can be used instead of &lt;code&gt;expect&lt;/code&gt; .</source>
          <target state="translated">El siguiente ejemplo contiene todas las palabras clave y estructuras compatibles con la excepci&amp;oacute;n de &lt;code&gt;eexpect&lt;/code&gt; que se puede utilizar en lugar de &lt;code&gt;expect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8665fd8b339dfb9b20108d0f4ac2879711d7bca" translate="yes" xml:space="preserve">
          <source>The following example counts all the possible matching strings in a pattern (without actually matching any of them).</source>
          <target state="translated">El siguiente ejemplo cuenta todas las posibles cuerdas coincidentes en un patrón (sin coincidir en realidad con ninguna de ellas).</target>
        </trans-unit>
        <trans-unit id="b54547ad1ef83c76b354b1c5c3bcd26f7c112217" translate="yes" xml:space="preserve">
          <source>The following example implements a simple daemon, which restarts itself every time the &lt;code&gt;SIGHUP&lt;/code&gt; signal is received. The actual code is located in the subroutine &lt;code&gt;code()&lt;/code&gt; , which just prints some debugging info to show that it works; it should be replaced with the real code.</source>
          <target state="translated">El siguiente ejemplo implementa un demonio simple, que se reinicia cada vez que se &lt;code&gt;SIGHUP&lt;/code&gt; se&amp;ntilde;al SIGHUP . El c&amp;oacute;digo real se encuentra en el &lt;code&gt;code()&lt;/code&gt; subrutina () , que solo imprime informaci&amp;oacute;n de depuraci&amp;oacute;n para mostrar que funciona; deber&amp;iacute;a ser reemplazado por el c&amp;oacute;digo real.</target>
        </trans-unit>
        <trans-unit id="72ef6e9fa58ad7d92fd5d070a5b1ff44ddb10726" translate="yes" xml:space="preserve">
          <source>The following example implements a simple daemon, which restarts itself every time the &lt;code&gt;SIGHUP&lt;/code&gt; signal is received. The actual code is located in the subroutine &lt;code&gt;code()&lt;/code&gt;, which just prints some debugging info to show that it works; it should be replaced with the real code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db59d80ee391c290c8e0098f7b4cb5a921d343a" translate="yes" xml:space="preserve">
          <source>The following example shows a variation of the rpcb_gettime() function. This function uses the timep variable only as an output variable and does not care about its initial contents.</source>
          <target state="translated">El siguiente ejemplo muestra una variación de la función rpcb_gettime().Esta función utiliza la variable timep sólo como una variable de salida y no se preocupa por su contenido inicial.</target>
        </trans-unit>
        <trans-unit id="6e5930c0e8a4086018f7b728e0496b7b5959e325" translate="yes" xml:space="preserve">
          <source>The following example shows how the input parameter &lt;code&gt;timep&lt;/code&gt; can be evaluated late, after a PREINIT.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo el par&amp;aacute;metro de entrada &lt;code&gt;timep&lt;/code&gt; puede evaluarse tarde, despu&amp;eacute;s de PREINIT.</target>
        </trans-unit>
        <trans-unit id="f2d336b88b655db564d2a7de7cc37f5570d6138e" translate="yes" xml:space="preserve">
          <source>The following example will create aliases &lt;code&gt;FOO::gettime()&lt;/code&gt; and &lt;code&gt;BAR::getit()&lt;/code&gt; for this function.</source>
          <target state="translated">El siguiente ejemplo crear&amp;aacute; los alias &lt;code&gt;FOO::gettime()&lt;/code&gt; y &lt;code&gt;BAR::getit()&lt;/code&gt; para esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="97da872b2dd68324aaeb980a55e38dbf65cc1f09" translate="yes" xml:space="preserve">
          <source>The following example will import the &lt;code&gt;langinfo()&lt;/code&gt; function itself and three constants to be used as arguments to &lt;code&gt;langinfo()&lt;/code&gt; : a constant for the abbreviated first day of the week (the numbering starts from Sunday = 1) and two more constants for the affirmative and negative answers for a yes/no question in the current locale.</source>
          <target state="translated">El siguiente ejemplo importar&amp;aacute; la funci&amp;oacute;n &lt;code&gt;langinfo()&lt;/code&gt; s&amp;iacute; misma y tres constantes que se usar&amp;aacute;n como argumentos en &lt;code&gt;langinfo()&lt;/code&gt; : una constante para el primer d&amp;iacute;a de la semana abreviado (la numeraci&amp;oacute;n comienza desde el domingo = 1) y dos constantes m&amp;aacute;s para el afirmativo y respuestas negativas para una pregunta de s&amp;iacute; / no en la configuraci&amp;oacute;n regional actual.</target>
        </trans-unit>
        <trans-unit id="fa3452b428040cf2c56efc56c05eb14116e2d423" translate="yes" xml:space="preserve">
          <source>The following example will import the &lt;code&gt;langinfo()&lt;/code&gt; function itself and three constants to be used as arguments to &lt;code&gt;langinfo()&lt;/code&gt;: a constant for the abbreviated first day of the week (the numbering starts from Sunday = 1) and two more constants for the affirmative and negative answers for a yes/no question in the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fe38084e5e619d96b5a9797595ec407ba06c97" translate="yes" xml:space="preserve">
          <source>The following example will import the langinfo() function itself and three constants to be used as arguments to langinfo(): a constant for the abbreviated first day of the week (the numbering starts from Sunday = 1) and two more constants for the affirmative and negative answers for a yes/no question in the current locale.</source>
          <target state="translated">El siguiente ejemplo importará la propia función langinfo()y tres constantes que se utilizarán como argumentos para langinfo():una constante para el primer día abreviado de la semana (la numeración comienza a partir del domingo=1)y dos constantes más para las respuestas afirmativas y negativas para una pregunta de sí/no en la localidad actual.</target>
        </trans-unit>
        <trans-unit id="1d1e35923d66b27df87bbd4951c7d28f5e911d07" translate="yes" xml:space="preserve">
          <source>The following example will start the XS code and will place all functions in a package named RPC.</source>
          <target state="translated">El siguiente ejemplo iniciará el código XS y colocará todas las funciones en un paquete llamado RPC.</target>
        </trans-unit>
        <trans-unit id="dcb1a8c644e732663ae2a1c5ba3b577a1beb1ffa" translate="yes" xml:space="preserve">
          <source>The following examples all demonstrate how &lt;code&gt;reduce&lt;/code&gt; could be used to implement the other list-reduction functions in this module. (They are not in fact implemented like this, but instead in a more efficient manner in individual C functions).</source>
          <target state="translated">Todos los ejemplos siguientes demuestran c&amp;oacute;mo &lt;code&gt;reduce&lt;/code&gt; podr&amp;iacute;a utilizar para implementar las otras funciones de reducci&amp;oacute;n de lista en este m&amp;oacute;dulo. (De hecho, no se implementan as&amp;iacute;, sino de una manera m&amp;aacute;s eficiente en funciones C individuales).</target>
        </trans-unit>
        <trans-unit id="887954cfa884d676e908a97b64a1555b23e32dbf" translate="yes" xml:space="preserve">
          <source>The following examples are equivalent, but if the code is using complex typemaps then the first example is safer.</source>
          <target state="translated">Los siguientes ejemplos son equivalentes,pero si el código utiliza mapas tipográficos complejos,el primer ejemplo es más seguro.</target>
        </trans-unit>
        <trans-unit id="49473e8ccd96036c2dcbbff4100727b567ca00bb" translate="yes" xml:space="preserve">
          <source>The following examples assume</source>
          <target state="translated">Los siguientes ejemplos suponen</target>
        </trans-unit>
        <trans-unit id="c8963d9d7205dc5eeae0e9a51c29c23916de6bfc" translate="yes" xml:space="preserve">
          <source>The following examples don't attempt to show everything as that would be a monumental task, and, frankly, we don't want this manpage to be an internals document for Perl. The examples do demonstrate some basics of the raw Perl datatypes, and should suffice to get most determined people on their way. There are no guidewires or safety nets, nor blazed trails, so be prepared to travel alone from this point and on and, if at all possible, don't fall into the quicksand (it's bad for business).</source>
          <target state="translated">Los siguientes ejemplos no intentan mostrar todo,ya que sería una tarea monumental,y,francamente,no queremos que esta página sea un documento interno para Perl.Los ejemplos demuestran algunos fundamentos de los tipos de datos de Perl en bruto,y deberían bastar para que la mayoría de la gente decidida se ponga en camino.No hay cables guía o redes de seguridad,ni senderos abiertos,así que prepárense para viajar solos desde este punto y,si es posible,no caigan en las arenas movedizas (es malo para el negocio).</target>
        </trans-unit>
        <trans-unit id="6687cc4c1adb4921b8b4b2318949d366c6deb7ae" translate="yes" xml:space="preserve">
          <source>The following examples show standard binary, octal, decimal, and hexadecimal conversion. All examples return 250.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93e6ebc989a84ca950fac6b12d34738b1701d5f" translate="yes" xml:space="preserve">
          <source>The following extension layers are bundled with perl:</source>
          <target state="translated">Las siguientes capas de extensión están agrupadas con perl:</target>
        </trans-unit>
        <trans-unit id="162be8fe3d219b0d9c97c2e524d7220d440e0dd3" translate="yes" xml:space="preserve">
          <source>The following extra flags are added:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7106b07b78b7a3440b3c0ad4f4323e11abe72903" translate="yes" xml:space="preserve">
          <source>The following extra operations are supported on both real and complex numbers:</source>
          <target state="translated">Las siguientes operaciones adicionales se apoyan en números tanto reales como complejos:</target>
        </trans-unit>
        <trans-unit id="44559e75149012ee5d0aabd7169096ab8b9b70c9" translate="yes" xml:space="preserve">
          <source>The following feature bundles are available:</source>
          <target state="translated">Los siguientes paquetes de características están disponibles:</target>
        </trans-unit>
        <trans-unit id="bfb5fd7e91227c5f530d75f35f7920db7fa46141" translate="yes" xml:space="preserve">
          <source>The following file is certain to trigger a few errors at both runtime and compiletime:</source>
          <target state="translated">El siguiente archivo seguramente provocará algunos errores tanto en tiempo de ejecución como en tiempo de compilación:</target>
        </trans-unit>
        <trans-unit id="21aca79b002af6c026c59989c512a774a1e9d423" translate="yes" xml:space="preserve">
          <source>The following files were created.</source>
          <target state="translated">Se crearon los siguientes archivos.</target>
        </trans-unit>
        <trans-unit id="c2d8b9dded738fa01824e3880baab2ed9227058b" translate="yes" xml:space="preserve">
          <source>The following flag constants are recognised as $flags. Other flag constants may exist as provided by the OS.</source>
          <target state="translated">Las siguientes constantes de la bandera se reconocen como banderas de los dólares.Pueden existir otras constantes de bandera según lo dispuesto por el OS.</target>
        </trans-unit>
        <trans-unit id="650acaa8d024a737244b8df389c437c35b54545d" translate="yes" xml:space="preserve">
          <source>The following flag constants are recognised in the $hints hash. Other flag constants may exist as provided by the OS.</source>
          <target state="translated">Las siguientes constantes de la bandera se reconocen en el hash de los $hints.Pueden existir otras constantes de bandera según lo dispuesto por el OS.</target>
        </trans-unit>
        <trans-unit id="8b04fa6f897518e44671c43d372c1d8cbb29d5b0" translate="yes" xml:space="preserve">
          <source>The following flag has been added in the Perl implementation for csh compatibility:</source>
          <target state="translated">Se ha añadido la siguiente bandera en la implementación de Perl para la compatibilidad con el csh:</target>
        </trans-unit>
        <trans-unit id="50651d66e2238c03eee6171d8e3c138d824ff88d" translate="yes" xml:space="preserve">
          <source>The following flags and properties are for JSON::PP only. If you use any of these, you can't make your application run faster by replacing JSON::PP with JSON::XS. If you need these and also speed boost, you might want to try &lt;a href=&quot;Cpanel::JSON::XS&quot;&gt;Cpanel::JSON::XS&lt;/a&gt;, a fork of JSON::XS by Reini Urban, which supports some of these (with a different set of incompatibilities). Most of these historical flags are only kept for backward compatibility, and should not be used in a new application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd8e3861113caf88d2e286d8b55139fd349b7d0" translate="yes" xml:space="preserve">
          <source>The following flags would be nice to have but they would first need their own Augean stablemaster:</source>
          <target state="translated">Estaría bien tener las siguientes banderas,pero primero necesitarían su propio jefe de cuadra de Augusto:</target>
        </trans-unit>
        <trans-unit id="e731ee95c2996f14c508bcbd1c142f7cd0808c33" translate="yes" xml:space="preserve">
          <source>The following four convenience wrappers may be used to obtain one of the two values returned here. If both host and service names are required, this method is preferable to the following wrappers, because it will call &lt;code&gt;getnameinfo(3)&lt;/code&gt; only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9100eb4e02b3634a97be9d3c35013fdbb0474e55" translate="yes" xml:space="preserve">
          <source>The following four files sum up all the details discussed so far.</source>
          <target state="translated">Los siguientes cuatro archivos resumen todos los detalles discutidos hasta ahora.</target>
        </trans-unit>
        <trans-unit id="c34a482a0a61764634c9a647354d1ae932661df4" translate="yes" xml:space="preserve">
          <source>The following function copies a string into an SV whose reference is &lt;code&gt;rv&lt;/code&gt; . Set length to 0 to let Perl calculate the string length. SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="translated">La siguiente funci&amp;oacute;n copia una cadena en un SV cuya referencia es &lt;code&gt;rv&lt;/code&gt; . Establezca la longitud en 0 para permitir que Perl calcule la longitud de la cuerda. SV es bendecido si &lt;code&gt;classname&lt;/code&gt; no es nulo.</target>
        </trans-unit>
        <trans-unit id="d572303a215881dcd48f5b462f35572b6b301a6c" translate="yes" xml:space="preserve">
          <source>The following function copies a string into an SV whose reference is &lt;code&gt;rv&lt;/code&gt;. Set length to 0 to let Perl calculate the string length. SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0cf226e396fa1b152052f0820e83e7d855fd95" translate="yes" xml:space="preserve">
          <source>The following function copies the pointer value (</source>
          <target state="translated">La siguiente función copia el valor del puntero (</target>
        </trans-unit>
        <trans-unit id="2e073fa19276cae1009d363a0e5463744a8cdb65" translate="yes" xml:space="preserve">
          <source>The following function is available on Perls built on 64 bit OpenVMS v8.2 with hard links enabled on an ODS-5 formatted build disk. CRTL support is in principle available as of OpenVMS v7.3-1, and better configuration support could detect this.</source>
          <target state="translated">La siguiente función está disponible en Perls construido en OpenVMS v8.2 de 64 bits con enlaces duros habilitados en un disco de construcción formateado ODS-5.El soporte CRTL está en principio disponible a partir de OpenVMS v7.3-1,y un mejor soporte de configuración podría detectarlo.</target>
        </trans-unit>
        <trans-unit id="1d791c23038d9fe8780d570ab1f25e41c2c30bfa" translate="yes" xml:space="preserve">
          <source>The following function tests whether the SV is a reference to a blessed object.</source>
          <target state="translated">La siguiente función comprueba si el SV es una referencia a un objeto bendecido.</target>
        </trans-unit>
        <trans-unit id="e97d512753d6d3628f54f7cc67945848127ebcd9" translate="yes" xml:space="preserve">
          <source>The following function tests whether the SV is blessed into the specified class. It does not check inheritance relationships.</source>
          <target state="translated">La siguiente función comprueba si el SV está bendecido en la clase especificada.No comprueba las relaciones de herencia.</target>
        </trans-unit>
        <trans-unit id="df3aa6043ddcb399a0be1d9f05fb30512b44c0e8" translate="yes" xml:space="preserve">
          <source>The following function tests whether the SV is derived from the specified class. SV can be either a reference to a blessed object or a string containing a class name. This is the function implementing the &lt;code&gt;UNIVERSAL::isa&lt;/code&gt; functionality.</source>
          <target state="translated">La siguiente funci&amp;oacute;n prueba si el SV se deriva de la clase especificada. SV puede ser una referencia a un objeto bendecido o una cadena que contiene un nombre de clase. Esta es la funci&amp;oacute;n que implementa la funcionalidad &lt;code&gt;UNIVERSAL::isa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2556ab0e8df33f1383226a4c6f98cdd750d952a" translate="yes" xml:space="preserve">
          <source>The following function upgrades rv to reference if not already one. Creates a new SV for rv to point to. If &lt;code&gt;classname&lt;/code&gt; is non-null, the SV is blessed into the specified class. SV is returned.</source>
          <target state="translated">La siguiente funci&amp;oacute;n actualiza rv para hacer referencia si a&amp;uacute;n no lo es. Crea un nuevo SV para que rv apunte. Si &lt;code&gt;classname&lt;/code&gt; no es nulo, el SV se convierte en la clase especificada. Se devuelve SV.</target>
        </trans-unit>
        <trans-unit id="29dc5cc89743cc721a2ee3907403e1585ed5aaa4" translate="yes" xml:space="preserve">
          <source>The following functions</source>
          <target state="translated">Las siguientes funciones</target>
        </trans-unit>
        <trans-unit id="d058fd87c96266d5fdc51527ace77cd0d78cdd43" translate="yes" xml:space="preserve">
          <source>The following functions all perform some useful activity on reference values.</source>
          <target state="translated">Todas las funciones siguientes realizan alguna actividad útil sobre los valores de referencia.</target>
        </trans-unit>
        <trans-unit id="2911d89162772ba03d36f6973e469a4101bb2cc6" translate="yes" xml:space="preserve">
          <source>The following functions are Perl implementations of the mktemp() family of temp file generation system calls.</source>
          <target state="translated">Las siguientes funciones son implementaciones Perl de la familia mktemp()de llamadas al sistema de generación de archivos temporales.</target>
        </trans-unit>
        <trans-unit id="e0a3d6bc866a23a74bfc5cb99a24046225a27424" translate="yes" xml:space="preserve">
          <source>The following functions are available on Perls built on 64 bit OpenVMS v8.2 and later.</source>
          <target state="translated">Las siguientes funciones están disponibles en Perls construido sobre OpenVMS v8.2 de 64 bits y posterior.</target>
        </trans-unit>
        <trans-unit id="c3192aa510cfad4d7ff0a5d49cbe59b87b3bf2ce" translate="yes" xml:space="preserve">
          <source>The following functions are available on Perls built on 64 bit OpenVMS v8.2 and later. CRTL support is in principle available as of OpenVMS v7.3-2, and better configuration support could detect this.</source>
          <target state="translated">Las siguientes funciones están disponibles en Perls construido en OpenVMS v8.2 de 64 bits y posterior.El soporte CRTL está en principio disponible a partir de OpenVMS v7.3-2,y un mejor soporte de configuración podría detectarlo.</target>
        </trans-unit>
        <trans-unit id="9298194e3e006b8fbe7257f536dde080822b8c50" translate="yes" xml:space="preserve">
          <source>The following functions are available on Perls built on VMS 7.2 or greater:</source>
          <target state="translated">Las siguientes funciones están disponibles en Perls construido en el VMS 7.2 o superior:</target>
        </trans-unit>
        <trans-unit id="5c953c5f1b476c550370e7b30065e8a151627682" translate="yes" xml:space="preserve">
          <source>The following functions are available on Perls compiled with Dec C 5.2 or greater and running VMS 7.0 or greater:</source>
          <target state="translated">Las siguientes funciones están disponibles en Perls compilado con Dec C 5.2 o superior y ejecutando VMS 7.0 o superior:</target>
        </trans-unit>
        <trans-unit id="1e205f409e70ccbdada46ad7374f5371cb998862" translate="yes" xml:space="preserve">
          <source>The following functions are available.</source>
          <target state="translated">Las siguientes funciones están disponibles.</target>
        </trans-unit>
        <trans-unit id="5950979e93d5397c31fbc2a28b94b256eeabee34" translate="yes" xml:space="preserve">
          <source>The following functions are currently undocumented. If you use one of them, you may wish to consider creating and submitting documentation for it.</source>
          <target state="translated">Las siguientes funciones están actualmente indocumentadas.Si utiliza una de ellas,tal vez desee considerar la posibilidad de crear y presentar la documentación correspondiente.</target>
        </trans-unit>
        <trans-unit id="886ab3bb8b191680b7816c0256fd741faf8bc7ec" translate="yes" xml:space="preserve">
          <source>The following functions are defined in the &lt;code&gt;utf8::&lt;/code&gt; package by the Perl core. You do not need to say &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; to use these and in fact you should not say that unless you really want to have UTF-8 source code.</source>
          <target state="translated">Las siguientes funciones est&amp;aacute;n definidas en el paquete &lt;code&gt;utf8::&lt;/code&gt; por el n&amp;uacute;cleo de Perl. No necesita decir &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; para usarlos y, de hecho, no debe decir eso a menos que realmente quiera tener el c&amp;oacute;digo fuente UTF-8.</target>
        </trans-unit>
        <trans-unit id="04035437cedd81d97c7436275ce862e9db956a98" translate="yes" xml:space="preserve">
          <source>The following functions are defined in the &lt;code&gt;utf8::&lt;/code&gt; package by the Perl core. You do not need to say &lt;code&gt;use utf8&lt;/code&gt; to use these and in fact you should not say that unless you really want to have UTF-8 source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d924d0242f33a4bd7b878adc5df25af14f3fc818" translate="yes" xml:space="preserve">
          <source>The following functions are exported by &lt;code&gt;Filter::Util::Call&lt;/code&gt; :</source>
          <target state="translated">Las siguientes funciones son exportadas por &lt;code&gt;Filter::Util::Call&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="880d841885ac667bfdecc26d11ccfd01c2ab96a8" translate="yes" xml:space="preserve">
          <source>The following functions are exported by &lt;code&gt;Filter::Util::Call&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab0faf40d4a413b76ab20e1f7c9c1ce5f8e0b08" translate="yes" xml:space="preserve">
          <source>The following functions are exported by default.</source>
          <target state="translated">Las siguientes funciones se exportan por defecto.</target>
        </trans-unit>
        <trans-unit id="f74d5f0be47eadceddfa059884e47684f407a94a" translate="yes" xml:space="preserve">
          <source>The following functions are exported by this module. Please note that these are functions (not methods) and therefore &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; not&lt;/code&gt; take an implicit first argument.</source>
          <target state="translated">Este m&amp;oacute;dulo exporta las siguientes funciones. Tenga en cuenta que estas son funciones (no m&amp;eacute;todos) y, por &lt;code&gt;&lt;a href=&quot;../functions/do&quot;&gt;do&lt;/a&gt; not&lt;/code&gt; tanto , no toman un primer argumento impl&amp;iacute;cito.</target>
        </trans-unit>
        <trans-unit id="ecbe41a265e73d2f25c7e96c76a4a747b067fbd6" translate="yes" xml:space="preserve">
          <source>The following functions are exported by this module: &lt;code&gt;share&lt;/code&gt; , &lt;code&gt;shared_clone&lt;/code&gt; , &lt;code&gt;is_shared&lt;/code&gt; , &lt;code&gt;cond_wait&lt;/code&gt; , &lt;code&gt;cond_timedwait&lt;/code&gt; , &lt;code&gt;cond_signal&lt;/code&gt; and &lt;code&gt;cond_broadcast&lt;/code&gt;</source>
          <target state="translated">Este m&amp;oacute;dulo exporta las siguientes funciones: &lt;code&gt;share&lt;/code&gt; , &lt;code&gt;shared_clone&lt;/code&gt; , &lt;code&gt;is_shared&lt;/code&gt; , &lt;code&gt;cond_wait&lt;/code&gt; , &lt;code&gt;cond_timedwait&lt;/code&gt; , &lt;code&gt;cond_signal&lt;/code&gt; y &lt;code&gt;cond_broadcast&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a286ac22b6e657ba87cab3b6eff4036bd887933" translate="yes" xml:space="preserve">
          <source>The following functions are exported by this module: &lt;code&gt;share&lt;/code&gt;, &lt;code&gt;shared_clone&lt;/code&gt;, &lt;code&gt;is_shared&lt;/code&gt;, &lt;code&gt;cond_wait&lt;/code&gt;, &lt;code&gt;cond_timedwait&lt;/code&gt;, &lt;code&gt;cond_signal&lt;/code&gt; and &lt;code&gt;cond_broadcast&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359dedf5643622ca4347a5ad1835485c0f626223" translate="yes" xml:space="preserve">
          <source>The following functions are exported only by request.</source>
          <target state="translated">Las siguientes funciones se exportan únicamente previa solicitud.</target>
        </trans-unit>
        <trans-unit id="6ff004aea51ff452f5a6a3680250ec66d08e006e" translate="yes" xml:space="preserve">
          <source>The following functions are not considered to be part of the public interface. They are documented here for the benefit of future maintainers of this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb1dbec7cc374a481e866646b73ca4b04e611a0" translate="yes" xml:space="preserve">
          <source>The following functions are now implemented in FastCalc.xs:</source>
          <target state="translated">Las siguientes funciones están ahora implementadas en FastCalc.xs:</target>
        </trans-unit>
        <trans-unit id="685959529a3484efa19ac7a3baaeafce45e37b9a" translate="yes" xml:space="preserve">
          <source>The following functions are provided by the &lt;code&gt;Digest::MD5&lt;/code&gt; module. None of these functions are exported by default.</source>
          <target state="translated">Las siguientes funciones son proporcionadas por el m&amp;oacute;dulo &lt;code&gt;Digest::MD5&lt;/code&gt; . Ninguna de estas funciones se exporta de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="b8a73287c5b8efe7a8f104d252583b6712796202" translate="yes" xml:space="preserve">
          <source>The following functions are provided:</source>
          <target state="translated">Se proporcionan las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="cb80d66061f0196a6ca192d5341a430ee1b0eb26" translate="yes" xml:space="preserve">
          <source>The following functions are supported:</source>
          <target state="translated">Se admiten las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="89bf61ba64cc618bf2874d4293a3aae6452f1aba" translate="yes" xml:space="preserve">
          <source>The following functions can be imported from this module. No functions are exported by default.</source>
          <target state="translated">Las siguientes funciones pueden ser importadas desde este módulo.No se exporta ninguna función por defecto.</target>
        </trans-unit>
        <trans-unit id="76627ad7f894d0c3e9a81281fe41fe4c1c985047" translate="yes" xml:space="preserve">
          <source>The following functions check whether the string is in that normalization form.</source>
          <target state="translated">Las siguientes funciones comprueban si la cadena está en esa forma de normalización.</target>
        </trans-unit>
        <trans-unit id="a27da5eeba1599f572e14a8c9329aa08b0e2cd4f" translate="yes" xml:space="preserve">
          <source>The following functions convert between lists of Perl values and packed binary strings representing structures.</source>
          <target state="translated">Las siguientes funciones convierten entre listas de valores de Perl y cadenas binarias empaquetadas que representan estructuras.</target>
        </trans-unit>
        <trans-unit id="2ccfd58b6052a416773b606e17f327b9dd3cd108" translate="yes" xml:space="preserve">
          <source>The following functions have been flagged as part of the public API, but are currently undocumented. Use them at your own risk, as the interfaces are subject to change. Functions that are not listed in this document are not intended for public use, and should NOT be used under any circumstances.</source>
          <target state="translated">Las siguientes funciones han sido marcadas como parte de la API pública,pero actualmente no están documentadas.Úselas bajo su propio riesgo,ya que las interfaces están sujetas a cambios.Las funciones que no están enumeradas en este documento no están destinadas al uso público,y NO deben utilizarse bajo ninguna circunstancia.</target>
        </trans-unit>
        <trans-unit id="824636764a16367a90dfdeffbf74adccac69c5cb" translate="yes" xml:space="preserve">
          <source>The following functions in the &lt;code&gt;POSIX&lt;/code&gt; module are no longer available: &lt;code&gt;isalnum&lt;/code&gt;, &lt;code&gt;isalpha&lt;/code&gt;, &lt;code&gt;iscntrl&lt;/code&gt;, &lt;code&gt;isdigit&lt;/code&gt;, &lt;code&gt;isgraph&lt;/code&gt;, &lt;code&gt;islower&lt;/code&gt;, &lt;code&gt;isprint&lt;/code&gt;, &lt;code&gt;ispunct&lt;/code&gt;, &lt;code&gt;isspace&lt;/code&gt;, &lt;code&gt;isupper&lt;/code&gt;, and &lt;code&gt;isxdigit&lt;/code&gt;. The functions are buggy and don't work on UTF-8 encoded strings. See their entries in &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f79fe7f0a766eea8a6363560d09b1b418f37a54" translate="yes" xml:space="preserve">
          <source>The following functions may or may not be implemented, depending on what type of socket support you've built into your copy of Perl:</source>
          <target state="translated">Las siguientes funciones pueden o no ser implementadas,dependiendo del tipo de soporte de sockets que haya incorporado en su copia de Perl:</target>
        </trans-unit>
        <trans-unit id="2d8b2c9f184b69863b362bc365b152ff7d6a2cc5" translate="yes" xml:space="preserve">
          <source>The following functions use &lt;code&gt;$_&lt;/code&gt; as a default argument:</source>
          <target state="translated">Las siguientes funciones usan &lt;code&gt;$_&lt;/code&gt; como argumento predeterminado:</target>
        </trans-unit>
        <trans-unit id="0dd434c67978a923f9ec0ee28d2a5538ba5682f6" translate="yes" xml:space="preserve">
          <source>The following functions were not implemented in the VMS port, and calling them produces a fatal error (usually) or undefined behavior (rarely, we hope):</source>
          <target state="translated">Las siguientes funciones no se implementaron en el puerto VMS,y llamarlas produce un error fatal (normalmente)o un comportamiento indefinido (raramente,esperamos):</target>
        </trans-unit>
        <trans-unit id="cdfa439e416672c343b7c0368293d837f0c0576b" translate="yes" xml:space="preserve">
          <source>The following functions would all be inlined:</source>
          <target state="translated">Las siguientes funciones estarían todas alineadas:</target>
        </trans-unit>
        <trans-unit id="f04cb90467492e19af66e5b899cfc303ddef4110" translate="yes" xml:space="preserve">
          <source>The following global variables are associated with arenas:</source>
          <target state="translated">Las siguientes variables globales están asociadas a las arenas:</target>
        </trans-unit>
        <trans-unit id="0d3412aee89bad6343f641caa3a5d4996443527e" translate="yes" xml:space="preserve">
          <source>The following illustrates use of the Benchmark object:</source>
          <target state="translated">A continuación se ilustra el uso del objeto Benchmark:</target>
        </trans-unit>
        <trans-unit id="21c5c52868e5d5448c65efac8d8979602bb9419b" translate="yes" xml:space="preserve">
          <source>The following information applies to gcc version 2. Volunteers to update it as appropriately for gcc version 3 would be appreciated.</source>
          <target state="translated">La siguiente información se aplica a la versión 2 del GCC.Se agradecería que los voluntarios lo actualizaran como corresponde para la versión 3 del GCC.</target>
        </trans-unit>
        <trans-unit id="62ec6b5e797715143c688dee03c54b63962fd46a" translate="yes" xml:space="preserve">
          <source>The following interfaces are provided for compatibility with existing APIs. They should not be used in new code.</source>
          <target state="translated">Se proporcionan las siguientes interfaces para la compatibilidad con las API existentes.No deben utilizarse en el nuevo código.</target>
        </trans-unit>
        <trans-unit id="0bdb13054ff9ef26849b463627b5915db32807ca" translate="yes" xml:space="preserve">
          <source>The following is a long section of miscellaneous requirements and suggestions to do with Pod processing.</source>
          <target state="translated">Lo que sigue es una larga sección de requerimientos y sugerencias varias relacionadas con el procesamiento de Pod.</target>
        </trans-unit>
        <trans-unit id="9eebaea88bec8281bdda401db84ecb8529c5edbd" translate="yes" xml:space="preserve">
          <source>The following is an example of a typemap that could be used for this C++ example.</source>
          <target state="translated">A continuación se presenta un ejemplo de un mapa tipográfico que podría utilizarse para este ejemplo de C++.</target>
        </trans-unit>
        <trans-unit id="a14c2ddd24e4bc7ed4b474606997260d2d723a26" translate="yes" xml:space="preserve">
          <source>The following is the old c2ph.doc documentation by Tom Christiansen &amp;lt;tchrist@perl.com&amp;gt; Date: 25 Jul 91 08:10:21 GMT</source>
          <target state="translated">La siguiente es la antigua documentaci&amp;oacute;n c2ph.doc de Tom Christiansen &amp;lt;tchrist@perl.com&amp;gt; Fecha: 25 de julio de 91 08:10:21 GMT</target>
        </trans-unit>
        <trans-unit id="838c8cc6acec4e734454e6016dba1f13113970de" translate="yes" xml:space="preserve">
          <source>The following is used to &lt;a href=&quot;deprecate&quot;&gt;deprecate&lt;/a&gt; core modules beyond a certain version of Perl:</source>
          <target state="translated">Lo siguiente se utiliza para &lt;a href=&quot;deprecate&quot;&gt;desaprobar&lt;/a&gt; los m&amp;oacute;dulos principales m&amp;aacute;s all&amp;aacute; de una determinada versi&amp;oacute;n de Perl:</target>
        </trans-unit>
        <trans-unit id="0c3fbe199ab2c0c87ca2506f58ce4cc1ff1336a3" translate="yes" xml:space="preserve">
          <source>The following keys allowed for callbacks. These keys are case-sensitive.</source>
          <target state="translated">Las siguientes claves permitieron las devoluciones de llamada.Estas teclas distinguen entre mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="ace2dc9ae3a6b314c56205001ea3e99826b29341" translate="yes" xml:space="preserve">
          <source>The following keys are optional.</source>
          <target state="translated">Las siguientes teclas son opcionales.</target>
        </trans-unit>
        <trans-unit id="87593abf1938664ef0461a9fc202ad24f5f827db" translate="yes" xml:space="preserve">
          <source>The following keys are recognised in the option hash:</source>
          <target state="translated">Las siguientes claves se reconocen en el hash de la opción:</target>
        </trans-unit>
        <trans-unit id="938c23249f0abe69d61c5caeb8c241a3b1c97b48" translate="yes" xml:space="preserve">
          <source>The following keys are valid, but only &lt;code&gt;version&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e29171b7f3395c93aba1c43b176e6a5f79f9da1" translate="yes" xml:space="preserve">
          <source>The following keys in the hash reference $CPAN::Config are currently defined:</source>
          <target state="translated">Las siguientes claves en el hash de referencia $CPAN::Config están actualmente definidas:</target>
        </trans-unit>
        <trans-unit id="8faa1306b5e277a45ec730d9a598e8adafe08efc" translate="yes" xml:space="preserve">
          <source>The following layers are currently defined:</source>
          <target state="translated">Las siguientes capas están actualmente definidas:</target>
        </trans-unit>
        <trans-unit id="d62e448414706bf58b56c68adcd155be3caa2f9f" translate="yes" xml:space="preserve">
          <source>The following license strings are also valid and indicate other licensing not described above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8819c5fc895570a060c0cc0274e5435ca8214190" translate="yes" xml:space="preserve">
          <source>The following line is taken from the testsuite for &lt;a href=&quot;http://search.cpan.org/perldoc/File::Map&quot;&gt;File::Map&lt;/a&gt;:</source>
          <target state="translated">La siguiente l&amp;iacute;nea se tom&amp;oacute; del conjunto de pruebas para &lt;a href=&quot;http://search.cpan.org/perldoc/File::Map&quot;&gt;File :: Map&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b26a944c006c4ed66106c7db11bb76fd456329ff" translate="yes" xml:space="preserve">
          <source>The following lines are equivalent:</source>
          <target state="translated">Las siguientes líneas son equivalentes:</target>
        </trans-unit>
        <trans-unit id="f188bcdc507d79e65b8c87878e9261e514ba50b4" translate="yes" xml:space="preserve">
          <source>The following list of Unicode supported features for regular expressions describes all features currently directly supported by core Perl. The references to &quot;Level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27fa1a573ac1c2bd0bdaed0b154f8a047e4a778" translate="yes" xml:space="preserve">
          <source>The following list of Unicode supported features for regular expressions describes all features currently directly supported by core Perl. The references to &quot;Level N&quot; and the section numbers refer to the Unicode Technical Standard #18, &quot;Unicode Regular Expressions&quot;, version 13, from August 2008.</source>
          <target state="translated">La siguiente lista de características compatibles con Unicode para las expresiones regulares describe todas las características que actualmente están directamente soportadas por el núcleo de Perl.Las referencias al &quot;Nivel N&quot; y los números de sección se refieren a la Norma Técnica 18 de Unicode,&quot;Expresiones regulares de Unicode&quot;,versión 13,de agosto de 2008.</target>
        </trans-unit>
        <trans-unit id="fd9860b919a8b832481067980e3c3a381ec06f0c" translate="yes" xml:space="preserve">
          <source>The following list of license strings are valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d2ac78ac8de1d9653897258388c5a4d402853b" translate="yes" xml:space="preserve">
          <source>The following macros must always be used to access the contents of hash entries. Note that the arguments to these macros must be simple variables, since they may get evaluated more than once. See &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for detailed descriptions of these macros.</source>
          <target state="translated">Las siguientes macros siempre deben usarse para acceder al contenido de las entradas hash. Tenga en cuenta que los argumentos de estas macros deben ser variables simples, ya que pueden evaluarse m&amp;aacute;s de una vez. Consulte &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; para obtener descripciones detalladas de estas macros.</target>
        </trans-unit>
        <trans-unit id="54cabd1569f977ca3a4b00bfe48c1954ef75d0d2" translate="yes" xml:space="preserve">
          <source>The following methods all return a boolean value and are to be overridden in the appropriate subclass.</source>
          <target state="translated">Los siguientes métodos devuelven un valor booleano y deben ser anulados en la subclase apropiada.</target>
        </trans-unit>
        <trans-unit id="2e28c1a68a0ac1abaa1b238b7c5b433afa448fce" translate="yes" xml:space="preserve">
          <source>The following methods are available for all &lt;code&gt;Digest::&lt;/code&gt; modules:</source>
          <target state="translated">Los siguientes m&amp;eacute;todos est&amp;aacute;n disponibles para todos los m&amp;oacute;dulos &lt;code&gt;Digest::&lt;/code&gt; :::</target>
        </trans-unit>
        <trans-unit id="5d1a84015cfed0b396f9aadd71cc3704958e67dc" translate="yes" xml:space="preserve">
          <source>The following methods are available:</source>
          <target state="translated">Se dispone de los siguientes métodos:</target>
        </trans-unit>
        <trans-unit id="9ab4dd7b2f4575f0fcc3274141eab6c5a7ca9278" translate="yes" xml:space="preserve">
          <source>The following methods are mandatory: _new(), _str(), _add(), and _sub(). However, computations will be very slow without _mul() and _div().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6f41c232d0f405651a2979e1a726ffd3fbd1cf" translate="yes" xml:space="preserve">
          <source>The following methods are not supported on a per-filehandle basis.</source>
          <target state="translated">Los siguientes métodos no están respaldados por el mango de un archivo.</target>
        </trans-unit>
        <trans-unit id="e3dd1f8a67cafbd7d4b11fa3ef01a32bc5c44916" translate="yes" xml:space="preserve">
          <source>The following methods are ones you may wish to override if you want to subclass &lt;code&gt;TAP::Harness&lt;/code&gt; .</source>
          <target state="translated">Los siguientes m&amp;eacute;todos son los que quiz&amp;aacute;s desee anular si desea subclase &lt;code&gt;TAP::Harness&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e9f03dd5d9f58ae4081f60a8239d90f2810d056" translate="yes" xml:space="preserve">
          <source>The following methods are ones you may wish to override if you want to subclass &lt;code&gt;TAP::Harness&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679901c8aebeb73a7fa904b450ae5e241ed9cb03" translate="yes" xml:space="preserve">
          <source>The following methods are optional, and can be defined if the underlying lib has a fast way to do them. If undefined, Math::BigInt will use pure Perl (hence slow) fallback routines to emulate these:</source>
          <target state="translated">Los siguientes métodos son opcionales,y pueden definirse si la liberación subyacente tiene una forma rápida de hacerlos.Si no se define,Math::BigInt usará rutinas de retroceso de Perl puro (por lo tanto lento)para emularlas:</target>
        </trans-unit>
        <trans-unit id="d8157ae492dfb9da4aae902df688ee7d5be628f8" translate="yes" xml:space="preserve">
          <source>The following methods are provided in this module. Each one takes a reference to the object itself as an implicit first parameter.</source>
          <target state="translated">En este módulo se proporcionan los siguientes métodos.Cada uno toma una referencia al objeto mismo como primer parámetro implícito.</target>
        </trans-unit>
        <trans-unit id="bde2e5da8041f121dd086d0f1594d72494846e0b" translate="yes" xml:space="preserve">
          <source>The following methods are provided:</source>
          <target state="translated">Se proporcionan los siguientes métodos:</target>
        </trans-unit>
        <trans-unit id="61fea790abe3137c314afb22029bb574c87067fd" translate="yes" xml:space="preserve">
          <source>The following methods are required for an API version of 2 or greater.</source>
          <target state="translated">Los siguientes métodos son necesarios para una versión de la API de 2 o más.</target>
        </trans-unit>
        <trans-unit id="ec06d96f64f88685f2a77a047bae0d4b9b41fde8" translate="yes" xml:space="preserve">
          <source>The following methods are wrappers for the directory related functions built into perl (the trailing 'dir' has been removed from the names). See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for details of these functions.</source>
          <target state="translated">Los siguientes m&amp;eacute;todos son envoltorios para las funciones relacionadas con el directorio integradas en perl (el 'dir' final se ha eliminado de los nombres). Consulte &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; para obtener detalles de estas funciones.</target>
        </trans-unit>
        <trans-unit id="ded7f0c3574ed832e686f908708c74d7bfabfc4b" translate="yes" xml:space="preserve">
          <source>The following methods are wrappers for the directory related functions built into perl (the trailing 'dir' has been removed from the names). See &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for details of these functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570150b9609694e95e958423d380ac3c5369cdc3" translate="yes" xml:space="preserve">
          <source>The following methods can be used to manipulate items anywhere in a queue.</source>
          <target state="translated">Los siguientes métodos pueden utilizarse para manipular artículos en cualquier lugar de una cola.</target>
        </trans-unit>
        <trans-unit id="1cff87e9e5dce6950df4739edc1576de748d33e5" translate="yes" xml:space="preserve">
          <source>The following methods can be used to transfer files between two remote servers, providing that these two servers can connect directly to each other.</source>
          <target state="translated">Los siguientes métodos pueden utilizarse para transferir archivos entre dos servidores remotos,siempre que estos dos servidores puedan conectarse directamente entre sí.</target>
        </trans-unit>
        <trans-unit id="d8f54c9acd776fdfe4ac513355a1096a098e49e7" translate="yes" xml:space="preserve">
          <source>The following methods can return different results depending on how they are called. If the user explicitly calls either of the &lt;code&gt;pasv&lt;/code&gt; or &lt;code&gt;port&lt;/code&gt; methods then these methods will return a</source>
          <target state="translated">Los siguientes m&amp;eacute;todos pueden devolver resultados diferentes seg&amp;uacute;n c&amp;oacute;mo se llamen. Si el usuario llama expl&amp;iacute;citamente a cualquiera de los m&amp;eacute;todos &lt;code&gt;pasv&lt;/code&gt; o &lt;code&gt;port&lt;/code&gt; , estos m&amp;eacute;todos devolver&amp;aacute;n un</target>
        </trans-unit>
        <trans-unit id="48671c770c71c327c8f21494ae7c58eef76a7413" translate="yes" xml:space="preserve">
          <source>The following methods can then be used on the compartment object returned by the above constructor. The object argument is implicit in each case.</source>
          <target state="translated">Los siguientes métodos pueden utilizarse en el objeto del compartimento devuelto por el constructor anterior.El argumento del objeto está implícito en cada caso.</target>
        </trans-unit>
        <trans-unit id="a9334f5feea4574b7400347c313e7ae3bde9f0a9" translate="yes" xml:space="preserve">
          <source>The following methods deal with queues on a FIFO basis.</source>
          <target state="translated">Los siguientes métodos se ocupan de las colas sobre una base FIFO.</target>
        </trans-unit>
        <trans-unit id="1107701eeb6d8dce0fd7fc1f42599acf6178ec38" translate="yes" xml:space="preserve">
          <source>The following methods implement this incremental parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7cc6ee31a4cea12821df3d9ff6b6e073be7714" translate="yes" xml:space="preserve">
          <source>The following methods must be defined in order to support the use by Math::BigInt v1.70 or later.</source>
          <target state="translated">Los siguientes métodos deben ser definidos para apoyar el uso de las Matemáticas::BigInt v1.70 o posterior.</target>
        </trans-unit>
        <trans-unit id="280d5e97299a977b6fb2506b08e4d295925aa675" translate="yes" xml:space="preserve">
          <source>The following methods return a single value, which is the value for the corresponding entry in the distmeta structure. Values should be either undef or strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47bdf0bfe9cf16bdf842c1c20e389188ee7a3a8" translate="yes" xml:space="preserve">
          <source>The following methods upgrade themselves unconditionally; that is if upgrade is in effect, they always hands up their work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f23966e0bc23b8a5a278ce7e5e420b3556e28b8" translate="yes" xml:space="preserve">
          <source>The following methods upgrade themselves unconditionally; that is if upgrade is in effect, they will always hand up their work:</source>
          <target state="translated">Los siguientes métodos se actualizan a sí mismos incondicionalmente;es decir,si la actualización está en vigor,siempre entregarán su trabajo:</target>
        </trans-unit>
        <trans-unit id="4d85840c9544f4d1a9475cb2562273ab62746e95" translate="yes" xml:space="preserve">
          <source>The following methods, while usable from anywhere, are primarily intended for developers wishing to subclass &lt;code&gt;autodie::exception&lt;/code&gt;, write code that registers custom error messages, or otherwise work closely with the &lt;code&gt;autodie::exception&lt;/code&gt; model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314022e0b634f0a33992a5bea72595f23a273937" translate="yes" xml:space="preserve">
          <source>The following modules are currently used by bigint:</source>
          <target state="translated">Los siguientes módulos son utilizados actualmente por bigint:</target>
        </trans-unit>
        <trans-unit id="086b35f723ebe590f75a1aea7b6b1150783292e6" translate="yes" xml:space="preserve">
          <source>The following modules are currently used by bignum:</source>
          <target state="translated">Los siguientes módulos son utilizados actualmente por bignum:</target>
        </trans-unit>
        <trans-unit id="d93609e5247b12617e4dd3f00cb7708916287a29" translate="yes" xml:space="preserve">
          <source>The following names have special meaning to Perl. Most punctuation names have reasonable mnemonics, or analogs in the shells. Nevertheless, if you wish to use long variable names, you need only say:</source>
          <target state="translated">Los siguientes nombres tienen un significado especial para Perl.La mayoría de los nombres de puntuación tienen mnemotécnicos razonables,o análogos en las conchas.Sin embargo,si desea utilizar nombres largos de variables,sólo tiene que decirlo:</target>
        </trans-unit>
        <trans-unit id="8937b6a268204b01bd09b0791adaf0dc939c65b5" translate="yes" xml:space="preserve">
          <source>The following options affect what happens with &lt;code&gt;V&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , and &lt;code&gt;x&lt;/code&gt; commands:</source>
          <target state="translated">Las siguientes opciones afectan lo que sucede con los comandos &lt;code&gt;V&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; y &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4a331658e3e1d7b8de900a2e68b72b832b1d4100" translate="yes" xml:space="preserve">
          <source>The following options affect what happens with &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, and &lt;code&gt;x&lt;/code&gt; commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ad7915cdbf5aabf9ec8f4e6f650717a3e51ad5" translate="yes" xml:space="preserve">
          <source>The following options are available:</source>
          <target state="translated">Se dispone de las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="5530497eb21d4e6a6dcc738d7ea1b33bd3ad244e" translate="yes" xml:space="preserve">
          <source>The following options are pairwise exclusive.</source>
          <target state="translated">Las siguientes opciones son exclusivas por parejas.</target>
        </trans-unit>
        <trans-unit id="82fa31556e7811972756a886a4cfa29a126dcd22" translate="yes" xml:space="preserve">
          <source>The following options are passed through to the underlying text formatter. See the manual pages of these modules for more information.</source>
          <target state="translated">Las siguientes opciones se pasan al formato de texto subyacente.Consulte las páginas del manual de estos módulos para obtener más información.</target>
        </trans-unit>
        <trans-unit id="407cb3c611809d0d6a4a0229085dace99fab8aca" translate="yes" xml:space="preserve">
          <source>The following options are supported: center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, quotes, release, section</source>
          <target state="translated">Se admiten las siguientes opciones:centro,fecha,fijo,fixedbold,fixeditalic,fixedbolditalic,citas,liberación,sección</target>
        </trans-unit>
        <trans-unit id="7fa87a7b90e6843371b98a42bf443c041138aacf" translate="yes" xml:space="preserve">
          <source>The following pattern matches a function &lt;code&gt;foo()&lt;/code&gt; which may contain balanced parentheses as the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9719c919f328c184200e9a901169faf3fe1692f" translate="yes" xml:space="preserve">
          <source>The following pattern matches a function foo() which may contain balanced parentheses as the argument.</source>
          <target state="translated">El siguiente patrón coincide con una función foo()que puede contener paréntesis equilibrados como argumento.</target>
        </trans-unit>
        <trans-unit id="88eac117835fd0d5e8fe0a92e17ee881d0f51bb6" translate="yes" xml:space="preserve">
          <source>The following pattern matches a parenthesized group:</source>
          <target state="translated">El siguiente patrón coincide con un grupo entre paréntesis:</target>
        </trans-unit>
        <trans-unit id="22ee5be8d1198dc109b222871c61596812e4d6af" translate="yes" xml:space="preserve">
          <source>The following people have all contributed to this document in some way, even if only for review.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9261bf4cae54928a9960941cd2e6c763bb03b07b" translate="yes" xml:space="preserve">
          <source>The following platforms are known to build Perl 5.12 (as of April 2010, its release date) from the standard source code distribution available at &lt;a href=&quot;http://www.cpan.org/src&quot;&gt;http://www.cpan.org/src&lt;/a&gt;</source>
          <target state="translated">Se sabe que las siguientes plataformas compilan Perl 5.12 (a partir de abril de 2010, su fecha de lanzamiento) a partir de la distribuci&amp;oacute;n de c&amp;oacute;digo fuente est&amp;aacute;ndar disponible en &lt;a href=&quot;http://www.cpan.org/src&quot;&gt;http://www.cpan.org/src&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6907367840204c62b96dad2c2b4daa026466da81" translate="yes" xml:space="preserve">
          <source>The following platforms have been known to build Perl from source in the past (5.005_03 and earlier), but we haven't been able to verify their status for the current release, either because the hardware/software platforms are rare or because we don't have an active champion on these platforms--or both. They used to work, though, so go ahead and try compiling them, and let &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt; know of any trouble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3340ff1c2b446edebeb559ea5dd147cf80639131" translate="yes" xml:space="preserve">
          <source>The following platforms have been known to build Perl from source in the past (5.005_03 and earlier), but we haven't been able to verify their status for the current release, either because the hardware/software platforms are rare or because we don't have an active champion on these platforms--or both. They used to work, though, so go ahead and try compiling them, and let perlbug@perl.org of any trouble.</source>
          <target state="translated">Se sabe que las siguientes plataformas han construido Perl desde su origen en el pasado (5.005_03 y anteriores),pero no hemos podido verificar su estado para la versión actual,ya sea porque las plataformas de hardware/software son raras o porque no tenemos un campeón activo en estas plataformas-o ambas.Sin embargo,solían funcionar,así que adelante e intenta compilarlas,y deja a perlbug@perl.org sin problemas.</target>
        </trans-unit>
        <trans-unit id="8c95fcd90364c113c8743d95c16878f685bbdec9" translate="yes" xml:space="preserve">
          <source>The following platforms have only binaries available via &lt;a href=&quot;http://www.cpan.org/ports/index.html&quot;&gt;http://www.cpan.org/ports/index.html&lt;/a&gt; :</source>
          <target state="translated">Las siguientes plataformas solo tienen binarios disponibles a trav&amp;eacute;s de &lt;a href=&quot;http://www.cpan.org/ports/index.html&quot;&gt;http://www.cpan.org/ports/index.html&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="17f6cd1b99f9d8c8f96a2484ba6123182c8c7ea5" translate="yes" xml:space="preserve">
          <source>The following platforms have their own source code distributions and binaries available via &lt;a href=&quot;http://www.cpan.org/ports/&quot;&gt;http://www.cpan.org/ports/&lt;/a&gt;</source>
          <target state="translated">Las siguientes plataformas tienen sus propias distribuciones de c&amp;oacute;digo fuente y binarios disponibles a trav&amp;eacute;s de &lt;a href=&quot;http://www.cpan.org/ports/&quot;&gt;http://www.cpan.org/ports/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba4505bcfd3048861117fe3f1683581b473bc260" translate="yes" xml:space="preserve">
          <source>The following platforms were supported by a previous version of Perl but have been officially removed from Perl's source code as of 5.12:</source>
          <target state="translated">Las siguientes plataformas eran compatibles con una versión anterior de Perl,pero se han eliminado oficialmente del código fuente de Perl a partir del 5.12:</target>
        </trans-unit>
        <trans-unit id="231bce91c0774cb9ac67f2e9bf6e077f99a9edec" translate="yes" xml:space="preserve">
          <source>The following platforms were supported by a previous version of Perl but have been officially removed from Perl's source code as of 5.20:</source>
          <target state="translated">Las siguientes plataformas eran compatibles con una versión anterior de Perl,pero se han eliminado oficialmente del código fuente de Perl a partir de la versión 5.20:</target>
        </trans-unit>
        <trans-unit id="ce7175eecbb5cf889a2f2cc3f026e2da7a9136e7" translate="yes" xml:space="preserve">
          <source>The following platforms were supported up to 5.10. They may still have worked in 5.12, but supporting code has been removed for 5.14:</source>
          <target state="translated">Las siguientes plataformas fueron soportadas hasta el 5.10.Pueden haber funcionado aún en 5.12,pero el código de soporte ha sido eliminado para 5.14:</target>
        </trans-unit>
        <trans-unit id="446fc2176911919a5044a357259301549c936213" translate="yes" xml:space="preserve">
          <source>The following platforms worked with the previous releases (5.6 and 5.7), but we did not manage either to fix or to test these in time for the 5.8.0 release. There is a very good chance that many of these will work fine with the 5.8.0.</source>
          <target state="translated">Las siguientes plataformas funcionaron con las versiones anteriores (5.6 y 5.7),pero no conseguimos arreglarlas ni probarlas a tiempo para la versión 5.8.0.Hay una gran posibilidad de que muchas de ellas funcionen bien con la 5.8.0.</target>
        </trans-unit>
        <trans-unit id="637d6920710e051f990eceb2af393917b297b61a" translate="yes" xml:space="preserve">
          <source>The following pragmas are defined (and have their own documentation).</source>
          <target state="translated">Los siguientes pragmas están definidos (y tienen su propia documentación).</target>
        </trans-unit>
        <trans-unit id="3e891a8176dfddab918a655b139307ab8b66b513" translate="yes" xml:space="preserve">
          <source>The following primary functions are provided:</source>
          <target state="translated">Las funciones principales son las siguientes:</target>
        </trans-unit>
        <trans-unit id="dcbd438c6b1158dced15757e5785975c49cf130b" translate="yes" xml:space="preserve">
          <source>The following probably doesn't do what you expect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf69375b2075818b8dae7a187b7c74a5295e91b" translate="yes" xml:space="preserve">
          <source>The following problems are encountered with Haiku revision 28311:</source>
          <target state="translated">Los siguientes problemas se encuentran en la revisión 28311 de Haiku:</target>
        </trans-unit>
        <trans-unit id="d89ada30f3c9b0885c9f6f1b4c7448cd518fcaa4" translate="yes" xml:space="preserve">
          <source>The following returns the &lt;b&gt;names&lt;/b&gt; of the PerlIO layers on a filehandle.</source>
          <target state="translated">Lo siguiente devuelve los &lt;b&gt;nombres&lt;/b&gt; de las capas de PerlIO en un identificador de archivo.</target>
        </trans-unit>
        <trans-unit id="1bc9e3e129e691ac04ecb6526cec5a595482fff6" translate="yes" xml:space="preserve">
          <source>The following revisions are supported. The default is 30.</source>
          <target state="translated">Se apoyan las siguientes revisiones.El valor por defecto es 30.</target>
        </trans-unit>
        <trans-unit id="4a818dfcd5c08f13e17285de1b0c0c9fdcdbac96" translate="yes" xml:space="preserve">
          <source>The following revisions are supported. The default is 36.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c446e9a76c2a849f3d9283f94a02c3c2d25e461d" translate="yes" xml:space="preserve">
          <source>The following routines will be exported into your namespace if you specifically ask that they be imported:</source>
          <target state="translated">Las siguientes rutinas se exportarán a su espacio de nombres si usted pide específicamente que se importen:</target>
        </trans-unit>
        <trans-unit id="019be2c4bd05e066f928aafadb59663b3afde865" translate="yes" xml:space="preserve">
          <source>The following routines will be exported into your namespace if you use the Benchmark module:</source>
          <target state="translated">Las siguientes rutinas se exportarán a su espacio de nombres si utiliza el módulo Benchmark:</target>
        </trans-unit>
        <trans-unit id="de855448328b5e9f80cc8ce9168a701f985757d7" translate="yes" xml:space="preserve">
          <source>The following rules apply:</source>
          <target state="translated">Se aplican las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="c3f236092c86ae50065ffb55ca5283dcb8508783" translate="yes" xml:space="preserve">
          <source>The following rules are available:</source>
          <target state="translated">Las siguientes reglas están disponibles:</target>
        </trans-unit>
        <trans-unit id="a8f5fc7c9bec47fa12d0874b935f8fd0b4ed0730" translate="yes" xml:space="preserve">
          <source>The following sample implementation of &lt;code&gt;minus()&lt;/code&gt; (which assumes that &lt;code&gt;Number&lt;/code&gt; objects are simply blessed references to scalars) illustrates the calling conventions:</source>
          <target state="translated">La siguiente implementaci&amp;oacute;n de muestra de &lt;code&gt;minus()&lt;/code&gt; (que asume que los objetos &lt;code&gt;Number&lt;/code&gt; son simplemente referencias bendecidas a escalares) ilustra las convenciones de llamada:</target>
        </trans-unit>
        <trans-unit id="67999be44740f8addea9fce4caf76726233a8acf" translate="yes" xml:space="preserve">
          <source>The following sequences (except &lt;code&gt;\N&lt;/code&gt; ) work within or without a character class. The first six are locale aware, all are Unicode aware. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for details.</source>
          <target state="translated">Las siguientes secuencias (excepto &lt;code&gt;\N&lt;/code&gt; ) funcionan dentro o sin una clase de car&amp;aacute;cter. Los primeros seis son compatibles con la configuraci&amp;oacute;n regional, todos son compatibles con Unicode. Consulte &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; y &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4d35a09553da6f576d42c5fa2490f9e35aa7f113" translate="yes" xml:space="preserve">
          <source>The following sequences (except &lt;code&gt;\N&lt;/code&gt;) work within or without a character class. The first six are locale aware, all are Unicode aware. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9540b293755f2d5620dc9acad2cd13cee9e2ef96" translate="yes" xml:space="preserve">
          <source>The following set of functions all apply a given block of code to a list of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6520d28097d378d9470274294d01c67b34c1c70f" translate="yes" xml:space="preserve">
          <source>The following set of functions all reduce a list down to a single value.</source>
          <target state="translated">El siguiente conjunto de funciones reduce una lista a un solo valor.</target>
        </trans-unit>
        <trans-unit id="adf371bb48a28981de1ae9bebf30e1218065293c" translate="yes" xml:space="preserve">
          <source>The following set of functions, all inspired by &lt;a href=&quot;List::Pairwise&quot;&gt;List::Pairwise&lt;/a&gt;, consume an even-sized list of pairs. The pairs may be key/value associations from a hash, or just a list of values. The functions will all preserve the original ordering of the pairs, and will not be confused by multiple pairs having the same &quot;key&quot; value - nor even do they require that the first of each pair be a plain string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f700e59048089f2fca9626afc48c135af0fec0" translate="yes" xml:space="preserve">
          <source>The following set of functions, all inspired by &lt;a href=&quot;http://search.cpan.org/perldoc/List::Pairwise&quot;&gt;List::Pairwise&lt;/a&gt;, consume an even-sized list of pairs. The pairs may be key/value associations from a hash, or just a list of values. The functions will all preserve the original ordering of the pairs, and will not be confused by multiple pairs having the same &quot;key&quot; value - nor even do they require that the first of each pair be a plain string.</source>
          <target state="translated">El siguiente conjunto de funciones, todas inspiradas en &lt;a href=&quot;http://search.cpan.org/perldoc/List::Pairwise&quot;&gt;List :: Pairwise&lt;/a&gt; , consume una lista de pares de tama&amp;ntilde;o uniforme. Los pares pueden ser asociaciones clave / valor de un hash o simplemente una lista de valores. Todas las funciones conservar&amp;aacute;n el orden original de los pares y no ser&amp;aacute;n confundidas por m&amp;uacute;ltiples pares que tengan el mismo valor de &quot;clave&quot;, ni siquiera requieren que el primero de cada par sea una cadena simple.</target>
        </trans-unit>
        <trans-unit id="bf58c9289e75f1b85afc527d37ec88624aafe8e0" translate="yes" xml:space="preserve">
          <source>The following setting are currently preserved: history, breakpoints, actions, debugger options, and the Perl command-line options &lt;b&gt;-w&lt;/b&gt;, &lt;b&gt;-I&lt;/b&gt;, and &lt;b&gt;-e&lt;/b&gt;.</source>
          <target state="translated">Actualmente se conservan las siguientes configuraciones: historial, puntos de interrupci&amp;oacute;n, acciones, opciones del depurador y las opciones de la l&amp;iacute;nea de comandos de Perl &lt;b&gt;-w&lt;/b&gt; , &lt;b&gt;-I&lt;/b&gt; y &lt;b&gt;-e&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="2f9e7f8b992aecf2d6263a37f2844fd220110139" translate="yes" xml:space="preserve">
          <source>The following shows how using negative indexing can make it easier to embed recursive patterns inside of a &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; construct for later use:</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra c&amp;oacute;mo el uso de la indexaci&amp;oacute;n negativa puede facilitar la inserci&amp;oacute;n de patrones recursivos dentro de una construcci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; para su uso posterior:</target>
        </trans-unit>
        <trans-unit id="9b2c5c0c58ad6eab6d4bc5753a307f626a410d1e" translate="yes" xml:space="preserve">
          <source>The following shows how using negative indexing can make it easier to embed recursive patterns inside of a &lt;code&gt;qr//&lt;/code&gt; construct for later use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1462e7325e21b0e3087981f44f0af9a643d8599d" translate="yes" xml:space="preserve">
          <source>The following shows the raw form of a reference to a hash.</source>
          <target state="translated">A continuación se muestra la forma en bruto de una referencia a un hachís.</target>
        </trans-unit>
        <trans-unit id="967f133103c60d10e71b0c793260fc3ac77b40c4" translate="yes" xml:space="preserve">
          <source>The following single statement:</source>
          <target state="translated">La siguiente declaración:</target>
        </trans-unit>
        <trans-unit id="2e884b22f85adb1ade979bfac548d842a78ee34c" translate="yes" xml:space="preserve">
          <source>The following standard quantifiers are recognized:</source>
          <target state="translated">Se reconocen los siguientes cuantificadores estándar:</target>
        </trans-unit>
        <trans-unit id="f4477e5386cec5d30c1ffdf2df262ef158032a46" translate="yes" xml:space="preserve">
          <source>The following structure is used as the &lt;code&gt;pprivate&lt;/code&gt; struct by perl's regex engine. Since it is specific to perl it is only of curiosity value to other engine implementations.</source>
          <target state="translated">La siguiente estructura se utiliza como estructura &lt;code&gt;pprivate&lt;/code&gt; por el motor de expresiones regulares de perl. Dado que es espec&amp;iacute;fico de perl, solo tiene un valor curioso para otras implementaciones de motores.</target>
        </trans-unit>
        <trans-unit id="89e9367ea2c2e9bf561ef1309852d2cf7361c03c" translate="yes" xml:space="preserve">
          <source>The following subroutines are available for general use once this module has been loaded:</source>
          <target state="translated">Las siguientes subrutinas están disponibles para su uso general una vez que este módulo haya sido cargado:</target>
        </trans-unit>
        <trans-unit id="39addea572ccdb746968405797f7ed6ce1f71c76" translate="yes" xml:space="preserve">
          <source>The following subsections describe basic locale categories. Beyond these, some combination categories allow manipulation of more than one basic category at a time. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; for a discussion of these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba25a356d8138d41be0a86a5f5fb1d08b7adedd8" translate="yes" xml:space="preserve">
          <source>The following subsections describe basic locale categories. Beyond these, some combination categories allow manipulation of more than one basic category at a time. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for a discussion of these.</source>
          <target state="translated">Las siguientes subsecciones describen categor&amp;iacute;as b&amp;aacute;sicas de configuraci&amp;oacute;n regional. M&amp;aacute;s all&amp;aacute; de estas, algunas categor&amp;iacute;as de combinaci&amp;oacute;n permiten la manipulaci&amp;oacute;n de m&amp;aacute;s de una categor&amp;iacute;a b&amp;aacute;sica a la vez. Vea &lt;a href=&quot;#ENVIRONMENT&quot;&gt;MEDIO AMBIENTE&lt;/a&gt; para una discusi&amp;oacute;n de estos.</target>
        </trans-unit>
        <trans-unit id="0dc5293bb808b42d229adc04604a47fcedbdefbc" translate="yes" xml:space="preserve">
          <source>The following symbolic constants for SHOWWINDOW are available (but not exported) from the Win32 module: SW_HIDE, SW_SHOWNORMAL, SW_SHOWMINIMIZED, SW_SHOWMAXIMIZED and SW_SHOWNOACTIVATE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00832acd024c7ea26f0714974719f6fe15f3259e" translate="yes" xml:space="preserve">
          <source>The following systems contain with PA-RISC 1.1 chips:</source>
          <target state="translated">Los siguientes sistemas contienen con los chips PA-RISC 1.1:</target>
        </trans-unit>
        <trans-unit id="6b127f4160144d76492f304d4812a08c409c1ee2" translate="yes" xml:space="preserve">
          <source>The following systems contained PA-RISC 1.0 chips:</source>
          <target state="translated">Los siguientes sistemas contenían chips PA-RISC 1.0:</target>
        </trans-unit>
        <trans-unit id="c10d1b335971cff8856d57f7108722f96d961255" translate="yes" xml:space="preserve">
          <source>The following table is a complete listing of characters matched by &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\v&lt;/code&gt; as of Unicode 6.3.</source>
          <target state="translated">La siguiente tabla es una lista completa de caracteres ajustada por &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\h&lt;/code&gt; y &lt;code&gt;\v&lt;/code&gt; como de Unicode 6.3.</target>
        </trans-unit>
        <trans-unit id="b30fe71571a9a6420e717590392f76849f4888c3" translate="yes" xml:space="preserve">
          <source>The following table is from Unicode 3.2.</source>
          <target state="translated">La siguiente tabla es de Unicode 3.2.</target>
        </trans-unit>
        <trans-unit id="08ac1fd17048e5aaff438c3920650ea36fe28bd5" translate="yes" xml:space="preserve">
          <source>The following table shows the result of the division and the remainder, so that the equation above holds true. Some &quot;ordinary&quot; cases are strewn in to show more clearly the reasoning:</source>
          <target state="translated">La siguiente tabla muestra el resultado de la división y el resto,de modo que la ecuación anterior es válida.Algunos casos &quot;ordinarios&quot; están esparcidos para mostrar más claramente el razonamiento:</target>
        </trans-unit>
        <trans-unit id="3985fef65ba4e91f6d3780d0b3e49df58907d0ee" translate="yes" xml:space="preserve">
          <source>The following table summarizes the default layers on UNIX-like and DOS-like platforms and depending on the setting of &lt;code&gt;$ENV{PERLIO}&lt;/code&gt; :</source>
          <target state="translated">La siguiente tabla resume las capas predeterminadas en plataformas tipo UNIX y tipo DOS y dependiendo de la configuraci&amp;oacute;n de &lt;code&gt;$ENV{PERLIO}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="54678528be44b1241458a1af21612f2f6f5f0793" translate="yes" xml:space="preserve">
          <source>The following table summarizes the default layers on UNIX-like and DOS-like platforms and depending on the setting of &lt;code&gt;$ENV{PERLIO}&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72667df1c110c1893cb08480bc1c250b48c0cb32" translate="yes" xml:space="preserve">
          <source>The following tables list the ASCII and Latin 1 ordered sets including the subsets: C0 controls (0..31), ASCII graphics (32..7e), delete (7f), C1 controls (80..9f), and Latin-1 (a.k.a. ISO 8859-1) (a0..ff). In the table names of the Latin 1 extensions to ASCII have been labelled with character names roughly corresponding to</source>
          <target state="translated">Las siguientes tablas muestran los conjuntos ordenados de ASCII y Latin 1,incluyendo los subconjuntos:Controles C0 (0..31),gráficos ASCII (32..7e),borrar (7f),controles C1 (80..9f),y Latin-1 (alias ISO 8859-1)(a0..ff).En los nombres de los cuadros de las extensiones del latín 1 al ASCII se han etiquetado con nombres de caracteres que corresponden aproximadamente a</target>
        </trans-unit>
        <trans-unit id="a992ed291bf59a4f8c8642c8859ba903d7ab1f6d" translate="yes" xml:space="preserve">
          <source>The following tests are still failing for Perl 5.8.1 under QNX 6.2.0:</source>
          <target state="translated">Las siguientes pruebas siguen fallando para el Perl 5.8.1 en QNX 6.2.0:</target>
        </trans-unit>
        <trans-unit id="679b51afc9785d4ea117543e0a14a59d2cf8f5c2" translate="yes" xml:space="preserve">
          <source>The following tests may report errors under QNX4:</source>
          <target state="translated">Las siguientes pruebas pueden reportar errores bajo QNX4:</target>
        </trans-unit>
        <trans-unit id="3fcf934fd04c9d50192b3311166eff55a4dd9606" translate="yes" xml:space="preserve">
          <source>The following three functions copy integer, unsigned integer or double into an SV whose reference is &lt;code&gt;rv&lt;/code&gt; . SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="translated">Las siguientes tres funciones copian entero, entero sin signo o doble en un SV cuya referencia es &lt;code&gt;rv&lt;/code&gt; . SV es bendecido si &lt;code&gt;classname&lt;/code&gt; no es nulo.</target>
        </trans-unit>
        <trans-unit id="9965745aff45be1a5967becd8cef0c33f9e335d4" translate="yes" xml:space="preserve">
          <source>The following three functions copy integer, unsigned integer or double into an SV whose reference is &lt;code&gt;rv&lt;/code&gt;. SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab708869e7683ae4c6749cf27fcceca80c5c3008" translate="yes" xml:space="preserve">
          <source>The following three macros are used to initially allocate memory :</source>
          <target state="translated">Las tres macros siguientes se utilizan para asignar inicialmente la memoria :</target>
        </trans-unit>
        <trans-unit id="2d49873237bd9d666bf47ecb1ff27e7adc795d90" translate="yes" xml:space="preserve">
          <source>The following two calls behave identically:</source>
          <target state="translated">Las siguientes dos llamadas se comportan de forma idéntica:</target>
        </trans-unit>
        <trans-unit id="2886be86660a6181dbf2332b9a39bde42d1bded2" translate="yes" xml:space="preserve">
          <source>The following types of change are NOT acceptable:</source>
          <target state="translated">Los siguientes tipos de cambio NO son aceptables:</target>
        </trans-unit>
        <trans-unit id="000a0a677c5358a2d9618715cbd6c3b2ea88fed1" translate="yes" xml:space="preserve">
          <source>The following types of change may be considered acceptable, as long as they do not also fall into any of the &quot;unacceptable&quot; categories set out below:</source>
          <target state="translated">Los siguientes tipos de cambio pueden considerarse aceptables,siempre y cuando no entren también en ninguna de las categorías &quot;inaceptables&quot; que se exponen a continuación:</target>
        </trans-unit>
        <trans-unit id="502bd00665528041c42b284ac29aaf12f2929946" translate="yes" xml:space="preserve">
          <source>The following values can be set by passing &lt;code&gt;config()&lt;/code&gt; a reference to a hash:</source>
          <target state="translated">Los siguientes valores se pueden establecer pasando &lt;code&gt;config()&lt;/code&gt; una referencia a un hash:</target>
        </trans-unit>
        <trans-unit id="93c42f22f8e09b7cd455ba48443cb114b75d6049" translate="yes" xml:space="preserve">
          <source>The following variables are 'defined' by B::Concise; when they are used in a style, their respective values are plugged into the rendering of each opcode.</source>
          <target state="translated">Las siguientes variables están &quot;definidas&quot; por B::Conciso;cuando se usan en un estilo,sus respectivos valores se conectan a la representación de cada opcode.</target>
        </trans-unit>
        <trans-unit id="706034b4d6cc89451a1849a613921860ab0e5afc" translate="yes" xml:space="preserve">
          <source>The following variables need to be set &lt;b&gt;before&lt;/b&gt; the call to the -&amp;gt;new constructor.</source>
          <target state="translated">Las siguientes variables deben establecerse &lt;b&gt;antes de&lt;/b&gt; la llamada al -&amp;gt; nuevo constructor.</target>
        </trans-unit>
        <trans-unit id="182dfc2e543ebf62f55632eff4a16082cef70bfe" translate="yes" xml:space="preserve">
          <source>The following variables work differently:</source>
          <target state="translated">Las siguientes variables funcionan de manera diferente:</target>
        </trans-unit>
        <trans-unit id="076a97e0e26cc34846172ca450710de9a3595069" translate="yes" xml:space="preserve">
          <source>The following were implemented with</source>
          <target state="translated">Los siguientes fueron implementados con</target>
        </trans-unit>
        <trans-unit id="79ed55c53c285526808c76c6e4fadf315b9d9ae9" translate="yes" xml:space="preserve">
          <source>The following will determine the maximum length of the longest allowable pathname on the filesystem which holds</source>
          <target state="translated">Lo siguiente determinará la longitud máxima de la ruta de acceso más larga permitida en el sistema de archivos que contiene</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
