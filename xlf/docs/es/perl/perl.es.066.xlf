<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="198821065f8114e37c282b1dc5e2e1e562fb79c1" translate="yes" xml:space="preserve">
          <source>This option takes a parameter that must be a reference to a sub. On entry to the sub the &lt;code&gt;$_&lt;/code&gt; variable will contain the name to be filtered. If no filename is available &lt;code&gt;$_&lt;/code&gt; will contain an empty string.</source>
          <target state="translated">Esta opci&amp;oacute;n toma un par&amp;aacute;metro que debe ser una referencia a un sub. Al ingresar al sub, la variable &lt;code&gt;$_&lt;/code&gt; contendr&amp;aacute; el nombre a filtrar. Si no hay un nombre de archivo disponible, &lt;code&gt;$_&lt;/code&gt; contendr&amp;aacute; una cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="3c97397612f397cc9803106ff617ed57fcd7bbdd" translate="yes" xml:space="preserve">
          <source>This option was introduced to let you easily customize which</source>
          <target state="translated">Esta opción se introdujo para permitirle personalizar fácilmente lo que</target>
        </trans-unit>
        <trans-unit id="478ef92f533a2a64ed38715adae3641923596540" translate="yes" xml:space="preserve">
          <source>This option will uncompress the contents of &lt;code&gt;$string&lt;/code&gt; before processing the input file/buffer.</source>
          <target state="translated">Esta opci&amp;oacute;n descomprimir&amp;aacute; el contenido de &lt;code&gt;$string&lt;/code&gt; antes de procesar el archivo / b&amp;uacute;fer de entrada.</target>
        </trans-unit>
        <trans-unit id="94e79c8cc707f4d220ebc5676b2e7c094b43e26e" translate="yes" xml:space="preserve">
          <source>This option, if set to a true value, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt; . This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="translated">Esta opci&amp;oacute;n, si se establece en un valor verdadero, suprime la URL cuando se proporciona el texto de anclaje, por lo que este ejemplo se formatear&amp;aacute; como &lt;code&gt;foo&lt;/code&gt; . Esto puede producir una salida menos desordenada en los casos en que las URL no son particularmente importantes.</target>
        </trans-unit>
        <trans-unit id="3c093990608ad560cd2156838664c1a41d4353f2" translate="yes" xml:space="preserve">
          <source>This option, if set to a true value, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt;. This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73e8a9fe84394bb733d349d80f809abc0c71549" translate="yes" xml:space="preserve">
          <source>This overload was introduced in Perl 5.12.</source>
          <target state="translated">Esta sobrecarga se introdujo en el Perl 5.12.</target>
        </trans-unit>
        <trans-unit id="80f1948b993b572ddd0ded00367d4480f0e1a9dd" translate="yes" xml:space="preserve">
          <source>This overrides all the default install locations. Man pages, libraries, scripts, etc... MakeMaker will try to make an educated guess about where to place things under the new PREFIX based on your Config defaults. Failing that, it will fall back to a structure which should be sensible for your platform.</source>
          <target state="translated">Esto anula todas las ubicaciones de instalación predeterminadas.Páginas de manual,bibliotecas,scripts,etc...MakeMaker intentará hacer una suposición informada sobre dónde colocar las cosas bajo el nuevo PREFIX basado en sus valores por defecto de la configuración.En caso de que no sea así,volverá a una estructura que debería ser sensata para tu plataforma.</target>
        </trans-unit>
        <trans-unit id="444e5337bdc60ac371985ae433717f80c0fb2273" translate="yes" xml:space="preserve">
          <source>This overrides the default behavior of &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; inside the newly created thread only.</source>
          <target state="translated">Esto anula el comportamiento predeterminado de &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; dentro del hilo reci&amp;eacute;n creado.</target>
        </trans-unit>
        <trans-unit id="24a3ff23ecaa6a599f398f1b05a599f96ef89aff" translate="yes" xml:space="preserve">
          <source>This overrides the default behavior of &lt;code&gt;exit()&lt;/code&gt; inside the newly created thread only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54817ecdea72dd0f8dad14e4e986821245f79bb0" translate="yes" xml:space="preserve">
          <source>This package &lt;code&gt;ISA&lt;/code&gt; IO::File, so that you can call IO::File methods on the handles returned by &lt;code&gt;vmsopen&lt;/code&gt; and &lt;code&gt;vmssysopen&lt;/code&gt;. The IO::File package is not initialized, however, until you actually call a method that VMS::Stdio doesn't provide. This is done to save startup time for users who don't wish to use the IO::File methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519b8612e911f1f56d7cf335d416b8b3e0b034ae" translate="yes" xml:space="preserve">
          <source>This package allows a tied hash to autoload its values on the first access, and to use the cached value on the following accesses.</source>
          <target state="translated">Este paquete permite que un hash atado cargue automáticamente sus valores en el primer acceso y utilice el valor en caché en los siguientes accesos.</target>
        </trans-unit>
        <trans-unit id="0dd12631c6783b870d8636d280593396cecef2aa" translate="yes" xml:space="preserve">
          <source>This package assumes your instances are blessed hashrefs, it will not work if that is not true. It will store all meta-data in the &lt;code&gt;_meta&lt;/code&gt; key on your objects hash. If your object makes use of the &lt;code&gt;_meta&lt;/code&gt; key in its underlying hash, then there is a conflict and you cannot use this package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ef3cf0031676169d1650659bd8ca01863df483" translate="yes" xml:space="preserve">
          <source>This package exports all the functions necessary to write and/or verify testing tools. Using these building blocks you can begin writing test tools very quickly. You are also provided with tools that help you to test the tools you write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fee1df4d3c220048420e934bfa1571230d5dc6" translate="yes" xml:space="preserve">
          <source>This package gives Perl scripts access via VMS extensions to several C stdio operations not available through Perl's CORE I/O functions. The specific routines are described below. These functions are prototyped as unary operators, with the exception of &lt;code&gt;vmsopen&lt;/code&gt; and &lt;code&gt;vmssysopen&lt;/code&gt;, which can take any number of arguments, and &lt;code&gt;tmpnam&lt;/code&gt;, which takes none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117523179eb4686be1091dc68328b55978f9a6f5" translate="yes" xml:space="preserve">
          <source>This package has an END block. This END block is responsible for setting the exit code based on the test results. This end block also calls the callbacks that can be added to this package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52216942838934faafa12f993b9e33de2dc6a37f" translate="yes" xml:space="preserve">
          <source>This package has been part of the perl core since perl 5.001. It has been released separately to CPAN so older installations can benefit from bug fixes.</source>
          <target state="translated">Este paquete ha sido parte del núcleo de perl desde el perl 5.001.Ha sido liberado por separado al CPAN para que las instalaciones más antiguas puedan beneficiarse de correcciones de errores.</target>
        </trans-unit>
        <trans-unit id="a2c6b0ed0d74189431901579ee94937bb8d4ce64" translate="yes" xml:space="preserve">
          <source>This package has been part of the perl core since the first release of perl5. It has been released separately to CPAN so older installations can benefit from bug fixes.</source>
          <target state="translated">Este paquete ha sido parte del núcleo de perl desde la primera versión de perl5.Ha sido liberado por separado al CPAN para que las instalaciones más antiguas puedan beneficiarse de correcciones de errores.</target>
        </trans-unit>
        <trans-unit id="8604a04f6b263dfa751e272224470b230a03d1e8" translate="yes" xml:space="preserve">
          <source>This package has the same copyright and license as the perl core.</source>
          <target state="translated">Este paquete tiene los mismos derechos de autor y licencia que el núcleo de perl.</target>
        </trans-unit>
        <trans-unit id="5b6805fe29e54bd4efe3c6b5cfa333a68b6dd7e7" translate="yes" xml:space="preserve">
          <source>This package has the same copyright and license as the perl core:</source>
          <target state="translated">Este paquete tiene los mismos derechos de autor y licencia que el núcleo de perl:</target>
        </trans-unit>
        <trans-unit id="3dd0926d44817739b9d6d9f6b9c878553eedc873" translate="yes" xml:space="preserve">
          <source>This package has the same functionality as CPAN.pm, but tries to prevent the usage of compiled extensions during its own execution. Its primary purpose is a rescue in case you upgraded perl and broke binary compatibility somehow.</source>
          <target state="translated">Este paquete tiene la misma funcionalidad que CPAN.pm,pero intenta evitar el uso de extensiones compiladas durante su propia ejecución.Su propósito principal es un rescate en caso de que actualizara el perl y rompiera la compatibilidad binaria de alguna manera.</target>
        </trans-unit>
        <trans-unit id="5ec260b88b13584e3875f1a95d421c8de3085165" translate="yes" xml:space="preserve">
          <source>This package is free software and is provided &quot;as is&quot; without express or implied warranty. It may be used, redistributed and/or modified under the same terms as Perl itself.</source>
          <target state="translated">Este paquete es software libre y se proporciona &quot;tal cual&quot; sin garantía expresa o implícita.Puede ser usado,redistribuido y/o modificado bajo los mismos términos que el propio Perl.</target>
        </trans-unit>
        <trans-unit id="8d169e6cde7a05a46328dee15bc92ea9fbd31c5a" translate="yes" xml:space="preserve">
          <source>This package is just a front end to some other packages. It's a stub to set up a common interface to the various ReadLine implementations found on CPAN (under the &lt;code&gt;Term::ReadLine::*&lt;/code&gt; namespace).</source>
          <target state="translated">Este paquete es solo una interfaz para algunos otros paquetes. Es un c&amp;oacute;digo auxiliar para configurar una interfaz com&amp;uacute;n para las diversas implementaciones de ReadLine que se encuentran en CPAN (en el espacio de nombres &lt;code&gt;Term::ReadLine::*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b1ade6c9a8f018d0fad6780df5d177f32fbb0e0d" translate="yes" xml:space="preserve">
          <source>This package is meant as a base of Pod::Perldoc formatters, like &lt;a href=&quot;Pod::Perldoc::ToText&quot;&gt;Pod::Perldoc::ToText&lt;/a&gt;, &lt;a href=&quot;Pod::Perldoc::ToMan&quot;&gt;Pod::Perldoc::ToMan&lt;/a&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce76c6c4371370495517baf3705b461101fff8c7" translate="yes" xml:space="preserve">
          <source>This package is meant as a base of Pod::Perldoc formatters, like &lt;a href=&quot;totext&quot;&gt;Pod::Perldoc::ToText&lt;/a&gt;, &lt;a href=&quot;toman&quot;&gt;Pod::Perldoc::ToMan&lt;/a&gt;, etc.</source>
          <target state="translated">Este paquete est&amp;aacute; dise&amp;ntilde;ado como una base de formateadores Pod :: Perldoc, como &lt;a href=&quot;totext&quot;&gt;Pod :: Perldoc :: ToText&lt;/a&gt; , &lt;a href=&quot;toman&quot;&gt;Pod :: Perldoc :: ToMan&lt;/a&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="9180a230452e68871f0598e03ac17371f08687f4" translate="yes" xml:space="preserve">
          <source>This package is still a work in progress. ;-)</source>
          <target state="translated">Este paquete es todavía un trabajo en progreso.;-)</target>
        </trans-unit>
        <trans-unit id="e14216db6d6f543013d22d6e863cfe0d56fedf31" translate="yes" xml:space="preserve">
          <source>This package is used to generate classes based on hashrefs. Using this class will give you a &lt;code&gt;new()&lt;/code&gt; method, as well as generating accessors you request. Generated accessors will be getters, &lt;code&gt;set_ACCESSOR&lt;/code&gt; setters will also be generated for you. You also get constants for each accessor (all caps) which return the key into the hash for that accessor. Single inheritance is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5132ab88c97f356a0cb81785c11fd445555c2f78" translate="yes" xml:space="preserve">
          <source>This package lets you create and manipulate complex numbers. By default,</source>
          <target state="translated">Este paquete te permite crear y manipular números complejos.Por defecto,</target>
        </trans-unit>
        <trans-unit id="a170bd1eff2041ac0d0ac79f2c0ec18d1fc8c0b5" translate="yes" xml:space="preserve">
          <source>This package lets you define a clear, and consistent way to allow third party tools to attach meta-data to your instances. If your object consumes this package, and imports its methods, then third party meta-data has a safe place to live.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c027490dcb5b2efb5529d5116c08443a95ca1c4a" translate="yes" xml:space="preserve">
          <source>This package provides routines to simplify conversion between VMS and Unix syntax when processing file specifications. This is useful when porting scripts designed to run under either OS, and also allows you to take advantage of conveniences provided by either syntax (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a96a3b10a148099f0b7f72edfecfa081ed012b" translate="yes" xml:space="preserve">
          <source>This package represents what is expected in units of amnesty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733cf8ccc54fc2caec2b129c7f9c3b8fe256f776" translate="yes" xml:space="preserve">
          <source>This package supplies the following functions, all of which should be called as methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfaecafb317f7a283c4d709b1fe33fabf00ba94" translate="yes" xml:space="preserve">
          <source>This package variable is used by code which needs to generate random numbers (such as the &lt;a href=&quot;#shuffle&quot;&gt;&quot;shuffle&quot;&lt;/a&gt; and &lt;a href=&quot;#sample&quot;&gt;&quot;sample&quot;&lt;/a&gt; functions). If set to a CODE reference it provides an alternative to perl's builtin &lt;code&gt;rand()&lt;/code&gt; function. When a new random number is needed this function will be invoked with no arguments and is expected to return a floating-point value, of which only the fractional part will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0502ae210c839a0d5612b4c49c9ee0a00914b58d" translate="yes" xml:space="preserve">
          <source>This packs &lt;code&gt;3*@buffer&lt;/code&gt; bytes, but it turns out that the size of &lt;code&gt;buffer_t&lt;/code&gt; is four times &lt;code&gt;BUFLEN&lt;/code&gt; ! The moral of the story is that the required alignment of a structure or array is propagated to the next higher level where we have to consider padding</source>
          <target state="translated">Esto empaqueta &lt;code&gt;3*@buffer&lt;/code&gt; bytes de b&amp;uacute;fer , pero resulta que el tama&amp;ntilde;o de &lt;code&gt;buffer_t&lt;/code&gt; es cuatro veces &lt;code&gt;BUFLEN&lt;/code&gt; ! La moraleja de la historia es que la alineaci&amp;oacute;n requerida de una estructura o matriz se propaga al siguiente nivel superior donde tenemos que considerar el relleno.</target>
        </trans-unit>
        <trans-unit id="e53c590bd241b677c54acd7fcca9e80edc4d08e4" translate="yes" xml:space="preserve">
          <source>This packs &lt;code&gt;3*@buffer&lt;/code&gt; bytes, but it turns out that the size of &lt;code&gt;buffer_t&lt;/code&gt; is four times &lt;code&gt;BUFLEN&lt;/code&gt;! The moral of the story is that the required alignment of a structure or array is propagated to the next higher level where we have to consider padding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a4741dfc9d84d06564831e13aad41055715be9" translate="yes" xml:space="preserve">
          <source>This page assumes you already know things, like what a &quot;pattern&quot; is, and the basic syntax of using them. If you don't, see &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946e326f892b4b8b1ddce244173724cf9a7d1bb8" translate="yes" xml:space="preserve">
          <source>This page covers the very basics of understanding, creating and using regular expressions ('regexes') in Perl.</source>
          <target state="translated">Esta página cubre los fundamentos de la comprensión,la creación y el uso de expresiones regulares ('regexes')en Perl.</target>
        </trans-unit>
        <trans-unit id="dce9886ab9b0a9a0def511caa51f7fe80e84aea2" translate="yes" xml:space="preserve">
          <source>This page describes the syntax of regular expressions in Perl.</source>
          <target state="translated">Esta página describe la sintaxis de las expresiones regulares en Perl.</target>
        </trans-unit>
        <trans-unit id="317e90a756283c2e548a97a6d078f31d1baf3825" translate="yes" xml:space="preserve">
          <source>This page provides a basic tutorial on understanding, creating and using regular expressions in Perl. It serves as a complement to the reference page on regular expressions &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;. Regular expressions are an integral part of the &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; operators and so this tutorial also overlaps with &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt; and &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;.</source>
          <target state="translated">Esta p&amp;aacute;gina proporciona un tutorial b&amp;aacute;sico sobre c&amp;oacute;mo comprender, crear y usar expresiones regulares en Perl. Sirve como complemento a la p&amp;aacute;gina de referencia sobre expresiones regulares &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; . Las expresiones regulares son una parte integral de los operadores &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; , por lo que este tutorial tambi&amp;eacute;n se superpone con los &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;operadores Regexp Quote-Like en perlop&lt;/a&gt; y &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d5a131e3270619460abdb9845cd688fb5a50600" translate="yes" xml:space="preserve">
          <source>This page provides a basic tutorial on understanding, creating and using regular expressions in Perl. It serves as a complement to the reference page on regular expressions &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;. Regular expressions are an integral part of the &lt;code&gt;m//&lt;/code&gt;, &lt;code&gt;s///&lt;/code&gt;, &lt;code&gt;qr//&lt;/code&gt; and &lt;code&gt;split&lt;/code&gt; operators and so this tutorial also overlaps with &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt; and &lt;a href=&quot;perlfunc#split&quot;&gt;&quot;split&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd11d6815b6bbd5757b2908c5f7f36d9fc65ef7" translate="yes" xml:space="preserve">
          <source>This parameter allows additional metadata to be stored in the ExtraField in the gzip header. An RFC 1952 compliant ExtraField consists of zero or more subfields. Each subfield consists of a two byte header followed by the subfield data.</source>
          <target state="translated">Este parámetro permite que se almacenen metadatos adicionales en el ExtraField en el encabezado del gzip.Un ExtraField compatible con RFC 1952 consta de cero o más subcampos.Cada subcampo consta de un encabezado de dos bytes seguido de los datos del subcampo.</target>
        </trans-unit>
        <trans-unit id="6c5f89c77abee951f08c51fc642a03fa6b870eac" translate="yes" xml:space="preserve">
          <source>This parameter controls the setting of a bit in the zip central header. It is used to signal that the data stored in the zip file/buffer is probably text.</source>
          <target state="translated">Este parámetro controla el ajuste de un bit en la cabecera central de la cremallera.Se usa para señalar que los datos almacenados en el archivo/bafle del zip son probablemente texto.</target>
        </trans-unit>
        <trans-unit id="f7ab5c8a3bc9a88a9534a62193fcda4a2a345ca3" translate="yes" xml:space="preserve">
          <source>This parameter controls the setting of the FLG.FTEXT bit in the gzip header. It is used to signal that the data stored in the gzip file/buffer is probably text.</source>
          <target state="translated">Este parámetro controla el ajuste del bit FLG.FTEXT en la cabecera del gzip.Se usa para señalar que los datos almacenados en el archivo/buffer gzip son probablemente texto.</target>
        </trans-unit>
        <trans-unit id="1d135fdd7e0c9609625dc055c076f0bab706088f" translate="yes" xml:space="preserve">
          <source>This parameter defaults to 0.</source>
          <target state="translated">Este parámetro tiene un valor por defecto de 0.</target>
        </trans-unit>
        <trans-unit id="a954f8a244020c9f424e9822cfad5459a2f5fec4" translate="yes" xml:space="preserve">
          <source>This parameter is ignored.</source>
          <target state="translated">Este parámetro es ignorado.</target>
        </trans-unit>
        <trans-unit id="3095070e85d1a1b0788b86dc1c47569b11d0ecb4" translate="yes" xml:space="preserve">
          <source>This parameter is used to specify the ambient pragmas which are stored in the special hash %^H.</source>
          <target state="translated">Este parámetro se utiliza para especificar las pragmas ambientales que se almacenan en el hash especial %^H.</target>
        </trans-unit>
        <trans-unit id="aaafa45d95b04bd8c01708fb5fdd297ddbefc3b4" translate="yes" xml:space="preserve">
          <source>This parameter takes precedence over the &lt;code&gt;Local*&lt;/code&gt;, &lt;code&gt;Family&lt;/code&gt;, &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;Proto&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144cb2f166d202c7f6fa31b74b5f72c47f93cb09" translate="yes" xml:space="preserve">
          <source>This parameter takes precedence over the &lt;code&gt;Peer*&lt;/code&gt;, &lt;code&gt;Family&lt;/code&gt;, &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;Proto&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57f8e4024e58b80873e8cbfaa23d47d4d596bfc" translate="yes" xml:space="preserve">
          <source>This parameter works like &lt;code&gt;overrideCJK&lt;/code&gt; , so see there for examples.</source>
          <target state="translated">Este par&amp;aacute;metro funciona como &lt;code&gt;overrideCJK&lt;/code&gt; , as&amp;iacute; que mira all&amp;iacute; para ver ejemplos.</target>
        </trans-unit>
        <trans-unit id="51565d89891bf2948d91c1cc64dabcc98c8f8a0a" translate="yes" xml:space="preserve">
          <source>This parameter works like &lt;code&gt;overrideCJK&lt;/code&gt;, so see there for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9494fe5df3170e77a2748f1c2b29eb01128b21" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and always fails. It can be used to force the engine to backtrack. It is equivalent to &lt;code&gt;(?!)&lt;/code&gt;, but easier to read. In fact, &lt;code&gt;(?!)&lt;/code&gt; gets optimised into &lt;code&gt;(*FAIL)&lt;/code&gt; internally.</source>
          <target state="translated">Este patr&amp;oacute;n no coincide con nada y siempre falla. Se puede usar para forzar al motor a retroceder. Es equivalente a &lt;code&gt;(?!)&lt;/code&gt; , Pero m&amp;aacute;s f&amp;aacute;cil de leer. De hecho, &lt;code&gt;(?!)&lt;/code&gt; Se optimiza en &lt;code&gt;(*FAIL)&lt;/code&gt; internamente.</target>
        </trans-unit>
        <trans-unit id="6fc6c7ad71aa7736bfa3c0da48319c974555eb05" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and always fails. It can be used to force the engine to backtrack. It is equivalent to &lt;code&gt;(?!)&lt;/code&gt;, but easier to read. In fact, &lt;code&gt;(?!)&lt;/code&gt; gets optimised into &lt;code&gt;(*FAIL)&lt;/code&gt; internally. You can provide an argument so that if the match fails because of this &lt;code&gt;FAIL&lt;/code&gt; directive the argument can be obtained from &lt;code&gt;$REGERROR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7331a8c75f2ab7015003fc1a186b402d4f4b0f" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and causes the end of successful matching at the point at which the &lt;code&gt;(*ACCEPT)&lt;/code&gt; pattern was encountered, regardless of whether there is actually more to match in the string. When inside of a nested pattern, such as recursion, or in a subpattern dynamically generated via &lt;code&gt;(??{})&lt;/code&gt; , only the innermost pattern is ended immediately.</source>
          <target state="translated">Este patr&amp;oacute;n no coincide con nada y provoca el final de la coincidencia exitosa en el punto en el que se encontr&amp;oacute; el patr&amp;oacute;n &lt;code&gt;(*ACCEPT)&lt;/code&gt; , independientemente de si hay m&amp;aacute;s coincidencias en la cadena. Cuando est&amp;aacute; dentro de un patr&amp;oacute;n anidado, como la recursividad, o en un subpatr&amp;oacute;n generado din&amp;aacute;micamente a trav&amp;eacute;s de &lt;code&gt;(??{})&lt;/code&gt; , solo el patr&amp;oacute;n m&amp;aacute;s interno finaliza inmediatamente.</target>
        </trans-unit>
        <trans-unit id="67ca6793aa1baf492f23da59c43d48ed60e5c55a" translate="yes" xml:space="preserve">
          <source>This pattern matches nothing and causes the end of successful matching at the point at which the &lt;code&gt;(*ACCEPT)&lt;/code&gt; pattern was encountered, regardless of whether there is actually more to match in the string. When inside of a nested pattern, such as recursion, or in a subpattern dynamically generated via &lt;code&gt;(??{})&lt;/code&gt;, only the innermost pattern is ended immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f045887dd160fbc7bf52fef1325dee9e3b92d8" translate="yes" xml:space="preserve">
          <source>This perl distribution comes with a tremendous amount of documentation. To add these to the built-in manuals that come with Plan 9, from /sys/src/cmd/perl/5.00301 (adjust version appropriately) run:</source>
          <target state="translated">Esta distribución de perlas viene con una enorme cantidad de documentación.Para añadirlos a los manuales incorporados que vienen con el Plan 9,desde /sys/src/cmd/perl/5.00301 (ajustar la versión apropiadamente)ejecute:</target>
        </trans-unit>
        <trans-unit id="faaee2dbff571e442cc459d64235bf7e75251410" translate="yes" xml:space="preserve">
          <source>This phase is not called &quot;BEGIN&quot; to avoid confusion with &lt;code&gt;BEGIN&lt;/code&gt; -blocks, as those are executed during compile-time of any compilation unit, not just the top-level program. A new, localised compile-time entered at run-time, for example by constructs as &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;use SomeModule&quot;&lt;/code&gt; are not global interpreter phases, and therefore aren't reflected by &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; .</source>
          <target state="translated">Esta fase no se llama &quot;BEGIN&quot; para evitar confusiones con los bloques &lt;code&gt;BEGIN&lt;/code&gt; , ya que se ejecutan durante el tiempo de compilaci&amp;oacute;n de cualquier unidad de compilaci&amp;oacute;n, no solo el programa de nivel superior. Un tiempo de compilaci&amp;oacute;n nuevo y localizado ingresado en tiempo de ejecuci&amp;oacute;n, por ejemplo, mediante construcciones como &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;use SomeModule&quot;&lt;/code&gt; no son fases de int&amp;eacute;rprete globales y, por lo tanto, no se reflejan en &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c6076111df5ac2088f7c60ba538962c1ba1518f" translate="yes" xml:space="preserve">
          <source>This phase is not called &quot;BEGIN&quot; to avoid confusion with &lt;code&gt;BEGIN&lt;/code&gt;-blocks, as those are executed during compile-time of any compilation unit, not just the top-level program. A new, localised compile-time entered at run-time, for example by constructs as &lt;code&gt;eval &quot;use SomeModule&quot;&lt;/code&gt; are not global interpreter phases, and therefore aren't reflected by &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d412691b698918f3fb521b6c5dd0a3a033324a" translate="yes" xml:space="preserve">
          <source>This pipes &quot;foo&quot; to the &quot;less&quot; pager and prints &quot;bar&quot; on the console:</source>
          <target state="translated">Esto conduce &quot;foo&quot; al buscapersonas &quot;menos&quot; e imprime &quot;bar&quot; en la consola:</target>
        </trans-unit>
        <trans-unit id="aa4d6fbd955f7e5cef0d107f07af92fd7a485df2" translate="yes" xml:space="preserve">
          <source>This pipes &quot;foo&quot; to the pager and writes &quot;bar&quot; in the file &quot;blurch&quot;:</source>
          <target state="translated">Esto envía &quot;foo&quot; al localizador y escribe &quot;bar&quot; en el archivo &quot;blurch&quot;:</target>
        </trans-unit>
        <trans-unit id="f5e952eb46ee9ecbd24ef00bffe49334d2cc3dad" translate="yes" xml:space="preserve">
          <source>This pipes &quot;foo\nbar\n&quot; to the less pager:</source>
          <target state="translated">Esto &quot;foo\nbar\n&quot; al menos el buscapersonas:</target>
        </trans-unit>
        <trans-unit id="9ef24b3495020011602b2e6eab8942a1d3d9b7c9" translate="yes" xml:space="preserve">
          <source>This port can also be built on IA64/AMD64 using:</source>
          <target state="translated">Este puerto también puede ser construido en IA64/AMD64 usando:</target>
        </trans-unit>
        <trans-unit id="ca794b2a97ff2f3e9f3ab8b1358dfca57eef50e2" translate="yes" xml:space="preserve">
          <source>This port currently supports MakeMaker (the set of modules that is used to build extensions to perl). Therefore, you should be able to build and install most extensions found in the CPAN sites.</source>
          <target state="translated">Este puerto es actualmente compatible con MakeMaker (el conjunto de módulos que se utiliza para crear extensiones para perl).Por lo tanto,debería poder construir e instalar la mayoría de las extensiones que se encuentran en los sitios de CPAN.</target>
        </trans-unit>
        <trans-unit id="793aa06cc8a67a48ad4353d4f7baf40b5e8a8732" translate="yes" xml:space="preserve">
          <source>This port fully supports MakeMaker (the set of modules that is used to build extensions to perl). Therefore, you should be able to build and install most extensions found in the CPAN sites. See &lt;a href=&quot;#Usage-Hints-for-Perl-on-Windows&quot;&gt;&quot;Usage Hints for Perl on Windows&quot;&lt;/a&gt; below for general hints about this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8d54e517da55f89f98bd5f4b007e4f6e30203a" translate="yes" xml:space="preserve">
          <source>This port fully supports MakeMaker (the set of modules that is used to build extensions to perl). Therefore, you should be able to build and install most extensions found in the CPAN sites. See &lt;a href=&quot;#Usage-Hints-for-Perl-on-Windows&quot;&gt;Usage Hints for Perl on Windows&lt;/a&gt; below for general hints about this.</source>
          <target state="translated">Este puerto es totalmente compatible con MakeMaker (el conjunto de m&amp;oacute;dulos que se utiliza para crear extensiones de perl). Por lo tanto, deber&amp;iacute;a poder crear e instalar la mayor&amp;iacute;a de las extensiones que se encuentran en los sitios de CPAN. Consulte las &lt;a href=&quot;#Usage-Hints-for-Perl-on-Windows&quot;&gt;sugerencias de uso de Perl en Windows a&lt;/a&gt; continuaci&amp;oacute;n para obtener sugerencias generales sobre esto.</target>
        </trans-unit>
        <trans-unit id="eca5da1d69d15505d5dfe7b2200728b9e2a69857" translate="yes" xml:space="preserve">
          <source>This port of Perl also uses Unix-epoch date values internally. As long as you are dealing with ASCII character string representations of dates, this should not be an issue. The supported epoch is January 1, 1980 to January 17, 2038.</source>
          <target state="translated">Este puerto de Perl también utiliza internamente valores de fecha de Unix-epoch.Mientras se trate de representaciones de cadenas de caracteres ASCII de fechas,esto no debería ser un problema.La época soportada es del 1 de enero de 1980 al 17 de enero de 2038.</target>
        </trans-unit>
        <trans-unit id="3b59478e1d9adc5bbc9ae74efe6d7c2a8e595477" translate="yes" xml:space="preserve">
          <source>This port of Perl version 5 prefers Unix-style, slash-separated pathnames over OpenVOS-style greater-than-separated pathnames. OpenVOS-style pathnames should work in most contexts, but if you have trouble, replace all greater-than characters by slash characters. Because the slash character is used as a pathname delimiter, Perl cannot process OpenVOS pathnames containing a slash character in a directory or file name; these must be renamed.</source>
          <target state="translated">Este puerto de Perl versión 5 prefiere las rutas separadas por barras al estilo de Unix en lugar de las rutas más grandes que se separan al estilo de OpenVOS.Las rutas de estilo OpenVOS deberían funcionar en la mayoría de los contextos,pero si tienes problemas,reemplaza todos los caracteres superiores por caracteres de barra.Debido a que el carácter de barra se utiliza como delimitador de la ruta de acceso,Perl no puede procesar nombres de ruta de OpenVOS que contengan un carácter de barra en un directorio o nombre de archivo;estos deben ser renombrados.</target>
        </trans-unit>
        <trans-unit id="5661c31774bac29706eeedad5ca0b82e3ef23fed" translate="yes" xml:space="preserve">
          <source>This port was originally contributed by Gary Ng around 5.003_24, and borrowed from the Hip Communications port that was available at the time. Various people have made numerous and sundry hacks since then.</source>
          <target state="translated">Este puerto fue originalmente contribuido por Gary Ng alrededor de 5.003_24,y prestado del puerto de Hip Communications que estaba disponible en ese momento.Varias personas han hecho numerosos y diversos hacks desde entonces.</target>
        </trans-unit>
        <trans-unit id="791faea88ef9fd32067c73f960fb805edbc087f6" translate="yes" xml:space="preserve">
          <source>This port will support dynamic loading, but it is not selected by default. If you would like to experiment with dynamic loading then be sure to specify -Dusedl in the arguments to the Configure script. See the comments in hints/os390.sh for more information on dynamic loading. If you build with dynamic loading then you will need to add the $archlibexp/CORE directory to your LIBPATH environment variable in order for perl to work. See the config.sh file for the value of $archlibexp. If in trying to use Perl you see an error message similar to:</source>
          <target state="translated">Este puerto soportará la carga dinámica,pero no está seleccionado por defecto.Si desea experimentar con la carga dinámica,asegúrese de especificar -Dusedl en los argumentos del script Configure.Vea los comentarios en hints/os390.sh para más información sobre la carga dinámica.Si construye con carga dinámica entonces necesitará añadir el directorio $archlibexp/CORE a su variable de entorno LIBPATH para que perl funcione.Vea el archivo config.sh para el valor de $archlibexp.Si al tratar de usar Perl ve un mensaje de error similar a:</target>
        </trans-unit>
        <trans-unit id="9ea06585be873f55abde4de83dd620970030f924" translate="yes" xml:space="preserve">
          <source>This pragma allows overloading of Perl's operators for a class. To overload built-in functions, see &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;&quot;Overriding Built-in Functions&quot; in perlsub&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e0b9c8e30e0b67210d260345f05889e99ff243" translate="yes" xml:space="preserve">
          <source>This pragma allows overloading of Perl's operators for a class. To overload built-in functions, see &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;Overriding Built-in Functions in perlsub&lt;/a&gt; instead.</source>
          <target state="translated">Este pragma permite sobrecargar los operadores de Perl para una clase. Para sobrecargar las funciones integradas, consulte &lt;a href=&quot;perlsub#Overriding-Built-in-Functions&quot;&gt;Anulaci&amp;oacute;n de funciones integradas en perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca794d61d2dfe5a76e1bb77807f394d0b2d09964" translate="yes" xml:space="preserve">
          <source>This pragma allows you to declare constants at compile-time.</source>
          <target state="translated">Este pragmatismo permite declarar constantes en tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="2c01b8b1ad50eec7e989d0f266d4a4fc89f5d88b" translate="yes" xml:space="preserve">
          <source>This pragma allows you to lexically disable or enable overloading.</source>
          <target state="translated">Este pragmatismo le permite desactivar o activar léxicamente la sobrecarga.</target>
        </trans-unit>
        <trans-unit id="c428d7745a523c21e13cd202bfe44587bda59ff5" translate="yes" xml:space="preserve">
          <source>This pragma also affects encoding of the 0x80..0xFF code point range: normally characters in that range are left as eight-bit bytes (unless they are combined with characters with code points 0x100 or larger, in which case all characters need to become UTF-8 encoded), but if the &lt;code&gt;encoding&lt;/code&gt; pragma is present, even the 0x80..0xFF range always gets UTF-8 encoded.</source>
          <target state="translated">Este pragma tambi&amp;eacute;n afecta la codificaci&amp;oacute;n del rango de puntos de c&amp;oacute;digo 0x80..0xFF: normalmente los caracteres en ese rango se dejan como bytes de ocho bits (a menos que se combinen con caracteres con puntos de c&amp;oacute;digo 0x100 o m&amp;aacute;s grandes, en cuyo caso todos los caracteres deben convertirse en UTF -8 codificado), pero si el pragma de &lt;code&gt;encoding&lt;/code&gt; est&amp;aacute; presente, incluso el rango 0x80..0xFF siempre se codifica en UTF-8.</target>
        </trans-unit>
        <trans-unit id="d924aa9de8af230a322065eb09c25f0d879f8eac" translate="yes" xml:space="preserve">
          <source>This pragma arranges for all inputs from files to be translated into Unicode from the current locale as specified in the environment (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt;), and all outputs to files to be translated back into the locale. (See &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;). On a per-filehandle basis, you can instead use the &lt;a href=&quot;PerlIO::locale&quot;&gt;PerlIO::locale&lt;/a&gt; module, or the &lt;a href=&quot;Encode::Locale&quot;&gt;Encode::Locale&lt;/a&gt; module, both available from CPAN. The latter module also has methods to ease the handling of &lt;code&gt;ARGV&lt;/code&gt; and environment variables, and can be used on individual strings. If you know that all your locales will be UTF-8, as many are these days, you can use the &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;&lt;b&gt;-C&lt;/b&gt;&lt;/a&gt; command line switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd54481ef89d3dcd2f0d998cbd0de47400ae94c4" translate="yes" xml:space="preserve">
          <source>This pragma arranges for all inputs from files to be translated into Unicode from the current locale as specified in the environment (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt;), and all outputs to files to be translated back into the locale. (See &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;). On a per-filehandle basis, you can instead use the &lt;a href=&quot;http://search.cpan.org/perldoc/PerlIO::locale&quot;&gt;PerlIO::locale&lt;/a&gt; module, or the &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;Encode::Locale&lt;/a&gt; module, both available from CPAN. The latter module also has methods to ease the handling of &lt;code&gt;ARGV&lt;/code&gt; and environment variables, and can be used on individual strings. If you know that all your locales will be UTF-8, as many are these days, you can use the &lt;a href=&quot;perlrun#-C&quot;&gt;-C&lt;/a&gt; command line switch.</source>
          <target state="translated">Este pragma dispone que todas las entradas de los archivos se traduzcan a Unicode desde la configuraci&amp;oacute;n regional actual como se especifica en el entorno (consulte &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; ), y que todas las salidas a los archivos se vuelvan a traducir a la configuraci&amp;oacute;n regional. (Ver &lt;a href=&quot;open&quot;&gt;abierto&lt;/a&gt; ). En su lugar, puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/PerlIO::locale&quot;&gt;PerlIO :: locale&lt;/a&gt; o el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;Encode :: Locale&lt;/a&gt; , ambos disponibles en CPAN. El &amp;uacute;ltimo m&amp;oacute;dulo tambi&amp;eacute;n tiene m&amp;eacute;todos para facilitar el manejo de &lt;code&gt;ARGV&lt;/code&gt; y variables de entorno, y se puede utilizar en cadenas individuales. Si sabe que todas sus configuraciones regionales ser&amp;aacute;n UTF-8, como muchas en la actualidad, puede usar el &lt;a href=&quot;perlrun#-C&quot;&gt;modificador de&lt;/a&gt; l&amp;iacute;nea de comandos -C .</target>
        </trans-unit>
        <trans-unit id="37ed3079bf4bc6e6eae888371e167c272116e8dd" translate="yes" xml:space="preserve">
          <source>This pragma dates from the days when UTF-8-enabled editors were uncommon. But that was long ago, and the need for it is greatly diminished. That, coupled with the fact that it doesn't work with threads, along with other problems, (see &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt;) have led to its being deprecated. It is planned to remove this pragma in a future Perl version. New code should be written in UTF-8, and the &lt;code&gt;use utf8&lt;/code&gt; pragma used instead (see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; and &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; for details). Old code should be converted to UTF-8, via something like the recipe in the &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt; (though this simple approach may require manual adjustments afterwards).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34db7e44f64dc2e33987c7fbd44c07e44789bfa8" translate="yes" xml:space="preserve">
          <source>This pragma dates from the days when UTF-8-enabled editors were uncommon. But that was long ago, and the need for it is greatly diminished. That, coupled with the fact that it doesn't work with threads, along with other problems, (see &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;) have led to its being deprecated. It is planned to remove this pragma in a future Perl version. New code should be written in UTF-8, and the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; pragma used instead (see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; and &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; for details). Old code should be converted to UTF-8, via something like the recipe in the &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt; (though this simple approach may require manual adjustments afterwards).</source>
          <target state="translated">Este pragma data de los d&amp;iacute;as en que los editores habilitados para UTF-8 eran poco comunes. Pero eso fue hace mucho tiempo y la necesidad de hacerlo ha disminuido enormemente. Eso, junto con el hecho de que no funciona con subprocesos, junto con otros problemas, (ver &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt; ) ha llevado a que est&amp;eacute; obsoleto. Est&amp;aacute; previsto eliminar este pragma en una futura versi&amp;oacute;n de Perl. El nuevo c&amp;oacute;digo debe escribirse en UTF-8 y, en su lugar, debe &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; pragma (consulte &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; y &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; para obtener m&amp;aacute;s detalles). El c&amp;oacute;digo antiguo debe convertirse a UTF-8, a trav&amp;eacute;s de algo como la receta en la &lt;a href=&quot;#SYNOPSIS&quot;&gt;SINOPSIS&lt;/a&gt; (aunque este enfoque simple puede requerir ajustes manuales despu&amp;eacute;s).</target>
        </trans-unit>
        <trans-unit id="4adb9dc70f3c9381053e6cf64fee4c07c531fe57" translate="yes" xml:space="preserve">
          <source>This pragma doesn't affect I/O. Nor does it change the internal representation of strings, only their interpretation. There are still several places where Unicode isn't fully supported, such as in filenames.</source>
          <target state="translated">Este pragmatismo no afecta a la E/S.Tampoco cambia la representación interna de las cuerdas,sólo su interpretación.Todavía hay varios lugares en los que Unicode no es totalmente compatible,como en los nombres de archivos.</target>
        </trans-unit>
        <trans-unit id="d0a1053bcb46765bc08bab8c76c7daf170b6ab41" translate="yes" xml:space="preserve">
          <source>This pragma doesn't work well with &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; because PerlIO does not get along very well with it. When &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; contains non-ASCII characters it prints funny or gets &quot;wide character warnings&quot;. To understand it, try the code below.</source>
          <target state="translated">Este pragma no funciona bien con el &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o porque PerlIO no se lleva muy bien con &amp;eacute;l. Cuando el &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o contiene caracteres que no son ASCII, se imprime de forma divertida o recibe &quot;advertencias de car&amp;aacute;cter amplio&quot;. Para entenderlo, pruebe el siguiente c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="63bc5c639e862260de54994e4a3fd753cd2d30e7" translate="yes" xml:space="preserve">
          <source>This pragma doesn't work well with &lt;code&gt;format&lt;/code&gt; because PerlIO does not get along very well with it. When &lt;code&gt;format&lt;/code&gt; contains non-ASCII characters it prints funny or gets &quot;wide character warnings&quot;. To understand it, try the code below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842309da32a571cffd281160b3136685717f49db" translate="yes" xml:space="preserve">
          <source>This pragma first appeared in Perl v5.8.0. It has been enhanced in later releases as specified above.</source>
          <target state="translated">Esta pragmática apareció por primera vez en Perl v5.8.0.Ha sido mejorado en versiones posteriores como se ha especificado anteriormente.</target>
        </trans-unit>
        <trans-unit id="ea296547782279e5c0e53a333818543fc8821038" translate="yes" xml:space="preserve">
          <source>This pragma is used to enable a Perl script to be written in encodings that aren't strictly ASCII nor UTF-8. It translates all or portions of the Perl program script from a given encoding into UTF-8, and changes the PerlIO layers of &lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; to the encoding specified.</source>
          <target state="translated">Este pragma se utiliza para permitir que un script Perl se escriba en codificaciones que no son estrictamente ASCII ni UTF-8. Traduce todo o partes del script del programa Perl de una codificaci&amp;oacute;n determinada a UTF-8, y cambia las capas de PerlIO de &lt;code&gt;STDIN&lt;/code&gt; y &lt;code&gt;STDOUT&lt;/code&gt; a la codificaci&amp;oacute;n especificada.</target>
        </trans-unit>
        <trans-unit id="b2499dd223fe6da7fc3aa8e53b4286111a638895" translate="yes" xml:space="preserve">
          <source>This pragma lets you switch to the &quot;C3&quot; resolution order. In simple terms, &quot;C3&quot; order ensures that shared parent classes are never searched before child classes, so Perl will now search: &lt;code&gt;Child&lt;/code&gt; , &lt;code&gt;Father&lt;/code&gt; , &lt;code&gt;PaternalGrandparent&lt;/code&gt; , &lt;code&gt;Mother&lt;/code&gt;&lt;code&gt;MaternalGrandparent&lt;/code&gt; , and finally &lt;code&gt;SharedGreatGrandParent&lt;/code&gt; . Note however that this is not &quot;breadth-first&quot; searching: All the &lt;code&gt;Father&lt;/code&gt; ancestors (except the common ancestor) are searched before any of the &lt;code&gt;Mother&lt;/code&gt; ancestors are considered.</source>
          <target state="translated">Este pragma le permite cambiar al orden de resoluci&amp;oacute;n &quot;C3&quot;. En t&amp;eacute;rminos simples, el orden &quot;C3&quot; asegura que las clases principales compartidas nunca se busquen antes que las clases secundarias, por lo que Perl buscar&amp;aacute; ahora: &lt;code&gt;Child&lt;/code&gt; , &lt;code&gt;Father&lt;/code&gt; , &lt;code&gt;PaternalGrandparent&lt;/code&gt; , Abuelo &lt;code&gt;MaternalGrandparent&lt;/code&gt; &lt;code&gt;Mother&lt;/code&gt; y finalmente &lt;code&gt;SharedGreatGrandParent&lt;/code&gt; . Sin embargo, tenga en cuenta que esta no es una b&amp;uacute;squeda &quot;en amplitud&quot;: todos los ancestros del &lt;code&gt;Father&lt;/code&gt; (excepto el ancestro com&amp;uacute;n) se buscan antes de que se considere cualquiera de los ancestros de la &lt;code&gt;Mother&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c6a561743b48f6917f3de6223e944d7c22b30aa" translate="yes" xml:space="preserve">
          <source>This pragma lets you switch to the &quot;C3&quot; resolution order. In simple terms, &quot;C3&quot; order ensures that shared parent classes are never searched before child classes, so Perl will now search: &lt;code&gt;Child&lt;/code&gt;, &lt;code&gt;Father&lt;/code&gt;, &lt;code&gt;PaternalGrandparent&lt;/code&gt;, &lt;code&gt;Mother&lt;/code&gt;&lt;code&gt;MaternalGrandparent&lt;/code&gt;, and finally &lt;code&gt;SharedGreatGrandParent&lt;/code&gt;. Note however that this is not &quot;breadth-first&quot; searching: All the &lt;code&gt;Father&lt;/code&gt; ancestors (except the common ancestor) are searched before any of the &lt;code&gt;Mother&lt;/code&gt; ancestors are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7563cc6ded71ab7f47219e909773301db6c2d889" translate="yes" xml:space="preserve">
          <source>This pragma provides an easy and convenient way to enable or disable experimental features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2063e0ed31e4ca83c59af99843b134e51c1d67ca" translate="yes" xml:space="preserve">
          <source>This pragma reflects early attempts to incorporate Unicode into perl and has since been superseded. It breaks encapsulation (i.e. it exposes the innards of how the perl executable currently happens to store a string), and use of this module for anything other than debugging purposes is strongly discouraged. If you feel that the functions here within might be useful for your application, this possibly indicates a mismatch between your mental model of Perl Unicode and the current reality. In that case, you may wish to read some of the perl Unicode documentation: &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;, &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;, &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="translated">Este pragma refleja los primeros intentos de incorporar Unicode en perl y desde entonces ha sido reemplazado. Rompe la encapsulaci&amp;oacute;n (es decir, expone las entra&amp;ntilde;as de c&amp;oacute;mo el ejecutable de perl almacena actualmente una cadena), y se desaconseja el uso de este m&amp;oacute;dulo para cualquier otra cosa que no sea la depuraci&amp;oacute;n. Si cree que las funciones aqu&amp;iacute; incluidas podr&amp;iacute;an ser &amp;uacute;tiles para su aplicaci&amp;oacute;n, esto posiblemente indique una falta de coincidencia entre su modelo mental de Perl Unicode y la realidad actual. En ese caso, es posible que desee leer parte de la documentaci&amp;oacute;n Unicode de perl: &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; , &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; , &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt; y &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17b8d23d839b79073aa5a07e1c3b5c9898bf0286" translate="yes" xml:space="preserve">
          <source>This pragma simplifies the maintenance of dual-life modules that will no longer be included in the Perl core in a future Perl release, but are still included currently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c260c6accbf395dcf89666ab18de9cc81ef025ab" translate="yes" xml:space="preserve">
          <source>This pragma tells the compiler to change the behaviour of the filetest permission operators, &lt;code&gt;-r&lt;/code&gt;&lt;code&gt;-w&lt;/code&gt;&lt;code&gt;-x&lt;/code&gt;&lt;code&gt;-R&lt;/code&gt;&lt;code&gt;-W&lt;/code&gt;&lt;code&gt;-X&lt;/code&gt; (see &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef074ee97cc67ce380e960a125c4b931d1340ce" translate="yes" xml:space="preserve">
          <source>This pragma tells the compiler to change the behaviour of the filetest permission operators, &lt;code&gt;-r&lt;/code&gt;&lt;code&gt;-w&lt;/code&gt;&lt;code&gt;-x&lt;/code&gt;&lt;code&gt;-R&lt;/code&gt;&lt;code&gt;-W&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; (see &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;).</source>
          <target state="translated">Este pragma le dice al compilador que cambie el comportamiento de los operadores de permisos de prueba de archivos, &lt;code&gt;-r&lt;/code&gt; &lt;code&gt;-w&lt;/code&gt; &lt;code&gt;-x&lt;/code&gt; &lt;code&gt;-R&lt;/code&gt; &lt;code&gt;-W&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; (ver &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="221ed9ae1b0c79e2438890e0d6c973d357078c4b" translate="yes" xml:space="preserve">
          <source>This pragma tells the compiler to enable (or disable) the use of POSIX locales for built-in operations (for example, LC_CTYPE for regular expressions, LC_COLLATE for string comparison, and LC_NUMERIC for number formatting). Each &quot;use locale&quot; or &quot;no locale&quot; affects statements to the end of the enclosing BLOCK.</source>
          <target state="translated">Esta pragmática le dice al compilador que habilite (o deshabilite)el uso de locales POSIX para operaciones incorporadas (por ejemplo,LC_CTYPE para expresiones regulares,LC_COLLATE para comparación de cadenas y LC_NUMERIC para formateo de números).Cada &quot;locale de uso&quot; o &quot;sin locale&quot; afecta a las declaraciones al final del BLOQUE adjunto.</target>
        </trans-unit>
        <trans-unit id="aeeaf592fadd170ef60bd36772264838afffed60" translate="yes" xml:space="preserve">
          <source>This pragma was created so you can explicitly tell Perl that operations executed within its scope are to use Unicode rules. More operations are affected with newer perls. See &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;&quot;The &quot;Unicode Bug&quot;&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e609830a837e5307b3fb39be2d58dc9501e3994d" translate="yes" xml:space="preserve">
          <source>This pragma was created so you can explicitly tell Perl that operations executed within its scope are to use Unicode rules. More operations are affected with newer perls. See &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt;.</source>
          <target state="translated">Este pragma fue creado para que pueda decirle expl&amp;iacute;citamente a Perl que las operaciones ejecutadas dentro de su alcance deben usar reglas Unicode. M&amp;aacute;s operaciones se ven afectadas con las perls m&amp;aacute;s nuevas. Consulte &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;El error Unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c932803f2c5c4b2cf5c88433b729097c2569d39" translate="yes" xml:space="preserve">
          <source>This pragma will predeclare all the variables whose names are in the list, allowing you to use them under &lt;code&gt;use strict&lt;/code&gt;, and disabling any typo warnings for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700e6f2388b406cbe201cbb98323ed5f25c8d4b4" translate="yes" xml:space="preserve">
          <source>This pragma works just like the &lt;code&gt;strict&lt;/code&gt; pragma. This means that the scope of the warning pragma is limited to the enclosing block. It also means that the pragma setting will not leak across files (via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;). This allows authors to independently define the degree of warning checks that will be applied to their module.</source>
          <target state="translated">Este pragma funciona igual que el pragma &lt;code&gt;strict&lt;/code&gt; . Esto significa que el alcance del pragma de advertencia se limita al bloque adjunto. Tambi&amp;eacute;n significa que la configuraci&amp;oacute;n de pragma no se filtrar&amp;aacute; a trav&amp;eacute;s de los archivos (mediante &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; ). Esto permite a los autores definir de forma independiente el grado de verificaci&amp;oacute;n de advertencia que se aplicar&amp;aacute; a su m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="efd21a83903c74ae90d870a3df25547a1a2130d8" translate="yes" xml:space="preserve">
          <source>This pragma works just like the &lt;code&gt;strict&lt;/code&gt; pragma. This means that the scope of the warning pragma is limited to the enclosing block. It also means that the pragma setting will not leak across files (via &lt;code&gt;use&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt;). This allows authors to independently define the degree of warning checks that will be applied to their module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a2879d5d48273acab2ab3a9f22c1edf08032e3" translate="yes" xml:space="preserve">
          <source>This prints</source>
          <target state="translated">Esto imprime</target>
        </trans-unit>
        <trans-unit id="b6e212e7ef6ac1844cda369639e0440d069cad8b" translate="yes" xml:space="preserve">
          <source>This prints &quot;bar&quot; and writes &quot;foo&quot; into the file &quot;blurch&quot;:</source>
          <target state="translated">Esto imprime &quot;bar&quot; y escribe &quot;foo&quot; en el archivo &quot;blurch&quot;:</target>
        </trans-unit>
        <trans-unit id="d54bfbbae93113b4950fc2d869fb4754b9ce7e99" translate="yes" xml:space="preserve">
          <source>This prints &quot;bar&quot; and writes &quot;foo&quot; to the file &quot;blurch&quot;:</source>
          <target state="translated">Esto imprime &quot;bar&quot; y escribe &quot;foo&quot; en el archivo &quot;blurch&quot;:</target>
        </trans-unit>
        <trans-unit id="efd4b33e8216cea60a6219dc7e5bd98ac5e87040" translate="yes" xml:space="preserve">
          <source>This prints &quot;foo&quot; (&quot;bar&quot; disappears into nowhereland):</source>
          <target state="translated">Esto imprime &quot;foo&quot; (&quot;bar&quot; desaparece en nowhereland):</target>
        </trans-unit>
        <trans-unit id="41ff0d603c865bec8366dedecbae0223cb1c3622" translate="yes" xml:space="preserve">
          <source>This prints &lt;code&gt;2.7&lt;/code&gt; .</source>
          <target state="translated">Esto imprime &lt;code&gt;2.7&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5884fb8d5912977dd4b38b66daf68b4ce0bb0d83" translate="yes" xml:space="preserve">
          <source>This prints &lt;code&gt;2.7&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb91200cd90a472a1ae9cb007ac03043f56be426" translate="yes" xml:space="preserve">
          <source>This prints out the name and version of all modules used and then exits.</source>
          <target state="translated">Esto imprime el nombre y la versión de todos los módulos utilizados y luego sale.</target>
        </trans-unit>
        <trans-unit id="0f904b0830f014f8a9104235a42d06c972150632" translate="yes" xml:space="preserve">
          <source>This prints out your environment like the &lt;a href=&quot;http://man.he.net/man1/printenv&quot;&gt;printenv(1)&lt;/a&gt; program, but in a different order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f686232da2ac609974851dce432c4e1340ec7365" translate="yes" xml:space="preserve">
          <source>This prints out your environment like the printenv(1) program, but in a different order:</source>
          <target state="translated">Esto imprime tu entorno como el programa printenv(1),pero en un orden diferente:</target>
        </trans-unit>
        <trans-unit id="04d447d63dbf460d4723e288297a46d354df3e2a" translate="yes" xml:space="preserve">
          <source>This prints two doublequotes:</source>
          <target state="translated">Esto imprime dos comillas:</target>
        </trans-unit>
        <trans-unit id="345205710c1209079bdf05b4d146f25fe0a01f36" translate="yes" xml:space="preserve">
          <source>This prints:</source>
          <target state="translated">Estas huellas:</target>
        </trans-unit>
        <trans-unit id="468d6d44762bf30d6816e393a8ba4eeeb6a7be16" translate="yes" xml:space="preserve">
          <source>This probably does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21d1db17e4be9e2f5e50a54879f0a7c98d4455f" translate="yes" xml:space="preserve">
          <source>This probably isn't as useful as you might think. Normally, you shouldn't need to.</source>
          <target state="translated">Esto probablemente no es tan útil como podrías pensar.Normalmente,no debería ser necesario.</target>
        </trans-unit>
        <trans-unit id="341bfd19674c6dfeba3ffe584bfdf82c2776cb1e" translate="yes" xml:space="preserve">
          <source>This probably makes more sense for a human: enter a block, start a statement. Get the values of &lt;code&gt;$b&lt;/code&gt; and &lt;code&gt;$c&lt;/code&gt; , and add them together. Find &lt;code&gt;$a&lt;/code&gt; , and assign one to the other. Then leave.</source>
          <target state="translated">Esto probablemente tenga m&amp;aacute;s sentido para un humano: ingrese un bloque, comience una declaraci&amp;oacute;n. Obtener los valores de &lt;code&gt;$b&lt;/code&gt; y &lt;code&gt;$c&lt;/code&gt; , y sumarlos. Busque &lt;code&gt;$a&lt;/code&gt; y asigne uno al otro. Entonces vete.</target>
        </trans-unit>
        <trans-unit id="a4586de2c445b95b021af0b04d69fb01ba89d45c" translate="yes" xml:space="preserve">
          <source>This probably makes more sense for a human: enter a block, start a statement. Get the values of &lt;code&gt;$b&lt;/code&gt; and &lt;code&gt;$c&lt;/code&gt;, and add them together. Find &lt;code&gt;$a&lt;/code&gt;, and assign one to the other. Then leave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d98988085b44026120bb435150bffabf68b9c3" translate="yes" xml:space="preserve">
          <source>This probably sounds a bit more confusing than it really is, so let's go through this program piece by piece and see what it does. (For those of you who might be trying to remember exactly what a prime number is, it's a number that's only evenly divisible by itself and 1.)</source>
          <target state="translated">Esto probablemente suena un poco más confuso de lo que realmente es,así que vamos a repasar este programa pieza por pieza y ver lo que hace.(Para aquellos de ustedes que podrían estar tratando de recordar exactamente lo que es un número primo,es un número que sólo es divisible por sí mismo y 1.)</target>
        </trans-unit>
        <trans-unit id="8ac64410a0a0c80ce97774854ab9fa0ae7c24c64" translate="yes" xml:space="preserve">
          <source>This probing and the checks we performed have some limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e016023303c59d801c6e740a285fec3afa4a6473" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; syntax. When inner anonymous subs that reference lexical subroutines in outer subroutines are created, they are automatically rebound to the current values of such lexical subs.</source>
          <target state="translated">Este problema generalmente se puede resolver haciendo que la subrutina interna sea an&amp;oacute;nima, usando la sintaxis &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; . Cuando se crean subs an&amp;oacute;nimos internos que hacen referencia a subrutinas l&amp;eacute;xicas en subrutinas externas, se vuelven a vincular autom&amp;aacute;ticamente a los valores actuales de dichos subs l&amp;eacute;xicos.</target>
        </trans-unit>
        <trans-unit id="b60e9bed0f73061b937a8fe5fecd9ad0d49454e0" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; syntax. When inner anonymous subs that reference variables in outer subroutines are created, they are automatically rebound to the current values of such variables.</source>
          <target state="translated">Este problema generalmente se puede resolver haciendo que la subrutina interna sea an&amp;oacute;nima, usando la sintaxis &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; {}&lt;/code&gt; . Cuando se crean subs an&amp;oacute;nimos internos que hacen referencia a variables en subrutinas externas, se recuperan autom&amp;aacute;ticamente a los valores actuales de dichas variables.</target>
        </trans-unit>
        <trans-unit id="57123e780f962baab766839b9fcf02a5c2e726f1" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;sub {}&lt;/code&gt; syntax. When inner anonymous subs that reference lexical subroutines in outer subroutines are created, they are automatically rebound to the current values of such lexical subs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0f22c9ea1e13dec6b01b469b5a53003b6ea76c" translate="yes" xml:space="preserve">
          <source>This problem can usually be solved by making the inner subroutine anonymous, using the &lt;code&gt;sub {}&lt;/code&gt; syntax. When inner anonymous subs that reference variables in outer subroutines are created, they are automatically rebound to the current values of such variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e5c26de90551718f152502391c103ab788e07b" translate="yes" xml:space="preserve">
          <source>This problem usually involves one of the Perl built-ins that has the same name a Unix command that uses octal numbers as arguments on the command line. In this example, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; on the command line knows that its first argument is octal because that's what it does:</source>
          <target state="translated">Este problema generalmente involucra a uno de los componentes integrados de Perl que tiene el mismo nombre que un comando de Unix que usa n&amp;uacute;meros octales como argumentos en la l&amp;iacute;nea de comandos. En este ejemplo, &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; en la l&amp;iacute;nea de comando sabe que su primer argumento es octal porque eso es lo que hace:</target>
        </trans-unit>
        <trans-unit id="d33a707f660fda2085139973d7ad824dc2ab179f" translate="yes" xml:space="preserve">
          <source>This problem usually involves one of the Perl built-ins that has the same name a Unix command that uses octal numbers as arguments on the command line. In this example, &lt;code&gt;chmod&lt;/code&gt; on the command line knows that its first argument is octal because that's what it does:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b6c2ab73ee787f434ee0ce1c24dc74fd9f5055" translate="yes" xml:space="preserve">
          <source>This problem was fixed in perl 5.004_05, so preventing it means upgrading your version of perl. ;)</source>
          <target state="translated">Este problema fue arreglado en perl 5.004_05,así que prevenirlo significa actualizar su versión de perl.;)</target>
        </trans-unit>
        <trans-unit id="149ef363e988711abf3a930d8381275df0baf405" translate="yes" xml:space="preserve">
          <source>This processes the lines in &lt;code&gt;@lines&lt;/code&gt; (where each list item must be a defined value, and must contain exactly one line of content -- so no items like &lt;code&gt;&quot;foo\nbar&quot;&lt;/code&gt; are allowed). The final &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is used to indicate the end of document being parsed.</source>
          <target state="translated">Esto procesa las l&amp;iacute;neas en &lt;code&gt;@lines&lt;/code&gt; (donde cada elemento de la lista debe ser un valor definido y debe contener exactamente una l&amp;iacute;nea de contenido, por lo que no se permiten elementos como &lt;code&gt;&quot;foo\nbar&quot;&lt;/code&gt; ). El &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; final se usa para indicar el final del documento que se est&amp;aacute; analizando.</target>
        </trans-unit>
        <trans-unit id="688ef3f8e6f5eaf3a51865a695b77382ce66b228" translate="yes" xml:space="preserve">
          <source>This processes the lines in &lt;code&gt;@lines&lt;/code&gt; (where each list item must be a defined value, and must contain exactly one line of content -- so no items like &lt;code&gt;&quot;foo\nbar&quot;&lt;/code&gt; are allowed). The final &lt;code&gt;undef&lt;/code&gt; is used to indicate the end of document being parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c20dce79362eb3c48b58c8e5bc86aad6133c323" translate="yes" xml:space="preserve">
          <source>This produces a patch based on the difference between blead and your current branch. It's important to make sure that blead is up to date before producing the diff, that's why we call &lt;code&gt;git pull&lt;/code&gt; first.</source>
          <target state="translated">Esto produce un parche basado en la diferencia entre blead y su rama actual. Es importante asegurarse de que blead est&amp;eacute; actualizado antes de producir la diferencia, por eso llamamos primero a &lt;code&gt;git pull&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a3bf030e7bf490188072c702d468c0925c814bb" translate="yes" xml:space="preserve">
          <source>This produces the Perl docs online book &lt;code&gt;perl.INF&lt;/code&gt; . Install in on &lt;code&gt;BOOKSHELF&lt;/code&gt; path.</source>
          <target state="translated">Esto produce el libro en l&amp;iacute;nea de documentos de Perl &lt;code&gt;perl.INF&lt;/code&gt; . Instalar en la ruta &lt;code&gt;BOOKSHELF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1d23f3b834b32d7a55e6f86f555013820b4d006" translate="yes" xml:space="preserve">
          <source>This produces the Perl docs online book &lt;code&gt;perl.INF&lt;/code&gt;. Install in on &lt;code&gt;BOOKSHELF&lt;/code&gt; path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a75bb1a7c7847916a1dc3b67dbf0cb3e9f1aba1" translate="yes" xml:space="preserve">
          <source>This produces the default error string for the given exception,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9c734dac073d3001ca1ea5f8fa8cfb8daa173b" translate="yes" xml:space="preserve">
          <source>This program is Copyright 1990,2015 by Johan Vromans. This program is free software; you can redistribute it and/or modify it under the terms of the Perl Artistic License or the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</source>
          <target state="translated">Este programa es Copyright 1990,2015 de Johan Vromans.Este programa es software libre;puede redistribuirlo y/o modificarlo bajo los términos de la Licencia Artística de Perl o de la Licencia Pública General de GNU publicada por la Fundación para el Software Libre;ya sea la versión 2 de la Licencia,o (a su elección)cualquier versión posterior.</target>
        </trans-unit>
        <trans-unit id="26f7f8dba51ed564d4c376a299ad1ccb7d59f62d" translate="yes" xml:space="preserve">
          <source>This program is designed to help you generate and send bug reports (and thank-you notes) about perl5 and the modules which ship with it.</source>
          <target state="translated">Este programa está diseñado para ayudarte a generar y enviar informes de errores (y notas de agradecimiento)sobre perl5 y los módulos que se envían con él.</target>
        </trans-unit>
        <trans-unit id="95c0f8377730d3f4d0f475e508c5eeed353ea1d3" translate="yes" xml:space="preserve">
          <source>This program is designed to help you generate bug reports (and thank-you notes) about perl5 and the modules which ship with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d3efb8a4ca3ef394388570fac127108dc6a9fe" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See either the GNU General Public License or the Artistic License for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cac2059d04ed459899445fb7d4adafed92ceb31" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</source>
          <target state="translated">Este programa se distribuye con la esperanza de que sea útil,pero SIN NINGUNA GARANTÍA;ni siquiera la garantía implícita de COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO PARTICULAR.Vea la Licencia Pública General de GNU para más detalles.</target>
        </trans-unit>
        <trans-unit id="d8761e66f0aa0865d7b8a0fad53a385acc12de1d" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful, but without any warranty; without even the implied warranty of merchantability or fitness for a particular purpose.</source>
          <target state="translated">Este programa se distribuye con la esperanza de que sea útil,pero sin ninguna garantía,ni siquiera la garantía implícita de comerciabilidad o idoneidad para un propósito particular.</target>
        </trans-unit>
        <trans-unit id="2b736eab48b8800afefb519e32bdf619448f2254" translate="yes" xml:space="preserve">
          <source>This program is distributed under the Artistic License.</source>
          <target state="translated">Este programa se distribuye bajo la Licencia Artística.</target>
        </trans-unit>
        <trans-unit id="d1d0a6a12423ce6569360d8955fb54c14fc9d18b" translate="yes" xml:space="preserve">
          <source>This program is distributed under the same terms as perl itself. See &lt;a href=&quot;http://perl.org/&quot;&gt;http://perl.org/&lt;/a&gt; or &lt;a href=&quot;http://cpan.org/&quot;&gt;http://cpan.org/&lt;/a&gt; for more info on that.</source>
          <target state="translated">Este programa se distribuye bajo los mismos t&amp;eacute;rminos que el propio perl. Consulte &lt;a href=&quot;http://perl.org/&quot;&gt;http://perl.org/&lt;/a&gt; o &lt;a href=&quot;http://cpan.org/&quot;&gt;http://cpan.org/&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n al respecto.</target>
        </trans-unit>
        <trans-unit id="9f880f2d75284047b0b3ca19e5c220c8ba58fc91" translate="yes" xml:space="preserve">
          <source>This program is distributed under the same terms as perl itself. See http://perl.org/ or http://cpan.org/ for more info on that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09da468beec666c3faa34069fc9e34aec608126" translate="yes" xml:space="preserve">
          <source>This program is easy to understand. &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; is the standard way to invoke a perl program from the shell. &lt;code&gt;$regexp = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; saves the first command line argument as the regexp to be used, leaving the rest of the command line arguments to be treated as files. &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; loops over all the lines in all the files. For each line, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; if /$regexp/;&lt;/code&gt; prints the line if the regexp matches the line. In this line, both &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;/$regexp/&lt;/code&gt; use the default variable &lt;code&gt;$_&lt;/code&gt; implicitly.</source>
          <target state="translated">Este programa es f&amp;aacute;cil de entender. &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; es la forma est&amp;aacute;ndar de invocar un programa perl desde el shell. &lt;code&gt;$regexp = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; guarda el primer argumento de la l&amp;iacute;nea de comando como la expresi&amp;oacute;n regular que se utilizar&amp;aacute;, dejando que el resto de los argumentos de la l&amp;iacute;nea de comando se traten como archivos. &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; recorre todas las l&amp;iacute;neas en todos los archivos. Para cada l&amp;iacute;nea, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; if /$regexp/;&lt;/code&gt; imprime la l&amp;iacute;nea si la expresi&amp;oacute;n regular coincide con la l&amp;iacute;nea. En esta l&amp;iacute;nea, tanto &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;/$regexp/&lt;/code&gt; usan la variable predeterminada &lt;code&gt;$_&lt;/code&gt; impl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="f1261f166c54df8049e546eae1262e6a9cada525" translate="yes" xml:space="preserve">
          <source>This program is easy to understand. &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; is the standard way to invoke a perl program from the shell. &lt;code&gt;$regexp = shift;&lt;/code&gt; saves the first command line argument as the regexp to be used, leaving the rest of the command line arguments to be treated as files. &lt;code&gt;while (&amp;lt;&amp;gt;)&lt;/code&gt; loops over all the lines in all the files. For each line, &lt;code&gt;print if /$regexp/;&lt;/code&gt; prints the line if the regexp matches the line. In this line, both &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;/$regexp/&lt;/code&gt; use the default variable &lt;code&gt;$_&lt;/code&gt; implicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f9820f4fcf840eefdc1fac524d68220274e583" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself</source>
          <target state="translated">Este programa es software libre;puedes redistribuirlo y/o modificarlo bajo los mismos términos que el propio Perl</target>
        </trans-unit>
        <trans-unit id="46aefc944a8368be1c5041bb6eeeeb6f411fe967" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Este programa es software libre;puede redistribuirlo y/o modificarlo bajo los mismos términos que el propio Perl.</target>
        </trans-unit>
        <trans-unit id="ef7753908303851a8d71edec5d567bdf9359f255" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the terms of either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d232685400a50b411b31a9d8b5d5d46e7d1e5a7e" translate="yes" xml:space="preserve">
          <source>This program is free software; you can redistribute it and/or modify it under the terms of either: the GNU General Public License as published by the Free Software Foundation; or the Artistic License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda486acda27bdf9cd66949e1266b5a78cb661d8" translate="yes" xml:space="preserve">
          <source>This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Este programa es software libre;puede redistribuirlo y/o modificarlo bajo los mismos términos que el propio Perl.</target>
        </trans-unit>
        <trans-unit id="49a9ebce432bc6f7a5abfa1673ae23d082772d50" translate="yes" xml:space="preserve">
          <source>This program is maintained by the Perl 5 Porters. The CPAN distribution is maintained by S&amp;eacute;bastien Aperghis-Tramoni &amp;lt;</source>
          <target state="translated">Este programa es mantenido por Perl 5 Porters. La distribuci&amp;oacute;n de CPAN es mantenida por S&amp;eacute;bastien Aperghis-Tramoni &amp;lt;</target>
        </trans-unit>
        <trans-unit id="d98f469a4bef1492cbd51567cf72d3226f5fb0a1" translate="yes" xml:space="preserve">
          <source>This program provides an easy way to send a thank-you message back to the authors and maintainers of perl. It's just</source>
          <target state="translated">Este programa proporciona una manera fácil de enviar un mensaje de agradecimiento a los autores y mantenedores de perl.Es sólo que</target>
        </trans-unit>
        <trans-unit id="474e6c18a35ba4d4e6ef7db0a92aa1f2c8019fc7" translate="yes" xml:space="preserve">
          <source>This program uses the pipeline model to generate prime numbers. Each thread in the pipeline has an input queue that feeds numbers to be checked, a prime number that it's responsible for, and an output queue into which it funnels numbers that have failed the check. If the thread has a number that's failed its check and there's no child thread, then the thread must have found a new prime number. In that case, a new child thread is created for that prime and stuck on the end of the pipeline.</source>
          <target state="translated">Este programa utiliza el modelo de tuberías para generar números primos.Cada hilo de la tubería tiene una cola de entrada que alimenta los números a comprobar,un número primo del que es responsable y una cola de salida en la que canaliza los números que han fallado en la comprobación.Si el hilo tiene un número que ha fallado en el chequeo y no hay ningún hilo hijo,entonces el hilo debe haber encontrado un nuevo número primo.En ese caso,se crea un nuevo hilo hijo para ese número primo y se lo coloca al final de la tubería.</target>
        </trans-unit>
        <trans-unit id="9bd07d758efadc42857a5a0bab51cd8a077edefd" translate="yes" xml:space="preserve">
          <source>This program will print only the line containing &quot;Bar&quot;. If the range operator is changed to &lt;code&gt;...&lt;/code&gt; , it will also print the &quot;Baz&quot; line.</source>
          <target state="translated">Este programa imprimir&amp;aacute; solo la l&amp;iacute;nea que contiene &quot;Bar&quot;. Si el operador de rango se cambia a &lt;code&gt;...&lt;/code&gt; , tambi&amp;eacute;n imprimir&amp;aacute; la l&amp;iacute;nea &quot;Baz&quot;.</target>
        </trans-unit>
        <trans-unit id="30db2380e071100cd380f37fbfe50881aec4a9f3" translate="yes" xml:space="preserve">
          <source>This program will print only the line containing &quot;Bar&quot;. If the range operator is changed to &lt;code&gt;...&lt;/code&gt;, it will also print the &quot;Baz&quot; line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91a32c34a450fa3aaeea5e09b4bf9753a0de2ef" translate="yes" xml:space="preserve">
          <source>This program will probably hang until you kill it. The only way it won't hang is if one of the two threads acquires both locks first. A guaranteed-to-hang version is more complicated, but the principle is the same.</source>
          <target state="translated">Este programa probablemente se colgará hasta que lo mates.La única manera de que no se cuelgue es si uno de los dos hilos adquiere primero ambos bloqueos.Una versión garantizada para colgar es más complicada,pero el principio es el mismo.</target>
        </trans-unit>
        <trans-unit id="5342717fe0bceba26cbcb8fb4ec4c851e52a537d" translate="yes" xml:space="preserve">
          <source>This project was originated by the late Nick Ing-Simmons and later maintained by Dan Kogai</source>
          <target state="translated">Este proyecto fue originado por el difunto Nick Ing-Simmons y luego mantenido por Dan Kogai</target>
        </trans-unit>
        <trans-unit id="9118e7dccf4093710a6ee14c8c47816f5d4b16b0" translate="yes" xml:space="preserve">
          <source>This property is always written in the compound form. For example, &lt;code&gt;\p{Bidi_Class:R}&lt;/code&gt; matches characters that are normally written right to left. Unlike the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; property, this property can have more values added in a future Unicode release. Those listed above comprised the complete set for many Unicode releases, but others were added in Unicode 6.3; you can always find what the current ones are in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;. And &lt;a href=&quot;https://www.unicode.org/reports/tr9/&quot;&gt;https://www.unicode.org/reports/tr9/&lt;/a&gt; describes how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d353efbbda92520a2429ad4f8535f649667e5952" translate="yes" xml:space="preserve">
          <source>This property is always written in the compound form. For example, &lt;code&gt;\p{Bidi_Class:R}&lt;/code&gt; matches characters that are normally written right to left. Unlike the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; property, this property can have more values added in a future Unicode release. Those listed above comprised the complete set for many Unicode releases, but others were added in Unicode 6.3; you can always find what the current ones are in in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;. And &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; describes how to use them.</source>
          <target state="translated">Esta propiedad siempre se escribe en forma compuesta. Por ejemplo, &lt;code&gt;\p{Bidi_Class:R}&lt;/code&gt; coincide con caracteres que normalmente se escriben de derecha a izquierda. A diferencia de la propiedad &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; , esta propiedad puede tener m&amp;aacute;s valores agregados en una futura versi&amp;oacute;n Unicode. Aquellos enumerados anteriormente formaron el conjunto completo de muchas versiones de Unicode, pero se agregaron otras en Unicode 6.3; siempre puedes encontrar en &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt; en qu&amp;eacute; est&amp;aacute;n los actuales . Y &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; describe c&amp;oacute;mo usarlos.</target>
        </trans-unit>
        <trans-unit id="9d34b69b565209c628e5e765cbc6639e949afb7e" translate="yes" xml:space="preserve">
          <source>This property is used when you need to know in what Unicode version(s) a character is.</source>
          <target state="translated">Esta propiedad se utiliza cuando se necesita saber en qué versión(es)Unicode está un personaje.</target>
        </trans-unit>
        <trans-unit id="ba740c0026c45f2093377326c9e21d5c765b2b70" translate="yes" xml:space="preserve">
          <source>This provides access to most of the Win32 GUI widgets from Perl. Obviously, it only runs under Win32, and uses native widgets. The Perl interface doesn't really follow the C interface: it's been made more Perlish, and the documentation is pretty good. More advanced stuff may require familiarity with the C Win32 APIs, or reference to MSDN.</source>
          <target state="translated">Esto proporciona acceso a la mayoría de los widgets Win32 GUI de Perl.Obviamente,sólo funciona con Win32,y usa widgets nativos.La interfaz Perl no sigue realmente la interfaz C:se ha hecho más Perlish,y la documentación es bastante buena.Cosas más avanzadas pueden requerir familiaridad con las APIs de C Win32,o referencia a MSDN.</target>
        </trans-unit>
        <trans-unit id="05ed7360b5662052cf8df531a4821820675f5a90" translate="yes" xml:space="preserve">
          <source>This provides an alternate means to specify function names to be exported from the extension. Its value is a reference to an array of function names to be exported by the extension. These names are passed through unaltered to the linker options file.</source>
          <target state="translated">Esto proporciona un medio alternativo para especificar los nombres de las funciones que se exportarán desde la extensión.Su valor es una referencia a un conjunto de nombres de funciones que se exportarán desde la extensión.Estos nombres se pasan sin alterar al archivo de opciones del enlazador.</target>
        </trans-unit>
        <trans-unit id="b6d4501c0d8df55386bc41a04cfb00e365ded86e" translate="yes" xml:space="preserve">
          <source>This provides an alternate means to specify function names to be exported from the extension. Its value is a reference to an array of function names to be exported by the extension. These names are passed through unaltered to the linker options file. Specifying a value for the FUNCLIST attribute suppresses automatic generation of the bootstrap function for the package. To still create the bootstrap name you have to specify the package name in the DL_FUNCS hash:</source>
          <target state="translated">Esto proporciona un medio alternativo para especificar los nombres de las funciones que se exportarán desde la extensión.Su valor es una referencia a un conjunto de nombres de funciones que se exportarán desde la extensión.Estos nombres se pasan sin alterar al archivo de opciones del enlazador.Especificar un valor para el atributo FUNCLIST suprime la generación automática de la función de arranque para el paquete.Para seguir creando el nombre del bootstrap hay que especificar el nombre del paquete en el hash DL_FUNCS:</target>
        </trans-unit>
        <trans-unit id="e5949eb8258f363515432b75a3130bd3950de7ae" translate="yes" xml:space="preserve">
          <source>This provides console orientated output formatting for &lt;a href=&quot;../../harness&quot;&gt;TAP::Harness&lt;/a&gt; when run with multiple &lt;a href=&quot;../../harness#jobs&quot;&gt;jobs in TAP::Harness&lt;/a&gt;.</source>
          <target state="translated">Esto proporciona formato de salida orientado a la consola para &lt;a href=&quot;../../harness&quot;&gt;TAP :: Harness&lt;/a&gt; cuando se ejecuta con varios &lt;a href=&quot;../../harness#jobs&quot;&gt;trabajos en TAP :: Harness&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c754e200bc077c2bf6996a1253c57ba0690ec6b" translate="yes" xml:space="preserve">
          <source>This provides console orientated output formatting for &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; when run with multiple &lt;a href=&quot;TAP::Harness#jobs&quot;&gt;&quot;jobs&quot; in TAP::Harness&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9181d13c6755b2d2d5fcc68549a86008e0459f52" translate="yes" xml:space="preserve">
          <source>This provides console orientated output formatting for TAP::Harness.</source>
          <target state="translated">Esto proporciona un formato de salida orientado a la consola para el TAP::Arnés.</target>
        </trans-unit>
        <trans-unit id="cb848608e40dafbcfe04519def93d68a46db285b" translate="yes" xml:space="preserve">
          <source>This provides fairly low-level access to the Win32 System API calls dealing with files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d034d371e8adbdcae6dcc8b5f1035f643b009166" translate="yes" xml:space="preserve">
          <source>This provides file orientated output formatting for &lt;a href=&quot;../../harness&quot;&gt;TAP::Harness&lt;/a&gt;. It is particularly important when running with parallel tests, as it ensures that test results are not interleaved, even when run verbosely.</source>
          <target state="translated">Esto proporciona formato de salida orientado a archivos para &lt;a href=&quot;../../harness&quot;&gt;TAP :: Harness&lt;/a&gt; . Es particularmente importante cuando se ejecuta con pruebas en paralelo, ya que garantiza que los resultados de la prueba no se intercalen, incluso cuando se ejecutan de forma detallada.</target>
        </trans-unit>
        <trans-unit id="41a1e8e2958aae247fdb0f251950cd9259ec4e20" translate="yes" xml:space="preserve">
          <source>This provides file orientated output formatting for &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt;. It is particularly important when running with parallel tests, as it ensures that test results are not interleaved, even when run verbosely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3613f62ba727bb8044f064f871c5a2ffe96d89" translate="yes" xml:space="preserve">
          <source>This provides file orientated output formatting for TAP::Harness.</source>
          <target state="translated">Esto proporciona un formato de salida orientado a los archivos para el TAP::Arnés.</target>
        </trans-unit>
        <trans-unit id="e79f6eddf4d757dda9eee150d598652b5e165fe6" translate="yes" xml:space="preserve">
          <source>This provides the &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; token that returns a reference to the current subroutine or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; outside of a subroutine.</source>
          <target state="translated">Esto proporciona el token &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; que devuelve una referencia a la subrutina actual o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; fuera de una subrutina.</target>
        </trans-unit>
        <trans-unit id="3e44b62c4658b0866a101af4ad0e69174b50a666" translate="yes" xml:space="preserve">
          <source>This provides the &lt;code&gt;__SUB__&lt;/code&gt; token that returns a reference to the current subroutine or &lt;code&gt;undef&lt;/code&gt; outside of a subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224c6e548e4884dfbdfe2ac071bf15dda7c825fc" translate="yes" xml:space="preserve">
          <source>This puts the executables in f:/perllib/bin. Manually move them to the &lt;code&gt;PATH&lt;/code&gt; , manually move the built</source>
          <target state="translated">Esto coloca los ejecutables en f: / perllib / bin. Mu&amp;eacute;valos manualmente a la &lt;code&gt;PATH&lt;/code&gt; , mueva manualmente el</target>
        </trans-unit>
        <trans-unit id="0f078af34eb1808b4b8645c105ffb896a2e3287b" translate="yes" xml:space="preserve">
          <source>This puts the executables in f:/perllib/bin. Manually move them to the &lt;code&gt;PATH&lt;/code&gt;, manually move the built</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a0cac7b723579ba6e539b4576a4997c5b49e8f" translate="yes" xml:space="preserve">
          <source>This read-only variable contains a reference to the last-read filehandle. This is set by &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt;. This is the same handle that &lt;code&gt;$.&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; without arguments use. It is also the handle used when Perl appends &quot;, &amp;lt;STDIN&amp;gt; line 1&quot; to an error or warning message.</source>
          <target state="translated">Esta variable de solo lectura contiene una referencia al identificador de archivo de &amp;uacute;ltima lectura. Esto se establece mediante &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; . Este es el mismo identificador que &lt;code&gt;$.&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; sin argumentos. Tambi&amp;eacute;n es el identificador que se utiliza cuando Perl agrega &quot;, &amp;lt;STDIN&amp;gt; l&amp;iacute;nea 1&quot; a un mensaje de error o advertencia.</target>
        </trans-unit>
        <trans-unit id="be43d29d7cb60d0bb5d93c01c4c8424abbd333f2" translate="yes" xml:space="preserve">
          <source>This read-only variable contains a reference to the last-read filehandle. This is set by &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;tell&lt;/code&gt;, &lt;code&gt;eof&lt;/code&gt; and &lt;code&gt;seek&lt;/code&gt;. This is the same handle that &lt;code&gt;$.&lt;/code&gt; and &lt;code&gt;tell&lt;/code&gt; and &lt;code&gt;eof&lt;/code&gt; without arguments use. It is also the handle used when Perl appends &quot;, &amp;lt;STDIN&amp;gt; line 1&quot; to an error or warning message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a8564c99d9b70452198f29efc00c01b42f3989" translate="yes" xml:space="preserve">
          <source>This readonly SV has a zero numeric value and a &lt;code&gt;&quot;0&quot;&lt;/code&gt; string value. It's similar to &lt;code&gt;&lt;a href=&quot;#PL_sv_no&quot;&gt;&quot;PL_sv_no&quot;&lt;/a&gt;&lt;/code&gt; except for its string value. Can be used as a cheap alternative to &lt;code&gt;mXPUSHi(0)&lt;/code&gt; for example. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_zero&lt;/code&gt;. Introduced in 5.28.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9c374af25573cbb8a011c91df0b5de175403d9" translate="yes" xml:space="preserve">
          <source>This reads the Pod content of the file (or filehandle) that you specify, and processes it with that &lt;code&gt;$parser&lt;/code&gt; object, according to however &lt;code&gt;$parser&lt;/code&gt; 's class works, and according to whatever parser options you have set up for this &lt;code&gt;$parser&lt;/code&gt; object.</source>
          <target state="translated">Esto lee el contenido del Pod del archivo (o identificador de archivo) que usted especifica y lo procesa con ese objeto &lt;code&gt;$parser&lt;/code&gt; , de acuerdo con el funcionamiento de la clase de &lt;code&gt;$parser&lt;/code&gt; y de acuerdo con las opciones de analizador que haya configurado para este objeto &lt;code&gt;$parser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a26e710e2e27380d631c3ef937b2b0240e77b996" translate="yes" xml:space="preserve">
          <source>This reads the Pod content of the file (or filehandle) that you specify, and processes it with that &lt;code&gt;$parser&lt;/code&gt; object, according to however &lt;code&gt;$parser&lt;/code&gt;'s class works, and according to whatever parser options you have set up for this &lt;code&gt;$parser&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bb05c8de9876d308efc2608bb9d89029538d52" translate="yes" xml:space="preserve">
          <source>This refers to a namespace declared with the Perl &lt;code&gt;package&lt;/code&gt; statement. In Perl, packages often have a version number property given by the &lt;code&gt;$VERSION&lt;/code&gt; variable in the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ff270630232407257920d032001ef8966fbd15" translate="yes" xml:space="preserve">
          <source>This refers to a reusable library of code contained in a single file. Modules usually contain one or more packages and are often referred to by the name of a primary package that can be mapped to the file name. For example, one might refer to &lt;code&gt;File::Spec&lt;/code&gt; instead of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d7cb3ad9af8785004d6aea2c58d998c7c43122" translate="yes" xml:space="preserve">
          <source>This refers to a reusable library of code typically contained in a single file. Currently, we primarily talk of perl modules, but this specification should be open enough to apply to other languages as well (ex. python, ruby).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eced75506fbb27c39fc8e3e1e378940cf07d3648" translate="yes" xml:space="preserve">
          <source>This refers to a reusable library of code typically contained in a single file. Currently, we primarily talk of perl modules, but this specification should be open enough to apply to other languages as well (ex. python, ruby). Examples of modules are &lt;code&gt;Class::Container&lt;/code&gt;, &lt;code&gt;LWP::Simple&lt;/code&gt;, or &lt;code&gt;DBD::File&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738d39668fa39fd446be00455410afcfca770f3c" translate="yes" xml:space="preserve">
          <source>This refers to code that constructs a metadata data structure, serializes into a bytestream and/or writes it to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbb6deaa19e9a370f00c7ae0865d9d2054ba9d5" translate="yes" xml:space="preserve">
          <source>This refers to code that reads a metadata file, deserializes it into a data structure in memory, or interprets a data structure of metadata elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31dda74f7214f2c1e1f0e262ad534c6710776eb" translate="yes" xml:space="preserve">
          <source>This regex from Benjamin Goldberg will add commas to numbers:</source>
          <target state="translated">Este regex de Benjamin Goldberg añadirá comas a los números:</target>
        </trans-unit>
        <trans-unit id="056a5755811e26e84ba66501ddc6e8aa83e0239e" translate="yes" xml:space="preserve">
          <source>This regexp covers a much more limited set of formats and constitutes the best practices for initializing version objects. Whether you choose to employ decimal or dotted-decimal for is a personal preference however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63b86d7679f940ac8c61114c80aac9d0dbe5e33" translate="yes" xml:space="preserve">
          <source>This regexp covers all of the legal forms allowed under the current version string parser. This is not to say that all of these forms are recommended, and some of them can only be used when quoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5402a82ba706913f690e8b3975f67ccd9cac88" translate="yes" xml:space="preserve">
          <source>This regexp displays a common task: perform a case-insensitive match. Perl provides a way of avoiding all those brackets by simply appending an &lt;code&gt;'i'&lt;/code&gt; to the end of the match. Then &lt;code&gt;/[yY][eE][sS]/;&lt;/code&gt; can be rewritten as &lt;code&gt;/yes/i;&lt;/code&gt; . The &lt;code&gt;'i'&lt;/code&gt; stands for case-insensitive and is an example of a</source>
          <target state="translated">Esta expresi&amp;oacute;n regular muestra una tarea com&amp;uacute;n: realizar una coincidencia que no distinga entre may&amp;uacute;sculas y min&amp;uacute;sculas. Perl proporciona una forma de evitar todos esos corchetes simplemente agregando una &lt;code&gt;'i'&lt;/code&gt; al final de la coincidencia. Entonces &lt;code&gt;/[yY][eE][sS]/;&lt;/code&gt; se puede reescribir como &lt;code&gt;/yes/i;&lt;/code&gt; . La &lt;code&gt;'i'&lt;/code&gt; significa que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas y es un ejemplo de</target>
        </trans-unit>
        <trans-unit id="3a214c88f7b6824fbb7ccf51b387a9a746e2ab88" translate="yes" xml:space="preserve">
          <source>This regexp displays a common task: perform a case-insensitive match. Perl provides a way of avoiding all those brackets by simply appending an &lt;code&gt;'i'&lt;/code&gt; to the end of the match. Then &lt;code&gt;/[yY][eE][sS]/;&lt;/code&gt; can be rewritten as &lt;code&gt;/yes/i;&lt;/code&gt;. The &lt;code&gt;'i'&lt;/code&gt; stands for case-insensitive and is an example of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f039b2c10f0c743bc7161531bc5bb4ee7cf32e0f" translate="yes" xml:space="preserve">
          <source>This regexp matches at the earliest string position, &lt;code&gt;'T'&lt;/code&gt; . One might think that &lt;code&gt;e&lt;/code&gt; , being leftmost in the alternation, would be matched, but &lt;code&gt;r&lt;/code&gt; produces the longest string in the first quantifier.</source>
          <target state="translated">Esta expresi&amp;oacute;n regular coincide con la primera posici&amp;oacute;n de la cadena, &lt;code&gt;'T'&lt;/code&gt; . Se podr&amp;iacute;a pensar que &lt;code&gt;e&lt;/code&gt; , que est&amp;aacute; en el extremo izquierdo de la alternancia, coincidir&amp;iacute;a, pero &lt;code&gt;r&lt;/code&gt; produce la cadena m&amp;aacute;s larga en el primer cuantificador.</target>
        </trans-unit>
        <trans-unit id="18bc3044ad1a70322cf6bfca75dfe2f27fadde89" translate="yes" xml:space="preserve">
          <source>This regexp matches at the earliest string position, &lt;code&gt;'T'&lt;/code&gt;. One might think that &lt;code&gt;'e'&lt;/code&gt;, being leftmost in the alternation, would be matched, but &lt;code&gt;'r'&lt;/code&gt; produces the longest string in the first quantifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2afed8f05eefbd66a6b4b21a4dd6dc09f86be3d" translate="yes" xml:space="preserve">
          <source>This regexp without the &lt;code&gt;/x&lt;/code&gt; modifier is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d61ce1428d48124b4e47e558b037fdd3f04877" translate="yes" xml:space="preserve">
          <source>This registers warning categories for the given names and is primarily for use by the warnings::register pragma.</source>
          <target state="translated">Esto registra categorías de advertencia para los nombres dados y es principalmente para el uso de las advertencias::registrar pragmatismo.</target>
        </trans-unit>
        <trans-unit id="ac7da667100d67a773306ce2d3526ac0aaefa222" translate="yes" xml:space="preserve">
          <source>This release (5.14) uses &lt;code&gt;unix&lt;/code&gt; as the bottom layer on Win32, and so still uses the C compiler's numeric file descriptor routines. There is an experimental native &lt;code&gt;win32&lt;/code&gt; layer, which is expected to be enhanced and should eventually become the default under Win32.</source>
          <target state="translated">Esta versi&amp;oacute;n (5.14) usa &lt;code&gt;unix&lt;/code&gt; como la capa inferior en Win32, por lo que todav&amp;iacute;a usa las rutinas de descriptor de archivos num&amp;eacute;ricos del compilador de C. Existe una capa &lt;code&gt;win32&lt;/code&gt; nativa experimental , que se espera que se mejore y que eventualmente se convierta en la predeterminada en Win32.</target>
        </trans-unit>
        <trans-unit id="e97366cc6c8c908874e040814cdab3c3ba7152dc" translate="yes" xml:space="preserve">
          <source>This release (5.30) uses &lt;code&gt;:unix&lt;/code&gt; as the bottom layer on Win32, and so still uses the C compiler's numeric file descriptor routines. There is an experimental native &lt;code&gt;:win32&lt;/code&gt; layer, which is expected to be enhanced and may eventually become the default under Win32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e93ba339b839f549405138c86c3e7a085e38a6" translate="yes" xml:space="preserve">
          <source>This release of Storable can be used on a newer version of Perl to serialize data which is not supported by earlier Perls. By default, Storable will attempt to do the right thing, by &lt;code&gt;croak()&lt;/code&gt; ing if it encounters data that it cannot deserialize. However, the defaults can be changed as follows:</source>
          <target state="translated">Esta versi&amp;oacute;n de Storable se puede utilizar en una versi&amp;oacute;n m&amp;aacute;s reciente de Perl para serializar datos que no son compatibles con Perls anteriores. De forma predeterminada, Storable intentar&amp;aacute; hacer lo correcto, &lt;code&gt;croak()&lt;/code&gt; si encuentra datos que no puede deserializar. Sin embargo, los valores predeterminados se pueden cambiar de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="7ffdd0bf1fbd694aafba1b69b74908623d9b39e0" translate="yes" xml:space="preserve">
          <source>This release of Storable can be used on a newer version of Perl to serialize data which is not supported by earlier Perls. By default, Storable will attempt to do the right thing, by &lt;code&gt;croak()&lt;/code&gt;ing if it encounters data that it cannot deserialize. However, the defaults can be changed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224448a00c11022eb7a054d96b5b7887fe965764" translate="yes" xml:space="preserve">
          <source>This relied on &lt;code&gt;Test::Builder-&amp;gt;_try()&lt;/code&gt; which was a private method, documented as something nobody should use. This was fixed by using a different tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df9abd6e13cb17537a033c0a98a21365649ee63" translate="yes" xml:space="preserve">
          <source>This relies on the fact that uninitialized array elements are set to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1b77b3467fa5b58df05f447b8e32028382b1ea" translate="yes" xml:space="preserve">
          <source>This relies on the fact that uninitialized array elements are set to NULL.</source>
          <target state="translated">Esto se basa en el hecho de que los elementos de la matriz no inicializados se establecen en NULL.</target>
        </trans-unit>
        <trans-unit id="44ecfba29c712b60c9051df87b6cdce165f041c1" translate="yes" xml:space="preserve">
          <source>This removes the requirement for a given module from the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7d55aad79de70107f3e8211b62fbf8c98570e5" translate="yes" xml:space="preserve">
          <source>This renders a print statement, which includes a call to the function. It's identical to rendering a file with a use call and that single statement, except for the filename which appears in the nextstate ops.</source>
          <target state="translated">Esto hace que se imprima una declaración,que incluye una llamada a la función.Es idéntico a la representación de un archivo con una llamada de uso y esa única declaración,excepto por el nombre del archivo que aparece en la siguiente operación.</target>
        </trans-unit>
        <trans-unit id="ea6f5b9409b135d9fd2914f5e9712bb211e3d415" translate="yes" xml:space="preserve">
          <source>This renders all functions in the B::Concise package with the source lines. It eschews the O framework so that the stashref can be passed directly to B::Concise::compile(). See -stash option for a more convenient way to render a package.</source>
          <target state="translated">Esto hace que todas las funciones del paquete B::Conciso con las líneas de origen.Evita el marco de trabajo O para que el stashref pueda ser pasado directamente a B::Concise::compile().Ver la opción -stash para una forma más conveniente de renderizar un paquete.</target>
        </trans-unit>
        <trans-unit id="32554955438229712c4cac893fa9122a188f77ea" translate="yes" xml:space="preserve">
          <source>This replaces any read-only SV with a fresh SV and removes any magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e348cbe59c03a2464d04a9305501c3c5773cd34e" translate="yes" xml:space="preserve">
          <source>This replaces any read-only SV with a fresh writable copy and removes any magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e89c15d6e7988885e07ca54d3050b10693c573d" translate="yes" xml:space="preserve">
          <source>This reports whether the VMS process has been set to a case tolerant state, and returns true when the process is in the traditional case tolerant mode and false when case sensitivity has been enabled for the process. It is intended for use by the File::Spec::VMS-&amp;gt;case_tolerant method only, and it is recommended that you only use File::Spec-&amp;gt;case_tolerant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65869e50f6892b08c4cf7dcb78cc5963bf748c6b" translate="yes" xml:space="preserve">
          <source>This requires &lt;code&gt;perl-5.8&lt;/code&gt; or higher, compiled with &lt;code&gt;perlio&lt;/code&gt;</source>
          <target state="translated">Esto requiere &lt;code&gt;perl-5.8&lt;/code&gt; o superior, compilado con &lt;code&gt;perlio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf4909d18f4323c37d07bae96a1d0080562f63f5" translate="yes" xml:space="preserve">
          <source>This requires require a 64-bit MIPS CPU (R8000, R10000, ...)</source>
          <target state="translated">Esto requiere una CPU MIPS de 64 bits (R8000,R10000,...)</target>
        </trans-unit>
        <trans-unit id="f7da7513031db644267fa4b13fabe99ed2a030c7" translate="yes" xml:space="preserve">
          <source>This restores one of the standard line-styles: &lt;code&gt;terse&lt;/code&gt; , &lt;code&gt;concise&lt;/code&gt; , &lt;code&gt;linenoise&lt;/code&gt; , &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt; , into effect. It also accepts style names previously defined with add_style().</source>
          <target state="translated">Esto restaura uno de los estilos de l&amp;iacute;nea est&amp;aacute;ndar: &lt;code&gt;terse&lt;/code&gt; , &lt;code&gt;concise&lt;/code&gt; , &lt;code&gt;linenoise&lt;/code&gt; , &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;env&lt;/code&gt; , en efecto. Tambi&amp;eacute;n acepta nombres de estilo previamente definidos con add_style ().</target>
        </trans-unit>
        <trans-unit id="36fc0f09fd582998b2f90539bd1668c94507a44b" translate="yes" xml:space="preserve">
          <source>This restores one of the standard line-styles: &lt;code&gt;terse&lt;/code&gt;, &lt;code&gt;concise&lt;/code&gt;, &lt;code&gt;linenoise&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;, into effect. It also accepts style names previously defined with add_style().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0559182bda8492a3ca4dae9b14b73dc55291956" translate="yes" xml:space="preserve">
          <source>This restores the default behavior after you've changed it with '-main' (it's not normally needed). If no subroutine name/ref is given, main is rendered, regardless of this flag.</source>
          <target state="translated">Esto restaura el comportamiento predeterminado después de haberlo cambiado con '-main' (normalmente no se necesita).Si no se da un nombre/ref de subrutina,se renderiza 'main',independientemente de esta bandera.</target>
        </trans-unit>
        <trans-unit id="f49545d47b4c2e67130feb223d7916803e2151e7" translate="yes" xml:space="preserve">
          <source>This restores the token object(s) to the front of the parser stream.</source>
          <target state="translated">Esto devuelve el objeto o los objetos simbólicos al frente de la corriente de parser.</target>
        </trans-unit>
        <trans-unit id="bc16a591c72f30b96574184a49591c3cb8b3396e" translate="yes" xml:space="preserve">
          <source>This results in checking out the median commit between &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;perl-5.10.0&lt;/code&gt;. You can then run the bisecting process with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc61a1506f4a52166fcca29cd0724a61c00502b" translate="yes" xml:space="preserve">
          <source>This returns -1 if it is not possible to know.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7a366a88c90193129d1a95d7e39c2f2c494051" translate="yes" xml:space="preserve">
          <source>This returns -1 if there is no way to check (assume yes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc21f44beb4322ca69654d9019b9237853614328" translate="yes" xml:space="preserve">
          <source>This returns 0 if there are (most likely) no pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd0398abb2c08261b0415684f65513126559e63" translate="yes" xml:space="preserve">
          <source>This returns 0 if there are no pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5a3b4ddffecb8501f761fb971c3b2d6c7162bb" translate="yes" xml:space="preserve">
          <source>This returns 1 if there are (likely) pending events. Upon return it will reset, nothing else will be able to see that there were pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa266181f0344e330298c3c78c5770ba393e0756" translate="yes" xml:space="preserve">
          <source>This returns 1 if there are pending events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438306ebd9d1acbe91b86dc11907f9e6dab643b7" translate="yes" xml:space="preserve">
          <source>This returns NULL if the variable does not exist.</source>
          <target state="translated">Esto devuelve NULL si la variable no existe.</target>
        </trans-unit>
        <trans-unit id="7a696a06774c6f3002eeb51ec2f2001513d53029" translate="yes" xml:space="preserve">
          <source>This returns a data structure containing the version requirements for a given module or undef if the given module has no requirements. This should not be used for version checks (see &lt;a href=&quot;#accepts_module&quot;&gt;&quot;accepts_module&quot;&lt;/a&gt; instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37bfa051bc09e91f6aa8c8e068658f22a9b05b4" translate="yes" xml:space="preserve">
          <source>This returns a glob reference for the symbol table entry of VARNAME in the package of the compartment. VARNAME must be the &lt;b&gt;name&lt;/b&gt; of a variable without any leading type marker. For example:</source>
          <target state="translated">Esto devuelve una referencia global para la entrada de la tabla de s&amp;iacute;mbolos de VARNAME en el paquete del compartimento. VARNAME debe ser el &lt;b&gt;nombre&lt;/b&gt; de una variable sin ning&amp;uacute;n marcador de tipo inicial. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4846a06785f0daaeee2213d80f23082c8fa4965c" translate="yes" xml:space="preserve">
          <source>This returns a handy stringified value of this object. This is useful for debugging, as in:</source>
          <target state="translated">Esto devuelve un valor útil de este objeto.Esto es útil para la depuración,como en:</target>
        </trans-unit>
        <trans-unit id="ed3e8770a5f12bfd2e6e0013e9c81234e1f2fd4f" translate="yes" xml:space="preserve">
          <source>This returns a list of all facets that have been loaded using the &lt;code&gt;load_facet()&lt;/code&gt; method. This will not return any classes that have not been loaded, or have been loaded directly without a call to &lt;code&gt;load_facet()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ea704d04f7c3ec75b7f4e64aa2fc6d627bedce" translate="yes" xml:space="preserve">
          <source>This returns a list of the elements of the op's aux data structure, or a null list if there is no aux. What will be returned depends on the object's type, but will typically be a collection of &lt;code&gt;B::IV&lt;/code&gt; , &lt;code&gt;B::GV&lt;/code&gt; , etc. objects. &lt;code&gt;cv&lt;/code&gt; is the &lt;code&gt;B::CV&lt;/code&gt; object representing the sub that the op is contained within.</source>
          <target state="translated">Esto devuelve una lista de los elementos de la estructura de datos auxiliares de la operaci&amp;oacute;n, o una lista nula si no hay ning&amp;uacute;n auxiliar. Lo que se devolver&amp;aacute; depende del tipo de objeto, pero normalmente ser&amp;aacute; una colecci&amp;oacute;n de objetos &lt;code&gt;B::IV&lt;/code&gt; , &lt;code&gt;B::GV&lt;/code&gt; , etc. &lt;code&gt;cv&lt;/code&gt; es el objeto &lt;code&gt;B::CV&lt;/code&gt; que representa el sub en el que est&amp;aacute; contenido la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="18b3e284330afc61e3a6c84779d9500461f4397e" translate="yes" xml:space="preserve">
          <source>This returns a list of the elements of the op's aux data structure, or a null list if there is no aux. What will be returned depends on the object's type, but will typically be a collection of &lt;code&gt;B::IV&lt;/code&gt;, &lt;code&gt;B::GV&lt;/code&gt;, etc. objects. &lt;code&gt;cv&lt;/code&gt; is the &lt;code&gt;B::CV&lt;/code&gt; object representing the sub that the op is contained within.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c4d2eacb966527e478f0083cb85da673514051" translate="yes" xml:space="preserve">
          <source>This returns a list of the names of all the installed modules. The perl 'core' is given the special name 'Perl'.</source>
          <target state="translated">Esto devuelve una lista de los nombres de todos los módulos instalados.Al &quot;núcleo&quot; de perl se le da el nombre especial de &quot;Perl&quot;.</target>
        </trans-unit>
        <trans-unit id="14379e40e50bf7d9283b3df7b37c3928bd424f74" translate="yes" xml:space="preserve">
          <source>This returns a new CPAN::Meta::Requirements object. It takes an optional hash reference argument. Currently, only one key is supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531b8c5d5e45b476d43548e396af61e47ca0e014" translate="yes" xml:space="preserve">
          <source>This returns a new Feature object. The &lt;code&gt;%spec&lt;/code&gt; argument to the constructor should be the same as the value of the &lt;code&gt;optional_feature&lt;/code&gt; entry in the distmeta. It must contain entries for &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;prereqs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39fe91e6096e4528d2eface949d54878f13adb3" translate="yes" xml:space="preserve">
          <source>This returns a new parser object, where</source>
          <target state="translated">Esto devuelve un nuevo objeto analizador,donde</target>
        </trans-unit>
        <trans-unit id="c0e359e0a6bfe07d5ae556f45550772e1dc21138" translate="yes" xml:space="preserve">
          <source>This returns a normal Perl scalar from $x. It is used automatically whenever a scalar is needed, for instance in array index operations.</source>
          <target state="translated">Esto devuelve un escalar de Perl normal de $x.Se utiliza automáticamente siempre que se necesita un escalar,por ejemplo en operaciones de índice de matrices.</target>
        </trans-unit>
        <trans-unit id="39af602c2add0567b4eacfb622fe97070c79fecd" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash describing the requirements using the strings in the &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bedda000844c8f0e165c8e9491e25dc6f787dac" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has short general category names (such as &lt;code&gt;Lu&lt;/code&gt; , &lt;code&gt;Nd&lt;/code&gt; , &lt;code&gt;Zs&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; ) as keys and long names (such as &lt;code&gt;UppercaseLetter&lt;/code&gt; , &lt;code&gt;DecimalNumber&lt;/code&gt; , &lt;code&gt;SpaceSeparator&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; ) as values. The hash is reversible in case you need to go from the long names to the short names. The general category is the one returned from &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt; under the &lt;code&gt;category&lt;/code&gt; key.</source>
          <target state="translated">Esto devuelve una referencia a un hash que tiene nombres de las categor&amp;iacute;as generales cortos (como &lt;code&gt;Lu&lt;/code&gt; , &lt;code&gt;Nd&lt;/code&gt; , &lt;code&gt;Zs&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; ) como claves y nombres largos (como &lt;code&gt;UppercaseLetter&lt;/code&gt; , &lt;code&gt;DecimalNumber&lt;/code&gt; , &lt;code&gt;SpaceSeparator&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; ) como valores. El hash es reversible en caso de que necesite pasar de los nombres largos a los nombres cortos. La categor&amp;iacute;a general es la que devuelve &lt;a href=&quot;#charinfo()&quot;&gt;charinfo ()&lt;/a&gt; bajo la clave de &lt;code&gt;category&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="039f30ebcd1468ad00dd473984fb486ddd84fa51" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has short general category names (such as &lt;code&gt;Lu&lt;/code&gt;, &lt;code&gt;Nd&lt;/code&gt;, &lt;code&gt;Zs&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;) as keys and long names (such as &lt;code&gt;UppercaseLetter&lt;/code&gt;, &lt;code&gt;DecimalNumber&lt;/code&gt;, &lt;code&gt;SpaceSeparator&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;) as values. The hash is reversible in case you need to go from the long names to the short names. The general category is the one returned from &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt; under the &lt;code&gt;category&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c58feecc3765e5c4080f925afe0ce2010395de" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has the short bidi (bidirectional) type names (such as &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;R&lt;/code&gt; ) as keys and long names (such as &lt;code&gt;Left-to-Right&lt;/code&gt; , &lt;code&gt;Right-to-Left&lt;/code&gt; ) as values. The hash is reversible in case you need to go from the long names to the short names. The bidi type is the one returned from &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt; under the &lt;code&gt;bidi&lt;/code&gt; key. For the exact meaning of the various bidi classes the Unicode TR9 is recommended reading: &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; (as of Unicode 5.0.0)</source>
          <target state="translated">Esto devuelve una referencia a un hash que tiene los nombres de tipo bidireccional cortos (como &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;R&lt;/code&gt; ) como claves y nombres largos (como de &lt;code&gt;Left-to-Right&lt;/code&gt; , de &lt;code&gt;Right-to-Left&lt;/code&gt; ) como valores. El hash es reversible en caso de que necesite pasar de los nombres largos a los nombres cortos. El tipo bidi es el que devuelve &lt;a href=&quot;#charinfo()&quot;&gt;charinfo ()&lt;/a&gt; bajo la clave &lt;code&gt;bidi&lt;/code&gt; . Para conocer el significado exacto de las distintas clases bidi, se recomienda leer Unicode TR9: &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; (a partir de Unicode 5.0.0)</target>
        </trans-unit>
        <trans-unit id="48267796da0925cc66914e24ff7b670270826077" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash which has the short bidi (bidirectional) type names (such as &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;) as keys and long names (such as &lt;code&gt;Left-to-Right&lt;/code&gt;, &lt;code&gt;Right-to-Left&lt;/code&gt;) as values. The hash is reversible in case you need to go from the long names to the short names. The bidi type is the one returned from &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt; under the &lt;code&gt;bidi&lt;/code&gt; key. For the exact meaning of the various bidi classes the Unicode TR9 is recommended reading: &lt;a href=&quot;http://www.unicode.org/reports/tr9/&quot;&gt;http://www.unicode.org/reports/tr9/&lt;/a&gt; (as of Unicode 5.0.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e684e737bcd2717e8bbc64c2a24292cf8407953" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash whose keys are all the distinct Unicode (no Perl extension) properties, and whose values are the respective values for those properties for the input &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6e4381af622706d0b561391364ef549fe16051" translate="yes" xml:space="preserve">
          <source>This returns a reference to a hash whose keys are all the distinct Unicode (no Perl extension) properties, and whose values are the respective values for those properties for the input &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;.</source>
          <target state="translated">Esto devuelve una referencia a un hash cuyas claves son todas las propiedades Unicode (sin extensi&amp;oacute;n Perl) distintas, y cuyos valores son los valores respectivos para esas propiedades para el &lt;a href=&quot;#code-point-argument&quot;&gt;argumento del punto de c&amp;oacute;digo de&lt;/a&gt; entrada .</target>
        </trans-unit>
        <trans-unit id="92aa49cb1c3f622edac6a155f13e38f83b6dfb08" translate="yes" xml:space="preserve">
          <source>This returns a scalar reference to the string that this token holds. This can be useful if you don't want to memory-copy the potentially large text value (well, as large as a paragraph or a verbatim block) as calling $token-&amp;gt;text would do.</source>
          <target state="translated">Esto devuelve una referencia escalar a la cadena que contiene este token. Esto puede ser &amp;uacute;til si no desea copiar en memoria el valor de texto potencialmente grande (bueno, tan grande como un p&amp;aacute;rrafo o un bloque literal) como lo har&amp;iacute;a llamar $ token-&amp;gt; text.</target>
        </trans-unit>
        <trans-unit id="34145279dcfb22813c0a829b74bb6750ab581547" translate="yes" xml:space="preserve">
          <source>This returns a string containing the version requirements for a given module in the format described in &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; or undef if the given module has no requirements. This should only be used for informational purposes such as error messages and should not be interpreted or used for comparison (see &lt;a href=&quot;#accepts_module&quot;&gt;&quot;accepts_module&quot;&lt;/a&gt; instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab22c2c85c0520c74858caf823a5761f4144c2f" translate="yes" xml:space="preserve">
          <source>This returns a string of the form &quot;AUTHORID/TARBALL&quot;. If you want the full path and filename to this distribution on a CPAN mirror, then it is &lt;code&gt;.../authors/id/A/AU/AUTHORID/TARBALL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd7e0058fbe245746ba269fcc6ddbdc3f189037" translate="yes" xml:space="preserve">
          <source>This returns a string reporting the $VERSION value from your module (and its classname) as well as the $VERSION value of Pod::Simple. Note that &lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; requires output formats (wherever possible) to note this detail in a comment in the output format. For example, for some kind of SGML output format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d7fbfdd37ad836b426c426d9f57674d28b607c" translate="yes" xml:space="preserve">
          <source>This returns a textual representation of the object (likely to b useful for deparsing and debugging), or an empty string if the op type doesn't support this. &lt;code&gt;cv&lt;/code&gt; is the &lt;code&gt;B::CV&lt;/code&gt; object representing the sub that the op is contained within.</source>
          <target state="translated">Esto devuelve una representaci&amp;oacute;n textual del objeto (probablemente sea &amp;uacute;til para analizar y depurar), o una cadena vac&amp;iacute;a si el tipo de operaci&amp;oacute;n no lo admite. &lt;code&gt;cv&lt;/code&gt; es el objeto &lt;code&gt;B::CV&lt;/code&gt; que representa el sub en el que est&amp;aacute; contenido la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="589c10ddf68513d199db67a67a86aebabd06473d" translate="yes" xml:space="preserve">
          <source>This returns all the case foldings in the current version of Unicode in the form of a reference to a hash. Each key to the hash is the decimal representation of a Unicode character that has a casefold to other than itself. The casefold of a semi-colon is itself, so it isn't in the hash; likewise for a lowercase &quot;a&quot;, but there is an entry for a capital &quot;A&quot;. The hash value for each key is another hash, identical to what is returned by &lt;a href=&quot;#casefold%28%29&quot;&gt;&quot;casefold()&quot;&lt;/a&gt; if called with that code point as its argument. So the value &lt;code&gt;all_casefolds()-&amp;gt;{ord(&quot;A&quot;)}'&lt;/code&gt; is equivalent to &lt;code&gt;casefold(ord(&quot;A&quot;))&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5163e24143304da0c24ab6f05ddab5463a924808" translate="yes" xml:space="preserve">
          <source>This returns all the case foldings in the current version of Unicode in the form of a reference to a hash. Each key to the hash is the decimal representation of a Unicode character that has a casefold to other than itself. The casefold of a semi-colon is itself, so it isn't in the hash; likewise for a lowercase &quot;a&quot;, but there is an entry for a capital &quot;A&quot;. The hash value for each key is another hash, identical to what is returned by &lt;a href=&quot;#casefold()&quot;&gt;casefold()&lt;/a&gt; if called with that code point as its argument. So the value &lt;code&gt;all_casefolds()-&amp;gt;{&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;)}'&lt;/code&gt; is equivalent to &lt;code&gt;casefold(&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;))&lt;/code&gt; ;</source>
          <target state="translated">Esto devuelve todos los pliegues de may&amp;uacute;sculas y min&amp;uacute;sculas en la versi&amp;oacute;n actual de Unicode en forma de referencia a un hash. Cada clave del hash es la representaci&amp;oacute;n decimal de un car&amp;aacute;cter Unicode que tiene un pliego distinto a s&amp;iacute; mismo. El pliego de casos de un punto y coma es en s&amp;iacute; mismo, por lo que no est&amp;aacute; en el hash; lo mismo ocurre con una &quot;a&quot; min&amp;uacute;scula, pero hay una entrada para una &quot;A&quot; may&amp;uacute;scula. El valor hash para cada clave es otro hash, id&amp;eacute;ntico al que devuelve &lt;a href=&quot;#casefold()&quot;&gt;casefold ()&lt;/a&gt; si se llama con ese punto de c&amp;oacute;digo como argumento. Entonces, el valor &lt;code&gt;all_casefolds()-&amp;gt;{&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;)}'&lt;/code&gt; es equivalente a &lt;code&gt;casefold(&lt;a href=&quot;../functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;A&quot;))&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="b91ef374b2d4fc8d006452914a0d544355b3b1bb" translate="yes" xml:space="preserve">
          <source>This returns information about the input &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt; as a reference to a hash of fields as defined by the Unicode standard. If the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt; is not assigned in the standard (i.e., has the general category &lt;code&gt;Cn&lt;/code&gt; meaning &lt;code&gt;Unassigned&lt;/code&gt;) or is a non-character (meaning it is guaranteed to never be assigned in the standard), &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc96752d9a4198cd2cf54c44f2b3b5b10b6e33c5" translate="yes" xml:space="preserve">
          <source>This returns information about the input &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt; as a reference to a hash of fields as defined by the Unicode standard. If the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt; is not assigned in the standard (i.e., has the general category &lt;code&gt;Cn&lt;/code&gt; meaning &lt;code&gt;Unassigned&lt;/code&gt; ) or is a non-character (meaning it is guaranteed to never be assigned in the standard), &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Esto devuelve informaci&amp;oacute;n sobre el &lt;a href=&quot;#code-point-argument&quot;&gt;argumento del punto de c&amp;oacute;digo de&lt;/a&gt; entrada como una referencia a un hash de campos seg&amp;uacute;n lo definido por el est&amp;aacute;ndar Unicode. Si el &lt;a href=&quot;#code-point-argument&quot;&gt;argumento del punto de c&amp;oacute;digo&lt;/a&gt; no est&amp;aacute; asignado en el est&amp;aacute;ndar (es decir, tiene la categor&amp;iacute;a general &lt;code&gt;Cn&lt;/code&gt; que significa &lt;code&gt;Unassigned&lt;/code&gt; ) o no es un car&amp;aacute;cter (lo que significa que se garantiza que nunca se asignar&amp;aacute; en el est&amp;aacute;ndar), se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="720b1f4304617aafa21c73583795df1e0c36847e" translate="yes" xml:space="preserve">
          <source>This returns key/value pairs. The key is the module name, the value is the version number. If the installed version of the module is at or below the specified one then an upgrade is required for the module to work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b8690d330c57f118fa7767021e234753523c18" translate="yes" xml:space="preserve">
          <source>This returns key/value pairs. The key is the module name, the value is the version number. If the installed version of the module is at or below the specified one then an upgrade would be a good idea, but not strictly necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f9c7b3513420a38f5822d9d3cf20a8ca38b03e" translate="yes" xml:space="preserve">
          <source>This returns key/value pairs. The key is the module name, the value is the version number. If the installed version of the module is at or below the specified one then the module will not work. A newer version may work, but is not tested or verified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bdf5cea17e905e3d66cdc8ddc0f9c868e3cf58" translate="yes" xml:space="preserve">
          <source>This returns the (almost) locale-independent case folding of the character specified by the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt;. (Starting in Perl v5.16, the core function &lt;code&gt;fc()&lt;/code&gt; returns the &lt;code&gt;full&lt;/code&gt; mapping (described below) faster than this does, and for entire strings.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb91ab331ab9de210b4db7e921e9ff160732003a" translate="yes" xml:space="preserve">
          <source>This returns the (almost) locale-independent case folding of the character specified by the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;. (Starting in Perl v5.16, the core function &lt;code&gt;&lt;a href=&quot;../functions/fc&quot;&gt;fc()&lt;/a&gt;&lt;/code&gt; returns the &lt;code&gt;full&lt;/code&gt; mapping (described below) faster than this does, and for entire strings.)</source>
          <target state="translated">Esto devuelve el plegado de may&amp;uacute;sculas y min&amp;uacute;sculas (casi) independiente de la configuraci&amp;oacute;n regional del car&amp;aacute;cter especificado por el &lt;a href=&quot;#code-point-argument&quot;&gt;argumento del punto de c&amp;oacute;digo&lt;/a&gt; . (A partir de Perl v5.16, la funci&amp;oacute;n principal &lt;code&gt;&lt;a href=&quot;../functions/fc&quot;&gt;fc()&lt;/a&gt;&lt;/code&gt; devuelve el mapeo &lt;code&gt;full&lt;/code&gt; (descrito a continuaci&amp;oacute;n) m&amp;aacute;s r&amp;aacute;pido que esto, y para cadenas completas).</target>
        </trans-unit>
        <trans-unit id="91677229ee695edb8db59966a9bf52f69db7141f" translate="yes" xml:space="preserve">
          <source>This returns the ExtUtils::Packlist object for the specified module.</source>
          <target state="translated">Esto devuelve el objeto ExtUtils::Packlist para el módulo especificado.</target>
        </trans-unit>
        <trans-unit id="dffc96fcce0657afd70270ea32ed9cfdcbbe0c11" translate="yes" xml:space="preserve">
          <source>This returns the arguments that should be used to construct the proper &lt;a href=&quot;Test2::EventFacet::Info&quot;&gt;Test2::EventFacet::Info&lt;/a&gt; structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc91311f7c5bdfc09fe1efb765e76b3d3c015ee2" translate="yes" xml:space="preserve">
          <source>This returns the count of Pod paragraphs seen so far.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaab350d04c0aa0ce59d8ea55f9203083f5944f" translate="yes" xml:space="preserve">
          <source>This returns the data structure used for tables by &lt;a href=&quot;Test2::EventFacet::Info&quot;&gt;Test2::EventFacet::Info&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c8292002290e5d7ad79eff5f6aca62a17b0302" translate="yes" xml:space="preserve">
          <source>This returns the file format version as number. It is a string like &quot;2.007&quot;. This value is suitable for numeric comparisons.</source>
          <target state="translated">Esto devuelve la versión del formato de archivo como número.Es una cadena como &quot;2.007&quot;.Este valor es adecuado para comparaciones numéricas.</target>
        </trans-unit>
        <trans-unit id="b28a3d3b844d30822d117ab98847259c42e20f28" translate="yes" xml:space="preserve">
          <source>This returns the file format version. It is a string like &quot;2.7&quot;.</source>
          <target state="translated">Esto devuelve la versión de formato de archivo.Es una cadena como &quot;2.7&quot;.</target>
        </trans-unit>
        <trans-unit id="88abd5e16e9b3ba61f0f89ea977172fa6b064d17" translate="yes" xml:space="preserve">
          <source>This returns the filename that this parser object was set to read from.</source>
          <target state="translated">Esto devuelve el nombre de archivo del que este objeto analizador fue configurado para leer.</target>
        </trans-unit>
        <trans-unit id="bccff29a1ac784a814e5e53a8041bdec5c902b0f" translate="yes" xml:space="preserve">
          <source>This returns the full path of the first occurrence to the file. Package names (eg 'A::B') are automatically converted to directory names in the selected directory. Additionally, '.pm', '.pl' and '.pod' are automatically appended to the search as required. (So, for example, under Unix, &quot;A::B&quot; is converted to &quot;somedir/A/B.pm&quot;, &quot;somedir/A/B.pod&quot;, or &quot;somedir/A/B.pl&quot;, as appropriate.)</source>
          <target state="translated">Esto devuelve la ruta completa de la primera ocurrencia al archivo.Los nombres de los paquetes (por ejemplo 'A::B')se convierten automáticamente en nombres de directorios en el directorio seleccionado.Además,'.pm','.pl' y '.pod' se añaden automáticamente a la búsqueda según sea necesario.(Así,por ejemplo,en Unix,&quot;A::B&quot; se convierte en &quot;somedir/A/B.pm&quot;,&quot;somedir/A/B.pod&quot;,o &quot;somedir/A/B.pl&quot;,según corresponda).</target>
        </trans-unit>
        <trans-unit id="2a501f04d237b4afdc751c24d97b1564c6c9be99" translate="yes" xml:space="preserve">
          <source>This returns the function name as a string (e.g. &quot;PL_ppaddr[OP_ADD]&quot;, &quot;PL_ppaddr[OP_RV2AV]&quot;).</source>
          <target state="translated">Esto devuelve el nombre de la función como una cadena (por ejemplo,&quot;PL_ppaddr[OP_ADD]&quot;,&quot;PL_ppaddr[OP_RV2AV]&quot;).</target>
        </trans-unit>
        <trans-unit id="a6c7ba8cdf1911985e871524f867f03a73878f39" translate="yes" xml:space="preserve">
          <source>This returns the given noun form which is appropriate for the quantity &lt;code&gt;$number&lt;/code&gt; according to this language's conventions. &lt;code&gt;numerate&lt;/code&gt; is used internally by &lt;code&gt;quant&lt;/code&gt; to quantify nouns. Use it directly -- usually from bracket notation -- to avoid &lt;code&gt;quant&lt;/code&gt; 's implicit call to &lt;code&gt;numf&lt;/code&gt; and output of a numeric quantity.</source>
          <target state="translated">Esto devuelve la forma nominal dada que es apropiada para la cantidad &lt;code&gt;$number&lt;/code&gt; acuerdo con las convenciones de este lenguaje. &lt;code&gt;numerate&lt;/code&gt; se utiliza internamente por &lt;code&gt;quant&lt;/code&gt; para cuantificar sustantivos. &amp;Uacute;selo directamente, generalmente desde la notaci&amp;oacute;n entre corchetes, para evitar la llamada impl&amp;iacute;cita de &lt;code&gt;quant&lt;/code&gt; a &lt;code&gt;numf&lt;/code&gt; y la salida de una cantidad num&amp;eacute;rica.</target>
        </trans-unit>
        <trans-unit id="f3221ea44d138b99a98ddd26d5fa0b5a10d585e1" translate="yes" xml:space="preserve">
          <source>This returns the given noun form which is appropriate for the quantity &lt;code&gt;$number&lt;/code&gt; according to this language's conventions. &lt;code&gt;numerate&lt;/code&gt; is used internally by &lt;code&gt;quant&lt;/code&gt; to quantify nouns. Use it directly -- usually from bracket notation -- to avoid &lt;code&gt;quant&lt;/code&gt;'s implicit call to &lt;code&gt;numf&lt;/code&gt; and output of a numeric quantity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecd76e9b7635df85484a01189e6a2f492cf6d79" translate="yes" xml:space="preserve">
          <source>This returns the given number formatted nicely according to this language's conventions. Maketext's default method is mostly to just take the normal string form of the number (applying sprintf &quot;%G&quot; for only very large numbers), and then to add commas as necessary. (Except that we apply &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/,./.,/&lt;/a&gt;&lt;/code&gt; if $language-&amp;gt;{'numf_comma'} is true; that's a bit of a hack that's useful for languages that express two million as &quot;2.000.000&quot; and not as &quot;2,000,000&quot;).</source>
          <target state="translated">Esto devuelve el n&amp;uacute;mero dado formateado muy bien de acuerdo con las convenciones de este lenguaje. El m&amp;eacute;todo predeterminado de Maketext es principalmente tomar la forma de cadena normal del n&amp;uacute;mero (aplicando sprintf &quot;% G&quot; solo para n&amp;uacute;meros muy grandes), y luego agregar comas seg&amp;uacute;n sea necesario. (Excepto que aplicamos &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/,./.,/&lt;/a&gt;&lt;/code&gt; si $ language -&amp;gt; {'numf_comma'} es verdadero; eso es un truco que es &amp;uacute;til para idiomas que expresan dos millones como &quot;2.000.000&quot; y no como &quot; 2.000.000 &quot;).</target>
        </trans-unit>
        <trans-unit id="05a83ab19e6c9cde5d56340c6947ca203501a3b8" translate="yes" xml:space="preserve">
          <source>This returns the given number formatted nicely according to this language's conventions. Maketext's default method is mostly to just take the normal string form of the number (applying sprintf &quot;%G&quot; for only very large numbers), and then to add commas as necessary. (Except that we apply &lt;code&gt;tr/,./.,/&lt;/code&gt; if $language-&amp;gt;{'numf_comma'} is true; that's a bit of a hack that's useful for languages that express two million as &quot;2.000.000&quot; and not as &quot;2,000,000&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025fac90217d4ce617ea39a22bf3a99d01ca61a8" translate="yes" xml:space="preserve">
          <source>This returns the hashref that is the attribute set for this start-token. This is useful if (for example) you want to ask what all the attributes are -- you can just do &lt;code&gt;&lt;a href=&quot;../../functions/keys&quot;&gt;keys&lt;/a&gt; %{$token-&amp;gt;attr_hash}&lt;/code&gt;</source>
          <target state="translated">Esto devuelve el hashref que es el atributo establecido para este token de inicio. Esto es &amp;uacute;til si (por ejemplo) desea preguntar cu&amp;aacute;les son todos los atributos; solo puede hacer &lt;code&gt;&lt;a href=&quot;../../functions/keys&quot;&gt;keys&lt;/a&gt; %{$token-&amp;gt;attr_hash}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c00d82623e18153d6a353f47395dae6583b5a22" translate="yes" xml:space="preserve">
          <source>This returns the hashref that is the attribute set for this start-token. This is useful if (for example) you want to ask what all the attributes are -- you can just do &lt;code&gt;keys %{$token-&amp;gt;attr_hash}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a1d54ba9e2a0e72117dea2ff05555485f06342" translate="yes" xml:space="preserve">
          <source>This returns the name of the associated .packlist file</source>
          <target state="translated">Esto devuelve el nombre del archivo .packlist asociado</target>
        </trans-unit>
        <trans-unit id="1e09dcd49b996b5c9c29c7bd188efbeaabae3afb" translate="yes" xml:space="preserve">
          <source>This returns the next token object (which will be of a subclass of &lt;a href=&quot;Pod::Simple::PullParserToken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt;), or undef if the parser-stream has hit the end of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8714a4ea9c89be9e02bb0a484046217a2fdc2659" translate="yes" xml:space="preserve">
          <source>This returns the next token object (which will be of a subclass of &lt;a href=&quot;pullparsertoken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt;), or undef if the parser-stream has hit the end of the document.</source>
          <target state="translated">Esto devuelve el siguiente objeto token (que ser&amp;aacute; de una subclase de &lt;a href=&quot;pullparsertoken&quot;&gt;Pod :: Simple :: PullParserToken&lt;/a&gt; ), o undef si el flujo del analizador ha llegado al final del documento.</target>
        </trans-unit>
        <trans-unit id="db9439ac80b35bc802acd8f20ce2c7390e307d09" translate="yes" xml:space="preserve">
          <source>This returns the op description from the global C PL_op_desc array (e.g. &quot;addition&quot; &quot;array deref&quot;).</source>
          <target state="translated">Esto devuelve la descripción de la operación de la matriz global C PL_op_desc (por ejemplo,&quot;adición&quot; &quot;matriz deref&quot;).</target>
        </trans-unit>
        <trans-unit id="5681c12774f7d1547e4176d6eccb3ccd12074a1f" translate="yes" xml:space="preserve">
          <source>This returns the op name as a string (e.g. &quot;add&quot;, &quot;rv2av&quot;).</source>
          <target state="translated">Esto devuelve el nombre de la operación como una cadena (por ejemplo,&quot;add&quot;,&quot;rv2av&quot;).</target>
        </trans-unit>
        <trans-unit id="c03ab2186d312ee9f05759433ffaba12c8dd3636" translate="yes" xml:space="preserve">
          <source>This returns the potentially locale-dependent case mappings of the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt;. The mappings may be longer than a single code point (which the basic Unicode case mappings as returned by &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt; never are).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c24d1c30b8541d36722cb533fdf5d0b9d4b051d" translate="yes" xml:space="preserve">
          <source>This returns the potentially locale-dependent case mappings of the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;. The mappings may be longer than a single code point (which the basic Unicode case mappings as returned by &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt; never are).</source>
          <target state="translated">Esto devuelve las asignaciones de casos potencialmente dependientes de la configuraci&amp;oacute;n regional del &lt;a href=&quot;#code-point-argument&quot;&gt;argumento de punto de c&amp;oacute;digo&lt;/a&gt; . Las asignaciones pueden ser m&amp;aacute;s largas que un solo punto de c&amp;oacute;digo (que las asignaciones b&amp;aacute;sicas de casos Unicode devueltas por &lt;a href=&quot;#charinfo()&quot;&gt;charinfo ()&lt;/a&gt; nunca lo son).</target>
        </trans-unit>
        <trans-unit id="64bc8ef0666e73530b9a3f2cd195ef738c2d8851" translate="yes" xml:space="preserve">
          <source>This returns the string form of the table if it was set, otherwise it returns the string &lt;code&gt;&quot;&amp;lt;TABLE NOT DISPLAYED&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e407d9572ab9c5f99771767ba652986d36609117" translate="yes" xml:space="preserve">
          <source>This returns the tagname for this end-token object. For example, parsing a &quot;=head1 ...&quot; line will give you a start-token with the tagname of &quot;head1&quot;, token(s) for its content, and then an end-token with the tagname of &quot;head1&quot;.</source>
          <target state="translated">Esto devuelve el nombre de la etiqueta para este objeto final.Por ejemplo,analizando una línea &quot;=head1 ...&quot; se obtiene un inicio con el nombre de la etiqueta de &quot;head1&quot;,una o varias fichas para su contenido,y luego un final con el nombre de la etiqueta de &quot;head1&quot;.</target>
        </trans-unit>
        <trans-unit id="1457f9cf582cb43f3b8ece06b77a4a774ea5edd5" translate="yes" xml:space="preserve">
          <source>This returns the tagname for this start-token object. For example, parsing a &quot;=head1 ...&quot; line will give you a start-token with the tagname of &quot;head1&quot;, token(s) for its content, and then an end-token with the tagname of &quot;head1&quot;.</source>
          <target state="translated">Esto devuelve el nombre de la etiqueta para este objeto de inicio.Por ejemplo,analizando una línea &quot;=cabeza1...&quot; se obtiene un inicio con el nombre de la etiqueta de &quot;cabeza1&quot;,una o varias fichas para su contenido y un final con el nombre de la etiqueta de &quot;cabeza1&quot;.</target>
        </trans-unit>
        <trans-unit id="a92df26815537e43f9c0925776fd61d439836096" translate="yes" xml:space="preserve">
          <source>This returns the text that this token holds. For example, parsing C&amp;lt;foo&amp;gt; will return a C start-token, a text-token, and a C end-token. And if you want to get the &quot;foo&quot; out of the text-token, call &lt;code&gt;$token-&amp;gt;text&lt;/code&gt;</source>
          <target state="translated">Esto devuelve el texto que contiene este token. Por ejemplo, el an&amp;aacute;lisis de C &amp;lt;foo&amp;gt; devolver&amp;aacute; un token de inicio C, un token de texto y un token final C. Y si quieres sacar el &quot;foo&quot; del token de texto, llama a &lt;code&gt;$token-&amp;gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37adaa267b32499cf66804411e8414b1ad1805e1" translate="yes" xml:space="preserve">
          <source>This returns the thread's context in the same manner as &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt;.</source>
          <target state="translated">Esto devuelve el contexto del hilo de la misma manera que &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cadb33aaeb1401584260a466e314c67532c002d6" translate="yes" xml:space="preserve">
          <source>This returns the thread's context in the same manner as &lt;a href=&quot;perlfunc#wantarray&quot;&gt;wantarray()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65fe0dbb6e214f3cd7dbd02a6dc6c382b0c30da" translate="yes" xml:space="preserve">
          <source>This returns the type of the token. This will be either the string &quot;start&quot;, the string &quot;text&quot;, or the string &quot;end&quot;.</source>
          <target state="translated">Esto devuelve el tipo de la ficha.Esta será la cadena &quot;inicio&quot;,la cadena &quot;texto&quot;,o la cadena &quot;final&quot;.</target>
        </trans-unit>
        <trans-unit id="11b6f6f063cb5805a948af38969c126392d218a6" translate="yes" xml:space="preserve">
          <source>This returns the value of the</source>
          <target state="translated">Esto devuelve el valor de la</target>
        </trans-unit>
        <trans-unit id="58c9aa25d44f77824a03159b1475adf1a9714a16" translate="yes" xml:space="preserve">
          <source>This returns the value of the Unicode property given by the second parameter for the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt; given by the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7567ac847e3dd9703ee4f767f192a1f4433a0b" translate="yes" xml:space="preserve">
          <source>This returns the value of the Unicode property given by the second parameter for the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt; given by the first.</source>
          <target state="translated">Esto devuelve el valor de la propiedad Unicode dado por el segundo par&amp;aacute;metro para el &lt;a href=&quot;#code-point-argument&quot;&gt;argumento de punto de c&amp;oacute;digo&lt;/a&gt; dado por el primero.</target>
        </trans-unit>
        <trans-unit id="00254886c0f76de134b6342f6c209f119eee2c52" translate="yes" xml:space="preserve">
          <source>This returns the version number for the specified module.</source>
          <target state="translated">Esto devuelve el número de versión del módulo especificado.</target>
        </trans-unit>
        <trans-unit id="28cb21f0ce04fc34237dafa4d05afb66efd55c58" translate="yes" xml:space="preserve">
          <source>This returns the version of the Unicode Character Database, in other words, the version of the Unicode standard the database implements. The version is a string of numbers delimited by dots (&lt;code&gt;'.'&lt;/code&gt; ).</source>
          <target state="translated">Esto devuelve la versi&amp;oacute;n de la base de datos de caracteres Unicode, en otras palabras, la versi&amp;oacute;n del est&amp;aacute;ndar Unicode que implementa la base de datos. La versi&amp;oacute;n es una cadena de n&amp;uacute;meros delimitada por puntos ( &lt;code&gt;'.'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a289cd11d045f8591acb29dd41933e8954d58596" translate="yes" xml:space="preserve">
          <source>This returns the version of the Unicode Character Database, in other words, the version of the Unicode standard the database implements. The version is a string of numbers delimited by dots (&lt;code&gt;'.'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0537cb9604bd46fdc53aedf1ef4d31156ea69d21" translate="yes" xml:space="preserve">
          <source>This returns true if &lt;code&gt;$parser&lt;/code&gt; has read from a source, and come to the end of that source.</source>
          <target state="translated">Esto devuelve verdadero si &lt;code&gt;$parser&lt;/code&gt; ha le&amp;iacute;do de una fuente y llega al final de esa fuente.</target>
        </trans-unit>
        <trans-unit id="d892085e64119e5b73847e052d7936e4ec27fd45" translate="yes" xml:space="preserve">
          <source>This returns true if &lt;code&gt;$parser&lt;/code&gt; has read from a source, and has seen Pod content in it.</source>
          <target state="translated">Esto devuelve verdadero si &lt;code&gt;$parser&lt;/code&gt; ha le&amp;iacute;do de una fuente y ha visto contenido de Pod en ella.</target>
        </trans-unit>
        <trans-unit id="0b811ea00850392c2bee3b4f40af1e1b677b7142" translate="yes" xml:space="preserve">
          <source>This returns true only if there has been any real content seen for this document. Returns false in cases where the document contains content, but does not make use of any Pod markup.</source>
          <target state="translated">Esto sólo es cierto si se ha visto algún contenido real para este documento.Devuelve falso en los casos en que el documento contiene contenido,pero no hace uso de ninguna marca de Pod.</target>
        </trans-unit>
        <trans-unit id="e28605a00b749132376858f485353c17ca2a0f0d" translate="yes" xml:space="preserve">
          <source>This routine also returns a different number of arguments depending on the success or failure of the call to statfs. If there is an error, the error number is returned as a single-element array. If the call is successful, then a 7-element array is returned. Since only one argument is passed into this function, we need room on the stack to hold the 7 values which may be returned.</source>
          <target state="translated">Esta rutina también devuelve un número diferente de argumentos dependiendo del éxito o el fracaso de la llamada a los statfs.Si hay un error,el número de error se devuelve como una matriz de un solo elemento.Si la llamada tiene éxito,entonces se devuelve una matriz de 7 elementos.Dado que sólo se pasa un argumento a esta función,necesitamos espacio en la pila para guardar los 7 valores que pueden ser devueltos.</target>
        </trans-unit>
        <trans-unit id="5b820e747b00eb7161f8b3a6555a694bd263c329" translate="yes" xml:space="preserve">
          <source>This routine behaves identically to the final two forms. That is, it does not return &lt;b&gt;true&lt;/b&gt; if the code point has a decomposition consisting of another single code point, nor if its decomposition starts with a code point whose combining class is non-zero. Code points that meet either of these conditions should also not be produced by composition normalization, which is probably why you should use the &lt;code&gt;Full_Composition_Exclusion&lt;/code&gt; property instead, as shown above.</source>
          <target state="translated">Esta rutina se comporta de forma id&amp;eacute;ntica a las dos &amp;uacute;ltimas formas. Es decir, no devuelve &lt;b&gt;verdadero&lt;/b&gt; si el punto de c&amp;oacute;digo tiene una descomposici&amp;oacute;n que consiste en otro punto de c&amp;oacute;digo &amp;uacute;nico, ni si su descomposici&amp;oacute;n comienza con un punto de c&amp;oacute;digo cuya clase de combinaci&amp;oacute;n no es cero. Los puntos de c&amp;oacute;digo que cumplen con cualquiera de estas condiciones tampoco deber&amp;iacute;an producirse mediante la normalizaci&amp;oacute;n de la composici&amp;oacute;n, por lo que probablemente deber&amp;iacute;a utilizar la propiedad &lt;code&gt;Full_Composition_Exclusion&lt;/code&gt; en su lugar, como se muestra arriba.</target>
        </trans-unit>
        <trans-unit id="e6cbcd70e8dd9e2b5edee3c69038ed73e9a903ad" translate="yes" xml:space="preserve">
          <source>This routine checks to see what types of magic &lt;code&gt;sv&lt;/code&gt; has. If the mg_type field is an uppercase letter, then the mg_obj is copied to &lt;code&gt;nsv&lt;/code&gt; , but the mg_type field is changed to be the lowercase letter.</source>
          <target state="translated">Esta rutina comprueba qu&amp;eacute; tipos de magia tiene &lt;code&gt;sv&lt;/code&gt; . Si el campo mg_type es una letra may&amp;uacute;scula, mg_obj se copia a &lt;code&gt;nsv&lt;/code&gt; , pero el campo mg_type se cambia para que sea la letra min&amp;uacute;scula.</target>
        </trans-unit>
        <trans-unit id="e4ebc0f1624cad62f6320cad80e7fcee1daed490" translate="yes" xml:space="preserve">
          <source>This routine checks to see what types of magic &lt;code&gt;sv&lt;/code&gt; has. If the mg_type field is an uppercase letter, then the mg_obj is copied to &lt;code&gt;nsv&lt;/code&gt;, but the mg_type field is changed to be the lowercase letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1147ded4271f3785411e40a784f62228ae86794d" translate="yes" xml:space="preserve">
          <source>This routine expects a single parameter--a reference to a subroutine or variable. It returns a list of attributes, which may be empty. If passed invalid arguments, it uses die() (via &lt;a href=&quot;carp&quot;&gt;Carp::croak&lt;/a&gt;) to raise a fatal exception. If it can find an appropriate package name for a class method lookup, it will include the results from a &lt;code&gt;FETCH_&lt;i&gt;type&lt;/i&gt;_ATTRIBUTES&lt;/code&gt; call in its return list, as described in &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;&quot;Package-specific Attribute Handling&quot;&lt;/a&gt; below. Otherwise, only &lt;a href=&quot;#Built-in-Attributes&quot;&gt;built-in attributes&lt;/a&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156fe43e5f5152548ce6f33bee1b7f0723071b2f" translate="yes" xml:space="preserve">
          <source>This routine expects a single parameter--a reference to a subroutine or variable. It returns a list of attributes, which may be empty. If passed invalid arguments, it uses die() (via &lt;a href=&quot;carp&quot;&gt;Carp::croak&lt;/a&gt;) to raise a fatal exception. If it can find an appropriate package name for a class method lookup, it will include the results from a &lt;code&gt;FETCH_&lt;i&gt;type&lt;/i&gt;_ATTRIBUTES&lt;/code&gt; call in its return list, as described in &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;Package-specific Attribute Handling&lt;/a&gt; below. Otherwise, only &lt;a href=&quot;#Built-in-Attributes&quot;&gt;built-in attributes&lt;/a&gt; will be returned.</source>
          <target state="translated">Esta rutina espera un &amp;uacute;nico par&amp;aacute;metro: una referencia a una subrutina o variable. Devuelve una lista de atributos, que puede estar vac&amp;iacute;a. Si se pasan argumentos inv&amp;aacute;lidos, usa die () (a trav&amp;eacute;s de &lt;a href=&quot;carp&quot;&gt;Carp :: croak&lt;/a&gt; ) para generar una excepci&amp;oacute;n fatal. Si puede encontrar un nombre de paquete apropiado para una b&amp;uacute;squeda de m&amp;eacute;todo de clase, incluir&amp;aacute; los resultados de una llamada &lt;code&gt;FETCH_&lt;i&gt;type&lt;/i&gt;_ATTRIBUTES&lt;/code&gt; en su lista de retorno, como se describe en &lt;a href=&quot;#Package-specific-Attribute-Handling&quot;&gt;Manejo de atributos espec&amp;iacute;ficos del paquete a&lt;/a&gt; continuaci&amp;oacute;n. De lo contrario, solo se devolver&amp;aacute;n los &lt;a href=&quot;#Built-in-Attributes&quot;&gt;atributos integrados&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1cbd8c6e15630953581b673b778fa0654a81555" translate="yes" xml:space="preserve">
          <source>This routine expects a single parameter--a reference to a subroutine or variable. It returns the built-in type of the referenced variable, ignoring any package into which it might have been blessed. This can be useful for determining the</source>
          <target state="translated">Esta rutina espera un único parámetro...una referencia a una subrutina o variable.Devuelve el tipo incorporado de la variable referenciada,ignorando cualquier paquete en el que pudiera haber sido bendecida.Esto puede ser útil para determinar el</target>
        </trans-unit>
        <trans-unit id="a441bbdb5a22183756c86532b0bd8538c60db634" translate="yes" xml:space="preserve">
          <source>This routine is automatically used whenever a scalar is required:</source>
          <target state="translated">Esta rutina se utiliza automáticamente siempre que se requiere un escalar:</target>
        </trans-unit>
        <trans-unit id="9d5c36985c03c1b5c7bc41a618c507ece2116559" translate="yes" xml:space="preserve">
          <source>This routine is just a simple interface into GetOSVersion(). More specific or demanding situations should use that instead. Another option would be to use POSIX::uname(), however the latter appears to report only the OS family name and not the specific OS. In scalar context it returns just the ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af05f40d5a349a9cf28386764e38317c02e23a0c" translate="yes" xml:space="preserve">
          <source>This routine provides word completion on the list of words in the array (or array ref).</source>
          <target state="translated">Esta rutina permite completar la lista de palabras de la matriz (o la matriz ref).</target>
        </trans-unit>
        <trans-unit id="a12916af343198cbe644e34418361cddb6245ff7" translate="yes" xml:space="preserve">
          <source>This routine returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the Unicode version being used is so early that it doesn't have this property.</source>
          <target state="translated">Esta rutina devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si la versi&amp;oacute;n Unicode que se est&amp;aacute; utilizando es tan temprana que no tiene esta propiedad.</target>
        </trans-unit>
        <trans-unit id="3f4e8ad32963f7898d4d526c86c643ef2d8a5ac8" translate="yes" xml:space="preserve">
          <source>This routine returns &lt;code&gt;undef&lt;/code&gt; if the Unicode version being used is so early that it doesn't have this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101ceccec63478c5c011c3caa8244abb6108d41c" translate="yes" xml:space="preserve">
          <source>This routine returns a pointer to a &lt;code&gt;MAGIC&lt;/code&gt; structure stored in the SV. If the SV does not have that magical feature, &lt;code&gt;NULL&lt;/code&gt; is returned. If the SV has multiple instances of that magical feature, the first one will be returned. &lt;code&gt;mg_findext&lt;/code&gt; can be used to find a &lt;code&gt;MAGIC&lt;/code&gt; structure of an SV based on both its magic type and its magic virtual table:</source>
          <target state="translated">Esta rutina devuelve un puntero a una estructura &lt;code&gt;MAGIC&lt;/code&gt; almacenada en el SV. Si el SV no tiene esa caracter&amp;iacute;stica m&amp;aacute;gica, se devuelve &lt;code&gt;NULL&lt;/code&gt; . Si el SV tiene varias instancias de esa caracter&amp;iacute;stica m&amp;aacute;gica, se devolver&amp;aacute; la primera. &lt;code&gt;mg_findext&lt;/code&gt; se puede utilizar para encontrar una estructura &lt;code&gt;MAGIC&lt;/code&gt; de un SV basada tanto en su tipo m&amp;aacute;gico como en su tabla virtual m&amp;aacute;gica:</target>
        </trans-unit>
        <trans-unit id="be064f7d7fc8c5c81c03e6f7693444f3da761d4d" translate="yes" xml:space="preserve">
          <source>This runs all the given</source>
          <target state="translated">Esto se aplica a todos los</target>
        </trans-unit>
        <trans-unit id="5f9d330768a086b11c3fee8aaebb21d2fcbcb969" translate="yes" xml:space="preserve">
          <source>This runs some basic sanity tests on the source tree and helps catch basic errors before you submit a patch.</source>
          <target state="translated">Esto ejecuta algunas pruebas de cordura básica en el árbol fuente y ayuda a detectar errores básicos antes de enviar un parche.</target>
        </trans-unit>
        <trans-unit id="b456dbbb28104ac1fe79034d2719d013d951db2d" translate="yes" xml:space="preserve">
          <source>This safer version of &lt;a href=&quot;#chop&quot;&gt;chop&lt;/a&gt; removes any trailing string that corresponds to the current value of &lt;code&gt;$/&lt;/code&gt; (also known as $INPUT_RECORD_SEPARATOR in the &lt;code&gt;English&lt;/code&gt; module). It returns the total number of characters removed from all its arguments. It's often used to remove the newline from the end of an input record when you're worried that the final record may be missing its newline. When in paragraph mode (&lt;code&gt;$/ = ''&lt;/code&gt; ), it removes all trailing newlines from the string. When in slurp mode (&lt;code&gt;$/ = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) or fixed-length record mode (&lt;code&gt;$/&lt;/code&gt; is a reference to an integer or the like; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;) chomp() won't remove anything. If VARIABLE is omitted, it chomps &lt;code&gt;$_&lt;/code&gt; . Example:</source>
          <target state="translated">Esta versi&amp;oacute;n m&amp;aacute;s segura de &lt;a href=&quot;#chop&quot;&gt;chop&lt;/a&gt; elimina cualquier cadena final que corresponda al valor actual de &lt;code&gt;$/&lt;/code&gt; (tambi&amp;eacute;n conocido como $ INPUT_RECORD_SEPARATOR en el m&amp;oacute;dulo en &lt;code&gt;English&lt;/code&gt; ). Devuelve el n&amp;uacute;mero total de caracteres eliminados de todos sus argumentos. A menudo se utiliza para eliminar la nueva l&amp;iacute;nea del final de un registro de entrada cuando le preocupa que el registro final pueda perder su nueva l&amp;iacute;nea. Cuando est&amp;aacute; en modo p&amp;aacute;rrafo ( &lt;code&gt;$/ = ''&lt;/code&gt; ), elimina todas las nuevas l&amp;iacute;neas finales de la cadena. Cuando est&amp;aacute; en modo slurp ( &lt;code&gt;$/ = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) o modo de registro de longitud fija ( &lt;code&gt;$/&lt;/code&gt; es una referencia a un n&amp;uacute;mero entero o similar; vea &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; ) chomp () no eliminar&amp;aacute; nada. Si se omite VARIABLE, muerde &lt;code&gt;$_&lt;/code&gt; . Ejemplo:</target>
        </trans-unit>
        <trans-unit id="f11cb2092730214fd2c5570df1288f5c170ff762" translate="yes" xml:space="preserve">
          <source>This safer version of &lt;a href=&quot;#chop-VARIABLE&quot;&gt;&lt;code&gt;chop&lt;/code&gt;&lt;/a&gt; removes any trailing string that corresponds to the current value of &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; (also known as &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; in the &lt;a href=&quot;english&quot;&gt;&lt;code&gt;English&lt;/code&gt;&lt;/a&gt; module). It returns the total number of characters removed from all its arguments. It's often used to remove the newline from the end of an input record when you're worried that the final record may be missing its newline. When in paragraph mode (&lt;code&gt;$/ = ''&lt;/code&gt;), it removes all trailing newlines from the string. When in slurp mode (&lt;code&gt;$/ = undef&lt;/code&gt;) or fixed-length record mode (&lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; is a reference to an integer or the like; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;), &lt;a href=&quot;#chomp-VARIABLE&quot;&gt;&lt;code&gt;chomp&lt;/code&gt;&lt;/a&gt; won't remove anything. If VARIABLE is omitted, it chomps &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade7671cda06ea60596db7de673c42e7e9809682" translate="yes" xml:space="preserve">
          <source>This safer version of &lt;a href=&quot;chop&quot;&gt;chop&lt;/a&gt; removes any trailing string that corresponds to the current value of &lt;code&gt;$/&lt;/code&gt; (also known as $INPUT_RECORD_SEPARATOR in the &lt;code&gt;English&lt;/code&gt; module). It returns the total number of characters removed from all its arguments. It's often used to remove the newline from the end of an input record when you're worried that the final record may be missing its newline. When in paragraph mode (&lt;code&gt;$/ = ''&lt;/code&gt; ), it removes all trailing newlines from the string. When in slurp mode (&lt;code&gt;$/ = &lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) or fixed-length record mode (&lt;code&gt;$/&lt;/code&gt; is a reference to an integer or the like; see &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;) chomp() won't remove anything. If VARIABLE is omitted, it chomps &lt;code&gt;$_&lt;/code&gt; . Example:</source>
          <target state="translated">Esta versi&amp;oacute;n m&amp;aacute;s segura de &lt;a href=&quot;chop&quot;&gt;chop&lt;/a&gt; elimina cualquier cadena final que corresponda al valor actual de &lt;code&gt;$/&lt;/code&gt; (tambi&amp;eacute;n conocido como $ INPUT_RECORD_SEPARATOR en el m&amp;oacute;dulo en &lt;code&gt;English&lt;/code&gt; ). Devuelve el n&amp;uacute;mero total de caracteres eliminados de todos sus argumentos. A menudo se utiliza para eliminar la nueva l&amp;iacute;nea del final de un registro de entrada cuando le preocupa que el registro final pueda perder su nueva l&amp;iacute;nea. Cuando est&amp;aacute; en modo p&amp;aacute;rrafo ( &lt;code&gt;$/ = ''&lt;/code&gt; ), elimina todas las nuevas l&amp;iacute;neas finales de la cadena. Cuando est&amp;aacute; en modo slurp ( &lt;code&gt;$/ = &lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) o modo de registro de longitud fija ( &lt;code&gt;$/&lt;/code&gt; es una referencia a un n&amp;uacute;mero entero o similar; vea &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; ) chomp () no eliminar&amp;aacute; nada. Si se omite VARIABLE, muerde &lt;code&gt;$_&lt;/code&gt; . Ejemplo:</target>
        </trans-unit>
        <trans-unit id="29322e1fae611c7a4ec6b18f01c0e5539c007dbe" translate="yes" xml:space="preserve">
          <source>This same method is available from pure perl via, &lt;code&gt;mro::method_changed_in(classname)&lt;/code&gt; .</source>
          <target state="translated">Este mismo m&amp;eacute;todo est&amp;aacute; disponible en perl puro a trav&amp;eacute;s de &lt;code&gt;mro::method_changed_in(classname)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3881ba4a6ee9c9f7a39f8b6e30cf077c3df62fb1" translate="yes" xml:space="preserve">
          <source>This same method is available from pure perl via, &lt;code&gt;mro::method_changed_in(classname)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a4db1ab47139698e5958a2175645481a1041ec" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is a reference (ROK), which points to another SV which is a PVAV, an array. The array has one element, element zero, which is another SV. The field &lt;code&gt;FILL&lt;/code&gt; above indicates the last element in the array, similar to &lt;code&gt;$#$a&lt;/code&gt; .</source>
          <target state="translated">Esto dice que &lt;code&gt;$a&lt;/code&gt; es una referencia (ROK), que apunta a otro SV que es un PVAV, una matriz. La matriz tiene un elemento, el elemento cero, que es otro SV. El campo &lt;code&gt;FILL&lt;/code&gt; de arriba indica el &amp;uacute;ltimo elemento de la matriz, similar a &lt;code&gt;$#$a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9184d54b5dc37c9e6366802801d705be70172a95" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is a reference (ROK), which points to another SV which is a PVAV, an array. The array has one element, element zero, which is another SV. The field &lt;code&gt;FILL&lt;/code&gt; above indicates the last element in the array, similar to &lt;code&gt;$#$a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036ebde834d76ddc89809412a48e08bc1aad5dd1" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is an SV, a scalar. The scalar is an IV, a number. Its reference count is 1. It has the &lt;code&gt;IOK&lt;/code&gt; flag set, meaning it is currently being evaluated as a number. Because IOK is set we look at the IV item to see what is in the scalar.</source>
          <target state="translated">Esto dice que &lt;code&gt;$a&lt;/code&gt; es un SV, un escalar. El escalar es un IV, un n&amp;uacute;mero. Su recuento de referencia es 1. Tiene la bandera &lt;code&gt;IOK&lt;/code&gt; establecida, lo que significa que actualmente se est&amp;aacute; evaluando como un n&amp;uacute;mero. Debido a que IOK est&amp;aacute; configurado, miramos el elemento IV para ver qu&amp;eacute; hay en el escalar.</target>
        </trans-unit>
        <trans-unit id="2536195f9e270d7a0608ccd9b92c67b39acf3e86" translate="yes" xml:space="preserve">
          <source>This says &lt;code&gt;$a&lt;/code&gt; is an SV, a scalar. The scalar type is a PVIV, which is capable of holding an integer (IV) and/or a string (PV) value. The scalar's head is allocated at address 0xbe9a8, while the body is at 0xbc288. Its reference count is 1. It has the &lt;code&gt;POK&lt;/code&gt; flag set, meaning its current PV field is valid. Because POK is set we look at the PV item to see what is in the scalar. The \0 at the end indicate that this PV is properly NUL-terminated. Note that the IV field still contains its old numeric value, but because FLAGS doesn't have IOK set, we must ignore the IV item. CUR indicates the number of characters in the PV. LEN indicates the number of bytes allocated for the PV (at least one more than CUR, because LEN includes an extra byte for the end-of-string marker, then usually rounded up to some efficient allocation unit).</source>
          <target state="translated">Esto dice que &lt;code&gt;$a&lt;/code&gt; es un SV, un escalar. El tipo escalar es un PVIV, que es capaz de contener un valor entero (IV) y / o una cadena (PV). La cabeza del escalar se asigna en la direcci&amp;oacute;n 0xbe9a8, mientras que el cuerpo est&amp;aacute; en 0xbc288. Su recuento de referencias es 1. Tiene el &lt;code&gt;POK&lt;/code&gt; bandera establecida, lo que significa que su campo PV actual es v&amp;aacute;lido. Debido a que POK est&amp;aacute; configurado, miramos el elemento PV para ver qu&amp;eacute; hay en el escalar. El \ 0 al final indica que este PV est&amp;aacute; correctamente terminado en NUL. Tenga en cuenta que el campo IV todav&amp;iacute;a contiene su antiguo valor num&amp;eacute;rico, pero debido a que FLAGS no tiene configurado IOK, debemos ignorar el elemento IV. CUR indica el n&amp;uacute;mero de caracteres en el PV. LEN indica el n&amp;uacute;mero de bytes asignados para el PV (al menos uno m&amp;aacute;s que CUR, porque LEN incluye un byte adicional para el marcador de fin de cadena, luego generalmente se redondea a alguna unidad de asignaci&amp;oacute;n eficiente).</target>
        </trans-unit>
        <trans-unit id="d4038eb2f65cf90ff5c5db0ff06612a08d942853" translate="yes" xml:space="preserve">
          <source>This says that records are delimited by the string &lt;code&gt;es&lt;/code&gt; . If the file contained the following data:</source>
          <target state="translated">Esto dice que los registros est&amp;aacute;n delimitados por la cadena &lt;code&gt;es&lt;/code&gt; . Si el archivo conten&amp;iacute;a los siguientes datos:</target>
        </trans-unit>
        <trans-unit id="e7ff66ceeac2fbc00d45f5c00f7c3466cddbfb77" translate="yes" xml:space="preserve">
          <source>This says that records are delimited by the string &lt;code&gt;es&lt;/code&gt;. If the file contained the following data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f732b3da7c2a158f6a684ddbc311ca908a5e5b" translate="yes" xml:space="preserve">
          <source>This says what packages are internal to Perl. &lt;code&gt;Carp&lt;/code&gt; will never report an error as being from a line in a package that is internal to Perl. For example:</source>
          <target state="translated">Esto dice qu&amp;eacute; paquetes son internos a Perl. &lt;code&gt;Carp&lt;/code&gt; nunca informar&amp;aacute; que un error provenga de una l&amp;iacute;nea en un paquete interno de Perl. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="94c9a814257648d20b0d4f2bf7acb2782a18b6ea" translate="yes" xml:space="preserve">
          <source>This says which packages are internal to Perl's warning system. For generating a full stack backtrace this is the same as being internal to Perl, the stack backtrace will not start inside packages that are listed in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . But it is slightly different for the summary message generated by &lt;code&gt;carp&lt;/code&gt; or &lt;code&gt;croak&lt;/code&gt; . There errors will not be reported on any lines that are calling packages in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; .</source>
          <target state="translated">Esto dice qu&amp;eacute; paquetes son internos al sistema de advertencia de Perl. Para generar un backtrace de pila completo, esto es lo mismo que ser interno de Perl, el backtrace de pila no se iniciar&amp;aacute; dentro de los paquetes que se enumeran en &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; . Pero es ligeramente diferente para el mensaje de resumen generado por la &lt;code&gt;carp&lt;/code&gt; a o el &lt;code&gt;croak&lt;/code&gt; . No se informar&amp;aacute;n errores en ninguna l&amp;iacute;nea que llame a paquetes en &lt;code&gt;%Carp::CarpInternal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84798169adfcecd51c1ec3874bbf65c79b20278e" translate="yes" xml:space="preserve">
          <source>This says which packages are internal to Perl's warning system. For generating a full stack backtrace this is the same as being internal to Perl, the stack backtrace will not start inside packages that are listed in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt;. But it is slightly different for the summary message generated by &lt;code&gt;carp&lt;/code&gt; or &lt;code&gt;croak&lt;/code&gt;. There errors will not be reported on any lines that are calling packages in &lt;code&gt;%Carp::CarpInternal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31106a1a20d4ea51da0f7d90c3fe4fb2b5ff8f01" translate="yes" xml:space="preserve">
          <source>This scenario will mostly be applicable to code that is meant to be called from within destructors, asynchronous callbacks, and signal handlers. In such situations, where the code being called has little relation to the surrounding dynamic context, the main program needs to be insulated from errors in the called code, even if they can't be handled intelligently. It may also be useful to do this with code for &lt;code&gt;__DIE__&lt;/code&gt; or &lt;code&gt;__WARN__&lt;/code&gt; hooks, and &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">Este escenario se aplicar&amp;aacute; principalmente al c&amp;oacute;digo que se debe llamar desde dentro de destructores, devoluciones de llamada asincr&amp;oacute;nicas y controladores de se&amp;ntilde;ales. En tales situaciones, donde el c&amp;oacute;digo que se llama tiene poca relaci&amp;oacute;n con el contexto din&amp;aacute;mico circundante, el programa principal necesita estar aislado de errores en el c&amp;oacute;digo llamado, incluso si no se pueden manejar de manera inteligente. Tambi&amp;eacute;n puede ser &amp;uacute;til hacer esto con c&amp;oacute;digo para ganchos &lt;code&gt;__DIE__&lt;/code&gt; o &lt;code&gt;__WARN__&lt;/code&gt; y funciones de &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36ac4667cace4096dfbe5b4c50d550b72cbd4224" translate="yes" xml:space="preserve">
          <source>This scenario will mostly be applicable to code that is meant to be called from within destructors, asynchronous callbacks, and signal handlers. In such situations, where the code being called has little relation to the surrounding dynamic context, the main program needs to be insulated from errors in the called code, even if they can't be handled intelligently. It may also be useful to do this with code for &lt;code&gt;__DIE__&lt;/code&gt; or &lt;code&gt;__WARN__&lt;/code&gt; hooks, and &lt;code&gt;tie&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1df3253c4ccef59169cb5ac31f3ae1f9a3a9a53" translate="yes" xml:space="preserve">
          <source>This script provides a command interface (not a shell) to CPAN. At the moment it uses CPAN.pm to do the work, but it is not a one-shot command runner for CPAN.pm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17cbd723cbdc191dc4fdc562d2ff451e857ff96" translate="yes" xml:space="preserve">
          <source>This script shows how to override the default sorting algorithm that BTREE uses. Instead of using the normal lexical ordering, a case insensitive compare function will be used.</source>
          <target state="translated">Este guión muestra cómo anular el algoritmo de clasificación por defecto que utiliza BTREE.En lugar de usar el ordenamiento léxico normal,se usará una función de comparación que no distingue entre mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="af317b7379a832e3b0678b6eea769f242beb3e07" translate="yes" xml:space="preserve">
          <source>This script,</source>
          <target state="translated">Este guión,</target>
        </trans-unit>
        <trans-unit id="86ea44fa36ed41d21548135cdfb2e7b1ad994fbc" translate="yes" xml:space="preserve">
          <source>This searches the directories given in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc448c949fa2502c3de5bd50cf25e079f49a973e" translate="yes" xml:space="preserve">
          <source>This section also applies to other overloaded math packages, like Math::String.</source>
          <target state="translated">Esta sección también se aplica a otros paquetes matemáticos sobrecargados,como Math::String.</target>
        </trans-unit>
        <trans-unit id="ef6d18fe35323b673cf86ded4be1699795588d00" translate="yes" xml:space="preserve">
          <source>This section applies fully to Perls starting with v5.22. Various caveats for earlier releases are in the &lt;a href=&quot;#Earlier-releases-caveats&quot;&gt;&quot;Earlier releases caveats&quot;&lt;/a&gt; subsection below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be390d54ea95c83e1fca1268a1911351d2f7df4c" translate="yes" xml:space="preserve">
          <source>This section applies fully to Perls starting with v5.22. Various caveats for earlier releases are in the &lt;a href=&quot;#Earlier-releases-caveats&quot;&gt;Earlier releases caveats&lt;/a&gt; subsection below.</source>
          <target state="translated">Esta secci&amp;oacute;n se aplica completamente a Perls a partir de v5.22. Varias advertencias para versiones anteriores se encuentran en la subsecci&amp;oacute;n &lt;a href=&quot;#Earlier-releases-caveats&quot;&gt;Advertencias de versiones anteriores a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="56dd90ab92335c6f36e8ed1d4a60c84c97df21db" translate="yes" xml:space="preserve">
          <source>This section concerns the lookahead and lookbehind assertions. First, a little background.</source>
          <target state="translated">Esta sección se refiere a las aseveraciones de los mirones y los mirones.Primero,un poco de fondo.</target>
        </trans-unit>
        <trans-unit id="ab4a7c816ed65ffc082450cf0217f6cf1db2cf6e" translate="yes" xml:space="preserve">
          <source>This section deals with I/O and the &quot;f&quot; issues: filehandles, flushing, formats, and footers.</source>
          <target state="translated">Esta sección trata de E/S y las cuestiones &quot;f&quot;:manejo de archivos,descarga,formatos y pies de página.</target>
        </trans-unit>
        <trans-unit id="c67dd2be244aa67b2c3982a2251efd0aba82da6e" translate="yes" xml:space="preserve">
          <source>This section deals with general Perl language issues that don't clearly fit into any of the other sections.</source>
          <target state="translated">Esta sección trata de cuestiones generales del lenguaje Perl que no encajan claramente en ninguna de las otras secciones.</target>
        </trans-unit>
        <trans-unit id="4dacb0d5b8529783cda24f9a101a291fd790bb1b" translate="yes" xml:space="preserve">
          <source>This section deals with questions related to running web sites, sending and receiving email as well as general networking.</source>
          <target state="translated">Esta sección trata de cuestiones relacionadas con el funcionamiento de los sitios web,el envío y la recepción de correo electrónico,así como la creación de redes en general.</target>
        </trans-unit>
        <trans-unit id="b8c7e75fcfcb79fa2aefcfcb9d7bd00c769af0ac" translate="yes" xml:space="preserve">
          <source>This section defines an interface that allows in-memory compression using the</source>
          <target state="translated">Esta sección define una interfaz que permite la compresión en memoria usando el</target>
        </trans-unit>
        <trans-unit id="07d89dd508bd9a1955f604c65746a72fe10cd652" translate="yes" xml:space="preserve">
          <source>This section defines an interface that allows in-memory uncompression using the</source>
          <target state="translated">Esta sección define una interfaz que permite la descompresión en memoria usando el</target>
        </trans-unit>
        <trans-unit id="574b76a7c21f5d83dd373c1961cc34e2c0747c9f" translate="yes" xml:space="preserve">
          <source>This section defines the Version type, used by several fields in the CPAN Meta Spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3243853ef1a289c9e89d976c5c5c21cc63e5a678" translate="yes" xml:space="preserve">
          <source>This section defines the interface available that allows in-memory uncompression using the</source>
          <target state="translated">Esta sección define la interfaz disponible que permite la descompresión en memoria usando el</target>
        </trans-unit>
        <trans-unit id="8adf59417e2d7f3c501610b406a6fa8b838974b3" translate="yes" xml:space="preserve">
          <source>This section describes how JSON::PP maps Perl values to JSON values and vice versa. These mappings are designed to &quot;do the right thing&quot; in most circumstances automatically, preserving round-tripping characteristics (what you put in comes out as something equivalent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a0852ba843f17dcbe1940f17029f381d5d77f9" translate="yes" xml:space="preserve">
          <source>This section describes the accuracy/precision handling in Math::Big* as it used to be and as it is now, complete with an explanation of all terms and abbreviations.</source>
          <target state="translated">Esta sección describe el manejo de la exactitud/precisión en Matemáticas::Grande*como solía ser y como es ahora,completa con una explicación de todos los términos y abreviaturas.</target>
        </trans-unit>
        <trans-unit id="06b4644a1d0abd71307ee2e3605d7fc2e4535b4d" translate="yes" xml:space="preserve">
          <source>This section describes the accuracy/precision handling in Math::BigInt and Math::BigFloat as it used to be and as it is now, complete with an explanation of all terms and abbreviations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec789fa26c9d8dfd2479d175b7e934018d065eea" translate="yes" xml:space="preserve">
          <source>This section describes the re-implementation of the tmpnam() and tmpfile() functions described in &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; using the mkstemp() from this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39aef7a353c321f38285ab3f99461b24884c7fa4" translate="yes" xml:space="preserve">
          <source>This section describes the re-implementation of the tmpnam() and tmpfile() functions described in L</source>
          <target state="translated">Esta sección describe la reimplementación de las funciones tmpnam()y tmpfile()descritas en L</target>
        </trans-unit>
        <trans-unit id="5b6ee285a0e0ef806b91b3b763a8498277e66885" translate="yes" xml:space="preserve">
          <source>This section describes the recommended interface for generating temporary files and directories.</source>
          <target state="translated">En esta sección se describe la interfaz recomendada para generar archivos y directorios temporales.</target>
        </trans-unit>
        <trans-unit id="69aa90134b4dce1d696ebb05a6dbb67cf8770a91" translate="yes" xml:space="preserve">
          <source>This section describes the steps to be performed to build PerlCE. You may find additional information about building perl for WinCE at &lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt; and some pre-built binaries.</source>
          <target state="translated">Esta secci&amp;oacute;n describe los pasos que se deben realizar para construir PerlCE. Puede encontrar informaci&amp;oacute;n adicional sobre la construcci&amp;oacute;n de perl para WinCE en &lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt; y algunos binarios predise&amp;ntilde;ados.</target>
        </trans-unit>
        <trans-unit id="11f3d56c367a6b305dcc2c5edd92d44276e1ff5b" translate="yes" xml:space="preserve">
          <source>This section describes the steps to be performed to build a Perl NLM and other associated NLMs.</source>
          <target state="translated">En esta sección se describen los pasos a seguir para construir una NLM de Perl y otras NLM asociadas.</target>
        </trans-unit>
        <trans-unit id="1019c06c85688bbdf3af5c6e3b95950cdf59effc" translate="yes" xml:space="preserve">
          <source>This section describes ways to call &lt;code&gt;open&lt;/code&gt; outside of best practices; you may encounter these uses in older code. Perl does not consider their use deprecated, exactly, but neither is it recommended in new code, for the sake of clarity and readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c6a4b67a7eaa7527571d5faec72b4bfebc75e4" translate="yes" xml:space="preserve">
          <source>This section documents functions to manipulate CVs which are code-values, or subroutines. For more information, see &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">Esta secci&amp;oacute;n documenta funciones para manipular CV que son valores de c&amp;oacute;digo o subrutinas. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33ac896f6350aabd5af3622467a85a4b6b744251" translate="yes" xml:space="preserve">
          <source>This section gives some details on all extensions that aren't just synonyms for compound-form Unicode properties (for those properties, you'll have to refer to the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr44&quot;&gt;Unicode Standard&lt;/a&gt;.</source>
          <target state="translated">Esta secci&amp;oacute;n proporciona algunos detalles sobre todas las extensiones que no son solo sin&amp;oacute;nimos de propiedades Unicode de forma compuesta (para esas propiedades, tendr&amp;aacute; que consultar el &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr44&quot;&gt;est&amp;aacute;ndar Unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9319fc0cf40bc57d3c32a473ab7229f4845e3419" translate="yes" xml:space="preserve">
          <source>This section gives some details on all extensions that aren't just synonyms for compound-form Unicode properties (for those properties, you'll have to refer to the &lt;a href=&quot;https://www.unicode.org/reports/tr44&quot;&gt;Unicode Standard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954cb379e9610eb88d0cd37b6e5358601612440b" translate="yes" xml:space="preserve">
          <source>This section hopes to clarify how Perl handles quoted constructs. Although the most common reason to learn this is to unravel labyrinthine regular expressions, because the initial steps of parsing are the same for all quoting operators, they are all discussed together.</source>
          <target state="translated">Esta sección espera aclarar cómo Perl maneja las construcciones citadas.Aunque la razón más común para aprender esto es desentrañar las laberínticas expresiones regulares,porque los pasos iniciales del análisis sintáctico son los mismos para todos los operadores de citas,se discuten todos juntos.</target>
        </trans-unit>
        <trans-unit id="536fa6406d989d8eb5028cec20788cbdc6568c11" translate="yes" xml:space="preserve">
          <source>This section is about functions (really macros) that classify characters into types, such as punctuation versus alphabetic, etc. Most of these are analogous to regular expression character classes. (See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.) There are several variants for each class. (Not all macros have all variants; each item below lists the ones valid for it.) None are affected by &lt;code&gt;use bytes&lt;/code&gt;, and only the ones with &lt;code&gt;LC&lt;/code&gt; in the name are affected by the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7547891b2c07526eb3624e622a75bf7d7cccf2c6" translate="yes" xml:space="preserve">
          <source>This section is about functions (really macros) that classify characters into types, such as punctuation versus alphabetic, etc. Most of these are analogous to regular expression character classes. (See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;POSIX Character Classes in perlrecharclass&lt;/a&gt;.) There are several variants for each class. (Not all macros have all variants; each item below lists the ones valid for it.) None are affected by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; , and only the ones with &lt;code&gt;LC&lt;/code&gt; in the name are affected by the current locale.</source>
          <target state="translated">Esta secci&amp;oacute;n trata sobre funciones (realmente macros) que clasifican caracteres en tipos, como puntuaci&amp;oacute;n versus alfab&amp;eacute;tico, etc. La mayor&amp;iacute;a de estas son an&amp;aacute;logas a las clases de caracteres de expresi&amp;oacute;n regular. (Consulte &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;Clases de caracteres POSIX en perlrecharclass&lt;/a&gt; .) Hay varias variantes para cada clase. (No todas las macros tienen todas las variantes; cada elemento a continuaci&amp;oacute;n enumera las que son v&amp;aacute;lidas para &amp;eacute;l). Ninguno se ve afectado por los &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; , y solo los que tienen &lt;code&gt;LC&lt;/code&gt; en el nombre se ven afectados por la configuraci&amp;oacute;n regional actual.</target>
        </trans-unit>
        <trans-unit id="e9ab2821650c93c09f64d44ff30564f17238787a" translate="yes" xml:space="preserve">
          <source>This section is also taken from JSON::XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeda1d72fad19d0a6a9f82fe55d9f33ab10382a" translate="yes" xml:space="preserve">
          <source>This section is intended to supplement and clarify the discussion in &lt;a href=&quot;perlpod#Command-Paragraph&quot;&gt;&quot;Command Paragraph&quot; in perlpod&lt;/a&gt;. These are the currently recognized Pod commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d919f2203b8f136316a99d5a21a115c2a5759b1a" translate="yes" xml:space="preserve">
          <source>This section is intended to supplement and clarify the discussion in &lt;a href=&quot;perlpod#Command-Paragraph&quot;&gt;Command Paragraph in perlpod&lt;/a&gt;. These are the currently recognized Pod commands:</source>
          <target state="translated">Esta secci&amp;oacute;n est&amp;aacute; destinada a complementar y aclarar la discusi&amp;oacute;n en &lt;a href=&quot;perlpod#Command-Paragraph&quot;&gt;Command Paragraph en perlpod&lt;/a&gt; . Estos son los comandos de Pod actualmente reconocidos:</target>
        </trans-unit>
        <trans-unit id="12d39af9317de3b208731a0e9f6172ef3ca0985f" translate="yes" xml:space="preserve">
          <source>This section is just an outline of some of the things code in a compartment might do (intentionally or unintentionally) which can have an effect outside the compartment.</source>
          <target state="translated">Esta sección es sólo un resumen de algunas de las cosas que el código de un compartimento puede hacer (intencionadamente o no)que pueden tener un efecto fuera del compartimento.</target>
        </trans-unit>
        <trans-unit id="afce53c6f9505fd215e3565d5b9cbd7590482493" translate="yes" xml:space="preserve">
          <source>This section is only necessary for those who want to write a compiler backend module that can be used via this module.</source>
          <target state="translated">Esta sección sólo es necesaria para aquellos que quieran escribir un módulo de respaldo del compilador que pueda ser utilizado a través de este módulo.</target>
        </trans-unit>
        <trans-unit id="1d2dead1ebaa9a0daf17a7735104700bab6a62c1" translate="yes" xml:space="preserve">
          <source>This section is only relevant if you want to use the &lt;code&gt;FOOBAR::DATA&lt;/code&gt; together with the &lt;b&gt;SelfLoader&lt;/b&gt;.</source>
          <target state="translated">Esta secci&amp;oacute;n solo es relevante si desea utilizar &lt;code&gt;FOOBAR::DATA&lt;/code&gt; junto con &lt;b&gt;SelfLoader&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="6b8111cc382b6e222eab22ae8b7285382f21bba0" translate="yes" xml:space="preserve">
          <source>This section is surprisingly small because the rest of the FAQ is littered with answers involving regular expressions. For example, decoding a URL and checking whether something is a number can be handled with regular expressions, but those answers are found elsewhere in this document (in &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt;: &quot;How do I decode or create those %-encodings on the web&quot; and &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;: &quot;How do I determine whether a scalar is a number/whole/integer/float&quot;, to be precise).</source>
          <target state="translated">Esta secci&amp;oacute;n es sorprendentemente peque&amp;ntilde;a porque el resto de las preguntas frecuentes est&amp;aacute; plagado de respuestas que involucran expresiones regulares. Por ejemplo, decodificar una URL y verificar si algo es un n&amp;uacute;mero se puede manejar con expresiones regulares, pero esas respuestas se encuentran en otra parte de este documento (en &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt; : &quot;&amp;iquest;C&amp;oacute;mo decodifico o creo esas% -encodings en la web&quot; y &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; : &quot;&amp;iquest;C&amp;oacute;mo puedo determinar si un escalar es un n&amp;uacute;mero / entero / entero / flotante&quot;, para ser precisos).</target>
        </trans-unit>
        <trans-unit id="e488b03478a9d4c34a486aa35881d2d7c336d0b6" translate="yes" xml:space="preserve">
          <source>This section is surprisingly small because the rest of the FAQ is littered with answers involving regular expressions. For example, decoding a URL and checking whether something is a number can be handled with regular expressions, but those answers are found elsewhere in this document (in perlfaq9 : &quot;How do I decode or create those %-encodings on the web&quot; and perlfaq4 : &quot;How do I determine whether a scalar is a number/whole/integer/float&quot;, to be precise).</source>
          <target state="translated">Esta sección es sorprendentemente pequeña porque el resto de las preguntas frecuentes están llenas de respuestas que implican expresiones regulares.Por ejemplo,la decodificación de un URL y la comprobación de si algo es un número pueden manejarse con expresiones regulares,pero esas respuestas se encuentran en otras partes de este documento (en perlfaq9:&quot;¿Cómo decodifico o creo esos %-codificaciones en la web&quot; y perlfaq4:&quot;¿Cómo determino si un escalar es un número/entero/entero/flota?)</target>
        </trans-unit>
        <trans-unit id="732c1a0656cc78e70f97a666a29ecd78fe5a04dd" translate="yes" xml:space="preserve">
          <source>This section is taken from JSON::XS almost verbatim. &lt;code&gt;encode_json&lt;/code&gt; and &lt;code&gt;decode_json&lt;/code&gt; are exported by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d687991685902a3cbba9421e6e5a504f1cdd17" translate="yes" xml:space="preserve">
          <source>This section is taken from JSON::XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94757c3cee869d3cff315104b19f6299d40770f6" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers questions about where to find source and documentation for Perl, support, and related matters.</source>
          <target state="translated">Esta sección de la FAQ responde a las preguntas sobre dónde encontrar la fuente y la documentación para el Perl,el apoyo y los asuntos relacionados.</target>
        </trans-unit>
        <trans-unit id="dd108d0d127c5d70473c9d7274a370ea63329739" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers questions related to manipulating numbers, dates, strings, arrays, hashes, and miscellaneous data issues.</source>
          <target state="translated">Esta sección de la FAQ responde a las preguntas relacionadas con la manipulación de números,fechas,cadenas,matrices,hashes,y cuestiones de datos varios.</target>
        </trans-unit>
        <trans-unit id="43d6c325f900a7d6a933d383734e7454f02fa808" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers questions related to programmer tools and programming support.</source>
          <target state="translated">Esta sección del FAQ responde a las preguntas relacionadas con las herramientas de programación y el soporte de programación.</target>
        </trans-unit>
        <trans-unit id="8c63d2f74bc0df3e2938dcd3a6724a679f1d5b9f" translate="yes" xml:space="preserve">
          <source>This section of the FAQ answers very general, high-level questions about Perl.</source>
          <target state="translated">Esta sección del FAQ responde a preguntas muy generales y de alto nivel sobre Perl.</target>
        </trans-unit>
        <trans-unit id="f91732cbb36111757913713f2dd27264f7f4075b" translate="yes" xml:space="preserve">
          <source>This section of the Perl FAQ covers questions involving operating system interaction. Topics include interprocess communication (IPC), control over the user-interface (keyboard, screen and pointing devices), and most anything else not related to data manipulation.</source>
          <target state="translated">Esta sección de la FAQ de Perl cubre las preguntas que implican la interacción del sistema operativo.Los temas incluyen la comunicación interprocesos (IPC),el control sobre la interfaz de usuario (teclado,pantalla y dispositivos apuntadores),y casi todo lo demás que no esté relacionado con la manipulación de datos.</target>
        </trans-unit>
        <trans-unit id="d25ee711a891d2493e43b730a8ee5f38afba1662" translate="yes" xml:space="preserve">
          <source>This section only applies to you if you have existing data written out by Storable 2.02 or earlier on perl 5.6.0 or 5.6.1 on Unix or Linux which has been configured with 64 bit integer support (not the default) If you got a precompiled perl, rather than running Configure to build your own perl from source, then it almost certainly does not affect you, and you can stop reading now (unless you're curious). If you're using perl on Windows it does not affect you.</source>
          <target state="translated">Esta sección sólo se aplica a usted si tiene datos existentes escritos por Storable 2.02 o anterior en perl 5.6.0 o 5.6.1 en Unix o Linux que ha sido configurado con soporte para enteros de 64 bits (no el predeterminado)Si tiene un perl precompilado,en lugar de ejecutar Configurar para construir su propio perl desde el código fuente,entonces casi seguro que no le afecta,y puede dejar de leer ahora (a menos que tenga curiosidad).Si estás usando perl en Windows no te afecta.</target>
        </trans-unit>
        <trans-unit id="8ecf28b7a887ea07f287d9185e0392b617b15554" translate="yes" xml:space="preserve">
          <source>This section only considers the tagged value case: a tagged JSON object is encountered during decoding and &lt;code&gt;allow_tags&lt;/code&gt; is disabled, a parse error will result (as if tagged values were not part of the grammar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df773f3e4810bcca716d1f76438458e235350349" translate="yes" xml:space="preserve">
          <source>This section tries to classify the supported encodings by their applicability for information exchange over the Internet and to choose the most suitable aliases to name them in the context of such communication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9863e5d9d88cf88755191633db565f4fe6bf163c" translate="yes" xml:space="preserve">
          <source>This sends an &lt;a href=&quot;Test2::Event::Bail&quot;&gt;Test2::Event::Bail&lt;/a&gt; event. This event will completely terminate all testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9a6489148fff3cc80ff958733f7f998b0b3cdf" translate="yes" xml:space="preserve">
          <source>This server accepts one of five different commands, sending output back to the client. Unlike most network servers, this one handles only one incoming client at a time. Multitasking servers are covered in Chapter 16 of the Camel.</source>
          <target state="translated">Este servidor acepta uno de cinco comandos diferentes,enviando la salida al cliente.A diferencia de la mayoría de los servidores de red,éste sólo maneja un cliente entrante a la vez.Los servidores multitarea se tratan en el capítulo 16 del Camel.</target>
        </trans-unit>
        <trans-unit id="ffb206fa8662fa49c173d5f9d350cc23a1d8b5c6" translate="yes" xml:space="preserve">
          <source>This server takes the trouble to clone off a child version via fork() for each incoming request. That way it can handle many requests at once, which you might not always want. Even if you don't fork(), the listen() will allow that many pending connections. Forking servers have to be particularly careful about cleaning up their dead children (called &quot;zombies&quot; in Unix parlance), because otherwise you'll quickly fill up your process table. The REAPER subroutine is used here to call waitpid() for any child processes that have finished, thereby ensuring that they terminate cleanly and don't join the ranks of the living dead.</source>
          <target state="translated">Este servidor se toma la molestia de clonar una versión infantil a través de fork()para cada solicitud entrante.De esa manera puede manejar muchas peticiones a la vez,lo cual no siempre puede ser deseado.Incluso si no se bifurca(),el listen()permitirá muchas conexiones pendientes.Los servidores de fork tienen que ser particularmente cuidadosos en la limpieza de sus hijos muertos (llamados &quot;zombis&quot; en el lenguaje de Unix),porque de otra manera llenarán rápidamente su tabla de procesos.La subrutina REAPER se usa aquí para llamar a waitpid()para cualquier proceso hijo que haya terminado,asegurando así que terminen limpiamente y no se unan a las filas de los muertos vivientes.</target>
        </trans-unit>
        <trans-unit id="3c5ebe323e1cea15acbe8beafe841f6d123af5cf" translate="yes" xml:space="preserve">
          <source>This set of instructions is meant to describe a so-called &quot;native&quot; port of Perl to the Windows platform. This includes both 32-bit and 64-bit Windows operating systems. The resulting Perl requires no additional software to run (other than what came with your operating system). Currently, this port is capable of using one of the following compilers on the Intel x86 architecture:</source>
          <target state="translated">Este conjunto de instrucciones tiene por objeto describir un llamado puerto &quot;nativo&quot; de Perl a la plataforma Windows.Esto incluye los sistemas operativos Windows de 32 y 64 bits.El Perl resultante no requiere ningún software adicional para funcionar (aparte de lo que viene con su sistema operativo).Actualmente,este puerto es capaz de usar uno de los siguientes compiladores en la arquitectura Intel x86:</target>
        </trans-unit>
        <trans-unit id="8777023fd72f0e0c5194df7056fed5f92ab1ed79" translate="yes" xml:space="preserve">
          <source>This sets &lt;code&gt;$\&lt;/code&gt; to newline and then sets &lt;code&gt;$/&lt;/code&gt; to the null character.</source>
          <target state="translated">Esto establece &lt;code&gt;$\&lt;/code&gt; en nueva l&amp;iacute;nea y luego establece &lt;code&gt;$/&lt;/code&gt; en el car&amp;aacute;cter nulo.</target>
        </trans-unit>
        <trans-unit id="4549dd71bcce8b09d1c070ffac130c9cb9eed0b2" translate="yes" xml:space="preserve">
          <source>This sets a variable in op/numconvert.t.</source>
          <target state="translated">Esto establece una variable en op/numconvert.t.</target>
        </trans-unit>
        <trans-unit id="df79d9971c873dd56e1affe3565f833f5f4ef4be" translate="yes" xml:space="preserve">
          <source>This sets the</source>
          <target state="translated">Esto establece el</target>
        </trans-unit>
        <trans-unit id="cc422551baf5bd378e1441e1ffd937104c35c5d0" translate="yes" xml:space="preserve">
          <source>This sets the accuracy for all math operations. The argument must be greater than or equal to zero. See Math::BigInt's bround() function for details.</source>
          <target state="translated">Esto establece la precisión para todas las operaciones matemáticas.El argumento debe ser mayor o igual a cero.Ver la función bround()de Math::BigInt para más detalles.</target>
        </trans-unit>
        <trans-unit id="3b2057b585966ee5e34a71b1fcc4af8dffd8aef3" translate="yes" xml:space="preserve">
          <source>This sets the default per-thread stack size at the start of the application.</source>
          <target state="translated">Esto establece el tamaño de pila por hilo por defecto al inicio de la aplicación.</target>
        </trans-unit>
        <trans-unit id="d80f3ae97beba02bd7de41d9d2bef09e8032704e" translate="yes" xml:space="preserve">
          <source>This sets the filehandle that &lt;code&gt;$parser&lt;/code&gt; 's output will be written to. You can pass &lt;code&gt;*STDOUT&lt;/code&gt; or &lt;code&gt;*STDERR&lt;/code&gt; , otherwise you should probably do something like this:</source>
          <target state="translated">Esto establece el identificador de archivo en el que se escribir&amp;aacute; la salida de &lt;code&gt;$parser&lt;/code&gt; . Puede pasar &lt;code&gt;*STDOUT&lt;/code&gt; o &lt;code&gt;*STDERR&lt;/code&gt; , de lo contrario probablemente deber&amp;iacute;a hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="2f62f85bc91a48745c4461c85cd5655d80de88af" translate="yes" xml:space="preserve">
          <source>This sets the filehandle that &lt;code&gt;$parser&lt;/code&gt;'s output will be written to. You can pass &lt;code&gt;*STDOUT&lt;/code&gt; or &lt;code&gt;*STDERR&lt;/code&gt;, otherwise you should probably do something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af102c7f2132a623b34e9347ca5e8597fbe36895" translate="yes" xml:space="preserve">
          <source>This sets the language code to tag this document as being in. By default, it is currently the value of the environment variable &lt;code&gt;RTFDEFLANG&lt;/code&gt; , or if that's not set, then the value 1033 (for US English).</source>
          <target state="translated">Esto establece el c&amp;oacute;digo de idioma para etiquetar este documento como en. De forma predeterminada, actualmente es el valor de la variable de entorno &lt;code&gt;RTFDEFLANG&lt;/code&gt; , o si no est&amp;aacute; establecido, el valor 1033 (para ingl&amp;eacute;s de EE. UU.).</target>
        </trans-unit>
        <trans-unit id="38b3389f1a148c762d20dbeefeec456038d65737" translate="yes" xml:space="preserve">
          <source>This sets the language code to tag this document as being in. By default, it is currently the value of the environment variable &lt;code&gt;RTFDEFLANG&lt;/code&gt;, or if that's not set, then the value 1033 (for US English).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529a10bfb87aaa836949c559d932aa868d0ea517" translate="yes" xml:space="preserve">
          <source>This sets the precision for all math operations. The argument can be any integer. Negative values mean a fixed number of digits after the dot, and are &amp;lt;B&amp;gt;ignored&amp;lt;/B&amp;gt; since all operations happen in integer space. A positive value rounds to this digit left from the dot. 0 or 1 mean round to integer and are ignore like negative values.</source>
          <target state="translated">Esto establece la precisi&amp;oacute;n para todas las operaciones matem&amp;aacute;ticas. El argumento puede ser cualquier n&amp;uacute;mero entero. Los valores negativos significan un n&amp;uacute;mero fijo de d&amp;iacute;gitos despu&amp;eacute;s del punto y son &amp;lt;B&amp;gt; ignorados &amp;lt;/B&amp;gt; ya que todas las operaciones ocurren en un espacio entero. Un valor positivo se redondea a este d&amp;iacute;gito a la izquierda del punto. 0 o 1 significan redondeo a entero y se ignoran como valores negativos.</target>
        </trans-unit>
        <trans-unit id="674e5733f608427771b5b90d6f64c3b452aa5b35" translate="yes" xml:space="preserve">
          <source>This sets the precision for all math operations. The argument can be any integer. Negative values mean a fixed number of digits after the dot, while a positive value rounds to this digit left from the dot. 0 or 1 mean round to integer. See Math::BigInt's bfround() function for details.</source>
          <target state="translated">Esto establece la precisión para todas las operaciones matemáticas.El argumento puede ser cualquier número entero.Los valores negativos significan un número fijo de dígitos después del punto,mientras que un valor positivo redondea a este dígito a la izquierda del punto.0 o 1 significan redondear a un número entero.Ver la función bfround()de Math::BigInt para más detalles.</target>
        </trans-unit>
        <trans-unit id="7b5668a047104c30653c0804d67e484bf29d90cb" translate="yes" xml:space="preserve">
          <source>This sets the soft and hard limits to 10 and 20 seconds, respectively. After 10 seconds of time spent running on the CPU (not &quot;wall&quot; time), the process will be sent a signal (XCPU on some systems) which, if not trapped, will cause the process to terminate. If that signal is trapped, then after 10 more seconds (20 seconds in total) the process will be killed with a non-trappable signal.</source>
          <target state="translated">Esto establece los límites suaves y duros a 10 y 20 segundos,respectivamente.Después de 10 segundos de tiempo de funcionamiento en la CPU (no tiempo de &quot;pared&quot;),el proceso recibirá una señal (XCPU en algunos sistemas)que,si no es atrapada,hará que el proceso termine.Si esa señal es atrapada,entonces después de 10 segundos más (20 segundos en total)el proceso será matado con una señal no atrapable.</target>
        </trans-unit>
        <trans-unit id="130c125b35cf3d3da34044cd207b5628dc2ffac8" translate="yes" xml:space="preserve">
          <source>This sets the string that &lt;code&gt;$parser&lt;/code&gt; 's output will be sent to, instead of any filehandle.</source>
          <target state="translated">Esto establece la cadena a la que se enviar&amp;aacute; la salida de &lt;code&gt;$parser&lt;/code&gt; , en lugar de cualquier identificador de archivo.</target>
        </trans-unit>
        <trans-unit id="11dc24aa23b6cf452f77c63ea5e698909de49109" translate="yes" xml:space="preserve">
          <source>This sets the string that &lt;code&gt;$parser&lt;/code&gt;'s output will be sent to, instead of any filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4632ee2d247f3c071c82005711a1c83db25822" translate="yes" xml:space="preserve">
          <source>This sets the version required for the given module to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce02c4df1fe3dcc67a7d36b7b1e441cff60cc978" translate="yes" xml:space="preserve">
          <source>This sets what class is used for rendering the files. The default is &quot;Pod::Simple::HTML&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::HTML, and you should &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="translated">Esto establece qu&amp;eacute; clase se usa para renderizar los archivos. El valor predeterminado es &quot;Pod :: Simple :: HTML&quot;. Si lo configura en otra cosa, probablemente deber&amp;iacute;a ser una subclase de Pod :: Simple :: HTML, y deber&amp;iacute;a &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; esa clase para que se cargue antes de que Pod :: Simple :: HTMLBatch intente cargarla.</target>
        </trans-unit>
        <trans-unit id="5cfda4b2fca350828dd5a1ac91438eac5b206248" translate="yes" xml:space="preserve">
          <source>This sets what class is used for rendering the files. The default is &quot;Pod::Simple::HTML&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::HTML, and you should &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1e3d22ca8911a43038e77812f3f3938f114390" translate="yes" xml:space="preserve">
          <source>This sets what class is used for searching for the files. The default is &quot;Pod::Simple::Search&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::Search, and you should &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="translated">Esto establece qu&amp;eacute; clase se usa para buscar los archivos. El valor predeterminado es &quot;Pod :: Simple :: B&amp;uacute;squeda&quot;. Si lo configura en otra cosa, probablemente deber&amp;iacute;a ser una subclase de Pod :: Simple :: Search, y deber&amp;iacute;a &lt;code&gt;&lt;a href=&quot;../../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; esa clase para que se cargue antes de que Pod :: Simple :: HTMLBatch intente cargarla.</target>
        </trans-unit>
        <trans-unit id="7237f6ff3ed8efb498d362dab04bc50228f211f0" translate="yes" xml:space="preserve">
          <source>This sets what class is used for searching for the files. The default is &quot;Pod::Simple::Search&quot;. If you set it to something else, it should probably be a subclass of Pod::Simple::Search, and you should &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt; that class so that's it's loaded before Pod::Simple::HTMLBatch tries loading it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cf2efded42d8cb56f73f264ab95aef6e9febaa" translate="yes" xml:space="preserve">
          <source>This setting has currently no effect on tied hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c8e9c991aed7d8a50a93d4bed0eb71bffb9b06" translate="yes" xml:space="preserve">
          <source>This setting has no effect on &lt;code&gt;decode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d1b9e8622b5f2ff4cb6a55e0533419d19af149" translate="yes" xml:space="preserve">
          <source>This setting has no effect when decoding JSON texts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e68aea7378a9d8770b734fa44395aeb3e883a4" translate="yes" xml:space="preserve">
          <source>This setting has no effect when decoding JSON texts. You will also most likely combine this setting with &lt;code&gt;space_after&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40822cd1e25ae559171a5c38a63f3fa78270123b" translate="yes" xml:space="preserve">
          <source>This setting needs to be in effect while Perl is built, but also when the programs are run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef0f761ac69580bceb47730cfb76aca36efdbeb" translate="yes" xml:space="preserve">
          <source>This shares the variable(s) in the argument list with the compartment. This is almost identical to exporting variables using the &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; module.</source>
          <target state="translated">Esto comparte la (s) variable (s) en la lista de argumentos con el compartimento. Esto es casi id&amp;eacute;ntico a exportar variables usando el m&amp;oacute;dulo &lt;a href=&quot;exporter&quot;&gt;Exportador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d152c0ad7d6bcbd14fe51b7170fea53d971e63b6" translate="yes" xml:space="preserve">
          <source>This shifts the burden of complexity off to the quant method. That method's parameters are: the numeric value it's going to use to quantify something; the Russian word it's going to quantify; and the parameter &quot;accusative&quot;, which you're using to mean that this sentence's syntax wants a noun in the accusative case there, although that quantification method may have to overrule, for grammatical reasons you may recall from the beginning of this article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6847db733d896a734ef92c2af3a111d1b507ced6" translate="yes" xml:space="preserve">
          <source>This should &lt;b&gt;ONLY&lt;/b&gt; be used on memory obtained using &lt;a href=&quot;#Newx&quot;&gt;&quot;Newx&quot;&lt;/a&gt; and friends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3464b620ba9f7ef03d81ee4683ae7ba242d757" translate="yes" xml:space="preserve">
          <source>This should &lt;b&gt;ONLY&lt;/b&gt; be used on memory obtained using &lt;a href=&quot;#Newx&quot;&gt;Newx&lt;/a&gt; and friends.</source>
          <target state="translated">Esto &lt;b&gt;SOLO&lt;/b&gt; debe usarse en la memoria obtenida con &lt;a href=&quot;#Newx&quot;&gt;Newx&lt;/a&gt; y amigos.</target>
        </trans-unit>
        <trans-unit id="d79a68f01e1702d7ec1c9976d188db9c7f2aece8" translate="yes" xml:space="preserve">
          <source>This should allow read/write access to any files that are extracted from the zip file/buffer`.</source>
          <target state="translated">Esto debería permitir el acceso de lectura/escritura a cualquier archivo que se extraiga del archivo zip/buffer`.</target>
        </trans-unit>
        <trans-unit id="38a7ea1ad739ecad0857da6650e530f48bc66f62" translate="yes" xml:space="preserve">
          <source>This should be completely transparent to any applications written entirely in Perl (minus a few rarely encountered caveats given in the &lt;a href=&quot;#Multi-threaded&quot;&gt;&quot;Multi-threaded&quot;&lt;/a&gt; section). Information for XS module writers is given in &lt;a href=&quot;perlxs#Locale-aware-XS-code&quot;&gt;&quot;Locale-aware XS code&quot; in perlxs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bc0e6df3ccf75b9d4b22bada1e150f1c0bf5e1" translate="yes" xml:space="preserve">
          <source>This should be fixed already.</source>
          <target state="translated">Esto ya debería estar arreglado.</target>
        </trans-unit>
        <trans-unit id="f1709f85224b4fc47c42955a5583dcda72fcf36e" translate="yes" xml:space="preserve">
          <source>This should be fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d375da43f6c63dd4302e9f62a049ebffa1351990" translate="yes" xml:space="preserve">
          <source>This should be interpreted as '&lt;code&gt;PVOP&lt;/code&gt; ' only. The &lt;code&gt;_OR_SVOP&lt;/code&gt; is because the only core &lt;code&gt;PVOP&lt;/code&gt; , &lt;code&gt;OP_TRANS&lt;/code&gt; , can sometimes be a &lt;code&gt;SVOP&lt;/code&gt; instead.</source>
          <target state="translated">Esto debe interpretarse como ' &lt;code&gt;PVOP&lt;/code&gt; ' &amp;uacute;nicamente. El &lt;code&gt;_OR_SVOP&lt;/code&gt; se debe a que el &amp;uacute;nico &lt;code&gt;PVOP&lt;/code&gt; principal , &lt;code&gt;OP_TRANS&lt;/code&gt; , a veces puede ser un &lt;code&gt;SVOP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55cb7fd92e54949da6a1f17f8e9cc521852ab737" translate="yes" xml:space="preserve">
          <source>This should be interpreted as '&lt;code&gt;PVOP&lt;/code&gt;' only. The &lt;code&gt;_OR_SVOP&lt;/code&gt; is because the only core &lt;code&gt;PVOP&lt;/code&gt;, &lt;code&gt;OP_TRANS&lt;/code&gt;, can sometimes be a &lt;code&gt;SVOP&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a5db63688f7fa372582799c1bd3dfdaa3ba0cd" translate="yes" xml:space="preserve">
          <source>This should be replaced by the full path to your clang executable if it is not in your path.</source>
          <target state="translated">Esto debería ser reemplazado por el camino completo a su ejecutable de clang si no está en su camino.</target>
        </trans-unit>
        <trans-unit id="87cbf40ae5f30dda5d9df6e6dea667727ea90c08" translate="yes" xml:space="preserve">
          <source>This should be set for non debug messages that are still important enough to show when a formatter is in quiet mode. A formatter should send these to STDOUT not STDERR, but should show them even in non-verbose mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a95a55a5803d791f964bba2e2a1d75b4c88370" translate="yes" xml:space="preserve">
          <source>This should be the first thing you call in your test script. It declares your testing plan, how many there will be, if any of them should be allowed to fail, and so on.</source>
          <target state="translated">Esto debería ser lo primero que llames en tu guión de prueba.Declara tu plan de pruebas,cuántas habrá,si se debe permitir que alguna de ellas falle,y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="c0f01ea79ad3c782b34e1c39edb42ab144bd80b0" translate="yes" xml:space="preserve">
          <source>This should build everything. Specifically, it will create perl.exe, perl522.dll at the perl toplevel, and various other extension dll's under the lib\auto directory. If the build fails for any reason, make sure you have done the previous steps correctly.</source>
          <target state="translated">Esto debería construir todo.Específicamente,creará perl.exe,perl522.dll en el nivel superior de perl,y varias otras extensiones dll's bajo el directorio lib\auto.Si la construcción falla por cualquier razón,asegúrate de haber hecho los pasos anteriores correctamente.</target>
        </trans-unit>
        <trans-unit id="3a62d97effee732e54e0d1504511279a90715573" translate="yes" xml:space="preserve">
          <source>This should build everything. Specifically, it will create perl.exe, perl532.dll at the perl toplevel, and various other extension dll's under the lib\auto directory. If the build fails for any reason, make sure you have done the previous steps correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ba9060ffc1293bd461e0db035bb80a563a059f" translate="yes" xml:space="preserve">
          <source>This should build miniperl and then fail when it tries to run it.</source>
          <target state="translated">Esto debería construir el miniperl y luego fallar cuando intente ejecutarlo.</target>
        </trans-unit>
        <trans-unit id="db496c0536d24209950a452554a51ec2ca77e58c" translate="yes" xml:space="preserve">
          <source>This should contain a URI where the exact terms of the license may be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678375f3c34a52f1c875afc4e9a5d9d1a7cc959a" translate="yes" xml:space="preserve">
          <source>This should create an executable</source>
          <target state="translated">Esto debería crear un ejecutable</target>
        </trans-unit>
        <trans-unit id="0343ed053df7e2ae641054c461a6d9ef120ebfaa" translate="yes" xml:space="preserve">
          <source>This should match any sequences of characters that aren't &lt;code&gt;\xDF&lt;/code&gt; nor what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. &lt;code&gt;&quot;s&quot;&lt;/code&gt; isn't &lt;code&gt;\xDF&lt;/code&gt; , but Unicode says that &lt;code&gt;&quot;ss&quot;&lt;/code&gt; is what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. So which one &quot;wins&quot;? Do you fail the match because the string has &lt;code&gt;ss&lt;/code&gt; or accept it because it has an &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; followed by another &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;? Perl has chosen the latter. (See note in &lt;a href=&quot;#Bracketed-Character-Classes&quot;&gt;Bracketed Character Classes&lt;/a&gt; above.)</source>
          <target state="translated">Esto deber&amp;iacute;a coincidir con cualquier secuencia de caracteres que no sea &lt;code&gt;\xDF&lt;/code&gt; ni lo que &lt;code&gt;\xDF&lt;/code&gt; coincida con &lt;code&gt;/i&lt;/code&gt; . &lt;code&gt;&quot;s&quot;&lt;/code&gt; no es &lt;code&gt;\xDF&lt;/code&gt; , pero Unicode dice que &lt;code&gt;&quot;ss&quot;&lt;/code&gt; es lo que &lt;code&gt;\xDF&lt;/code&gt; coincide con &lt;code&gt;/i&lt;/code&gt; . Entonces, &amp;iquest;cu&amp;aacute;l &quot;gana&quot;? &amp;iquest;Falla la coincidencia porque la cadena tiene &lt;code&gt;ss&lt;/code&gt; o la acepta porque tiene una &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; seguida de otra &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; ? Perl ha elegido este &amp;uacute;ltimo. (Ver nota en &lt;a href=&quot;#Bracketed-Character-Classes&quot;&gt;Clases de caracteres entre corchetes&lt;/a&gt; arriba).</target>
        </trans-unit>
        <trans-unit id="eb02f2a8ec63111dfc588d8b17a8d6fb2096fcb5" translate="yes" xml:space="preserve">
          <source>This should match any sequences of characters that aren't &lt;code&gt;\xDF&lt;/code&gt; nor what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. &lt;code&gt;&quot;s&quot;&lt;/code&gt; isn't &lt;code&gt;\xDF&lt;/code&gt;, but Unicode says that &lt;code&gt;&quot;ss&quot;&lt;/code&gt; is what &lt;code&gt;\xDF&lt;/code&gt; matches under &lt;code&gt;/i&lt;/code&gt;. So which one &quot;wins&quot;? Do you fail the match because the string has &lt;code&gt;ss&lt;/code&gt; or accept it because it has an &lt;code&gt;s&lt;/code&gt; followed by another &lt;code&gt;s&lt;/code&gt;? Perl has chosen the latter. (See note in &lt;a href=&quot;#Bracketed-Character-Classes&quot;&gt;&quot;Bracketed Character Classes&quot;&lt;/a&gt; above.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050396cf8762718cb34435af8d06d17eb8dd7bc6" translate="yes" xml:space="preserve">
          <source>This should not be used to supply default values for parameters. One would normally use this when a function parameter must be processed by another library function before it can be used. Default parameters are covered in the next section.</source>
          <target state="translated">Esto no debe utilizarse para suministrar valores por defecto de los parámetros.Normalmente se usaría cuando un parámetro de la función debe ser procesado por otra función de biblioteca antes de que pueda ser utilizado.Los parámetros por defecto se tratan en la siguiente sección.</target>
        </trans-unit>
        <trans-unit id="8b1ca7922101edcce2a492b3a6c129abd8a583e6" translate="yes" xml:space="preserve">
          <source>This should only be necessary if</source>
          <target state="translated">Esto sólo debería ser necesario si</target>
        </trans-unit>
        <trans-unit id="598f32a1125324d2a241a1c920bc050b40fac3d7" translate="yes" xml:space="preserve">
          <source>This should rarely be necessary, as the Perl &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; function is to be used for things that Perl opened itself, even if it was a dup of a numeric descriptor as with &lt;code&gt;MHCONTEXT&lt;/code&gt; above. But if you really have to, you may be able to do this:</source>
          <target state="translated">Esto rara vez deber&amp;iacute;a ser necesario, ya que la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close()&lt;/a&gt;&lt;/code&gt; Perl debe usarse para cosas que Perl abri&amp;oacute; por s&amp;iacute; mismo, incluso si era un duplicado de un descriptor num&amp;eacute;rico como con &lt;code&gt;MHCONTEXT&lt;/code&gt; arriba. Pero si realmente tiene que hacerlo, es posible que pueda hacer esto:</target>
        </trans-unit>
        <trans-unit id="81e177911fc8ed26557ec26b5355ec1390d9f4d0" translate="yes" xml:space="preserve">
          <source>This should rarely be necessary, as the Perl &lt;code&gt;close()&lt;/code&gt; function is to be used for things that Perl opened itself, even if it was a dup of a numeric descriptor as with &lt;code&gt;MHCONTEXT&lt;/code&gt; above. But if you really have to, you may be able to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79cf36faa3af81e4bd5bbe5c4a98d13ad84be9" translate="yes" xml:space="preserve">
          <source>This should return true if the driver works in the current environment. This should return false if it does not. This is a CLASS method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1ab6069990fc4ba153fc0e586880eb88157c07" translate="yes" xml:space="preserve">
          <source>This shows &lt;code&gt;$a&lt;/code&gt; is a reference pointing to an SV. That SV is a PVHV, a hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c7e9b83cb4841b6e6724c1f7e531bbbc2b68cb" translate="yes" xml:space="preserve">
          <source>This shows &lt;code&gt;$a&lt;/code&gt; is a reference pointing to an SV. That SV is a PVHV, a hash. Fields RITER and EITER are used by &lt;code&gt;&lt;a href=&quot;../functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Esto muestra que &lt;code&gt;$a&lt;/code&gt; es una referencia que apunta a un SV. Ese SV es un PVHV, un hash. Los campos Riter y Eiter son utilizados por &lt;code&gt;&lt;a href=&quot;../functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4544b90fccd9dc8117d7d96fcbc15a1ca629dfae" translate="yes" xml:space="preserve">
          <source>This shows that</source>
          <target state="translated">Esto muestra que</target>
        </trans-unit>
        <trans-unit id="d012fb20c34f9ef1051349030cb25501698029ec" translate="yes" xml:space="preserve">
          <source>This shows that there were changes to this document staged for commit, and that there were further changes in the working directory not yet staged. It also shows that there was an untracked file in the working directory, and as you can see shows how to change all of this. It also shows that there is one commit on the working branch &lt;code&gt;blead&lt;/code&gt; which has not been pushed to the &lt;code&gt;origin&lt;/code&gt; remote yet. &lt;b&gt;NOTE&lt;/b&gt;: This output is also what you see as a template if you do not provide a message to &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55aa05d72ea8d4828d039cb967e2a4c2c9f3f35" translate="yes" xml:space="preserve">
          <source>This shows that we have an SV which is a reference, which points at another SV. In this case that second SV is a PVMG, a blessed scalar. Because it is blessed it has the &lt;code&gt;OBJECT&lt;/code&gt; flag set. Note that an SV which holds a C pointer also has the &lt;code&gt;IOK&lt;/code&gt; flag set. The &lt;code&gt;STASH&lt;/code&gt; is set to the package name which this SV was blessed into.</source>
          <target state="translated">Esto muestra que tenemos un SV que es una referencia, que apunta a otro SV. En este caso, ese segundo SV es un PVMG, un escalar bendito. Debido a que es una bendici&amp;oacute;n, tiene la bandera &lt;code&gt;OBJECT&lt;/code&gt; puesta. Tenga en cuenta que un SV que tiene un puntero C tambi&amp;eacute;n tiene la bandera &lt;code&gt;IOK&lt;/code&gt; activada . El &lt;code&gt;STASH&lt;/code&gt; se establece en el nombre del paquete, que este VE fue bendecido en.</target>
        </trans-unit>
        <trans-unit id="d6b36418bf4797a5df13199701553bd6ebeff202" translate="yes" xml:space="preserve">
          <source>This shows the sorts of output the &lt;code&gt;l&lt;/code&gt; command can produce:</source>
          <target state="translated">Esto muestra el tipo de salida que puede producir el comando &lt;code&gt;l&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="220ae5d1e65680423ed0fee8d1ae71265a4673d1" translate="yes" xml:space="preserve">
          <source>This shows the variables used in the subroutine &lt;code&gt;clear_noremap&lt;/code&gt; . The variable &lt;code&gt;$ready_to_print&lt;/code&gt; is a my() (lexical) variable, &lt;b&gt;i&lt;/b&gt;ntroduced (first declared with my()) on line 1069, and used on line 1079. The variable &lt;code&gt;$&amp;amp;&lt;/code&gt; from the main package is used on 1086, and so on.</source>
          <target state="translated">Esto muestra las variables utilizadas en la subrutina &lt;code&gt;clear_noremap&lt;/code&gt; . La variable &lt;code&gt;$ready_to_print&lt;/code&gt; es un mi () (l&amp;eacute;xico) variable &lt;b&gt;i&lt;/b&gt; ntroduced (primera declarado con mi ()) en la l&amp;iacute;nea 1069, y se utiliza en la l&amp;iacute;nea 1079. La variable &lt;code&gt;$&amp;amp;&lt;/code&gt; desde el paquete principal se utiliza en 1086, y as&amp;iacute; sucesivamente .</target>
        </trans-unit>
        <trans-unit id="69445b30eafff7b7c0b6c3e36cb0b52aa8e5353f" translate="yes" xml:space="preserve">
          <source>This shows the variables used in the subroutine &lt;code&gt;clear_noremap&lt;/code&gt;. The variable &lt;code&gt;$ready_to_print&lt;/code&gt; is a my() (lexical) variable, &lt;b&gt;i&lt;/b&gt;ntroduced (first declared with my()) on line 1069, and used on line 1079. The variable &lt;code&gt;$&amp;amp;&lt;/code&gt; from the main package is used on 1086, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a1a612c118404300b4fc88e912d956be940f47" translate="yes" xml:space="preserve">
          <source>This shows us two libraries being updated and two being added, one of which has an undefined version in the right-hand side version.</source>
          <target state="translated">Esto nos muestra dos bibliotecas que se actualizan y dos que se añaden,una de las cuales tiene una versión indefinida en la versión de la derecha.</target>
        </trans-unit>
        <trans-unit id="a9392876266258935c97915a0016be1ab3e077a8" translate="yes" xml:space="preserve">
          <source>This shows what a reference looks like when it references a simple scalar.</source>
          <target state="translated">Esto muestra cómo se ve una referencia cuando se refiere a un simple escalar.</target>
        </trans-unit>
        <trans-unit id="62c1dd6d2092bdafabfdd27d34aabe7eb07a45cc" translate="yes" xml:space="preserve">
          <source>This shows what a reference to an array looks like.</source>
          <target state="translated">Esto muestra cómo se ve una referencia a una matriz.</target>
        </trans-unit>
        <trans-unit id="5af0b0f40fa34ec87e6b5d92094f2a134fbd1781" translate="yes" xml:space="preserve">
          <source>This signifies that this entry should be replaced by the decompositions for all the code points whose decomposition is algorithmically calculated. (All of them are currently in one range and no others outside the range are likely to ever be added to Unicode; the &lt;code&gt;&quot;n&quot;&lt;/code&gt; format has this same entry.) These can be generated via the function &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize::NFD()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b0c298e2bbc25317cee46892abecba84a7892d" translate="yes" xml:space="preserve">
          <source>This signifies that this entry should be replaced by the decompositions for all the code points whose decomposition is algorithmically calculated. (All of them are currently in one range and no others outside the range are likely to ever be added to Unicode; the &lt;code&gt;&quot;n&quot;&lt;/code&gt; format has this same entry.) These can be generated via the function &lt;a href=&quot;normalize&quot;&gt;Unicode::Normalize::NFD()&lt;/a&gt;.</source>
          <target state="translated">Esto significa que esta entrada debe ser reemplazada por las descomposiciones para todos los puntos de c&amp;oacute;digo cuya descomposici&amp;oacute;n se calcula algor&amp;iacute;tmicamente. (Todos ellos est&amp;aacute;n actualmente en un rango y es probable que ning&amp;uacute;n otro fuera del rango se agregue a Unicode; el formato &lt;code&gt;&quot;n&quot;&lt;/code&gt; tiene esta misma entrada). Estos se pueden generar mediante la funci&amp;oacute;n &lt;a href=&quot;normalize&quot;&gt;Unicode :: Normalize :: NFD ( )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a3ee18b62d8c4cf82c2682ec3f88357d163d3e8" translate="yes" xml:space="preserve">
          <source>This silent implicit decoding is known as &quot;upgrading&quot;. That may sound positive, but it's best to avoid it.</source>
          <target state="translated">Esta silenciosa decodificación implícita se conoce como &quot;actualización&quot;.Eso puede sonar positivo,pero es mejor evitarlo.</target>
        </trans-unit>
        <trans-unit id="75ceec87638702fc9211fcbb47c663ad2b557d5f" translate="yes" xml:space="preserve">
          <source>This simplifies the reverse operation as the number of repetitions can be unpacked with the &lt;code&gt;/&lt;/code&gt; code:</source>
          <target state="translated">Esto simplifica la operaci&amp;oacute;n inversa ya que el n&amp;uacute;mero de repeticiones se puede descomprimir con el c&amp;oacute;digo &lt;code&gt;/&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c76a52e49b25fb93c5814da39f8a0ca4f090ec45" translate="yes" xml:space="preserve">
          <source>This simply calls &lt;code&gt;sv_magic&lt;/code&gt; and coerces the &lt;code&gt;gv&lt;/code&gt; argument into an &lt;code&gt;SV&lt;/code&gt; .</source>
          <target state="translated">Esto simplemente llama a &lt;code&gt;sv_magic&lt;/code&gt; y convierte el argumento &lt;code&gt;gv&lt;/code&gt; en un &lt;code&gt;SV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37a8b66b66bc575f562e00ecf205b1032d87cf22" translate="yes" xml:space="preserve">
          <source>This simply calls &lt;code&gt;sv_magic&lt;/code&gt; and coerces the &lt;code&gt;gv&lt;/code&gt; argument into an &lt;code&gt;SV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c5bc95dce18ddda2693ffc0b4a16e21790eea4" translate="yes" xml:space="preserve">
          <source>This simply evaluates any expression (&lt;code&gt;$got eq $expected&lt;/code&gt; is just a simple example) and uses that to determine if the test succeeded or failed. A true expression passes, a false one fails. Very simple.</source>
          <target state="translated">Esto simplemente eval&amp;uacute;a cualquier expresi&amp;oacute;n ( &lt;code&gt;$got eq $expected&lt;/code&gt; es solo un ejemplo simple) y lo usa para determinar si la prueba tuvo &amp;eacute;xito o no. Una expresi&amp;oacute;n verdadera pasa, una falsa falla. Muy simple.</target>
        </trans-unit>
        <trans-unit id="3d969d8fe90ed0cdf3881a37bda779e5984f6b64" translate="yes" xml:space="preserve">
          <source>This simply passes the C representation of the Perl variable (an SV*) in and out of the XS layer. This can be used if the C code wants to deal directly with the Perl variable.</source>
          <target state="translated">Esto simplemente pasa la representación C de la variable Perl (un SV*)dentro y fuera de la capa XS.Esto puede ser usado si el código C quiere tratar directamente con la variable Perl.</target>
        </trans-unit>
        <trans-unit id="2e6d63f50f6edf8d1ca7caa25f784dd03a42ad6f" translate="yes" xml:space="preserve">
          <source>This simultaneously affects all threads of the program, so it may be problematic to use locales in threaded applications except where there is a single locale applicable to all threads.</source>
          <target state="translated">Esto afecta simultáneamente a todos los hilos del programa,por lo que puede ser problemático utilizar localizaciones en aplicaciones con hilos,excepto cuando hay una única localización aplicable a todos los hilos.</target>
        </trans-unit>
        <trans-unit id="cd936fff6e8f9ae7642c5c6dc94b4b5fc101a895" translate="yes" xml:space="preserve">
          <source>This situation can happen, for example, in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e7f436f0844c6bf989784164030c8f8ea5c91c" translate="yes" xml:space="preserve">
          <source>This software enables you to upgrade software on your computer and so is inherently dangerous because the newly installed software may contain bugs and may alter the way your computer works or even make it unusable. Please consider backing up your data before every upgrade.</source>
          <target state="translated">Este software le permite actualizar el software de su computadora y por lo tanto es inherentemente peligroso porque el software recién instalado puede contener errores y puede alterar la forma en que su computadora funciona o incluso hacerla inutilizable.Por favor,considere hacer una copia de seguridad de sus datos antes de cada actualización.</target>
        </trans-unit>
        <trans-unit id="95b86ac068430d7abe3629291f82ebff76fb040f" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 1996- by Andreas Koenig.</source>
          <target state="translated">Este software está protegido por derechos de autor (c)1996-por Andreas Koenig.</target>
        </trans-unit>
        <trans-unit id="dfe6bc95971d9555fd4a070b4a33ad4fd59cb09c" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 1997 - 2018 by Graham Barr &amp;amp; Dave Rolsky.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21371f38c12dbc9248a71f0465727bfaee148a3" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2002 by Ilya Zakharevich.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8d4de71ea698d046dd2d94f72a8a7fd4559231" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2010 by Adam Kennedy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af578baff649ee012be86b76b46b21b70df94c94" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2010 by David Golden and Ricardo Signes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bb5af5fa084e557d0f3cc7f0b45662d3a55d8f" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e377a624f20232cdb4cb749fe2907f2c5ef396be" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2013 by Leon Timmermans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67032da8813d4f4a0a08f93013ebb3760de4d75d" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2013 by Tim Jenness and the UK Particle Physics and Astronomy Research Council.</source>
          <target state="translated">Este software tiene derechos de autor (c)2013 de Tim Jenness y el Consejo de Investigación de Física de Partículas y Astronomía del Reino Unido.</target>
        </trans-unit>
        <trans-unit id="ff5cf6253d3c58ee0e8370fe0b1014e17ef0f493" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2014 by Adam Kennedy and Contributors.</source>
          <target state="translated">Este software es copyright (c)2014 de Adam Kennedy and Contributors.</target>
        </trans-unit>
        <trans-unit id="66f85f97c6d8584288b7cc1e27089a6848dac19e" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2016 by David Golden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e0edd840c94a8b44ae9918823591f4112c67a4" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2018 by Christian Hansen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9071214c3f60bf69bb79c3a0e0a801662f73777b" translate="yes" xml:space="preserve">
          <source>This software is copyright (c) 2019 by Tim Jenness and the UK Particle Physics and Astronomy Research Council.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb28093815e879710a9bb0a4ef5d290c79e5b95" translate="yes" xml:space="preserve">
          <source>This software is free software and can be modified and distributed under the same terms as Perl itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbd632224b5aa617ba78b7d9260ccc05095f469" translate="yes" xml:space="preserve">
          <source>This software is released under the MIT license cited below. Additionally, when this software is distributed with &lt;b&gt;Perl Kit, Version 5&lt;/b&gt;, you may also redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Este software se publica bajo la licencia MIT que se cita a continuaci&amp;oacute;n. Adem&amp;aacute;s, cuando este software se distribuye con &lt;b&gt;Perl Kit, Versi&amp;oacute;n 5&lt;/b&gt; , tambi&amp;eacute;n puede redistribuirlo y / o modificarlo bajo los mismos t&amp;eacute;rminos que el propio Perl.</target>
        </trans-unit>
        <trans-unit id="b8cc7587a3592d000978422dcd1052715c6866c6" translate="yes" xml:space="preserve">
          <source>This software pattern is so widely applicable that Attribute::Handlers provides a way to automate it: specifying &lt;code&gt;'autotie'&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Attribute::Handlers&lt;/code&gt; statement. So, the cycling example, could also be written:</source>
          <target state="translated">Este patr&amp;oacute;n de software es tan ampliamente aplicable que Attribute :: Handlers proporciona una forma de automatizarlo: especificando &lt;code&gt;'autotie'&lt;/code&gt; en la declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Attribute::Handlers&lt;/code&gt; . Entonces, el ejemplo del ciclismo tambi&amp;eacute;n podr&amp;iacute;a escribirse:</target>
        </trans-unit>
        <trans-unit id="d91e373183a0a3faaf1f65e220cc6670b2950cfc" translate="yes" xml:space="preserve">
          <source>This software pattern is so widely applicable that Attribute::Handlers provides a way to automate it: specifying &lt;code&gt;'autotie'&lt;/code&gt; in the &lt;code&gt;use Attribute::Handlers&lt;/code&gt; statement. So, the cycling example, could also be written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89832468782e8e99834462aa8eda8b90c2a987a8" translate="yes" xml:space="preserve">
          <source>This somewhat unpredictable behavior can be avoided with the &quot;bitwise&quot; feature, new in Perl 5.22. You can enable it via &lt;code&gt;use feature 'bitwise'&lt;/code&gt; or &lt;code&gt;use v5.28&lt;/code&gt;. Before Perl 5.28, it used to emit a warning in the &lt;code&gt;&quot;experimental::bitwise&quot;&lt;/code&gt; category. Under this feature, the four standard bitwise operators (&lt;code&gt;~ | &amp;amp; ^&lt;/code&gt;) are always numeric. Adding a dot after each operator (&lt;code&gt;~. |. &amp;amp;. ^.&lt;/code&gt;) forces it to treat its operands as strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4e18e30d88ab31167f2d6596e06fcdc6dfcfae" translate="yes" xml:space="preserve">
          <source>This somewhat unpredictable behavior can be avoided with the experimental &quot;bitwise&quot; feature, new in Perl 5.22. You can enable it via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'bitwise'&lt;/code&gt; . By default, it will warn unless the &lt;code&gt;&quot;experimental::bitwise&quot;&lt;/code&gt; warnings category has been disabled. (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; experimental 'bitwise'&lt;/code&gt; will enable the feature and disable the warning.) Under this feature, the four standard bitwise operators (&lt;code&gt;~ | &amp;amp; ^&lt;/code&gt;) are always numeric. Adding a dot after each operator (&lt;code&gt;~. |. &amp;amp;. ^.&lt;/code&gt; ) forces it to treat its operands as strings:</source>
          <target state="translated">Este comportamiento algo impredecible se puede evitar con la caracter&amp;iacute;stica experimental &quot;bit a bit&quot;, nueva en Perl 5.22. Puede habilitarlo mediante la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'bitwise'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'bit a bit' . De forma predeterminada, advertir&amp;aacute; a menos que la categor&amp;iacute;a de advertencias &lt;code&gt;&quot;experimental::bitwise&quot;&lt;/code&gt; se haya deshabilitado. (El &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; experimental 'bitwise'&lt;/code&gt; habilitar&amp;aacute; la funci&amp;oacute;n y deshabilitar&amp;aacute; la advertencia). En esta funci&amp;oacute;n, los cuatro operadores bit a bit est&amp;aacute;ndar ( &lt;code&gt;~ | &amp;amp; ^&lt;/code&gt; ) son siempre num&amp;eacute;ricos. Adici&amp;oacute;n de un punto despu&amp;eacute;s de cada operador ( &lt;code&gt;~. |. &amp;amp;. ^.&lt;/code&gt; ) Le obliga a tratar a sus operandos como cadenas:</target>
        </trans-unit>
        <trans-unit id="c23e7895c905e61a802fac11e961fcc5116c44d1" translate="yes" xml:space="preserve">
          <source>This sort of code can be a real eyesore to read, as well as being very sensitive to typos, and it's much clearer to dereference the variable explicitly. We're side-stepping the issue of working with object-oriented programming techniques to encapsulate variable access via methods, only accessible through an object. Here we're just discussing the technical implementation of choice, and whether this has an effect on performance. We can see whether this dereferencing operation, has any overhead by putting comparative code in a file and running a &lt;code&gt;Benchmark&lt;/code&gt; test.</source>
          <target state="translated">Este tipo de c&amp;oacute;digo puede ser una aut&amp;eacute;ntica monstruosidad de leer, adem&amp;aacute;s de ser muy sensible a los errores tipogr&amp;aacute;ficos, y es mucho m&amp;aacute;s claro desreferenciar la variable expl&amp;iacute;citamente. Estamos evitando el problema de trabajar con t&amp;eacute;cnicas de programaci&amp;oacute;n orientadas a objetos para encapsular el acceso a variables a trav&amp;eacute;s de m&amp;eacute;todos, solo accesibles a trav&amp;eacute;s de un objeto. Aqu&amp;iacute; solo estamos discutiendo la implementaci&amp;oacute;n t&amp;eacute;cnica de elecci&amp;oacute;n y si esto tiene un efecto en el rendimiento. Podemos ver si esta operaci&amp;oacute;n de eliminaci&amp;oacute;n de referencias tiene alguna sobrecarga colocando c&amp;oacute;digo comparativo en un archivo y ejecutando una prueba de &lt;code&gt;Benchmark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30f7b19aa0a9a6b3365d27ee63f89751c7ffa5a4" translate="yes" xml:space="preserve">
          <source>This special value becomes JSON null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97c4e8f1d7ea6446c4098759acfa71805444e34" translate="yes" xml:space="preserve">
          <source>This special variable is correctly set to the pseudo-process ID. It can be used to identify pseudo-processes within a particular session. Note that this value is subject to recycling if any pseudo-processes are launched after others have been wait()-ed on.</source>
          <target state="translated">Esta variable especial está correctamente establecida en el ID del pseudo-proceso.Puede ser usada para identificar pseudo-procesos dentro de una sesión particular.Tenga en cuenta que este valor está sujeto a reciclaje si algún pseudo-proceso se lanza después de que otros hayan sido puestos en espera.</target>
        </trans-unit>
        <trans-unit id="d6c4aceca7fa6325a5de35ebe0aa5f8ca9090348" translate="yes" xml:space="preserve">
          <source>This specifies a search for library &lt;code&gt;gl&lt;/code&gt; as before. If that search fails to find the library, it looks at the next item in the list. The &lt;code&gt;:nosearch&lt;/code&gt; flag will prevent searching for the libraries that follow, so it simply returns the value as &lt;code&gt;-Ld:\mesalibs -lmesa -luser32&lt;/code&gt;, since GCC can use that value as is with its linker.</source>
          <target state="translated">Esto especifica una b&amp;uacute;squeda de biblioteca &lt;code&gt;gl&lt;/code&gt; como antes. Si esa b&amp;uacute;squeda no encuentra la biblioteca, busca en el siguiente elemento de la lista. El &lt;code&gt;:nosearch&lt;/code&gt; evitar&amp;aacute; la b&amp;uacute;squeda de las bibliotecas que siguen, por lo que simplemente devuelve el valor como &lt;code&gt;-Ld:\mesalibs -lmesa -luser32&lt;/code&gt; , ya que GCC puede usar ese valor tal como est&amp;aacute; con su enlazador.</target>
        </trans-unit>
        <trans-unit id="15c61edb09c43955982bc45d6acb4f0c4af7b4ab" translate="yes" xml:space="preserve">
          <source>This specifies an option to call the formatter &lt;b&gt;w&lt;/b&gt;ith. For example, &lt;code&gt;-w textsize:15&lt;/code&gt; will call &lt;code&gt;$formatter-&amp;gt;textsize(15)&lt;/code&gt; on the formatter object before it is used to format the object. For this to be valid, the formatter class must provide such a method, and the value you pass should be valid. (So if &lt;code&gt;textsize&lt;/code&gt; expects an integer, and you do &lt;code&gt;-w textsize:big&lt;/code&gt;, expect trouble.)</source>
          <target state="translated">Esto especifica una opci&amp;oacute;n para llamar al formateador &lt;b&gt;con&lt;/b&gt; . Por ejemplo, &lt;code&gt;-w textsize:15&lt;/code&gt; llamar&amp;aacute; &lt;code&gt;$formatter-&amp;gt;textsize(15)&lt;/code&gt; en el objeto formateador antes de que se use para formatear el objeto. Para que esto sea v&amp;aacute;lido, la clase del formateador debe proporcionar dicho m&amp;eacute;todo y el valor que pase debe ser v&amp;aacute;lido. (Entonces, si el &lt;code&gt;textsize&lt;/code&gt; espera un n&amp;uacute;mero entero, y usted hace &lt;code&gt;-w textsize:big&lt;/code&gt; , se esperan problemas).</target>
        </trans-unit>
        <trans-unit id="68a43776b3796bfc1e7b13ea689fcb5185c15c99" translate="yes" xml:space="preserve">
          <source>This specifies code that should be called when a code line is seen (i.e., a line outside of the Pod). Normally this is undef, meaning that no code should be called. If you provide a routine, it should start out like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a814b946e54a59ba68d016b5b039bbdb959679" translate="yes" xml:space="preserve">
          <source>This specifies that the director &quot;somedir&quot; is the input. (This can be an absolute or relative path, it doesn't matter.)</source>
          <target state="translated">Esto especifica que el director &quot;somedir&quot; es la entrada.(Esto puede ser un camino absoluto o relativo,no importa.)</target>
        </trans-unit>
        <trans-unit id="6e3a29e95276948f0b11420f703cc3aaddffd6ef" translate="yes" xml:space="preserve">
          <source>This specifies that the input directories are the items in the arrayref &lt;code&gt;\@dirs&lt;/code&gt; .</source>
          <target state="translated">Esto especifica que los directorios de entrada son los elementos de arrayref &lt;code&gt;\@dirs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1655aff188e0c2a28c8b5f646e8ad62ec66c5897" translate="yes" xml:space="preserve">
          <source>This specifies that the input directories are the items in the arrayref &lt;code&gt;\@dirs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63679666659be8466fb9bd4dddfdca5063fd3f26" translate="yes" xml:space="preserve">
          <source>This specifies that the output is not to be sent to a pager, but is to be sent directly to STDOUT.</source>
          <target state="translated">Esto especifica que la salida no debe ser enviada a un localizador,sino que debe ser enviada directamente a STDOUT.</target>
        </trans-unit>
        <trans-unit id="b1a8fe6a04c1ca76ee22b76d1682c8136ef9711f" translate="yes" xml:space="preserve">
          <source>This specifies that the output is to be sent neither to a pager nor to STDOUT, but is to be saved to the specified filename. Example: &lt;code&gt;perldoc -oLaTeX -dtextwrapdocs.tex Text::Wrap&lt;/code&gt;</source>
          <target state="translated">Esto especifica que la salida no se enviar&amp;aacute; ni a un buscapersonas ni a STDOUT, sino que se guardar&amp;aacute; en el nombre de archivo especificado. Ejemplo: &lt;code&gt;perldoc -oLaTeX -dtextwrapdocs.tex Text::Wrap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45d4b28c13ac9c0ec2726a96f6188b8beab502af" translate="yes" xml:space="preserve">
          <source>This specifies that you want Perldoc to try using a Pod-formatting class for the output format that you specify. For example: &lt;code&gt;-oman&lt;/code&gt; . This is actually just a wrapper around the &lt;code&gt;-M&lt;/code&gt; switch; using &lt;code&gt;-o&lt;i&gt;formatname&lt;/i&gt;&lt;/code&gt; just looks for a loadable class by adding that format name (with different capitalizations) to the end of different classname prefixes.</source>
          <target state="translated">Esto especifica que desea que Perldoc intente usar una clase de formato Pod para el formato de salida que especifique. Por ejemplo: &lt;code&gt;-oman&lt;/code&gt; . En realidad, esto es solo una envoltura del conmutador &lt;code&gt;-M&lt;/code&gt; ; usando &lt;code&gt;-o&lt;i&gt;formatname&lt;/i&gt;&lt;/code&gt; solo busca una clase cargable agregando ese nombre de formato (con diferentes may&amp;uacute;sculas) al final de diferentes prefijos de nombre de clase.</target>
        </trans-unit>
        <trans-unit id="010d97695be94f0fec9f8d59b9e5f92e8321d055" translate="yes" xml:space="preserve">
          <source>This specifies that you want Perldoc to try using a Pod-formatting class for the output format that you specify. For example: &lt;code&gt;-oman&lt;/code&gt;. This is actually just a wrapper around the &lt;code&gt;-M&lt;/code&gt; switch; using &lt;code&gt;-o&lt;i&gt;formatname&lt;/i&gt;&lt;/code&gt; just looks for a loadable class by adding that format name (with different capitalizations) to the end of different classname prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4b01265a71898dfb9f81df9b68ddce9ce51346" translate="yes" xml:space="preserve">
          <source>This specifies that you want the HTML output to go into the current directory.</source>
          <target state="translated">Esto especifica que quieres que la salida HTML vaya al directorio actual.</target>
        </trans-unit>
        <trans-unit id="2ae7a3e343e7bbeb0dfb1ab04a69a9932581a88b" translate="yes" xml:space="preserve">
          <source>This specifies that you want the HTML output to go into the directory 'somedir'. (This can be an absolute or relative path, it doesn't matter.)</source>
          <target state="translated">Esto especifica que quieres que la salida HTML vaya al directorio 'somedir'.(Este puede ser un camino absoluto o relativo,no importa).</target>
        </trans-unit>
        <trans-unit id="e7729b553095fc163c271a3e43dbeb5e583f17f6" translate="yes" xml:space="preserve">
          <source>This specifies that you want the dirs &quot;somedir&quot;, &quot;someother&quot;, and &quot;also&quot; scanned, just as if you'd passed the arrayref &lt;code&gt;[qw( somedir someother also)]&lt;/code&gt; . Note that a &quot;:&quot;-separator is normal under Unix, but Under MSWin, you'll need &lt;code&gt;'somedir;someother;also'&lt;/code&gt; instead, since the pathsep on MSWin is &quot;;&quot; instead of &quot;:&quot;. (And</source>
          <target state="translated">Esto especifica que desea que los directorios &quot;somedir&quot;, &quot;otro&quot; y &quot;tambi&amp;eacute;n&quot; sean escaneados, como si hubiera pasado el arrayref &lt;code&gt;[qw( somedir someother also)]&lt;/code&gt; . Tenga en cuenta que un &quot;:&quot; - separador es normal en Unix, pero en MSWin, necesitar&amp;aacute; &lt;code&gt;'somedir;someother;also'&lt;/code&gt; en su lugar, ya que el pathsep en MSWin es &quot;;&quot; en vez de &quot;:&quot;. (Y</target>
        </trans-unit>
        <trans-unit id="4d5774ca5649a7d9fa31c36d1f9fa10a02babb34" translate="yes" xml:space="preserve">
          <source>This specifies that you want the dirs &quot;somedir&quot;, &quot;someother&quot;, and &quot;also&quot; scanned, just as if you'd passed the arrayref &lt;code&gt;[qw( somedir someother also)]&lt;/code&gt;. Note that a &quot;:&quot;-separator is normal under Unix, but Under MSWin, you'll need &lt;code&gt;'somedir;someother;also'&lt;/code&gt; instead, since the pathsep on MSWin is &quot;;&quot; instead of &quot;:&quot;. (And</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8852ab4d60e276583c1dd4292c015bb068208e6" translate="yes" xml:space="preserve">
          <source>This specifies the module that you want to try using for formatting the pod. The class must at least provide a &lt;code&gt;parse_from_file&lt;/code&gt; method. For example: &lt;code&gt;perldoc -MPod::Perldoc::ToChecker&lt;/code&gt; .</source>
          <target state="translated">Esto especifica el m&amp;oacute;dulo que desea intentar usar para formatear el pod. La clase debe proporcionar al menos un m&amp;eacute;todo &lt;code&gt;parse_from_file&lt;/code&gt; . Por ejemplo: &lt;code&gt;perldoc -MPod::Perldoc::ToChecker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9860d4fcf1674e2b5833d10a9182c9c5be14d26" translate="yes" xml:space="preserve">
          <source>This specifies the module that you want to try using for formatting the pod. The class must at least provide a &lt;code&gt;parse_from_file&lt;/code&gt; method. For example: &lt;code&gt;perldoc -MPod::Perldoc::ToChecker&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be95e643e0441d56be0f4bdb53c658cbf47d5fc4" translate="yes" xml:space="preserve">
          <source>This specifies what string should be put at the beginning of the contents page. The default is a string more or less like this:</source>
          <target state="translated">Esto especifica qué cadena debe ponerse al principio de la página de contenidos.El valor por defecto es una cadena más o menos como esta:</target>
        </trans-unit>
        <trans-unit id="9c8f94ea33d23c19ce77204a84bf9dc0e745ad73" translate="yes" xml:space="preserve">
          <source>This specifies what string should be put at the end of the contents page. The default is a string more or less like this:</source>
          <target state="translated">Esto especifica qué cadena debe ponerse al final de la página de contenidos.El valor por defecto es una cadena más o menos como esta:</target>
        </trans-unit>
        <trans-unit id="6917d9958e46c59dbadffa0d75ffc8ead9eeb027" translate="yes" xml:space="preserve">
          <source>This specifies where to find a YAML file of test scheduling rules. If not provided, it looks for a default file to use. It first checks for a file given in the &lt;code&gt;HARNESS_RULESFILE&lt;/code&gt; environment variable, then it checks for</source>
          <target state="translated">Esto especifica d&amp;oacute;nde encontrar un archivo YAML de reglas de programaci&amp;oacute;n de pruebas. Si no se proporciona, busca un archivo predeterminado para usar. Primero busca un archivo dado en la variable de entorno &lt;code&gt;HARNESS_RULESFILE&lt;/code&gt; , luego busca</target>
        </trans-unit>
        <trans-unit id="ad18b67d60ebc32fa32a162a7cf995a9a7c75509" translate="yes" xml:space="preserve">
          <source>This stack stores the values that regular perl code is operating on, usually intermediate values of expressions within a statement. The stack itself is formed of an array of SV pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c702c584a5b241344dd398527ce50b4bfbe9b63e" translate="yes" xml:space="preserve">
          <source>This stage is controlled by the macro &lt;code&gt;SIZE_ONLY&lt;/code&gt; being set.</source>
          <target state="translated">Esta etapa est&amp;aacute; controlada por la macro &lt;code&gt;SIZE_ONLY&lt;/code&gt; que se establece.</target>
        </trans-unit>
        <trans-unit id="bad4c7bd6149d53fef7284ef08f67b09b3206bd8" translate="yes" xml:space="preserve">
          <source>This statement is not a legal contract. This statement is not a legal document in any way, shape, or form. Perl is distributed under the GNU Public License and under the Artistic License; those are the precise legal terms. This statement isn't about the law or licenses. It's about community, mutual respect, trust, and good-faith cooperation.</source>
          <target state="translated">Esta declaración no es un contrato legal.Esta declaración no es un documento legal de ninguna manera,forma o manera.Perl se distribuye bajo la Licencia Pública GNU y bajo la Licencia Artística;esos son los términos legales precisos.Esta declaración no es sobre la ley o las licencias.Se trata de la comunidad,el respeto mutuo,la confianza y la cooperación de buena fe.</target>
        </trans-unit>
        <trans-unit id="5a98c55935426becf715b954b892501f79db080b" translate="yes" xml:space="preserve">
          <source>This statement should at least appear in the README file. You may also wish to include it in a Copying file and your source files. Remember to include the other words in addition to the Copyright.</source>
          <target state="translated">Esta declaración debería aparecer al menos en el archivo README.También puede incluirla en un archivo de copia y en sus archivos de origen.Recuerda incluir las otras palabras además del Copyright.</target>
        </trans-unit>
        <trans-unit id="5584a0e56dfda5fbec4748cd6a50bc455909922d" translate="yes" xml:space="preserve">
          <source>This step is listed for completeness only. Since it does not change semantics, details of this step are not documented and are subject to change without notice. This step is performed over the finite automaton that was generated during the previous pass.</source>
          <target state="translated">Este paso se enumera sólo para completarlo.Como no cambia la semántica,los detalles de este paso no están documentados y están sujetos a cambios sin previo aviso.Este paso se realiza sobre el autómata finito que se generó durante la pasada anterior.</target>
        </trans-unit>
        <trans-unit id="54c5eb8ed193c34bf7512d41b140b26cac84363b" translate="yes" xml:space="preserve">
          <source>This step is the last one for all constructs except regular expressions, which are processed further.</source>
          <target state="translated">Este paso es el último para todas las construcciones,excepto las expresiones regulares,que son procesadas más adelante.</target>
        </trans-unit>
        <trans-unit id="821b4588528e230329db6b553dfd4048a67b80be" translate="yes" xml:space="preserve">
          <source>This still doesn't guarantee that a real person is answering your prompts or reading your output.</source>
          <target state="translated">Esto aún no garantiza que una persona real esté respondiendo a tus preguntas o leyendo tu salida.</target>
        </trans-unit>
        <trans-unit id="a7c9161f97b6f8900f13bf7304c1db4d0488adaf" translate="yes" xml:space="preserve">
          <source>This stores the number of eval groups in the pattern. This is used for security purposes when embedding compiled regexes into larger patterns with &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Esto almacena el n&amp;uacute;mero de grupos de evaluaci&amp;oacute;n en el patr&amp;oacute;n. Esto se utiliza por motivos de seguridad al incrustar expresiones regulares compiladas en patrones m&amp;aacute;s grandes con &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc862416697ee8a2c0658635a4952465e7e9a208" translate="yes" xml:space="preserve">
          <source>This stores the number of eval groups in the pattern. This is used for security purposes when embedding compiled regexes into larger patterns with &lt;code&gt;qr//&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc38633b5aabfda04a32707218d9bef85297337b" translate="yes" xml:space="preserve">
          <source>This strategy can employ a network connection. As such it would be computationally expensive.</source>
          <target state="translated">Esta estrategia puede emplear una conexión de red.Como tal,sería computacionalmente costosa.</target>
        </trans-unit>
        <trans-unit id="55b6f7ba63a618224a4b898bcbb27d9706c30d52" translate="yes" xml:space="preserve">
          <source>This string tells Perl to consult the CRTL's internal &lt;code&gt;environ&lt;/code&gt; array of key-value pairs, using</source>
          <target state="translated">Esta cadena le dice a Perl que consulte la matriz &lt;code&gt;environ&lt;/code&gt; interna de CRTL de pares clave-valor, usando</target>
        </trans-unit>
        <trans-unit id="7ae6448a0aa9566553b6817c071e02a343cc087d" translate="yes" xml:space="preserve">
          <source>This struct typedef</source>
          <target state="translated">Esta estructura tipificada</target>
        </trans-unit>
        <trans-unit id="f1bc15138286b1a37e209e8a6243ffb9f2ea5373" translate="yes" xml:space="preserve">
          <source>This structure is used for handling data structures that the regex engine needs to handle specially during a clone or free operation on the compiled product. Each element in the data array has a corresponding element in the what array. During compilation regops that need special structures stored will add an element to each array using the add_data() routine and then store the index in the regop.</source>
          <target state="translated">Esta estructura se utiliza para manejar las estructuras de datos que el motor regex necesita manejar especialmente durante una operación de clonación o libre en el producto compilado.Cada elemento de la matriz de datos tiene un elemento correspondiente en la matriz de qué.Durante la compilación,los regops que necesitan almacenar estructuras especiales añadirán un elemento a cada array usando la rutina add_data()y luego almacenarán el índice en el regop.</target>
        </trans-unit>
        <trans-unit id="313e4efa9f1c4a624d38d9de85969d28133dcf4f" translate="yes" xml:space="preserve">
          <source>This stuff if needed to allow me to play with other ways of monitoring the test results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78d4b0d4925694b27ab08d1c6e58334dc8e28bc" translate="yes" xml:space="preserve">
          <source>This style of commenting has been largely superseded by the raw, freeform commenting that is allowed with the &lt;code&gt;//x&lt;/code&gt; modifier.</source>
          <target state="translated">Este estilo de comentarios ha sido reemplazado en gran medida por los comentarios en bruto y de forma libre que se permiten con el modificador &lt;code&gt;//x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="057805a7554b8dd392dcf60ed8e3b1750c015cb9" translate="yes" xml:space="preserve">
          <source>This style of commenting has been largely superseded by the raw, freeform commenting that is allowed with the &lt;code&gt;/x&lt;/code&gt; modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9149446c6e172d289bce208ab7502a726c607dbb" translate="yes" xml:space="preserve">
          <source>This subkey gives the integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f344b018a57310e7df154cc09c4a4c8ffc8347" translate="yes" xml:space="preserve">
          <source>This subroutine accepts a new style name and three style arguments as above, and creates, registers, and selects the newly named style. It is an error to re-add a style; call set_style_standard() to switch between several styles.</source>
          <target state="translated">Esta subrutina acepta un nuevo nombre de estilo y tres argumentos de estilo como arriba,y crea,registra y selecciona el estilo recién nombrado.Es un error volver a añadir un estilo;llame a set_style_standard()para cambiar entre varios estilos.</target>
        </trans-unit>
        <trans-unit id="d4edd10fd3d7f6f2e8552ea6e5bfd25a981a931d" translate="yes" xml:space="preserve">
          <source>This subroutine produces a standard help message, derived from the program's POD section SYNOPSIS using &lt;a href=&quot;../pod/usage&quot;&gt;Pod::Usage&lt;/a&gt;. It takes the same arguments as VersionMessage(). In particular, you cannot tie it directly to an option, e.g.:</source>
          <target state="translated">Esta subrutina produce un mensaje de ayuda est&amp;aacute;ndar, derivado de la secci&amp;oacute;n POD del programa SINOPSIS usando &lt;a href=&quot;../pod/usage&quot;&gt;Pod :: Usage&lt;/a&gt; . Toma los mismos argumentos que VersionMessage (). En particular, no puede vincularlo directamente a una opci&amp;oacute;n, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9b889ca4ce29aee9a3861172160f0fc1f9aa54f8" translate="yes" xml:space="preserve">
          <source>This subroutine produces a standard help message, derived from the program's POD section SYNOPSIS using &lt;a href=&quot;Pod::Usage&quot;&gt;Pod::Usage&lt;/a&gt;. It takes the same arguments as VersionMessage(). In particular, you cannot tie it directly to an option, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5689fa040b7fc66f95972afdb83490d423250c81" translate="yes" xml:space="preserve">
          <source>This subroutine provides a standard version message. Its argument can be:</source>
          <target state="translated">Esta subrutina proporciona un mensaje de versión estándar.Su argumento puede ser:</target>
        </trans-unit>
        <trans-unit id="8ecee5dd8e0a61ddae4c3d45c386aa7954dd0f33" translate="yes" xml:space="preserve">
          <source>This subroutine will add commas to your number:</source>
          <target state="translated">Esta subrutina añadirá comas a tu número:</target>
        </trans-unit>
        <trans-unit id="f33530c08d2ea0b801b43fac5cff8bb563110c57" translate="yes" xml:space="preserve">
          <source>This succeeds if the &quot;martian&quot; character GX is in the string, and fails otherwise. If you don't like using (?&amp;lt;!), a zero-width negative look-behind assertion, you can replace (?&amp;lt;![A-Z]) with (?:^|[^A-Z]).</source>
          <target state="translated">Esto tiene &amp;eacute;xito si el car&amp;aacute;cter &quot;marciano&quot; GX est&amp;aacute; en la cadena y falla en caso contrario. Si no le gusta usar (? &amp;lt;!), Una aserci&amp;oacute;n de b&amp;uacute;squeda hacia atr&amp;aacute;s negativa de ancho cero, puede reemplazar (? &amp;lt;! [AZ]) con (?: ^ | [^ AZ]).</target>
        </trans-unit>
        <trans-unit id="85a98330f72d7fa29e768ec7aa2344fb1a20cbca" translate="yes" xml:space="preserve">
          <source>This suppresses printing of VMS status messages to SYS$OUTPUT and SYS$ERROR if Perl terminates with an error status, and allows programs that are expecting &quot;unix-style&quot; Perl to avoid having to parse VMS error messages. It does not suppress any messages from Perl itself, just the messages generated by DCL after Perl exits. The DCL symbol $STATUS will still have the termination status, but with a high-order bit set:</source>
          <target state="translated">Esto suprime la impresión de los mensajes de estado del VMS a SYS$OUTPUT y SYS$ERROR si Perl termina con un estado de error,y permite a los programas que esperan un Perl &quot;estilo unix&quot; evitar tener que analizar los mensajes de error del VMS.No suprime ningún mensaje del propio Perl,sólo los mensajes generados por DCL tras la salida de Perl.El símbolo $STATUS de DCL seguirá teniendo el estado de terminación,pero con un conjunto de bits de alto orden:</target>
        </trans-unit>
        <trans-unit id="a73c08f06f0acf42846845d03633aa9b47905a33" translate="yes" xml:space="preserve">
          <source>This surprising autovivification in what does not at first--or even second--glance appear to be an lvalue context may be fixed in a future release.</source>
          <target state="translated">Esta sorprendente autovivificación en lo que no parece ser un contexto de valor a primera o segunda vista,puede ser fijado en un futuro lanzamiento.</target>
        </trans-unit>
        <trans-unit id="e56b6634af06492105c8150cce8eec38c642722a" translate="yes" xml:space="preserve">
          <source>This switch causes Perl to dump core after compiling your program. You can then in theory take this core dump and turn it into an executable file by using the</source>
          <target state="translated">Este interruptor hace que Perl descargue el núcleo después de compilar su programa.Entonces,en teoría,puedes tomar este volcado de núcleo y convertirlo en un archivo ejecutable usando el</target>
        </trans-unit>
        <trans-unit id="cdeac32803cbaac383dc34d3e5d5f188b61766f8" translate="yes" xml:space="preserve">
          <source>This switch really just enables the global &lt;code&gt;$^W&lt;/code&gt; variable; normally, the lexically scoped &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma is preferred. You can disable or promote into fatal errors specific warnings using &lt;code&gt;__WARN__&lt;/code&gt; hooks, as described in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; and &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;. See also &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; and &lt;a href=&quot;perltrap&quot;&gt;perltrap&lt;/a&gt;. A fine-grained warning facility is also available if you want to manipulate entire classes of warnings; see &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Este conmutador realmente solo habilita la variable global &lt;code&gt;$^W&lt;/code&gt; ; normalmente, se prefiere el pragma de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso con&lt;/a&gt; &amp;aacute;mbito l&amp;eacute;xico . Puede deshabilitar o promover advertencias espec&amp;iacute;ficas de errores fatales utilizando ganchos &lt;code&gt;__WARN__&lt;/code&gt; , como se describe en &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; y &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; . V&amp;eacute;anse tambi&amp;eacute;n &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; y &lt;a href=&quot;perltrap&quot;&gt;perltrap&lt;/a&gt; . Tambi&amp;eacute;n hay disponible una funci&amp;oacute;n de advertencia detallada si desea manipular clases enteras de advertencias; ver &lt;a href=&quot;warnings&quot;&gt;advertencias&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1eec8c1e53eca861ae72403ed034c71d15de36a4" translate="yes" xml:space="preserve">
          <source>This switch really just enables the global &lt;code&gt;$^W&lt;/code&gt; variable; normally, the lexically scoped &lt;code&gt;use warnings&lt;/code&gt; pragma is preferred. You can disable or promote into fatal errors specific warnings using &lt;code&gt;__WARN__&lt;/code&gt; hooks, as described in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; and &lt;a href=&quot;perlfunc#warn&quot;&gt;&quot;warn&quot; in perlfunc&lt;/a&gt;. See also &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; and &lt;a href=&quot;perltrap&quot;&gt;perltrap&lt;/a&gt;. A fine-grained warning facility is also available if you want to manipulate entire classes of warnings; see &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9aace5953cb75e0bd50c74f57a0b38f9c0103c2" translate="yes" xml:space="preserve">
          <source>This symbol conditionally defines the symbol &lt;code&gt;BSD&lt;/code&gt; when running on a &lt;code&gt;BSD&lt;/code&gt; system.</source>
          <target state="translated">Este s&amp;iacute;mbolo define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;BSD&lt;/code&gt; cuando se ejecuta en un sistema &lt;code&gt;BSD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9dffb9b12a2139e8c4c666d76c2bbb94b410515d" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by mmap() (and simultaneously the type of the first argument). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;caddr_t&lt;/code&gt; .</source>
          <target state="translated">Este s&amp;iacute;mbolo contiene el tipo de puntero devuelto por mmap () (y simult&amp;aacute;neamente el tipo del primer argumento). Puede ser &lt;code&gt;void *&lt;/code&gt; o &lt;code&gt;caddr_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82fb35656fbf4e4b9cf3733e209ae82b04049909" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by mmap() (and simultaneously the type of the first argument). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;caddr_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78cc593a5e3d5f9580ef534ee09e8fe0d641140" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by shmat(). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;char *&lt;/code&gt; .</source>
          <target state="translated">Este s&amp;iacute;mbolo contiene el tipo de puntero devuelto por shmat (). Puede ser &lt;code&gt;void *&lt;/code&gt; o &lt;code&gt;char *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="784f8163b2c96f5e1ad2d33b1877166fe69ae941" translate="yes" xml:space="preserve">
          <source>This symbol contains the type of pointer returned by shmat(). It can be &lt;code&gt;void *&lt;/code&gt; or &lt;code&gt;char *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f3ba36a4f3dda7bd8acb2eea24bb10daa748c" translate="yes" xml:space="preserve">
          <source>This symbol is defined if using the &lt;code&gt;FILE_ptr&lt;/code&gt; macro as an lvalue to increase the pointer by n has the side effect of decreasing the value of File_cnt(fp) by n.</source>
          <target state="translated">Este s&amp;iacute;mbolo se define si el uso de la macro &lt;code&gt;FILE_ptr&lt;/code&gt; como un valor l para aumentar el puntero en n tiene el efecto secundario de disminuir el valor de File_cnt (fp) en n.</target>
        </trans-unit>
        <trans-unit id="0683919acfce603ad7685e97943788fb4e37c119" translate="yes" xml:space="preserve">
          <source>This symbol is defined if using the &lt;code&gt;FILE_ptr&lt;/code&gt; macro as an lvalue to increase the pointer by n leaves File_cnt(fp) unchanged.</source>
          <target state="translated">Este s&amp;iacute;mbolo se define si el uso de la macro &lt;code&gt;FILE_ptr&lt;/code&gt; como un lvalue para aumentar el puntero en n deja File_cnt (fp) sin cambios.</target>
        </trans-unit>
        <trans-unit id="93f9dcbec7fb63d67f75a0e1d4dc9ae41d2b59f2" translate="yes" xml:space="preserve">
          <source>This symbol is set to &lt;code&gt;struct direct&lt;/code&gt; or &lt;code&gt;struct dirent&lt;/code&gt; depending on whether dirent is available or not. You should use this pseudo type to portably declare your directory entries.</source>
          <target state="translated">Este s&amp;iacute;mbolo se establece en &lt;code&gt;struct direct&lt;/code&gt; o &lt;code&gt;struct dirent&lt;/code&gt; dependiendo de si dirent est&amp;aacute; disponible o no. Debe utilizar este pseudo tipo para declarar de forma port&amp;aacute;til sus entradas de directorio.</target>
        </trans-unit>
        <trans-unit id="ac5221df55c0b6f88cbdccf1d492a80ec8b042ec" translate="yes" xml:space="preserve">
          <source>This symbol reflects the patchlevel, if available. Will usually come from the</source>
          <target state="translated">Este símbolo refleja el nivel de parche,si está disponible.Normalmente viene de la</target>
        </trans-unit>
        <trans-unit id="b709a76faa1011cf3f1c524bd59100484a2a8c2a" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports fpos64_t.</source>
          <target state="translated">Este símbolo se definirá si el compilador de C soporta fpos64_t.</target>
        </trans-unit>
        <trans-unit id="343c9a95f0e1882d7b8de9c8d965312cb38ddb59" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports int64_t.</source>
          <target state="translated">Este símbolo se definirá si el compilador de C soporta int64_t.</target>
        </trans-unit>
        <trans-unit id="9fabec6c07d2b2eb93287e97cce2db59d9d91ab9" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports off64_t.</source>
          <target state="translated">Este símbolo se definirá si el compilador de C soporta off64_t.</target>
        </trans-unit>
        <trans-unit id="425b3d025cac3f927d48be352caec0255a6ff1f6" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports ptrdiff_t.</source>
          <target state="translated">Este símbolo se definirá si el compilador de C soporta ptrdiff_t.</target>
        </trans-unit>
        <trans-unit id="8b08c311a150e9da2b658a2599a4ffb33ccacd56" translate="yes" xml:space="preserve">
          <source>This symbol will be defined if the C compiler supports socklen_t.</source>
          <target state="translated">Este símbolo se definirá si el compilador de C soporta socklen_t.</target>
        </trans-unit>
        <trans-unit id="025aea88f0880f5a01a7cfa41a1296fe3bb5e473" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the malloc_good_size routine is available for use.</source>
          <target state="translated">Este símbolo,si se define,indica que la rutina malloc_good_size está disponible para su uso.</target>
        </trans-unit>
        <trans-unit id="8a656f9000aaa7b4a0b80166141d60895ed70146" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the malloc_size routine is available for use.</source>
          <target state="translated">Este símbolo,si se define,indica que la rutina malloc_size está disponible para su uso.</target>
        </trans-unit>
        <trans-unit id="9f16a25b173530b121560b8b39634ea26912b006" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the system provides a prototype for the modfl() function. Otherwise, it is up to the program to supply one. C99 says it should be long double modfl(long double, long double *);</source>
          <target state="translated">Este símbolo,si se define,indica que el sistema proporciona un prototipo para la función modfl().De lo contrario,depende del programa suministrar uno.C99 dice que debe ser doble largo modfl(doble largo,doble largo *);</target>
        </trans-unit>
        <trans-unit id="46fd1ea7339001ddcefcaaf1e70c3783b77303d2" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that the system stores the variable argument list datatype, va_list, in a format that cannot be copied by simple assignment, so that some other means must be used when copying is required. As such systems vary in their provision (or non-provision) of copying mechanisms,</source>
          <target state="translated">Este símbolo,si se define,indica que el sistema almacena el tipo de datos de la lista de argumentos variables,va_list,en un formato que no puede copiarse mediante una simple asignación,por lo que debe utilizarse algún otro medio cuando se requiera la copia.Como tales sistemas varían en su disposición (o no disposición)de mecanismos de copia,</target>
        </trans-unit>
        <trans-unit id="33cfc6c8458868fdba1853ad63d6a5ab248c80dd" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates that we can use _NSGetExecutablePath and realpath to get a full path for the executable, and hence convert $^X to an absolute path.</source>
          <target state="translated">Este símbolo,si está definido,indica que podemos usar _NSGetExecutablePath y realpath para obtener una ruta completa para el ejecutable,y por lo tanto convertir $^X a una ruta absoluta.</target>
        </trans-unit>
        <trans-unit id="c755fed5c388f41a69a9c083b151ea18f5a79b60" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, indicates to the C program that it should include &amp;lt;xlocale.h&amp;gt; to get uselocale() and its friends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cca9096a2b0dd91e445763521373111ae6cf7d" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells how many mantissa bits there are in double precision floating point format. Note that this is usually &lt;code&gt;DBL_MANT_DIG&lt;/code&gt; minus one, since with the standard &lt;code&gt;IEEE&lt;/code&gt; 754 formats &lt;code&gt;DBL_MANT_DIG&lt;/code&gt; includes the implicit bit which doesn't really exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cda7b3100613ca1663cb55bf36b335f38c04e0" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells how many mantissa bits there are in long double precision floating point format. Note that this can be &lt;code&gt;LDBL_MANT_DIG&lt;/code&gt; minus one, since &lt;code&gt;LDBL_MANT_DIG&lt;/code&gt; can include the &lt;code&gt;IEEE&lt;/code&gt; 754 implicit bit. The common x86-style 80-bit long double does not have an implicit bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5579cd2141da02375bbc1afc9cdf3e216d16eb" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells that fflush(&lt;code&gt;NULL&lt;/code&gt; ) correctly flushes all pending stdio output without side effects. In particular, on some platforms calling fflush(&lt;code&gt;NULL&lt;/code&gt; ) *still* corrupts &lt;code&gt;STDIN&lt;/code&gt; if it is a pipe.</source>
          <target state="translated">Este s&amp;iacute;mbolo, si est&amp;aacute; definido, indica que fflush ( &lt;code&gt;NULL&lt;/code&gt; ) elimina correctamente todos los resultados de stdio pendientes sin efectos secundarios. En particular, en algunas plataformas, llamar a fflush ( &lt;code&gt;NULL&lt;/code&gt; ) * todav&amp;iacute;a * corrompe &lt;code&gt;STDIN&lt;/code&gt; si es una tuber&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="864f27e3d5797754ededc663f882621f2b6e62f1" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells that fflush(&lt;code&gt;NULL&lt;/code&gt;) correctly flushes all pending stdio output without side effects. In particular, on some platforms calling fflush(&lt;code&gt;NULL&lt;/code&gt;) *still* corrupts &lt;code&gt;STDIN&lt;/code&gt; if it is a pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345492b736fde856a18832ea228dc15b7f57e1fd" translate="yes" xml:space="preserve">
          <source>This symbol, if defined, tells that to flush all pending stdio output one must loop through all the stdio file handles stored in an array and fflush them. Note that if fflushNULL is defined, fflushall will not even be probed for and will be left undefined.</source>
          <target state="translated">Este símbolo,si se define,dice que para limpiar toda la salida de la señal estándar pendiente,se debe hacer un bucle a través de todos los manejadores de archivos estándar almacenados en un array y limpiarlos.Tenga en cuenta que si se define fflushNULL,ni siquiera se sondeará fflushall y se dejará sin definir.</target>
        </trans-unit>
        <trans-unit id="dcd9bfb79795353183cc954075073576d42a4a96" translate="yes" xml:space="preserve">
          <source>This syntax can be used with any class or object method:</source>
          <target state="translated">Esta sintaxis puede ser utilizada con cualquier clase o método de objeto:</target>
        </trans-unit>
        <trans-unit id="361a88cbd3ef11a7c4b058ea6f65a1768cf1bf06" translate="yes" xml:space="preserve">
          <source>This syntax make the caret a special character inside a bracketed character class, but only if it is the first character of the class. So if you want the caret as one of the characters to match, either escape the caret or else don't list it first.</source>
          <target state="translated">Esta sintaxis hace que el caret sea un personaje especial dentro de una clase de personaje entre corchetes,pero sólo si es el primer personaje de la clase.Así que si quieres que el cometa sea uno de los personajes que coincidan,o bien escapa del cometa o bien no lo enumeres primero.</target>
        </trans-unit>
        <trans-unit id="cf8882c6e41ea0e436011545b6eac42846ae64e6" translate="yes" xml:space="preserve">
          <source>This syntax must be enabled with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'postderef'&lt;/code&gt; . It is experimental, and will warn by default unless &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
'experimental::postderef'&lt;/code&gt; is in effect.</source>
          <target state="translated">Esta sintaxis debe habilitarse con la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'postderef'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'postderef' . Es experimental y advertir&amp;aacute; de forma predeterminada a menos que &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::postderef'&lt;/code&gt; haya ninguna advertencia 'experimental :: postderef' en vigor.</target>
        </trans-unit>
        <trans-unit id="2448d5ee0ab20cace7d0d694356cb8b018b6fff7" translate="yes" xml:space="preserve">
          <source>This syntax must be enabled with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'refaliasing'&lt;/code&gt; . It is experimental, and will warn by default unless &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
'experimental::refaliasing'&lt;/code&gt; is in effect.</source>
          <target state="translated">Esta sintaxis debe estar habilitada con la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'refaliasing'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'reajuste de alineaci&amp;oacute;n' . Es experimental y advertir&amp;aacute; de forma predeterminada a menos que &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::refaliasing'&lt;/code&gt; haya ninguna advertencia 'experimental :: refaliasing' en vigor.</target>
        </trans-unit>
        <trans-unit id="287e0462bd1d909a19c1388821cda96b1374549b" translate="yes" xml:space="preserve">
          <source>This syntax must be enabled with &lt;code&gt;use feature 'refaliasing'&lt;/code&gt;. It is experimental, and will warn by default unless &lt;code&gt;no warnings 'experimental::refaliasing'&lt;/code&gt; is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f3dce1b8ffb69288b5e7233eedf50e51bf6d28" translate="yes" xml:space="preserve">
          <source>This table should give some indication on the relative speed of different algorithms. It is sorted by throughput based on a benchmark done with of some implementations of this API:</source>
          <target state="translated">Esta tabla debería dar alguna indicación sobre la velocidad relativa de los diferentes algoritmos.Está ordenada por el rendimiento basado en un benchmark hecho con algunas implementaciones de esta API:</target>
        </trans-unit>
        <trans-unit id="dd4da486347f5d466977ce9a1a1aa8289c5632b1" translate="yes" xml:space="preserve">
          <source>This table summarizes the mapping of the encodings set up by the &lt;code&gt;Encode::Locale&lt;/code&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e7d00a447b322e0b6281e41be210174353561f" translate="yes" xml:space="preserve">
          <source>This tag holds groups of assorted specialist opcodes that don't warrant having optags defined for them.</source>
          <target state="translated">Esta etiqueta contiene grupos de códigos de operaciones especializados variados que no justifican que se les defina una etiqueta de operaciones.</target>
        </trans-unit>
        <trans-unit id="4b596b3ecff7c84a2d9f652cda2f444e71a7c9fa" translate="yes" xml:space="preserve">
          <source>This tag holds opcodes related to loading modules and getting information about calling environment and args.</source>
          <target state="translated">Esta etiqueta contiene opcodes relacionados con la carga de módulos y la obtención de información sobre el entorno de llamada y los args.</target>
        </trans-unit>
        <trans-unit id="04ae009bf5132dad193828814ac61d5405735292" translate="yes" xml:space="preserve">
          <source>This tag is simply a bucket for opcodes that are unlikely to be used via a tag name but need to be tagged for completeness and documentation.</source>
          <target state="translated">Esta etiqueta es simplemente un cubo para los opcodes que es poco probable que se utilicen a través de un nombre de etiqueta,pero que necesitan ser etiquetados para completarlos y documentarlos.</target>
        </trans-unit>
        <trans-unit id="2f05cedd800de4070129a2009cffd984beb3db08" translate="yes" xml:space="preserve">
          <source>This takes a list of operator names and returns the corresponding list of operator descriptions.</source>
          <target state="translated">Se toma una lista de nombres de operadores y se devuelve la lista correspondiente de descripciones de operadores.</target>
        </trans-unit>
        <trans-unit id="7c7d2a6226efbfa63a2425be94ed3ca13dcfd261" translate="yes" xml:space="preserve">
          <source>This takes a list of strings (which are presumed to be language-tags; strings that aren't, are ignored); and after each one, this function inserts super-ordinate forms that don't already appear in the list. The original list, plus these insertions, is returned.</source>
          <target state="translated">Esto toma una lista de cuerdas (que se presume que son etiquetas de lenguaje;las cuerdas que no lo son,son ignoradas);y después de cada una,esta función inserta formas superordinadas que no aparecen ya en la lista.La lista original,más estas inserciones,es devuelta.</target>
        </trans-unit>
        <trans-unit id="13fd8ee50911015c2027466ceb16f127d689e9d2" translate="yes" xml:space="preserve">
          <source>This takes a locale name (like &quot;en&quot;, &quot;en_US&quot;, or &quot;en_US.ISO8859-1&quot;) and maps it to a language tag. If it's not mappable (as with, notably, &quot;C&quot; and &quot;POSIX&quot;), this returns empty-list in a list context, or undef in a scalar context.</source>
          <target state="translated">Esto toma un nombre de localidad (como &quot;en&quot;,&quot;en_US&quot;,o &quot;en_US.ISO8859-1&quot;)y lo mapea a una etiqueta de idioma.Si no es mapeable (como con,notablemente,&quot;C&quot; y &quot;POSIX&quot;),esto devuelve una lista vacía en un contexto de lista,o undef en un contexto escalar.</target>
        </trans-unit>
        <trans-unit id="bec8c5f2b922f1fda3abe6ef42f1ed85d0f41b3d" translate="yes" xml:space="preserve">
          <source>This takes an optional parameter, the name of a .packlist. If the file exists, it will be opened and the contents of the file will be read. The new() method returns a reference to a hash. This hash holds an entry for each line in the .packlist. In the case of old-style .packlists, the value associated with each key is undef. In the case of new-style .packlists, the value associated with each key is a hash containing the key=value pairs following the filename in the .packlist.</source>
          <target state="translated">Esto toma un parámetro opcional,el nombre de una lista de paquetes.Si el archivo existe,se abrirá y se leerá su contenido.El método new()devuelve una referencia a un hash.Este hash contiene una entrada para cada línea en el .packlist.En el caso de las antiguas listas .pac,el valor asociado a cada clave es undef.En el caso del nuevo estilo .packlists,el valor asociado a cada clave es un hash que contiene los pares clave=valor que siguen al nombre de archivo en el .packlist.</target>
        </trans-unit>
        <trans-unit id="cc773e12adc99441c781ca39ab744dcff4457a5a" translate="yes" xml:space="preserve">
          <source>This takes an optional parameter, the name of the .packlist to be read. If no file is specified, the .packlist specified to new() will be read. If the .packlist does not exist, Carp::croak will be called.</source>
          <target state="translated">Esto toma un parámetro opcional,el nombre del .packlist para ser leído.Si no se especifica ningún archivo,se leerá el .packlist especificado como new().Si el .packlist no existe,se llamará Carp::croak.</target>
        </trans-unit>
        <trans-unit id="1a1bc9e2453dd25ae8b25a05301cb1b80e688d4f" translate="yes" xml:space="preserve">
          <source>This takes an optional parameter, the name of the .packlist to be written. If no file is specified, the .packlist specified to new() will be overwritten.</source>
          <target state="translated">Esto toma un parámetro opcional,el nombre de la lista de paquetes a ser escrito.Si no se especifica ningún archivo,el .packlist especificado como new()será sobrescrito.</target>
        </trans-unit>
        <trans-unit id="71c865c7274d3c7e5bfe698effd4f04214f7cd15" translate="yes" xml:space="preserve">
          <source>This takes name/value pairs that effect how the test is run.</source>
          <target state="translated">Esto toma pares nombre/valor que afectan a la forma en que se ejecuta la prueba.</target>
        </trans-unit>
        <trans-unit id="cc76b10f19749554379a021ff3eedaa58c818a23" translate="yes" xml:space="preserve">
          <source>This takes one mandatory parameter, the name of a module. It checks that all the files listed in the modules .packlist actually exist, and returns a list of any missing files. If an optional second argument which evaluates to true is given any missing files will be removed from the .packlist</source>
          <target state="translated">Esto requiere un parámetro obligatorio,el nombre de un módulo.Comprueba que todos los archivos listados en la lista de módulos .packlist existen realmente,y devuelve una lista de los archivos que faltan.Si se da un segundo argumento opcional que se evalúa como verdadero,cualquier archivo que falte será eliminado de la lista de archivos.</target>
        </trans-unit>
        <trans-unit id="5b5d51a829067c0f74043220e1f7dc0a082fd9a1" translate="yes" xml:space="preserve">
          <source>This takes one mandatory parameter, the name of a module. It returns a list of all the directories from the package. Additional parameters are allowed. The first is one of the strings &quot;prog&quot;, &quot;doc&quot; or &quot;all&quot;, to select either just program directories, just manual directories or all directories. The remaining parameters are a list of directories. The directories returned will be restricted to those under the specified directories. This method returns only the leaf directories that contain files from the specified module.</source>
          <target state="translated">Esto requiere un parámetro obligatorio,el nombre de un módulo.Devuelve una lista de todos los directorios del paquete.Se permiten parámetros adicionales.El primero es una de las cadenas &quot;prog&quot;,&quot;doc&quot; o &quot;all&quot;,para seleccionar o bien sólo los directorios de programas,sólo los directorios manuales o todos los directorios.Los parámetros restantes son una lista de directorios.Los directorios devueltos se restringirán a los que estén bajo los directorios especificados.Este método devuelve sólo los directorios de la hoja que contienen archivos del módulo especificado.</target>
        </trans-unit>
        <trans-unit id="d2af5c7a635840c9a764106b51edcb4ae7965f15" translate="yes" xml:space="preserve">
          <source>This takes one mandatory parameter, the name of a module. It returns a list of all the filenames from the package. To obtain a list of core perl files, use the module name 'Perl'. Additional parameters are allowed. The first is one of the strings &quot;prog&quot;, &quot;doc&quot; or &quot;all&quot;, to select either just program files, just manual files or all files. The remaining parameters are a list of directories. The filenames returned will be restricted to those under the specified directories.</source>
          <target state="translated">Esto requiere un parámetro obligatorio,el nombre de un módulo.Devuelve una lista de todos los nombres de archivo del paquete.Para obtener una lista de los archivos de perl del núcleo,usa el nombre del módulo 'Perl'.Se permiten parámetros adicionales.El primero es una de las cadenas &quot;prog&quot;,&quot;doc&quot; o &quot;all&quot;,para seleccionar sólo los archivos de programa,sólo los archivos manuales o todos los archivos.Los parámetros restantes son una lista de directorios.Los nombres de los archivos devueltos se restringirán a los de los directorios especificados.</target>
        </trans-unit>
        <trans-unit id="c87f6895af9c38d5c250f2c66fe4725760f823f0" translate="yes" xml:space="preserve">
          <source>This takes optional named parameters. Without parameters, this searches for all the installed .packlists on the system using information from &lt;code&gt;%Config::Config&lt;/code&gt; and the default module search paths &lt;code&gt;@INC&lt;/code&gt; . The packlists are read using the &lt;a href=&quot;packlist&quot;&gt;ExtUtils::Packlist&lt;/a&gt; module.</source>
          <target state="translated">Esto toma par&amp;aacute;metros con nombre opcionales. Sin par&amp;aacute;metros, busca todas las listas de paquetes instaladas en el sistema utilizando informaci&amp;oacute;n de &lt;code&gt;%Config::Config&lt;/code&gt; y las rutas de b&amp;uacute;squeda de m&amp;oacute;dulos predeterminadas &lt;code&gt;@INC&lt;/code&gt; . Las listas de paquetes se leen utilizando el m&amp;oacute;dulo &lt;a href=&quot;packlist&quot;&gt;ExtUtils :: Packlist&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af5e8e4c803265793609442c474430cf073a9f84" translate="yes" xml:space="preserve">
          <source>This takes optional named parameters. Without parameters, this searches for all the installed .packlists on the system using information from &lt;code&gt;%Config::Config&lt;/code&gt; and the default module search paths &lt;code&gt;@INC&lt;/code&gt;. The packlists are read using the &lt;a href=&quot;ExtUtils::Packlist&quot;&gt;ExtUtils::Packlist&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac00ded61272ff3715863e3d3dc5ed285ce52be5" translate="yes" xml:space="preserve">
          <source>This takes the hashref from &lt;code&gt;facet_data()&lt;/code&gt; and blesses each facet into the proper &lt;code&gt;Test2::EventFacet::*&lt;/code&gt; subclass. If no class can be found for any given facet it will be passed along unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0811a32d0bc5998774816ef12efb4252ce7381da" translate="yes" xml:space="preserve">
          <source>This talk of parameters and arbitrary complexity is just another way to say that an entry in a phrasebook is what in a programming language would be called a &quot;function&quot;. Just so you don't miss it, this is the crux of this article:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a03ab8b368c68d278641fea23e27727f8dbba74" translate="yes" xml:space="preserve">
          <source>This target is stubbed out. Not sure why.</source>
          <target state="translated">Este objetivo está fuera de juego.No estoy seguro de por qué.</target>
        </trans-unit>
        <trans-unit id="fab4c4b22d474c11e9a11868afc03c97140845f1" translate="yes" xml:space="preserve">
          <source>This technique is most useful when you have a project that uses a lot of third-party modules. You can define all your possible hints in one-place. This can even be in a sub-class of autodie. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ca50a85da91c16a0a908f36c57ff992ef7c02c" translate="yes" xml:space="preserve">
          <source>This technique of separation of the glue part from the workhorse part has obvious tradeoffs: if you want to change a Perl interface, you need to change two places in your code. However, it removes a lot of clutter, and makes the workhorse part independent from idiosyncrasies of Perl calling convention. (In fact, there is nothing Perl-specific in the above description, a different version of &lt;b&gt;xsubpp&lt;/b&gt; might have translated this to TCL glue or Python glue as well.)</source>
          <target state="translated">Esta t&amp;eacute;cnica de separaci&amp;oacute;n de la parte de pegamento de la parte del caballo de batalla tiene ventajas obvias: si desea cambiar una interfaz de Perl, debe cambiar dos lugares en su c&amp;oacute;digo. Sin embargo, elimina mucho desorden y hace que el caballo de batalla sea independiente de las idiosincrasias de la convenci&amp;oacute;n de llamadas de Perl. (De hecho, no hay nada espec&amp;iacute;fico de Perl en la descripci&amp;oacute;n anterior, una versi&amp;oacute;n diferente de &lt;b&gt;xsubpp&lt;/b&gt; podr&amp;iacute;a haber traducido esto a pegamento TCL o pegamento Python tambi&amp;eacute;n).</target>
        </trans-unit>
        <trans-unit id="579494abf777c1edad219e4e3e72f24bade80f1c" translate="yes" xml:space="preserve">
          <source>This technique was popular for a while (and was recommended in Damian Conway's</source>
          <target state="translated">Esta técnica fue popular durante un tiempo (y fue recomendada en el libro de Damian Conway</target>
        </trans-unit>
        <trans-unit id="5e8f5ce6d67f7bf4b479db2dfff968206c152d0a" translate="yes" xml:space="preserve">
          <source>This tells the compiler to use integer operations from here to the end of the enclosing BLOCK. On many machines, this doesn't matter a great deal for most computations, but on those without floating point hardware, it can make a big difference in performance.</source>
          <target state="translated">Esto le dice al compilador que use operaciones enteras desde aquí hasta el final del BLOQUE que lo encierra.En muchas máquinas,esto no importa mucho para la mayoría de los cálculos,pero en aquellas sin hardware de punto flotante,puede hacer una gran diferencia en el rendimiento.</target>
        </trans-unit>
        <trans-unit id="661943b2ace4b2cbd0e7c782744a83d712cb4bd1" translate="yes" xml:space="preserve">
          <source>This tells the parser that you accept additional formatting codes, beyond just the standard ones (I B C L F S X, plus the two weird ones you don't actually see in the parse tree, Z and E). For example, to also accept codes &quot;N&quot;, &quot;R&quot;, and &quot;W&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c227c573c801b67ab844d5a781ca2d861b5ad11" translate="yes" xml:space="preserve">
          <source>This test harness is the same as &lt;a href=&quot;../harness&quot;&gt;TAP::Harness&lt;/a&gt;, but test results are output in color. Passing tests are printed in green. Failing tests are in red. Skipped tests are blue on a white background and TODO tests are printed in white.</source>
          <target state="translated">Este arn&amp;eacute;s de prueba es el mismo que el &lt;a href=&quot;../harness&quot;&gt;TAP :: Harness&lt;/a&gt; , pero los resultados de la prueba se emiten en color. Los ex&amp;aacute;menes aprobados est&amp;aacute;n impresos en verde. Las pruebas fallidas est&amp;aacute;n en rojo. Las pruebas omitidas son azules sobre un fondo blanco y las pruebas TODO est&amp;aacute;n impresas en blanco.</target>
        </trans-unit>
        <trans-unit id="5aeeba01de86baa7b8993aef4f94514bdbb7f537" translate="yes" xml:space="preserve">
          <source>This test harness is the same as &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt;, but test results are output in color. Passing tests are printed in green. Failing tests are in red. Skipped tests are blue on a white background and TODO tests are printed in white.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c5da5399251bb5e1db8f624c5839bd6c16417b" translate="yes" xml:space="preserve">
          <source>This test not coming out ok could indicate that you have in fact installed a bLuRfle.pm module or that the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot; require \&quot;$module_name.pm\&quot;; &quot;&lt;/code&gt; test may give misleading results with your installation of perl. If yours is the latter case then please let the author know.</source>
          <target state="translated">Esta prueba no sale bien podr&amp;iacute;a indicar que de hecho ha instalado un m&amp;oacute;dulo bLuRfle.pm o que la prueba &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot; require \&quot;$module_name.pm\&quot;; &quot;&lt;/code&gt; puede dar resultados enga&amp;ntilde;osos con su instalaci&amp;oacute;n de perl. Si el suyo es el &amp;uacute;ltimo caso, comun&amp;iacute;queselo al autor.</target>
        </trans-unit>
        <trans-unit id="f1a47c3ed2c720af6cbbff7d8f1fba90981d6cf7" translate="yes" xml:space="preserve">
          <source>This test not coming out ok could indicate that you have in fact installed a bLuRfle.pm module or that the &lt;code&gt;eval &quot; require \&quot;$module_name.pm\&quot;; &quot;&lt;/code&gt; test may give misleading results with your installation of perl. If yours is the latter case then please let the author know.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7779eb97d1704eb5b38f4af625c19d04da87929" translate="yes" xml:space="preserve">
          <source>This third program fails to run because &lt;code&gt;$&amp;amp;&lt;/code&gt; is tainted: it is the result of a match involving &lt;code&gt;\w&lt;/code&gt; while &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect.</source>
          <target state="translated">Este tercer programa no se ejecuta porque &lt;code&gt;$&amp;amp;&lt;/code&gt; est&amp;aacute; contaminado: es el resultado de una coincidencia que involucra a &lt;code&gt;\w&lt;/code&gt; mientras &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; est&amp;aacute; en efecto.</target>
        </trans-unit>
        <trans-unit id="d68ad58afc351b6be0d95c3d8369561b57239182" translate="yes" xml:space="preserve">
          <source>This third program fails to run because &lt;code&gt;$&amp;amp;&lt;/code&gt; is tainted: it is the result of a match involving &lt;code&gt;\w&lt;/code&gt; while &lt;code&gt;use locale&lt;/code&gt; is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dae3d33db186460fb270be827c017862ed6f4c9" translate="yes" xml:space="preserve">
          <source>This thread can change the locale all it wants and it won't affect any other thread, except any that also have been switched to the global locale. This means that a multi-threaded application can have a single thread using an alien library without a problem; but no more than a single thread can be so-occupied. Bad results likely will happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3af2bc97cd9f37316fc3da9caf4914a2a7462bf" translate="yes" xml:space="preserve">
          <source>This threshold can be changed from 100, by recompiling the</source>
          <target state="translated">Este umbral puede cambiarse de 100,recompilando el</target>
        </trans-unit>
        <trans-unit id="e43eef0f764abc7110894418223db6c40d531f70" translate="yes" xml:space="preserve">
          <source>This throws an exception at the frame (filename and line number where errors should be reported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a47e3515c81e527144a0c9b60fab0d504885832" translate="yes" xml:space="preserve">
          <source>This tie class has chosen to return an error rather than raising an exception if its constructor should fail. While this is how dbmopen() works, other classes may well not wish to be so forgiving. It checks the global variable &lt;code&gt;$^W&lt;/code&gt; to see whether to emit a bit of noise anyway.</source>
          <target state="translated">Esta clase de empate ha optado por devolver un error en lugar de generar una excepci&amp;oacute;n si su constructor falla. Si bien as&amp;iacute; es como funciona dbmopen (), es posible que otras clases no deseen ser tan indulgentes. Comprueba la variable global &lt;code&gt;$^W&lt;/code&gt; para ver si debe emitir un poco de ruido de todos modos.</target>
        </trans-unit>
        <trans-unit id="65215d2823f33c6578d2c1ee584a26f404ed972a" translate="yes" xml:space="preserve">
          <source>This time only two filters have been used -- we only need to manipulate the contents of the key, so it wasn't necessary to install any value filters.</source>
          <target state="translated">Esta vez sólo se han utilizado dos filtros...sólo tenemos que manipular el contenido de la llave,por lo que no fue necesario instalar ningún filtro de valor.</target>
        </trans-unit>
        <trans-unit id="ce475e5b88de267f8c35364dcce4ac0349ad1b9f" translate="yes" xml:space="preserve">
          <source>This time only two filters have been used; we only need to manipulate the contents of the key, so it wasn't necessary to install any value filters.</source>
          <target state="translated">Esta vez sólo se han utilizado dos filtros;sólo tenemos que manipular el contenido de la llave,por lo que no fue necesario instalar ningún filtro de valor.</target>
        </trans-unit>
        <trans-unit id="33080a774d1683a847960294bf99870a610d6d24" translate="yes" xml:space="preserve">
          <source>This time we get the right answer:</source>
          <target state="translated">Esta vez tenemos la respuesta correcta:</target>
        </trans-unit>
        <trans-unit id="de132ff4c4de4a8dae8876bdea9d65e3845d2e34" translate="yes" xml:space="preserve">
          <source>This time we have got all the key/value pairs, including the multiple values associated with the key &lt;code&gt;Wall&lt;/code&gt; .</source>
          <target state="translated">Esta vez tenemos todos los pares clave / valor, incluidos los m&amp;uacute;ltiples valores asociados con la clave &lt;code&gt;Wall&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc46887a2d3ce4b75ca14523b77c1875e5b5f923" translate="yes" xml:space="preserve">
          <source>This time we have got all the key/value pairs, including the multiple values associated with the key &lt;code&gt;Wall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549daec07a3febc80783db85efb5cb76a1300cf5" translate="yes" xml:space="preserve">
          <source>This time we've decided to blow up (raise an exception) if the renice fails--there's no place for us to return an error otherwise, and it's probably the right thing to do.</source>
          <target state="translated">Esta vez hemos decidido explotar (hacer una excepción)si el renicio falla...no hay lugar para que devolvamos un error de otra manera,y probablemente sea lo correcto.</target>
        </trans-unit>
        <trans-unit id="e8220bb1a44581d2e3ca1f66709b3d28e4dca5ce" translate="yes" xml:space="preserve">
          <source>This time whenever &lt;code&gt;CallSavedSub1&lt;/code&gt; gets called it will execute the Perl subroutine &lt;code&gt;joe&lt;/code&gt; (assuming it exists) rather than &lt;code&gt;fred&lt;/code&gt; as was originally requested in the call to &lt;code&gt;SaveSub1&lt;/code&gt; .</source>
          <target state="translated">Esta vez, siempre que se &lt;code&gt;CallSavedSub1&lt;/code&gt; , ejecutar&amp;aacute; la subrutina de Perl &lt;code&gt;joe&lt;/code&gt; (suponiendo que exista) en lugar de &lt;code&gt;fred&lt;/code&gt; como se solicit&amp;oacute; originalmente en la llamada a &lt;code&gt;SaveSub1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9585799a0bb025c0fc2a5fb468e2e0510621cfe4" translate="yes" xml:space="preserve">
          <source>This time whenever &lt;code&gt;CallSavedSub1&lt;/code&gt; gets called it will execute the Perl subroutine &lt;code&gt;joe&lt;/code&gt; (assuming it exists) rather than &lt;code&gt;fred&lt;/code&gt; as was originally requested in the call to &lt;code&gt;SaveSub1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97f664a05e05836532f171c31abc8294dc4fa2e" translate="yes" xml:space="preserve">
          <source>This timeout prevents CPAN from hanging when trying to parse a pathologically coded $VERSION from a module.</source>
          <target state="translated">Este tiempo de espera evita que el CPAN se cuelgue al intentar analizar una $VERSIÓN patológicamente codificada de un módulo.</target>
        </trans-unit>
        <trans-unit id="818cb77ceebe03d7349ba167c3cce5e948a3bb9b" translate="yes" xml:space="preserve">
          <source>This tip has been brought to you by Nick Ing-Simmons and Stas Bekman.</source>
          <target state="translated">Este consejo ha sido traído a ustedes por Nick Ing-Simmons y Stas Bekman.</target>
        </trans-unit>
        <trans-unit id="d27a6342f3cf97c393debaf5d2880083dadfb79d" translate="yes" xml:space="preserve">
          <source>This toggle lets you turn off the abort logic for the hub. When this is toggled to true &lt;b&gt;you&lt;/b&gt; are responsible for ensuring no additional events are generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad35df16ed4d238965d8000164af0c76d6be400" translate="yes" xml:space="preserve">
          <source>This token is only available under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or the &quot;current_sub&quot; feature. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">Este token solo est&amp;aacute; disponible con el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; o la funci&amp;oacute;n &quot;current_sub&quot;. Ver &lt;a href=&quot;feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35716269721e35aed3ed9931d09baf8957f4a7d8" translate="yes" xml:space="preserve">
          <source>This token is only available under &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or the &quot;current_sub&quot; feature. See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">Este token solo est&amp;aacute; disponible con el &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; o la funci&amp;oacute;n &quot;current_sub&quot;. Ver &lt;a href=&quot;../feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8782e676913565f7b95bd8b849e9d4513a4cab5" translate="yes" xml:space="preserve">
          <source>This token is only available under &lt;code&gt;use v5.16&lt;/code&gt; or the &lt;a href=&quot;feature#The-%27current_sub%27-feature&quot;&gt;&lt;code&gt;&quot;current_sub&quot;&lt;/code&gt; feature&lt;/a&gt;. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a442863544084141507fc6b9cc253372f4528af" translate="yes" xml:space="preserve">
          <source>This token tells &lt;b&gt;sigtrap&lt;/b&gt; to install handlers for all subsequently listed signals. This is the default behavior.</source>
          <target state="translated">Este token le dice a &lt;b&gt;sigtrap&lt;/b&gt; que instale controladores para todas las se&amp;ntilde;ales enumeradas posteriormente. Este es el comportamiento predeterminado.</target>
        </trans-unit>
        <trans-unit id="563416938874462a6a3a7e213b018a4bbf3569b4" translate="yes" xml:space="preserve">
          <source>This token tells &lt;b&gt;sigtrap&lt;/b&gt; to install handlers only for subsequently listed signals which aren't already trapped or ignored.</source>
          <target state="translated">Este token le dice a &lt;b&gt;sigtrap&lt;/b&gt; que instale controladores solo para las se&amp;ntilde;ales enumeradas posteriormente que a&amp;uacute;n no est&amp;aacute;n atrapadas o ignoradas.</target>
        </trans-unit>
        <trans-unit id="0c3e36d66e90a38e2c172eb5380aff092f3d8aff" translate="yes" xml:space="preserve">
          <source>This tool is most useful when you want to return the value you get from calling a function that needs to see the current context:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbef2365e83f0b66bb2b5afb7a58a64a398a46f8" translate="yes" xml:space="preserve">
          <source>This tool isn't appropriate for reporting bugs in any version prior to Perl 5.0.</source>
          <target state="translated">Esta herramienta no es apropiada para reportar errores en cualquier versión anterior a Perl 5.0.</target>
        </trans-unit>
        <trans-unit id="5b1f48f2009eaba595386dfcdaf2125e0a97a308" translate="yes" xml:space="preserve">
          <source>This tool will hide a context for the provided block of code. This means any tools run inside the block will get a completely new context if they acquire one. The new context will be inherited by tools nested below the one that acquired it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cd36d63ba450353c54dc7196ff92a040ad99b2" translate="yes" xml:space="preserve">
          <source>This translates as &quot;set &lt;code&gt;TARG&lt;/code&gt; to 10, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack; set &lt;code&gt;TARG&lt;/code&gt; to 20, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack&quot;. At the end of the operation, the stack does not contain the values 10 and 20, but actually contains two pointers to &lt;code&gt;TARG&lt;/code&gt; , which we have set to 20.</source>
          <target state="translated">Esto se traduce como &quot;establecer &lt;code&gt;TARG&lt;/code&gt; en 10, presionar un puntero a &lt;code&gt;TARG&lt;/code&gt; en la pila; establecer &lt;code&gt;TARG&lt;/code&gt; en 20, presionar un puntero a &lt;code&gt;TARG&lt;/code&gt; en la pila&quot;. Al final de la operaci&amp;oacute;n, la pila no contiene los valores 10 y 20, pero en realidad contiene dos punteros a &lt;code&gt;TARG&lt;/code&gt; , que hemos establecido en 20.</target>
        </trans-unit>
        <trans-unit id="b327555f1c252fbe229268edcab000a9e602b1a9" translate="yes" xml:space="preserve">
          <source>This translates as &quot;set &lt;code&gt;TARG&lt;/code&gt; to 10, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack; set &lt;code&gt;TARG&lt;/code&gt; to 20, push a pointer to &lt;code&gt;TARG&lt;/code&gt; onto the stack&quot;. At the end of the operation, the stack does not contain the values 10 and 20, but actually contains two pointers to &lt;code&gt;TARG&lt;/code&gt;, which we have set to 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba94eb90171beedcd9bec6456a8694f27844f356" translate="yes" xml:space="preserve">
          <source>This transport contacts a remote SMTP server over TCP. It optionally uses SSL and can authenticate to the server via SASL.</source>
          <target state="translated">Este transporte contacta con un servidor SMTP remoto a través de TCP.Opcionalmente utiliza SSL y puede autenticarse en el servidor a través de SASL.</target>
        </trans-unit>
        <trans-unit id="e40f9d55c5ee498252f4f99087dcea386954252b" translate="yes" xml:space="preserve">
          <source>This transport contacts a remote SMTP server over TCP. It optionally uses TLS or SSL and can authenticate to the server via SASL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f84e699be8b82423bdf0c8efc71c8b6cffc002" translate="yes" xml:space="preserve">
          <source>This tree has 5 nodes (one per &lt;code&gt;TYPE&lt;/code&gt; specifier), only 3 of them are not optimized away (one per number in the left column). The immediate children of the given node correspond to &lt;code&gt;{}&lt;/code&gt; pairs on the same level of indentation, thus this listing corresponds to the tree:</source>
          <target state="translated">Este &amp;aacute;rbol tiene 5 nodos (uno por especificador &lt;code&gt;TYPE&lt;/code&gt; ), solo 3 de ellos no est&amp;aacute;n optimizados (uno por n&amp;uacute;mero en la columna de la izquierda). Los hijos inmediatos del nodo dado corresponden a &lt;code&gt;{}&lt;/code&gt; pares en el mismo nivel de sangr&amp;iacute;a, por lo que esta lista corresponde al &amp;aacute;rbol:</target>
        </trans-unit>
        <trans-unit id="10bdb23da270b66c79801ca69744614d31056771" translate="yes" xml:space="preserve">
          <source>This tries loading classes based on the language-tags you give (like &lt;code&gt;(&quot;en-US&quot;, &quot;sk&quot;, &quot;kon&quot;, &quot;es-MX&quot;, &quot;ja&quot;, &quot;i-klingon&quot;)&lt;/code&gt; , and for the first class that succeeds, returns YourProjClass::</source>
          <target state="translated">Esto intenta cargar clases en funci&amp;oacute;n de las etiquetas de idioma que proporcione (como &lt;code&gt;(&quot;en-US&quot;, &quot;sk&quot;, &quot;kon&quot;, &quot;es-MX&quot;, &quot;ja&quot;, &quot;i-klingon&quot;)&lt;/code&gt; , y para la primera clase que tiene &amp;eacute;xito, devuelve YourProjClass ::</target>
        </trans-unit>
        <trans-unit id="babb439fd1f2025fd1dc37240e930742af072a8e" translate="yes" xml:space="preserve">
          <source>This tries loading classes based on the language-tags you give (like &lt;code&gt;(&quot;en-US&quot;, &quot;sk&quot;, &quot;kon&quot;, &quot;es-MX&quot;, &quot;ja&quot;, &quot;i-klingon&quot;)&lt;/code&gt;, and for the first class that succeeds, returns YourProjClass::</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2350736fbbdb09c3e03af560458218f7c39a0887" translate="yes" xml:space="preserve">
          <source>This tries to get the title string out of $parser, by getting some tokens, and scanning them for the title, and then ungetting them so that you can process the token-stream from the beginning.</source>
          <target state="translated">Esto intenta sacar la cadena del título de $parser,consiguiendo algunas fichas,y escudriñándolas para el título,y luego desbloqueándolas para que puedas procesar la secuencia de fichas desde el principio.</target>
        </trans-unit>
        <trans-unit id="a7a0a5100eb7d660c79e344156a06e5739ae3e99" translate="yes" xml:space="preserve">
          <source>This turns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c43b29369b0643df2b475c636f7ba4a7760104c" translate="yes" xml:space="preserve">
          <source>This tutorial assumes that the make program that Perl is configured to use is called &lt;code&gt;make&lt;/code&gt; . Instead of running &quot;make&quot; in the examples that follow, you may have to substitute whatever make program Perl has been configured to use. Running &lt;b&gt;perl -V:make&lt;/b&gt; should tell you what it is.</source>
          <target state="translated">Este tutorial asume que el programa make que Perl est&amp;aacute; configurado para usar se llama &lt;code&gt;make&lt;/code&gt; . En lugar de ejecutar &quot;make&quot; en los ejemplos que siguen, puede que tenga que sustituir cualquier programa make que Perl haya sido configurado para usar. Ejecutar &lt;b&gt;perl -V: make&lt;/b&gt; deber&amp;iacute;a decirle qu&amp;eacute; es.</target>
        </trans-unit>
        <trans-unit id="99b5d150876f05176f523c02a4521b0203e2d731" translate="yes" xml:space="preserve">
          <source>This tutorial assumes that the make program that Perl is configured to use is called &lt;code&gt;make&lt;/code&gt;. Instead of running &quot;make&quot; in the examples that follow, you may have to substitute whatever make program Perl has been configured to use. Running &lt;b&gt;perl -V:make&lt;/b&gt; should tell you what it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c02c1e1c4554cfc38ab4519576c46376d729f42" translate="yes" xml:space="preserve">
          <source>This tutorial can still be used on such a system. The XSUB build mechanism will check the system and build a dynamically-loadable library if possible, or else a static library and then, optionally, a new statically-linked executable with that static library linked in.</source>
          <target state="translated">Este tutorial puede seguir siendo utilizado en un sistema de este tipo.El mecanismo de construcción del XSUB comprobará el sistema y construirá una biblioteca de carga dinámica si es posible,o bien una biblioteca estática y luego,opcionalmente,un nuevo ejecutable enlazado estáticamente con esa biblioteca estática enlazada.</target>
        </trans-unit>
        <trans-unit id="042a6a29ffea342487866bd18b2ff67e8550a4e6" translate="yes" xml:space="preserve">
          <source>This tutorial describes the use of Perl interpreter threads (sometimes referred to as</source>
          <target state="translated">Este tutorial describe el uso de los hilos de interpretación de Perl (a veces denominados</target>
        </trans-unit>
        <trans-unit id="584c62ddbbc858e85333edcc1d7b6494d833b45b" translate="yes" xml:space="preserve">
          <source>This tutorial flattens the learning curve by discussing regular expression concepts, along with their notation, one at a time and with many examples. The first part of the tutorial will progress from the simplest word searches to the basic regular expression concepts. If you master the first part, you will have all the tools needed to solve about 98% of your needs. The second part of the tutorial is for those comfortable with the basics and hungry for more power tools. It discusses the more advanced regular expression operators and introduces the latest cutting-edge innovations.</source>
          <target state="translated">Este tutorial aplana la curva de aprendizaje discutiendo conceptos de expresión regular,junto con su notación,uno a la vez y con muchos ejemplos.La primera parte del tutorial progresará desde las búsquedas de palabras más simples hasta los conceptos básicos de expresión regular.Si dominas la primera parte,tendrás todas las herramientas necesarias para resolver alrededor del 98% de tus necesidades.La segunda parte del tutorial es para aquellos que se sienten cómodos con los conceptos básicos y tienen hambre de más herramientas.Se habla de los operadores de expresión regular más avanzados y se presentan las últimas innovaciones de vanguardia.</target>
        </trans-unit>
        <trans-unit id="09418d1e9dc1ccd649181b2ae1d0e9cc30227030" translate="yes" xml:space="preserve">
          <source>This tutorial speaks in rather absolute terms, and provides only a limited view of the wealth of character string related features that Perl has to offer. For most projects, this information will probably suffice.</source>
          <target state="translated">Este tutorial habla en términos bastante absolutos,y proporciona sólo una visión limitada de la riqueza de las características relacionadas con las cadenas de caracteres que Perl tiene para ofrecer.Para la mayoría de los proyectos,esta información probablemente será suficiente.</target>
        </trans-unit>
        <trans-unit id="5a1babab3f5740242709a97dfef0170b83cfd116" translate="yes" xml:space="preserve">
          <source>This tutorial starts with very simple examples and becomes more complex, with each new example adding new features. Certain concepts may not be completely explained until later in the tutorial in order to slowly ease the reader into building extensions.</source>
          <target state="translated">Este tutorial comienza con ejemplos muy simples y se hace más complejo,con cada nuevo ejemplo añadiendo nuevas características.Ciertos conceptos pueden no ser explicados completamente hasta más adelante en el tutorial para facilitar lentamente al lector la construcción de extensiones.</target>
        </trans-unit>
        <trans-unit id="513743e90a808d724cf722e256c18c6a577aed36" translate="yes" xml:space="preserve">
          <source>This tutorial was written from a Unix point of view. Where I know them to be otherwise different for other platforms (e.g. Win32), I will list them. If you find something that was missed, please let me know.</source>
          <target state="translated">Este tutorial fue escrito desde el punto de vista de Unix.Donde sé que son diferentes para otras plataformas (por ejemplo,Win32),las enumeraré.Si encuentra algo que se haya pasado por alto,por favor hágamelo saber.</target>
        </trans-unit>
        <trans-unit id="2d3bc7e20dd6d03170372006d4bcd471be2b1a05" translate="yes" xml:space="preserve">
          <source>This tutorial will educate the reader on the steps involved in creating a Perl extension. The reader is assumed to have access to &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; and &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;.</source>
          <target state="translated">Este tutorial educar&amp;aacute; al lector sobre los pasos necesarios para crear una extensi&amp;oacute;n de Perl. Se supone que el lector tiene acceso a &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; , &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; y &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73d6133ba18859a5eaedd64f01ef459aa33a4f61" translate="yes" xml:space="preserve">
          <source>This ucfirst form of #var generates a tag-value form of itself for display; it converts '#Var' into a 'Var =&amp;gt; #var' style, which is then handled as described above. (Imp-note: #Vars cannot be used for conditional-fills, because the =&amp;gt; #var transform is done after the check for #Var's value).</source>
          <target state="translated">Esta forma ucfirst de #var genera una forma de valor de etiqueta de s&amp;iacute; mismo para su visualizaci&amp;oacute;n; convierte '#Var' en un estilo 'Var =&amp;gt; #var', que luego se maneja como se describe arriba. (Imp-note: #Vars no se puede usar para rellenos condicionales, porque la transformaci&amp;oacute;n =&amp;gt; #var se realiza despu&amp;eacute;s de la verificaci&amp;oacute;n del valor de # Var).</target>
        </trans-unit>
        <trans-unit id="e1c48ccdb02bacfa9c7db277adb42c2586c3c859" translate="yes" xml:space="preserve">
          <source>This unloading is usually necessary when embedding a shared-object perl (e.g. one configured with -Duseshrplib) within a larger application, and the perl interpreter is created and destroyed several times within the lifetime of the application. In this case it is possible that the system dynamic linker will unload and then subsequently reload the shared libperl without relocating any references to it from any files DynaLoaded by the previous incarnation of the interpreter. As a result, any shared objects opened by DynaLoader may point to a now invalid 'ghost' of the libperl shared object, causing apparently random memory corruption and crashes. This behaviour is most commonly seen when using Apache and mod_perl built with the APXS mechanism.</source>
          <target state="translated">Esta descarga suele ser necesaria cuando se incrusta un perl de objeto compartido (por ejemplo,uno configurado con -Duseshrplib)dentro de una aplicación más grande,y el intérprete de perl se crea y se destruye varias veces durante la vida útil de la aplicación.En este caso es posible que el enlazador dinámico del sistema descargue y posteriormente vuelva a cargar el perl compartido sin reubicar ninguna referencia al mismo desde ningún archivo DynaLoaded de la encarnación anterior del intérprete.Como resultado,cualquier objeto compartido abierto por DynaLoader puede apuntar a un &quot;fantasma&quot; ahora inválido del objeto compartido libperl,causando una corrupción de la memoria aparentemente aleatoria y caídas.Este comportamiento se ve más comúnmente cuando se usa Apache y el mod_perl construido con el mecanismo APXS.</target>
        </trans-unit>
        <trans-unit id="1b13f3deb5370e5675a9d76c565d42ae5d602f71" translate="yes" xml:space="preserve">
          <source>This usage is deprecated, because the behavior is likely to change in a future version of Perl.</source>
          <target state="translated">Este uso es obsoleto,porque es probable que el comportamiento cambie en una futura versión de Perl.</target>
        </trans-unit>
        <trans-unit id="f8cc0202ec780bce218b4e5dcccd13c92cdafc61" translate="yes" xml:space="preserve">
          <source>This usage was deprecated and as of Perl 5.32 is no longer allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8628227b2034eb7bb5d1a38319f1096e92570eb" translate="yes" xml:space="preserve">
          <source>This usage was deprecated, and as of Perl 5.32 is no longer allowed, making it possible to change the behavior in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bf7571677624aefcaac6c0acb5fa38635561cd" translate="yes" xml:space="preserve">
          <source>This use of &lt;code&gt;my()&lt;/code&gt; in a false conditional has been deprecated since Perl 5.10, and it will become a fatal error in Perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb7ee3adb793d7785e44f4cd1c475bc562072ff" translate="yes" xml:space="preserve">
          <source>This use of &lt;code&gt;my()&lt;/code&gt; in a false conditional was deprecated beginning in Perl 5.10 and became a fatal error in Perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa749e21deac96525cb24d3358da4f7fb5f0d24" translate="yes" xml:space="preserve">
          <source>This use of my() in false conditional is no longer allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b6fb62901deb9e84ba258e77b4c4979b396131" translate="yes" xml:space="preserve">
          <source>This used to provide support for the old 5.005 threading module. It now does nothing.</source>
          <target state="translated">Esto solía servir de apoyo al antiguo módulo de enhebrado 5.005.Ahora no hace nada.</target>
        </trans-unit>
        <trans-unit id="ad74ce7c330e222ac3a23c23df9097ca9cc782c1" translate="yes" xml:space="preserve">
          <source>This uses &lt;code&gt;[...]&lt;/code&gt; notation to create a new anonymous array, and &lt;code&gt;$aref2&lt;/code&gt; is assigned a reference to the new array. The new array is initialized with the contents of the array referred to by &lt;code&gt;$aref1&lt;/code&gt; .</source>
          <target state="translated">Esto usa la &lt;code&gt;[...]&lt;/code&gt; notaci&amp;oacute;n para crear una nueva matriz an&amp;oacute;nima, y &lt;code&gt;$aref2&lt;/code&gt; se le asigna una referencia a la nueva matriz. La nueva matriz se inicializa con el contenido de la matriz a la que hace referencia &lt;code&gt;$aref1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f780e61f5be8b67d8a73b7a70cd2de66ca725d92" translate="yes" xml:space="preserve">
          <source>This uses &lt;code&gt;[...]&lt;/code&gt; notation to create a new anonymous array, and &lt;code&gt;$aref2&lt;/code&gt; is assigned a reference to the new array. The new array is initialized with the contents of the array referred to by &lt;code&gt;$aref1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec25d0bdb752659175b1040a999aeb2b6d490b8" translate="yes" xml:space="preserve">
          <source>This uses a comment character so that we can distinguish a &lt;code&gt;set&lt;/code&gt; value (from a previous</source>
          <target state="translated">Esto usa un car&amp;aacute;cter de comentario para que podamos distinguir un valor &lt;code&gt;set&lt;/code&gt; (de un</target>
        </trans-unit>
        <trans-unit id="cc1cad67a921e3eb4640eba7ead1b7740937eea5" translate="yes" xml:space="preserve">
          <source>This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">Utiliza descriptores de archivo como los que se obtienen llamando a &lt;code&gt;POSIX::open&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef0715f911bf2d7dde414c04ee4f2d77679374e6" translate="yes" xml:space="preserve">
          <source>This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8309f8b6f133836961834b1a77c15524062381" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;LIB$FID_TO_NAME&lt;/code&gt; run-time library call to find the name of the primary link to a file, and returns the filename in VMS format. This function is not available on non-VMS systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7665ba2d9d5783e7fcf462d2624ff87c082afc" translate="yes" xml:space="preserve">
          <source>This uses the git protocol (port 9418).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f46aaaf1565e8957012263096fadaa9a048c4d5" translate="yes" xml:space="preserve">
          <source>This utility allows you to apply pattern matching to &lt;b&gt;the contents&lt;/b&gt; of files contained in a tar archive. You might use this to identify all files in an archive which contain lines matching the specified pattern and either print out the pathnames or extract the files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9ad1aba7c9a639b483b1f8f929290363dd11bd" translate="yes" xml:space="preserve">
          <source>This utility is designed to write a Makefile for an extension module from a Makefile.PL. It is based on the Makefile.SH model provided by Andy Dougherty and the perl5-porters.</source>
          <target state="translated">Esta utilidad está diseñada para escribir un Makefile para un módulo de extensión desde un Makefile.PL.Está basado en el modelo Makefile.SH proporcionado por Andy Dougherty y los perl5-porters.</target>
        </trans-unit>
        <trans-unit id="b24b7df29646f7c014772e5059f3068df5bbacbd" translate="yes" xml:space="preserve">
          <source>This utility takes a list of libraries in the form &lt;code&gt;-llib1 -llib2
-llib3&lt;/code&gt; and returns lines suitable for inclusion in an extension Makefile. Extra library paths may be included with the form &lt;code&gt;-L/another/path&lt;/code&gt; this will affect the searches for all subsequent libraries.</source>
          <target state="translated">Esta utilidad toma una lista de bibliotecas en el formato &lt;code&gt;-llib1 -llib2 -llib3&lt;/code&gt; y devuelve l&amp;iacute;neas adecuadas para su inclusi&amp;oacute;n en una extensi&amp;oacute;n Makefile. Se pueden incluir rutas de biblioteca adicionales con el formulario &lt;code&gt;-L/another/path&lt;/code&gt; esto afectar&amp;aacute; las b&amp;uacute;squedas de todas las bibliotecas posteriores.</target>
        </trans-unit>
        <trans-unit id="b766c16803f46a0ae895c110a4b6edf915519f91" translate="yes" xml:space="preserve">
          <source>This utility will read *.pl files (given as parameters) and write corresponding *.pm files. The pl2pm utilities does the following:</source>
          <target state="translated">Esta utilidad leerá los archivos *.pl (dados como parámetros)y escribirá los correspondientes archivos *.pm.La utilidad pl2pm hace lo siguiente:</target>
        </trans-unit>
        <trans-unit id="a410c695becbafd5bc2593139ba56b80c63242e8" translate="yes" xml:space="preserve">
          <source>This utility, that comes with the &lt;code&gt;Digest::SHA&lt;/code&gt; module, is used to print or verify SHA checksums.</source>
          <target state="translated">Esta utilidad, que viene con el m&amp;oacute;dulo &lt;code&gt;Digest::SHA&lt;/code&gt; , se usa para imprimir o verificar sumas de comprobaci&amp;oacute;n SHA.</target>
        </trans-unit>
        <trans-unit id="3f272981cac4ae61e9e9e8d75fb4dc12762de509" translate="yes" xml:space="preserve">
          <source>This value can be adjusted to reduce security checking if required. The value is only relevant when &lt;code&gt;safe_level&lt;/code&gt; is set to MEDIUM or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4ff7242b8a2fd67b36df12914e2cc6d1af606d" translate="yes" xml:space="preserve">
          <source>This value can be adjusted to reduce security checking if required. The value is only relevant when C</source>
          <target state="translated">Este valor puede ajustarse para reducir el control de seguridad si es necesario.El valor sólo es relevante cuando C</target>
        </trans-unit>
        <trans-unit id="cdc136e48e274a6f45986365041835b0a320611a" translate="yes" xml:space="preserve">
          <source>This value may be set when embedding for full cleanup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7591c615f6c14e41979e1eaadb2f09a869a865a0" translate="yes" xml:space="preserve">
          <source>This value overrides any &lt;code&gt;stack_size&lt;/code&gt; parameter given to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; . Its primary purpose is to permit setting the per-thread stack size for legacy threaded applications.</source>
          <target state="translated">Este valor anula cualquier par&amp;aacute;metro &lt;code&gt;stack_size&lt;/code&gt; proporcionado para &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; . Su prop&amp;oacute;sito principal es permitir la configuraci&amp;oacute;n del tama&amp;ntilde;o de pila por subproceso para aplicaciones heredadas con subprocesos.</target>
        </trans-unit>
        <trans-unit id="c8d10aaff4c3d6cbb1dc6581ac92ed77de4530c0" translate="yes" xml:space="preserve">
          <source>This value overrides any &lt;code&gt;stack_size&lt;/code&gt; parameter given to &lt;code&gt;use threads&lt;/code&gt;. Its primary purpose is to permit setting the per-thread stack size for legacy threaded applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89d32d5d5695a0582f22913b8f68fcff2f07a33" translate="yes" xml:space="preserve">
          <source>This variable (and the corresponding &lt;code&gt;array_base&lt;/code&gt; feature and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; module) allowed changing the base for array and string indexing operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ecf008113019e40a6e54f73ff5a98b48282c9e" translate="yes" xml:space="preserve">
          <source>This variable (default is 1) controls whether to enforce the contents of $^E to start with &lt;code&gt;SYS0003&lt;/code&gt; -like id. If set to 0, then the string value of $^E is what is available from the OS/2 message file. (Some messages in this file have an &lt;code&gt;SYS0003&lt;/code&gt; -like id prepended, some not.)</source>
          <target state="translated">Esta variable (el valor predeterminado es 1) controla si se debe hacer cumplir el contenido de $ ^ E para comenzar con una &lt;code&gt;SYS0003&lt;/code&gt; similar a SYS0003 . Si se establece en 0, el valor de cadena de $ ^ E es lo que est&amp;aacute; disponible en el archivo de mensajes de OS / 2. (Algunos mensajes en este archivo tienen una &lt;code&gt;SYS0003&lt;/code&gt; similar a SYS0003 al principio , otros no).</target>
        </trans-unit>
        <trans-unit id="0e88ea105d4b7ad833e8f62738de77591c442f12" translate="yes" xml:space="preserve">
          <source>This variable (default is 1) controls whether to enforce the contents of $^E to start with &lt;code&gt;SYS0003&lt;/code&gt;-like id. If set to 0, then the string value of $^E is what is available from the OS/2 message file. (Some messages in this file have an &lt;code&gt;SYS0003&lt;/code&gt;-like id prepended, some not.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16732492f2d070676c6f99bbc0efae47b95f7071" translate="yes" xml:space="preserve">
          <source>This variable bears the symbol value to be used during open() or fcntl() to turn on non-blocking I/O for a file descriptor. If you wish to switch between blocking and non-blocking, you may try ioctl(&lt;code&gt;FIOSNBIO&lt;/code&gt; ) instead, but that is only supported by some devices.</source>
          <target state="translated">Esta variable lleva el valor del s&amp;iacute;mbolo que se utilizar&amp;aacute; durante open () o fcntl () para activar la E / S sin bloqueo para un descriptor de archivo. Si desea cambiar entre bloqueo y no bloqueo, puede probar ioctl ( &lt;code&gt;FIOSNBIO&lt;/code&gt; ) en su lugar, pero eso solo es compatible con algunos dispositivos.</target>
        </trans-unit>
        <trans-unit id="15ff3c0604e1d75a5342996d8934873f8d50aeb1" translate="yes" xml:space="preserve">
          <source>This variable bears the symbol value to be used during open() or fcntl() to turn on non-blocking I/O for a file descriptor. If you wish to switch between blocking and non-blocking, you may try ioctl(&lt;code&gt;FIOSNBIO&lt;/code&gt;) instead, but that is only supported by some devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca2eeea3350d961dcaad04aa855c2a1f247bac2" translate="yes" xml:space="preserve">
          <source>This variable bears the symbolic errno code set by read() when no data is present on the file and non-blocking I/O was enabled (otherwise, read() blocks naturally).</source>
          <target state="translated">Esta variable lleva el código simbólico de errno establecido por read()cuando no hay datos presentes en el archivo y se habilitó el bloqueo de E/S (de lo contrario,read()se bloquea naturalmente).</target>
        </trans-unit>
        <trans-unit id="248382abe33b16964803e73f6ecfb34faabcc93f" translate="yes" xml:space="preserve">
          <source>This variable can be used to determine whether the Perl interpreter executing a script is in the right range of versions:</source>
          <target state="translated">Esta variable puede utilizarse para determinar si el intérprete de Perl que ejecuta un guión está en el rango correcto de versiones:</target>
        </trans-unit>
        <trans-unit id="dfea1020f3dea68d67242c313286038f4a0d0e35" translate="yes" xml:space="preserve">
          <source>This variable can be used to establish a fallthrough for the cases where nm fails to find a symbol. If usenm is false or usenm is true and mistrustnm is false, this variable has no effect. If usenm is true and mistrustnm is &lt;code&gt;compile&lt;/code&gt; , a test program will be compiled to try to find any symbol that can't be located via nm lookup. If mistrustnm is &lt;code&gt;run&lt;/code&gt; , the test program will be run as well as being compiled.</source>
          <target state="translated">Esta variable se puede utilizar para establecer una ca&amp;iacute;da en los casos en que nm no puede encontrar un s&amp;iacute;mbolo. Si usenm es falso o usenm es verdadero y desconfianza es falso, esta variable no tiene ning&amp;uacute;n efecto. Si usenm es verdadero y se &lt;code&gt;compile&lt;/code&gt; mistrustnm, se compilar&amp;aacute; un programa de prueba para intentar encontrar cualquier s&amp;iacute;mbolo que no se pueda localizar mediante la b&amp;uacute;squeda de nm. Si se &lt;code&gt;run&lt;/code&gt; mistrustnm , el programa de prueba se ejecutar&amp;aacute; y se compilar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="4b3e9ceee71cdc320b5939b5ceda3cad1b31e64c" translate="yes" xml:space="preserve">
          <source>This variable can be used to establish a fallthrough for the cases where nm fails to find a symbol. If usenm is false or usenm is true and mistrustnm is false, this variable has no effect. If usenm is true and mistrustnm is &lt;code&gt;compile&lt;/code&gt;, a test program will be compiled to try to find any symbol that can't be located via nm lookup. If mistrustnm is &lt;code&gt;run&lt;/code&gt;, the test program will be run as well as being compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0fbadd8567e78cf31399e6a2260ad4aafcd61e" translate="yes" xml:space="preserve">
          <source>This variable combines api_revision, api_version, and api_subversion in a format such as 5.6.1 (or 5_6_1) suitable for use as a directory name. This is filesystem dependent.</source>
          <target state="translated">Esta variable combina api_revision,api_version y api_subversion en un formato como 5.6.1 (o 5_6_1)adecuado para su uso como nombre de directorio.Esto depende del sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="3a2c3f8de756634885e7def1800fcfd4dd0d57a3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defined &lt;code&gt;PERL_VENDORARCH&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PERL_VENDORARCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0b791466461b0141a9f42bfce168d808b632ccd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defined &lt;code&gt;PERL_VENDORARCH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd929c3d0bcbeeec8636fa669401d4e86c870d3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;ARCHLIB&lt;/code&gt; to hold the pathname of architecture-dependent library files for $package. If $archlib is the same as $privlib, then this is set to undef.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;ARCHLIB&lt;/code&gt; para contener el nombre de ruta de los archivos de biblioteca dependientes de la arquitectura para $ paquete. Si $ archlib es lo mismo que $ privlib, entonces se establece en undef.</target>
        </trans-unit>
        <trans-unit id="ef97d2a231904adfc4265eba4006701690eed6ca" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CAN_VAPROTO&lt;/code&gt; on systems supporting prototype declaration of functions with a variable number of arguments. See also prototype.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;CAN_VAPROTO&lt;/code&gt; en sistemas que admiten la declaraci&amp;oacute;n de prototipos de funciones con un n&amp;uacute;mero variable de argumentos. Ver tambi&amp;eacute;n prototipo.</target>
        </trans-unit>
        <trans-unit id="980485e36e7b05790618d387e3c7b5f9dffdd4ab" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CASTNEG&lt;/code&gt; , which indicates whether the C compiler can cast negative float to unsigned.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;CASTNEG&lt;/code&gt; , que indica si el compilador de C puede convertir un float negativo en unsigned.</target>
        </trans-unit>
        <trans-unit id="e6c288a30b9263a34f361a5d921f5d74655c9671" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CASTNEG&lt;/code&gt;, which indicates whether the C compiler can cast negative float to unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2c21b1fb400d236c7f8b93084483db1894c446" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CHARVSPRINTF&lt;/code&gt; if this system has vsprintf returning type (char*). The trend seems to be to declare it as &quot;int vsprintf()&quot;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;CHARVSPRINTF&lt;/code&gt; si este sistema tiene vsprintf tipo de retorno (char *). La tendencia parece ser declararlo como &quot;int vsprintf ()&quot;.</target>
        </trans-unit>
        <trans-unit id="5078955ce08b58cadcdb20d3c38df82d26ee60ff" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;CTERMID&lt;/code&gt; if ctermid() is available to generate filename for terminal.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;CTERMID&lt;/code&gt; si ctermid () est&amp;aacute; disponible para generar un nombre de archivo para la terminal.</target>
        </trans-unit>
        <trans-unit id="978df228f8d800c08979baf4f0b9bb0fc46ebfa9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DIRNAMLEN&lt;/code&gt; , which indicates to the C program that the length of directory entry names is provided by a d_namelen field.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;DIRNAMLEN&lt;/code&gt; , lo que indica al programa C que la longitud de los nombres de las entradas de directorio la proporciona un campo d_namelen.</target>
        </trans-unit>
        <trans-unit id="dc998e2c8c6e574860ee6fbf06818e7c667f7aa2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DIRNAMLEN&lt;/code&gt;, which indicates to the C program that the length of directory entry names is provided by a d_namelen field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3c72fff3ec53eb910b33c4d8de7ba859b22249" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DLSYM_NEEDS_UNDERSCORE&lt;/code&gt; , which indicates that we need to prepend an underscore to the symbol name before calling dlsym().</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;DLSYM_NEEDS_UNDERSCORE&lt;/code&gt; , lo que indica que necesitamos anteponer un gui&amp;oacute;n bajo al nombre del s&amp;iacute;mbolo antes de llamar a dlsym ().</target>
        </trans-unit>
        <trans-unit id="8582344f9c7c22d7833d9ec106477884283a6de7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;DLSYM_NEEDS_UNDERSCORE&lt;/code&gt;, which indicates that we need to prepend an underscore to the symbol name before calling dlsym().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b013eda5d273dde0c71244769fe3ad52ab910f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;EBCDIC&lt;/code&gt; if this system uses &lt;code&gt;EBCDIC&lt;/code&gt; encoding.</source>
          <target state="translated">Esta variable define &lt;code&gt;EBCDIC&lt;/code&gt; de forma condicional si este sistema utiliza la codificaci&amp;oacute;n &lt;code&gt;EBCDIC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95f5847b07ee6a0574affcb0afba6691ba0cb5dc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;EOF_NONBLOCK&lt;/code&gt; if &lt;code&gt;EOF&lt;/code&gt; can be seen when reading from a non-blocking I/O source.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;EOF_NONBLOCK&lt;/code&gt; si &lt;code&gt;EOF&lt;/code&gt; puede verse al leer desde una fuente de E / S sin bloqueo.</target>
        </trans-unit>
        <trans-unit id="0af8dac12168ddb05c87d99076fc3d364dbfc497" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;GRPASSWD&lt;/code&gt; , which indicates that struct group in &amp;lt;grp.h&amp;gt; contains gr_passwd.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;GRPASSWD&lt;/code&gt; , lo que indica que el grupo de estructuras en &amp;lt;grp.h&amp;gt; contiene gr_passwd.</target>
        </trans-unit>
        <trans-unit id="cca67ae13cb5b5216b026f087e4c9cd2724e9abd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;GRPASSWD&lt;/code&gt;, which indicates that struct group in &amp;lt;grp.h&amp;gt; contains gr_passwd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e239460b32f067f0e57a573c2a38cc269c4e8cf6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_DEPRECATED&lt;/code&gt; , which indicates that &lt;code&gt;GCC&lt;/code&gt; can handle the attribute for marking deprecated APIs</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_DEPRECATED&lt;/code&gt; , lo que indica que &lt;code&gt;GCC&lt;/code&gt; puede manejar el atributo para marcar API obsoletas</target>
        </trans-unit>
        <trans-unit id="8a3ce902111f1fb6ddfbb032a62404920f5f0a69" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_DEPRECATED&lt;/code&gt;, which indicates that &lt;code&gt;GCC&lt;/code&gt; can handle the attribute for marking deprecated APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096a4e7335c9e97171f7b50c60f3c4f1d139650c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_FORMAT&lt;/code&gt; , which indicates the C compiler can check for printf-like formats.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_FORMAT&lt;/code&gt; , lo que indica que el compilador de C puede verificar formatos similares a printf.</target>
        </trans-unit>
        <trans-unit id="f0f60c4dd5eeeaebaa985d1b6354c9a991633b8e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_FORMAT&lt;/code&gt;, which indicates the C compiler can check for printf-like formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc32aff59b98aa4940aa65546e2ce2f0bae5f6b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_MALLOC&lt;/code&gt; , which indicates the C compiler can understand functions as having malloc-like semantics.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_MALLOC&lt;/code&gt; , lo que indica que el compilador de C puede entender que las funciones tienen sem&amp;aacute;ntica similar a malloc.</target>
        </trans-unit>
        <trans-unit id="bf5374f94e92fd1cc3e01675dd69dfccafafe1cf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_MALLOC&lt;/code&gt;, which indicates the C compiler can understand functions as having malloc-like semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc77040e22d8dbd38fd3bdef2b4c807ff2648d0f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NONNULL&lt;/code&gt; , which indicates that the C compiler can know that certain arguments must not be &lt;code&gt;NULL&lt;/code&gt; , and will check accordingly at compile time.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_NONNULL&lt;/code&gt; , lo que indica que el compilador de C puede saber que ciertos argumentos no deben ser &lt;code&gt;NULL&lt;/code&gt; y comprobar&amp;aacute; en consecuencia en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0d008cebd99a9203bb4aed19e68f0fe934a519a6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NONNULL&lt;/code&gt;, which indicates that the C compiler can know that certain arguments must not be &lt;code&gt;NULL&lt;/code&gt;, and will check accordingly at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ca1b192eaeeef39ff342721f49f9732f5c25b0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NORETURN&lt;/code&gt; , which indicates that the C compiler can know that certain functions are guaranteed never to return.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_NORETURN&lt;/code&gt; , lo que indica que el compilador de C puede saber que se garantiza que ciertas funciones nunca regresar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="db7d6ff22150607f2faf6e212132ffd7e2e815da" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_NORETURN&lt;/code&gt;, which indicates that the C compiler can know that certain functions are guaranteed never to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f0cde07593cb535b92fefc63eb7d81d46fe8bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_PURE&lt;/code&gt; , which indicates that the C compiler can know that certain functions are &lt;code&gt;pure&lt;/code&gt; functions, meaning that they have no side effects, and only rely on function input</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_PURE&lt;/code&gt; , lo que indica que el compilador de C puede saber que ciertas funciones son funciones &lt;code&gt;pure&lt;/code&gt; , lo que significa que no tienen efectos secundarios y solo dependen de la entrada de funciones</target>
        </trans-unit>
        <trans-unit id="17b724553d5b8a923ac88e7dad14f63c4b3879af" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_PURE&lt;/code&gt;, which indicates that the C compiler can know that certain functions are &lt;code&gt;pure&lt;/code&gt; functions, meaning that they have no side effects, and only rely on function input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420fa8e106aa6be346627e32f034151a52362ffe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_UNUSED&lt;/code&gt; , which indicates that the C compiler can know that certain variables and arguments may not always be used, and to not throw warnings if they don't get used.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_UNUSED&lt;/code&gt; , lo que indica que el compilador de C puede saber que es posible que ciertas variables y argumentos no siempre se usen, y no lanzar advertencias si no se usan.</target>
        </trans-unit>
        <trans-unit id="dd8f83fc842425448043adda2ad084876969855e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_UNUSED&lt;/code&gt;, which indicates that the C compiler can know that certain variables and arguments may not always be used, and to not throw warnings if they don't get used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcad35f0c318736909295f4f6cd964d37f1a53f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_WARN_UNUSED_RESULT&lt;/code&gt; , which indicates that the C compiler can know that certain functions have a return values that must not be ignored, such as malloc() or open().</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HASATTRIBUTE_WARN_UNUSED_RESULT&lt;/code&gt; , lo que indica que el compilador de C puede saber que ciertas funciones tienen valores de retorno que no deben ignorarse, como malloc () o open ().</target>
        </trans-unit>
        <trans-unit id="b236732aa4e34a009b54dcede2dfd55e746dc6ee" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HASATTRIBUTE_WARN_UNUSED_RESULT&lt;/code&gt;, which indicates that the C compiler can know that certain functions have a return values that must not be ignored, such as malloc() or open().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f215b234b46ef7c56eb723ad08f919ae0a7c950" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ACCESS&lt;/code&gt; if the access() system call is available to check for access permissions using real IDs.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_ACCESS&lt;/code&gt; si la llamada al sistema access () est&amp;aacute; disponible para verificar los permisos de acceso usando ID reales.</target>
        </trans-unit>
        <trans-unit id="79fed26f317480a67e604252b89c9e7cd20f70a5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_BUILTIN_ADD_OVERFLOW&lt;/code&gt;, which indicates that the compiler supports __builtin_add_overflow(x,y,&amp;amp;z) for safely adding x and y into z while checking for overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ffb21d9b86f1027201a5668c38e081eccafe1d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_BUILTIN_MUL_OVERFLOW&lt;/code&gt;, which indicates that the compiler supports __builtin_mul_overflow(x,y,&amp;amp;z) for safely multiplying x and y into z while checking for overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b292063a7933d4c21b5fe0bdc942a12c561f5a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_BUILTIN_SUB_OVERFLOW&lt;/code&gt;, which indicates that the compiler supports __builtin_sub_overflow(x,y,&amp;amp;z) for safely subtracting y from x into z while checking for overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c105d4e6058827fec8056bf20316718cbab9faa" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_CLOSEDIR&lt;/code&gt; if closedir() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_CLOSEDIR&lt;/code&gt; si closedir () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="8654218934b9b6758432460c578cc5a644b91d92" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDHOSTENT&lt;/code&gt; if endhostent() is available to close whatever was being used for host queries.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_ENDHOSTENT&lt;/code&gt; si endhostent () est&amp;aacute; disponible para cerrar lo que se estaba utilizando para las consultas del host.</target>
        </trans-unit>
        <trans-unit id="79e5c8edfd4691e1b4f25bb1c714fe1507e829f4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDNETENT&lt;/code&gt; if endnetent() is available to close whatever was being used for network queries.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_ENDNETENT&lt;/code&gt; si endnetent () est&amp;aacute; disponible para cerrar lo que se estaba utilizando para consultas de red.</target>
        </trans-unit>
        <trans-unit id="23979ba16f9e3dd7409c1aeb4d7d4d5911e864e5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDPROTOENT&lt;/code&gt; if endprotoent() is available to close whatever was being used for protocol queries.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_ENDPROTOENT&lt;/code&gt; si endprotoent () est&amp;aacute; disponible para cerrar lo que se estaba utilizando para consultas de protocolo.</target>
        </trans-unit>
        <trans-unit id="1f85023e116dfb459bcb6c6b9ea107e1880da801" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_ENDSERVENT&lt;/code&gt; if endservent() is available to close whatever was being used for service queries.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_ENDSERVENT&lt;/code&gt; si endervent () est&amp;aacute; disponible para cerrar lo que se estaba utilizando para consultas de servicio.</target>
        </trans-unit>
        <trans-unit id="9026ce557a983587089262cdc30c657f39523536" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FEGETROUND&lt;/code&gt; if fegetround() is available to get the floating point rounding mode.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_FEGETROUND&lt;/code&gt; si fegetround () est&amp;aacute; disponible para obtener el modo de redondeo de coma flotante.</target>
        </trans-unit>
        <trans-unit id="a5695e9822f626cc75613841b734f1880b97e1cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FGETPOS&lt;/code&gt; if fgetpos() is available to get the file position indicator.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_FGETPOS&lt;/code&gt; si fgetpos () est&amp;aacute; disponible para obtener el indicador de posici&amp;oacute;n del archivo.</target>
        </trans-unit>
        <trans-unit id="ecd11d67113d55076e38c3f87fbec174b96046c1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FLOCK&lt;/code&gt; if flock() is available to do file locking.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_FLOCK&lt;/code&gt; si flock () est&amp;aacute; disponible para realizar el bloqueo de archivos.</target>
        </trans-unit>
        <trans-unit id="d12df32e7c3e2769df2173cc4aeba55819c508b3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FPGETROUND&lt;/code&gt; if fpgetround() is available to get the floating point rounding mode.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_FPGETROUND&lt;/code&gt; si fpgetround () est&amp;aacute; disponible para obtener el modo de redondeo de coma flotante.</target>
        </trans-unit>
        <trans-unit id="7caed5a67bbd1068f15dc1afc8a52fbcbb8a3a6c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_FSETPOS&lt;/code&gt; if fsetpos() is available to set the file position indicator.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_FSETPOS&lt;/code&gt; si fsetpos () est&amp;aacute; disponible para establecer el indicador de posici&amp;oacute;n del archivo.</target>
        </trans-unit>
        <trans-unit id="4ca1f26e1ee2a6d6b7bcc20d2c601de0d8652782" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETESPWNAM&lt;/code&gt; if getespwnam() is available to retrieve enhanced (shadow) password entries by name.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETESPWNAM&lt;/code&gt; si getespwnam () est&amp;aacute; disponible para recuperar entradas de contrase&amp;ntilde;a mejoradas (ocultas) por nombre.</target>
        </trans-unit>
        <trans-unit id="523b849ed0e10fbdf244f4e8cd77184e7b2e7e2e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETHOSTENT&lt;/code&gt; if gethostent() is available to look up host names in some data base or another.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETHOSTENT&lt;/code&gt; si gethostent () est&amp;aacute; disponible para buscar nombres de host en alguna base de datos u otra.</target>
        </trans-unit>
        <trans-unit id="c477102d11cefe29ba1af921e3e01940cce25886" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETNETENT&lt;/code&gt; if getnetent() is available to look up network names in some data base or another.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETNETENT&lt;/code&gt; si getnetent () est&amp;aacute; disponible para buscar nombres de red en alguna base de datos u otra.</target>
        </trans-unit>
        <trans-unit id="3dd4221c56df17e7463336ebb61e6a0a59685106" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPAGESIZE&lt;/code&gt; if getpagesize() is available to get the system page size.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETPAGESIZE&lt;/code&gt; si getpagesize () est&amp;aacute; disponible para obtener el tama&amp;ntilde;o de la p&amp;aacute;gina del sistema.</target>
        </trans-unit>
        <trans-unit id="008f90e9dce5e248f0a062499f460cbfe1316a70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPGRP&lt;/code&gt; if getpgrp() is available to get the current process group.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETPGRP&lt;/code&gt; si getpgrp () est&amp;aacute; disponible para obtener el grupo de procesos actual.</target>
        </trans-unit>
        <trans-unit id="466f30d3944227e178d079578b5e186c11b86479" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPRIORITY&lt;/code&gt; if getpriority() is available to get a process's priority.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETPRIORITY&lt;/code&gt; si getpriority () est&amp;aacute; disponible para obtener la prioridad de un proceso.</target>
        </trans-unit>
        <trans-unit id="f8a60b1d5d8d846ce3f5e6fe4d7b072471b5e6c6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPROTOENT&lt;/code&gt; if getprotoent() is available to look up protocols in some data base or another.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETPROTOENT&lt;/code&gt; si getprotoent () est&amp;aacute; disponible para buscar protocolos en alguna base de datos u otra.</target>
        </trans-unit>
        <trans-unit id="703bdebcae3a9b18831e785584b8e179d8f5569d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETPRPWNAM&lt;/code&gt; if getprpwnam() is available to retrieve protected (shadow) password entries by name.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETPRPWNAM&lt;/code&gt; si getprpwnam () est&amp;aacute; disponible para recuperar entradas de contrase&amp;ntilde;a protegidas (ocultas) por nombre.</target>
        </trans-unit>
        <trans-unit id="d470dbda91b75051a9116195c5471b4cc0a994bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETSERVENT&lt;/code&gt; if getservent() is available to look up network services in some data base or another.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETSERVENT&lt;/code&gt; si getservent () est&amp;aacute; disponible para buscar servicios de red en alguna base de datos u otra.</target>
        </trans-unit>
        <trans-unit id="8f1532a01e5d8ec8dbefe92231b99738657124d6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_GETSPNAM&lt;/code&gt; if getspnam() is available to retrieve SysV shadow password entries by name.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_GETSPNAM&lt;/code&gt; si getspnam () est&amp;aacute; disponible para recuperar las entradas de la contrase&amp;ntilde;a oculta de SysV por nombre.</target>
        </trans-unit>
        <trans-unit id="cfad68a688a0a88c6b15faed3a855ee7ed81db88" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_HTONL&lt;/code&gt; if htonl() and its friends are available to do network order byte swapping.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_HTONL&lt;/code&gt; si htonl () y sus amigos est&amp;aacute;n disponibles para realizar el intercambio de bytes de orden de red.</target>
        </trans-unit>
        <trans-unit id="36ae55fc8ab6d9db052670febb9d6c73ffc9c7fe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_HYPOT&lt;/code&gt; if hypot is available for numerically stable hypotenuse function.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_HYPOT&lt;/code&gt; si hypot est&amp;aacute; disponible para la funci&amp;oacute;n de hipotenusa num&amp;eacute;ricamente estable.</target>
        </trans-unit>
        <trans-unit id="1c8f906308fe5425fd5dc9fc6c65283219211f28" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_INDEX&lt;/code&gt; if index() and rindex() are available for string searching.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_INDEX&lt;/code&gt; si index () y rindex () est&amp;aacute;n disponibles para la b&amp;uacute;squeda de cadenas.</target>
        </trans-unit>
        <trans-unit id="f58665b1066bffd31d93be9865becf02e07fbc33" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LINK&lt;/code&gt; if link() is available to create hard links.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_LINK&lt;/code&gt; si link () est&amp;aacute; disponible para crear enlaces f&amp;iacute;sicos .</target>
        </trans-unit>
        <trans-unit id="f7aaa9b5790c7fed2f4557a1b76230d9dee2b872" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LOCALECONV&lt;/code&gt; if localeconv() is available for numeric and monetary formatting conventions.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_LOCALECONV&lt;/code&gt; si localeconv () est&amp;aacute; disponible para convenciones de formato num&amp;eacute;rico y monetario.</target>
        </trans-unit>
        <trans-unit id="a3c4adc80b08fec49de9e85a9758844bbed93d4f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LOCKF&lt;/code&gt; if lockf() is available to do file locking.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_LOCKF&lt;/code&gt; si lockf () est&amp;aacute; disponible para realizar el bloqueo de archivos.</target>
        </trans-unit>
        <trans-unit id="a3309e731f7ec54de80f5709f885fa11f752d281" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LONG_DOUBLE&lt;/code&gt; if the long double type is supported.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_LONG_DOUBLE&lt;/code&gt; si se admite el tipo doble largo.</target>
        </trans-unit>
        <trans-unit id="f96dc22b2fabc7d6becfede8302b062283c67511" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LONG_LONG&lt;/code&gt; if the long long type is supported.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_LONG_LONG&lt;/code&gt; si se admite el tipo long long.</target>
        </trans-unit>
        <trans-unit id="bde46e5f10d187a1e49089e8f14937e758db8660" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_LSTAT&lt;/code&gt; if lstat() is available to do file stats on symbolic links.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_LSTAT&lt;/code&gt; si lstat () est&amp;aacute; disponible para realizar estad&amp;iacute;sticas de archivos en enlaces simb&amp;oacute;licos.</target>
        </trans-unit>
        <trans-unit id="9c29d2f5108f120fc070de1998bbec52bcea01c7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MADVISE&lt;/code&gt; if madvise() is available to map a file into memory.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_MADVISE&lt;/code&gt; si madvise () est&amp;aacute; disponible para mapear un archivo en la memoria.</target>
        </trans-unit>
        <trans-unit id="a0176dd527685bd6e90190916167c20eaf54f9cf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MKOSTEMP&lt;/code&gt; if mkostemp() is available to exclusively create and open a uniquely named (with a suffix) temporary file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9773977cefbb09ffe9bf40f7bdd75aa66788128d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MMAP&lt;/code&gt; if mmap() is available to map a file into memory.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_MMAP&lt;/code&gt; si mmap () est&amp;aacute; disponible para mapear un archivo en la memoria.</target>
        </trans-unit>
        <trans-unit id="e49a09fbe97831dedb0097fc04c353ecd4fdc497" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MPROTECT&lt;/code&gt; if mprotect() is available to modify the access protection of a memory mapped file.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_MPROTECT&lt;/code&gt; si mprotect () est&amp;aacute; disponible para modificar la protecci&amp;oacute;n de acceso de un archivo mapeado en memoria.</target>
        </trans-unit>
        <trans-unit id="d39b4760c4a7ddea99da224cda29212d2ef99aed" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MSYNC&lt;/code&gt; if msync() is available to synchronize a mapped file.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_MSYNC&lt;/code&gt; si msync () est&amp;aacute; disponible para sincronizar un archivo mapeado.</target>
        </trans-unit>
        <trans-unit id="542bb319608c7eec938e5b98398f37ee190044a7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_MUNMAP&lt;/code&gt; if munmap() is available to unmap a region mapped by mmap().</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_MUNMAP&lt;/code&gt; si munmap () est&amp;aacute; disponible para desasignar una regi&amp;oacute;n mapeada por mmap ().</target>
        </trans-unit>
        <trans-unit id="02d3878b96b9be7c2121b2227ea0c924b133a4a0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NAN&lt;/code&gt; if nan() is available to generate NaN.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_NAN&lt;/code&gt; si nan () est&amp;aacute; disponible para generar NaN.</target>
        </trans-unit>
        <trans-unit id="8ac0a1512388c05f6e3f6942497c27a45e8e3efe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NANOSLEEP&lt;/code&gt; if nanosleep() is available to sleep with 1E-9 sec accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6ab26a7e66c25dc87e4ed8365e14b5b776d611" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NEARBYINT&lt;/code&gt; if nearbyint() is available to return the integral value closest to (according to the current rounding mode) to x.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_NEARBYINT&lt;/code&gt; si nearint () est&amp;aacute; disponible para devolver el valor integral m&amp;aacute;s cercano a (seg&amp;uacute;n el modo de redondeo actual) ax.</target>
        </trans-unit>
        <trans-unit id="9de8df4ca9d3107d7b5e197ebc2f8b56f2a456de" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NEXTAFTER&lt;/code&gt; if nextafter() is available to return the next machine representable double from x in direction y.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_NEXTAFTER&lt;/code&gt; si nextafter () est&amp;aacute; disponible para devolver el siguiente doble representable por m&amp;aacute;quina desde x en la direcci&amp;oacute;n y.</target>
        </trans-unit>
        <trans-unit id="09cc9884f832b1e2f2ad4607b97076420d46d665" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_NEXTTOWARD&lt;/code&gt; if nexttoward() is available to return the next machine representable long double from x in direction y.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_NEXTTOWARD&lt;/code&gt; si nexttoward () est&amp;aacute; disponible para devolver el siguiente doble largo representable de la m&amp;aacute;quina desde x en la direcci&amp;oacute;n y.</target>
        </trans-unit>
        <trans-unit id="e84d3a1694bc236dbf1d7993a1d2c9255724da86" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_PTHREAD_ATTR_SETSCOPE&lt;/code&gt; if pthread_attr_setscope() is available to set the contention scope attribute of a thread attribute object.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_PTHREAD_ATTR_SETSCOPE&lt;/code&gt; si pthread_attr_setscope () est&amp;aacute; disponible para establecer el atributo de alcance de contenci&amp;oacute;n de un objeto de atributo de hilo.</target>
        </trans-unit>
        <trans-unit id="ca9e53f6ec390b98dfba5bb4f284367970f8d262" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_READDIR&lt;/code&gt; if readdir() is available to read directory entries.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_READDIR&lt;/code&gt; si readdir () est&amp;aacute; disponible para leer entradas de directorio.</target>
        </trans-unit>
        <trans-unit id="c772ddc21b6658b7802061d88a44caa292765ab3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_REWINDDIR&lt;/code&gt; if rewinddir() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_REWINDDIR&lt;/code&gt; si rewinddir () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="102609636e6adf43c7c619fd51b5305af390db97" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_RMDIR&lt;/code&gt; if rmdir() is available to remove directories.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_RMDIR&lt;/code&gt; si rmdir () est&amp;aacute; disponible para eliminar directorios.</target>
        </trans-unit>
        <trans-unit id="887794d99137721bdeb0c86f2844b40ead019692" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SEEKDIR&lt;/code&gt; if seekdir() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SEEKDIR&lt;/code&gt; si seekdir () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="eabab054867a6e7a1fda52591f68108f354fff8a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SELECT&lt;/code&gt; if select() is available to select active file descriptors. A &amp;lt;sys/time.h&amp;gt; inclusion may be necessary for the timeout field.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SELECT&lt;/code&gt; si select () est&amp;aacute; disponible para seleccionar descriptores de archivos activos. Es posible que sea necesario incluir &amp;lt;sys / time.h&amp;gt; para el campo de tiempo de espera.</target>
        </trans-unit>
        <trans-unit id="bc33f5c99454e91ae2ee5c0078387d95e7d2e9a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETHOSTENT&lt;/code&gt; if sethostent() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETHOSTENT&lt;/code&gt; si sethostent () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="75151e22ebcabc154ea71d8ff2b10a358ed030a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETLOCALE&lt;/code&gt; if setlocale() is available to handle locale-specific ctype implementations.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETLOCALE&lt;/code&gt; si setlocale () est&amp;aacute; disponible para manejar implementaciones ctype espec&amp;iacute;ficas de la configuraci&amp;oacute;n regional.</target>
        </trans-unit>
        <trans-unit id="3d673facbb75d108913e27f1a2486a73d55d0236" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETNETENT&lt;/code&gt; if setnetent() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETNETENT&lt;/code&gt; si setnetent () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="7914dcc37c31303f3da0f6e201df5d765f8aa85c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETPGRP&lt;/code&gt; if setpgrp() is available to set the current process group.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETPGRP&lt;/code&gt; si setpgrp () est&amp;aacute; disponible para configurar el grupo de procesos actual.</target>
        </trans-unit>
        <trans-unit id="2002a17a2c2a55f6f40172b2b8fb58d5b76cdd2a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETPRIORITY&lt;/code&gt; if setpriority() is available to set a process's priority.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETPRIORITY&lt;/code&gt; si setpriority () est&amp;aacute; disponible para establecer la prioridad de un proceso.</target>
        </trans-unit>
        <trans-unit id="3c631092c3030de3575c0a7a87bf0eb17b021238" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETPROTOENT&lt;/code&gt; if setprotoent() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETPROTOENT&lt;/code&gt; si setprotoent () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="0f78400a8b12f8656f01ebbdf5086223548e1e83" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETREGID&lt;/code&gt; if setregid() is available to change the real and effective gid of the current process.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETREGID&lt;/code&gt; si setregid () est&amp;aacute; disponible para cambiar el gid real y efectivo del proceso actual.</target>
        </trans-unit>
        <trans-unit id="30c69bd63c2acea93583c8f9220b4a879c50d781" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETRESGID&lt;/code&gt; if setresgid() is available to change the real, effective and saved gid of the current process.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETRESGID&lt;/code&gt; si setresgid () est&amp;aacute; disponible para cambiar el gid real, efectivo y guardado del proceso actual.</target>
        </trans-unit>
        <trans-unit id="35485f4098b6c1c258054bdb628277a4ccf112e2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETREUID&lt;/code&gt; if setresuid() is available to change the real, effective and saved uid of the current process.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETREUID&lt;/code&gt; si setresuid () est&amp;aacute; disponible para cambiar el uid real, efectivo y guardado del proceso actual.</target>
        </trans-unit>
        <trans-unit id="aba8a0bc40989a1ca38df2aae3c387f371d5192b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETREUID&lt;/code&gt; if setreuid() is available to change the real and effective uid of the current process.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETREUID&lt;/code&gt; si setreuid () est&amp;aacute; disponible para cambiar el uid real y efectivo del proceso actual.</target>
        </trans-unit>
        <trans-unit id="eb6783028c86e7bf10a2b92123734f47a7944fac" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETSERVENT&lt;/code&gt; if setservent() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETSERVENT&lt;/code&gt; si setservent () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="56d4df6b62a7f4a67414b6f9ecb8ddad65efc719" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETSID&lt;/code&gt; if setsid() is available to set the process group &lt;code&gt;ID&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SETSID&lt;/code&gt; si setsid () est&amp;aacute; disponible para establecer el &lt;code&gt;ID&lt;/code&gt; del grupo de procesos .</target>
        </trans-unit>
        <trans-unit id="7ef408c79ac243069730beb417294ee15f89a8da" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SETSID&lt;/code&gt; if setsid() is available to set the process group &lt;code&gt;ID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53a8b438b669e85e8dac90bda9a163f72b38dcd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SIGPROCMASK&lt;/code&gt; if sigprocmask() is available to examine or change the signal mask of the calling process.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SIGPROCMASK&lt;/code&gt; si sigprocmask () est&amp;aacute; disponible para examinar o cambiar la m&amp;aacute;scara de se&amp;ntilde;al del proceso de llamada.</target>
        </trans-unit>
        <trans-unit id="fedaa514d1228b3cb8d459d4c50ec34f00f6ac02" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SOCKET&lt;/code&gt; , which indicates that the &lt;code&gt;BSD&lt;/code&gt; socket interface is supported.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SOCKET&lt;/code&gt; , lo que indica que se admite la interfaz de socket &lt;code&gt;BSD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d90f4b16cfc328489f9f3e006e37192e3670ab4a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SOCKET&lt;/code&gt;, which indicates that the &lt;code&gt;BSD&lt;/code&gt; socket interface is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acf41a0b06778d8de2ab0c3e21b6db83e6e1a26" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STAT&lt;/code&gt; if stat() is available to get file status.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_STAT&lt;/code&gt; si stat () est&amp;aacute; disponible para obtener el estado del archivo.</target>
        </trans-unit>
        <trans-unit id="104dec5b82fbc045989fe3c8c4ef8fa75c373740" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRCHR&lt;/code&gt; if strchr() and strrchr() are available for string searching.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_STRCHR&lt;/code&gt; si strchr () y strrchr () est&amp;aacute;n disponibles para la b&amp;uacute;squeda de cadenas.</target>
        </trans-unit>
        <trans-unit id="66c65e480ececd2a54e0b9068f9890c68b2b94ad" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRCOLL&lt;/code&gt; if strcoll() is available to compare strings using collating information.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_STRCOLL&lt;/code&gt; si strcoll () est&amp;aacute; disponible para comparar cadenas usando informaci&amp;oacute;n de clasificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b82eb75e3b5d7a021a62e68340d85ee6ee407d5d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRERROR&lt;/code&gt; if strerror() is available to translate error numbers to strings.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_STRERROR&lt;/code&gt; si strerror () est&amp;aacute; disponible para convertir n&amp;uacute;meros de error en cadenas.</target>
        </trans-unit>
        <trans-unit id="157fd2966246701c1e0fd97cb121f370d5243dfd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_STRXFRM&lt;/code&gt; if strxfrm() is available to transform strings.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_STRXFRM&lt;/code&gt; si strxfrm () est&amp;aacute; disponible para transformar cadenas.</target>
        </trans-unit>
        <trans-unit id="f665cc4a3804d1cfbb21ea5e1e553f34ba0001f3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYSCALL&lt;/code&gt; if syscall() is available call arbitrary system calls.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SYSCALL&lt;/code&gt; si syscall () est&amp;aacute; disponible para llamadas arbitrarias al sistema.</target>
        </trans-unit>
        <trans-unit id="76958e03c19c57ba5daadf788ceb559703fda4a7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYSTEM&lt;/code&gt; if system() is available to issue a shell command.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SYSTEM&lt;/code&gt; si system () est&amp;aacute; disponible para emitir un comando de shell.</target>
        </trans-unit>
        <trans-unit id="fba0f75ab5519c316f7379166065cac7a0fa0f08" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYS_ERRLIST&lt;/code&gt; if sys_errlist[] is available to translate error numbers to strings.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SYS_ERRLIST&lt;/code&gt; si sys_errlist [] est&amp;aacute; disponible para convertir n&amp;uacute;meros de error en cadenas.</target>
        </trans-unit>
        <trans-unit id="3133e51b2626aefa90c83a60c2bc07b45364f9d8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_SYS_ERRNOLIST&lt;/code&gt; if sys_errnolist[] is available to translate error numbers to the symbolic name.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_SYS_ERRNOLIST&lt;/code&gt; si sys_errnolist [] est&amp;aacute; disponible para traducir n&amp;uacute;meros de error al nombre simb&amp;oacute;lico.</target>
        </trans-unit>
        <trans-unit id="3b6cc938eb6588fef7831af7c25c38df6b393dba" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TELLDIR&lt;/code&gt; if telldir() is available.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_TELLDIR&lt;/code&gt; si telldir () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="13376d783be11f279f6a31e5dca53c18c5518beb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_GMTOFF&lt;/code&gt; , which indicates indicates to the C program that the struct tm has the tm_gmtoff field.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_TM_TM_GMTOFF&lt;/code&gt; , lo que indica al programa C que la estructura tm tiene el campo tm_gmtoff.</target>
        </trans-unit>
        <trans-unit id="1086cb9c5e3f467454832b8b12812058cd92e06e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_GMTOFF&lt;/code&gt;, which indicates to the C program that the struct tm has the tm_gmtoff field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fdffc25ffd7e4584eb45e68410699ffcf4500b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_ZONE&lt;/code&gt; , which indicates indicates to the C program that the struct tm has the tm_zone field.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_TM_TM_ZONE&lt;/code&gt; , lo que indica al programa C que la estructura tm tiene el campo tm_zone.</target>
        </trans-unit>
        <trans-unit id="c04ef66c28333bfa29c16eb97a4f1bf1a07a865b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TM_TM_ZONE&lt;/code&gt;, which indicates to the C program that the struct tm has the tm_zone field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c5c15d4eddf8d206488d6739d6fd8de91eb4bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TRUNCATE&lt;/code&gt; if truncate() is available to truncate files.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_TRUNCATE&lt;/code&gt; si truncate () est&amp;aacute; disponible para truncar archivos.</target>
        </trans-unit>
        <trans-unit id="e2b911e2460cf128e44ed370b2980c2209097f87" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_TZNAME&lt;/code&gt; if tzname[] is available to access timezone names.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_TZNAME&lt;/code&gt; si tzname [] est&amp;aacute; disponible para acceder a los nombres de las zonas horarias.</target>
        </trans-unit>
        <trans-unit id="0d2899983d1ce6900d5663872bcf0fe4bc31fe25" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_UNION_SEMUN&lt;/code&gt; if the union semun is defined by including &amp;lt;sys/sem.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_UNION_SEMUN&lt;/code&gt; si la uni&amp;oacute;n semun se define incluyendo &amp;lt;sys / sem.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="9dbad1c6f722a7fb60b2580c6825a89a0875ea78" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_USLEEP&lt;/code&gt; if usleep() is available to do high granularity sleeps.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_USLEEP&lt;/code&gt; si usleep () est&amp;aacute; disponible para hacer durmientes de granularidad alta.</target>
        </trans-unit>
        <trans-unit id="62fcdd3f292691fc949ae90083b1d7e19d396383" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_USTAT&lt;/code&gt; if ustat() is available to query file system statistics by dev_t.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_USTAT&lt;/code&gt; si ustat () est&amp;aacute; disponible para consultar estad&amp;iacute;sticas del sistema de archivos por dev_t.</target>
        </trans-unit>
        <trans-unit id="e6da30a5484ed0715193a06b75bbdc0f387b14b5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS_WAITPID&lt;/code&gt; if waitpid() is available to wait for child process.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS_WAITPID&lt;/code&gt; si waitpid () est&amp;aacute; disponible para esperar el proceso hijo.</target>
        </trans-unit>
        <trans-unit id="ea1ebdb3e07eb3cfa8774547eb7eca99b9cbda6a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;HAS__FWALK&lt;/code&gt; if _fwalk() is available to apply a function to all the file handles.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;HAS__FWALK&lt;/code&gt; si _fwalk () est&amp;aacute; disponible para aplicar una funci&amp;oacute;n a todos los identificadores de archivo.</target>
        </trans-unit>
        <trans-unit id="ccfbe62640f2e7f4d3f434546f57dde1c801c589" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_DIRENT&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;dirent.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_DIRENT&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;dirent.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a9a787f2a18f3b44e560a5f3940cd8e2d3a4e477" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_DIRENT&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;dirent.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09b17b8feebed4fb31ad1053dd929b31fc1552d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_NETINET_IN&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;netinet/in.h&amp;gt;. Otherwise, you may try &amp;lt;sys/in.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_NETINET_IN&lt;/code&gt; , que indica al programa C que debe incluir &amp;lt;netinet / in.h&amp;gt;. De lo contrario, puede intentar &amp;lt;sys / in.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="6229f1fa60966db3808987381a186cc7f8635df8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_NETINET_IN&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;netinet/in.h&amp;gt;. Otherwise, you may try &amp;lt;sys/in.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18545a27b23f4ec408fe168cb07019ddd52aeb9d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_PWD&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;pwd.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_PWD&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;pwd.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="bb803936d76c5aab724f9475cc78845aadf9c816" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_PWD&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;pwd.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3999885997764e29fe1e4dcd432c1a48f0dbd137" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_QUADMATH&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;quadmath.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_QUADMATH&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;quadmath.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="84ed6ce0c86d5ff27c690b2ddda9c899654179c0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_QUADMATH&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;quadmath.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a59b19169614e1208d6a92cb8cd08ec908a8e0b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_IN&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/in.h&amp;gt; instead of &amp;lt;netinet/in.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_SYS_IN&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;sys / in.h&amp;gt; en lugar de &amp;lt;netinet / in.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="03b21042961935fbfbefec3a909d5794f5de25f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_IN&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/in.h&amp;gt; instead of &amp;lt;netinet/in.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72fad23f2686fa8a3b7ba796dba5e928d3c1193" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_SELECT&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/select.h&amp;gt; in order to get the definition of struct timeval.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_SYS_SELECT&lt;/code&gt; , que indica al programa C que debe incluir &amp;lt;sys / select.h&amp;gt; para obtener la definici&amp;oacute;n de struct timeval.</target>
        </trans-unit>
        <trans-unit id="be7898505b9471576bb5b430ec24e9c34c7b1a55" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_SELECT&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/select.h&amp;gt; in order to get the definition of struct timeval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b3e1dfb1e11c227d687db5d0baaa2e450457de" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_SOCKIO&lt;/code&gt; to indicate to the C program that socket ioctl codes may be found in &amp;lt;sys/sockio.h&amp;gt; instead of &amp;lt;sys/ioctl.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_SYS_SOCKIO&lt;/code&gt; para indicar al programa C que los c&amp;oacute;digos ioctl de socket se pueden encontrar en &amp;lt;sys / sockio.h&amp;gt; en lugar de &amp;lt;sys / ioctl.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="abc49b9ac08dff6a9f6857ae04835d4e61d8c3d9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_SYS_TIME&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;sys / time.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a05fce4796eb0a468ac066cc59e0a4dc57538112" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134ce192071bcaa440fc2e6dd10833f44f8a3750" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME_KERNEL&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt; with &lt;code&gt;KERNEL&lt;/code&gt; defined.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_SYS_TIME_KERNEL&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;sys / time.h&amp;gt; con &lt;code&gt;KERNEL&lt;/code&gt; definido.</target>
        </trans-unit>
        <trans-unit id="f179c336e76408f1f071c7e6f1d598b7e1ea26ef" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_TIME_KERNEL&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/time.h&amp;gt; with &lt;code&gt;KERNEL&lt;/code&gt; defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939cb7b0620edee4edc61983e7278fc31a5c1093" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_UN&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/un.h&amp;gt; to get &lt;code&gt;UNIX&lt;/code&gt; domain socket definitions.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_SYS_UN&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;sys / un.h&amp;gt; para obtener definiciones de socket de dominio &lt;code&gt;UNIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ff1d57c77149a8f8965a9ee33bf60883847c53e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_UN&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/un.h&amp;gt; to get &lt;code&gt;UNIX&lt;/code&gt; domain socket definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05b60d3b34826e6947a78549014fc461f91e426" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_WAIT&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;sys/wait.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_SYS_WAIT&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;sys / wait.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f8afd487363c7052289252816c4039d5e7259ee5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_SYS_WAIT&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;sys/wait.h&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbee00fea0a0e43a823409e3c9ea7ecbe6db0995" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_TIME&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;time.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_TIME&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;time.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="5e26138c57947cb8f890b9cb6f5d5a73c355cb2b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;I_VARARGS&lt;/code&gt; , which indicates to the C program that it should include &amp;lt;varargs.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;I_VARARGS&lt;/code&gt; , lo que indica al programa C que debe incluir &amp;lt;varargs.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="adacd8529d588003400a218d9efa8778e7c5a4a0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE&lt;/code&gt; if the long double is any of the &lt;code&gt;IEEE&lt;/code&gt; 754 style long doubles: &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_STD&lt;/code&gt;, &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_EXTENDED&lt;/code&gt;, &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34f3c21fd0b8ede657c0701ed24331b130440cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE&lt;/code&gt; if the long double is the 128-bit &lt;code&gt;IEEE&lt;/code&gt; 754 double-double.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756980c20db36fe0dd46d4db8127dd1afbfcd959" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_EXTENDED&lt;/code&gt; if the long double is the 80-bit &lt;code&gt;IEEE&lt;/code&gt; 754 extended precision. Note that despite the &lt;code&gt;extended&lt;/code&gt; this is less than the &lt;code&gt;std&lt;/code&gt;, since thisis an extension of the double precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aa1379dea829947822c99c195a810d06bb4a38" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_IEEE_STD&lt;/code&gt; if the long double is the 128-bit &lt;code&gt;IEEE&lt;/code&gt; 754.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce75ff7631bbaf803d0ace7a33143e12192218ef" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;LONG_DOUBLE_STYLE_VAX&lt;/code&gt; if the long double is the 128-bit &lt;code&gt;VAX&lt;/code&gt; format H.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58139b2e3b281a9a118c344ae314fa19f7ef819b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;MYMALLOC&lt;/code&gt; in case other parts of the source want to take special action if &lt;code&gt;MYMALLOC&lt;/code&gt; is used. This may include different sorts of profiling or error detection.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;MYMALLOC&lt;/code&gt; en caso de que otras partes de la fuente quieran realizar una acci&amp;oacute;n especial si se utiliza &lt;code&gt;MYMALLOC&lt;/code&gt; . Esto puede incluir diferentes tipos de creaci&amp;oacute;n de perfiles o detecci&amp;oacute;n de errores.</target>
        </trans-unit>
        <trans-unit id="2c8fdadfdd30950a7b700d396be77876a6f4c5f5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; . It is set to undef when &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; is empty.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; . Se establece en undef cuando &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="7b135860345eb1cb4ecb8f5dbf25f3b80d9663cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt;. It is set to undef when &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff46e0082d05a29ab6252efc4bd771d18d5878f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_OTHERLIBDIRS&lt;/code&gt; , which contains a colon-separated set of paths for the perl binary to include in @&lt;code&gt;INC&lt;/code&gt; . See also otherlibdirs.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PERL_OTHERLIBDIRS&lt;/code&gt; , que contiene un conjunto de rutas separadas por dos puntos para que el binario de Perl lo incluya en @ &lt;code&gt;INC&lt;/code&gt; . Consulte tambi&amp;eacute;n otras bibliotecas.</target>
        </trans-unit>
        <trans-unit id="792edce2f8757d59c45987f57e7fea3d6b286f1e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_OTHERLIBDIRS&lt;/code&gt;, which contains a colon-separated set of paths for the perl binary to include in @&lt;code&gt;INC&lt;/code&gt;. See also otherlibdirs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caef6d2331c84b17275d3f9012789c819b377ba9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORBIN&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PERL_VENDORBIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d76f60666c8aecb525e5906ff962481dc318171" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORBIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533111c8d8f10b6751abb6a1a0088f4c19073d3e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORLIB&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PERL_VENDORLIB&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="871a0cb0554ef284df45b5e6ac6f30c717bd50ad" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORLIB&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177a5dd44b77ca5ced87275d19c31e96d16bc7b0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORSCRIPT&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PERL_VENDORSCRIPT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7969ccc81d5cd924a862496e98d359f5c4fdb7ba" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PERL_VENDORSCRIPT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc9c3d91fb6f28bed8329dae1d992b2ddc3b88b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PRINTF_FORMAT_NULL_OK&lt;/code&gt; , which indicates the C compiler allows printf-like formats to be null.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PRINTF_FORMAT_NULL_OK&lt;/code&gt; , lo que indica que el compilador de C permite que los formatos tipo printf sean nulos.</target>
        </trans-unit>
        <trans-unit id="a63de281be650d131b0dada057dda3c788db87bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PRINTF_FORMAT_NULL_OK&lt;/code&gt;, which indicates the C compiler allows printf-like formats to be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b45d18a0fa0b9cd91b944a53b1e7323f8adc333" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWAGE&lt;/code&gt; , which indicates that struct passwd contains pw_age.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWAGE&lt;/code&gt; , lo que indica que struct passwd contiene pw_age.</target>
        </trans-unit>
        <trans-unit id="8f93b894ca294b4b089fefb4c8e130735fcaeb5c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWAGE&lt;/code&gt;, which indicates that struct passwd contains pw_age.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b184e19c4dcc5f872f5344f6afc9d5aa8890c36" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCHANGE&lt;/code&gt; , which indicates that struct passwd contains pw_change.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWCHANGE&lt;/code&gt; , lo que indica que struct passwd contiene pw_change.</target>
        </trans-unit>
        <trans-unit id="8441cd9467c256bdc9b09035b7b1876a361955b4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCHANGE&lt;/code&gt;, which indicates that struct passwd contains pw_change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5fb50ace415a9312b25c289ac7ee228f0dd1f8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCLASS&lt;/code&gt; , which indicates that struct passwd contains pw_class.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWCLASS&lt;/code&gt; , lo que indica que struct passwd contiene pw_class.</target>
        </trans-unit>
        <trans-unit id="bf37296a4f626e5d681b9f335125151376abd8ce" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCLASS&lt;/code&gt;, which indicates that struct passwd contains pw_class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f567085df536f85d28a3794c7c79c2f135c39fc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCOMMENT&lt;/code&gt; , which indicates that struct passwd contains pw_comment.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWCOMMENT&lt;/code&gt; , lo que indica que struct passwd contiene pw_comment.</target>
        </trans-unit>
        <trans-unit id="d446c0dd2bd7215acf1c8d761e1c367d9b022427" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWCOMMENT&lt;/code&gt;, which indicates that struct passwd contains pw_comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2223305749b21469a0762164dc8dc0df3aaa8c7f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWEXPIRE&lt;/code&gt; , which indicates that struct passwd contains pw_expire.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWEXPIRE&lt;/code&gt; , lo que indica que struct passwd contiene pw_expire.</target>
        </trans-unit>
        <trans-unit id="9992e4d0615a9aacf641f7f53cfe12ded3beec47" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWEXPIRE&lt;/code&gt;, which indicates that struct passwd contains pw_expire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf2af3d9e7342f5f1fe442fb4ba6590cba3aeaf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWGECOS&lt;/code&gt; , which indicates that struct passwd contains pw_gecos.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWGECOS&lt;/code&gt; , lo que indica que struct passwd contiene pw_gecos.</target>
        </trans-unit>
        <trans-unit id="3b8016818095e885888a0aca57a1a20c790843e4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWGECOS&lt;/code&gt;, which indicates that struct passwd contains pw_gecos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4df7b4ce4ecdac74c8fac53257d7c54e9e2b1d2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWPASSWD&lt;/code&gt; , which indicates that struct passwd contains pw_passwd.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWPASSWD&lt;/code&gt; , lo que indica que struct passwd contiene pw_passwd.</target>
        </trans-unit>
        <trans-unit id="abe328a44bbcae89a29efb7320b5f4698e2f3a19" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWPASSWD&lt;/code&gt;, which indicates that struct passwd contains pw_passwd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f5c85237fcc07cb2101d49b94de63960320aab" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWQUOTA&lt;/code&gt; , which indicates that struct passwd contains pw_quota.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;PWQUOTA&lt;/code&gt; , lo que indica que struct passwd contiene pw_quota.</target>
        </trans-unit>
        <trans-unit id="9226e8f3babf511a24917282807de2e020e40767" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;PWQUOTA&lt;/code&gt;, which indicates that struct passwd contains pw_quota.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b4b9ba5cff92bc6dcdb8d6c8455ba666662fc3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;SETLOCALE_ACCEPTS_ANY_LOCALE_NAME&lt;/code&gt; if setlocale() accepts any locale name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6dc66871cca735678df0954175fa95cf018eb7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;SETUID_SCRIPTS_ARE_SECURE_NOW&lt;/code&gt; if setuid scripts can be secure. This test looks in</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;SETUID_SCRIPTS_ARE_SECURE_NOW&lt;/code&gt; si los scripts de setuid pueden ser seguros. Esta prueba mira en</target>
        </trans-unit>
        <trans-unit id="81f004e1abf850968e0e52c15f9f6cad13d862f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;SITEARCH&lt;/code&gt; to hold the pathname of architecture-dependent library files for $package. If $sitearch is the same as $archlib, then this is set to undef.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;SITEARCH&lt;/code&gt; para contener el nombre de ruta de los archivos de biblioteca dependientes de la arquitectura para $ paquete. Si $ sitearch es lo mismo que $ archlib, entonces se establece en undef.</target>
        </trans-unit>
        <trans-unit id="8b1027f2dc2d15c75eedea147e9dd18e08a6014d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;STDCHAR&lt;/code&gt; to be the type of char used in</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;STDCHAR&lt;/code&gt; como el tipo de car&amp;aacute;cter utilizado en</target>
        </trans-unit>
        <trans-unit id="f33764730e4076b75f7a54ca0311a31df43bbaae" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;STDIO_CNT_LVALUE&lt;/code&gt; if the &lt;code&gt;FILE_cnt&lt;/code&gt; macro can be used as an lvalue.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;STDIO_CNT_LVALUE&lt;/code&gt; si la macro &lt;code&gt;FILE_cnt&lt;/code&gt; puede usarse como un lvalue.</target>
        </trans-unit>
        <trans-unit id="0e69f3a8bd1de18db50aaf0b9ef5033e3dafd978" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;STDIO_PTR_LVALUE&lt;/code&gt; if the &lt;code&gt;FILE_ptr&lt;/code&gt; macro can be used as an lvalue.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;STDIO_PTR_LVALUE&lt;/code&gt; si la macro &lt;code&gt;FILE_ptr&lt;/code&gt; se puede usar como un lvalue.</target>
        </trans-unit>
        <trans-unit id="d7bc8c4e73c6aaa4fc8b7bd3db1eed9675bd50c1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_BSD_GETPGRP&lt;/code&gt; if getpgrp needs one arguments whereas &lt;code&gt;USG&lt;/code&gt; one needs none.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;USE_BSD_GETPGRP&lt;/code&gt; si getpgrp necesita un argumento mientras que &lt;code&gt;USG&lt;/code&gt; uno no necesita ninguno.</target>
        </trans-unit>
        <trans-unit id="4cb9da0f1f2c05f27c0a4f7de8f8706f136adf70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_BSD_SETPGRP&lt;/code&gt; if setpgrp needs two arguments whereas &lt;code&gt;USG&lt;/code&gt; one needs none. See also d_setpgid for a &lt;code&gt;POSIX&lt;/code&gt; interface.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;USE_BSD_SETPGRP&lt;/code&gt; si setpgrp necesita dos argumentos mientras que &lt;code&gt;USG&lt;/code&gt; uno no necesita ninguno. Consulte tambi&amp;eacute;n d_setpgid para una interfaz &lt;code&gt;POSIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f057b25789e3d0c0c978f875ab711fef26822396" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_IOCNOTTY&lt;/code&gt; to indicate that the ioctl() call with &lt;code&gt;TIOCNOTTY&lt;/code&gt; should be used to void tty association. Otherwise (on &lt;code&gt;USG&lt;/code&gt; probably), it is enough to close the standard file descriptors and do a setpgrp().</source>
          <target state="translated">Esta variable define &lt;code&gt;USE_IOCNOTTY&lt;/code&gt; condicionalmente para indicar que la llamada ioctl () con &lt;code&gt;TIOCNOTTY&lt;/code&gt; debe usarse para anular la asociaci&amp;oacute;n tty. De lo contrario ( probablemente en &lt;code&gt;USG&lt;/code&gt; ), es suficiente cerrar los descriptores de archivo est&amp;aacute;ndar y hacer un setpgrp ().</target>
        </trans-unit>
        <trans-unit id="c86f9683041fce14f0acc7f22e22cb66e7ecf21d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMID_DS&lt;/code&gt; , which indicates that struct semid_ds * is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;USE_SEMCTL_SEMID_DS&lt;/code&gt; , lo que indica que struct semid_ds * se usar&amp;aacute; para semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1109513dd38439e5fff1a28d882ff5dff7ec9cbf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMID_DS&lt;/code&gt;, which indicates that struct semid_ds * is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165216a22f48262f27b72dd85b30d1c442227e08" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMUN&lt;/code&gt; , which indicates that union semun is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;USE_SEMCTL_SEMUN&lt;/code&gt; , lo que indica que union semun se utilizar&amp;aacute; para semctl &lt;code&gt;IPC_STAT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4aafdea14d415917179c68732185373f4c70028" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_SEMCTL_SEMUN&lt;/code&gt;, which indicates that union semun is to be used for semctl &lt;code&gt;IPC_STAT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d946a174db1c59c6d451a81dd08b793b70e50298" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_STAT_BLOCKS&lt;/code&gt; if this system has a stat structure declaring st_blksize and st_blocks.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;USE_STAT_BLOCKS&lt;/code&gt; si este sistema tiene una estructura estad&amp;iacute;stica que declara st_blksize y st_blocks.</target>
        </trans-unit>
        <trans-unit id="4f2a34f2d97a9448f367a3e7dc94f6a98d0c8541" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_STDIO_BASE&lt;/code&gt; if this system has a &lt;code&gt;FILE&lt;/code&gt; structure declaring a usable _base field (or equivalent) in</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;USE_STDIO_BASE&lt;/code&gt; si este sistema tiene una estructura &lt;code&gt;FILE&lt;/code&gt; que declara un campo _base utilizable (o equivalente) en</target>
        </trans-unit>
        <trans-unit id="884014009e45fc4b799369297408405b825f05ec" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;USE_STDIO_PTR&lt;/code&gt; if this system has a &lt;code&gt;FILE&lt;/code&gt; structure declaring usable _ptr and _cnt fields (or equivalent) in</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;USE_STDIO_PTR&lt;/code&gt; si este sistema tiene una estructura &lt;code&gt;FILE&lt;/code&gt; que declara los campos _ptr y _cnt utilizables (o equivalentes) en</target>
        </trans-unit>
        <trans-unit id="e2ce6f3e2ba733cc080d545a7f5345eaada6b53b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;VOIDSIG&lt;/code&gt; if this system declares &quot;void (*signal(...))()&quot; in</source>
          <target state="translated">Esta variable define &lt;code&gt;VOIDSIG&lt;/code&gt; condicionalmente si este sistema declara &quot;void (* se&amp;ntilde;al (...)) ()&quot; en</target>
        </trans-unit>
        <trans-unit id="c1b1eb5455ff0e45585c738f286f73520d2bda4a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines &lt;code&gt;VOID_CLOSEDIR&lt;/code&gt; if closedir() does not return a value.</source>
          <target state="translated">Esta variable define condicionalmente &lt;code&gt;VOID_CLOSEDIR&lt;/code&gt; si closedir () no devuelve un valor.</target>
        </trans-unit>
        <trans-unit id="f67d5b9663b7f0f671bc57d6208cef2ecf39a7bd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines CASTI32, which indicates whether the C compiler can cast large floats to 32-bit ints.</source>
          <target state="translated">Esta variable define condicionalmente el CASTI32,que indica si el compilador C puede lanzar grandes flotadores a 32 bits ints.</target>
        </trans-unit>
        <trans-unit id="01b443cab6a6f837f35bbd4a8391036b60139696" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_ACCEPT4 if accept4() is available to accept socket connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0e56548eb03f6bba0bfbdaf1893bfedf8b743e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_DUP2 if dup2() is available to duplicate file descriptors.</source>
          <target state="translated">Esta variable define condicionalmente HAS_DUP2 si dup2()está disponible para duplicar los descriptores de archivos.</target>
        </trans-unit>
        <trans-unit id="b26b7adde106aa6278ad18ec71be8d927043d6fd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_DUP3 if dup3() is available to duplicate file descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439c57e77afcdbc973932168c0d12a970d487a4f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines HAS_LC_MONETARY_2008 if libc has the international currency locale rules from &lt;code&gt;POSIX&lt;/code&gt; 1003.1-2008.</source>
          <target state="translated">Esta variable define condicionalmente HAS_LC_MONETARY_2008 si libc tiene las reglas de configuraci&amp;oacute;n regional de moneda internacional de &lt;code&gt;POSIX&lt;/code&gt; 1003.1-2008.</target>
        </trans-unit>
        <trans-unit id="3d55d58456df494116e8e08588b498d9a5a4a48d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines d_dbl_dig if this system's header files provide &lt;code&gt;DBL_DIG&lt;/code&gt; , which is the number of significant digits in a double precision number.</source>
          <target state="translated">Esta variable define condicionalmente d_dbl_dig si los archivos de encabezado de este sistema proporcionan &lt;code&gt;DBL_DIG&lt;/code&gt; , que es el n&amp;uacute;mero de d&amp;iacute;gitos significativos en un n&amp;uacute;mero de doble precisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="26943f542b57e3d665241442f5609c91f668a2bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines d_ldbl_dig if this system's header files provide &lt;code&gt;LDBL_DIG&lt;/code&gt; , which is the number of significant digits in a long double precision number.</source>
          <target state="translated">Esta variable define condicionalmente d_ldbl_dig si los archivos de encabezado de este sistema proporcionan &lt;code&gt;LDBL_DIG&lt;/code&gt; , que es el n&amp;uacute;mero de d&amp;iacute;gitos significativos en un n&amp;uacute;mero largo de doble precisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0899cdd5463edd7d47e779f47e9d996e29a1d596" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines d_ldbl_dig if this system's header files provide &lt;code&gt;LDBL_DIG&lt;/code&gt;, which is the number of significant digits in a long double precision number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d4367b100c21704ff1afa07d5fcbbbff3622b5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines pthread_create_joinable. undef if</source>
          <target state="translated">Esta variable define condicionalmente pthread_create_joinable.undef si</target>
        </trans-unit>
        <trans-unit id="4e65c9696692a1039d19a96f88bbb8715e74549c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;CHSIZE&lt;/code&gt; symbol, which indicates to the C program that the chsize() routine is available to truncate files. You might need a -lx to get this routine.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;CHSIZE&lt;/code&gt; , que indica al programa C que la rutina chsize () est&amp;aacute; disponible para truncar archivos. Es posible que necesite un -lx para obtener esta rutina.</target>
        </trans-unit>
        <trans-unit id="846b0e7427992bb9738c034b084170cbd17a9268" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;CRYPT&lt;/code&gt; symbol, which indicates to the C program that the crypt() routine is available to encrypt passwords and the like.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;CRYPT&lt;/code&gt; , que indica al programa C que la rutina crypt () est&amp;aacute; disponible para cifrar contrase&amp;ntilde;as y similares.</target>
        </trans-unit>
        <trans-unit id="357bf08dc30645376499e133bedc6c5b51689b15" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;CSH&lt;/code&gt; symbol, which indicates to the C program that the C-shell exists.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;CSH&lt;/code&gt; , que indica al programa C que existe el C-shell.</target>
        </trans-unit>
        <trans-unit id="e54e9f341c505bb1d2ec118651994c8e65d0f811" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;FCNTL_CAN_LOCK&lt;/code&gt; symbol and indicates whether file locking with fcntl() works.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;FCNTL_CAN_LOCK&lt;/code&gt; e indica si funciona el bloqueo de archivos con fcntl ().</target>
        </trans-unit>
        <trans-unit id="02d3adba206dca72cb969c2114087d914736e57e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;FLEXFILENAMES&lt;/code&gt; symbol, which indicates that the system supports filenames longer than 14 characters.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;FLEXFILENAMES&lt;/code&gt; , que indica que el sistema admite nombres de archivo de m&amp;aacute;s de 14 caracteres.</target>
        </trans-unit>
        <trans-unit id="b6165df6dc3c074b8386cff10673ed582f2313bf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HASCONST&lt;/code&gt; symbol, which indicates to the C program that this C compiler knows about the const type.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HASCONST&lt;/code&gt; , que indica al programa C que este compilador C conoce el tipo const.</target>
        </trans-unit>
        <trans-unit id="514ce51d44fd8efc6f22a726ff2d864524dc5927" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HASVOLATILE&lt;/code&gt; symbol, which indicates to the C program that this C compiler knows about the volatile declaration.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HASVOLATILE&lt;/code&gt; , que indica al programa C que este compilador C conoce la declaraci&amp;oacute;n vol&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="3baa45e96d482436f92754c7ebdc6a73550f0eae" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ACCESSX&lt;/code&gt; symbol, which indicates to the C program that the accessx() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ACCESSX&lt;/code&gt; , que indica al programa C que la rutina accessx () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="12a76ff5170c955de143e03f08fd4db9b4437e7b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ACOSH&lt;/code&gt; symbol, which indicates to the C program that the acosh() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ACOSH&lt;/code&gt; , que indica al programa C que la rutina acosh () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="3bbc6bd18282fbbaa0a5df512d46d448872f79f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_AINTL&lt;/code&gt; symbol, which indicates to the C program that the aintl() routine is available. If copysignl is also present we can emulate modfl.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_AINTL&lt;/code&gt; , que indica al programa C que la rutina aintl () est&amp;aacute; disponible. Si copysignl tambi&amp;eacute;n est&amp;aacute; presente, podemos emular modfl.</target>
        </trans-unit>
        <trans-unit id="ac4f3fc539e3b11a8b62b87684564e56d5832bdb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ALARM&lt;/code&gt; symbol, which indicates to the C program that the alarm() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ALARM&lt;/code&gt; , que indica al programa C que la rutina alarm () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="393748ad8a6e58564f59c88a5a65a0fccff40956" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ASCTIME_R&lt;/code&gt; symbol, which indicates to the C program that the asctime_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ASCTIME_R&lt;/code&gt; , que indica al programa C que la rutina asctime_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="e6240de5e54fe3a786d797ae169f9a039181d8e9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ASINH&lt;/code&gt; symbol, which indicates to the C program that the asinh() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ASINH&lt;/code&gt; , que indica al programa C que la rutina asinh () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="968fc15f09fb64edc7440ecd0aed6b099eb7c13a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ATANH&lt;/code&gt; symbol, which indicates to the C program that the atanh() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ATANH&lt;/code&gt; , que indica al programa C que la rutina atanh () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="0b6ee241d9266a7948fd72b86cd3046b1822d99c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ATOLF&lt;/code&gt; symbol, which indicates to the C program that the atolf() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ATOLF&lt;/code&gt; , que indica al programa C que la rutina atolf () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="7f44fe9ea95c9ae1f907047c17022ef03aa1acbb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ATOLL&lt;/code&gt; symbol, which indicates to the C program that the atoll() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ATOLL&lt;/code&gt; , que indica al programa C que la rutina atoll () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="d5e0162b328b8a9b754dac6231795ba2f27a65bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BACKTRACE&lt;/code&gt; symbol, which indicates to the C program that the backtrace() routine is available to get a stack trace.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_BACKTRACE&lt;/code&gt; , que indica al programa C que la rutina backtrace () est&amp;aacute; disponible para obtener un seguimiento de la pila.</target>
        </trans-unit>
        <trans-unit id="e96fa08dff1194cea11b6b542d4bb635e9998fe7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BCMP&lt;/code&gt; symbol if the bcmp() routine is available to compare strings.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_BCMP&lt;/code&gt; si la rutina bcmp () est&amp;aacute; disponible para comparar cadenas.</target>
        </trans-unit>
        <trans-unit id="2c3a347a1f168f38f12b42fec82e5a9d4a71e447" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BCOPY&lt;/code&gt; symbol if the bcopy() routine is available to copy strings.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_BCOPY&lt;/code&gt; si la rutina bcopy () est&amp;aacute; disponible para copiar cadenas.</target>
        </trans-unit>
        <trans-unit id="fe7d21ac1bac028a9a4864da166ebd5752380e71" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_BZERO&lt;/code&gt; symbol if the bzero() routine is available to set memory to 0.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_BZERO&lt;/code&gt; si la rutina bzero () est&amp;aacute; disponible para establecer la memoria en 0.</target>
        </trans-unit>
        <trans-unit id="6ca90016e7f6abf49f24d5147f764f4e266fad51" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CBRT&lt;/code&gt; symbol, which indicates to the C program that the cbrt() (cube root) function is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CBRT&lt;/code&gt; , que indica al programa C que la funci&amp;oacute;n cbrt () (ra&amp;iacute;z c&amp;uacute;bica) est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="9190489c62bb031470f6a8b4f7cd7a1825719930" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CHOWN&lt;/code&gt; symbol, which indicates to the C program that the chown() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CHOWN&lt;/code&gt; , que indica al programa C que la rutina chown () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="ab782a1830d8f2fd000403d6b221d923f1975987" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CHROOT&lt;/code&gt; symbol, which indicates to the C program that the chroot() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CHROOT&lt;/code&gt; , que indica al programa C que la rutina chroot () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="32e6c736a6ca4ad0fe4ee89e271bd5cc262bc051" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CLASS&lt;/code&gt; symbol, which indicates to the C program that the class() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CLASS&lt;/code&gt; , que indica al programa C que la rutina class () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="a075a89328697cbb603b70b3c6d8d110f118b481" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CLEARENV&lt;/code&gt; symbol, which indicates to the C program that the clearenv () routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CLEARENV&lt;/code&gt; , que indica al programa C que la rutina clearenv () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="74f77f33bb77370820b1492e4169ae2248f4c8c7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_COPYSIGN&lt;/code&gt; symbol, which indicates to the C program that the copysign() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_COPYSIGN&lt;/code&gt; , que indica al programa C que la rutina copysign () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="98b66499ba2e3361546a98261177f15a6de1a0f6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_COPYSIGNL&lt;/code&gt; symbol, which indicates to the C program that the copysignl() routine is available. If aintl is also present we can emulate modfl.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_COPYSIGNL&lt;/code&gt; , que indica al programa C que la rutina copysignl () est&amp;aacute; disponible. Si aintl tambi&amp;eacute;n est&amp;aacute; presente, podemos emular modfl.</target>
        </trans-unit>
        <trans-unit id="df0f6e4346afa66f63cca26a76d791fade6366c0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CRYPT_R&lt;/code&gt; symbol, which indicates to the C program that the crypt_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CRYPT_R&lt;/code&gt; , que indica al programa C que la rutina crypt_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="953edbb919ba277a0602d4f2fae83655b7094d65" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CTERMID_R&lt;/code&gt; symbol, which indicates to the C program that the ctermid_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CTERMID_R&lt;/code&gt; , que indica al programa C que la rutina ctermid_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="88f0e31c279f299ee13d676f3280ed80bdc1ec78" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CTIME_R&lt;/code&gt; symbol, which indicates to the C program that the ctime_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CTIME_R&lt;/code&gt; , que indica al programa C que la rutina ctime_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="f94152d7278e725fe89c658a702df792c385b802" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_CUSERID&lt;/code&gt; symbol, which indicates to the C program that the cuserid() routine is available to get character login names.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_CUSERID&lt;/code&gt; , que indica al programa C que la rutina cuserid () est&amp;aacute; disponible para obtener nombres de inicio de sesi&amp;oacute;n de caracteres.</target>
        </trans-unit>
        <trans-unit id="ce2c192cea1c48bf6a95dcfd9e173ca30310cf0e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DBMINIT_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the dbminit() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_DBMINIT_PROTO&lt;/code&gt; , que indica al programa C que el sistema proporciona un prototipo para la funci&amp;oacute;n dbminit (). De lo contrario, depende del programa proporcionar uno.</target>
        </trans-unit>
        <trans-unit id="9f277ae3e34118b1fe4f7a94827507d1e32928ea" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DIFFTIME&lt;/code&gt; symbol, which indicates to the C program that the difftime() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_DIFFTIME&lt;/code&gt; , que indica al programa C que la rutina difftime () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="a13740603c74d16121c0903202111151cb13d77c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DIRFD&lt;/code&gt; constant, which indicates to the C program that dirfd() is available to return the file descriptor of a directory stream.</source>
          <target state="translated">Esta variable define condicionalmente la constante &lt;code&gt;HAS_DIRFD&lt;/code&gt; , que indica al programa C que dirfd () est&amp;aacute; disponible para devolver el descriptor de archivo de una secuencia de directorio.</target>
        </trans-unit>
        <trans-unit id="87bbbc4e9449012cc05f3e6c9ced36d1a9bc5f01" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DIR_DD_FD&lt;/code&gt; symbol, which indicates that the &lt;code&gt;DIR&lt;/code&gt; directory stream type contains a member variable called dd_fd.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_DIR_DD_FD&lt;/code&gt; , que indica que el tipo de flujo de directorio &lt;code&gt;DIR&lt;/code&gt; contiene una variable miembro llamada dd_fd.</target>
        </trans-unit>
        <trans-unit id="ca28447a8986907b62f8a42e124cc4cf1327b826" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DLADDR&lt;/code&gt; symbol, which indicates to the C program that the dladdr() routine is available to get a stack trace.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_DLADDR&lt;/code&gt; , que indica al programa C que la rutina dladdr () est&amp;aacute; disponible para obtener un seguimiento de la pila.</target>
        </trans-unit>
        <trans-unit id="44450e1cdbf629ec9119c59c9f90d2b874b7e95d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DLERROR&lt;/code&gt; symbol, which indicates to the C program that the dlerror() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_DLERROR&lt;/code&gt; , que indica al programa C que la rutina dlerror () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="ed1d2043eb098d6534774a50acff39bfc0910625" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DLOPEN&lt;/code&gt; symbol, which indicates to the C program that the dlopen() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_DLOPEN&lt;/code&gt; , que indica al programa C que la rutina dlopen () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="da5e762f36d24957c21350e93040120e9b2b637e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DUPLOCALE&lt;/code&gt; symbol, which indicates to the C program that the duplocale() routine is available to duplicate a locale object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feae0a63aaa2182b296fd904e1c563d6c234cfec" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_EACCESS&lt;/code&gt; symbol, which indicates to the C program that the eaccess() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_EACCESS&lt;/code&gt; , que indica al programa C que la rutina eaccess () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="fc59246a386f8974acd05f0aa4d2f594daee00df" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDGRENT&lt;/code&gt; symbol, which indicates to the C program that the endgrent() routine is available for sequential access of the group database.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDGRENT&lt;/code&gt; , que indica al programa C que la rutina endgrent () est&amp;aacute; disponible para el acceso secuencial de la base de datos del grupo.</target>
        </trans-unit>
        <trans-unit id="c3521391643a5fa8000971d289ffbc808252e90e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDGRENT_R&lt;/code&gt; symbol, which indicates to the C program that the endgrent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDGRENT_R&lt;/code&gt; , que indica al programa C que la rutina endgrent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="8ceecbf6a76e7908e513f849eb1de5b3d245fac5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDHOSTENT_R&lt;/code&gt; symbol, which indicates to the C program that the endhostent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDHOSTENT_R&lt;/code&gt; , que indica al programa C que la rutina endhostent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="85d098e6acbbd799d64738081bddb484d9041c70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDNETENT_R&lt;/code&gt; symbol, which indicates to the C program that the endnetent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDNETENT_R&lt;/code&gt; , que indica al programa C que la rutina endnetent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="416322d92948c65411d0e4d7da6d1b4fcb72938b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDPROTOENT_R&lt;/code&gt; symbol, which indicates to the C program that the endprotoent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDPROTOENT_R&lt;/code&gt; , que indica al programa C que la rutina endprotoent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="93b579b440342c900503cc17debbb4a84724f3f2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDPWENT&lt;/code&gt; symbol, which indicates to the C program that the endpwent() routine is available for sequential access of the passwd database.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDPWENT&lt;/code&gt; , que indica al programa C que la rutina endpwent () est&amp;aacute; disponible para el acceso secuencial de la base de datos passwd.</target>
        </trans-unit>
        <trans-unit id="5fd0311a9220d51e48d013d60dc59e4fb98646e5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDPWENT_R&lt;/code&gt; symbol, which indicates to the C program that the endpwent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDPWENT_R&lt;/code&gt; , que indica al programa C que la rutina endpwent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="1975eb77352c3791983498df03109baa693a8003" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDSERVENT_R&lt;/code&gt; symbol, which indicates to the C program that the endservent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ENDSERVENT_R&lt;/code&gt; , que indica al programa C que la rutina endservent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="b18c6ff2e894197a9996c9fa5fb041fb1da60ebb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ERF&lt;/code&gt; symbol, which indicates to the C program that the erf() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ERF&lt;/code&gt; , que indica al programa C que la rutina erf () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="11cfc319c8768f753a10806f70be842234f0d8c6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ERFC&lt;/code&gt; symbol, which indicates to the C program that the erfc() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ERFC&lt;/code&gt; , que indica al programa C que la rutina erfc () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="607d8c09f8852e64deb233f04ab669fe416307e5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FAST_STDIO&lt;/code&gt; symbol, which indicates to the C program that the &quot;fast stdio&quot; is available to manipulate the stdio buffers directly.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FAST_STDIO&lt;/code&gt; , que indica al programa C que el &quot;stdio r&amp;aacute;pido&quot; est&amp;aacute; disponible para manipular los b&amp;uacute;feres stdio directamente.</target>
        </trans-unit>
        <trans-unit id="4ccef8ea96652d985074f68d669458feccd5e889" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHDIR&lt;/code&gt; symbol, which indicates to the C program that the fchdir() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FCHDIR&lt;/code&gt; , que indica al programa C que la rutina fchdir () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="2b2fd22f810dafdb7f08dee5c7b2267e8ea89ef0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHMOD&lt;/code&gt; symbol, which indicates to the C program that the fchmod() routine is available to change mode of opened files.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FCHMOD&lt;/code&gt; , que indica al programa C que la rutina fchmod () est&amp;aacute; disponible para cambiar el modo de los archivos abiertos.</target>
        </trans-unit>
        <trans-unit id="b106888c38a0833e62ad3d18b096af53fba36f85" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHMODAT&lt;/code&gt; symbol, which indicates the &lt;code&gt;POSIX&lt;/code&gt; fchmodat() function is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c49735af970135b28a3d9f02063c62ac7d11452" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHOWN&lt;/code&gt; symbol, which indicates to the C program that the fchown() routine is available to change ownership of opened files.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FCHOWN&lt;/code&gt; , que indica al programa C que la rutina fchown () est&amp;aacute; disponible para cambiar la propiedad de los archivos abiertos.</target>
        </trans-unit>
        <trans-unit id="f77965caac290b89da17681f28495b9f8fdfe67f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCNTL&lt;/code&gt; symbol, and indicates whether the fcntl() function exists</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FCNTL&lt;/code&gt; e indica si existe la funci&amp;oacute;n fcntl ()</target>
        </trans-unit>
        <trans-unit id="cee857783e2b5506137b733e1de2e80aa525f2cc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FDCLOSE&lt;/code&gt; symbol, which indicates to the C program that the fdclose() routine is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fcb0bfc83505fad937da436d307c0c9ada3232" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FDIM&lt;/code&gt; symbol, which indicates to the C program that the fdim() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FDIM&lt;/code&gt; , que indica al programa C que la rutina fdim () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="11e2724a5c3ae4b7f0de83cc60d5928d8a3f4d81" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FINITE&lt;/code&gt; symbol, which indicates to the C program that the finite() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FINITE&lt;/code&gt; , que indica al programa C que la rutina finite () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="0caf0447193e8dd99c3be264377abad5f070779b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FINITEL&lt;/code&gt; symbol, which indicates to the C program that the finitel() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FINITEL&lt;/code&gt; , que indica al programa C que la rutina finitel () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="ef6f0d37edde2d9b9e3068f863ad72dfd028852d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FLOCK_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the flock() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FLOCK_PROTO&lt;/code&gt; , que indica al programa C que el sistema proporciona un prototipo para la funci&amp;oacute;n flock (). De lo contrario, depende del programa proporcionar uno.</target>
        </trans-unit>
        <trans-unit id="b7230abc643d63b3ff949047a34fa476fec01c89" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FMA&lt;/code&gt; symbol, which indicates to the C program that the fma() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FMA&lt;/code&gt; , que indica al programa C que la rutina fma () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="fe2ccccffbf8d2f15aa401771663c24fe0ef72b5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FMAX&lt;/code&gt; symbol, which indicates to the C program that the fmax() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FMAX&lt;/code&gt; , que indica al programa C que la rutina fmax () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="3df9fdbc0ab5f9af76565f047d2b383854350a70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FMIN&lt;/code&gt; symbol, which indicates to the C program that the fmin() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FMIN&lt;/code&gt; , que indica al programa C que la rutina fmin () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="4c07c14ce41ab8f9b9c87417a26676cf07833635" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FORK&lt;/code&gt; symbol, which indicates to the C program that the fork() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FORK&lt;/code&gt; , que indica al programa C que la rutina fork () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="c926988df26ecaa58ebdfaa007ae97cb94e0a26e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPATHCONF&lt;/code&gt; symbol, which indicates to the C program that the pathconf() routine is available to determine file-system related limits and options associated with a given open file descriptor.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FPATHCONF&lt;/code&gt; , que indica al programa C que la rutina pathconf () est&amp;aacute; disponible para determinar los l&amp;iacute;mites relacionados con el sistema de archivos y las opciones asociadas con un descriptor de archivo abierto dado.</target>
        </trans-unit>
        <trans-unit id="9bbd2019de42dcc3e64e59b2a0a5d922b5b1d74e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPCLASS&lt;/code&gt; symbol, which indicates to the C program that the fpclass() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FPCLASS&lt;/code&gt; , que indica al programa C que la rutina fpclass () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="d5fe50cfedd8bbd389632006ec016bddca06ada9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPCLASSIFY&lt;/code&gt; symbol, which indicates to the C program that the fpclassify() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FPCLASSIFY&lt;/code&gt; , que indica al programa C que la rutina fpclassify () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="917f1d97f54623a4d5b664a0773e1e59567c63fe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPCLASSL&lt;/code&gt; symbol, which indicates to the C program that the fpclassl() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FPCLASSL&lt;/code&gt; , que indica al programa C que la rutina fpclassl () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="7d55b5137fd8aae7bd0294444ae3398b83ef2eb0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FP_CLASS&lt;/code&gt; symbol, which indicates to the C program that the fp_class() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FP_CLASS&lt;/code&gt; , que indica al programa C que la rutina fp_class () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="b4998906b4a9ccf7bdee0f004832d674aa7bbd9a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FP_CLASSIFY&lt;/code&gt; symbol, which indicates to the C program that the fp_classify() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FP_CLASSIFY&lt;/code&gt; , que indica al programa C que la rutina fp_classify () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="41f0ce9e1b9e64ce9cd583c93400552f4e5a6a52" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FP_CLASSL&lt;/code&gt; symbol, which indicates to the C program that the fp_classl() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FP_CLASSL&lt;/code&gt; , que indica al programa C que la rutina fp_classl () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="3413f93599429afe464b8d3f686c3db466d81209" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FREELOCALE&lt;/code&gt; symbol, which indicates to the C program that the freelocale() routine is available to deallocates the resources associated with a locale object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a718ac3558705993c3b67243a1457d9b8addbd1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FREXPL&lt;/code&gt; symbol, which indicates to the C program that the frexpl() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FREXPL&lt;/code&gt; , que indica al programa C que la rutina frexpl () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="80c041b61a3854b0c9acdcab50bfa3457a568fcc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSEEKO&lt;/code&gt; symbol, which indicates to the C program that the fseeko() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FSEEKO&lt;/code&gt; , que indica al programa C que la rutina fseeko () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="4051a12dce9cc656f7cd21a6c5cca4ada63aa004" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSTATFS&lt;/code&gt; symbol, which indicates to the C program that the fstatfs() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FSTATFS&lt;/code&gt; , que indica al programa C que la rutina fstatfs () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="376e9454716c971bba83efc24ced69d3a6928836" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSTATVFS&lt;/code&gt; symbol, which indicates to the C program that the fstatvfs() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FSTATVFS&lt;/code&gt; , que indica al programa C que la rutina fstatvfs () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="435d2dacb00d4fba9f51b8f56fc86f2e5cd1c130" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSYNC&lt;/code&gt; symbol, which indicates to the C program that the fsync() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FSYNC&lt;/code&gt; , que indica al programa C que la rutina fsync () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="3d1a5f264f0ada9a48dfb15cda9ab839d11e60e6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FTELLO&lt;/code&gt; symbol, which indicates to the C program that the ftello() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FTELLO&lt;/code&gt; , que indica al programa C que la rutina ftello () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="4064b0e9f22fe23434bd0ec738f58649333e1d6f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FTIME&lt;/code&gt; symbol, which indicates that the ftime() routine exists. The ftime() routine is basically a sub-second accuracy clock.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FTIME&lt;/code&gt; , que indica que existe la rutina ftime (). La rutina ftime () es b&amp;aacute;sicamente un reloj de precisi&amp;oacute;n inferior a un segundo.</target>
        </trans-unit>
        <trans-unit id="993d1a28d890386a8f56af4b9e1e99b1a4831c24" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FUTIMES&lt;/code&gt; symbol, which indicates to the C program that the futimes() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_FUTIMES&lt;/code&gt; , que indica al programa C que la rutina futimes () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="430e1b55a3f8e2489975bca6250ad0a05f75ddda" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GAI_STRERROR&lt;/code&gt; symbol if the gai_strerror() routine is available and can be used to translate error codes returned by getaddrinfo() into human readable strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ac0e0e1a1e5f5c73c1a3d69bc5a74620bbdbac" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETADDRINFO&lt;/code&gt; symbol, which indicates to the C program that the getaddrinfo() function is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETADDRINFO&lt;/code&gt; , que indica al programa C que la funci&amp;oacute;n getaddrinfo () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="7cc91f8b53047d998123d92a6d27f96f7dfebc76" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETCWD&lt;/code&gt; symbol, which indicates to the C program that the getcwd() routine is available to get the current working directory.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETCWD&lt;/code&gt; , que indica al programa C que la rutina getcwd () est&amp;aacute; disponible para obtener el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="e7004f7e14bed6afec5bd1f4a037a94dbc84c28f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETFSSTAT&lt;/code&gt; symbol, which indicates to the C program that the getfsstat() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETFSSTAT&lt;/code&gt; , que indica al programa C que la rutina getfsstat () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="2938f1d0c5a29f26cd258b1d2d58005964b3f928" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRENT&lt;/code&gt; symbol, which indicates to the C program that the getgrent() routine is available for sequential access of the group database.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETGRENT&lt;/code&gt; , que indica al programa C que la rutina getgrent () est&amp;aacute; disponible para el acceso secuencial de la base de datos del grupo.</target>
        </trans-unit>
        <trans-unit id="09573807a7f9ee202cbace6d8d9b71d9e084b114" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRENT_R&lt;/code&gt; symbol, which indicates to the C program that the getgrent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETGRENT_R&lt;/code&gt; , que indica al programa C que la rutina getgrent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="ffdee0c89f8e16f98534bde8ff72861b068f14e2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRGID_R&lt;/code&gt; symbol, which indicates to the C program that the getgrgid_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETGRGID_R&lt;/code&gt; , que indica al programa C que la rutina getgrgid_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="030e0d1f9c9ec5d5113cadafdb1d46cca6636eba" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRNAM_R&lt;/code&gt; symbol, which indicates to the C program that the getgrnam_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETGRNAM_R&lt;/code&gt; , que indica al programa C que la rutina getgrnam_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="5df49eaa2617f7f95ae5a3bfea499bb49b6e147a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGROUPS&lt;/code&gt; symbol, which indicates to the C program that the getgroups() routine is available to get the list of process groups.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETGROUPS&lt;/code&gt; , que indica al programa C que la rutina getgroups () est&amp;aacute; disponible para obtener la lista de grupos de procesos.</target>
        </trans-unit>
        <trans-unit id="800265a52655b0eed9fc30b1377171be6fe75acb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYADDR&lt;/code&gt; symbol, which indicates to the C program that the gethostbyaddr() routine is available to look up hosts by their &lt;code&gt;IP&lt;/code&gt; addresses.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETHOSTBYADDR&lt;/code&gt; , que indica al programa C que la rutina gethostbyaddr () est&amp;aacute; disponible para buscar hosts por sus direcciones &lt;code&gt;IP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ea6fb7457d69ab022ea88e866995c66dd82da32" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYADDR_R&lt;/code&gt; symbol, which indicates to the C program that the gethostbyaddr_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETHOSTBYADDR_R&lt;/code&gt; , que indica al programa C que la rutina gethostbyaddr_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="f6e8e21dbcc61a6d007e0d9229782dc31b5d46a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYNAME&lt;/code&gt; symbol, which indicates to the C program that the gethostbyname() routine is available to look up host names in some data base or other.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETHOSTBYNAME&lt;/code&gt; , que indica al programa C que la rutina gethostbyname () est&amp;aacute; disponible para buscar nombres de host en alguna base de datos u otra.</target>
        </trans-unit>
        <trans-unit id="4bf98ecfa6e8572b6387b8b2c890ea9af37d6e48" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the gethostbyname_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETHOSTBYNAME_R&lt;/code&gt; , que indica al programa C que la rutina gethostbyname_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="8ab2674e64e01f9d704936c384471673343e5f6d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTENT_R&lt;/code&gt; symbol, which indicates to the C program that the gethostent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETHOSTENT_R&lt;/code&gt; , que indica al programa C que la rutina gethostent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="b5275b5b15c84ca1128b06be5161f949867399a1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTNAME&lt;/code&gt; symbol, which indicates to the C program that the gethostname() routine may be used to derive the host name.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETHOSTNAME&lt;/code&gt; , que indica al programa C que la rutina gethostname () puede usarse para derivar el nombre de host.</target>
        </trans-unit>
        <trans-unit id="db277869ea8d6e46267e65bb1f91f362288123a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOST_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various gethost*() functions. See also</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETHOST_PROTOS&lt;/code&gt; , que indica al programa C que &amp;lt;netdb.h&amp;gt; proporciona prototipos para las diversas funciones gethost * (). Ver tambi&amp;eacute;n</target>
        </trans-unit>
        <trans-unit id="6911ca40dacf0175aa25657133be0fd097867be4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETITIMER&lt;/code&gt; symbol, which indicates to the C program that the getitimer() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETITIMER&lt;/code&gt; , que indica al programa C que la rutina getitimer () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="f04b4d71f3b0d33d951527806b9faa1b90d89c13" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETLOGIN&lt;/code&gt; symbol, which indicates to the C program that the getlogin() routine is available to get the login name.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETLOGIN&lt;/code&gt; , que indica al programa C que la rutina getlogin () est&amp;aacute; disponible para obtener el nombre de inicio de sesi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cf1e0fa70097167eda24ba22a85cbfefb047a83b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETLOGIN_R&lt;/code&gt; symbol, which indicates to the C program that the getlogin_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETLOGIN_R&lt;/code&gt; , que indica al programa C que la rutina getlogin_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="3040c09147f006139a9558f8a311da05ada71cc3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETMNT&lt;/code&gt; symbol, which indicates to the C program that the getmnt() routine is available to retrieve one or more mount info blocks by filename.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETMNT&lt;/code&gt; , que indica al programa C que la rutina getmnt () est&amp;aacute; disponible para recuperar uno o m&amp;aacute;s bloques de informaci&amp;oacute;n de montaje por nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="df153c694674c9eb98ea57c25cde4b2529e93311" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETMNTENT&lt;/code&gt; symbol, which indicates to the C program that the getmntent() routine is available to iterate through mounted files to get their mount info.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETMNTENT&lt;/code&gt; , que indica al programa C que la rutina getmntent () est&amp;aacute; disponible para iterar a trav&amp;eacute;s de archivos montados para obtener su informaci&amp;oacute;n de montaje.</target>
        </trans-unit>
        <trans-unit id="998b35a864ca7293bfdbdc5a68d5a152a1d7c29e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNAMEINFO&lt;/code&gt; symbol, which indicates to the C program that the getnameinfo() function is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETNAMEINFO&lt;/code&gt; , que indica al programa C que la funci&amp;oacute;n getnameinfo () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="8474869224bdf2ca0fc35d392c15a984241143e3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYADDR&lt;/code&gt; symbol, which indicates to the C program that the getnetbyaddr() routine is available to look up networks by their &lt;code&gt;IP&lt;/code&gt; addresses.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETNETBYADDR&lt;/code&gt; , que indica al programa C que la rutina getnetbyaddr () est&amp;aacute; disponible para buscar redes por sus direcciones &lt;code&gt;IP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f75e54ebc6a22f2ef91ec6d724d333f9d033387c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYADDR_R&lt;/code&gt; symbol, which indicates to the C program that the getnetbyaddr_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETNETBYADDR_R&lt;/code&gt; , que indica al programa C que la rutina getnetbyaddr_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="6b5ef841b8644e4d43f32175f64b87de38e60b50" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYNAME&lt;/code&gt; symbol, which indicates to the C program that the getnetbyname() routine is available to look up networks by their names.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETNETBYNAME&lt;/code&gt; , que indica al programa C que la rutina getnetbyname () est&amp;aacute; disponible para buscar redes por sus nombres.</target>
        </trans-unit>
        <trans-unit id="721c47b838e08cebc4dfc525ba1a86bef8ed22b8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the getnetbyname_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETNETBYNAME_R&lt;/code&gt; , que indica al programa C que la rutina getnetbyname_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="5e1f8d2dc25f66de5fe6af8a19d35c75f17a5000" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETENT_R&lt;/code&gt; symbol, which indicates to the C program that the getnetent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETNETENT_R&lt;/code&gt; , que indica al programa C que la rutina getnetent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="bceed1c7ecb752248dae3627ddd88c982cb3b42e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNET_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various getnet*() functions. See also</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETNET_PROTOS&lt;/code&gt; , que indica al programa C que &amp;lt;netdb.h&amp;gt; proporciona prototipos para las diversas funciones getnet * (). Ver tambi&amp;eacute;n</target>
        </trans-unit>
        <trans-unit id="7aa9f35159df360d21bd577eca2bcbf715c7998d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPGID&lt;/code&gt; symbol, which indicates to the C program that the getpgid(pid) function is available to get the process group id.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPGID&lt;/code&gt; , que indica al programa C que la funci&amp;oacute;n getpgid (pid) est&amp;aacute; disponible para obtener el ID del grupo de procesos.</target>
        </trans-unit>
        <trans-unit id="04f375e83ea7b8de60cfb2691530d1bc9774418d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPPID&lt;/code&gt; symbol, which indicates to the C program that the getppid() routine is available to get the parent process &lt;code&gt;ID&lt;/code&gt; .</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPPID&lt;/code&gt; , que indica al programa C que la rutina getppid () est&amp;aacute; disponible para obtener el &lt;code&gt;ID&lt;/code&gt; del proceso padre .</target>
        </trans-unit>
        <trans-unit id="bd53aba7859e8609cee2c8eef7587e2855275107" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPPID&lt;/code&gt; symbol, which indicates to the C program that the getppid() routine is available to get the parent process &lt;code&gt;ID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a78c1d0e9007adf39f8c4627cff4de19b836276" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNAME&lt;/code&gt; symbol, which indicates to the C program that the getprotobyname() routine is available to look up protocols by their name.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPROTOBYNAME&lt;/code&gt; , que indica al programa C que la rutina getprotobyname () est&amp;aacute; disponible para buscar protocolos por su nombre.</target>
        </trans-unit>
        <trans-unit id="94ee0c74e30f9d4b71ac73fae7e719b93f83ff28" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the getprotobyname_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPROTOBYNAME_R&lt;/code&gt; , que indica al programa C que la rutina getprotobyname_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="89d5b6b59bfef172f96bfa6cc53c69ec52250783" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNUMBER&lt;/code&gt; symbol, which indicates to the C program that the getprotobynumber() routine is available to look up protocols by their number.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPROTOBYNUMBER&lt;/code&gt; , que indica al programa C que la rutina getprotobynumber () est&amp;aacute; disponible para buscar protocolos por su n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="368c95f7c37edd3f397895e63f2b56a7b2a21f03" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNUMBER_R&lt;/code&gt; symbol, which indicates to the C program that the getprotobynumber_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPROTOBYNUMBER_R&lt;/code&gt; , que indica al programa C que la rutina getprotobynumber_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="d05bd546cb9ce10a4ef01cbbaaa2e5620cb6fb98" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOENT_R&lt;/code&gt; symbol, which indicates to the C program that the getprotoent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPROTOENT_R&lt;/code&gt; , que indica al programa C que la rutina getprotoent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="f547c005ea9729c6769bbf465f8db85dfc630fb1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTO_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various getproto*() functions. See also</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPROTO_PROTOS&lt;/code&gt; , que indica al programa C que &amp;lt;netdb.h&amp;gt; proporciona prototipos para las diversas funciones getproto * (). Ver tambi&amp;eacute;n</target>
        </trans-unit>
        <trans-unit id="eaee5a550cc6a07f34637bc2870d60dbfb57bba0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWENT&lt;/code&gt; symbol, which indicates to the C program that the getpwent() routine is available for sequential access of the passwd database.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPWENT&lt;/code&gt; , que indica al programa C que la rutina getpwent () est&amp;aacute; disponible para el acceso secuencial de la base de datos passwd.</target>
        </trans-unit>
        <trans-unit id="0cfeae59d099abce81836530d715a51913eaf2a9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWENT_R&lt;/code&gt; symbol, which indicates to the C program that the getpwent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPWENT_R&lt;/code&gt; , que indica al programa C que la rutina getpwent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="9275e131831690787dbdc11f7dfcedfb8c9f2eda" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWNAM_R&lt;/code&gt; symbol, which indicates to the C program that the getpwnam_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPWNAM_R&lt;/code&gt; , que indica al programa C que la rutina getpwnam_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="8827a97094e26a9a854d28073049c8082dc5d239" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWUID_R&lt;/code&gt; symbol, which indicates to the C program that the getpwuid_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETPWUID_R&lt;/code&gt; , que indica al programa C que la rutina getpwuid_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="ddc4a151da38a54d4688d4389e590a62e281759b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYNAME&lt;/code&gt; symbol, which indicates to the C program that the getservbyname() routine is available to look up services by their name.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETSERVBYNAME&lt;/code&gt; , que indica al programa C que la rutina getservbyname () est&amp;aacute; disponible para buscar servicios por su nombre.</target>
        </trans-unit>
        <trans-unit id="f63223f218d82f595643d54737913a982ed89b01" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the getservbyname_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETSERVBYNAME_R&lt;/code&gt; , que indica al programa C que la rutina getservbyname_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="2233b0d3a5dbbbc8649c940b930ca9249fb21aa0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYPORT&lt;/code&gt; symbol, which indicates to the C program that the getservbyport() routine is available to look up services by their port.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETSERVBYPORT&lt;/code&gt; , que indica al programa C que la rutina getservbyport () est&amp;aacute; disponible para buscar servicios por su puerto.</target>
        </trans-unit>
        <trans-unit id="e47e4595e0b65cee2c0cb9c76e2aaaffe9e90733" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYPORT_R&lt;/code&gt; symbol, which indicates to the C program that the getservbyport_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETSERVBYPORT_R&lt;/code&gt; , que indica al programa C que la rutina getservbyport_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="07df398a34922beccb5e215e721d52f31b38b932" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVENT_R&lt;/code&gt; symbol, which indicates to the C program that the getservent_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETSERVENT_R&lt;/code&gt; , que indica al programa C que la rutina getservent_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="08eec3a50cec026084bfb933ad487f92365051f3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERV_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various getserv*() functions. See also</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETSERV_PROTOS&lt;/code&gt; , que indica al programa C que &amp;lt;netdb.h&amp;gt; proporciona prototipos para las diversas funciones getserv * (). Ver tambi&amp;eacute;n</target>
        </trans-unit>
        <trans-unit id="6ee9b27273c95fe6af664a46ca2e4b018eb2a3bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSPNAM_R&lt;/code&gt; symbol, which indicates to the C program that the getspnam_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETSPNAM_R&lt;/code&gt; , que indica al programa C que la rutina getspnam_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="e672430eb4f4b23e7c8ea71a0d9547945979104c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETTIMEOFDAY&lt;/code&gt; symbol, which indicates that the gettimeofday() system call exists (to obtain a sub-second accuracy clock). You should probably include &amp;lt;sys/resource.h&amp;gt;.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GETTIMEOFDAY&lt;/code&gt; , que indica que existe la llamada al sistema gettimeofday () (para obtener un reloj de precisi&amp;oacute;n inferior a un segundo). Probablemente deber&amp;iacute;a incluir &amp;lt;sys / resource.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="84fced701ac1d8972ad41c237d19c362f2099ca2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GMTIME_R&lt;/code&gt; symbol, which indicates to the C program that the gmtime_r() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_GMTIME_R&lt;/code&gt; , que indica al programa C que la rutina gmtime_r () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="1fd3c7d3ad1a3dfa9df8edc33011f70a34e07812" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_HASMNTOPT&lt;/code&gt; symbol, which indicates to the C program that the hasmntopt() routine is available to query the mount options of file systems.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_HASMNTOPT&lt;/code&gt; , que indica al programa C que la rutina hasmntopt () est&amp;aacute; disponible para consultar las opciones de montaje de los sistemas de archivos.</target>
        </trans-unit>
        <trans-unit id="00e5a920dcdf38a72d0e1f65eec67c25b8f6b02e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ILOGB&lt;/code&gt; symbol, which indicates to the C program that the ilogb() routine is available for extracting the exponent of double x as a signed integer.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ILOGB&lt;/code&gt; , que indica al programa C que la rutina ilogb () est&amp;aacute; disponible para extraer el exponente de doble x como un entero con signo.</target>
        </trans-unit>
        <trans-unit id="08c0b5bc5432877b8453b37bdcbcd6004c0f3533" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ILOGBL&lt;/code&gt; symbol, which indicates to the C program that the ilogbl() routine is available for extracting the exponent of long double x as a signed integer. If scalbnl is also present we can emulate frexpl.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ILOGBL&lt;/code&gt; , que indica al programa C que la rutina ilogbl () est&amp;aacute; disponible para extraer el exponente de doble x largo como un entero con signo. Si scalbnl tambi&amp;eacute;n est&amp;aacute; presente, podemos emular frexpl.</target>
        </trans-unit>
        <trans-unit id="d7a6e67ac883b1040cb0eb3aa3cd89d5352feb93" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_INETNTOP&lt;/code&gt; symbol, which indicates to the C program that the inet_ntop() function is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_INETNTOP&lt;/code&gt; , que indica al programa C que la funci&amp;oacute;n inet_ntop () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="22502f98a24d835efbc320660dd0c293f19ac278" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_INETPTON&lt;/code&gt; symbol, which indicates to the C program that the inet_pton() function is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_INETPTON&lt;/code&gt; , que indica al programa C que la funci&amp;oacute;n inet_pton () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="ff67d886f79098d9924c2d3ff3d0db78ccef4ffe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_INET_ATON&lt;/code&gt; symbol, which indicates to the C program that the inet_aton() function is available to parse &lt;code&gt;IP&lt;/code&gt; address &lt;code&gt;dotted-quad&lt;/code&gt; strings.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_INET_ATON&lt;/code&gt; , que indica al programa C que la funci&amp;oacute;n inet_aton () est&amp;aacute; disponible para analizar cadenas de &lt;code&gt;dotted-quad&lt;/code&gt; direcciones &lt;code&gt;IP&lt;/code&gt; conpuntos .</target>
        </trans-unit>
        <trans-unit id="ab41c4767757cf5520d581b43402f2b69d925446" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_IP_MREQ&lt;/code&gt; symbol, which indicates the availability of a struct ip_mreq.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_IP_MREQ&lt;/code&gt; , que indica la disponibilidad de un struct ip_mreq.</target>
        </trans-unit>
        <trans-unit id="55f85ff4272b951d973813125721ee335bf64458" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_IP_MREQ_SOURCE&lt;/code&gt; symbol, which indicates the availability of a struct ip_mreq_source.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_IP_MREQ_SOURCE&lt;/code&gt; , que indica la disponibilidad de una estructura de ip_mreq_source.</target>
        </trans-unit>
        <trans-unit id="72388a4f1ba17b3fd0e62b5152d323f4548da870" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISASCII&lt;/code&gt; constant, which indicates to the C program that isascii() is available.</source>
          <target state="translated">Esta variable define condicionalmente la constante &lt;code&gt;HAS_ISASCII&lt;/code&gt; , que indica al programa en C que isascii () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="5a5c21b2a9944da065cad96d5e707e6c815182d3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISBLANK&lt;/code&gt; constant, which indicates to the C program that isblank() is available.</source>
          <target state="translated">Esta variable define condicionalmente la constante &lt;code&gt;HAS_ISBLANK&lt;/code&gt; , que indica al programa C que isblank () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="fcfef1f9f54abc2b109ba1f21e62b9cb30d767cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISFINITE&lt;/code&gt; symbol, which indicates to the C program that the isfinite() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ISFINITE&lt;/code&gt; , que indica al programa C que la rutina isfinite () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="b52552318ae18b7d8b2396ea779d84538ec17c45" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISFINITEL&lt;/code&gt; symbol, which indicates to the C program that the isfinitel() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ISFINITEL&lt;/code&gt; , que indica al programa C que la rutina isfinitel () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="5cd5f09b0af60ecfb75127a22d7e1ee2c772c023" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISINF&lt;/code&gt; symbol, which indicates to the C program that the isinf() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ISINF&lt;/code&gt; , que indica al programa C que la rutina isinf () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="a94a2b2142e85325054f5f4823ba6b83d8fa642a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISINFL&lt;/code&gt; symbol, which indicates to the C program that the isinfl() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ISINFL&lt;/code&gt; , que indica al programa C que la rutina isinfl () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="e264280a9cf9d3d86b3d9d38e5fb7995161a3146" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISLESS&lt;/code&gt; symbol, which indicates to the C program that the isless() routine is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd09d1b06bd7c7d728ac0ffd960b30379c4a768" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISNAN&lt;/code&gt; symbol, which indicates to the C program that the isnan() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ISNAN&lt;/code&gt; , que indica al programa C que la rutina isnan () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="0ae4b6ae907fe92bcc5cb3aa1a2e0540e4b58a60" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISNANL&lt;/code&gt; symbol, which indicates to the C program that the isnanl() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ISNANL&lt;/code&gt; , que indica al programa C que la rutina isnanl () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="94a6de8a4e8a40a43a72c3936b6277b9b9b82512" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISNORMAL&lt;/code&gt; symbol, which indicates to the C program that the isnormal() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_ISNORMAL&lt;/code&gt; , que indica al programa C que la rutina isnormal () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="9461c7ba3e2b8bec7df67bc8c282aae74033fc39" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_KILLPG&lt;/code&gt; symbol, which indicates to the C program that the killpg() routine is available to kill process groups.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_KILLPG&lt;/code&gt; , que indica al programa C que la rutina killpg () est&amp;aacute; disponible para matar grupos de procesos.</target>
        </trans-unit>
        <trans-unit id="274a3e469317759be16452a214542288c6b937a7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LCHOWN&lt;/code&gt; symbol, which indicates to the C program that the lchown() routine is available to operate on a symbolic link (instead of following the link).</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_LCHOWN&lt;/code&gt; , que indica al programa C que la rutina lchown () est&amp;aacute; disponible para operar en un enlace simb&amp;oacute;lico (en lugar de seguir el enlace).</target>
        </trans-unit>
        <trans-unit id="0f56859453fc1d27f3f17bb37fc0a2d155502907" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LDEXPL&lt;/code&gt; symbol, which indicates to the C program that the ldexpl() routine is available.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_LDEXPL&lt;/code&gt; , que indica al programa C que la rutina ldexpl () est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="a37d8cf4a0848f3d9bb4cc5545717c3e60e45b64" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LGAMMA&lt;/code&gt; symbol, which indicates to the C program that the lgamma() routine is available for the log gamma function. See also d_tgamma and d_lgamma_r.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_LGAMMA&lt;/code&gt; , que indica al programa C que la rutina lgamma () est&amp;aacute; disponible para la funci&amp;oacute;n log gamma. Consulte tambi&amp;eacute;n d_tgamma y d_lgamma_r.</target>
        </trans-unit>
        <trans-unit id="5b284947de52d44afb16de832ba8c676b549a69b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LGAMMA_R&lt;/code&gt; symbol, which indicates to the C program that the lgamma_r() routine is available for the log gamma function, without using the global signgam variable.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_LGAMMA_R&lt;/code&gt; , que indica al programa C que la rutina lgamma_r () est&amp;aacute; disponible para la funci&amp;oacute;n log gamma, sin usar la variable global signgam.</target>
        </trans-unit>
        <trans-unit id="30fc562f2935f09f17639cc31ad06d2ee83886f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LINKAT&lt;/code&gt; symbol, which indicates the &lt;code&gt;POSIX&lt;/code&gt; linkat() function is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb5213a88acb50acec17dbb6c54f9e6a79439a1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLRINT&lt;/code&gt; symbol, which indicates to the C program that the llrint() routine is available to return the long long value closest to (according to the current rounding mode) to x.</source>
          <target state="translated">Esta variable define condicionalmente el s&amp;iacute;mbolo &lt;code&gt;HAS_LLRINT&lt;/code&gt; , que indica al programa C que la rutina llrint () est&amp;aacute; disponible para devolver el valor long long m&amp;aacute;s cercano a (seg&amp;uacute;n el modo de redondeo actual) ax.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
