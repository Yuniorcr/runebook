<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="9ab4dd7b2f4575f0fcc3274141eab6c5a7ca9278" translate="yes" xml:space="preserve">
          <source>The following methods are mandatory: _new(), _str(), _add(), and _sub(). However, computations will be very slow without _mul() and _div().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6f41c232d0f405651a2979e1a726ffd3fbd1cf" translate="yes" xml:space="preserve">
          <source>The following methods are not supported on a per-filehandle basis.</source>
          <target state="translated">Los siguientes métodos no están respaldados por el mango de un archivo.</target>
        </trans-unit>
        <trans-unit id="e3dd1f8a67cafbd7d4b11fa3ef01a32bc5c44916" translate="yes" xml:space="preserve">
          <source>The following methods are ones you may wish to override if you want to subclass &lt;code&gt;TAP::Harness&lt;/code&gt; .</source>
          <target state="translated">Los siguientes m&amp;eacute;todos son los que quiz&amp;aacute;s desee anular si desea subclase &lt;code&gt;TAP::Harness&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e9f03dd5d9f58ae4081f60a8239d90f2810d056" translate="yes" xml:space="preserve">
          <source>The following methods are ones you may wish to override if you want to subclass &lt;code&gt;TAP::Harness&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679901c8aebeb73a7fa904b450ae5e241ed9cb03" translate="yes" xml:space="preserve">
          <source>The following methods are optional, and can be defined if the underlying lib has a fast way to do them. If undefined, Math::BigInt will use pure Perl (hence slow) fallback routines to emulate these:</source>
          <target state="translated">Los siguientes métodos son opcionales,y pueden definirse si la liberación subyacente tiene una forma rápida de hacerlos.Si no se define,Math::BigInt usará rutinas de retroceso de Perl puro (por lo tanto lento)para emularlas:</target>
        </trans-unit>
        <trans-unit id="d8157ae492dfb9da4aae902df688ee7d5be628f8" translate="yes" xml:space="preserve">
          <source>The following methods are provided in this module. Each one takes a reference to the object itself as an implicit first parameter.</source>
          <target state="translated">En este módulo se proporcionan los siguientes métodos.Cada uno toma una referencia al objeto mismo como primer parámetro implícito.</target>
        </trans-unit>
        <trans-unit id="bde2e5da8041f121dd086d0f1594d72494846e0b" translate="yes" xml:space="preserve">
          <source>The following methods are provided:</source>
          <target state="translated">Se proporcionan los siguientes métodos:</target>
        </trans-unit>
        <trans-unit id="61fea790abe3137c314afb22029bb574c87067fd" translate="yes" xml:space="preserve">
          <source>The following methods are required for an API version of 2 or greater.</source>
          <target state="translated">Los siguientes métodos son necesarios para una versión de la API de 2 o más.</target>
        </trans-unit>
        <trans-unit id="ec06d96f64f88685f2a77a047bae0d4b9b41fde8" translate="yes" xml:space="preserve">
          <source>The following methods are wrappers for the directory related functions built into perl (the trailing 'dir' has been removed from the names). See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for details of these functions.</source>
          <target state="translated">Los siguientes m&amp;eacute;todos son envoltorios para las funciones relacionadas con el directorio integradas en perl (el 'dir' final se ha eliminado de los nombres). Consulte &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; para obtener detalles de estas funciones.</target>
        </trans-unit>
        <trans-unit id="ded7f0c3574ed832e686f908708c74d7bfabfc4b" translate="yes" xml:space="preserve">
          <source>The following methods are wrappers for the directory related functions built into perl (the trailing 'dir' has been removed from the names). See &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for details of these functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570150b9609694e95e958423d380ac3c5369cdc3" translate="yes" xml:space="preserve">
          <source>The following methods can be used to manipulate items anywhere in a queue.</source>
          <target state="translated">Los siguientes métodos pueden utilizarse para manipular artículos en cualquier lugar de una cola.</target>
        </trans-unit>
        <trans-unit id="1cff87e9e5dce6950df4739edc1576de748d33e5" translate="yes" xml:space="preserve">
          <source>The following methods can be used to transfer files between two remote servers, providing that these two servers can connect directly to each other.</source>
          <target state="translated">Los siguientes métodos pueden utilizarse para transferir archivos entre dos servidores remotos,siempre que estos dos servidores puedan conectarse directamente entre sí.</target>
        </trans-unit>
        <trans-unit id="d8f54c9acd776fdfe4ac513355a1096a098e49e7" translate="yes" xml:space="preserve">
          <source>The following methods can return different results depending on how they are called. If the user explicitly calls either of the &lt;code&gt;pasv&lt;/code&gt; or &lt;code&gt;port&lt;/code&gt; methods then these methods will return a</source>
          <target state="translated">Los siguientes m&amp;eacute;todos pueden devolver resultados diferentes seg&amp;uacute;n c&amp;oacute;mo se llamen. Si el usuario llama expl&amp;iacute;citamente a cualquiera de los m&amp;eacute;todos &lt;code&gt;pasv&lt;/code&gt; o &lt;code&gt;port&lt;/code&gt; , estos m&amp;eacute;todos devolver&amp;aacute;n un</target>
        </trans-unit>
        <trans-unit id="48671c770c71c327c8f21494ae7c58eef76a7413" translate="yes" xml:space="preserve">
          <source>The following methods can then be used on the compartment object returned by the above constructor. The object argument is implicit in each case.</source>
          <target state="translated">Los siguientes métodos pueden utilizarse en el objeto del compartimento devuelto por el constructor anterior.El argumento del objeto está implícito en cada caso.</target>
        </trans-unit>
        <trans-unit id="a9334f5feea4574b7400347c313e7ae3bde9f0a9" translate="yes" xml:space="preserve">
          <source>The following methods deal with queues on a FIFO basis.</source>
          <target state="translated">Los siguientes métodos se ocupan de las colas sobre una base FIFO.</target>
        </trans-unit>
        <trans-unit id="1107701eeb6d8dce0fd7fc1f42599acf6178ec38" translate="yes" xml:space="preserve">
          <source>The following methods implement this incremental parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7cc6ee31a4cea12821df3d9ff6b6e073be7714" translate="yes" xml:space="preserve">
          <source>The following methods must be defined in order to support the use by Math::BigInt v1.70 or later.</source>
          <target state="translated">Los siguientes métodos deben ser definidos para apoyar el uso de las Matemáticas::BigInt v1.70 o posterior.</target>
        </trans-unit>
        <trans-unit id="280d5e97299a977b6fb2506b08e4d295925aa675" translate="yes" xml:space="preserve">
          <source>The following methods return a single value, which is the value for the corresponding entry in the distmeta structure. Values should be either undef or strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47bdf0bfe9cf16bdf842c1c20e389188ee7a3a8" translate="yes" xml:space="preserve">
          <source>The following methods upgrade themselves unconditionally; that is if upgrade is in effect, they always hands up their work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f23966e0bc23b8a5a278ce7e5e420b3556e28b8" translate="yes" xml:space="preserve">
          <source>The following methods upgrade themselves unconditionally; that is if upgrade is in effect, they will always hand up their work:</source>
          <target state="translated">Los siguientes métodos se actualizan a sí mismos incondicionalmente;es decir,si la actualización está en vigor,siempre entregarán su trabajo:</target>
        </trans-unit>
        <trans-unit id="4d85840c9544f4d1a9475cb2562273ab62746e95" translate="yes" xml:space="preserve">
          <source>The following methods, while usable from anywhere, are primarily intended for developers wishing to subclass &lt;code&gt;autodie::exception&lt;/code&gt;, write code that registers custom error messages, or otherwise work closely with the &lt;code&gt;autodie::exception&lt;/code&gt; model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314022e0b634f0a33992a5bea72595f23a273937" translate="yes" xml:space="preserve">
          <source>The following modules are currently used by bigint:</source>
          <target state="translated">Los siguientes módulos son utilizados actualmente por bigint:</target>
        </trans-unit>
        <trans-unit id="086b35f723ebe590f75a1aea7b6b1150783292e6" translate="yes" xml:space="preserve">
          <source>The following modules are currently used by bignum:</source>
          <target state="translated">Los siguientes módulos son utilizados actualmente por bignum:</target>
        </trans-unit>
        <trans-unit id="d93609e5247b12617e4dd3f00cb7708916287a29" translate="yes" xml:space="preserve">
          <source>The following names have special meaning to Perl. Most punctuation names have reasonable mnemonics, or analogs in the shells. Nevertheless, if you wish to use long variable names, you need only say:</source>
          <target state="translated">Los siguientes nombres tienen un significado especial para Perl.La mayoría de los nombres de puntuación tienen mnemotécnicos razonables,o análogos en las conchas.Sin embargo,si desea utilizar nombres largos de variables,sólo tiene que decirlo:</target>
        </trans-unit>
        <trans-unit id="8937b6a268204b01bd09b0791adaf0dc939c65b5" translate="yes" xml:space="preserve">
          <source>The following options affect what happens with &lt;code&gt;V&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , and &lt;code&gt;x&lt;/code&gt; commands:</source>
          <target state="translated">Las siguientes opciones afectan lo que sucede con los comandos &lt;code&gt;V&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; y &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4a331658e3e1d7b8de900a2e68b72b832b1d4100" translate="yes" xml:space="preserve">
          <source>The following options affect what happens with &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, and &lt;code&gt;x&lt;/code&gt; commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ad7915cdbf5aabf9ec8f4e6f650717a3e51ad5" translate="yes" xml:space="preserve">
          <source>The following options are available:</source>
          <target state="translated">Se dispone de las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="5530497eb21d4e6a6dcc738d7ea1b33bd3ad244e" translate="yes" xml:space="preserve">
          <source>The following options are pairwise exclusive.</source>
          <target state="translated">Las siguientes opciones son exclusivas por parejas.</target>
        </trans-unit>
        <trans-unit id="82fa31556e7811972756a886a4cfa29a126dcd22" translate="yes" xml:space="preserve">
          <source>The following options are passed through to the underlying text formatter. See the manual pages of these modules for more information.</source>
          <target state="translated">Las siguientes opciones se pasan al formato de texto subyacente.Consulte las páginas del manual de estos módulos para obtener más información.</target>
        </trans-unit>
        <trans-unit id="407cb3c611809d0d6a4a0229085dace99fab8aca" translate="yes" xml:space="preserve">
          <source>The following options are supported: center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, quotes, release, section</source>
          <target state="translated">Se admiten las siguientes opciones:centro,fecha,fijo,fixedbold,fixeditalic,fixedbolditalic,citas,liberación,sección</target>
        </trans-unit>
        <trans-unit id="7fa87a7b90e6843371b98a42bf443c041138aacf" translate="yes" xml:space="preserve">
          <source>The following pattern matches a function &lt;code&gt;foo()&lt;/code&gt; which may contain balanced parentheses as the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9719c919f328c184200e9a901169faf3fe1692f" translate="yes" xml:space="preserve">
          <source>The following pattern matches a function foo() which may contain balanced parentheses as the argument.</source>
          <target state="translated">El siguiente patrón coincide con una función foo()que puede contener paréntesis equilibrados como argumento.</target>
        </trans-unit>
        <trans-unit id="88eac117835fd0d5e8fe0a92e17ee881d0f51bb6" translate="yes" xml:space="preserve">
          <source>The following pattern matches a parenthesized group:</source>
          <target state="translated">El siguiente patrón coincide con un grupo entre paréntesis:</target>
        </trans-unit>
        <trans-unit id="22ee5be8d1198dc109b222871c61596812e4d6af" translate="yes" xml:space="preserve">
          <source>The following people have all contributed to this document in some way, even if only for review.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9261bf4cae54928a9960941cd2e6c763bb03b07b" translate="yes" xml:space="preserve">
          <source>The following platforms are known to build Perl 5.12 (as of April 2010, its release date) from the standard source code distribution available at &lt;a href=&quot;http://www.cpan.org/src&quot;&gt;http://www.cpan.org/src&lt;/a&gt;</source>
          <target state="translated">Se sabe que las siguientes plataformas compilan Perl 5.12 (a partir de abril de 2010, su fecha de lanzamiento) a partir de la distribuci&amp;oacute;n de c&amp;oacute;digo fuente est&amp;aacute;ndar disponible en &lt;a href=&quot;http://www.cpan.org/src&quot;&gt;http://www.cpan.org/src&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6907367840204c62b96dad2c2b4daa026466da81" translate="yes" xml:space="preserve">
          <source>The following platforms have been known to build Perl from source in the past (5.005_03 and earlier), but we haven't been able to verify their status for the current release, either because the hardware/software platforms are rare or because we don't have an active champion on these platforms--or both. They used to work, though, so go ahead and try compiling them, and let &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt; know of any trouble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3340ff1c2b446edebeb559ea5dd147cf80639131" translate="yes" xml:space="preserve">
          <source>The following platforms have been known to build Perl from source in the past (5.005_03 and earlier), but we haven't been able to verify their status for the current release, either because the hardware/software platforms are rare or because we don't have an active champion on these platforms--or both. They used to work, though, so go ahead and try compiling them, and let perlbug@perl.org of any trouble.</source>
          <target state="translated">Se sabe que las siguientes plataformas han construido Perl desde su origen en el pasado (5.005_03 y anteriores),pero no hemos podido verificar su estado para la versión actual,ya sea porque las plataformas de hardware/software son raras o porque no tenemos un campeón activo en estas plataformas-o ambas.Sin embargo,solían funcionar,así que adelante e intenta compilarlas,y deja a perlbug@perl.org sin problemas.</target>
        </trans-unit>
        <trans-unit id="8c95fcd90364c113c8743d95c16878f685bbdec9" translate="yes" xml:space="preserve">
          <source>The following platforms have only binaries available via &lt;a href=&quot;http://www.cpan.org/ports/index.html&quot;&gt;http://www.cpan.org/ports/index.html&lt;/a&gt; :</source>
          <target state="translated">Las siguientes plataformas solo tienen binarios disponibles a trav&amp;eacute;s de &lt;a href=&quot;http://www.cpan.org/ports/index.html&quot;&gt;http://www.cpan.org/ports/index.html&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="17f6cd1b99f9d8c8f96a2484ba6123182c8c7ea5" translate="yes" xml:space="preserve">
          <source>The following platforms have their own source code distributions and binaries available via &lt;a href=&quot;http://www.cpan.org/ports/&quot;&gt;http://www.cpan.org/ports/&lt;/a&gt;</source>
          <target state="translated">Las siguientes plataformas tienen sus propias distribuciones de c&amp;oacute;digo fuente y binarios disponibles a trav&amp;eacute;s de &lt;a href=&quot;http://www.cpan.org/ports/&quot;&gt;http://www.cpan.org/ports/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba4505bcfd3048861117fe3f1683581b473bc260" translate="yes" xml:space="preserve">
          <source>The following platforms were supported by a previous version of Perl but have been officially removed from Perl's source code as of 5.12:</source>
          <target state="translated">Las siguientes plataformas eran compatibles con una versión anterior de Perl,pero se han eliminado oficialmente del código fuente de Perl a partir del 5.12:</target>
        </trans-unit>
        <trans-unit id="231bce91c0774cb9ac67f2e9bf6e077f99a9edec" translate="yes" xml:space="preserve">
          <source>The following platforms were supported by a previous version of Perl but have been officially removed from Perl's source code as of 5.20:</source>
          <target state="translated">Las siguientes plataformas eran compatibles con una versión anterior de Perl,pero se han eliminado oficialmente del código fuente de Perl a partir de la versión 5.20:</target>
        </trans-unit>
        <trans-unit id="ce7175eecbb5cf889a2f2cc3f026e2da7a9136e7" translate="yes" xml:space="preserve">
          <source>The following platforms were supported up to 5.10. They may still have worked in 5.12, but supporting code has been removed for 5.14:</source>
          <target state="translated">Las siguientes plataformas fueron soportadas hasta el 5.10.Pueden haber funcionado aún en 5.12,pero el código de soporte ha sido eliminado para 5.14:</target>
        </trans-unit>
        <trans-unit id="446fc2176911919a5044a357259301549c936213" translate="yes" xml:space="preserve">
          <source>The following platforms worked with the previous releases (5.6 and 5.7), but we did not manage either to fix or to test these in time for the 5.8.0 release. There is a very good chance that many of these will work fine with the 5.8.0.</source>
          <target state="translated">Las siguientes plataformas funcionaron con las versiones anteriores (5.6 y 5.7),pero no conseguimos arreglarlas ni probarlas a tiempo para la versión 5.8.0.Hay una gran posibilidad de que muchas de ellas funcionen bien con la 5.8.0.</target>
        </trans-unit>
        <trans-unit id="637d6920710e051f990eceb2af393917b297b61a" translate="yes" xml:space="preserve">
          <source>The following pragmas are defined (and have their own documentation).</source>
          <target state="translated">Los siguientes pragmas están definidos (y tienen su propia documentación).</target>
        </trans-unit>
        <trans-unit id="3e891a8176dfddab918a655b139307ab8b66b513" translate="yes" xml:space="preserve">
          <source>The following primary functions are provided:</source>
          <target state="translated">Las funciones principales son las siguientes:</target>
        </trans-unit>
        <trans-unit id="dcbd438c6b1158dced15757e5785975c49cf130b" translate="yes" xml:space="preserve">
          <source>The following probably doesn't do what you expect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf69375b2075818b8dae7a187b7c74a5295e91b" translate="yes" xml:space="preserve">
          <source>The following problems are encountered with Haiku revision 28311:</source>
          <target state="translated">Los siguientes problemas se encuentran en la revisión 28311 de Haiku:</target>
        </trans-unit>
        <trans-unit id="d89ada30f3c9b0885c9f6f1b4c7448cd518fcaa4" translate="yes" xml:space="preserve">
          <source>The following returns the &lt;b&gt;names&lt;/b&gt; of the PerlIO layers on a filehandle.</source>
          <target state="translated">Lo siguiente devuelve los &lt;b&gt;nombres&lt;/b&gt; de las capas de PerlIO en un identificador de archivo.</target>
        </trans-unit>
        <trans-unit id="1bc9e3e129e691ac04ecb6526cec5a595482fff6" translate="yes" xml:space="preserve">
          <source>The following revisions are supported. The default is 30.</source>
          <target state="translated">Se apoyan las siguientes revisiones.El valor por defecto es 30.</target>
        </trans-unit>
        <trans-unit id="4a818dfcd5c08f13e17285de1b0c0c9fdcdbac96" translate="yes" xml:space="preserve">
          <source>The following revisions are supported. The default is 36.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c446e9a76c2a849f3d9283f94a02c3c2d25e461d" translate="yes" xml:space="preserve">
          <source>The following routines will be exported into your namespace if you specifically ask that they be imported:</source>
          <target state="translated">Las siguientes rutinas se exportarán a su espacio de nombres si usted pide específicamente que se importen:</target>
        </trans-unit>
        <trans-unit id="019be2c4bd05e066f928aafadb59663b3afde865" translate="yes" xml:space="preserve">
          <source>The following routines will be exported into your namespace if you use the Benchmark module:</source>
          <target state="translated">Las siguientes rutinas se exportarán a su espacio de nombres si utiliza el módulo Benchmark:</target>
        </trans-unit>
        <trans-unit id="de855448328b5e9f80cc8ce9168a701f985757d7" translate="yes" xml:space="preserve">
          <source>The following rules apply:</source>
          <target state="translated">Se aplican las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="c3f236092c86ae50065ffb55ca5283dcb8508783" translate="yes" xml:space="preserve">
          <source>The following rules are available:</source>
          <target state="translated">Las siguientes reglas están disponibles:</target>
        </trans-unit>
        <trans-unit id="a8f5fc7c9bec47fa12d0874b935f8fd0b4ed0730" translate="yes" xml:space="preserve">
          <source>The following sample implementation of &lt;code&gt;minus()&lt;/code&gt; (which assumes that &lt;code&gt;Number&lt;/code&gt; objects are simply blessed references to scalars) illustrates the calling conventions:</source>
          <target state="translated">La siguiente implementaci&amp;oacute;n de muestra de &lt;code&gt;minus()&lt;/code&gt; (que asume que los objetos &lt;code&gt;Number&lt;/code&gt; son simplemente referencias bendecidas a escalares) ilustra las convenciones de llamada:</target>
        </trans-unit>
        <trans-unit id="67999be44740f8addea9fce4caf76726233a8acf" translate="yes" xml:space="preserve">
          <source>The following sequences (except &lt;code&gt;\N&lt;/code&gt; ) work within or without a character class. The first six are locale aware, all are Unicode aware. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for details.</source>
          <target state="translated">Las siguientes secuencias (excepto &lt;code&gt;\N&lt;/code&gt; ) funcionan dentro o sin una clase de car&amp;aacute;cter. Los primeros seis son compatibles con la configuraci&amp;oacute;n regional, todos son compatibles con Unicode. Consulte &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; y &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4d35a09553da6f576d42c5fa2490f9e35aa7f113" translate="yes" xml:space="preserve">
          <source>The following sequences (except &lt;code&gt;\N&lt;/code&gt;) work within or without a character class. The first six are locale aware, all are Unicode aware. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9540b293755f2d5620dc9acad2cd13cee9e2ef96" translate="yes" xml:space="preserve">
          <source>The following set of functions all apply a given block of code to a list of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6520d28097d378d9470274294d01c67b34c1c70f" translate="yes" xml:space="preserve">
          <source>The following set of functions all reduce a list down to a single value.</source>
          <target state="translated">El siguiente conjunto de funciones reduce una lista a un solo valor.</target>
        </trans-unit>
        <trans-unit id="adf371bb48a28981de1ae9bebf30e1218065293c" translate="yes" xml:space="preserve">
          <source>The following set of functions, all inspired by &lt;a href=&quot;List::Pairwise&quot;&gt;List::Pairwise&lt;/a&gt;, consume an even-sized list of pairs. The pairs may be key/value associations from a hash, or just a list of values. The functions will all preserve the original ordering of the pairs, and will not be confused by multiple pairs having the same &quot;key&quot; value - nor even do they require that the first of each pair be a plain string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f700e59048089f2fca9626afc48c135af0fec0" translate="yes" xml:space="preserve">
          <source>The following set of functions, all inspired by &lt;a href=&quot;http://search.cpan.org/perldoc/List::Pairwise&quot;&gt;List::Pairwise&lt;/a&gt;, consume an even-sized list of pairs. The pairs may be key/value associations from a hash, or just a list of values. The functions will all preserve the original ordering of the pairs, and will not be confused by multiple pairs having the same &quot;key&quot; value - nor even do they require that the first of each pair be a plain string.</source>
          <target state="translated">El siguiente conjunto de funciones, todas inspiradas en &lt;a href=&quot;http://search.cpan.org/perldoc/List::Pairwise&quot;&gt;List :: Pairwise&lt;/a&gt; , consume una lista de pares de tama&amp;ntilde;o uniforme. Los pares pueden ser asociaciones clave / valor de un hash o simplemente una lista de valores. Todas las funciones conservar&amp;aacute;n el orden original de los pares y no ser&amp;aacute;n confundidas por m&amp;uacute;ltiples pares que tengan el mismo valor de &quot;clave&quot;, ni siquiera requieren que el primero de cada par sea una cadena simple.</target>
        </trans-unit>
        <trans-unit id="bf58c9289e75f1b85afc527d37ec88624aafe8e0" translate="yes" xml:space="preserve">
          <source>The following setting are currently preserved: history, breakpoints, actions, debugger options, and the Perl command-line options &lt;b&gt;-w&lt;/b&gt;, &lt;b&gt;-I&lt;/b&gt;, and &lt;b&gt;-e&lt;/b&gt;.</source>
          <target state="translated">Actualmente se conservan las siguientes configuraciones: historial, puntos de interrupci&amp;oacute;n, acciones, opciones del depurador y las opciones de la l&amp;iacute;nea de comandos de Perl &lt;b&gt;-w&lt;/b&gt; , &lt;b&gt;-I&lt;/b&gt; y &lt;b&gt;-e&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="2f9e7f8b992aecf2d6263a37f2844fd220110139" translate="yes" xml:space="preserve">
          <source>The following shows how using negative indexing can make it easier to embed recursive patterns inside of a &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; construct for later use:</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra c&amp;oacute;mo el uso de la indexaci&amp;oacute;n negativa puede facilitar la inserci&amp;oacute;n de patrones recursivos dentro de una construcci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; para su uso posterior:</target>
        </trans-unit>
        <trans-unit id="9b2c5c0c58ad6eab6d4bc5753a307f626a410d1e" translate="yes" xml:space="preserve">
          <source>The following shows how using negative indexing can make it easier to embed recursive patterns inside of a &lt;code&gt;qr//&lt;/code&gt; construct for later use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1462e7325e21b0e3087981f44f0af9a643d8599d" translate="yes" xml:space="preserve">
          <source>The following shows the raw form of a reference to a hash.</source>
          <target state="translated">A continuación se muestra la forma en bruto de una referencia a un hachís.</target>
        </trans-unit>
        <trans-unit id="967f133103c60d10e71b0c793260fc3ac77b40c4" translate="yes" xml:space="preserve">
          <source>The following single statement:</source>
          <target state="translated">La siguiente declaración:</target>
        </trans-unit>
        <trans-unit id="2e884b22f85adb1ade979bfac548d842a78ee34c" translate="yes" xml:space="preserve">
          <source>The following standard quantifiers are recognized:</source>
          <target state="translated">Se reconocen los siguientes cuantificadores estándar:</target>
        </trans-unit>
        <trans-unit id="f4477e5386cec5d30c1ffdf2df262ef158032a46" translate="yes" xml:space="preserve">
          <source>The following structure is used as the &lt;code&gt;pprivate&lt;/code&gt; struct by perl's regex engine. Since it is specific to perl it is only of curiosity value to other engine implementations.</source>
          <target state="translated">La siguiente estructura se utiliza como estructura &lt;code&gt;pprivate&lt;/code&gt; por el motor de expresiones regulares de perl. Dado que es espec&amp;iacute;fico de perl, solo tiene un valor curioso para otras implementaciones de motores.</target>
        </trans-unit>
        <trans-unit id="89e9367ea2c2e9bf561ef1309852d2cf7361c03c" translate="yes" xml:space="preserve">
          <source>The following subroutines are available for general use once this module has been loaded:</source>
          <target state="translated">Las siguientes subrutinas están disponibles para su uso general una vez que este módulo haya sido cargado:</target>
        </trans-unit>
        <trans-unit id="39addea572ccdb746968405797f7ed6ce1f71c76" translate="yes" xml:space="preserve">
          <source>The following subsections describe basic locale categories. Beyond these, some combination categories allow manipulation of more than one basic category at a time. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; for a discussion of these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba25a356d8138d41be0a86a5f5fb1d08b7adedd8" translate="yes" xml:space="preserve">
          <source>The following subsections describe basic locale categories. Beyond these, some combination categories allow manipulation of more than one basic category at a time. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for a discussion of these.</source>
          <target state="translated">Las siguientes subsecciones describen categor&amp;iacute;as b&amp;aacute;sicas de configuraci&amp;oacute;n regional. M&amp;aacute;s all&amp;aacute; de estas, algunas categor&amp;iacute;as de combinaci&amp;oacute;n permiten la manipulaci&amp;oacute;n de m&amp;aacute;s de una categor&amp;iacute;a b&amp;aacute;sica a la vez. Vea &lt;a href=&quot;#ENVIRONMENT&quot;&gt;MEDIO AMBIENTE&lt;/a&gt; para una discusi&amp;oacute;n de estos.</target>
        </trans-unit>
        <trans-unit id="0dc5293bb808b42d229adc04604a47fcedbdefbc" translate="yes" xml:space="preserve">
          <source>The following symbolic constants for SHOWWINDOW are available (but not exported) from the Win32 module: SW_HIDE, SW_SHOWNORMAL, SW_SHOWMINIMIZED, SW_SHOWMAXIMIZED and SW_SHOWNOACTIVATE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00832acd024c7ea26f0714974719f6fe15f3259e" translate="yes" xml:space="preserve">
          <source>The following systems contain with PA-RISC 1.1 chips:</source>
          <target state="translated">Los siguientes sistemas contienen con los chips PA-RISC 1.1:</target>
        </trans-unit>
        <trans-unit id="6b127f4160144d76492f304d4812a08c409c1ee2" translate="yes" xml:space="preserve">
          <source>The following systems contained PA-RISC 1.0 chips:</source>
          <target state="translated">Los siguientes sistemas contenían chips PA-RISC 1.0:</target>
        </trans-unit>
        <trans-unit id="c10d1b335971cff8856d57f7108722f96d961255" translate="yes" xml:space="preserve">
          <source>The following table is a complete listing of characters matched by &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\v&lt;/code&gt; as of Unicode 6.3.</source>
          <target state="translated">La siguiente tabla es una lista completa de caracteres ajustada por &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\h&lt;/code&gt; y &lt;code&gt;\v&lt;/code&gt; como de Unicode 6.3.</target>
        </trans-unit>
        <trans-unit id="b30fe71571a9a6420e717590392f76849f4888c3" translate="yes" xml:space="preserve">
          <source>The following table is from Unicode 3.2.</source>
          <target state="translated">La siguiente tabla es de Unicode 3.2.</target>
        </trans-unit>
        <trans-unit id="08ac1fd17048e5aaff438c3920650ea36fe28bd5" translate="yes" xml:space="preserve">
          <source>The following table shows the result of the division and the remainder, so that the equation above holds true. Some &quot;ordinary&quot; cases are strewn in to show more clearly the reasoning:</source>
          <target state="translated">La siguiente tabla muestra el resultado de la división y el resto,de modo que la ecuación anterior es válida.Algunos casos &quot;ordinarios&quot; están esparcidos para mostrar más claramente el razonamiento:</target>
        </trans-unit>
        <trans-unit id="3985fef65ba4e91f6d3780d0b3e49df58907d0ee" translate="yes" xml:space="preserve">
          <source>The following table summarizes the default layers on UNIX-like and DOS-like platforms and depending on the setting of &lt;code&gt;$ENV{PERLIO}&lt;/code&gt; :</source>
          <target state="translated">La siguiente tabla resume las capas predeterminadas en plataformas tipo UNIX y tipo DOS y dependiendo de la configuraci&amp;oacute;n de &lt;code&gt;$ENV{PERLIO}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="54678528be44b1241458a1af21612f2f6f5f0793" translate="yes" xml:space="preserve">
          <source>The following table summarizes the default layers on UNIX-like and DOS-like platforms and depending on the setting of &lt;code&gt;$ENV{PERLIO}&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72667df1c110c1893cb08480bc1c250b48c0cb32" translate="yes" xml:space="preserve">
          <source>The following tables list the ASCII and Latin 1 ordered sets including the subsets: C0 controls (0..31), ASCII graphics (32..7e), delete (7f), C1 controls (80..9f), and Latin-1 (a.k.a. ISO 8859-1) (a0..ff). In the table names of the Latin 1 extensions to ASCII have been labelled with character names roughly corresponding to</source>
          <target state="translated">Las siguientes tablas muestran los conjuntos ordenados de ASCII y Latin 1,incluyendo los subconjuntos:Controles C0 (0..31),gráficos ASCII (32..7e),borrar (7f),controles C1 (80..9f),y Latin-1 (alias ISO 8859-1)(a0..ff).En los nombres de los cuadros de las extensiones del latín 1 al ASCII se han etiquetado con nombres de caracteres que corresponden aproximadamente a</target>
        </trans-unit>
        <trans-unit id="a992ed291bf59a4f8c8642c8859ba903d7ab1f6d" translate="yes" xml:space="preserve">
          <source>The following tests are still failing for Perl 5.8.1 under QNX 6.2.0:</source>
          <target state="translated">Las siguientes pruebas siguen fallando para el Perl 5.8.1 en QNX 6.2.0:</target>
        </trans-unit>
        <trans-unit id="679b51afc9785d4ea117543e0a14a59d2cf8f5c2" translate="yes" xml:space="preserve">
          <source>The following tests may report errors under QNX4:</source>
          <target state="translated">Las siguientes pruebas pueden reportar errores bajo QNX4:</target>
        </trans-unit>
        <trans-unit id="3fcf934fd04c9d50192b3311166eff55a4dd9606" translate="yes" xml:space="preserve">
          <source>The following three functions copy integer, unsigned integer or double into an SV whose reference is &lt;code&gt;rv&lt;/code&gt; . SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="translated">Las siguientes tres funciones copian entero, entero sin signo o doble en un SV cuya referencia es &lt;code&gt;rv&lt;/code&gt; . SV es bendecido si &lt;code&gt;classname&lt;/code&gt; no es nulo.</target>
        </trans-unit>
        <trans-unit id="9965745aff45be1a5967becd8cef0c33f9e335d4" translate="yes" xml:space="preserve">
          <source>The following three functions copy integer, unsigned integer or double into an SV whose reference is &lt;code&gt;rv&lt;/code&gt;. SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab708869e7683ae4c6749cf27fcceca80c5c3008" translate="yes" xml:space="preserve">
          <source>The following three macros are used to initially allocate memory :</source>
          <target state="translated">Las tres macros siguientes se utilizan para asignar inicialmente la memoria :</target>
        </trans-unit>
        <trans-unit id="2d49873237bd9d666bf47ecb1ff27e7adc795d90" translate="yes" xml:space="preserve">
          <source>The following two calls behave identically:</source>
          <target state="translated">Las siguientes dos llamadas se comportan de forma idéntica:</target>
        </trans-unit>
        <trans-unit id="2886be86660a6181dbf2332b9a39bde42d1bded2" translate="yes" xml:space="preserve">
          <source>The following types of change are NOT acceptable:</source>
          <target state="translated">Los siguientes tipos de cambio NO son aceptables:</target>
        </trans-unit>
        <trans-unit id="000a0a677c5358a2d9618715cbd6c3b2ea88fed1" translate="yes" xml:space="preserve">
          <source>The following types of change may be considered acceptable, as long as they do not also fall into any of the &quot;unacceptable&quot; categories set out below:</source>
          <target state="translated">Los siguientes tipos de cambio pueden considerarse aceptables,siempre y cuando no entren también en ninguna de las categorías &quot;inaceptables&quot; que se exponen a continuación:</target>
        </trans-unit>
        <trans-unit id="502bd00665528041c42b284ac29aaf12f2929946" translate="yes" xml:space="preserve">
          <source>The following values can be set by passing &lt;code&gt;config()&lt;/code&gt; a reference to a hash:</source>
          <target state="translated">Los siguientes valores se pueden establecer pasando &lt;code&gt;config()&lt;/code&gt; una referencia a un hash:</target>
        </trans-unit>
        <trans-unit id="93c42f22f8e09b7cd455ba48443cb114b75d6049" translate="yes" xml:space="preserve">
          <source>The following variables are 'defined' by B::Concise; when they are used in a style, their respective values are plugged into the rendering of each opcode.</source>
          <target state="translated">Las siguientes variables están &quot;definidas&quot; por B::Conciso;cuando se usan en un estilo,sus respectivos valores se conectan a la representación de cada opcode.</target>
        </trans-unit>
        <trans-unit id="706034b4d6cc89451a1849a613921860ab0e5afc" translate="yes" xml:space="preserve">
          <source>The following variables need to be set &lt;b&gt;before&lt;/b&gt; the call to the -&amp;gt;new constructor.</source>
          <target state="translated">Las siguientes variables deben establecerse &lt;b&gt;antes de&lt;/b&gt; la llamada al -&amp;gt; nuevo constructor.</target>
        </trans-unit>
        <trans-unit id="182dfc2e543ebf62f55632eff4a16082cef70bfe" translate="yes" xml:space="preserve">
          <source>The following variables work differently:</source>
          <target state="translated">Las siguientes variables funcionan de manera diferente:</target>
        </trans-unit>
        <trans-unit id="076a97e0e26cc34846172ca450710de9a3595069" translate="yes" xml:space="preserve">
          <source>The following were implemented with</source>
          <target state="translated">Los siguientes fueron implementados con</target>
        </trans-unit>
        <trans-unit id="79ed55c53c285526808c76c6e4fadf315b9d9ae9" translate="yes" xml:space="preserve">
          <source>The following will determine the maximum length of the longest allowable pathname on the filesystem which holds</source>
          <target state="translated">Lo siguiente determinará la longitud máxima de la ruta de acceso más larga permitida en el sistema de archivos que contiene</target>
        </trans-unit>
        <trans-unit id="d57dd39f43cd00fc9fcf08a3e6ef2330c6e56ff0" translate="yes" xml:space="preserve">
          <source>The following will determine the maximum length of the longest allowable pathname on the filesystem which holds &lt;code&gt;/var&lt;/code&gt;.</source>
          <target state="translated">Lo siguiente determinar&amp;aacute; la longitud m&amp;aacute;xima de la ruta de acceso m&amp;aacute;s larga permitida en el sistema de archivos que contiene &lt;code&gt;/var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cbb13ad67db7840db7c7d12b58ddc55ef0ed900" translate="yes" xml:space="preserve">
          <source>The following will get the machine's clock speed.</source>
          <target state="translated">Lo siguiente obtendrá la velocidad del reloj de la máquina.</target>
        </trans-unit>
        <trans-unit id="577c472e2dc0fc4d87aa88d05e48ae7e476e2971" translate="yes" xml:space="preserve">
          <source>The following will probably not do what you expect:</source>
          <target state="translated">Lo siguiente probablemente no hará lo que usted espera:</target>
        </trans-unit>
        <trans-unit id="5c8bd82fe901dea332f23983ad9e29577c0fed4c" translate="yes" xml:space="preserve">
          <source>The following will probably not print what you expect:</source>
          <target state="translated">Lo siguiente probablemente no imprimirá lo que usted espera:</target>
        </trans-unit>
        <trans-unit id="119de64c9692dd9e013f0596370be8f29169b856" translate="yes" xml:space="preserve">
          <source>The following will query the current &lt;code&gt;LC_CTYPE&lt;/code&gt; category. (No second argument means 'query'.)</source>
          <target state="translated">A continuaci&amp;oacute;n, se consultar&amp;aacute; la categor&amp;iacute;a &lt;code&gt;LC_CTYPE&lt;/code&gt; actual . (Ning&amp;uacute;n segundo argumento significa 'consulta').</target>
        </trans-unit>
        <trans-unit id="5966453b4cde6268559966748dc7d8bf8fdd0ec2" translate="yes" xml:space="preserve">
          <source>The following will set the &lt;code&gt;LC_COLLATE&lt;/code&gt; behaviour to Argentinian Spanish. &lt;b&gt;NOTE&lt;/b&gt;: The naming and availability of locales depends on your operating system. Please consult &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for how to find out which locales are available in your system.</source>
          <target state="translated">A continuaci&amp;oacute;n, se establecer&amp;aacute; el comportamiento &lt;code&gt;LC_COLLATE&lt;/code&gt; en espa&amp;ntilde;ol argentino. &lt;b&gt;NOTA&lt;/b&gt; : El nombre y la disponibilidad de las configuraciones regionales dependen de su sistema operativo. Consulte &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; para saber c&amp;oacute;mo averiguar qu&amp;eacute; configuraciones regionales est&amp;aacute;n disponibles en su sistema.</target>
        </trans-unit>
        <trans-unit id="5abcdbfe7d0b6ac6ed18a19f7b6cc537b1839b5d" translate="yes" xml:space="preserve">
          <source>The following will set the &lt;code&gt;LC_CTYPE&lt;/code&gt; behaviour according to the locale environment variables (the second argument &lt;code&gt;&quot;&quot;&lt;/code&gt; ). Please see your system's &lt;code&gt;setlocale(3)&lt;/code&gt; documentation for the locale environment variables' meaning or consult &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">Lo siguiente establecer&amp;aacute; el comportamiento de &lt;code&gt;LC_CTYPE&lt;/code&gt; de acuerdo con las variables de entorno local (el segundo argumento &lt;code&gt;&quot;&quot;&lt;/code&gt; ). Consulte la documentaci&amp;oacute;n de su sistema &lt;code&gt;setlocale(3)&lt;/code&gt; para conocer el significado de las variables de entorno local o consulte &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="216ff7e1b32a193101b360016063f1dbe17b7ec9" translate="yes" xml:space="preserve">
          <source>The following will set the &lt;code&gt;LC_CTYPE&lt;/code&gt; behaviour according to the locale environment variables (the second argument &lt;code&gt;&quot;&quot;&lt;/code&gt;). Please see your system's &lt;code&gt;setlocale(3)&lt;/code&gt; documentation for the locale environment variables' meaning or consult &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbd57a3195c4519fb09fab198f3facf1b32479f" translate="yes" xml:space="preserve">
          <source>The following will set the traditional UNIX system locale behavior (the second argument &lt;code&gt;&quot;C&quot;&lt;/code&gt; ).</source>
          <target state="translated">Lo siguiente establecer&amp;aacute; el comportamiento de la configuraci&amp;oacute;n regional del sistema UNIX tradicional (el segundo argumento &lt;code&gt;&quot;C&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d989bfd17f8da94563bcb6ebfdcbf583a757e87" translate="yes" xml:space="preserve">
          <source>The following will set the traditional UNIX system locale behavior (the second argument &lt;code&gt;&quot;C&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d394598bfc021311cf0f2bb824273bc318b5797a" translate="yes" xml:space="preserve">
          <source>The following would first try to find Math::BigInt::Foo, then Math::BigInt::Bar, and when this also fails, revert to Math::BigInt::Calc:</source>
          <target state="translated">Lo siguiente primero que intentaría encontrar es Matemáticas::BigInt::Foo,luego Matemáticas::BigInt::Bar,y cuando esto también falle,volvería a Matemáticas::BigInt::Calc:</target>
        </trans-unit>
        <trans-unit id="9ce20518f56534bcc1118c0bf986d78eef528c90" translate="yes" xml:space="preserve">
          <source>The following:</source>
          <target state="translated">Lo siguiente:</target>
        </trans-unit>
        <trans-unit id="678f5358c7187caa2da5eff48aaaa0b704fbae9c" translate="yes" xml:space="preserve">
          <source>The followings items are mostly for reference and general Unicode knowledge, Perl doesn't use these constructs internally.</source>
          <target state="translated">Los siguientes artículos son en su mayoría para referencia y conocimiento general de Unicode,Perl no usa estas construcciones internamente.</target>
        </trans-unit>
        <trans-unit id="0e4f79728d04ec0471d6bf96e407b112aa0cabf3" translate="yes" xml:space="preserve">
          <source>The foregoing mechanism for overriding built-in is restricted, quite deliberately, to the package that requests the import. There is a second method that is sometimes applicable when you wish to override a built-in everywhere, without regard to namespace boundaries. This is achieved by importing a sub into the special namespace &lt;code&gt;CORE::GLOBAL::&lt;/code&gt; . Here is an example that quite brazenly replaces the &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; operator with something that understands regular expressions.</source>
          <target state="translated">El mecanismo anterior para anular el integrado est&amp;aacute; restringido, de manera bastante deliberada, al paquete que solicita la importaci&amp;oacute;n. Hay un segundo m&amp;eacute;todo que a veces es aplicable cuando desea anular un elemento integrado en todas partes, sin tener en cuenta los l&amp;iacute;mites del espacio de nombres. Esto se logra importando un sub en el espacio de nombres especial &lt;code&gt;CORE::GLOBAL::&lt;/code&gt; . Aqu&amp;iacute; hay un ejemplo que reemplaza descaradamente al operador &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; con algo que comprende expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="ef8b42b5ef636a805f830b90ca5398d8a3c613f1" translate="yes" xml:space="preserve">
          <source>The foregoing mechanism for overriding built-in is restricted, quite deliberately, to the package that requests the import. There is a second method that is sometimes applicable when you wish to override a built-in everywhere, without regard to namespace boundaries. This is achieved by importing a sub into the special namespace &lt;code&gt;CORE::GLOBAL::&lt;/code&gt;. Here is an example that quite brazenly replaces the &lt;code&gt;glob&lt;/code&gt; operator with something that understands regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85c90a6a43ec9e5bf7a5a11ec769ca8bd55e119" translate="yes" xml:space="preserve">
          <source>The fork() emulation is implemented at the level of the Perl interpreter. What this means in general is that running fork() will actually clone the running interpreter and all its state, and run the cloned interpreter in a separate thread, beginning execution in the new thread just after the point where the fork() was called in the parent. We will refer to the thread that implements this child &quot;process&quot; as the pseudo-process.</source>
          <target state="translated">La emulación de fork()se implementa a nivel del intérprete de Perl.Lo que esto significa en general es que running fork()realmente clonará el intérprete en ejecución y todo su estado,y ejecutará el intérprete clonado en un hilo separado,comenzando la ejecución en el nuevo hilo justo después del punto en que el fork()fue llamado en el padre.Nos referiremos al hilo que implementa este &quot;proceso&quot; hijo como el pseudo-proceso.</target>
        </trans-unit>
        <trans-unit id="e04f09879ad602b86af95f9f6d5d371e6757eda4" translate="yes" xml:space="preserve">
          <source>The fork() emulation may not behave as expected when it is executed in an application which embeds a Perl interpreter and calls Perl APIs that can evaluate bits of Perl code. This stems from the fact that the emulation only has knowledge about the Perl interpreter's own data structures and knows nothing about the containing application's state. For example, any state carried on the application's own call stack is out of reach.</source>
          <target state="translated">Es posible que la emulación de fork()no se comporte como se espera cuando se ejecute en una aplicación que integre un intérprete de Perl y llame a APIs de Perl que puedan evaluar bits de código Perl.Esto se debe a que la emulación sólo tiene conocimiento de las estructuras de datos del propio intérprete Perl y no sabe nada sobre el estado de la aplicación que lo contiene.Por ejemplo,cualquier estado llevado en la propia pila de llamadas de la aplicación está fuera de alcance.</target>
        </trans-unit>
        <trans-unit id="0708717756f902c5ff59069bd45289469d28d91c" translate="yes" xml:space="preserve">
          <source>The fork() emulation will not work entirely correctly when called from within a BEGIN block. The forked copy will run the contents of the BEGIN block, but will not continue parsing the source stream after the BEGIN block. For example, consider the following code:</source>
          <target state="translated">La emulación de fork()no funcionará del todo bien cuando se llame desde un bloque BEGIN.La copia bifurcada ejecutará el contenido del bloque BEGIN,pero no continuará analizando el flujo de origen después del bloque BEGIN.Por ejemplo,considere el siguiente código:</target>
        </trans-unit>
        <trans-unit id="15be1c6ce9042f03bee94913baeb82a3ff565ee8" translate="yes" xml:space="preserve">
          <source>The fork() has to come before the setsid() to ensure you aren't a process group leader; the setsid() will fail if you are. If your system doesn't have the setsid() function, open</source>
          <target state="translated">El fork()tiene que venir antes que el setsid()para asegurar que no eres un líder de grupo de procesos;el setsid()fallará si lo eres.Si tu sistema no tiene la función setsid(),abre</target>
        </trans-unit>
        <trans-unit id="9d31d094967d18a344cd7885a66ada91947ca8a3" translate="yes" xml:space="preserve">
          <source>The forked debugger requires the environment variable &lt;code&gt;TERM&lt;/code&gt; to be &lt;code&gt;xterm&lt;/code&gt; , and the environment variable &lt;code&gt;DISPLAY&lt;/code&gt; to exist. &lt;code&gt;xterm&lt;/code&gt; must be in lower case.</source>
          <target state="translated">El depurador bifurcado requiere que la variable de entorno &lt;code&gt;TERM&lt;/code&gt; sea &lt;code&gt;xterm&lt;/code&gt; y que exista la variable de entorno &lt;code&gt;DISPLAY&lt;/code&gt; . &lt;code&gt;xterm&lt;/code&gt; debe estar en min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="80ddbda74fdf5f4c1a0f7f135f152cdae53aae97" translate="yes" xml:space="preserve">
          <source>The forked debugger requires the environment variable &lt;code&gt;TERM&lt;/code&gt; to be &lt;code&gt;xterm&lt;/code&gt;, and the environment variable &lt;code&gt;DISPLAY&lt;/code&gt; to exist. &lt;code&gt;xterm&lt;/code&gt; must be in lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a1b936aa7515813dbe100195592b08e94ebcb1" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;$x **= $y&lt;/code&gt; is faster than &lt;code&gt;$x = $x ** $y;&lt;/code&gt; , though.</source>
          <target state="translated">La forma &lt;code&gt;$x **= $y&lt;/code&gt; es m&amp;aacute;s r&amp;aacute;pida que &lt;code&gt;$x = $x ** $y;&lt;/code&gt; , aunque.</target>
        </trans-unit>
        <trans-unit id="6d60b9b98398cc175682fc83afb5cb2a3d960481" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;$x **= $y&lt;/code&gt; is faster than &lt;code&gt;$x = $x ** $y;&lt;/code&gt;, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea29df8f31e738f8731934d29265ffb8df1b05f7" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;while/if BLOCK BLOCK&lt;/code&gt;, available in Perl 4, is no longer available. Replace any occurrence of &lt;code&gt;if BLOCK&lt;/code&gt; by &lt;code&gt;if (&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK)&lt;/code&gt; .</source>
          <target state="translated">El formulario &lt;code&gt;while/if BLOCK BLOCK&lt;/code&gt; , disponible en Perl 4, ya no est&amp;aacute; disponible. Reemplace cualquier ocurrencia de &lt;code&gt;if BLOCK&lt;/code&gt; por &lt;code&gt;if (&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ab550c0e5d5dbe7a57264f4fc68930ea27ef872" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;while/if BLOCK BLOCK&lt;/code&gt;, available in Perl 4, is no longer available. Replace any occurrence of &lt;code&gt;if BLOCK&lt;/code&gt; by &lt;code&gt;if (do BLOCK)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d89d2ce75f6dd9a5b033644a202a3e0573863e" translate="yes" xml:space="preserve">
          <source>The formal syntax of a section specification is:</source>
          <target state="translated">La sintaxis formal de una especificación de sección es:</target>
        </trans-unit>
        <trans-unit id="feafac52c2f0bb1c62c34d80f1ccae00a8b7bff5" translate="yes" xml:space="preserve">
          <source>The format is roughly the same as a header section except for the fallback flag: | followed by 0..3. The meaning of the possible values is as follows:</source>
          <target state="translated">El formato es más o menos el mismo que el de una sección de cabecera,excepto por la bandera de reserva:| seguido de 0..3.El significado de los posibles valores es el siguiente:</target>
        </trans-unit>
        <trans-unit id="7de51818a43a9eeabc5f149d791bcd953969e5ec" translate="yes" xml:space="preserve">
          <source>The format is the same as PREREQ_PM.</source>
          <target state="translated">El formato es el mismo que el PREREQ_PM.</target>
        </trans-unit>
        <trans-unit id="4a91025674068746c104cf678dff09a87e09a62d" translate="yes" xml:space="preserve">
          <source>The format is:</source>
          <target state="translated">El formato es:</target>
        </trans-unit>
        <trans-unit id="cab7930ea8f9bb0b5e8551406e705f9d6d55872a" translate="yes" xml:space="preserve">
          <source>The format of the constructor for &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; is shown below</source>
          <target state="translated">El formato del constructor para &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; se muestra a continuaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="2b7f4c6f10c021d585a52efc7c38f1f01339227d" translate="yes" xml:space="preserve">
          <source>The format of the constructor for &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; is shown below</source>
          <target state="translated">El formato del constructor para &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; se muestra a continuaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="e03dc6c86b8958f9b62ec7a6a483ad0e4753decb" translate="yes" xml:space="preserve">
          <source>The format of the constructor for &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; is shown below</source>
          <target state="translated">El formato del constructor para &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; se muestra a continuaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="2cd916282c4e6b36ecc3a6af27b028bb638d27b9" translate="yes" xml:space="preserve">
          <source>The format of the constructor for &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; is shown below</source>
          <target state="translated">El formato del constructor para &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; se muestra a continuaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="96cf103266184d2ab7c512526262f24222f5b3fa" translate="yes" xml:space="preserve">
          <source>The format of the constructor for &lt;code&gt;IO::Compress::Zip&lt;/code&gt; is shown below</source>
          <target state="translated">El formato del constructor para &lt;code&gt;IO::Compress::Zip&lt;/code&gt; se muestra a continuaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="7cddd4e7224584228dd40d8278ce06df26d30be6" translate="yes" xml:space="preserve">
          <source>The format of the constructor for IO::Uncompress::AnyInflate is shown below</source>
          <target state="translated">El formato del constructor para IO::Descomprimir::AnyInflate se muestra a continuación</target>
        </trans-unit>
        <trans-unit id="f335334476f7fdad7a158077eda96d1e77d620ba" translate="yes" xml:space="preserve">
          <source>The format of the constructor for IO::Uncompress::AnyUncompress is shown below</source>
          <target state="translated">El formato del constructor para IO::Descomprimir::CualquierDescomprimir se muestra a continuación</target>
        </trans-unit>
        <trans-unit id="d8f9f10c69da3c0a902ce3d0bf3a43a4fe3d0d99" translate="yes" xml:space="preserve">
          <source>The format of the constructor for IO::Uncompress::Bunzip2 is shown below</source>
          <target state="translated">El formato del constructor para IO::Descomprimir::Bunzip2 se muestra a continuación</target>
        </trans-unit>
        <trans-unit id="1aee64e705754fe9513f8b1c5a275541fbf25126" translate="yes" xml:space="preserve">
          <source>The format of the constructor for IO::Uncompress::Gunzip is shown below</source>
          <target state="translated">El formato del constructor para IO::Descomprimir::Gunzip se muestra a continuación</target>
        </trans-unit>
        <trans-unit id="e0479ea0c00c6dbc0391fab896f56792a7f58abf" translate="yes" xml:space="preserve">
          <source>The format of the constructor for IO::Uncompress::Inflate is shown below</source>
          <target state="translated">El formato del constructor para IO::Descomprimir::Inflar se muestra a continuación</target>
        </trans-unit>
        <trans-unit id="abbcd988c20a7a7af1b1b62b62f212c0f098a642" translate="yes" xml:space="preserve">
          <source>The format of the constructor for IO::Uncompress::RawInflate is shown below</source>
          <target state="translated">El formato del constructor para IO::Descomprimir::RawInflate se muestra a continuación</target>
        </trans-unit>
        <trans-unit id="266217c42524ecb82328e7bc0e8f8cf67f30e119" translate="yes" xml:space="preserve">
          <source>The format of the constructor for IO::Uncompress::Unzip is shown below</source>
          <target state="translated">El formato del constructor para IO::Descomprimir::Descomprimir se muestra a continuación</target>
        </trans-unit>
        <trans-unit id="6ce17f5dc7d5e6006e0ab81d86bb016be0d29f0f" translate="yes" xml:space="preserve">
          <source>The format of this scalar value is &lt;b&gt;not&lt;/b&gt; locale-dependent but built into Perl. For GMT instead of local time use the &lt;a href=&quot;#gmtime&quot;&gt;gmtime&lt;/a&gt; builtin. See also the &lt;code&gt;Time::Local&lt;/code&gt; module (for converting seconds, minutes, hours, and such back to the integer value returned by time()), and the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module's strftime(3) and mktime(3) functions.</source>
          <target state="translated">El formato de este valor escalar &lt;b&gt;no&lt;/b&gt; depende de la configuraci&amp;oacute;n regional, sino que est&amp;aacute; integrado en Perl. Para GMT en lugar de la hora local, use el &lt;a href=&quot;#gmtime&quot;&gt;gmtime&lt;/a&gt; incorporado. Vea tambi&amp;eacute;n el m&amp;oacute;dulo &lt;code&gt;Time::Local&lt;/code&gt; (para convertir segundos, minutos, horas, etc. al valor entero devuelto por time ()), y las funciones strftime (3) y mktime (3) del m&amp;oacute;dulo &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c7d4e187b4ee40d7ac4cdd3dd9c17ff06ab82de" translate="yes" xml:space="preserve">
          <source>The format of this scalar value is &lt;b&gt;not&lt;/b&gt; locale-dependent but built into Perl. For GMT instead of local time use the &lt;a href=&quot;#gmtime-EXPR&quot;&gt;&lt;code&gt;gmtime&lt;/code&gt;&lt;/a&gt; builtin. See also the &lt;a href=&quot;Time::Local&quot;&gt;&lt;code&gt;Time::Local&lt;/code&gt;&lt;/a&gt; module (for converting seconds, minutes, hours, and such back to the integer value returned by &lt;a href=&quot;#time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;), and the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module's &lt;a href=&quot;posix#strftime&quot;&gt;&lt;code&gt;strftime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;posix#mktime&quot;&gt;&lt;code&gt;mktime&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2da41af1cf680b6887d63dd253c6e01471391c6" translate="yes" xml:space="preserve">
          <source>The format of this scalar value is &lt;b&gt;not&lt;/b&gt; locale-dependent but built into Perl. For GMT instead of local time use the &lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt; builtin. See also the &lt;code&gt;Time::Local&lt;/code&gt; module (for converting seconds, minutes, hours, and such back to the integer value returned by time()), and the &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt; module's strftime(3) and mktime(3) functions.</source>
          <target state="translated">El formato de este valor escalar &lt;b&gt;no&lt;/b&gt; depende de la configuraci&amp;oacute;n regional, sino que est&amp;aacute; integrado en Perl. Para GMT en lugar de la hora local, use el &lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt; incorporado. Vea tambi&amp;eacute;n el m&amp;oacute;dulo &lt;code&gt;Time::Local&lt;/code&gt; (para convertir segundos, minutos, horas, etc. al valor entero devuelto por time ()), y las funciones strftime (3) y mktime (3) del m&amp;oacute;dulo &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7fb9dcbdf87a920318a01eb480379e8f7c7c3de2" translate="yes" xml:space="preserve">
          <source>The format specifier detection is not complete printf-syntax detection, but it should catch most common cases.</source>
          <target state="translated">La detección del especificador de formato no es una detección completa de la sintaxis de la impresión,pero debería atrapar la mayoría de los casos comunes.</target>
        </trans-unit>
        <trans-unit id="256ecd9d04a27fc1ec23dd2c77863e67bcf5ad16" translate="yes" xml:space="preserve">
          <source>The formats supported are</source>
          <target state="translated">Los formatos admitidos son</target>
        </trans-unit>
        <trans-unit id="0577a9efbbb4297e7d5cf847fb8e2a9cc4cdfef4" translate="yes" xml:space="preserve">
          <source>The formats supported are:</source>
          <target state="translated">Los formatos admitidos son:</target>
        </trans-unit>
        <trans-unit id="f7762b6266ff516b0fab73ac7af6d025adc1f538" translate="yes" xml:space="preserve">
          <source>The formats that can convert characters to numbers and vice versa will be different from their ASCII counterparts when executed on an EBCDIC platform. Examples include:</source>
          <target state="translated">Los formatos que pueden convertir caracteres en números y viceversa serán diferentes de sus contrapartes ASCII cuando se ejecuten en una plataforma EBCDIC.Los ejemplos incluyen:</target>
        </trans-unit>
        <trans-unit id="5f27c48c4d04704c74b0b5d7d716d5ed43b40c07" translate="yes" xml:space="preserve">
          <source>The former default in which Perl would always use a loose interpretation of UTF-8 has now been overruled:</source>
          <target state="translated">El antiguo defecto en el que Perl siempre usaba una interpretación libre del UTF-8 ha sido ahora anulado:</target>
        </trans-unit>
        <trans-unit id="bacc21ee4934a43e7cffae5409abb3139d8d7444" translate="yes" xml:space="preserve">
          <source>The former is defined to imply Unicode handling; and the latter indicates a Unicode locale, hence a Unicode interpretation of all strings within it.</source>
          <target state="translated">La primera se define para implicar el manejo de Unicode;y la segunda indica un local de Unicode,por lo tanto una interpretación de Unicode de todas las cadenas dentro de él.</target>
        </trans-unit>
        <trans-unit id="abc8578e218b1958e7644bd43d9d008d1386b618" translate="yes" xml:space="preserve">
          <source>The formerly undocumented STRICT argument sets strictness: if true 'use strict;' is used, otherwise it uses 'no strict;'. &lt;b&gt;Note&lt;/b&gt;: if STRICT is omitted 'no strict;' is the default.</source>
          <target state="translated">El argumento STRICT, anteriormente indocumentado, establece el rigor: si es verdadero 'use estricto;' se usa, de lo contrario usa 'no estricto;'. &lt;b&gt;Nota&lt;/b&gt; : si ESTRICTO se omite 'no estricto'; es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="18a3596eca3e6e803312bc68b427ff1f1eeb325a" translate="yes" xml:space="preserve">
          <source>The forms &lt;code&gt;(?'&lt;i&gt;NAME&lt;/i&gt;'&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt; and &lt;code&gt;(?&amp;lt;&lt;i&gt;NAME&lt;/i&gt;&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt; are equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c48d78ca541fb734f8a681b44e6478f12be1be" translate="yes" xml:space="preserve">
          <source>The forms &lt;code&gt;(?'NAME'pattern)&lt;/code&gt; and &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt; are equivalent.</source>
          <target state="translated">Las formas &lt;code&gt;(?'NAME'pattern)&lt;/code&gt; y &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt; son equivalentes.</target>
        </trans-unit>
        <trans-unit id="3165776bcfd76f28e0c24205090accd64be6f1e3" translate="yes" xml:space="preserve">
          <source>The formula is from the Red Dragon book (reformulated to use the data available) and is documented at &lt;a href=&quot;http://www.strchr.com/hash_functions&quot;&gt;http://www.strchr.com/hash_functions&lt;/a&gt;</source>
          <target state="translated">La f&amp;oacute;rmula es del libro Red Dragon (reformulada para usar los datos disponibles) y est&amp;aacute; documentada en &lt;a href=&quot;http://www.strchr.com/hash_functions&quot;&gt;http://www.strchr.com/hash_functions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd2b2fc4bf8da6b1c4382cce2ab2653fdf87adcd" translate="yes" xml:space="preserve">
          <source>The formula is from the Red Dragon book (reformulated to use the data available) and is documented at &lt;a href=&quot;https://www.strchr.com/hash_functions&quot;&gt;http://www.strchr.com/hash_functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea332d524efecd12f52e313e0715e604daa7345f" translate="yes" xml:space="preserve">
          <source>The four &lt;code&gt;CPAN::*&lt;/code&gt; Classes: Author, Bundle, Module, Distribution</source>
          <target state="translated">Los cuatro &lt;code&gt;CPAN::*&lt;/code&gt; Clases: Autor, Paquete, M&amp;oacute;dulo, Distribuci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="4ebe0eef114ce361363114266a5b30d9fc215c2f" translate="yes" xml:space="preserve">
          <source>The four &lt;code&gt;filter_*&lt;/code&gt; methods shown above are available in all the DBM modules that ship with Perl, namely DB_File, GDBM_File, NDBM_File, ODBM_File and SDBM_File.</source>
          <target state="translated">Los cuatro m&amp;eacute;todos &lt;code&gt;filter_*&lt;/code&gt; que se muestran arriba est&amp;aacute;n disponibles en todos los m&amp;oacute;dulos DBM que se env&amp;iacute;an con Perl, a saber, DB_File, GDBM_File, NDBM_File, ODBM_File y SDBM_File.</target>
        </trans-unit>
        <trans-unit id="a87cd62b5e4a547576560e5204e87547d60f9cfe" translate="yes" xml:space="preserve">
          <source>The four CPAN::* Classes: Author, Bundle, Module, Distribution</source>
          <target state="translated">Las cuatro clases de CPAN:Autor,Paquete,Módulo,Distribución</target>
        </trans-unit>
        <trans-unit id="fe1fb546f60704c6d1d156b3f6fadf776528094a" translate="yes" xml:space="preserve">
          <source>The four element types -- scalar, array, hash, and class -- are represented by strings -- &lt;code&gt;'$'&lt;/code&gt; , &lt;code&gt;'@'&lt;/code&gt; , &lt;code&gt;'%'&lt;/code&gt; , and a class name -- optionally preceded by a &lt;code&gt;'*'&lt;/code&gt; .</source>
          <target state="translated">Los cuatro tipos de elementos - escalar, matriz, hash y clase - est&amp;aacute;n representados por cadenas - &lt;code&gt;'$'&lt;/code&gt; , &lt;code&gt;'@'&lt;/code&gt; , &lt;code&gt;'%'&lt;/code&gt; , y un nombre de clase - opcionalmente precedido por un &lt;code&gt;'*'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92b64884f8f61e4bda03f0b1b810258bc7d0365f" translate="yes" xml:space="preserve">
          <source>The four element types -- scalar, array, hash, and class -- are represented by strings -- &lt;code&gt;'$'&lt;/code&gt;, &lt;code&gt;'@'&lt;/code&gt;, &lt;code&gt;'%'&lt;/code&gt;, and a class name -- optionally preceded by a &lt;code&gt;'*'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010d48814dc6637936a58a714f4a5b8ac2c0e5b8" translate="yes" xml:space="preserve">
          <source>The fourth (index [3]) element (&lt;code&gt;$default&lt;/code&gt; ) in the list returned for this format is 0.</source>
          <target state="translated">El cuarto elemento (&amp;iacute;ndice [3]) ( &lt;code&gt;$default&lt;/code&gt; ) en la lista devuelta para este formato es 0.</target>
        </trans-unit>
        <trans-unit id="2e817fac52edc4c5e0caee985a6afb86c7862868" translate="yes" xml:space="preserve">
          <source>The fourth (index [3]) element (&lt;code&gt;$default&lt;/code&gt; ) in the list returned for this format is &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; .</source>
          <target state="translated">El cuarto elemento (&amp;iacute;ndice [3]) ( &lt;code&gt;$default&lt;/code&gt; ) en la lista devuelta para este formato es &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d015fffd23c241225267b70dd79dfdb0ced38265" translate="yes" xml:space="preserve">
          <source>The fourth (index [3]) element (&lt;code&gt;$default&lt;/code&gt; ) in the list returned for this format is the empty string.</source>
          <target state="translated">El cuarto elemento (&amp;iacute;ndice [3]) ( &lt;code&gt;$default&lt;/code&gt; ) en la lista devuelta para este formato es la cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="dbf8c5de03271df9c0ea8fd5c41bcc753a3e2e78" translate="yes" xml:space="preserve">
          <source>The fourth (index [3]) element (&lt;code&gt;$default&lt;/code&gt;) in the list returned for this format is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a31746958b0c54f45a9490ade3495335e57ef5" translate="yes" xml:space="preserve">
          <source>The fourth (index [3]) element (&lt;code&gt;$default&lt;/code&gt;) in the list returned for this format is &lt;code&gt;&quot;NaN&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ce6cb48f2a76c182227b4de66778e078fb3c5c" translate="yes" xml:space="preserve">
          <source>The fourth (index [3]) element (&lt;code&gt;$default&lt;/code&gt;) in the list returned for this format is the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee5dc54dca610abdb335a6016c33fad310b745e" translate="yes" xml:space="preserve">
          <source>The fourth argument,</source>
          <target state="translated">El cuarto argumento,</target>
        </trans-unit>
        <trans-unit id="d46f45156438266dbc454cfdd5c8500aa9cf2dd2" translate="yes" xml:space="preserve">
          <source>The fourth operation is the same as the logical not of the third operation and is specified the same way as the third with the addition of a caret character &lt;code&gt;^&lt;/code&gt; at the beginning of the test string just inside the open square bracket.</source>
          <target state="translated">La cuarta operaci&amp;oacute;n es la misma que el no l&amp;oacute;gico de la tercera operaci&amp;oacute;n y se especifica de la misma manera que la tercera con la adici&amp;oacute;n de un car&amp;aacute;cter de intercalaci&amp;oacute;n &lt;code&gt;^&lt;/code&gt; al comienzo de la cadena de prueba justo dentro del corchete abierto.</target>
        </trans-unit>
        <trans-unit id="bc43b69f9d12ff24c27cb6addf7ed86730581d51" translate="yes" xml:space="preserve">
          <source>The fourth through ninth highest priorities are to look in the corresponding grandparent, great-grandparent and great-great-grandparent directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517bbe0d839ce687e5bde7b590dd68865b524c37" translate="yes" xml:space="preserve">
          <source>The friends locked into &lt;code&gt;M$&lt;/code&gt; world would appreciate the fact that this executable runs under DOS, Win0.3*, Win0.95 and WinNT with an appropriate extender. See &lt;a href=&quot;#Other-OSes&quot;&gt;&quot;Other OSes&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67d6a9240f3ec0e157e3e0a648b8e35a0a7ab23" translate="yes" xml:space="preserve">
          <source>The friends locked into &lt;code&gt;M$&lt;/code&gt; world would appreciate the fact that this executable runs under DOS, Win0.3*, Win0.95 and WinNT with an appropriate extender. See &lt;a href=&quot;#Other-OSes&quot;&gt;Other OSes&lt;/a&gt;.</source>
          <target state="translated">Los amigos encerrados en el mundo de &lt;code&gt;M$&lt;/code&gt; apreciar&amp;iacute;an el hecho de que este ejecutable se ejecute en DOS, Win0.3 *, Win0.95 y WinNT con un extensor apropiado. Consulte &lt;a href=&quot;#Other-OSes&quot;&gt;Otros sistemas operativos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="043867751e64107d60b95a69e8badcc29251fb84" translate="yes" xml:space="preserve">
          <source>The full circle is 2</source>
          <target state="translated">El círculo completo es 2</target>
        </trans-unit>
        <trans-unit id="d29a10ef910506015d780ee21ef968e5b95cf038" translate="yes" xml:space="preserve">
          <source>The full definition for this field is given in the &lt;a href=&quot;#Prereq-Spec&quot;&gt;&quot;Prereq Spec&quot;&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37765aa0855e93aba1c1cfea3d54b9c2c469bca1" translate="yes" xml:space="preserve">
          <source>The full documentation for &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; provides a thorough reference to this function, beyond the best-practice basics covered here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66fe9d715897deb9cd4770d030e58e58ff7af5a" translate="yes" xml:space="preserve">
          <source>The full list of alternatives is:</source>
          <target state="translated">La lista completa de alternativas es:</target>
        </trans-unit>
        <trans-unit id="e2b044fa3549d52ee2f4f118ecc7f64b424bcc29" translate="yes" xml:space="preserve">
          <source>The full set of contributors always includes the folks mentioned in &lt;a href=&quot;IO::Stringy#CHANGE-LOG&quot;&gt;&quot;CHANGE LOG&quot; in IO::Stringy&lt;/a&gt;. But just the same, special thanks to the following individuals for their invaluable contributions (if I've forgotten or misspelled your name, please email me!):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baccc1ffc22a33efb39b1687159250f28dc423fa" translate="yes" xml:space="preserve">
          <source>The full text of the license can be found in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a153a5f23194fa493b49953e70a37ba58abfd1" translate="yes" xml:space="preserve">
          <source>The full text of the license can be found in the LICENSE file included with this module.</source>
          <target state="translated">El texto completo de la licencia se encuentra en el archivo LICENCIA incluido en este módulo.</target>
        </trans-unit>
        <trans-unit id="c54557502ca6f64ebd0cff3c9dbc11ca01487c1f" translate="yes" xml:space="preserve">
          <source>The full version number of this package, such as 5.6.1 (or 5_6_1). This combines revision, patchlevel, and subversion to get the full version number, including any possible subversions. This is suitable for use as a directory name, and hence is filesystem dependent.</source>
          <target state="translated">El número de la versión completa de este paquete,como 5.6.1 (o 5_6_1).Esto combina revisión,nivel de parche y subversión para obtener el número de versión completo,incluyendo cualquier subversión posible.Esto es adecuado para su uso como nombre de directorio,y por lo tanto depende del sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="5bc944c87864f3d28f9f02ec1b783a4a9aacca33" translate="yes" xml:space="preserve">
          <source>The fully qualified method name that was called is available in the &lt;code&gt;$AUTOLOAD&lt;/code&gt; package global for your class. Since this is a global, if you want to refer to do it without a package name prefix under &lt;code&gt;strict
'vars'&lt;/code&gt; , you need to declare it.</source>
          <target state="translated">El nombre del m&amp;eacute;todo totalmente calificado que se llam&amp;oacute; est&amp;aacute; disponible en el paquete &lt;code&gt;$AUTOLOAD&lt;/code&gt; global para su clase. Dado que se trata de un global, si desea hacer referencia a hacerlo sin un prefijo de nombre de paquete bajo &lt;code&gt;strict 'vars'&lt;/code&gt; , debe declararlo.</target>
        </trans-unit>
        <trans-unit id="46868bf85da4047d1fd48569f16bb118135bfc66" translate="yes" xml:space="preserve">
          <source>The fully qualified method name that was called is available in the &lt;code&gt;$AUTOLOAD&lt;/code&gt; package global for your class. Since this is a global, if you want to refer to do it without a package name prefix under &lt;code&gt;strict 'vars'&lt;/code&gt;, you need to declare it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c7ff8a6b152356b1c3b87a4fa36cf4002b4367" translate="yes" xml:space="preserve">
          <source>The function</source>
          <target state="translated">La función</target>
        </trans-unit>
        <trans-unit id="d66346d1633c0f93998400fd3d2d89ef6dd2f1f1" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;utf8#Utility-functions&quot;&gt;&lt;code&gt;utf8::utf8_upgrade()&lt;/code&gt;&lt;/a&gt; can be explicitly used to permanently (unless a subsequent &lt;code&gt;utf8::utf8_downgrade()&lt;/code&gt; is called) cause a string to be treated as Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1263ec90688607ca3bc3ec7bfb0fe38e6efd4c6" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;utf8#Utility-functions&quot;&gt;utf8::utf8_upgrade() &lt;/a&gt; can be explicitly used to permanently (unless a subsequent &lt;code&gt;utf8::utf8_downgrade()&lt;/code&gt; is called) cause a string to be treated as Unicode.</source>
          <target state="translated">La funci&amp;oacute;n &lt;a href=&quot;utf8#Utility-functions&quot;&gt;utf8 :: utf8_upgrade () se&lt;/a&gt; puede usar expl&amp;iacute;citamente para permanentemente (a menos que se &lt;code&gt;utf8::utf8_downgrade()&lt;/code&gt; a un utf8 :: utf8_downgrade () posterior ) hacer que una cadena se trate como Unicode.</target>
        </trans-unit>
        <trans-unit id="0110ffd54f081ff34d7394303d2f5fa900a42f45" translate="yes" xml:space="preserve">
          <source>The function &lt;b&gt;pod_find&lt;/b&gt; searches for POD documents in a given set of files and/or directories. It returns a hash with the file names as keys and the POD name as value. The POD name is derived from the file name and its position in the directory tree.</source>
          <target state="translated">La funci&amp;oacute;n &lt;b&gt;pod_find&lt;/b&gt; busca documentos POD en un conjunto dado de archivos y / o directorios. Devuelve un hash con los nombres de archivo como claves y el nombre de POD como valor. El nombre de POD se deriva del nombre del archivo y su posici&amp;oacute;n en el &amp;aacute;rbol de directorios.</target>
        </trans-unit>
        <trans-unit id="48cfcd3ef7cb24df407c69f7ab8cfb221b006395" translate="yes" xml:space="preserve">
          <source>The function &lt;b&gt;simplify_name&lt;/b&gt; is equivalent to &lt;b&gt;basename&lt;/b&gt;, but also strips Perl-like extensions (.pm, .pl, .pod) and extensions like</source>
          <target state="translated">La funci&amp;oacute;n &lt;b&gt;simplify_name&lt;/b&gt; es equivalente a &lt;b&gt;basename&lt;/b&gt; , pero tambi&amp;eacute;n elimina las extensiones similares a Perl (.pm, .pl, .pod) y extensiones como</target>
        </trans-unit>
        <trans-unit id="977e84004739e29fbaa341106fb1e524db41e10d" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; has been deprecated, so code has been included to display a warning message whenever the calling module has (at least) the &quot;deprecated&quot; warnings category enabled. Something like this, say.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; ha quedado obsoleta, por lo que se ha incluido c&amp;oacute;digo para mostrar un mensaje de advertencia siempre que el m&amp;oacute;dulo de llamada tenga (al menos) habilitada la categor&amp;iacute;a de advertencias &quot;obsoleta&quot;. Algo como esto, digamos.</target>
        </trans-unit>
        <trans-unit id="509f0d861d7a99d6a484f51f2a9188a5713a5b35" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;filter_read&lt;/code&gt; takes two forms:</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;filter_read&lt;/code&gt; tiene dos formas:</target>
        </trans-unit>
        <trans-unit id="5c27f77e8d833b52d6b699513cb75e12cfb41e38" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;hostname()&lt;/code&gt; in the &lt;a href=&quot;Sys::Hostname&quot;&gt;Sys::Hostname&lt;/a&gt; module has always been documented to be called with no arguments. Historically it has not enforced this, and has actually accepted and ignored any arguments. As a result, some users have got the mistaken impression that an argument does something useful. To avoid these bugs, the function is being made strict. Passing arguments was deprecated in Perl 5.28 and became fatal in Perl 5.32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2b0d9ecb1c14fb1e59a3fd0192de217a46316b" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;open&lt;/code&gt; has been deprecated, so code has been included to display a warning message whenever the calling module has (at least) the &quot;deprecated&quot; warnings category enabled. Something like this, say.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd4d38aee306d70f6097ade577ca383b52839ef" translate="yes" xml:space="preserve">
          <source>The function I18N::LangTags::List::name(...) is not exported.</source>
          <target state="translated">La función I18N::LangTags::List::name(...)no se exporta.</target>
        </trans-unit>
        <trans-unit id="5583893e9ddd698662f18f40b85c6a69394dd032" translate="yes" xml:space="preserve">
          <source>The function accepts a list of directories to be created. Its behaviour may be tuned by an optional hashref appearing as the last parameter on the call.</source>
          <target state="translated">La función acepta una lista de directorios a crear.Su comportamiento puede ser ajustado por un hashref opcional que aparece como último parámetro de la llamada.</target>
        </trans-unit>
        <trans-unit id="1ccfd3fbf49c44a49b4970d5b4592c2961b06827" translate="yes" xml:space="preserve">
          <source>The function accepts a list of directories to be removed. (In point of fact, it will also accept filesystem entries which are not directories, such as regular files and symlinks. But, as its name suggests, its intent is to remove trees rather than individual files.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c25ffe36bf18f7f44be765fa3c82188ddbc3925" translate="yes" xml:space="preserve">
          <source>The function accepts a list of directories to be removed. Its behaviour may be tuned by an optional hashref appearing as the last parameter on the call.</source>
          <target state="translated">La función acepta una lista de directorios para ser eliminados.Su comportamiento puede ser ajustado por un hashref opcional que aparece como último parámetro de la llamada.</target>
        </trans-unit>
        <trans-unit id="3ef41ec1c0dbf85f3bcd0cef90f173dc6b18dec6" translate="yes" xml:space="preserve">
          <source>The function call &lt;code&gt;shell&lt;/code&gt; takes two optional arguments: one the prompt, the second the default initial command line (the latter only works if a real ReadLine interface module is installed).</source>
          <target state="translated">El &lt;code&gt;shell&lt;/code&gt; de llamada de funci&amp;oacute;n toma dos argumentos opcionales: uno el indicador, el segundo la l&amp;iacute;nea de comando inicial predeterminada (este &amp;uacute;ltimo solo funciona si est&amp;aacute; instalado un m&amp;oacute;dulo de interfaz ReadLine real).</target>
        </trans-unit>
        <trans-unit id="f64674aceb9b0908fa74a739ca7fbade2ac2ee6e" translate="yes" xml:space="preserve">
          <source>The function declaration must be visible at compile time. The prototype affects only interpretation of new-style calls to the function, where new-style is defined as not using the &lt;code&gt;&amp;amp;&lt;/code&gt; character. In other words, if you call it like a built-in function, then it behaves like a built-in function. If you call it like an old-fashioned subroutine, then it behaves like an old-fashioned subroutine. It naturally falls out from this rule that prototypes have no influence on subroutine references like &lt;code&gt;\&amp;amp;foo&lt;/code&gt; or on indirect subroutine calls like &lt;code&gt;&amp;amp;{$subref}&lt;/code&gt; or &lt;code&gt;$subref-&amp;gt;()&lt;/code&gt; .</source>
          <target state="translated">La declaraci&amp;oacute;n de funci&amp;oacute;n debe estar visible en tiempo de compilaci&amp;oacute;n. El prototipo afecta solo a la interpretaci&amp;oacute;n de las llamadas de estilo nuevo a la funci&amp;oacute;n, donde el estilo nuevo se define como no usar el car&amp;aacute;cter &lt;code&gt;&amp;amp;&lt;/code&gt; . En otras palabras, si lo llama como una funci&amp;oacute;n incorporada, entonces se comporta como una funci&amp;oacute;n incorporada. Si lo llama como una subrutina pasada de moda, entonces se comporta como una subrutina pasada de moda. Naturalmente, se desprende de esta regla que los prototipos no tienen influencia en las referencias de subrutinas como &lt;code&gt;\&amp;amp;foo&lt;/code&gt; o en las llamadas indirectas de subrutinas como &lt;code&gt;&amp;amp;{$subref}&lt;/code&gt; o &lt;code&gt;$subref-&amp;gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a54076d47c791003b92c3959d64c01e6039e0bd6" translate="yes" xml:space="preserve">
          <source>The function declaration must be visible at compile time. The prototype affects only interpretation of new-style calls to the function, where new-style is defined as not using the &lt;code&gt;&amp;amp;&lt;/code&gt; character. In other words, if you call it like a built-in function, then it behaves like a built-in function. If you call it like an old-fashioned subroutine, then it behaves like an old-fashioned subroutine. It naturally falls out from this rule that prototypes have no influence on subroutine references like &lt;code&gt;\&amp;amp;foo&lt;/code&gt; or on indirect subroutine calls like &lt;code&gt;&amp;amp;{$subref}&lt;/code&gt; or &lt;code&gt;$subref-&amp;gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a4f089237c0dd0b61fdd70575a337b465e2308" translate="yes" xml:space="preserve">
          <source>The function extracts the entry of the specified terminal type</source>
          <target state="translated">La función extrae la entrada del tipo de terminal especificado</target>
        </trans-unit>
        <trans-unit id="dbacf36c4d8a578101fa6d12242c4841f7204b60" translate="yes" xml:space="preserve">
          <source>The function interface uses attribute strings to describe the colors and text attributes to assign to text. The recognized non-color attributes are clear, reset, bold, dark, faint, italic, underline, underscore, blink, reverse, and concealed. Clear and reset (reset to default attributes), dark and faint (dim and saturated), and underline and underscore are equivalent, so use whichever is the most intuitive to you.</source>
          <target state="translated">La interfaz de funciones utiliza cadenas de atributos para describir los colores y los atributos de texto que se asignan al texto.Los atributos no de color reconocidos son claro,reseteado,negrita,oscuro,tenue,cursiva,subrayado,subrayado,parpadeo,reverso y oculto.Claro y restablecido (restablecimiento de los atributos predeterminados),oscuro y tenue (tenue y saturado),y subrayado y subrayado son equivalentes,así que utilice el que le resulte más intuitivo.</target>
        </trans-unit>
        <trans-unit id="6f3bb6ac191764523c9d934c739e063f3ecbe7de" translate="yes" xml:space="preserve">
          <source>The function is called from the tokeniser, whenever a possible keyword is seen. &lt;code&gt;keyword_ptr&lt;/code&gt; points at the word in the parser's input buffer, and &lt;code&gt;keyword_len&lt;/code&gt; gives its length; it is not null-terminated. The function is expected to examine the word, and possibly other state such as &lt;a href=&quot;perlvar#%25%5EH&quot;&gt;%^H&lt;/a&gt;, to decide whether it wants to handle it as an extended keyword. If it does not, the function should return &lt;code&gt;KEYWORD_PLUGIN_DECLINE&lt;/code&gt;, and the normal parser process will continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55694c97e9ceb329d9698a51681bd4944db4ba6e" translate="yes" xml:space="preserve">
          <source>The function is called from the tokeniser, whenever a possible keyword is seen. &lt;code&gt;keyword_ptr&lt;/code&gt; points at the word in the parser's input buffer, and &lt;code&gt;keyword_len&lt;/code&gt; gives its length; it is not null-terminated. The function is expected to examine the word, and possibly other state such as &lt;a href=&quot;perlvar#%25%5eH&quot;&gt;%^H&lt;/a&gt;, to decide whether it wants to handle it as an extended keyword. If it does not, the function should return &lt;code&gt;KEYWORD_PLUGIN_DECLINE&lt;/code&gt; , and the normal parser process will continue.</source>
          <target state="translated">La funci&amp;oacute;n se llama desde el tokenizador, siempre que se ve una posible palabra clave. &lt;code&gt;keyword_ptr&lt;/code&gt; apunta a la palabra en el b&amp;uacute;fer de entrada del analizador, y &lt;code&gt;keyword_len&lt;/code&gt; da su longitud; no tiene terminaci&amp;oacute;n nula. Se espera que la funci&amp;oacute;n examine la palabra, y posiblemente otro estado como &lt;a href=&quot;perlvar#%25%5eH&quot;&gt;% ^ H&lt;/a&gt; , para decidir si quiere manejarlo como una palabra clave extendida. Si no es as&amp;iacute;, la funci&amp;oacute;n deber&amp;iacute;a devolver &lt;code&gt;KEYWORD_PLUGIN_DECLINE&lt;/code&gt; y el proceso de analizador normal continuar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="9306c5da74b3095d5bd155bcdf129a71eee56339" translate="yes" xml:space="preserve">
          <source>The function looks in the symbol table of &lt;code&gt;$package&lt;/code&gt; for the typeglob for &lt;code&gt;$referent&lt;/code&gt; , which is a reference to a variable or subroutine (SCALAR, ARRAY, HASH, or CODE). If it finds the typeglob, it returns it. Otherwise, it returns undef. Note that &lt;code&gt;findsym&lt;/code&gt; memoizes the typeglobs it has previously successfully found, so subsequent calls with the same arguments should be much faster.</source>
          <target state="translated">La funci&amp;oacute;n busca en la tabla de s&amp;iacute;mbolos de &lt;code&gt;$package&lt;/code&gt; el typeglob para &lt;code&gt;$referent&lt;/code&gt; , que es una referencia a una variable o subrutina (SCALAR, ARRAY, HASH o CODE). Si encuentra el typeglob, lo devuelve. De lo contrario, devuelve undef. Tenga en cuenta que &lt;code&gt;findsym&lt;/code&gt; memoriza los typeglobs que ha encontrado anteriormente con &amp;eacute;xito, por lo que las llamadas posteriores con los mismos argumentos deber&amp;iacute;an ser mucho m&amp;aacute;s r&amp;aacute;pidas.</target>
        </trans-unit>
        <trans-unit id="4cae2e767271065d7f78fa3e9c794bcd99ab2963" translate="yes" xml:space="preserve">
          <source>The function looks in the symbol table of &lt;code&gt;$package&lt;/code&gt; for the typeglob for &lt;code&gt;$referent&lt;/code&gt;, which is a reference to a variable or subroutine (SCALAR, ARRAY, HASH, or CODE). If it finds the typeglob, it returns it. Otherwise, it returns undef. Note that &lt;code&gt;findsym&lt;/code&gt; memoizes the typeglobs it has previously successfully found, so subsequent calls with the same arguments should be much faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228b62ac93f3c97adf4846ab7a229490257f21f2" translate="yes" xml:space="preserve">
          <source>The function name and the return type must be placed on separate lines and should be flush left-adjusted.</source>
          <target state="translated">El nombre de la función y el tipo de retorno deben colocarse en líneas separadas y deben ajustarse a la izquierda.</target>
        </trans-unit>
        <trans-unit id="497e4c985232c356046790edf3b0a4494724ab06" translate="yes" xml:space="preserve">
          <source>The function optionally takes a number of named options specified as &lt;code&gt;-Name =&amp;gt; value&lt;/code&gt; pairs. This allows individual options to be tailored without having to specify them all in the parameter list.</source>
          <target state="translated">La funci&amp;oacute;n toma opcionalmente una serie de opciones con nombre especificadas como pares &lt;code&gt;-Name =&amp;gt; value&lt;/code&gt; . Esto permite personalizar las opciones individuales sin tener que especificarlas todas en la lista de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="c334e8eba917e7f07e2743dd2e109fa8bab331b7" translate="yes" xml:space="preserve">
          <source>The function optionally takes a number of named options specified as &lt;code&gt;-Name=&amp;gt;value&lt;/code&gt; pairs. This allows individual options to be tailored without having to specify them all in the parameter list.</source>
          <target state="translated">La funci&amp;oacute;n toma opcionalmente un n&amp;uacute;mero de opciones nombradas especificadas como pares &lt;code&gt;-Name=&amp;gt;value&lt;/code&gt; . Esto permite personalizar las opciones individuales sin tener que especificarlas todas en la lista de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="24c3d21a118e57cb0a792d18dd4aca22a45547ff" translate="yes" xml:space="preserve">
          <source>The function optionally takes a number of named options specified as &lt;code&gt;Name =&amp;gt; value&lt;/code&gt; pairs. This allows individual options to be tailored without having to specify them all in the parameter list.</source>
          <target state="translated">La funci&amp;oacute;n toma opcionalmente una serie de opciones nombradas especificadas como pares &lt;code&gt;Name =&amp;gt; value&lt;/code&gt; . Esto permite personalizar las opciones individuales sin tener que especificarlas todas en la lista de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="91502bdfeb749a40030a89a237be0405bf938f7b" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;NULL&lt;/code&gt; if there is no occurrence of &lt;code&gt;little&lt;/code&gt; within &lt;code&gt;big&lt;/code&gt;. If &lt;code&gt;little&lt;/code&gt; is the empty string, &lt;code&gt;big&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd7c1c2cc7bcbc10e2084326d92993267a12ffd" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;TRUE&lt;/code&gt; if the input string is empty, or if the corresponding C function returns &lt;code&gt;TRUE&lt;/code&gt; for every byte in the string.</source>
          <target state="translated">La funci&amp;oacute;n devuelve &lt;code&gt;TRUE&lt;/code&gt; si la cadena de entrada est&amp;aacute; vac&amp;iacute;a o si la funci&amp;oacute;n C correspondiente devuelve &lt;code&gt;TRUE&lt;/code&gt; para cada byte de la cadena.</target>
        </trans-unit>
        <trans-unit id="d8c35a5a4f8d066f0d21fe352b171cb7a12a9b6f" translate="yes" xml:space="preserve">
          <source>The function returns a packed string representing the requested socket option, or &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; on error, with the reason for the error placed in &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt;. Just what is in the packed string depends on LEVEL and OPTNAME; consult &lt;a href=&quot;http://man.he.net/man2/getsockopt&quot;&gt;getsockopt(2)&lt;/a&gt; for details. A common case is that the option is an integer, in which case the result is a packed integer, which you can decode using &lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;i&lt;/code&gt; (or &lt;code&gt;I&lt;/code&gt;) format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bb210a9d041841ab7e7d3f647d6ee1d366da33" translate="yes" xml:space="preserve">
          <source>The function returns a packed string representing the requested socket option, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error, with the reason for the error placed in &lt;code&gt;$!&lt;/code&gt; . Just what is in the packed string depends on LEVEL and OPTNAME; consult getsockopt(2) for details. A common case is that the option is an integer, in which case the result is a packed integer, which you can decode using &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;i&lt;/code&gt; (or &lt;code&gt;I&lt;/code&gt; ) format.</source>
          <target state="translated">La funci&amp;oacute;n devuelve una cadena empaquetada que representa la opci&amp;oacute;n de socket solicitada, o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso de error, con el motivo del error colocado en &lt;code&gt;$!&lt;/code&gt; . Solo lo que hay en la cadena empaquetada depende de LEVEL y OPTNAME; consulte getsockopt (2) para obtener m&amp;aacute;s detalles. Un caso com&amp;uacute;n es que la opci&amp;oacute;n sea un n&amp;uacute;mero entero, en cuyo caso el resultado es un entero empaquetado, que puede decodificar usando &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; con el formato &lt;code&gt;i&lt;/code&gt; (o &lt;code&gt;I&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f3bdd5d171fe014406932479dff47095d4169b23" translate="yes" xml:space="preserve">
          <source>The function returns a packed string representing the requested socket option, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error, with the reason for the error placed in &lt;code&gt;$!&lt;/code&gt; . Just what is in the packed string depends on LEVEL and OPTNAME; consult getsockopt(2) for details. A common case is that the option is an integer, in which case the result is a packed integer, which you can decode using &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;i&lt;/code&gt; (or &lt;code&gt;I&lt;/code&gt; ) format.</source>
          <target state="translated">La funci&amp;oacute;n devuelve una cadena empaquetada que representa la opci&amp;oacute;n de socket solicitada, o &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso de error, con el motivo del error colocado en &lt;code&gt;$!&lt;/code&gt; . Solo lo que hay en la cadena empaquetada depende de LEVEL y OPTNAME; consulte getsockopt (2) para obtener m&amp;aacute;s detalles. Un caso com&amp;uacute;n es que la opci&amp;oacute;n sea un n&amp;uacute;mero entero, en cuyo caso el resultado es un entero empaquetado, que puede decodificar usando &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; con el formato &lt;code&gt;i&lt;/code&gt; (o &lt;code&gt;I&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e9c09e2f85dbb39e869f16bb5dde4b83ed886b56" translate="yes" xml:space="preserve">
          <source>The function returns a pointer to the constructed subroutine. If the sub is anonymous then ownership of one counted reference to the subroutine is transferred to the caller. If the sub is named then the caller does not get ownership of a reference. In most such cases, where the sub has a non-phase name, the sub will be alive at the point it is returned by virtue of being contained in the glob that names it. A phase-named subroutine will usually be alive by virtue of the reference owned by the phase's automatic run queue. A &lt;code&gt;BEGIN&lt;/code&gt; subroutine may have been destroyed already by the time this function returns, but currently bugs occur in that case before the caller gets control. It is the caller's responsibility to ensure that it knows which of these situations applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9011070fbeb03f4af4eed5e55fde28d9eee21f2e" translate="yes" xml:space="preserve">
          <source>The function returns a pointer to the constructed subroutine. If the sub is anonymous then ownership of one counted reference to the subroutine is transferred to the caller. If the sub is named then the caller does not get ownership of a reference. In most such cases, where the sub has a non-phase name, the sub will be alive at the point it is returned by virtue of being contained in the glob that names it. A phase-named subroutine will usually be alive by virtue of the reference owned by the phase's automatic run queue. But a &lt;code&gt;BEGIN&lt;/code&gt; subroutine, having already been executed, will quite likely have been destroyed already by the time this function returns, making it erroneous for the caller to make any use of the returned pointer. It is the caller's responsibility to ensure that it knows which of these situations applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c416a15314ff142b876195908cf3e0998cacb0b" translate="yes" xml:space="preserve">
          <source>The function returns a true value if the file was written successfully. Otherwise it returns a false value.</source>
          <target state="translated">La función devuelve un valor real si el archivo se ha escrito con éxito.En caso contrario,devuelve un valor falso.</target>
        </trans-unit>
        <trans-unit id="96868ec2f844938f055b367738ce668b3149cb6e" translate="yes" xml:space="preserve">
          <source>The function returns the list of directories actually created during the call; in scalar context the number of directories created.</source>
          <target state="translated">La función devuelve la lista de directorios realmente creados durante la llamada;en contexto escalar el número de directorios creados.</target>
        </trans-unit>
        <trans-unit id="74e8f0415f195a35d73e8c99a877efa398a5fbfc" translate="yes" xml:space="preserve">
          <source>The function returns the menu id of the selected push button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30520da28728f4bcd1c4695681153ff43915f3de" translate="yes" xml:space="preserve">
          <source>The function returns the number of files successfully deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b560ee48a1c4113ae4a064c91e40e3ebfc92205" translate="yes" xml:space="preserve">
          <source>The function should be defined like this:</source>
          <target state="translated">La función debe definirse así:</target>
        </trans-unit>
        <trans-unit id="af1dfdcedd7b6d95c274f658ea41922443e248ed" translate="yes" xml:space="preserve">
          <source>The function should return a reference to an array containing the parent classes in order. The names of the classes should be the result of calling &lt;code&gt;HvENAME()&lt;/code&gt; on the stash. In those cases where &lt;code&gt;HvENAME()&lt;/code&gt; returns null, &lt;code&gt;HvNAME()&lt;/code&gt; should be used instead.</source>
          <target state="translated">La funci&amp;oacute;n debe devolver una referencia a una matriz que contiene las clases principales en orden. Los nombres de las clases deben ser el resultado de llamar a &lt;code&gt;HvENAME()&lt;/code&gt; en el alijo. En aquellos casos en los que &lt;code&gt;HvENAME()&lt;/code&gt; devuelve nulo, &lt;code&gt;HvNAME()&lt;/code&gt; debe usarse en su lugar.</target>
        </trans-unit>
        <trans-unit id="df40ff756f018edab3521eb313090bdefa039e32" translate="yes" xml:space="preserve">
          <source>The function takes as first argument a key to test against, and as second argument any form of criteria that are also allowed by the &lt;code&gt;allow&lt;/code&gt; key in the template.</source>
          <target state="translated">La funci&amp;oacute;n toma como primer argumento una clave para contra prueba, y como segundo argumento cualquier forma de criterios que tambi&amp;eacute;n est&amp;aacute;n autorizados por la &lt;code&gt;allow&lt;/code&gt; clave en la plantilla.</target>
        </trans-unit>
        <trans-unit id="f1378c8817cc1e710b51660b130f3baf8dd96ee6" translate="yes" xml:space="preserve">
          <source>The function takes one optional parameter, a reference to a hash. The contents of the hash allow the deflation interface to be tailored.</source>
          <target state="translated">La función toma un parámetro opcional,una referencia a un hash.El contenido del hash permite adaptar la interfaz de desinflado.</target>
        </trans-unit>
        <trans-unit id="deea19e69043d11a7254610da5a869b1f9452180" translate="yes" xml:space="preserve">
          <source>The function that handles the &lt;code&gt;allow&lt;/code&gt; key in the template is also available for independent use.</source>
          <target state="translated">La funci&amp;oacute;n que maneja la tecla &lt;code&gt;allow&lt;/code&gt; en la plantilla tambi&amp;eacute;n est&amp;aacute; disponible para uso independiente.</target>
        </trans-unit>
        <trans-unit id="efcf392cc09771ca25c0652559e59fca2e7a7c50" translate="yes" xml:space="preserve">
          <source>The function visit() scans the SV arenas list, and calls a specified function for each SV it finds which is still live - ie which has an SvTYPE other than all 1's, and a non-zero SvREFCNT. visit() is used by the following functions (specified as [function that calls visit()] / [function called by visit() for each SV]):</source>
          <target state="translated">La función visit()escanea la lista de arenas de SV,y llama a una función especificada por cada SV que encuentra que todavía está vivo-es decir,que tiene un SvTYPE distinto de todos los 1,y un SvREFCNT distinto de cero.visit()es utilizada por las siguientes funciones (especificadas como [función que llama a visit()]/[función llamada por visit()para cada SV]):</target>
        </trans-unit>
        <trans-unit id="8032aad3c9c6371a7328397cdc751815bd8235bd" translate="yes" xml:space="preserve">
          <source>The function will by default replace characters that can't be decoded by &quot;\x{FFFD}&quot;, the Unicode replacement character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19570f411b75d35372886127cc2a69449d9a4b6b" translate="yes" xml:space="preserve">
          <source>The function will croak with &quot;Wide character in subroutine entry&quot; if $bytes contains characters with code above 255. The base64 encoding is only defined for single-byte characters. Use the Encode module to select the byte encoding you want.</source>
          <target state="translated">La función graznará con &quot;Carácter ancho en la entrada de la subrutina&quot; si $bytes contiene caracteres con código superior a 255.La codificación base64 sólo está definida para caracteres de un solo byte.Utilice el módulo de codificación para seleccionar la codificación de bytes que desee.</target>
        </trans-unit>
        <trans-unit id="b2a6bb6e55b46f9d735e2cbaab0b636efd193e6e" translate="yes" xml:space="preserve">
          <source>The function,</source>
          <target state="translated">La función,</target>
        </trans-unit>
        <trans-unit id="56c2336779d3eb8fad6f134e1b3afd4055cf95fc" translate="yes" xml:space="preserve">
          <source>The function, &lt;code&gt;filter_add&lt;/code&gt; , actually installs the filter. It takes one parameter which should be a reference. The kind of reference used will dictate which of the two filter types will be used.</source>
          <target state="translated">La funci&amp;oacute;n, &lt;code&gt;filter_add&lt;/code&gt; , realmente instala el filtro. Toma un par&amp;aacute;metro que deber&amp;iacute;a ser una referencia. El tipo de referencia que se utilice determinar&amp;aacute; cu&amp;aacute;l de los dos tipos de filtro se utilizar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="953ee510269653d7250cb2c022a3b5e06178a57a" translate="yes" xml:space="preserve">
          <source>The function, &lt;code&gt;filter_add&lt;/code&gt;, actually installs the filter. It takes one parameter which should be a reference. The kind of reference used will dictate which of the two filter types will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8317ff780b8620fb08e8151dfdbf3a52d2d611" translate="yes" xml:space="preserve">
          <source>The function, &lt;code&gt;filter_del&lt;/code&gt; , is used to disable the current filter. It does not affect the running of the filter. All it does is tell Perl not to call filter any more.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;filter_del&lt;/code&gt; se utiliza para deshabilitar el filtro actual. No afecta el funcionamiento del filtro. Todo lo que hace es decirle a Perl que no vuelva a llamar al filtro.</target>
        </trans-unit>
        <trans-unit id="5390ee2005fc8c59e72212b433101c76ad550f15" translate="yes" xml:space="preserve">
          <source>The function, &lt;code&gt;filter_del&lt;/code&gt;, is used to disable the current filter. It does not affect the running of the filter. All it does is tell Perl not to call filter any more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85467ff647b7ea9bd91bc8fa0103d9ae4aadb9f" translate="yes" xml:space="preserve">
          <source>The functional interface is simply importable functions with the same name as the algorithm. The functions take the message as argument and return the digest. Example:</source>
          <target state="translated">La interfaz funcional es simplemente funciones importables con el mismo nombre del algoritmo.Las funciones toman el mensaje como argumento y devuelven el resumen.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="bf5b597fcbc2815c78fabe6a0ba67f38e49a2b3d" translate="yes" xml:space="preserve">
          <source>The functional interface needs Perl5.005 or better.</source>
          <target state="translated">La interfaz funcional necesita Perl5.005 o mejor.</target>
        </trans-unit>
        <trans-unit id="4bdd9d3e5903e6dd1f8e73f664d773008086b093" translate="yes" xml:space="preserve">
          <source>The functions</source>
          <target state="translated">Las funciones</target>
        </trans-unit>
        <trans-unit id="856ff8ad4698542f2d294ec36a49315416bf6990" translate="yes" xml:space="preserve">
          <source>The functions &lt;a href=&quot;http://man.he.net/man3/recvmsg&quot;&gt;recvmsg(3)&lt;/a&gt;, &lt;a href=&quot;http://man.he.net/man3/sendmsg&quot;&gt;sendmsg(3)&lt;/a&gt;, and &lt;a href=&quot;http://man.he.net/man3/socketpair&quot;&gt;socketpair(3)&lt;/a&gt; are not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afae1770d87c27f0936f76c113b3734ec61024b" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;accept()&lt;/code&gt;, &lt;code&gt;open()&lt;/code&gt;, &lt;code&gt;pipe()&lt;/code&gt;, &lt;code&gt;readpipe()&lt;/code&gt; (as well as the related &lt;code&gt;qx&lt;/code&gt; and &lt;code&gt;`STRING`&lt;/code&gt; operators), &lt;code&gt;socket()&lt;/code&gt;, &lt;code&gt;socketpair()&lt;/code&gt;, and &lt;code&gt;sysopen()&lt;/code&gt; are affected by the lexical value of this variable. The implicit &lt;a href=&quot;#ARGV&quot;&gt;&quot;ARGV&quot;&lt;/a&gt; handle opened by &lt;code&gt;readline()&lt;/code&gt; (or the related &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; operators) on passed filenames is also affected (but not if it opens &lt;code&gt;STDIN&lt;/code&gt;). If this variable is not set, these functions will set the default layers as described in &lt;a href=&quot;perlio#Defaults-and-how-to-override-them&quot;&gt;&quot;Defaults and how to override them&quot; in PerlIO&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ff03911b440c28f50688f4c9ab7665ef4a1c34" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;cond_wait()&lt;/code&gt; and &lt;code&gt;cond_signal()&lt;/code&gt; can be used in conjunction with locks to notify co-operating threads that a resource has become available. They are very similar in use to the functions found in &lt;code&gt;pthreads&lt;/code&gt; . However for most purposes, queues are simpler to use and more intuitive. See &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt; for more details.</source>
          <target state="translated">Las funciones &lt;code&gt;cond_wait()&lt;/code&gt; y &lt;code&gt;cond_signal()&lt;/code&gt; se pueden usar junto con bloqueos para notificar a los subprocesos cooperantes que un recurso est&amp;aacute; disponible. Son muy similares en uso a las funciones que se encuentran en &lt;code&gt;pthreads&lt;/code&gt; . Sin embargo, para la mayor&amp;iacute;a de los prop&amp;oacute;sitos, las colas son m&amp;aacute;s f&amp;aacute;ciles de usar y m&amp;aacute;s intuitivas. Ver &lt;a href=&quot;threads/shared&quot;&gt;hilos :: compartido&lt;/a&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="fdd336a11c2e07577ac0c13e1a2f33bcdcefa052" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;cond_wait()&lt;/code&gt; and &lt;code&gt;cond_signal()&lt;/code&gt; can be used in conjunction with locks to notify co-operating threads that a resource has become available. They are very similar in use to the functions found in &lt;code&gt;pthreads&lt;/code&gt;. However for most purposes, queues are simpler to use and more intuitive. See &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b4904f96b85af2bf6cf4659323a42dfc8558db" translate="yes" xml:space="preserve">
          <source>The functions and attributes are accessed via the &quot;tab&quot; (for table) member of &lt;code&gt;PerlIOl&lt;/code&gt; . The functions (methods of the layer &quot;class&quot;) are fixed, and are defined by the &lt;code&gt;PerlIO_funcs&lt;/code&gt; type. They are broadly the same as the public &lt;code&gt;PerlIO_xxxxx&lt;/code&gt; functions:</source>
          <target state="translated">Se accede a las funciones y atributos a trav&amp;eacute;s de la &quot;pesta&amp;ntilde;a&quot; (para tabla) miembro de &lt;code&gt;PerlIOl&lt;/code&gt; . Las funciones (m&amp;eacute;todos de la capa &quot;clase&quot;) son fijas y est&amp;aacute;n definidas por el tipo &lt;code&gt;PerlIO_funcs&lt;/code&gt; . Son &lt;code&gt;PerlIO_xxxxx&lt;/code&gt; las mismas que las funciones p&amp;uacute;blicas de PerlIO_xxxxx :</target>
        </trans-unit>
        <trans-unit id="da42f49a5d951340d77c54e3152012268bbac221" translate="yes" xml:space="preserve">
          <source>The functions and attributes are accessed via the &quot;tab&quot; (for table) member of &lt;code&gt;PerlIOl&lt;/code&gt;. The functions (methods of the layer &quot;class&quot;) are fixed, and are defined by the &lt;code&gt;PerlIO_funcs&lt;/code&gt; type. They are broadly the same as the public &lt;code&gt;PerlIO_xxxxx&lt;/code&gt; functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641685ab6429ec4eade93850f03823bb632c2710" translate="yes" xml:space="preserve">
          <source>The functions and attributes of the &quot;layer class&quot;.</source>
          <target state="translated">Las funciones y atributos de la &quot;clase de capa&quot;.</target>
        </trans-unit>
        <trans-unit id="04a02ab73237464478de303a6921e51a12145bbd" translate="yes" xml:space="preserve">
          <source>The functions are modeled on those in</source>
          <target state="translated">Las funciones están modeladas sobre las de</target>
        </trans-unit>
        <trans-unit id="58e04ab7b2e7ccd7568d030e0e66721438c5c1d0" translate="yes" xml:space="preserve">
          <source>The functions in this module work as well as can be expected when used on earlier Unicode versions. But, obviously, they use the available data from that Unicode version. For example, if the Unicode version predates the definition of the script property (Unicode 3.1), then any function that deals with scripts is going to return &lt;code&gt;undef&lt;/code&gt; for the script portion of the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529009dfac752f5a2536ceedfad4fb1e6f70b3ed" translate="yes" xml:space="preserve">
          <source>The functions in this section can serve as terms in an expression. They fall into two major categories: list operators and named unary operators. These differ in their precedence relationship with a following comma. (See the precedence table in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.) List operators take more than one argument, while unary operators can never take more than one argument. Thus, a comma terminates the argument of a unary operator, but merely separates the arguments of a list operator. A unary operator generally provides scalar context to its argument, while a list operator may provide either scalar or list contexts for its arguments. If it does both, scalar arguments come first and list argument follow, and there can only ever be one such list argument. For instance, &lt;a href=&quot;#splice-ARRAY%2COFFSET%2CLENGTH%2CLIST&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt; has three scalar arguments followed by a list, whereas &lt;a href=&quot;#gethostbyname-NAME&quot;&gt;&lt;code&gt;gethostbyname&lt;/code&gt;&lt;/a&gt; has four scalar arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8f908f8a6f8cbbe7a5d22657a37b7e7e24b80c" translate="yes" xml:space="preserve">
          <source>The functions in this section can serve as terms in an expression. They fall into two major categories: list operators and named unary operators. These differ in their precedence relationship with a following comma. (See the precedence table in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.) List operators take more than one argument, while unary operators can never take more than one argument. Thus, a comma terminates the argument of a unary operator, but merely separates the arguments of a list operator. A unary operator generally provides scalar context to its argument, while a list operator may provide either scalar or list contexts for its arguments. If it does both, scalar arguments come first and list argument follow, and there can only ever be one such list argument. For instance, splice() has three scalar arguments followed by a list, whereas gethostbyname() has four scalar arguments.</source>
          <target state="translated">Las funciones de esta secci&amp;oacute;n pueden servir como t&amp;eacute;rminos en una expresi&amp;oacute;n. Se dividen en dos categor&amp;iacute;as principales: operadores de lista y operadores unarios con nombre. Estos difieren en su relaci&amp;oacute;n de precedencia con una coma siguiente. (Ver la tabla de precedencia en &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.) Los operadores de lista toman m&amp;aacute;s de un argumento, mientras que los operadores unarios nunca pueden tomar m&amp;aacute;s de un argumento. As&amp;iacute;, una coma termina el argumento de un operador unario, pero simplemente separa los argumentos de un operador de lista. Un operador unario generalmente proporciona un contexto escalar a su argumento, mientras que un operador de lista puede proporcionar contextos escalares o de lista para sus argumentos. Si hace ambas cosas, los argumentos escalares van primero y el argumento de lista sigue, y solo puede haber uno de esos argumentos de lista. Por ejemplo, splice () tiene tres argumentos escalares seguidos de una lista, mientras que gethostbyname () tiene cuatro argumentos escalares.</target>
        </trans-unit>
        <trans-unit id="db44e2533a11b8e3bb17098404db4eb4f6f38bb9" translate="yes" xml:space="preserve">
          <source>The functions not currently implemented include:</source>
          <target state="translated">Entre las funciones que actualmente no se llevan a cabo figuran:</target>
        </trans-unit>
        <trans-unit id="c91d15f478afdf6edcd21180f278e6de93659c87" translate="yes" xml:space="preserve">
          <source>The functions returns the number of files successfully deleted.</source>
          <target state="translated">La función devuelve el número de archivos eliminados con éxito.</target>
        </trans-unit>
        <trans-unit id="f6bd4366287856a0db88fc6b5b6a7d5f623cdf54" translate="yes" xml:space="preserve">
          <source>The functions that create ops, which have names like &lt;code&gt;newUNOP&lt;/code&gt; and &lt;code&gt;newBINOP&lt;/code&gt;, call a &quot;check&quot; function associated with each op type, before returning the op. The check functions can mangle the op as they see fit, and even replace it with an entirely new one. These functions are defined in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2856f3e4382d9f450458c2b6360a3461fef80e3f" translate="yes" xml:space="preserve">
          <source>The functions were deprecated in Perl 5.20, and removed in Perl 5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c725eeff7e9a331143580354d26ee52b59f30b" translate="yes" xml:space="preserve">
          <source>The gb2312han ordering includes 5 code points in private use area (E2D8..E2DC), that can't utilize &lt;code&gt;weightGB2312()&lt;/code&gt; for collation. For them, use &lt;code&gt;entry&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c6db468e398f8e94d67db3b6a47dc8ea853c6f" translate="yes" xml:space="preserve">
          <source>The gcc option &lt;code&gt;-Wdeclaration-after-statement&lt;/code&gt; scans for such problems (by default on starting from Perl 5.9.4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f00447c143aee7d5d5fe37917ea4e13f05bb95" translate="yes" xml:space="preserve">
          <source>The gcc option &lt;code&gt;-Wdeclaration-after-statements&lt;/code&gt; scans for such problems (by default on starting from Perl 5.9.4).</source>
          <target state="translated">La opci&amp;oacute;n gcc &lt;code&gt;-Wdeclaration-after-statements&lt;/code&gt; busca estos problemas (por defecto al comenzar desde Perl 5.9.4).</target>
        </trans-unit>
        <trans-unit id="5ee3a23159a200898de862e7d5879870227625eb" translate="yes" xml:space="preserve">
          <source>The gcc option &lt;code&gt;-Wendif-labels&lt;/code&gt; warns about the bad variant (by default on starting from Perl 5.9.4).</source>
          <target state="translated">La opci&amp;oacute;n gcc &lt;code&gt;-Wendif-labels&lt;/code&gt; advierte sobre la variante incorrecta (por defecto al comenzar desde Perl 5.9.4).</target>
        </trans-unit>
        <trans-unit id="4d2d0d644a6adc7963542dd47a318273c10c274d" translate="yes" xml:space="preserve">
          <source>The gcc option &lt;code&gt;-Wformat&lt;/code&gt; scans for such problems.</source>
          <target state="translated">La opci&amp;oacute;n gcc &lt;code&gt;-Wformat&lt;/code&gt; busca estos problemas.</target>
        </trans-unit>
        <trans-unit id="e2a941e3cdebbe41caee4c09c99b319335c33a51" translate="yes" xml:space="preserve">
          <source>The general answer is to use a CPAN module such as &lt;a href=&quot;Switch::Plain&quot;&gt;Switch::Plain&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af02f4de16ebe9571db6e3223402235667685fe3" translate="yes" xml:space="preserve">
          <source>The general format of this hash ref is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02921462c864d8e6c2a3ae360252bde69882166" translate="yes" xml:space="preserve">
          <source>The general structure of this module was written by Paul Evans &amp;lt;leonerd@leonerd.org.uk&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3325d45be5f27fbb2d4ff677421100e7fd8bb0" translate="yes" xml:space="preserve">
          <source>The generated C++ code will call &lt;code&gt;new&lt;/code&gt; .</source>
          <target state="translated">El c&amp;oacute;digo C ++ generado llamar&amp;aacute; a &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c6b61d936feb406f72b49e0c15b50e08be699f5" translate="yes" xml:space="preserve">
          <source>The generated C++ code will call &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40f7df8e8a0ceca1fdf5c8cc98299f799cdbb11" translate="yes" xml:space="preserve">
          <source>The generated Makefile enables the user of the extension to invoke</source>
          <target state="translated">El Makefile generado permite al usuario de la extensión invocar</target>
        </trans-unit>
        <trans-unit id="ddf93e71778e5593e96208d788b15d2297c9188f" translate="yes" xml:space="preserve">
          <source>The generated singletons are kept around from instantiation until the end of the shell session. &amp;lt;plugin_list&amp;gt; can be reconfigured at any time at run time. While the cpan shell is running, it checks all activated plugins at each of the 8 reference points listed above and runs the respective method if it is implemented for that object. The method is called with the active CPAN::Distribution object passed in as an argument.</source>
          <target state="translated">Los singleton generados se mantienen desde la instanciaci&amp;oacute;n hasta el final de la sesi&amp;oacute;n de shell. &amp;lt;plugin_list&amp;gt; se puede volver a configurar en cualquier momento durante el tiempo de ejecuci&amp;oacute;n. Mientras se ejecuta el shell cpan, verifica todos los complementos activados en cada uno de los 8 puntos de referencia enumerados anteriormente y ejecuta el m&amp;eacute;todo respectivo si est&amp;aacute; implementado para ese objeto. El m&amp;eacute;todo se llama con el objeto CPAN :: Distribution activo pasado como argumento.</target>
        </trans-unit>
        <trans-unit id="04c9e6d408a35a88cbae891becfacfd45984120c" translate="yes" xml:space="preserve">
          <source>The generated trailer for a CODE: section ensures that the number of return values Perl will see is either 0 or 1 (depending on the &lt;code&gt;void&lt;/code&gt; ness of the return value of the C function, and heuristics mentioned in &lt;a href=&quot;#The-RETVAL-Variable&quot;&gt;The RETVAL Variable&lt;/a&gt;). The trailer generated for a PPCODE: section is based on the number of return values and on the number of times &lt;code&gt;SP&lt;/code&gt; was updated by &lt;code&gt;[X]PUSH*()&lt;/code&gt; macros.</source>
          <target state="translated">El tr&amp;aacute;iler generado para una secci&amp;oacute;n C&amp;Oacute;DIGO: asegura que el n&amp;uacute;mero de valores de retorno que ver&amp;aacute; Perl sea 0 o 1 (dependiendo del &lt;code&gt;void&lt;/code&gt; del valor de retorno de la funci&amp;oacute;n C y de la heur&amp;iacute;stica mencionada en &lt;a href=&quot;#The-RETVAL-Variable&quot;&gt;La variable RETVAL&lt;/a&gt; ). El avance generado para una secci&amp;oacute;n PPCODE: se basa en el n&amp;uacute;mero de valores devueltos y en el n&amp;uacute;mero de veces que &lt;code&gt;SP&lt;/code&gt; se actualiz&amp;oacute; mediante macros &lt;code&gt;[X]PUSH*()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7153904b949c21e4b5069542df02f96114b91ebc" translate="yes" xml:space="preserve">
          <source>The generated trailer for a CODE: section ensures that the number of return values Perl will see is either 0 or 1 (depending on the &lt;code&gt;void&lt;/code&gt;ness of the return value of the C function, and heuristics mentioned in &lt;a href=&quot;#The-RETVAL-Variable&quot;&gt;&quot;The RETVAL Variable&quot;&lt;/a&gt;). The trailer generated for a PPCODE: section is based on the number of return values and on the number of times &lt;code&gt;SP&lt;/code&gt; was updated by &lt;code&gt;[X]PUSH*()&lt;/code&gt; macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ff48f0e128b0a15571a8a0caa4b35598c3501a" translate="yes" xml:space="preserve">
          <source>The generation number of the name at offset &lt;code&gt;po&lt;/code&gt; in the current compiling pad (lvalue).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147459e5132af1acc303407a971ff312e870e58e" translate="yes" xml:space="preserve">
          <source>The generation number of the name at offset &lt;code&gt;po&lt;/code&gt; in the current compiling pad (lvalue). Note that &lt;code&gt;SvUVX&lt;/code&gt; is hijacked for this purpose.</source>
          <target state="translated">El n&amp;uacute;mero de generaci&amp;oacute;n del nombre en offset &lt;code&gt;po&lt;/code&gt; en la plataforma de compilaci&amp;oacute;n actual (lvalue). Tenga en cuenta que &lt;code&gt;SvUVX&lt;/code&gt; est&amp;aacute; secuestrado para este prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="65beebb121c6a44259be26715db186e4a704f7cf" translate="yes" xml:space="preserve">
          <source>The generic flag bits are a hybrid of &lt;code&gt;O_XXXXX&lt;/code&gt; style flags deduced from the mode string passed to &lt;code&gt;PerlIO_open()&lt;/code&gt; , and state bits for typical buffer layers.</source>
          <target state="translated">Los bits de bandera gen&amp;eacute;ricos son un h&amp;iacute;brido de banderas de estilo &lt;code&gt;O_XXXXX&lt;/code&gt; deducidas de la cadena de modo pasada a &lt;code&gt;PerlIO_open()&lt;/code&gt; , y bits de estado para capas de b&amp;uacute;fer t&amp;iacute;picas.</target>
        </trans-unit>
        <trans-unit id="7439e63d8439f40f7da5afff81864b98adf5ed8e" translate="yes" xml:space="preserve">
          <source>The generic flag bits are a hybrid of &lt;code&gt;O_XXXXX&lt;/code&gt; style flags deduced from the mode string passed to &lt;code&gt;PerlIO_open()&lt;/code&gt;, and state bits for typical buffer layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9373f74aec3f2b814c36a72b32de7c1df8cce7e8" translate="yes" xml:space="preserve">
          <source>The generic names by which a &lt;b&gt;subroutine&lt;/b&gt; knows its &lt;b&gt;arguments&lt;/b&gt;. In many languages, formal arguments are always given individual names; in Perl, the formal arguments are just the elements of an array. The formal arguments to a Perl program are &lt;code&gt;$ARGV[0]&lt;/code&gt; , &lt;code&gt;$ARGV[1]&lt;/code&gt; , and so on. Similarly, the formal arguments to a Perl subroutine are &lt;code&gt;$_[0]&lt;/code&gt; , &lt;code&gt;$_[1]&lt;/code&gt; , and so on. You may give the arguments individual names by assigning the values to a &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; list. See also &lt;b&gt;actual arguments&lt;/b&gt;.</source>
          <target state="translated">Los nombres gen&amp;eacute;ricos por los que una &lt;b&gt;subrutina&lt;/b&gt; conoce sus &lt;b&gt;argumentos&lt;/b&gt; . En muchos idiomas, los argumentos formales siempre reciben nombres individuales; en Perl, los argumentos formales son solo los elementos de una matriz. Los argumentos formales de un programa Perl son &lt;code&gt;$ARGV[0]&lt;/code&gt; , &lt;code&gt;$ARGV[1]&lt;/code&gt; , etc. De manera similar, los argumentos formales de una subrutina de Perl son &lt;code&gt;$_[0]&lt;/code&gt; , &lt;code&gt;$_[1]&lt;/code&gt; , etc. Puede dar nombres individuales a los argumentos asignando los valores a &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; lista. Ver tambi&amp;eacute;n &lt;b&gt;argumentos reales&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="f91ba75da27279a516590191fc599f042d12a39a" translate="yes" xml:space="preserve">
          <source>The generic names by which a &lt;b&gt;subroutine&lt;/b&gt; knows its &lt;b&gt;arguments&lt;/b&gt;. In many languages, formal arguments are always given individual names; in Perl, the formal arguments are just the elements of an array. The formal arguments to a Perl program are &lt;code&gt;$ARGV[0]&lt;/code&gt;, &lt;code&gt;$ARGV[1]&lt;/code&gt;, and so on. Similarly, the formal arguments to a Perl subroutine are &lt;code&gt;$_[0]&lt;/code&gt;, &lt;code&gt;$_[1]&lt;/code&gt;, and so on. You may give the arguments individual names by assigning the values to a &lt;code&gt;my&lt;/code&gt; list. See also &lt;b&gt;actual arguments&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34968429c314c796b06ef13d6256c2eed375227" translate="yes" xml:space="preserve">
          <source>The get_dup() Method</source>
          <target state="translated">El método get_dup()</target>
        </trans-unit>
        <trans-unit id="777933c68edb9f2b520827371d959a89885f825a" translate="yes" xml:space="preserve">
          <source>The getaddrinfo() function converts a hostname and a service name into a list of structures, each containing a potential way to connect() to the named service on the named host.</source>
          <target state="translated">La función getaddrinfo()convierte un nombre de host y un nombre de servicio en una lista de estructuras,cada una de las cuales contiene una forma potencial de conectarse()al servicio nombrado en el host nombrado.</target>
        </trans-unit>
        <trans-unit id="b2567e2f657f48e5ffd91f457d438d649766ac8c" translate="yes" xml:space="preserve">
          <source>The getdcwd() function is also provided on Win32 to get the current working directory on the specified drive, since Windows maintains a separate current working directory for each drive. If no drive is specified then the current drive is assumed.</source>
          <target state="translated">La función getdcwd()también se proporciona en Win32 para obtener el directorio de trabajo actual en la unidad especificada,ya que Windows mantiene un directorio de trabajo actual separado para cada unidad.Si no se especifica ninguna unidad,se asume la unidad actual.</target>
        </trans-unit>
        <trans-unit id="7ef18c4cc3726de3de6ec3372bc632ef914a89f5" translate="yes" xml:space="preserve">
          <source>The getgr() function is a simple front-end that forwards a numeric argument to getgrgid() and the rest to getgrnam().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ed783ab1755c8923c2106affd806182a9b2682" translate="yes" xml:space="preserve">
          <source>The gethost() function is a simple front-end that forwards a numeric argument to gethostbyaddr() by way of Socket::inet_aton, and the rest to gethostbyname().</source>
          <target state="translated">La función gethost()es un front-end simple que reenvía un argumento numérico a gethostbyaddr()por medio del socket::inet_aton,y el resto a gethostbyname().</target>
        </trans-unit>
        <trans-unit id="91be5f2becab7f44b4c2d8e8646f84ed2e15605f" translate="yes" xml:space="preserve">
          <source>The gethost() functions do this in the Perl core:</source>
          <target state="translated">Las funciones gethost()hacen esto en el núcleo de Perl:</target>
        </trans-unit>
        <trans-unit id="3d809f6317a210fb06b8763a59c516ccb0250c8f" translate="yes" xml:space="preserve">
          <source>The getnameinfo() function converts a socket address, such as returned by getsockname() or getpeername(), into a pair of human-readable strings representing the address and service name.</source>
          <target state="translated">La función getnameinfo()convierte una dirección de socorro,como la que devuelve getockname()o getpeername(),en un par de cadenas legibles por el ser humano que representan la dirección y el nombre del servicio.</target>
        </trans-unit>
        <trans-unit id="c7341d184608dfa3d666b4de167cfb9267a092b7" translate="yes" xml:space="preserve">
          <source>The getnet() function is a simple front-end that forwards a numeric argument to getnetbyaddr(), and the rest to getnetbyname().</source>
          <target state="translated">La función getnet()es un simple front-end que reenvía un argumento numérico a getnetbyaddr(),y el resto a getnetbyname().</target>
        </trans-unit>
        <trans-unit id="a2bc6ce1fe12be1b0104870e6335dfcba678d52a" translate="yes" xml:space="preserve">
          <source>The getnet() functions do this in the Perl core:</source>
          <target state="translated">Las funciones getnet()hacen esto en el núcleo de Perl:</target>
        </trans-unit>
        <trans-unit id="723d74402111c283b1693c27eac4e9e45b8e6ed9" translate="yes" xml:space="preserve">
          <source>The getproto() function is a simple front-end that forwards a numeric argument to getprotobyport(), and the rest to getprotobyname().</source>
          <target state="translated">La función getproto()es un simple front-end que reenvía un argumento numérico a getprotobyport(),y el resto a getprotobyname().</target>
        </trans-unit>
        <trans-unit id="7135ce934ee6874d87ad890231c34f496a98c1a0" translate="yes" xml:space="preserve">
          <source>The getpw() function is a simple front-end that forwards a numeric argument to getpwuid() and the rest to getpwnam().</source>
          <target state="translated">La función getpw()es un simple front-end que reenvía un argumento numérico a getpwuid()y el resto a getpwnam().</target>
        </trans-unit>
        <trans-unit id="0d0b8e4657c6706a0314a90d140b3591ebd5a9bb" translate="yes" xml:space="preserve">
          <source>The getserv() function is a simple front-end that forwards a numeric argument to getservbyport(), and the rest to getservbyname().</source>
          <target state="translated">La función getserv()es un simple front-end que reenvía un argumento numérico a getservbyport(),y el resto a getservbyname().</target>
        </trans-unit>
        <trans-unit id="7b3093ca7aacbd788d18481992e739fec224cedd" translate="yes" xml:space="preserve">
          <source>The given arguments are made consistent as though by calling &lt;code&gt;mktime()&lt;/code&gt; before calling your system's &lt;code&gt;strftime()&lt;/code&gt; function, except that the &lt;code&gt;isdst&lt;/code&gt; value is not affected.</source>
          <target state="translated">Los argumentos dados se &lt;code&gt;mktime()&lt;/code&gt; consistentes como si se llamara a mktime () antes de llamar a la funci&amp;oacute;n &lt;code&gt;strftime()&lt;/code&gt; su sistema , excepto que el valor &lt;code&gt;isdst&lt;/code&gt; no se ve afectado.</target>
        </trans-unit>
        <trans-unit id="a46f0a3dc0d7705f81eb9d2736f8d38ab0c36cf3" translate="yes" xml:space="preserve">
          <source>The given link to</source>
          <target state="translated">El enlace dado a</target>
        </trans-unit>
        <trans-unit id="1b7e0113518a74a9ca8cd3adb44721180fc0bb94" translate="yes" xml:space="preserve">
          <source>The glob angle-bracket operator &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is a pathname generator that implements the rules for file name pattern matching used by Unix-like shells such as the Bourne shell or C shell.</source>
          <target state="translated">El operador glob de corchetes angulares &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; es un generador de nombre de ruta que implementa las reglas para la coincidencia de patrones de nombre de archivo utilizadas por shells similares a Unix como el shell Bourne o el shell C.</target>
        </trans-unit>
        <trans-unit id="5e215c589947f616aa94dd5242e9494420cfca28" translate="yes" xml:space="preserve">
          <source>The glob containing the output field separator - &lt;code&gt;*,&lt;/code&gt; in Perl space.</source>
          <target state="translated">Glob que contiene el separador de campo de salida - &lt;code&gt;*,&lt;/code&gt; en el espacio de Perl.</target>
        </trans-unit>
        <trans-unit id="72ac12b62c28c3baeece5702a243d181ecdda5a0" translate="yes" xml:space="preserve">
          <source>The glob was stopped because an error was encountered.</source>
          <target state="translated">El globo se detuvo porque se encontró un error.</target>
        </trans-unit>
        <trans-unit id="f628027fc4ac19b3e64d6b57171d06712a0f4de2" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;debugcolor&lt;/code&gt; pragmas allow one to get detailed debugging info about regexp compilation and execution. &lt;code&gt;debugcolor&lt;/code&gt; is the same as debug, except the debugging information is displayed in color on terminals that can display termcap color sequences. Here is example output:</source>
          <target state="translated">Los &lt;code&gt;debugcolor&lt;/code&gt; globales de &lt;code&gt;debug&lt;/code&gt; y depuraci&amp;oacute;n permiten obtener informaci&amp;oacute;n detallada de depuraci&amp;oacute;n sobre la compilaci&amp;oacute;n y ejecuci&amp;oacute;n de expresiones regulares. &lt;code&gt;debugcolor&lt;/code&gt; es lo mismo que debug, excepto que la informaci&amp;oacute;n de depuraci&amp;oacute;n se muestra en color en terminales que pueden mostrar secuencias de color termcap. Aqu&amp;iacute; hay un resultado de ejemplo:</target>
        </trans-unit>
        <trans-unit id="2364252b351b212be51c3b8e4ec104f73d0c11a2" translate="yes" xml:space="preserve">
          <source>The global variable $Devel::Peek::pv_limit can be set to limit the number of character printed in various string values. Setting it to 0 means no limit.</source>
          <target state="translated">La variable global $Devel::Peek::pv_limit puede ser establecida para limitar el número de caracteres impresos en varios valores de cadena.Ponerla a 0 significa que no hay límite.</target>
        </trans-unit>
        <trans-unit id="8c46d35ee4a0a86a8c41ca71ad737aa7e8fc9118" translate="yes" xml:space="preserve">
          <source>The global variables, like &lt;code&gt;@ARGV&lt;/code&gt; or the punctuation variables, must be &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;ized with &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt;. This block reads in</source>
          <target state="translated">Las variables globales, como &lt;code&gt;@ARGV&lt;/code&gt; las variables de puntuaci&amp;oacute;n, o deben ser &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; es zan con &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; . Este bloque se lee en</target>
        </trans-unit>
        <trans-unit id="8eb2db16d327a3b3a5febe18528925e67ce48750" translate="yes" xml:space="preserve">
          <source>The global variables, like &lt;code&gt;@ARGV&lt;/code&gt; or the punctuation variables, must be &lt;code&gt;local&lt;/code&gt;ized with &lt;code&gt;local()&lt;/code&gt;. This block reads in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fffe8d3b97109dc55047625158598478b942552" translate="yes" xml:space="preserve">
          <source>The glossary of this document is based upon this site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968cbdca6785865baa2b963e00c7cf59fd1ce4f6" translate="yes" xml:space="preserve">
          <source>The glue code pulls the arguments from the Perl stack, converts these Perl values to the formats expected by a C function, call this C function, transfers the return values of the C function back to Perl. Return values here may be a conventional C return value or any C function arguments that may serve as output parameters. These return values may be passed back to Perl either by putting them on the Perl stack, or by modifying the arguments supplied from the Perl side.</source>
          <target state="translated">El código de cola extrae los argumentos de la pila de Perl,convierte estos valores de Perl a los formatos esperados por una función C,llama a esta función C,transfiere los valores de retorno de la función C de vuelta a Perl.Los valores de retorno aquí pueden ser un valor de retorno C convencional o cualquier argumento de la función C que pueda servir como parámetros de salida.Estos valores de retorno pueden ser devueltos a Perl,ya sea poniéndolos en la pila de Perl,o modificando los argumentos suministrados desde el lado de Perl.</target>
        </trans-unit>
        <trans-unit id="cfb79bdb1e9bdcf50c5258db72c30cb6aeb1e3e1" translate="yes" xml:space="preserve">
          <source>The gmctime() function provides a way of getting at the scalar sense of the original CORE::gmtime() function.</source>
          <target state="translated">La función gmctime()proporciona una forma de llegar al sentido escalar de la función CORE::gmtime()original.</target>
        </trans-unit>
        <trans-unit id="15e78ea46607c2d827f12212191bcd40dffea850" translate="yes" xml:space="preserve">
          <source>The goal here is to have a testing utility that's simple to learn, quick to use and difficult to trip yourself up with while still providing more flexibility than the existing Test.pm. As such, the names of the most common routines are kept tiny, special cases and magic side-effects are kept to a minimum. WYSIWYG.</source>
          <target state="translated">El objetivo aquí es tener una utilidad de prueba que sea simple de aprender,rápida de usar y difícil de tropezar con usted mismo,mientras que todavía proporciona más flexibilidad que la existente Test.pm.Como tal,los nombres de las rutinas más comunes se mantienen pequeños,los casos especiales y los efectos secundarios mágicos se mantienen al mínimo.WYSIWYG.</target>
        </trans-unit>
        <trans-unit id="a352895328c4895bdf1e088252c7cfc98a73fd07" translate="yes" xml:space="preserve">
          <source>The goal of the CPAN Testers project (&lt;a href=&quot;http://testers.cpan.org/&quot;&gt;http://testers.cpan.org/&lt;/a&gt;) is to test as many CPAN packages as possible on as many platforms as possible. This provides valuable feedback to module authors and potential users to identify bugs or platform compatibility issues and improves the overall quality and value of CPAN.</source>
          <target state="translated">El objetivo del proyecto CPAN Testers ( &lt;a href=&quot;http://testers.cpan.org/&quot;&gt;http://testers.cpan.org/&lt;/a&gt; ) es probar tantos paquetes CPAN como sea posible en tantas plataformas como sea posible. Esto proporciona comentarios valiosos a los autores de m&amp;oacute;dulos y a los usuarios potenciales para identificar errores o problemas de compatibilidad de plataforma y mejora la calidad y el valor generales de CPAN.</target>
        </trans-unit>
        <trans-unit id="dc55056f0c4ea6c7742a56f2eaefd841cb6edeb2" translate="yes" xml:space="preserve">
          <source>The goal of the CPAN Testers project (http://testers.cpan.org/) is to test as many CPAN packages as possible on as many platforms as possible. This provides valuable feedback to module authors and potential users to identify bugs or platform compatibility issues and improves the overall quality and value of CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373cfbe1fa7d52d17deaf7ae1d8864f358d08a8b" translate="yes" xml:space="preserve">
          <source>The good news is that at least some DBM module should be available, and &lt;a href=&quot;anydbm_file&quot;&gt;&lt;code&gt;AnyDBM_File&lt;/code&gt;&lt;/a&gt; will use whichever module it can find. Of course, then the code needs to be fairly strict, dropping to the greatest common factor (e.g., not exceeding 1K for each record), so that it will work with any DBM module. See &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4f9c804c591c85f4c73346c685fe6b75566956" translate="yes" xml:space="preserve">
          <source>The good news is that at least some DBM module should be available, and &lt;code&gt;AnyDBM_File&lt;/code&gt; will use whichever module it can find. Of course, then the code needs to be fairly strict, dropping to the greatest common factor (e.g., not exceeding 1K for each record), so that it will work with any DBM module. See &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; for more details.</source>
          <target state="translated">La buena noticia es que al menos alg&amp;uacute;n m&amp;oacute;dulo DBM deber&amp;iacute;a estar disponible, y &lt;code&gt;AnyDBM_File&lt;/code&gt; usar&amp;aacute; cualquier m&amp;oacute;dulo que pueda encontrar. Por supuesto, entonces el c&amp;oacute;digo debe ser bastante estricto, reduci&amp;eacute;ndose al m&amp;aacute;ximo factor com&amp;uacute;n (por ejemplo, sin exceder 1K para cada registro), para que funcione con cualquier m&amp;oacute;dulo DBM. Consulte &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="0b5a1d8ce58ba1e38f16f3a0f1eb5ac058c6d368" translate="yes" xml:space="preserve">
          <source>The good old C code quality inspector, &lt;code&gt;lint&lt;/code&gt; , is available in several platforms, but please be aware that there are several different implementations of it by different vendors, which means that the flags are not identical across different platforms.</source>
          <target state="translated">El buen inspector de calidad del c&amp;oacute;digo C antiguo, &lt;code&gt;lint&lt;/code&gt; , est&amp;aacute; disponible en varias plataformas, pero tenga en cuenta que hay varias implementaciones diferentes de diferentes proveedores, lo que significa que los indicadores no son id&amp;eacute;nticos en diferentes plataformas.</target>
        </trans-unit>
        <trans-unit id="339c076fdfc281a53eef98387e350ea8944bc3d1" translate="yes" xml:space="preserve">
          <source>The good old C code quality inspector, &lt;code&gt;lint&lt;/code&gt;, is available in several platforms, but please be aware that there are several different implementations of it by different vendors, which means that the flags are not identical across different platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a4aa574c2f36a349fb65698d1079a80c8716e6" translate="yes" xml:space="preserve">
          <source>The grammar gives you the following rule: you can make the thing on the left of the colon if you see all the things on the right in sequence. This is called a &quot;reduction&quot;, and the aim of parsing is to completely reduce the input. There are several different ways you can perform a reduction, separated by vertical bars: so, &lt;code&gt;term&lt;/code&gt; followed by &lt;code&gt;=&lt;/code&gt; followed by &lt;code&gt;term&lt;/code&gt; makes a &lt;code&gt;term&lt;/code&gt; , and &lt;code&gt;term&lt;/code&gt; followed by &lt;code&gt;+&lt;/code&gt; followed by &lt;code&gt;term&lt;/code&gt; can also make a &lt;code&gt;term&lt;/code&gt; .</source>
          <target state="translated">La gram&amp;aacute;tica te da la siguiente regla: puedes hacer la cosa a la izquierda de los dos puntos si ves todas las cosas a la derecha en secuencia. Esto se llama &quot;reducci&amp;oacute;n&quot; y el objetivo del an&amp;aacute;lisis sint&amp;aacute;ctico es reducir completamente la entrada. Hay varias formas diferentes de realizar una reducci&amp;oacute;n, separadas por barras verticales: as&amp;iacute;, &lt;code&gt;term&lt;/code&gt; seguido de &lt;code&gt;=&lt;/code&gt; seguido de &lt;code&gt;term&lt;/code&gt; hace un &lt;code&gt;term&lt;/code&gt; , y &lt;code&gt;term&lt;/code&gt; seguido de &lt;code&gt;+&lt;/code&gt; seguido de &lt;code&gt;term&lt;/code&gt; tambi&amp;eacute;n puede formar un &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99ddf81d340c9da6ddca44ef926625a7b314c62b" translate="yes" xml:space="preserve">
          <source>The grammar gives you the following rule: you can make the thing on the left of the colon if you see all the things on the right in sequence. This is called a &quot;reduction&quot;, and the aim of parsing is to completely reduce the input. There are several different ways you can perform a reduction, separated by vertical bars: so, &lt;code&gt;term&lt;/code&gt; followed by &lt;code&gt;=&lt;/code&gt; followed by &lt;code&gt;term&lt;/code&gt; makes a &lt;code&gt;term&lt;/code&gt;, and &lt;code&gt;term&lt;/code&gt; followed by &lt;code&gt;+&lt;/code&gt; followed by &lt;code&gt;term&lt;/code&gt; can also make a &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f689a3c521cea873db9ec7a159a154a44941fb63" translate="yes" xml:space="preserve">
          <source>The grammar, lines one and three of the snippet above, tells you how to build up more complex forms. These complex forms, &quot;non-terminal symbols&quot; are generally placed in lower case. &lt;code&gt;term&lt;/code&gt; here is a non-terminal symbol, representing a single expression.</source>
          <target state="translated">La gram&amp;aacute;tica, l&amp;iacute;neas uno y tres del fragmento anterior, le indica c&amp;oacute;mo crear formas m&amp;aacute;s complejas. Estas formas complejas, &quot;s&amp;iacute;mbolos no terminales&quot;, se colocan generalmente en min&amp;uacute;sculas. &lt;code&gt;term&lt;/code&gt; aqu&amp;iacute; es un s&amp;iacute;mbolo no terminal, que representa una sola expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d748b942ca422b33db3c9c207b20fcf5e35fbf06" translate="yes" xml:space="preserve">
          <source>The great_circle_midpoint() is just a special case of</source>
          <target state="translated">El gran_circulo_punto_medio()es solo un caso especial de</target>
        </trans-unit>
        <trans-unit id="65a277526deeb0c81c0a5dcd559529318f7f89a5" translate="yes" xml:space="preserve">
          <source>The group as a whole is interpreted as follows:</source>
          <target state="translated">El grupo en su conjunto se interpreta de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="fc9b7c0745af45eb8fd74cee86dd53c561106e37" translate="yes" xml:space="preserve">
          <source>The group id owning the file</source>
          <target state="translated">La identificación del grupo que posee el archivo</target>
        </trans-unit>
        <trans-unit id="163b6e7222a22b065c1007b2d5c671945f219faa" translate="yes" xml:space="preserve">
          <source>The group name that owns the file</source>
          <target state="translated">El nombre del grupo que posee el archivo</target>
        </trans-unit>
        <trans-unit id="89fddac9a52f335bd6aece8163a19a7049c17f30" translate="yes" xml:space="preserve">
          <source>The grouping assigns a value to &lt;code&gt;\g1&lt;/code&gt;, so that the same 3-letter sequence is used for both parts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5464b947891c7dfe478004d22eea99e392c2554b" translate="yes" xml:space="preserve">
          <source>The grouping assigns a value to \g1, so that the same 3-letter sequence is used for both parts.</source>
          <target state="translated">La agrupación asigna un valor a \g1,de modo que se utiliza la misma secuencia de 3 letras para ambas partes.</target>
        </trans-unit>
        <trans-unit id="28563bfc58252e6ce5590c38ddeee29b7156bffa" translate="yes" xml:space="preserve">
          <source>The grouping construct &lt;code&gt;( ... )&lt;/code&gt; creates capture groups (also referred to as capture buffers). To refer to the current contents of a group later on, within the same pattern, use &lt;code&gt;\g1&lt;/code&gt; (or &lt;code&gt;\g{1}&lt;/code&gt;) for the first, &lt;code&gt;\g2&lt;/code&gt; (or &lt;code&gt;\g{2}&lt;/code&gt;) for the second, and so on. This is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a808380dda4fa48a019446ad652d6dc63c38be3d" translate="yes" xml:space="preserve">
          <source>The grouping metacharacters &lt;code&gt;()&lt;/code&gt; also allow the extraction of the parts of a string that matched. For each grouping, the part that matched inside goes into the special variables &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. They can be used just as ordinary variables:</source>
          <target state="translated">Los metacaracteres de agrupaci&amp;oacute;n &lt;code&gt;()&lt;/code&gt; tambi&amp;eacute;n permiten la extracci&amp;oacute;n de las partes de una cadena que coinciden. Para cada agrupaci&amp;oacute;n, la parte que coincidi&amp;oacute; en el interior entra en las variables especiales &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. Se pueden usar como variables ordinarias:</target>
        </trans-unit>
        <trans-unit id="c2b66b10db32d7f5b9d549c39f4a96523e13167f" translate="yes" xml:space="preserve">
          <source>The grouping metacharacters &lt;code&gt;()&lt;/code&gt; also allow the extraction of the parts of a string that matched. For each grouping, the part that matched inside goes into the special variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc. They can be used just as ordinary variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7778e0ad49a7501b63144277c49609f424265cc5" translate="yes" xml:space="preserve">
          <source>The grouping metacharacters &lt;code&gt;()&lt;/code&gt; also serve another completely different function: they allow the extraction of the parts of a string that matched. This is very useful to find out what matched and for text processing in general. For each grouping, the part that matched inside goes into the special variables &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. They can be used just as ordinary variables:</source>
          <target state="translated">Los metacaracteres de agrupaci&amp;oacute;n &lt;code&gt;()&lt;/code&gt; tambi&amp;eacute;n cumplen otra funci&amp;oacute;n completamente diferente: permiten la extracci&amp;oacute;n de las partes de una cadena que coinciden. Esto es muy &amp;uacute;til para averiguar qu&amp;eacute; coincide y para el procesamiento de texto en general. Para cada agrupaci&amp;oacute;n, la parte que coincidi&amp;oacute; en el interior entra en las variables especiales &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. Se pueden usar como variables ordinarias:</target>
        </trans-unit>
        <trans-unit id="f7d8e07f21ecf7c9b89414eb2748089fabb93562" translate="yes" xml:space="preserve">
          <source>The grouping metacharacters &lt;code&gt;()&lt;/code&gt; also serve another completely different function: they allow the extraction of the parts of a string that matched. This is very useful to find out what matched and for text processing in general. For each grouping, the part that matched inside goes into the special variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eece9645dd47cfb0899002c6d7925c002a7646e" translate="yes" xml:space="preserve">
          <source>The guts of &lt;a href=&quot;../perldoc&quot;&gt;perldoc&lt;/a&gt; utility.</source>
          <target state="translated">Las entra&amp;ntilde;as de la utilidad &lt;a href=&quot;../perldoc&quot;&gt;perldoc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4573f027ad2a701c6d9118677a3e8b776808d62d" translate="yes" xml:space="preserve">
          <source>The guts of &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1a967bf7f342dcba1f488528612191eac5ba1e" translate="yes" xml:space="preserve">
          <source>The gzip support in &lt;code&gt;Compress::Zlib&lt;/code&gt; version 1.x can only work with a real filesystem filehandle. The filehandles used by Apache modules are not associated with the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2c643a66e3a499a113b39d3630e9b4f6beb5ae" translate="yes" xml:space="preserve">
          <source>The handle identifies a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31680a03b79cf90dad61ef90684e16f85b576d96" translate="yes" xml:space="preserve">
          <source>The handler names are based on the underlying type of the variable being declared or of the reference passed. Because these attributes are associated with subroutine or variable declarations, this deliberately ignores any possibility of being blessed into some package. Thus, a subroutine declaration uses &quot;CODE&quot; as its</source>
          <target state="translated">Los nombres de los manejadores se basan en el tipo subyacente de la variable que se declara o de la referencia que se pasa.Debido a que estos atributos están asociados con declaraciones de subrutinas o variables,esto ignora deliberadamente cualquier posibilidad de ser bendecido en algún paquete.Así,una declaración de subrutina utiliza &quot;CODIGO&quot; como su</target>
        </trans-unit>
        <trans-unit id="a4c1e3467d4145540134804fd2549f602b627fdd" translate="yes" xml:space="preserve">
          <source>The handler used for subsequently installed signals calls &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; (actually &lt;code&gt;croak&lt;/code&gt; ) with a message indicating which signal was caught.</source>
          <target state="translated">El controlador utilizado para las llamadas de se&amp;ntilde;ales instaladas posteriormente &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; (en realidad &lt;code&gt;croak&lt;/code&gt; ) con un mensaje que indica qu&amp;eacute; se&amp;ntilde;al fue captada.</target>
        </trans-unit>
        <trans-unit id="00d58947b3aad48761af600208c9e3fd41356ea5" translate="yes" xml:space="preserve">
          <source>The handler used for subsequently installed signals calls &lt;code&gt;die&lt;/code&gt; (actually &lt;code&gt;croak&lt;/code&gt;) with a message indicating which signal was caught.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f12af1084926ed2ac194950a97f332b400e2448" translate="yes" xml:space="preserve">
          <source>The handler used for subsequently installed signals outputs a Perl stack trace to STDERR and then tries to dump core. This is the default signal handler.</source>
          <target state="translated">El manipulador que se utiliza para las señales instaladas posteriormente da salida a un rastro de pila de Perl al STDERR y luego intenta descargar el núcleo.Este es el manejador de señales por defecto.</target>
        </trans-unit>
        <trans-unit id="d5126c9fee7d8a5338a4248383236dc9ecb51986" translate="yes" xml:space="preserve">
          <source>The handling of A &amp;amp; P in MBI/MBF (the old core code shipped with Perl versions &amp;lt;= 5.7.2) is like this:</source>
          <target state="translated">El manejo de A &amp;amp; P en MBI / MBF (el antiguo c&amp;oacute;digo central enviado con las versiones de Perl &amp;lt;= 5.7.2) es as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="fc9357967428b2793ab9d519118dce3147a43e76" translate="yes" xml:space="preserve">
          <source>The handling of errors by the layer is not specified. e.g. when $! should be set explicitly, when the error handling should be just delegated to the top layer.</source>
          <target state="translated">No se especifica el manejo de los errores por la capa.Por ejemplo,cuando $! debe establecerse de forma explícita,cuando el manejo de los errores sólo debe delegarse a la capa superior.</target>
        </trans-unit>
        <trans-unit id="3b8d0bb90f4b079a36f72ce61ffbf0db337af8a2" translate="yes" xml:space="preserve">
          <source>The handling of hyphens and em dashes is somewhat fragile, and one may get the wrong one under some circumstances. This should only matter for &lt;b&gt;troff&lt;/b&gt; output.</source>
          <target state="translated">El manejo de guiones y guiones es algo fr&amp;aacute;gil y uno puede equivocarse en algunas circunstancias. Esto solo deber&amp;iacute;a importar para la salida de &lt;b&gt;troff&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="de0cf92f651484ad4efbe5f702009188bf5e94e3" translate="yes" xml:space="preserve">
          <source>The hash &lt;code&gt;%ENV&lt;/code&gt; contains your current environment. Setting a value in &lt;code&gt;ENV&lt;/code&gt; changes the environment for any child processes you subsequently &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; off.</source>
          <target state="translated">El hash &lt;code&gt;%ENV&lt;/code&gt; contiene su entorno actual. Establecer un valor en &lt;code&gt;ENV&lt;/code&gt; cambia el entorno para cualquier proceso hijo que posteriormente &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="195033ec6c0348a9a8c6b6c6ac70c90873828bda" translate="yes" xml:space="preserve">
          <source>The hash &lt;code&gt;%ENV&lt;/code&gt; contains your current environment. Setting a value in &lt;code&gt;ENV&lt;/code&gt; changes the environment for any child processes you subsequently &lt;code&gt;fork()&lt;/code&gt; off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3342ea08441abded27300d3bc9cbf7a4f36851e5" translate="yes" xml:space="preserve">
          <source>The hash &lt;code&gt;%INC&lt;/code&gt; contains entries for each filename included via the &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; operators. The key is the filename you specified (with module names converted to pathnames), and the value is the location of the file found. The &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; operator uses this hash to determine whether a particular file has already been included.</source>
          <target state="translated">El hash &lt;code&gt;%INC&lt;/code&gt; contiene entradas para cada nombre de archivo incluido a trav&amp;eacute;s de los operadores &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; . La clave es el nombre de archivo que especific&amp;oacute; (con los nombres de los m&amp;oacute;dulos convertidos en rutas) y el valor es la ubicaci&amp;oacute;n del archivo encontrado. El operador &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; usa este hash para determinar si ya se ha incluido un archivo en particular.</target>
        </trans-unit>
        <trans-unit id="266d3cf7610b8376c6c9862a0efb7aafe1dd7d00" translate="yes" xml:space="preserve">
          <source>The hash &lt;code&gt;%INC&lt;/code&gt; contains entries for each filename included via the &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, or &lt;code&gt;use&lt;/code&gt; operators. The key is the filename you specified (with module names converted to pathnames), and the value is the location of the file found. The &lt;code&gt;require&lt;/code&gt; operator uses this hash to determine whether a particular file has already been included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0c946c442c59fafdf0cc03f5925a7d6a67576e" translate="yes" xml:space="preserve">
          <source>The hash &lt;code&gt;%SIG&lt;/code&gt; contains signal handlers for signals. For example:</source>
          <target state="translated">El hash &lt;code&gt;%SIG&lt;/code&gt; contiene manejadores de se&amp;ntilde;ales para se&amp;ntilde;ales. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2b378e4f482e4b01f36a8f2a09efa90c92e18352" translate="yes" xml:space="preserve">
          <source>The hash algorithm is defined in the &lt;code&gt;PERL_HASH&lt;/code&gt; macro:</source>
          <target state="translated">El algoritmo hash se define en la macro &lt;code&gt;PERL_HASH&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9dd8951a5e30b83106f470f819a5f4eb8b3cc146" translate="yes" xml:space="preserve">
          <source>The hash contains a &quot;version&quot; key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea3de2cc53cbdd71b8b1d8903e357859f8beec1" translate="yes" xml:space="preserve">
          <source>The hash described above is returned for locale-independent casing, where at least one of the mappings has length longer than one. If &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned, the code point may have mappings, but if so, all are length one, and are returned by &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt;. Note that when this function does return a value, it will be for the complete set of mappings for a code point, even those whose length is one.</source>
          <target state="translated">El hash descrito anteriormente se devuelve para may&amp;uacute;sculas y min&amp;uacute;sculas independientes de la configuraci&amp;oacute;n regional, donde al menos una de las asignaciones tiene una longitud mayor que una. Si se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , el punto de c&amp;oacute;digo puede tener asignaciones, pero si es as&amp;iacute;, todos tienen la longitud uno y son devueltos por &lt;a href=&quot;#charinfo()&quot;&gt;charinfo ()&lt;/a&gt; . Tenga en cuenta que cuando esta funci&amp;oacute;n devuelve un valor, ser&amp;aacute; para el conjunto completo de asignaciones para un punto de c&amp;oacute;digo, incluso aquellos cuya longitud sea uno.</target>
        </trans-unit>
        <trans-unit id="711d74daff085b3047aba5916127a254ddfd4772" translate="yes" xml:space="preserve">
          <source>The hash described above is returned for locale-independent casing, where at least one of the mappings has length longer than one. If &lt;code&gt;undef&lt;/code&gt; is returned, the code point may have mappings, but if so, all are length one, and are returned by &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt;. Note that when this function does return a value, it will be for the complete set of mappings for a code point, even those whose length is one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c18c1acf75672457070b2eb9996c5075b3edce2" translate="yes" xml:space="preserve">
          <source>The hash does not support exists().</source>
          <target state="translated">El hachís no existe.</target>
        </trans-unit>
        <trans-unit id="8ead17751b61a27f00737722511d4f0a6b122f2d" translate="yes" xml:space="preserve">
          <source>The hash has the same structure as the one returned by Storable::file_magic(). The &lt;code&gt;file&lt;/code&gt; element is true if the image is a file image.</source>
          <target state="translated">El hash tiene la misma estructura que la devuelta por Storable :: file_magic (). El elemento de &lt;code&gt;file&lt;/code&gt; es verdadero si la imagen es una imagen de archivo.</target>
        </trans-unit>
        <trans-unit id="5130b4f9ca4de414c6b75c63b4b5de1f1cac05d9" translate="yes" xml:space="preserve">
          <source>The hash reference returned by the new() function can be used to examine and modify the contents of the .packlist. Items may be added/deleted from the .packlist by modifying the hash. If the value associated with a hash key is a scalar, the entry written to the .packlist by any subsequent write() will be a simple filename. If the value is a hash, the entry written will be the filename followed by the key=value pairs from the hash. Reading back the .packlist will recreate the original entries.</source>
          <target state="translated">La referencia hash devuelta por la nueva función ()puede ser usada para examinar y modificar el contenido de la lista .pac.Se pueden añadir/eliminar elementos de la lista de paquetes modificando el hash.Si el valor asociado a una clave hash es un escalar,la entrada que se escriba en el .packlist por cualquier escritura()posterior será un simple nombre de archivo.Si el valor es un hash,la entrada escrita será el nombre de archivo seguido de los pares key=valor del hash.Leyendo de nuevo el .packlist se recrearán las entradas originales.</target>
        </trans-unit>
        <trans-unit id="7516ee71ac16390106261a6b0bbe1da56c817eef" translate="yes" xml:space="preserve">
          <source>The hash returned has the following elements:</source>
          <target state="translated">El hash devuelto tiene los siguientes elementos:</target>
        </trans-unit>
        <trans-unit id="5e040a1ccea7ca71c3bad7dc1e4a1dfbebdc6ad0" translate="yes" xml:space="preserve">
          <source>The hash structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a906eb4ff4eda3db678faefd07c14f14845797" translate="yes" xml:space="preserve">
          <source>The hash variable you want to tie.</source>
          <target state="translated">La variable de hachís que quieres atar.</target>
        </trans-unit>
        <trans-unit id="1e40f9760b2e7d5577d2825dfdedf13a7e442c00" translate="yes" xml:space="preserve">
          <source>The head of the chain of deleted ops is returned, or &lt;code&gt;NULL&lt;/code&gt; if no ops were deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab4ffe148d6038400649049035912b11305e989" translate="yes" xml:space="preserve">
          <source>The head of the chain of deleted ops is returned, or NULL if no ops were deleted.</source>
          <target state="translated">Se devuelve la cabeza de la cadena de operaciones eliminadas,o NULL si no se eliminó ninguna operación.</target>
        </trans-unit>
        <trans-unit id="fb8198ac36c0383db875a5b5488218cc0db38e42" translate="yes" xml:space="preserve">
          <source>The head of the stack is &lt;code&gt;PL_markstack_ptr&lt;/code&gt;, and points to the most recently-pushed item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387a371cfd5487134922ec368d5a02aa122c9278" translate="yes" xml:space="preserve">
          <source>The head of the stack is &lt;code&gt;PL_stack_sp&lt;/code&gt;, and points to the most recently-pushed item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9e497fb69d1c1631afd8e4e7265382a3e02b69" translate="yes" xml:space="preserve">
          <source>The head of the stack is indexed by &lt;code&gt;PL_savestack_ix&lt;/code&gt;, an integer which stores the index in the array at which the next item should be pushed. (Note that this is different to most other stacks, which reference the most recently-pushed item).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaff0f01d94e655d09c1c9c0abff908c801c87d2" translate="yes" xml:space="preserve">
          <source>The head of the stack is indexed by &lt;code&gt;PL_scopestack_ix&lt;/code&gt;, an integer which stores the index of the array or arrays at which the next item should be pushed. (Note that this is different to most other stacks, which reference the most recently-pushed item).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf516ef8c50debb6627d05e33ce24dc47fb581a2" translate="yes" xml:space="preserve">
          <source>The head of the stack is indexed by &lt;code&gt;PL_tmps_ix&lt;/code&gt;, an integer which stores the index in the array of the most recently-pushed item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c336f0d4ef1d936490e8c7b4819c090f6400cf2" translate="yes" xml:space="preserve">
          <source>The header file written by this module, typically</source>
          <target state="translated">El archivo de cabecera escrito por este módulo,típicamente</target>
        </trans-unit>
        <trans-unit id="4c85c6655d7d1206831fdc527a34ff595586e985" translate="yes" xml:space="preserve">
          <source>The header section continues until a line containing the word CHARMAP. This section has a form of</source>
          <target state="translated">La sección del encabezado continúa hasta una línea que contiene la palabra CHARMAP.Esta sección tiene una forma de</target>
        </trans-unit>
        <trans-unit id="a528e0d6eaf7b88f88a4f152246f56b029cd4490" translate="yes" xml:space="preserve">
          <source>The heart of Storable is written in C for decent speed. Extra low-level optimizations have been made when manipulating perl internals, to sacrifice encapsulation for the benefit of greater speed.</source>
          <target state="translated">El corazón de Storable está escrito en C para una velocidad decente.Se han hecho optimizaciones de nivel extra bajo al manipular los internos de la perla,para sacrificar la encapsulación en beneficio de una mayor velocidad.</target>
        </trans-unit>
        <trans-unit id="a8fcb5ed9aadb57481c4a4c9eabfd488f403dcd6" translate="yes" xml:space="preserve">
          <source>The here-doc modifier &lt;code&gt;~&lt;/code&gt; allows you to indent your here-docs to make the code more readable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6afbf6cabde867bd59953ce46fc882087b1bd27" translate="yes" xml:space="preserve">
          <source>The hex number may optionally be prefixed with &quot;0x&quot; or &quot;x&quot; unless &lt;code&gt;PERL_SCAN_DISALLOW_PREFIX&lt;/code&gt; is set in</source>
          <target state="translated">El n&amp;uacute;mero hexadecimal opcionalmente puede tener el prefijo &quot;0x&quot; o &quot;x&quot; a menos que &lt;code&gt;PERL_SCAN_DISALLOW_PREFIX&lt;/code&gt; est&amp;eacute; configurado en</target>
        </trans-unit>
        <trans-unit id="13723a6864537beca2cddb32c984b567fe87e40b" translate="yes" xml:space="preserve">
          <source>The hex number may optionally be prefixed with &lt;code&gt;&quot;0x&quot;&lt;/code&gt; or &lt;code&gt;&quot;x&quot;&lt;/code&gt; unless &lt;code&gt;PERL_SCAN_DISALLOW_PREFIX&lt;/code&gt; is set in &lt;code&gt;*flags&lt;/code&gt; on entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e84dec921d35d3ee6755f09b85656ef3201e9eb" translate="yes" xml:space="preserve">
          <source>The high-order 4 bytes of the total number of cylinders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cee26392a760c84fafaebf12b0f84ec8e67796" translate="yes" xml:space="preserve">
          <source>The higher-level loops preserve an additional state between iterations: whether the last match was zero-length. To break the loop, the following match after a zero-length match is prohibited to have a length of zero. This prohibition interacts with backtracking (see &lt;a href=&quot;#Backtracking&quot;&gt;&quot;Backtracking&quot;&lt;/a&gt;), and so the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e478860a296847f9fc713c230a9fb9343e5f150e" translate="yes" xml:space="preserve">
          <source>The higher-level loops preserve an additional state between iterations: whether the last match was zero-length. To break the loop, the following match after a zero-length match is prohibited to have a length of zero. This prohibition interacts with backtracking (see &lt;a href=&quot;#Backtracking&quot;&gt;Backtracking&lt;/a&gt;), and so the</source>
          <target state="translated">Los bucles de nivel superior conservan un estado adicional entre iteraciones: si la &amp;uacute;ltima coincidencia fue de longitud cero. Para romper el ciclo, se proh&amp;iacute;be que la siguiente coincidencia despu&amp;eacute;s de una coincidencia de longitud cero tenga una longitud de cero. Esta prohibici&amp;oacute;n interact&amp;uacute;a con el retroceso (ver &lt;a href=&quot;#Backtracking&quot;&gt;Retroceso&lt;/a&gt; ), por lo que</target>
        </trans-unit>
        <trans-unit id="5d5a041b27e5325dac6f1b79cae3bff7a7552bef" translate="yes" xml:space="preserve">
          <source>The highest priority is to look in the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59406d517ca12a7bf5809c9dbfccd1e683e04f9f" translate="yes" xml:space="preserve">
          <source>The hinting interface allows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2214ecae9d593eb49cab164240c89849da3aae" translate="yes" xml:space="preserve">
          <source>The hintsfile is eval()ed immediately after the arguments given to WriteMakefile are stuffed into a hash reference $self but before this reference becomes blessed. So if you want to do the equivalent to override or create an attribute you would say something like</source>
          <target state="translated">El archivo de pistas es evaluado inmediatamente después de que los argumentos dados a WriteMakefile son rellenados en una referencia hash $self pero antes de que esta referencia sea bendecida.Así que si quieres hacer el equivalente de anular o crear un atributo dirías algo como</target>
        </trans-unit>
        <trans-unit id="c6b34cade6e81d89b062f256b78cf0c9f72eec68" translate="yes" xml:space="preserve">
          <source>The hook used by perl's &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; operator. &lt;b&gt;ptype&lt;/b&gt; is perl's character for the kind of IO:</source>
          <target state="translated">El gancho utilizado por el operador &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; de perl . &lt;b&gt;ptype&lt;/b&gt; es el car&amp;aacute;cter de perl para el tipo de IO:</target>
        </trans-unit>
        <trans-unit id="1add1ef58ecb7c35c4f838c64caf5db36bdf795e" translate="yes" xml:space="preserve">
          <source>The hook used by perl's &lt;code&gt;binmode&lt;/code&gt; operator. &lt;b&gt;ptype&lt;/b&gt; is perl's character for the kind of IO:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f349975f67add93f8850a9eaf9c6c17fd6d7655e" translate="yes" xml:space="preserve">
          <source>The host name supplied to getaddrinfo() did not provide any usable address data.</source>
          <target state="translated">El nombre del host suministrado a getaddrinfo()no proporcionó ningún dato de dirección utilizable.</target>
        </trans-unit>
        <trans-unit id="26f0f0653cc389e36c588050d688c99bccaa9d07" translate="yes" xml:space="preserve">
          <source>The host name supplied to getaddrinfo() does not exist, or the address supplied to getnameinfo() is not associated with a host name and the &lt;code&gt;NI_NAMEREQD&lt;/code&gt; flag was supplied.</source>
          <target state="translated">El nombre de host proporcionado a getaddrinfo () no existe, o la direcci&amp;oacute;n proporcionada a getnameinfo () no est&amp;aacute; asociada con un nombre de host y se &lt;code&gt;NI_NAMEREQD&lt;/code&gt; indicador NI_NAMEREQD .</target>
        </trans-unit>
        <trans-unit id="a5eeccb55ae3d60bff3752f2dd5a946e36daa986" translate="yes" xml:space="preserve">
          <source>The hostname in the uri. Will be empty if host was originally 'localhost' for a 'file://' url.</source>
          <target state="translated">El nombre del anfitrión en el uri.Estará vacío si el host era originalmente 'localhost' para una url 'file://'.</target>
        </trans-unit>
        <trans-unit id="c156a44c9f3418b797d3bba0a0c3707b47fb0ac1" translate="yes" xml:space="preserve">
          <source>The hub class or subclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b8df6ac6b4142b5235e5c136ec2dc940fbfdbc" translate="yes" xml:space="preserve">
          <source>The hub is the place where all events get processed and handed off to the formatter. The hub also tracks test state, and provides several hooks into the event pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcd00b585852692b974ea751e079b51540b5b54" translate="yes" xml:space="preserve">
          <source>The hyperbolic sine, cosine, and tangent</source>
          <target state="translated">El hiperbólico seno,coseno y tangente</target>
        </trans-unit>
        <trans-unit id="ff901843574864f25cda07a5ab8922dd36a5d5b7" translate="yes" xml:space="preserve">
          <source>The icmp and icmpv6 protocols requires that the program be run as root or that it be setuid to root. The other protocols do not require special privileges, but not all network devices implement tcp or udp echo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67744a35db2bbac17aada3b55cebfdff3c8d58f" translate="yes" xml:space="preserve">
          <source>The icmp protocol requires that the program be run as root or that it be setuid to root. The other protocols do not require special privileges, but not all network devices implement tcp or udp echo.</source>
          <target state="translated">El protocolo icmp requiere que el programa se ejecute como root o que se configure como root.Los otros protocolos no requieren privilegios especiales,pero no todos los dispositivos de red implementan tcp o udp echo.</target>
        </trans-unit>
        <trans-unit id="0eb904ac9079537474ee2cc5638a1c5ecde2814c" translate="yes" xml:space="preserve">
          <source>The id must start with a letter (a-z or A-Z)</source>
          <target state="translated">La identificación debe comenzar con una letra (a-z o A-Z)</target>
        </trans-unit>
        <trans-unit id="28d56a775fecdcfc9d3c448ae0628addf0163100" translate="yes" xml:space="preserve">
          <source>The ideal (but a bit ugly) way to never have to think about that is to use &lt;code&gt;BEGIN&lt;/code&gt; blocks. So the first part of the &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt; code could be rewritten as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28df5f4390b3a084c824acbbd266525edf8be51a" translate="yes" xml:space="preserve">
          <source>The ideal (but a bit ugly) way to never have to think about that is to use &lt;code&gt;BEGIN&lt;/code&gt; blocks. So the first part of the &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt; code could be rewritten as:</source>
          <target state="translated">La forma ideal (pero un poco fea) de no tener que pensar nunca en eso es usar bloques &lt;code&gt;BEGIN&lt;/code&gt; . Entonces, la primera parte del c&amp;oacute;digo &lt;a href=&quot;#SYNOPSIS&quot;&gt;SINOPSIS&lt;/a&gt; podr&amp;iacute;a reescribirse como:</target>
        </trans-unit>
        <trans-unit id="3e76ae6d87db97d0c1319c6311b06f1b4140b992" translate="yes" xml:space="preserve">
          <source>The immediate, in addition to the current stable release, the previous stable release is maintained. See &lt;a href=&quot;perlpolicy#MAINTENANCE-AND-SUPPORT&quot;&gt;&quot;MAINTENANCE AND SUPPORT&quot; in perlpolicy&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b5bd1f2c1aa12d8d86dc87b94e48313e6fd68a" translate="yes" xml:space="preserve">
          <source>The immediate, previous releases (i.e. perl5.14.x ) are usually maintained for a while, although not at the same level as the current releases.</source>
          <target state="translated">Las liberaciones inmediatas anteriores (es decir,perl5.14.x)suelen mantenerse durante un tiempo,aunque no al mismo nivel que las liberaciones actuales.</target>
        </trans-unit>
        <trans-unit id="805f5e34bdac09e91b618eb56a2ba5ac7b88cd61" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;:raw&lt;/code&gt; is as a pseudo-layer which when &quot;pushed&quot; pops itself and then any layers which do not declare themselves as suitable for binary data. (Undoing :utf8 and :crlf are implemented by clearing flags rather than popping layers but that is an implementation detail.)</source>
          <target state="translated">La implementaci&amp;oacute;n de &lt;code&gt;:raw&lt;/code&gt; es como una pseudo-capa que cuando se &quot;empuja&quot; aparece a s&amp;iacute; misma y luego a cualquier capa que no se declare adecuada para datos binarios. (Deshacer: utf8 y: crlf se implementan borrando banderas en lugar de hacer estallar capas, pero ese es un detalle de implementaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="74166820cac25a2e66888d5644d8d2715e58984a" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;:raw&lt;/code&gt; is as a pseudo-layer which when &quot;pushed&quot; pops itself and then any layers which would modify the binary data stream. (Undoing &lt;code&gt;:utf8&lt;/code&gt; and &lt;code&gt;:crlf&lt;/code&gt; may be implemented by clearing flags rather than popping layers but that is an implementation detail.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1868b2d1d8d2925ab9482699d09a63b0f1af9f3c" translate="yes" xml:space="preserve">
          <source>The implementation of individual components of the system is likely to change over time.</source>
          <target state="translated">Es probable que la aplicación de los distintos componentes del sistema cambie con el tiempo.</target>
        </trans-unit>
        <trans-unit id="6075b5ee16206eda7e75f744a66591ab7ff6ad34" translate="yes" xml:space="preserve">
          <source>The implementation of the C3 MRO and switchable MROs within the perl core was written by Brandon L Black. Nicholas Clark created the pluggable interface, refactored Brandon's implementation to work with it, and wrote this document.</source>
          <target state="translated">La implementación del C3 MRO y de los MRO conmutables dentro del núcleo de perl fue escrita por Brandon L Black.Nicholas Clark creó la interfaz enchufable,refactorizó la implementación de Brandon para trabajar con ella y escribió este documento.</target>
        </trans-unit>
        <trans-unit id="0af6409c892c8fe954ef686ac149074100758771" translate="yes" xml:space="preserve">
          <source>The implementation that surfaces this limitation will not be changed. See the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92ca5378313f5f6ef2629dcf71bf80c645c279f" translate="yes" xml:space="preserve">
          <source>The implication of the above description is that a pattern containing nested parentheses will result in a call graph which cycles through &lt;code&gt;reg()&lt;/code&gt; , &lt;code&gt;regbranch()&lt;/code&gt; , &lt;code&gt;regpiece()&lt;/code&gt; , &lt;code&gt;regatom()&lt;/code&gt; , &lt;code&gt;reg()&lt;/code&gt; , &lt;code&gt;regbranch()&lt;/code&gt;</source>
          <target state="translated">La implicaci&amp;oacute;n de la descripci&amp;oacute;n anterior es que un patr&amp;oacute;n que contiene par&amp;eacute;ntesis anidados dar&amp;aacute; como resultado un gr&amp;aacute;fico de llamadas que recorre &lt;code&gt;reg()&lt;/code&gt; , &lt;code&gt;regbranch()&lt;/code&gt; , &lt;code&gt;regpiece()&lt;/code&gt; , &lt;code&gt;regatom()&lt;/code&gt; , &lt;code&gt;reg()&lt;/code&gt; , &lt;code&gt;regbranch()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5213d8ec5be4ed3cc0fcaff5c663e1f7ec79164" translate="yes" xml:space="preserve">
          <source>The implication of the above description is that a pattern containing nested parentheses will result in a call graph which cycles through &lt;code&gt;reg()&lt;/code&gt;, &lt;code&gt;regbranch()&lt;/code&gt;, &lt;code&gt;regpiece()&lt;/code&gt;, &lt;code&gt;regatom()&lt;/code&gt;, &lt;code&gt;reg()&lt;/code&gt;, &lt;code&gt;regbranch()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ca45a7499fa655d95fb3a1c14575987ee3c0c2" translate="yes" xml:space="preserve">
          <source>The implicit iterator variable in the &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">La variable iteradora impl&amp;iacute;cita en las funciones &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0c861ae3d9b69a61149562b6cbed085fb5fa583" translate="yes" xml:space="preserve">
          <source>The implicit iterator variable in the &lt;code&gt;grep()&lt;/code&gt; and &lt;code&gt;map()&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49df36702f6a3c6192de102a29688dbe9fd4061b" translate="yes" xml:space="preserve">
          <source>The implicit variable of &lt;code&gt;given()&lt;/code&gt; .</source>
          <target state="translated">La variable impl&amp;iacute;cita de &lt;code&gt;given()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7bb5561c43ecc998d31a66fa1460eabbf5c497c" translate="yes" xml:space="preserve">
          <source>The implicit variable of &lt;code&gt;given()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c82ff9343f818ba122f89e2a74fb9d1d0fecda" translate="yes" xml:space="preserve">
          <source>The importance of these tests is proportional to the alleged stability of a module. A module which purports to be stable or which hopes to achieve wide use should adhere to as strict a testing regime as possible.</source>
          <target state="translated">La importancia de estas pruebas es proporcional a la supuesta estabilidad de un módulo.Un módulo que pretende ser estable o que espera lograr un uso amplio debe adherirse a un régimen de pruebas tan estricto como sea posible.</target>
        </trans-unit>
        <trans-unit id="09af00710c80d3dd70ebd96fd4367e42313c5d25" translate="yes" xml:space="preserve">
          <source>The importance of writing good test scripts cannot be over-emphasized. You should closely follow the &quot;ok/not ok&quot; style that Perl itself uses, so that it is very easy and unambiguous to determine the outcome of each test case. When you find and fix a bug, make sure you add a test case for it.</source>
          <target state="translated">La importancia de escribir buenos guiones de prueba no puede ser sobre enfatizada.Se debe seguir de cerca el estilo &quot;ok/no ok&quot; que utiliza el propio Perl,para que sea muy fácil y sin ambigüedades determinar el resultado de cada caso de prueba.Cuando encuentres y arregles un error,asegúrate de añadir un caso de prueba para él.</target>
        </trans-unit>
        <trans-unit id="a4561daf93366d570e71e9394fec54f9d31846e6" translate="yes" xml:space="preserve">
          <source>The important and distinguishing feature of run_forked is execution timeout which at first seems to be quite a simple task but if you think that the program which you're spawning might spawn some children itself (which in their turn could do the same and so on) it turns out to be not a simple issue.</source>
          <target state="translated">La característica importante y distintiva de run_forked es el timeout de ejecución que al principio parece ser una tarea bastante simple pero si piensas que el programa que estás engendrando podría engendrar algunos niños por sí mismo (que a su vez podrían hacer lo mismo y así sucesivamente)resulta no ser una cuestión sencilla.</target>
        </trans-unit>
        <trans-unit id="4973662d6822686f7aa087396e5cfac037bf9b09" translate="yes" xml:space="preserve">
          <source>The important parts of that are the second argument (the increment) to HEAP, and allowing the stack to be &quot;Above the (16M) line&quot;. If the heap increment is too small then when perl (for example loading unicode/Name.pl) tries to create a &quot;big&quot; (400K+) string it cannot fit in a single segment and you get &quot;Out of Memory!&quot; - even if there is still plenty of memory available.</source>
          <target state="translated">Las partes importantes de eso son el segundo argumento (el incremento)a HEAP,y permitir que la pila esté &quot;Por encima de la línea (16M)&quot;.Si el incremento del montón es demasiado pequeño,entonces cuando perl (por ejemplo cargando unicode/Nombre.pl)intenta crear una cadena &quot;grande&quot; (400K+)no puede caber en un solo segmento y se obtiene &quot;Fuera de la Memoria&quot;!-incluso si todavía hay mucha memoria disponible.</target>
        </trans-unit>
        <trans-unit id="3f69c866bd6b570c0ad67a5d6dcc4f47abb90206" translate="yes" xml:space="preserve">
          <source>The included contents will be inserted into the MANIFEST.SKIP file in between</source>
          <target state="translated">El contenido incluido se insertará en el archivo MANIFEST.SKIP entre</target>
        </trans-unit>
        <trans-unit id="321a9d8c0c3e343e922f69286afb469449a8323c" translate="yes" xml:space="preserve">
          <source>The independent subexpression &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; doesn't care about the rest of the regexp, so it sees an &lt;code&gt;'a'&lt;/code&gt; and grabs it. Then the rest of the regexp &lt;code&gt;ab&lt;/code&gt; cannot match. Because &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; is independent, there is no backtracking and the independent subexpression does not give up its &lt;code&gt;'a'&lt;/code&gt;. Thus the match of the regexp as a whole fails. A similar behavior occurs with completely independent regexps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e5563a36b89e14fcbd689f1595a21037cddaee" translate="yes" xml:space="preserve">
          <source>The independent subexpression &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; doesn't care about the rest of the regexp, so it sees an &lt;code&gt;a&lt;/code&gt; and grabs it. Then the rest of the regexp &lt;code&gt;ab&lt;/code&gt; cannot match. Because &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; is independent, there is no backtracking and the independent subexpression does not give up its &lt;code&gt;a&lt;/code&gt; . Thus the match of the regexp as a whole fails. A similar behavior occurs with completely independent regexps:</source>
          <target state="translated">La subexpresi&amp;oacute;n independiente &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; no se preocupa por el resto de la expresi&amp;oacute;n regular, por lo que ve un &lt;code&gt;a&lt;/code&gt; y lo agarra. Entonces el resto del regexp &lt;code&gt;ab&lt;/code&gt; no puede coincidir. Como &lt;code&gt;(?&amp;gt;a*)&lt;/code&gt; es independiente, no hay retroceso y la subexpresi&amp;oacute;n independiente no renuncia a su &lt;code&gt;a&lt;/code&gt; . Por lo tanto, la coincidencia de la expresi&amp;oacute;n regular falla en su conjunto. Un comportamiento similar ocurre con expresiones regulares completamente independientes:</target>
        </trans-unit>
        <trans-unit id="d8911df7ecc3a80cd7cb7748b8608afa2215b297" translate="yes" xml:space="preserve">
          <source>The index entry specified contains nothing but whitespace.</source>
          <target state="translated">La entrada del índice especificada no contiene nada más que espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="8993f68ea89e04e52354fc3b53dacbbf01363016" translate="yes" xml:space="preserve">
          <source>The index function searches for one string within another, but without the wildcard-like behavior of a full regular-expression pattern match. It returns the position of the first occurrence of SUBSTR in STR at or after POSITION. If POSITION is omitted, starts searching from the beginning of the string. POSITION before the beginning of the string or after its end is treated as if it were the beginning or the end, respectively. POSITION and the return value are based at zero. If the substring is not found, &lt;a href=&quot;#index-STR%2CSUBSTR%2CPOSITION&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2b9d5332f95abb7e28bc54e5124d59c88ac74f" translate="yes" xml:space="preserve">
          <source>The index function searches for one string within another, but without the wildcard-like behavior of a full regular-expression pattern match. It returns the position of the first occurrence of SUBSTR in STR at or after POSITION. If POSITION is omitted, starts searching from the beginning of the string. POSITION before the beginning of the string or after its end is treated as if it were the beginning or the end, respectively. POSITION and the return value are based at zero. If the substring is not found, &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; returns -1.</source>
          <target state="translated">La funci&amp;oacute;n de &amp;iacute;ndice busca una cadena dentro de otra, pero sin el comportamiento de comod&amp;iacute;n de una coincidencia de patr&amp;oacute;n de expresi&amp;oacute;n regular completa. Devuelve la posici&amp;oacute;n de la primera aparici&amp;oacute;n de SUBSTR en STR en POSITION o despu&amp;eacute;s. Si se omite POSITION, comienza a buscar desde el principio de la cadena. La POSICI&amp;Oacute;N antes del comienzo de la cadena o despu&amp;eacute;s de su final se trata como si fuera el comienzo o el final, respectivamente. POSITION y el valor de retorno se basan en cero. Si no se encuentra la subcadena, el &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; devuelve -1.</target>
        </trans-unit>
        <trans-unit id="052a5a20374b32a9d318c8e657a3fc6d2c067a62" translate="yes" xml:space="preserve">
          <source>The index function searches for one string within another, but without the wildcard-like behavior of a full regular-expression pattern match. It returns the position of the first occurrence of SUBSTR in STR at or after POSITION. If POSITION is omitted, starts searching from the beginning of the string. POSITION before the beginning of the string or after its end is treated as if it were the beginning or the end, respectively. POSITION and the return value are based at zero. If the substring is not found, &lt;code&gt;&lt;a href=&quot;index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; returns -1.</source>
          <target state="translated">La funci&amp;oacute;n de &amp;iacute;ndice busca una cadena dentro de otra, pero sin el comportamiento de comod&amp;iacute;n de una coincidencia de patr&amp;oacute;n de expresi&amp;oacute;n regular completa. Devuelve la posici&amp;oacute;n de la primera aparici&amp;oacute;n de SUBSTR en STR en POSITION o despu&amp;eacute;s. Si se omite POSITION, comienza a buscar desde el principio de la cadena. La POSICI&amp;Oacute;N antes del comienzo de la cadena o despu&amp;eacute;s de su final se trata como si fuera el comienzo o el final, respectivamente. POSITION y el valor de retorno se basan en cero. Si no se encuentra la subcadena, el &lt;code&gt;&lt;a href=&quot;index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; devuelve -1.</target>
        </trans-unit>
        <trans-unit id="1deb1e733742d1b9b4e186c9d57759d15dd95d6b" translate="yes" xml:space="preserve">
          <source>The index of the last allocated space in the padlist. Note that the last pad may be in an earlier slot. Any entries following it will be &lt;code&gt;NULL&lt;/code&gt; in that case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d12f86f44aac2e21ecbe7b61cc95b95675209f" translate="yes" xml:space="preserve">
          <source>The index of the last allocated space in the padlist. Note that the last pad may be in an earlier slot. Any entries following it will be NULL in that case.</source>
          <target state="translated">El índice del último espacio asignado en la lista de notas.Tenga en cuenta que el último bloc puede estar en una ranura anterior.Cualquier entrada que le siga será NULL en ese caso.</target>
        </trans-unit>
        <trans-unit id="e58a7f8912fdbd8eaa97b22ef4d5d356a40471d5" translate="yes" xml:space="preserve">
          <source>The index of the last pad entry.</source>
          <target state="translated">El índice de la última entrada de la almohadilla.</target>
        </trans-unit>
        <trans-unit id="9c1326f686e664ef67aae2567ac4696fd6d57b00" translate="yes" xml:space="preserve">
          <source>The index of the last pad name.</source>
          <target state="translated">El índice del apellido.</target>
        </trans-unit>
        <trans-unit id="6e35b0206297becebb26c609423d65b1dfe24dd3" translate="yes" xml:space="preserve">
          <source>The indexing merely outputs messages via &lt;code&gt;.tm&lt;/code&gt; for each major page, section, subsection, item, and any &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; directives. See &lt;a href=&quot;Pod::Man&quot;&gt;Pod::Man&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda2671ac9e05ad8e30450bd5f169c0ab42ddce2" translate="yes" xml:space="preserve">
          <source>The indexing merely outputs messages via &lt;code&gt;.tm&lt;/code&gt; for each major page, section, subsection, item, and any &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; directives. See &lt;a href=&quot;pod/man&quot;&gt;Pod::Man&lt;/a&gt; for more details.</source>
          <target state="translated">La indexaci&amp;oacute;n simplemente genera mensajes a trav&amp;eacute;s de &lt;code&gt;.tm&lt;/code&gt; para cada p&amp;aacute;gina principal, secci&amp;oacute;n, subsecci&amp;oacute;n, elemento y cualquier directiva &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; . Consulte &lt;a href=&quot;pod/man&quot;&gt;Pod :: Man&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="c99d2cd33e1325afbec2e3f58c4236d44c82d895" translate="yes" xml:space="preserve">
          <source>The inferred anchor text is implemented per &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;:</source>
          <target state="translated">El texto de ancla inferido se implementa por &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f2d5d2272835d0eeff1fcb72d6fc348f5deff4fa" translate="yes" xml:space="preserve">
          <source>The inferred anchor text is implemented per &lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfbacdda04f65b21a64f3fbe8dd597fa30ae2f5" translate="yes" xml:space="preserve">
          <source>The infinity and not-a-number have their own special arithmetic rules. The general rule is that they are &quot;contagious&quot;: &lt;code&gt;Inf&lt;/code&gt; plus one is &lt;code&gt;Inf&lt;/code&gt; , and &lt;code&gt;NaN&lt;/code&gt; plus one is &lt;code&gt;NaN&lt;/code&gt; . Where things get interesting is when you combine infinities and not-a-numbers: &lt;code&gt;Inf&lt;/code&gt; minus &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;Inf&lt;/code&gt; divided by &lt;code&gt;INf&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt; (while &lt;code&gt;Inf&lt;/code&gt; plus &lt;code&gt;Inf&lt;/code&gt; is &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;Inf&lt;/code&gt; times &lt;code&gt;Inf&lt;/code&gt; is &lt;code&gt;Inf&lt;/code&gt; ). &lt;code&gt;NaN&lt;/code&gt; is also curious in that it does not equal any number,</source>
          <target state="translated">El infinito y el no-n&amp;uacute;mero tienen sus propias reglas aritm&amp;eacute;ticas especiales. La regla general es que son &quot;contagiosas&quot;: &lt;code&gt;Inf&lt;/code&gt; m&amp;aacute;s uno es &lt;code&gt;Inf&lt;/code&gt; y &lt;code&gt;NaN&lt;/code&gt; m&amp;aacute;s uno es &lt;code&gt;NaN&lt;/code&gt; . Donde las cosas se ponen interesantes es cuando se combinan infinitos y no-a-numbers: &lt;code&gt;Inf&lt;/code&gt; menos &lt;code&gt;Inf&lt;/code&gt; e &lt;code&gt;Inf&lt;/code&gt; dividido por &lt;code&gt;INf&lt;/code&gt; es &lt;code&gt;NaN&lt;/code&gt; (mientras &lt;code&gt;Inf&lt;/code&gt; adem&amp;aacute;s &lt;code&gt;Inf&lt;/code&gt; se &lt;code&gt;Inf&lt;/code&gt; e &lt;code&gt;Inf&lt;/code&gt; veces &lt;code&gt;Inf&lt;/code&gt; es &lt;code&gt;Inf&lt;/code&gt; ). &lt;code&gt;NaN&lt;/code&gt; tambi&amp;eacute;n es curioso porque no es igual a ning&amp;uacute;n n&amp;uacute;mero,</target>
        </trans-unit>
        <trans-unit id="b82803e1dc2591f87a6c585b7453fcb7c5b2d49b" translate="yes" xml:space="preserve">
          <source>The infinity and not-a-number have their own special arithmetic rules. The general rule is that they are &quot;contagious&quot;: &lt;code&gt;Inf&lt;/code&gt; plus one is &lt;code&gt;Inf&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt; plus one is &lt;code&gt;NaN&lt;/code&gt;. Where things get interesting is when you combine infinities and not-a-numbers: &lt;code&gt;Inf&lt;/code&gt; minus &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;Inf&lt;/code&gt; divided by &lt;code&gt;Inf&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt; (while &lt;code&gt;Inf&lt;/code&gt; plus &lt;code&gt;Inf&lt;/code&gt; is &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;Inf&lt;/code&gt; times &lt;code&gt;Inf&lt;/code&gt; is &lt;code&gt;Inf&lt;/code&gt;). &lt;code&gt;NaN&lt;/code&gt; is also curious in that it does not equal any number,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7be9da06f66cb02df4f43ae1ea9430b4a4ec21" translate="yes" xml:space="preserve">
          <source>The infinity as a constant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e5e47a18eb5768545b57a7c2da190e8c801676" translate="yes" xml:space="preserve">
          <source>The infinity is the result of certain math operations that overflow the floating point range, like 9**9**9. The not-a-number is the result when the result is undefined or unrepresentable. Though note that you cannot get &lt;code&gt;NaN&lt;/code&gt; from some common &quot;undefined&quot; or &quot;out-of-range&quot; operations like dividing by zero, or square root of a negative number, since Perl generates fatal errors for those.</source>
          <target state="translated">El infinito es el resultado de ciertas operaciones matem&amp;aacute;ticas que desbordan el rango de coma flotante, como 9 ** 9 ** 9. El no-n&amp;uacute;mero es el resultado cuando el resultado es indefinido o irrepresentable. Aunque tenga en cuenta que no puede obtener &lt;code&gt;NaN&lt;/code&gt; de algunas operaciones comunes &quot;indefinidas&quot; o &quot;fuera de rango&quot; como dividir por cero o la ra&amp;iacute;z cuadrada de un n&amp;uacute;mero negativo, ya que Perl genera errores fatales para esas operaciones.</target>
        </trans-unit>
        <trans-unit id="00c49c340cf01a0ad0057e1d1a4eb69e30e225ff" translate="yes" xml:space="preserve">
          <source>The information in</source>
          <target state="translated">La información en</target>
        </trans-unit>
        <trans-unit id="477d4eda55a2d3f9993a8441da0761392c6f4bde" translate="yes" xml:space="preserve">
          <source>The init routine asks a few questions and writes a CPAN/Config.pm or CPAN/MyConfig.pm file (depending on what it is currently using).</source>
          <target state="translated">La rutina de inicio hace algunas preguntas y escribe un archivo CPAN/Config.pm o CPAN/MyConfig.pm (dependiendo de lo que esté usando actualmente).</target>
        </trans-unit>
        <trans-unit id="46a6f162dfe4fd1932efaab095f3ad6c7065353c" translate="yes" xml:space="preserve">
          <source>The initial Haiku port was done by Ingo Weinhold &amp;lt;ingo_weinhold@gmx.de&amp;gt;.</source>
          <target state="translated">El puerto inicial de Haiku fue realizado por Ingo Weinhold &amp;lt;ingo_weinhold@gmx.de&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="98cc24e951f63d830750ae3c1189e0eb891874c8" translate="yes" xml:space="preserve">
          <source>The initial call must supply the root of the tree as both top and o.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30baee764016e0fd1d74fa20302dc7f15e17366e" translate="yes" xml:space="preserve">
          <source>The initial comment shows a contrived, even dangerous example. By overriding &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; globally, you would be forcing the new (and subversive) behavior for the &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; operator for</source>
          <target state="translated">El comentario inicial muestra un ejemplo artificial, incluso peligroso. Al anular &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; globalmente, estar&amp;iacute;a forzando el comportamiento nuevo (y subversivo) para el operador &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; para</target>
        </trans-unit>
        <trans-unit id="60355db9cd866fe1c7fe0bda38b193d6a4e848c8" translate="yes" xml:space="preserve">
          <source>The initial comment shows a contrived, even dangerous example. By overriding &lt;code&gt;glob&lt;/code&gt; globally, you would be forcing the new (and subversive) behavior for the &lt;code&gt;glob&lt;/code&gt; operator for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825ce23847c0393ed93e8d89640392b4a5b33a5c" translate="yes" xml:space="preserve">
          <source>The initial program is started up using the locale specified from the environment, as currently, described in &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt;. All newly created threads start with &lt;code&gt;LC_ALL&lt;/code&gt; set to &lt;code&gt;&quot;C&quot;&lt;/code&gt;&amp;gt;. Each thread may use &lt;code&gt;POSIX::setlocale()&lt;/code&gt; to query or switch its locale at any time, without affecting any other thread. All locale-dependent operations automatically use their thread's locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd35ba0a15f59402bf69541a0c2a672b5245bb7" translate="yes" xml:space="preserve">
          <source>The initializer for a class element is an object of the corresponding class, or of one of it's subclasses, or a reference to a hash containing named arguments to be passed to the element's constructor.</source>
          <target state="translated">El inicializador de un elemento de clase es un objeto de la clase correspondiente,o de una de sus subclases,o una referencia a un hash que contiene argumentos nombrados para ser pasados al constructor del elemento.</target>
        </trans-unit>
        <trans-unit id="12094a548e09c78cbb33f308cc132c5c3175cfa2" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;curlen&lt;/code&gt; parameter was 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7270a1d75b517033df50fe18fd9734207c302454" translate="yes" xml:space="preserve">
          <source>The input character at &lt;code&gt;p&lt;/code&gt; is assumed to be well-formed.</source>
          <target state="translated">Se supone que el car&amp;aacute;cter de entrada en &lt;code&gt;p&lt;/code&gt; est&amp;aacute; bien formado.</target>
        </trans-unit>
        <trans-unit id="5b4da48b1525c95aa66984d855f728baeff9dd23" translate="yes" xml:space="preserve">
          <source>The input data will be read from each file in turn.</source>
          <target state="translated">Los datos de entrada se leerán de cada archivo por turno.</target>
        </trans-unit>
        <trans-unit id="6a300bdc55cb2694c445f5d77189a272f405a2c8" translate="yes" xml:space="preserve">
          <source>The input number must be a non-negative integer, or a string beginning with &lt;code&gt;&quot;U+&quot;&lt;/code&gt; or &lt;code&gt;&quot;0x&quot;&lt;/code&gt; with the remainder considered to be a hexadecimal integer. A literal numeric constant must be unsigned; it will be interpreted as hex if it has a leading zero or contains non-decimal hex digits; otherwise it will be interpreted as decimal. If it begins with &lt;code&gt;&quot;U+&quot;&lt;/code&gt; , it is interpreted as the Unicode code point; otherwise it is interpreted as native. (Only code points below 256 can differ between Unicode and native.) Thus &lt;code&gt;U+41&lt;/code&gt; is always the Latin letter &quot;A&quot;; but &lt;code&gt;0x41&lt;/code&gt; can be &quot;NO-BREAK SPACE&quot; on EBCDIC platforms.</source>
          <target state="translated">El n&amp;uacute;mero de entrada debe ser un entero no negativo o una cadena que comience con &lt;code&gt;&quot;U+&quot;&lt;/code&gt; o &lt;code&gt;&quot;0x&quot;&lt;/code&gt; y el resto se considere un entero hexadecimal. Una constante num&amp;eacute;rica literal debe estar sin signo; se interpretar&amp;aacute; como hexadecimal si tiene un cero a la izquierda o contiene d&amp;iacute;gitos hexadecimales que no son decimales; de lo contrario, se interpretar&amp;aacute; como decimal. Si comienza con &lt;code&gt;&quot;U+&quot;&lt;/code&gt; , se interpreta como el punto de c&amp;oacute;digo Unicode; de lo contrario, se interpreta como nativo. (S&amp;oacute;lo los puntos de c&amp;oacute;digo por debajo de 256 pueden diferir entre Unicode y nativo.) Por lo tanto, &lt;code&gt;U+41&lt;/code&gt; es siempre la letra latina &quot;A&quot;; pero &lt;code&gt;0x41&lt;/code&gt; puede ser &quot;ESPACIO SIN ROTURA&quot; en plataformas EBCDIC.</target>
        </trans-unit>
        <trans-unit id="3bfc355d9523e05f661ba51d39053e5f158eac0d" translate="yes" xml:space="preserve">
          <source>The input number must be a non-negative integer, or a string beginning with &lt;code&gt;&quot;U+&quot;&lt;/code&gt; or &lt;code&gt;&quot;0x&quot;&lt;/code&gt; with the remainder considered to be a hexadecimal integer. A literal numeric constant must be unsigned; it will be interpreted as hex if it has a leading zero or contains non-decimal hex digits; otherwise it will be interpreted as decimal. If it begins with &lt;code&gt;&quot;U+&quot;&lt;/code&gt;, it is interpreted as the Unicode code point; otherwise it is interpreted as native. (Only code points below 256 can differ between Unicode and native.) Thus &lt;code&gt;U+41&lt;/code&gt; is always the Latin letter &quot;A&quot;; but &lt;code&gt;0x41&lt;/code&gt; can be &quot;NO-BREAK SPACE&quot; on EBCDIC platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74af33c799ba9469f42a06ffc1422c08fe76ab11" translate="yes" xml:space="preserve">
          <source>The input parameter name is loosely matched, which means that white space, hyphens, and underscores are ignored (except for the trailing underscore in the old_form grandfathered-in &lt;code&gt;&quot;L_&quot;&lt;/code&gt; , which is better written as &lt;code&gt;&quot;LC&quot;&lt;/code&gt; , and both of which mean &lt;code&gt;General_Category=Cased Letter&lt;/code&gt; ).</source>
          <target state="translated">El nombre del par&amp;aacute;metro de entrada no coincide demasiado, lo que significa que se ignoran los espacios en blanco, los guiones y los guiones bajos (excepto el gui&amp;oacute;n bajo al final de la antigua_forma &lt;code&gt;&quot;L_&quot;&lt;/code&gt; , que se escribe mejor como &lt;code&gt;&quot;LC&quot;&lt;/code&gt; , y ambos significan &lt;code&gt;General_Category=Cased Letter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="50a387d524817a7fe881c13a9828020ec107aa28" translate="yes" xml:space="preserve">
          <source>The input parameter name is loosely matched, which means that white space, hyphens, and underscores are ignored (except for the trailing underscore in the old_form grandfathered-in &lt;code&gt;&quot;L_&quot;&lt;/code&gt;, which is better written as &lt;code&gt;&quot;LC&quot;&lt;/code&gt;, and both of which mean &lt;code&gt;General_Category=Cased Letter&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e74e0d2d8b749838155344b24b616732216f51a" translate="yes" xml:space="preserve">
          <source>The input record separator - &lt;code&gt;$/&lt;/code&gt; in Perl space.</source>
          <target state="translated">El separador de registros de entrada - &lt;code&gt;$/&lt;/code&gt; en el espacio Perl.</target>
        </trans-unit>
        <trans-unit id="7fa23e4762b9d73d4eaf4fe4ff40a6345a28b068" translate="yes" xml:space="preserve">
          <source>The input record separator, newline by default. This influences Perl's idea of what a &quot;line&quot; is. Works like &lt;b&gt;awk&lt;/b&gt;'s RS variable, including treating empty lines as a terminator if set to the null string (an empty line cannot contain any spaces or tabs). You may set it to a multi-character string to match a multi-character terminator, or to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to read through the end of file. Setting it to &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; means something slightly different than setting to &lt;code&gt;&quot;&quot;&lt;/code&gt; , if the file contains consecutive empty lines. Setting to &lt;code&gt;&quot;&quot;&lt;/code&gt; will treat two or more consecutive empty lines as a single empty line. Setting to &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; will blindly assume that the next input character belongs to the next paragraph, even if it's a newline.</source>
          <target state="translated">El separador de registros de entrada, nueva l&amp;iacute;nea por defecto. Esto influye en la idea de Perl de lo que es una &quot;l&amp;iacute;nea&quot;. Funciona como la variable RS de &lt;b&gt;awk&lt;/b&gt; , incluido el tratamiento de las l&amp;iacute;neas vac&amp;iacute;as como un terminador si se establece en la cadena nula (una l&amp;iacute;nea vac&amp;iacute;a no puede contener espacios ni tabulaciones). Puede configurarlo en una cadena de varios caracteres para que coincida con un terminador de varios caracteres, o en &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; para leer hasta el final del archivo. Establecerlo en &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; significa algo ligeramente diferente que establecerlo en &lt;code&gt;&quot;&quot;&lt;/code&gt; , si el archivo contiene l&amp;iacute;neas vac&amp;iacute;as consecutivas. Si se establece en &lt;code&gt;&quot;&quot;&lt;/code&gt; , se tratar&amp;aacute;n dos o m&amp;aacute;s l&amp;iacute;neas vac&amp;iacute;as consecutivas como una sola l&amp;iacute;nea vac&amp;iacute;a. Estableciendo en &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; asumir&amp;aacute; ciegamente que el siguiente car&amp;aacute;cter de entrada pertenece al siguiente p&amp;aacute;rrafo, incluso si es una nueva l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="e85a2d63aac48888c217e5fc29fb75b0836651b1" translate="yes" xml:space="preserve">
          <source>The input record separator, newline by default. This influences Perl's idea of what a &quot;line&quot; is. Works like &lt;b&gt;awk&lt;/b&gt;'s RS variable, including treating empty lines as a terminator if set to the null string (an empty line cannot contain any spaces or tabs). You may set it to a multi-character string to match a multi-character terminator, or to &lt;code&gt;undef&lt;/code&gt; to read through the end of file. Setting it to &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; means something slightly different than setting to &lt;code&gt;&quot;&quot;&lt;/code&gt;, if the file contains consecutive empty lines. Setting to &lt;code&gt;&quot;&quot;&lt;/code&gt; will treat two or more consecutive empty lines as a single empty line. Setting to &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; will blindly assume that the next input character belongs to the next paragraph, even if it's a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a207c3a9402edc134f0e1308be59f0ea92cbf62" translate="yes" xml:space="preserve">
          <source>The input sequence is not standard UTF-8, but a Perl extension. This bit is set only if the input &lt;code&gt;flags&lt;/code&gt; parameter contains either the &lt;code&gt;UTF8_DISALLOW_PERL_EXTENDED&lt;/code&gt; or the &lt;code&gt;UTF8_WARN_PERL_EXTENDED&lt;/code&gt; flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1ce589ec1298c83c9efa29e1da93e2c83adb1f" translate="yes" xml:space="preserve">
          <source>The input sequence was malformed in that &lt;code&gt;curlen&lt;/code&gt; is smaller than required for a complete sequence. In other words, the input is for a partial character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da71ee8003bfe3e8ec2c57918f6f663af8a1ae47" translate="yes" xml:space="preserve">
          <source>The input sequence was malformed in that a non-continuation type byte was found in a position where only a continuation type one should be. See also &lt;a href=&quot;#UTF8_GOT_SHORT&quot;&gt;&quot;&lt;code&gt;UTF8_GOT_SHORT&lt;/code&gt;&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4e094d6ddae88fabdfbba8b8e5241b863d54f9" translate="yes" xml:space="preserve">
          <source>The input sequence was malformed in that it is for a -Unicode UTF-16 surrogate code point. This bit is set only if the input &lt;code&gt;flags&lt;/code&gt; parameter contains either the &lt;code&gt;UTF8_DISALLOW_SURROGATE&lt;/code&gt; or the &lt;code&gt;UTF8_WARN_SURROGATE&lt;/code&gt; flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff44b5ee5ee25243c0818e9bac3059eeea96ab14" translate="yes" xml:space="preserve">
          <source>The input sequence was malformed in that it is for a code point that is not representable in the number of bits available in an IV on the current platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903db38b58d5e3ef05b722cc2b0b61f1d172318a" translate="yes" xml:space="preserve">
          <source>The input sequence was malformed in that it is for a non-Unicode code point; that is, one above the legal Unicode maximum. This bit is set only if the input &lt;code&gt;flags&lt;/code&gt; parameter contains either the &lt;code&gt;UTF8_DISALLOW_SUPER&lt;/code&gt; or the &lt;code&gt;UTF8_WARN_SUPER&lt;/code&gt; flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c430a74085221ab38d297957bbc930788c28aae9" translate="yes" xml:space="preserve">
          <source>The input sequence was malformed in that the first byte was a UTF-8 continuation byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7003ec3d60fe29e1076b40608f946cd82019d546" translate="yes" xml:space="preserve">
          <source>The input sequence was malformed in that there is some other sequence that evaluates to the same code point, but that sequence is shorter than this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e2a05c675d83b32cdc798d03f4bd19670bf464" translate="yes" xml:space="preserve">
          <source>The insertion of a scalar or list value somewhere in the middle of another value, such that it appears to have been there all along. In Perl, variable interpolation happens in double-quoted strings and patterns, and list interpolation occurs when constructing the list of values to pass to a list operator or other such construct that takes a</source>
          <target state="translated">La inserción de un valor escalar o de lista en algún lugar en medio de otro valor,de tal manera que parece haber estado allí todo el tiempo.En Perl,la interpolación de variables se produce en cadenas y patrones de doble cita,y la interpolación de listas se produce cuando se construye la lista de valores para pasarla a un operador de lista u otra construcción de ese tipo que toma un</target>
        </trans-unit>
        <trans-unit id="4d21a2b8d717cbebbeaee5c37e1b249a9b6f4299" translate="yes" xml:space="preserve">
          <source>The inspiration for the stop codon DNA example came from the ZIP code example in chapter 7 of</source>
          <target state="translated">La inspiración para el ejemplo del ADN del codón de parada vino del ejemplo del código postal en el capítulo 7 de</target>
        </trans-unit>
        <trans-unit id="4a97f9d9b06cf863773b30ca4503b6a95be51b13" translate="yes" xml:space="preserve">
          <source>The installation paths that you set during the build get compiled into perl, so you don't have to do anything additional to start using that perl (except add its location to your PATH variable).</source>
          <target state="translated">Las rutas de instalación que estableces durante la construcción se compilan en perl,por lo que no tienes que hacer nada adicional para empezar a usar ese perl (excepto añadir su ubicación a tu variable PATH).</target>
        </trans-unit>
        <trans-unit id="ed7ec50305347f54da6bfda8296e9515a40cfdd4" translate="yes" xml:space="preserve">
          <source>The installer is ancient and has a few bugs on the paths it uses. You will have to fix them later. Basically, some things go into &quot;C:/Program Files/Windows CE Tools&quot;, others go into &quot;C:/Windows CE Tools&quot; regardless of the path you gave to the installer (the default will be &quot;C:/Windows CE Tools&quot;). Reboots will be required for the installer to proceed. Also .c and .h associations with Visual Studio might get overridden when installing EVC4. You have been warned.</source>
          <target state="translated">El instalador es antiguo y tiene algunos errores en los caminos que utiliza.Tendrás que arreglarlos más tarde.Básicamente,algunas cosas van en &quot;C:/Archivos de programa/Windows CE Tools&quot;,otras van en &quot;C:/Windows CE Tools&quot; sin importar la ruta que le diste al instalador (la predeterminada será &quot;C:/Windows CE Tools&quot;).Será necesario reiniciar para que el instalador pueda continuar.También las asociaciones de .c y .h con Visual Studio pueden ser anuladas al instalar EVC4.Se le ha advertido.</target>
        </trans-unit>
        <trans-unit id="5b7ef7bcb453733f9ef12df7a7d461832dbe120b" translate="yes" xml:space="preserve">
          <source>The installman script will try to run on OS/390. There will be fewer errors if you have a roff utility installed. You can obtain GNU groff from the Redbook SG24-5944-00 ftp site.</source>
          <target state="translated">El script del instalador intentará funcionar en OS/390.Habrá menos errores si tienes una utilidad roff instalada.Puedes obtener groff de GNU en el sitio ftp Redbook SG24-5944-00.</target>
        </trans-unit>
        <trans-unit id="85593ec8ae8efa2e0dca43eb532734290d86abb5" translate="yes" xml:space="preserve">
          <source>The integer a computer uses to represent a given character. ASCII codepoints are in the range 0 to 127; Unicode codepoints are in the range 0 to 0x1F_FFFF; and Perl codepoints are in the range 0 to 2&amp;sup3;&amp;sup2;&amp;minus;1 or 0 to 2⁶⁴&amp;minus;1, depending on your native integer size. In Perl Culture, sometimes called &lt;b&gt;ordinals&lt;/b&gt;.</source>
          <target state="translated">El n&amp;uacute;mero entero que usa una computadora para representar un car&amp;aacute;cter dado. Los puntos de c&amp;oacute;digo ASCII est&amp;aacute;n en el rango de 0 a 127; Los puntos de c&amp;oacute;digo Unicode est&amp;aacute;n en el rango de 0 a 0x1F_FFFF; y los puntos de c&amp;oacute;digo de Perl est&amp;aacute;n en el rango de 0 a 2&amp;sup3;&amp;sup2; &amp;minus; 1 o de 0 a 2⁶⁴ &amp;minus; 1, dependiendo de su tama&amp;ntilde;o entero nativo. En Perl Culture, a veces llamados &lt;b&gt;ordinales&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="fffacf90cdbd65b0d80477a60f2e9ed117d5e990" translate="yes" xml:space="preserve">
          <source>The integer formats &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;j&lt;/code&gt; , and &lt;code&gt;J&lt;/code&gt; are inherently non-portable between processors and operating systems because they obey native byteorder and endianness. For example, a 4-byte integer 0x12345678 (305419896 decimal) would be ordered natively (arranged in and handled by the CPU registers) into bytes as</source>
          <target state="translated">Los formatos enteros &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;j&lt;/code&gt; y &lt;code&gt;J&lt;/code&gt; son inherentemente no port&amp;aacute;tiles entre procesadores y sistemas operativos porque obedecen al orden de bytes nativo y al endianness. Por ejemplo, un entero de 4 bytes 0x12345678 (305419896 decimal) se ordenar&amp;iacute;a de forma nativa (organizado y manejado por los registros de la CPU) en bytes como</target>
        </trans-unit>
        <trans-unit id="c85dc9716f98ce9d26e0b8a1181441b82dd671db" translate="yes" xml:space="preserve">
          <source>The integer formats &lt;code&gt;&lt;a href=&quot;s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;j&lt;/code&gt; , and &lt;code&gt;J&lt;/code&gt; are inherently non-portable between processors and operating systems because they obey native byteorder and endianness. For example, a 4-byte integer 0x12345678 (305419896 decimal) would be ordered natively (arranged in and handled by the CPU registers) into bytes as</source>
          <target state="translated">Los formatos enteros &lt;code&gt;&lt;a href=&quot;s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;j&lt;/code&gt; y &lt;code&gt;J&lt;/code&gt; son inherentemente no port&amp;aacute;tiles entre procesadores y sistemas operativos porque obedecen al orden de bytes nativo y al endianness. Por ejemplo, un entero de 4 bytes 0x12345678 (305419896 decimal) se ordenar&amp;iacute;a de forma nativa (organizado y manejado por los registros de la CPU) en bytes como</target>
        </trans-unit>
        <trans-unit id="8d253eb6809a9562624388d35993ef60096f96e8" translate="yes" xml:space="preserve">
          <source>The integer formats &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;I&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;, and &lt;code&gt;J&lt;/code&gt; are inherently non-portable between processors and operating systems because they obey native byteorder and endianness. For example, a 4-byte integer 0x12345678 (305419896 decimal) would be ordered natively (arranged in and handled by the CPU registers) into bytes as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1696e5627c4e618d6b57f471d56db53f3261ebc8" translate="yes" xml:space="preserve">
          <source>The integer four, not to be confused with six, Tom&amp;rsquo;s favorite editor. IV also means an internal Integer Value of the type a &lt;b&gt;scalar&lt;/b&gt; can hold, not to be confused with an &lt;b&gt;NV&lt;/b&gt;.</source>
          <target state="translated">El n&amp;uacute;mero entero cuatro, que no debe confundirse con seis, el editor favorito de Tom. IV tambi&amp;eacute;n significa un valor entero interno del tipo que puede contener un &lt;b&gt;escalar&lt;/b&gt; , que no debe confundirse con un &lt;b&gt;NV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="38f7f88bfbbfc7fbb6565adc2a9af0982c4ebbc9" translate="yes" xml:space="preserve">
          <source>The integer or name form of the &lt;code&gt;condition&lt;/code&gt; allows us to choose, with more flexibility, what to match based on what matched earlier in the regexp. This searches for words of the form &lt;code&gt;&quot;$x$x&quot;&lt;/code&gt; or &lt;code&gt;&quot;$x$y$y$x&quot;&lt;/code&gt; :</source>
          <target state="translated">La forma entera o de nombre de la &lt;code&gt;condition&lt;/code&gt; nos permite elegir, con m&amp;aacute;s flexibilidad, qu&amp;eacute; hacer coincidir en funci&amp;oacute;n de lo que coincidi&amp;oacute; anteriormente en la expresi&amp;oacute;n regular. Esto busca palabras de la forma &lt;code&gt;&quot;$x$x&quot;&lt;/code&gt; o &lt;code&gt;&quot;$x$y$y$x&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fa48e81451f89adaf419b03b6f56f3e3cdc6501d" translate="yes" xml:space="preserve">
          <source>The integer or name form of the &lt;code&gt;condition&lt;/code&gt; allows us to choose, with more flexibility, what to match based on what matched earlier in the regexp. This searches for words of the form &lt;code&gt;&quot;$x$x&quot;&lt;/code&gt; or &lt;code&gt;&quot;$x$y$y$x&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05de89837820906430d66857198677bee870304" translate="yes" xml:space="preserve">
          <source>The integer types &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , and &lt;code&gt;L&lt;/code&gt; may be followed by a &lt;code&gt;!&lt;/code&gt; modifier to specify native shorts or longs. As shown in the example above, a bare &lt;code&gt;l&lt;/code&gt; means exactly 32 bits, although the native &lt;code&gt;long&lt;/code&gt; as seen by the local C compiler may be larger. This is mainly an issue on 64-bit platforms. You can see whether using &lt;code&gt;!&lt;/code&gt; makes any difference this way:</source>
          <target state="translated">Los tipos enteros &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; y &lt;code&gt;L&lt;/code&gt; pueden ir seguidos de a &lt;code&gt;!&lt;/code&gt; modificador para especificar cortos o largos nativos. Como se muestra en el ejemplo anterior, una &lt;code&gt;l&lt;/code&gt; simple significa exactamente 32 bits, aunque la &lt;code&gt;long&lt;/code&gt; itud nativa vista por el compilador local de C puede ser mayor. Este es principalmente un problema en plataformas de 64 bits. &amp;iexcl;Puede ver si est&amp;aacute; usando &lt;code&gt;!&lt;/code&gt; hace alguna diferencia de esta manera:</target>
        </trans-unit>
        <trans-unit id="e28530f74a983b5b7c88ba8ea81f426cbf7efd7c" translate="yes" xml:space="preserve">
          <source>The integer types &lt;code&gt;&lt;a href=&quot;s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , and &lt;code&gt;L&lt;/code&gt; may be followed by a &lt;code&gt;!&lt;/code&gt; modifier to specify native shorts or longs. As shown in the example above, a bare &lt;code&gt;l&lt;/code&gt; means exactly 32 bits, although the native &lt;code&gt;long&lt;/code&gt; as seen by the local C compiler may be larger. This is mainly an issue on 64-bit platforms. You can see whether using &lt;code&gt;!&lt;/code&gt; makes any difference this way:</source>
          <target state="translated">Los tipos enteros &lt;code&gt;&lt;a href=&quot;s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; y &lt;code&gt;L&lt;/code&gt; pueden ir seguidos de a &lt;code&gt;!&lt;/code&gt; modificador para especificar cortos o largos nativos. Como se muestra en el ejemplo anterior, una &lt;code&gt;l&lt;/code&gt; simple significa exactamente 32 bits, aunque la &lt;code&gt;long&lt;/code&gt; itud nativa vista por el compilador local de C puede ser mayor. Este es principalmente un problema en plataformas de 64 bits. &amp;iexcl;Puede ver si est&amp;aacute; usando &lt;code&gt;!&lt;/code&gt; hace alguna diferencia de esta manera:</target>
        </trans-unit>
        <trans-unit id="b9395373d953b00358ac2a4a8b3d6e5305da7861" translate="yes" xml:space="preserve">
          <source>The integer types &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, and &lt;code&gt;L&lt;/code&gt; may be followed by a &lt;code&gt;!&lt;/code&gt; modifier to specify native shorts or longs. As shown in the example above, a bare &lt;code&gt;l&lt;/code&gt; means exactly 32 bits, although the native &lt;code&gt;long&lt;/code&gt; as seen by the local C compiler may be larger. This is mainly an issue on 64-bit platforms. You can see whether using &lt;code&gt;!&lt;/code&gt; makes any difference this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5708b037f56278734976c0deaf7b452666b9a4" translate="yes" xml:space="preserve">
          <source>The intended purpose of this routine is to concatenate</source>
          <target state="translated">El propósito de esta rutina es concatenar</target>
        </trans-unit>
        <trans-unit id="35499217c3dc076a80a3d7b854f65596514d0493" translate="yes" xml:space="preserve">
          <source>The intent is simplicity of use, not power of expression. Paragraphs look like paragraphs (block format), so that they stand out visually, and so that I could run them through &lt;code&gt;fmt&lt;/code&gt; easily to reformat them (that's F7 in my version of &lt;b&gt;vi&lt;/b&gt;, or Esc Q in my version of &lt;b&gt;emacs&lt;/b&gt;). I wanted the translator to always leave the &lt;code&gt;'&lt;/code&gt; and &lt;code&gt;`&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt; quotes alone, in verbatim mode, so I could slurp in a working program, shift it over four spaces, and have it print out, er, verbatim. And presumably in a monospace font.</source>
          <target state="translated">La intenci&amp;oacute;n es la simplicidad de uso, no el poder de expresi&amp;oacute;n. Los p&amp;aacute;rrafos se ven como p&amp;aacute;rrafos (formato de bloque), para que se destaquen visualmente y para que pueda ejecutarlos f&amp;aacute;cilmente en &lt;code&gt;fmt&lt;/code&gt; para reformatearlos (eso es F7 en mi versi&amp;oacute;n de &lt;b&gt;vi&lt;/b&gt; , o Esc Q en mi versi&amp;oacute;n de &lt;b&gt;emacs&lt;/b&gt; ). Yo quer&amp;iacute;a que el traductor siempre dejan el &lt;code&gt;'&lt;/code&gt; y &lt;code&gt;`&lt;/code&gt; y &lt;code&gt;&quot;&lt;/code&gt; citas a solas, en el modo de pie de la letra, por lo que podr&amp;iacute;a sorber en un programa de trabajo, cambiar lo largo de cuatro espacios, y hacer que imprima, er, palabra por palabra. Y, presumiblemente, en un espacio sencillo fuente.</target>
        </trans-unit>
        <trans-unit id="0fe331c074ca976ebd60519539ebf547e9a5979f" translate="yes" xml:space="preserve">
          <source>The intent is to squeeze as much possible information about the likely cause into the limited space of the system exit code. However, as &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; is the value of C's &lt;code&gt;errno&lt;/code&gt;, which can be set by any system call, this means that the value of the exit code used by &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; can be non-predictable, so should not be relied upon, other than to be non-zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ab1ae02bd72d53207c68855ddd39b0273ee3a8" translate="yes" xml:space="preserve">
          <source>The intent is to squeeze as much possible information about the likely cause into the limited space of the system exit code. However, as &lt;code&gt;$!&lt;/code&gt; is the value of C's &lt;code&gt;errno&lt;/code&gt; , which can be set by any system call, this means that the value of the exit code used by &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; can be non-predictable, so should not be relied upon, other than to be non-zero.</source>
          <target state="translated">La intenci&amp;oacute;n es exprimir la mayor cantidad de informaci&amp;oacute;n posible sobre la causa probable en el espacio limitado del c&amp;oacute;digo de salida del sistema. Sin embargo, como &lt;code&gt;$!&lt;/code&gt; es el valor de de C &lt;code&gt;errno&lt;/code&gt; , que puede ser ajustado por cualquier llamada al sistema, esto significa que el valor del c&amp;oacute;digo de salida utilizado por &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; puede ser no predecible, por lo que no se debe confiar en, aparte de ser distinto de cero.</target>
        </trans-unit>
        <trans-unit id="0547c3f088cded7d6e36027ba3384ed9126a4a35" translate="yes" xml:space="preserve">
          <source>The intent is to squeeze as much possible information about the likely cause into the limited space of the system exit code. However, as &lt;code&gt;$!&lt;/code&gt; is the value of C's &lt;code&gt;errno&lt;/code&gt; , which can be set by any system call, this means that the value of the exit code used by &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; can be non-predictable, so should not be relied upon, other than to be non-zero.</source>
          <target state="translated">La intenci&amp;oacute;n es exprimir la mayor cantidad de informaci&amp;oacute;n posible sobre la causa probable en el espacio limitado del c&amp;oacute;digo de salida del sistema. Sin embargo, como &lt;code&gt;$!&lt;/code&gt; es el valor de de C &lt;code&gt;errno&lt;/code&gt; , que puede ser ajustado por cualquier llamada al sistema, esto significa que el valor del c&amp;oacute;digo de salida utilizado por &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; puede ser no predecible, por lo que no se debe confiar en, aparte de ser distinto de cero.</target>
        </trans-unit>
        <trans-unit id="2e91002a8407b92abe1904ddf5c320e2e26254c0" translate="yes" xml:space="preserve">
          <source>The interaction with the Perl compilation happens inside package &lt;code&gt;myint&lt;/code&gt; :</source>
          <target state="translated">La interacci&amp;oacute;n con la compilaci&amp;oacute;n de Perl ocurre dentro del paquete &lt;code&gt;myint&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="aadf28bb5828714b5bb46305e38581c5103da604" translate="yes" xml:space="preserve">
          <source>The interaction with the Perl compilation happens inside package &lt;code&gt;myint&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4116edd722cc9f90eb68f17a977fcbd1367d5c" translate="yes" xml:space="preserve">
          <source>The interactive debugger understands the following commands:</source>
          <target state="translated">El depurador interactivo entiende los siguientes comandos:</target>
        </trans-unit>
        <trans-unit id="99a3cf2098e457c2b3c584e37ad9ed7869d1340e" translate="yes" xml:space="preserve">
          <source>The interested reader might have seen a number of flags that signify encodings or codesets - &lt;code&gt;utf8&lt;/code&gt;, &lt;code&gt;latin1&lt;/code&gt; and &lt;code&gt;ascii&lt;/code&gt;. There seems to be some confusion on what these do, so here is a short comparison:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70d776f0381bce09991021b76dd2d122db7ce29" translate="yes" xml:space="preserve">
          <source>The interesting thing about &lt;code&gt;&amp;amp;&lt;/code&gt; is that you can generate new syntax with it, provided it's in the initial position:</source>
          <target state="translated">Lo interesante de &lt;code&gt;&amp;amp;&lt;/code&gt; es que puedes generar nueva sintaxis con &amp;eacute;l, siempre que est&amp;eacute; en la posici&amp;oacute;n inicial:</target>
        </trans-unit>
        <trans-unit id="2354b426f3be078a3ef57dbce0f8523b4f89323f" translate="yes" xml:space="preserve">
          <source>The interface defined by this module is missing some of the later additions to perl's debugging functionality. As such, this interface should be considered highly experimental and subject to change.</source>
          <target state="translated">A la interfaz definida por este módulo le faltan algunas de las últimas adiciones a la funcionalidad de depuración de Perl.Como tal,esta interfaz debe considerarse altamente experimental y sujeta a cambios.</target>
        </trans-unit>
        <trans-unit id="6bc76db195856b77ae9c9e32f58ddf5271ff9965" translate="yes" xml:space="preserve">
          <source>The interface exposed by this module is very close to the current implementation of restricted hashes. Over time it is expected that this behavior will be extended and the interface abstracted further.</source>
          <target state="translated">La interfaz expuesta por este módulo se acerca mucho a la actual implementación de hashes restringidos.Con el tiempo se espera que este comportamiento se extienda y que la interfaz se abstrae aún más.</target>
        </trans-unit>
        <trans-unit id="25ed6271fa2a1e00048e3f70c7ae05b81e869ba4" translate="yes" xml:space="preserve">
          <source>The interface is a bit odd because this is the result of a quick refactoring. Don't rely on it.</source>
          <target state="translated">La interfaz es un poco extraña porque es el resultado de una rápida refactorización.No te fíes de ello.</target>
        </trans-unit>
        <trans-unit id="4f992c0404449ac096de07bc9c29b6b99091aebe" translate="yes" xml:space="preserve">
          <source>The interface provided by version 2 of this module should be 100% backward compatible with version 1. If you find a difference in the expected behaviour please contact the author (See &lt;a href=&quot;#AUTHOR&quot;&gt;&quot;AUTHOR&quot;&lt;/a&gt;). See &lt;a href=&quot;#GZIP-INTERFACE&quot;&gt;&quot;GZIP INTERFACE&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fb605133e4937943b1ba063015c9eb55c6a1c4" translate="yes" xml:space="preserve">
          <source>The interface provided by version 2 of this module should be 100% backward compatible with version 1. If you find a difference in the expected behaviour please contact the author (See &lt;a href=&quot;#AUTHOR&quot;&gt;AUTHOR&lt;/a&gt;). See &lt;a href=&quot;#GZIP-INTERFACE&quot;&gt;GZIP INTERFACE&lt;/a&gt;</source>
          <target state="translated">La interfaz proporcionada por la versi&amp;oacute;n 2 de este m&amp;oacute;dulo debe ser 100% compatible con la versi&amp;oacute;n 1. Si encuentra una diferencia en el comportamiento esperado, comun&amp;iacute;quese con el autor (Ver &lt;a href=&quot;#AUTHOR&quot;&gt;AUTOR&lt;/a&gt; ). Ver &lt;a href=&quot;#GZIP-INTERFACE&quot;&gt;INTERFAZ GZIP&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="869b0eb21cd8ea8a7cd6e0d3a06abffd6a4f3e9a" translate="yes" xml:space="preserve">
          <source>The interface provides two ways to calculate digests: all-at-once, or in stages. To illustrate, the following short program computes the SHA-256 digest of &quot;hello world&quot; using each approach:</source>
          <target state="translated">La interfaz proporciona dos formas de calcular los compendios:de una sola vez,o por etapas.Para ilustrarlo,el siguiente programa corto calcula el compendio SHA-256 de &quot;hola mundo&quot; usando cada enfoque:</target>
        </trans-unit>
        <trans-unit id="fb22cb5dbe02d4f126e70eb38eba99f572c134f7" translate="yes" xml:space="preserve">
          <source>The interface to Exec in entirely encapsulated within the perl class, there is no need to access the low level methods directly and they are not exported by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506d079f3d8576c485b8b85a9995943fec82c8f8" translate="yes" xml:space="preserve">
          <source>The interface to the arexx.class in entirely encapsulated within the perl class, there is no need to access the low level methods directly and they are not exported by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dedf705c01e5c3576fd3717e147541ecb372f63" translate="yes" xml:space="preserve">
          <source>The internal advisory locking is implemented using Perl's flock() routine. If your system does not support any form of flock(), or if you share your files across NFS, you might wish to use other forms of locking by using modules such as LockFile::Simple which lock a file using a filesystem entry, instead of locking the file descriptor.</source>
          <target state="translated">El bloqueo de asesoramiento interno se implementa usando la rutina de Perl flock().Si su sistema no soporta ninguna forma de flock(),o si comparte sus archivos a través de NFS,puede que desee utilizar otras formas de bloqueo mediante el uso de módulos como LockFile::Simple que bloquean un archivo utilizando una entrada del sistema de archivos,en lugar de bloquear el descriptor del archivo.</target>
        </trans-unit>
        <trans-unit id="b695712dbfa2556923ae8104354e307b6dd7d107" translate="yes" xml:space="preserve">
          <source>The internal structure of version objects is a blessed hash with several components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798a90f8fceb3237e533c15e8087d7887afcfeb7" translate="yes" xml:space="preserve">
          <source>The internal variable for debugging support. The meanings of the various bits are subject to change, but currently indicate:</source>
          <target state="translated">La variable interna para el soporte de depuración.Los significados de los distintos bits están sujetos a cambios,pero actualmente indican:</target>
        </trans-unit>
        <trans-unit id="85c386c4c074fc2a85f669eb89082305e3dd4f12" translate="yes" xml:space="preserve">
          <source>The internals automatically clone any name with characters 128-255 but none 256+ (ie one that could be either in bytes or utf8) into a second entry which is utf8 encoded.</source>
          <target state="translated">Los internos clonan automáticamente cualquier nombre con los caracteres 128-255 pero ninguno 256+(es decir,uno que podría estar en bytes o en utf8)en una segunda entrada que está codificada en utf8.</target>
        </trans-unit>
        <trans-unit id="68038f581434d0080618601485190514733606bb" translate="yes" xml:space="preserve">
          <source>The interpretation of operations and values in Perl sometimes depends on the requirements of the context around the operation or value. There are two major contexts: list and scalar. Certain operations return list values in contexts wanting a list, and scalar values otherwise. If this is true of an operation it will be mentioned in the documentation for that operation. In other words, Perl overloads certain operations based on whether the expected return value is singular or plural. Some words in English work this way, like &quot;fish&quot; and &quot;sheep&quot;.</source>
          <target state="translated">La interpretación de las operaciones y los valores en Perl depende a veces de las exigencias del contexto en torno a la operación o el valor.Hay dos contextos principales:el de lista y el de escala.Ciertas operaciones devuelven valores de lista en contextos que desean una lista,y valores escalares en otros contextos.Si esto es así en una operación,se mencionará en la documentación de esa operación.En otras palabras,Perl sobrecarga ciertas operaciones basándose en si el valor de retorno esperado es singular o plural.Algunas palabras en inglés funcionan de esta manera,como &quot;fish&quot; y &quot;sheep&quot;.</target>
        </trans-unit>
        <trans-unit id="061664239d0f872c4965463ddd59f598a09d06f0" translate="yes" xml:space="preserve">
          <source>The interpretation of the file permission operators &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-W&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; is by default based solely on the mode of the file and the uids and gids of the user. There may be other reasons you can't actually read, write, or execute the file: for example network filesystem access controls, ACLs (access control lists), read-only filesystems, and unrecognized executable formats. Note that the use of these six specific operators to verify if some operation is possible is usually a mistake, because it may be open to race conditions.</source>
          <target state="translated">La interpretaci&amp;oacute;n de los operadores de permisos de archivos &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-W&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; se basa de forma predeterminada &amp;uacute;nicamente en el modo del archivo y los uids y gids del usuario. Puede haber otras razones por las que no pueda leer, escribir o ejecutar el archivo: por ejemplo, controles de acceso al sistema de archivos de red, ACL (listas de control de acceso), sistemas de archivos de solo lectura y formatos ejecutables no reconocidos. Tenga en cuenta que el uso de estos seis operadores espec&amp;iacute;ficos para verificar si alguna operaci&amp;oacute;n es posible suele ser un error, porque puede estar abierto a condiciones de carrera.</target>
        </trans-unit>
        <trans-unit id="de2595dbfaf95d22e9019632865663f297c76092" translate="yes" xml:space="preserve">
          <source>The interpretation of the file permission operators &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-W&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; is by default based solely on the mode of the file and the uids and gids of the user. There may be other reasons you can't actually read, write, or execute the file: for example network filesystem access controls, ACLs (access control lists), read-only filesystems, and unrecognized executable formats. Note that the use of these six specific operators to verify if some operation is possible is usually a mistake, because it may be open to race conditions.</source>
          <target state="translated">La interpretaci&amp;oacute;n de los operadores de permisos de archivos &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;-W&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; se basa de forma predeterminada &amp;uacute;nicamente en el modo del archivo y los uids y gids del usuario. Puede haber otras razones por las que no pueda leer, escribir o ejecutar el archivo: por ejemplo, controles de acceso al sistema de archivos de red, ACL (listas de control de acceso), sistemas de archivos de solo lectura y formatos ejecutables no reconocidos. Tenga en cuenta que el uso de estos seis operadores espec&amp;iacute;ficos para verificar si alguna operaci&amp;oacute;n es posible suele ser un error, porque puede estar abierto a condiciones de carrera.</target>
        </trans-unit>
        <trans-unit id="488736b34ccb462579468e7b97e0ddad7de84d1d" translate="yes" xml:space="preserve">
          <source>The interpretation of the file permission operators &lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;-R&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;, &lt;code&gt;-W&lt;/code&gt;, &lt;code&gt;-x&lt;/code&gt;, and &lt;code&gt;-X&lt;/code&gt; is by default based solely on the mode of the file and the uids and gids of the user. There may be other reasons you can't actually read, write, or execute the file: for example network filesystem access controls, ACLs (access control lists), read-only filesystems, and unrecognized executable formats. Note that the use of these six specific operators to verify if some operation is possible is usually a mistake, because it may be open to race conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e2e01e4adc3fb9225914fc17730078576e41c6" translate="yes" xml:space="preserve">
          <source>The inverse function to &lt;code&gt;pairs&lt;/code&gt;; this function takes a list of &lt;code&gt;ARRAY&lt;/code&gt; references containing two elements each, and returns a flattened list of the two values from each of the pairs, in order. This is notionally equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54a39a0dd2a9db45fcc8606c6b9dc540f8d071d" translate="yes" xml:space="preserve">
          <source>The inverse operation - packing byte contents from a string of hexadecimal digits - is just as easily written. For instance:</source>
          <target state="translated">La operación inversa-empaquetar el contenido de un byte de una cadena de dígitos hexadecimales-se escribe con la misma facilidad.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="8aacdda2a613fe684f7ff0ec49be15c7f7bad342" translate="yes" xml:space="preserve">
          <source>The is the number of bytes that the Storable header occupies.</source>
          <target state="translated">El es el número de bytes que ocupa el encabezamiento del Almacenamiento.</target>
        </trans-unit>
        <trans-unit id="e08f7fe6dcc4a4ede748bb6d3fcab7c9e89b331c" translate="yes" xml:space="preserve">
          <source>The issue of whether to pass the arguments in a hash or a hashref is largely a matter of personal style.</source>
          <target state="translated">La cuestión de si pasar los argumentos en un hachís o en un hachís es en gran parte una cuestión de estilo personal.</target>
        </trans-unit>
        <trans-unit id="1270f1d87441c40c65f184813fb9549f6a05140e" translate="yes" xml:space="preserve">
          <source>The item you want to look up. Nested modules (such as &lt;code&gt;File::Basename&lt;/code&gt; ) are specified either as &lt;code&gt;File::Basename&lt;/code&gt; or &lt;code&gt;File/Basename&lt;/code&gt; . You may also give a descriptive name of a page, such as &lt;code&gt;perlfunc&lt;/code&gt; . For URLs, HTTP and HTTPS are the only kind currently supported.</source>
          <target state="translated">El elemento que desea buscar. Los m&amp;oacute;dulos anidados (como &lt;code&gt;File::Basename&lt;/code&gt; ) se especifican como &lt;code&gt;File::Basename&lt;/code&gt; o &lt;code&gt;File/Basename&lt;/code&gt; . Tambi&amp;eacute;n puede dar un nombre descriptivo de una p&amp;aacute;gina, como &lt;code&gt;perlfunc&lt;/code&gt; . Para las URL, HTTP y HTTPS son los &amp;uacute;nicos tipos admitidos actualmente.</target>
        </trans-unit>
        <trans-unit id="4344e301a9e97fdf3fc9733e6ebe72949a9af633" translate="yes" xml:space="preserve">
          <source>The item you want to look up. Nested modules (such as &lt;code&gt;File::Basename&lt;/code&gt;) are specified either as &lt;code&gt;File::Basename&lt;/code&gt; or &lt;code&gt;File/Basename&lt;/code&gt;. You may also give a descriptive name of a page, such as &lt;code&gt;perlfunc&lt;/code&gt;. For URLs, HTTP and HTTPS are the only kind currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbe0de2b65f06cfcea380e50cf6bef09ae06281" translate="yes" xml:space="preserve">
          <source>The iterator used by &lt;code&gt;each&lt;/code&gt; is attached to the hash or array, and is shared between all iteration operations applied to the same hash or array. Thus all uses of &lt;code&gt;each&lt;/code&gt; on a single hash or array advance the same iterator location. All uses of &lt;code&gt;each&lt;/code&gt; are also subject to having the iterator reset by any use of &lt;code&gt;keys&lt;/code&gt; or &lt;code&gt;values&lt;/code&gt; on the same hash or array, or by the hash (but not array) being referenced in list context. This makes &lt;code&gt;each&lt;/code&gt;-based loops quite fragile: it is easy to arrive at such a loop with the iterator already part way through the object, or to accidentally clobber the iterator state during execution of the loop body. It's easy enough to explicitly reset the iterator before starting a loop, but there is no way to insulate the iterator state used by a loop from the iterator state used by anything else that might execute during the loop body. To avoid these problems, use a &lt;code&gt;foreach&lt;/code&gt; loop rather than &lt;code&gt;while&lt;/code&gt;-&lt;code&gt;each&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b950b023ee8eee0b58c44c704206373f4189c22c" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;&quot;~~&quot;&lt;/code&gt; allows you to override the smart matching logic used by the &lt;code&gt;~~&lt;/code&gt; operator and the switch construct (&lt;code&gt;given&lt;/code&gt; /&lt;code&gt;when&lt;/code&gt; ). See &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;Switch Statements in perlsyn&lt;/a&gt; and &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">La clave &lt;code&gt;&quot;~~&quot;&lt;/code&gt; le permite anular la l&amp;oacute;gica de coincidencia inteligente utilizada por el operador &lt;code&gt;~~&lt;/code&gt; y la construcci&amp;oacute;n del interruptor ( &lt;code&gt;given&lt;/code&gt; / &lt;code&gt;when&lt;/code&gt; ). Consulte &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;Cambiar declaraciones en perlsyn&lt;/a&gt; y &lt;a href=&quot;feature&quot;&gt;funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a2c34ae8224e419d58656178fbc2e7d6c0054d2" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;&quot;~~&quot;&lt;/code&gt; allows you to override the smart matching logic used by the &lt;code&gt;~~&lt;/code&gt; operator and the switch construct (&lt;code&gt;given&lt;/code&gt;/&lt;code&gt;when&lt;/code&gt;). See &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;&quot;Switch Statements&quot; in perlsyn&lt;/a&gt; and &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40c6befa9e830eefbf95715d61be0cceba411db" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;'-X'&lt;/code&gt; is used to specify a subroutine to handle all the filetest operators (&lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , and so on: see &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt; for the full list); it is not possible to overload any filetest operator individually. To distinguish them, the letter following the '-' is passed as the second argument (that is, in the slot that for binary operators is used to pass the second operand).</source>
          <target state="translated">La clave &lt;code&gt;'-X'&lt;/code&gt; se usa para especificar una subrutina para manejar todos los operadores de prueba de archivos ( &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-x&lt;/code&gt; , etc.: vea &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt; para la lista completa); no es posible sobrecargar ning&amp;uacute;n operador de prueba de archivos individualmente. Para distinguirlos, la letra que sigue al '-' se pasa como segundo argumento (es decir, en la ranura que para los operadores binarios se usa para pasar el segundo operando).</target>
        </trans-unit>
        <trans-unit id="d619e5f63abc98b8cfd8901f2a523fddccb94536" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;'-X'&lt;/code&gt; is used to specify a subroutine to handle all the filetest operators (&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;-x&lt;/code&gt;, and so on: see &lt;a href=&quot;perlfunc#-X&quot;&gt;&quot;-X&quot; in perlfunc&lt;/a&gt; for the full list); it is not possible to overload any filetest operator individually. To distinguish them, the letter following the '-' is passed as the second argument (that is, in the slot that for binary operators is used to pass the second operand).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e57e8aa67b22950a3905dc0aca0c46d976bdaa4" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;key&lt;/code&gt; of &lt;code&gt;hv&lt;/code&gt; is deleted at the end of</source>
          <target state="translated">La clave &lt;code&gt;key&lt;/code&gt; de &lt;code&gt;hv&lt;/code&gt; se elimina al final de</target>
        </trans-unit>
        <trans-unit id="39231120b3a0f9f7321946d1dcf4e67b7cbb06d0" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;neg&lt;/code&gt; is used for unary minus to disambiguate it from binary &lt;code&gt;-&lt;/code&gt; .</source>
          <target state="translated">La clave &lt;code&gt;neg&lt;/code&gt; se usa para unario menos para eliminar la ambig&amp;uuml;edad del binario &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8014230ab511707fdf318f6f60f165829ac3a885" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;neg&lt;/code&gt; is used for unary minus to disambiguate it from binary &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af0ef3d95080a656a5a0ae273ae380c9667ee38" translate="yes" xml:space="preserve">
          <source>The key function is</source>
          <target state="translated">La función clave es</target>
        </trans-unit>
        <trans-unit id="890e53c79df507f41db3dd4d31cb915a4367afdd" translate="yes" xml:space="preserve">
          <source>The key here is the &lt;code&gt;nss_delete&lt;/code&gt; call. One workaround for this bug seems to be to create add to the file</source>
          <target state="translated">La clave aqu&amp;iacute; es la llamada &lt;code&gt;nss_delete&lt;/code&gt; . Una soluci&amp;oacute;n para este error parece ser crear agregar al archivo</target>
        </trans-unit>
        <trans-unit id="f07d5f582b98b9cdfa2323f91d8c44e6ee01e73a" translate="yes" xml:space="preserve">
          <source>The key is specified by</source>
          <target state="translated">La clave está especificada por</target>
        </trans-unit>
        <trans-unit id="dbf499b463a1d246f5657c7bd10575193916c7a6" translate="yes" xml:space="preserve">
          <source>The key is specified by &lt;code&gt;keypv&lt;/code&gt; and &lt;code&gt;keylen&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;COPHH_KEY_UTF8&lt;/code&gt; bit set, the key octets are interpreted as UTF-8, otherwise they are interpreted as Latin-1. &lt;code&gt;hash&lt;/code&gt; is a precomputed hash of the key string, or zero if it has not been precomputed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4574cc32e125230b635f70eb51279af8024135" translate="yes" xml:space="preserve">
          <source>The keys allowed in each of these pre-defined references is limited to the names used in the equivalent C structure. So, for example, the $DB_HASH reference will only allow keys called &lt;code&gt;bsize&lt;/code&gt; , &lt;code&gt;cachesize&lt;/code&gt; , &lt;code&gt;ffactor&lt;/code&gt; , &lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;lorder&lt;/code&gt; and &lt;code&gt;nelem&lt;/code&gt; .</source>
          <target state="translated">Las claves permitidas en cada una de estas referencias predefinidas se limitan a los nombres utilizados en la estructura C equivalente. As&amp;iacute;, por ejemplo, la referencia $ DB_HASH ser&amp;aacute; s&amp;oacute;lo permiten llamadas teclas &lt;code&gt;bsize&lt;/code&gt; , &lt;code&gt;cachesize&lt;/code&gt; , &lt;code&gt;ffactor&lt;/code&gt; , &lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;lorder&lt;/code&gt; y &lt;code&gt;nelem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2b4b1e7a4b07bed8f5dd49d279e3a199199b7a2" translate="yes" xml:space="preserve">
          <source>The keys allowed in each of these pre-defined references is limited to the names used in the equivalent C structure. So, for example, the $DB_HASH reference will only allow keys called &lt;code&gt;bsize&lt;/code&gt;, &lt;code&gt;cachesize&lt;/code&gt;, &lt;code&gt;ffactor&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;lorder&lt;/code&gt; and &lt;code&gt;nelem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ed2e67811ac5de5639075023acf0cc2ec381bf" translate="yes" xml:space="preserve">
          <source>The keys in the bottom layer hash with the meanings of their values are:</source>
          <target state="translated">Las claves en el hash de la capa inferior con los significados de sus valores son:</target>
        </trans-unit>
        <trans-unit id="7d244bc64e243794d6821e1a0dcab4a24a9f05ad" translate="yes" xml:space="preserve">
          <source>The keys in the hash with the meanings of their values are:</source>
          <target state="translated">Las claves en el hachís con los significados de sus valores son:</target>
        </trans-unit>
        <trans-unit id="b936421bf8217d2a23b78502c20a19e381f28f92" translate="yes" xml:space="preserve">
          <source>The keys of &lt;code&gt;%-&lt;/code&gt; -like hashes correspond to all buffer names found in the regular expression; the keys of &lt;code&gt;%+&lt;/code&gt; -like hashes list only the names of buffers that have captured (and that are thus associated to defined values).</source>
          <target state="translated">Las claves de hash similares a &lt;code&gt;%-&lt;/code&gt; corresponden a todos los nombres de b&amp;uacute;fer que se encuentran en la expresi&amp;oacute;n regular; las claves de &lt;code&gt;%+&lt;/code&gt; -como hashes enumeran solo los nombres de los b&amp;uacute;feres que han capturado (y que, por lo tanto, est&amp;aacute;n asociados a valores definidos).</target>
        </trans-unit>
        <trans-unit id="997d8f5f7d84196f7ef0d41e7b97b099b732ef37" translate="yes" xml:space="preserve">
          <source>The keys of &lt;code&gt;%-&lt;/code&gt;-like hashes correspond to all buffer names found in the regular expression; the keys of &lt;code&gt;%+&lt;/code&gt;-like hashes list only the names of buffers that have captured (and that are thus associated to defined values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780fac85dedcdee4447dcad5c8a8d6b15a9a2af1" translate="yes" xml:space="preserve">
          <source>The keys of &lt;code&gt;provides&lt;/code&gt; are package names that can be found within the distribution. If a package name key is provided, it must have a Map with the following valid subkeys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108fc2066c755818e3590f4d9c35e36d3cb855db" translate="yes" xml:space="preserve">
          <source>The keys of the &lt;code&gt;%+&lt;/code&gt; hash list only the names of buffers that have captured (and that are thus associated to defined values).</source>
          <target state="translated">Las claves del &lt;code&gt;%+&lt;/code&gt; hash enumeran solo los nombres de los b&amp;uacute;feres que han capturado (y que, por lo tanto, est&amp;aacute;n asociados a valores definidos).</target>
        </trans-unit>
        <trans-unit id="c4094ef8d037d1a4f33eb2e2deddaec00fa1265e" translate="yes" xml:space="preserve">
          <source>The keys of the &lt;code&gt;%-&lt;/code&gt; hash correspond to all buffer names found in the regular expression.</source>
          <target state="translated">Las claves del &lt;code&gt;%-&lt;/code&gt; hash corresponden a todos los nombres de b&amp;uacute;fer que se encuentran en la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="cfdae1829d96426970bd25497a8e45b42e9a79f4" translate="yes" xml:space="preserve">
          <source>The keys of the hash will be the names of the entries in the directory. Reading a value from the hash will be the result of calling &lt;code&gt;File::stat::lstat&lt;/code&gt; . Deleting an element from the hash will delete the corresponding file or subdirectory, provided that &lt;code&gt;DIR_UNLINK&lt;/code&gt; is included in the &lt;code&gt;OPTIONS&lt;/code&gt; .</source>
          <target state="translated">Las claves del hash ser&amp;aacute;n los nombres de las entradas en el directorio. Leer un valor del hash ser&amp;aacute; el resultado de llamar a &lt;code&gt;File::stat::lstat&lt;/code&gt; . Eliminar un elemento del hash eliminar&amp;aacute; el archivo o subdirectorio correspondiente, siempre que &lt;code&gt;DIR_UNLINK&lt;/code&gt; est&amp;eacute; incluido en las &lt;code&gt;OPTIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7764c6575d016ad4721493c64443d8e32ddb0474" translate="yes" xml:space="preserve">
          <source>The keys of the hash will be the names of the entries in the directory. Reading a value from the hash will be the result of calling &lt;code&gt;File::stat::lstat&lt;/code&gt;. Deleting an element from the hash will delete the corresponding file or subdirectory, provided that &lt;code&gt;DIR_UNLINK&lt;/code&gt; is included in the &lt;code&gt;OPTIONS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055987f11411d4374756daa33a787f39e5c8e2e5" translate="yes" xml:space="preserve">
          <source>The keys of this hash are the names of all the known subroutines. Each value is an encoded string that has the sprintf(3) format &lt;code&gt;(&quot;%s:%d-%d&quot;, filename, fromline, toline)&lt;/code&gt; .</source>
          <target state="translated">Las claves de este hash son los nombres de todas las subrutinas conocidas. Cada valor es una cadena codificada que tiene el formato sprintf (3) &lt;code&gt;(&quot;%s:%d-%d&quot;, filename, fromline, toline)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99eed0ed09082d94a43f5eb252bf07930e49246a" translate="yes" xml:space="preserve">
          <source>The keys of this hash are the names of all the known subroutines. Each value is an encoded string that has the sprintf(3) format &lt;code&gt;(&quot;%s:%d-%d&quot;, filename, fromline, toline)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3904530800da7eda131d2f33bddbe47a09140ae0" translate="yes" xml:space="preserve">
          <source>The kind of computer you&amp;rsquo;re working on, where one &amp;ldquo;kind of computer&amp;rdquo; means all those computers sharing a compatible machine language. Since Perl programs are (typically) simple text files, not executable images, a Perl program is much less sensitive to the architecture it&amp;rsquo;s running on than programs in other languages, such as C, that are &lt;b&gt;compiled&lt;/b&gt; into machine code. See also &lt;b&gt;platform&lt;/b&gt; and &lt;b&gt;operating system&lt;/b&gt;.</source>
          <target state="translated">El tipo de computadora en la que est&amp;aacute; trabajando, donde un &quot;tipo de computadora&quot; significa todas aquellas computadoras que comparten un lenguaje de m&amp;aacute;quina compatible. Dado que los programas Perl son (t&amp;iacute;picamente) archivos de texto simples, no im&amp;aacute;genes ejecutables, un programa Perl es mucho menos sensible a la arquitectura en la que se ejecuta que los programas en otros lenguajes, como C, que se &lt;b&gt;compilan&lt;/b&gt; en c&amp;oacute;digo m&amp;aacute;quina. Consulte tambi&amp;eacute;n &lt;b&gt;plataforma&lt;/b&gt; y &lt;b&gt;sistema operativo&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="af5d08a24c9445659f44e97ac90d397b8dd843c2" translate="yes" xml:space="preserve">
          <source>The known import symbols are the &lt;code&gt;:gzip_external&lt;/code&gt; , &lt;code&gt;:gzip_read_open&lt;/code&gt; , and &lt;code&gt;:gzip_write_open&lt;/code&gt; . Anything else is not recognized.</source>
          <target state="translated">Los s&amp;iacute;mbolos de importaci&amp;oacute;n conocidos son el &lt;code&gt;:gzip_external&lt;/code&gt; , &lt;code&gt;:gzip_read_open&lt;/code&gt; , y &lt;code&gt;:gzip_write_open&lt;/code&gt; . Cualquier otra cosa no se reconoce.</target>
        </trans-unit>
        <trans-unit id="f60d39e599c1ed70fbcd2d9685b7a2c305ef74b7" translate="yes" xml:space="preserve">
          <source>The known import symbols are the &lt;code&gt;:gzip_external&lt;/code&gt;, &lt;code&gt;:gzip_read_open&lt;/code&gt;, and &lt;code&gt;:gzip_write_open&lt;/code&gt;. Anything else is not recognized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad665994ad3405e05efc579c556de49d4423595" translate="yes" xml:space="preserve">
          <source>The label of the statement or block the OP is the start of, if any.</source>
          <target state="translated">La etiqueta de la declaración o el bloqueo de la OP es el comienzo de,si lo hay.</target>
        </trans-unit>
        <trans-unit id="147bc8ea909cecad4fb730859bb2907f9623910d" translate="yes" xml:space="preserve">
          <source>The lack of processing of &lt;code&gt;\\&lt;/code&gt; creates specific restrictions on the post-processed text. If the delimiter is &lt;code&gt;/&lt;/code&gt;, one cannot get the combination &lt;code&gt;\/&lt;/code&gt; into the result of this step. &lt;code&gt;/&lt;/code&gt; will finish the regular expression, &lt;code&gt;\/&lt;/code&gt; will be stripped to &lt;code&gt;/&lt;/code&gt; on the previous step, and &lt;code&gt;\\/&lt;/code&gt; will be left as is. Because &lt;code&gt;/&lt;/code&gt; is equivalent to &lt;code&gt;\/&lt;/code&gt; inside a regular expression, this does not matter unless the delimiter happens to be character special to the RE engine, such as in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s*foo*bar*&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m[foo]&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;?foo?&lt;/code&gt; ; or an alphanumeric char, as in:</source>
          <target state="translated">La falta de procesamiento de &lt;code&gt;\\&lt;/code&gt; crea restricciones espec&amp;iacute;ficas sobre el texto posprocesado . Si el delimitador es &lt;code&gt;/&lt;/code&gt; , no se puede obtener la combinaci&amp;oacute;n &lt;code&gt;\/&lt;/code&gt; en el resultado de este paso. &lt;code&gt;/&lt;/code&gt; terminar&amp;aacute; la expresi&amp;oacute;n regular, &lt;code&gt;\/&lt;/code&gt; se eliminar&amp;aacute; a &lt;code&gt;/&lt;/code&gt; en el paso anterior y &lt;code&gt;\\/&lt;/code&gt; se dejar&amp;aacute; como est&amp;aacute;. Dado que &lt;code&gt;/&lt;/code&gt; es equivalente a &lt;code&gt;\/&lt;/code&gt; dentro de una expresi&amp;oacute;n regular, esto no importa a menos que el delimitador sea un car&amp;aacute;cter especial para el motor RE, como en &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s*foo*bar*&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m[foo]&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;?foo?&lt;/code&gt; ; o un car&amp;aacute;cter alfanum&amp;eacute;rico, como en:</target>
        </trans-unit>
        <trans-unit id="552da7166581dad2c401fcf7fae959ad601a8345" translate="yes" xml:space="preserve">
          <source>The lack of processing of &lt;code&gt;\\&lt;/code&gt; creates specific restrictions on the post-processed text. If the delimiter is &lt;code&gt;/&lt;/code&gt;, one cannot get the combination &lt;code&gt;\/&lt;/code&gt; into the result of this step. &lt;code&gt;/&lt;/code&gt; will finish the regular expression, &lt;code&gt;\/&lt;/code&gt; will be stripped to &lt;code&gt;/&lt;/code&gt; on the previous step, and &lt;code&gt;\\/&lt;/code&gt; will be left as is. Because &lt;code&gt;/&lt;/code&gt; is equivalent to &lt;code&gt;\/&lt;/code&gt; inside a regular expression, this does not matter unless the delimiter happens to be character special to the RE engine, such as in &lt;code&gt;s*foo*bar*&lt;/code&gt;, &lt;code&gt;m[foo]&lt;/code&gt;, or &lt;code&gt;m?foo?&lt;/code&gt;; or an alphanumeric char, as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc7f7d746e559a86f68b3adb7a4d97f4b51af95" translate="yes" xml:space="preserve">
          <source>The langinfo() function is just a wrapper for the C nl_langinfo() interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11a57a26c23b0ae665c99897a59d6791986dbc2" translate="yes" xml:space="preserve">
          <source>The langinfo() function queries various locale information that can be used to localize output and user interfaces. It uses the current underlying locale, regardless of whether or not it was called from within the scope of &lt;code&gt;use locale&lt;/code&gt;. The langinfo() function requires one numeric argument that identifies the locale constant to query: if no argument is supplied, &lt;code&gt;$_&lt;/code&gt; is used. The numeric constants appropriate to be used as arguments are exportable from I18N::Langinfo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329bfa336d3d2c69ff7cf1363d051c82b14482d1" translate="yes" xml:space="preserve">
          <source>The langinfo() function queries various locale information that can be used to localize output and user interfaces. The langinfo() requires one numeric argument that identifies the locale constant to query: if no argument is supplied, &lt;code&gt;$_&lt;/code&gt; is used. The numeric constants appropriate to be used as arguments are exportable from I18N::Langinfo.</source>
          <target state="translated">La funci&amp;oacute;n langinfo () consulta diversa informaci&amp;oacute;n local que se puede utilizar para localizar la salida y las interfaces de usuario. Langinfo () requiere un argumento num&amp;eacute;rico que identifique la constante local a consultar: si no se proporciona ning&amp;uacute;n argumento, se usa &lt;code&gt;$_&lt;/code&gt; . Las constantes num&amp;eacute;ricas apropiadas para ser utilizadas como argumentos se pueden exportar desde I18N :: Langinfo.</target>
        </trans-unit>
        <trans-unit id="4ed86afb0e8b9f19c52713fc505ca8e2e35f2532" translate="yes" xml:space="preserve">
          <source>The langinfo() is just a wrapper for the C nl_langinfo() interface.</source>
          <target state="translated">El langinfo()es sólo un envoltorio para la interfaz C nl_langinfo().</target>
        </trans-unit>
        <trans-unit id="5d6f822e607c368c541adb8e9be9fa017016c7dd" translate="yes" xml:space="preserve">
          <source>The language is intended to be practical (easy to use, efficient, complete) rather than beautiful (tiny, elegant, minimal). It combines (in the author's opinion, anyway) some of the best features of &lt;b&gt;sed&lt;/b&gt;, &lt;b&gt;awk&lt;/b&gt;, and &lt;b&gt;sh&lt;/b&gt;, making it familiar and easy to use for Unix users to whip up quick solutions to annoying problems. Its general-purpose programming facilities support procedural, functional, and object-oriented programming paradigms, making Perl a comfortable language for the long haul on major projects, whatever your bent.</source>
          <target state="translated">El lenguaje est&amp;aacute; destinado a ser pr&amp;aacute;ctico (f&amp;aacute;cil de usar, eficiente, completo) en lugar de hermoso (diminuto, elegante, m&amp;iacute;nimo). Combina (en opini&amp;oacute;n del autor, de todos modos) algunas de las mejores caracter&amp;iacute;sticas de &lt;b&gt;sed&lt;/b&gt; , &lt;b&gt;awk&lt;/b&gt; y &lt;b&gt;sh&lt;/b&gt; , lo que lo hace familiar y f&amp;aacute;cil de usar para que los usuarios de Unix encuentren soluciones r&amp;aacute;pidas a problemas molestos. Sus facilidades de programaci&amp;oacute;n de prop&amp;oacute;sito general admiten paradigmas de programaci&amp;oacute;n procedimentales, funcionales y orientados a objetos, lo que convierte a Perl en un lenguaje c&amp;oacute;modo para el largo plazo en proyectos importantes, cualquiera que sea su inclinaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="80a9351ce80597f624479310f1723e625f630d11" translate="yes" xml:space="preserve">
          <source>The language is intended to be practical (easy to use, efficient, complete) rather than beautiful (tiny, elegant, minimal). Its major features are that it's easy to use, supports both procedural and object-oriented (OO) programming, has powerful built-in support for text processing, and has one of the world's most impressive collections of third-party modules.</source>
          <target state="translated">El lenguaje pretende ser práctico (fácil de usar,eficiente,completo)más que bello (diminuto,elegante,mínimo).Sus principales características son que es fácil de usar,admite tanto la programación de procedimientos como la orientada a objetos (OO),tiene un poderoso soporte incorporado para el procesamiento de textos,y tiene una de las colecciones más impresionantes del mundo de módulos de terceros.</target>
        </trans-unit>
        <trans-unit id="80efcc67009b4f458fbcd0e166207fe80337c34a" translate="yes" xml:space="preserve">
          <source>The language used is chosen from the loc_lang call. If a lookup is not possible, the i-default language will be used. If the lookup is not in the i-default language, then the key will be returned.</source>
          <target state="translated">El lenguaje usado se elige de la llamada loc_lang.Si no es posible realizar una búsqueda,se utilizará el lenguaje i-default.Si la búsqueda no está en el lenguaje i-default,entonces la clave será devuelta.</target>
        </trans-unit>
        <trans-unit id="fba6e11da7ba55d0215680ecc246683e4db3e510" translate="yes" xml:space="preserve">
          <source>The large file compilation environment is obtained with</source>
          <target state="translated">El entorno de compilación de archivos grandes se obtiene con</target>
        </trans-unit>
        <trans-unit id="9d7ccfee30c3456085edda4007d3ffab9032209b" translate="yes" xml:space="preserve">
          <source>The largest acceptable code point is the Unicode maximum 0x10FFFF, and must not be a surrogate nor a non-character code point. Thus this excludes any code point from Perl's extended UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0842cd9650e7d459b2b787beb02fa153564ea6" translate="yes" xml:space="preserve">
          <source>The largest acceptable code point is the Unicode maximum 0x10FFFF. This differs from &lt;code&gt;&lt;a href=&quot;#isSTRICT_UTF8_CHAR&quot;&gt;&quot;isSTRICT_UTF8_CHAR&quot;&lt;/a&gt;&lt;/code&gt; only in that it accepts non-character code points. This corresponds to &lt;a href=&quot;http://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode Corrigendum #9&lt;/a&gt;. which said that non-character code points are merely discouraged rather than completely forbidden in open interchange. See &lt;a href=&quot;perlunicode#Noncharacter-code-points&quot;&gt;&quot;Noncharacter code points&quot; in perlunicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d6bb98bd06991d398e374c2330c9668cfcd02" translate="yes" xml:space="preserve">
          <source>The largest acceptable code point is the Unicode maximum 0x10FFFF. This differs from &lt;code&gt;&lt;a href=&quot;#isSTRICT_UTF8_CHAR&quot;&gt;&quot;isSTRICT_UTF8_CHAR&quot;&lt;/a&gt;&lt;/code&gt; only in that it accepts non-character code points. This corresponds to &lt;a href=&quot;https://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode Corrigendum #9&lt;/a&gt;. which said that non-character code points are merely discouraged rather than completely forbidden in open interchange. See &lt;a href=&quot;perlunicode#Noncharacter-code-points&quot;&gt;&quot;Noncharacter code points&quot; in perlunicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c14ad6f7057f3647ab0ef224e2d72569a519808" translate="yes" xml:space="preserve">
          <source>The largest code point that is representable in UTF-EBCDIC is U+7FFF_FFFF. If you do &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; on a larger value, a runtime error (similar to division by 0) will happen.</source>
          <target state="translated">El punto de c&amp;oacute;digo m&amp;aacute;s grande que se puede representar en UTF-EBCDIC es U + 7FFF_FFFF. Si hace &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; en un valor mayor, ocurrir&amp;aacute; un error de tiempo de ejecuci&amp;oacute;n (similar a la divisi&amp;oacute;n por 0).</target>
        </trans-unit>
        <trans-unit id="81c48ef57866e1c8154c2bdc64ad152dcbc81938" translate="yes" xml:space="preserve">
          <source>The largest code point that is representable in UTF-EBCDIC is U+7FFF_FFFF. If you try to pack a larger value into a character, a runtime error (similar to division by 0) will happen.</source>
          <target state="translated">El punto de código más grande que es representable en UTF-EBCDIC es U+7FFF_FFFF.Si intentas empaquetar un valor mayor en un carácter,se producirá un error en tiempo de ejecución (similar a la división por 0).</target>
        </trans-unit>
        <trans-unit id="e2cfb7719205bc05d873fbbc8977b16754d06f9e" translate="yes" xml:space="preserve">
          <source>The last &lt;b&gt;filehandle&lt;/b&gt; that was designated with &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select(FILEHANDLE)&lt;/a&gt;&lt;/code&gt;; &lt;code&gt;STDOUT&lt;/code&gt; , if no filehandle has been selected.</source>
          <target state="translated">El &amp;uacute;ltimo &lt;b&gt;gestor de archivo&lt;/b&gt; que se design&amp;oacute; con &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; ; &lt;code&gt;STDOUT&lt;/code&gt; , si no se ha seleccionado ning&amp;uacute;n identificador de archivo.</target>
        </trans-unit>
        <trans-unit id="3778b44d76009b0ef5e1852751bc0831ec54a4e5" translate="yes" xml:space="preserve">
          <source>The last &lt;b&gt;filehandle&lt;/b&gt; that was designated with &lt;code&gt;select(FILEHANDLE)&lt;/code&gt;; &lt;code&gt;STDOUT&lt;/code&gt;, if no filehandle has been selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37441ece1fc3c98a0c6e1bb548dacae86d8fdd9" translate="yes" xml:space="preserve">
          <source>The last and final version of PA-RISC is 2.0, HP no longer sells any system with these CPU's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544feb1340389177d3430ba94574fe7a8a59484b" translate="yes" xml:space="preserve">
          <source>The last argument is always considered to be the file portion. Since &lt;code&gt;catfile()&lt;/code&gt; uses &lt;code&gt;catdir()&lt;/code&gt; (see above) for the concatenation of the directory portions (if any), the following with regard to relative and absolute paths is true:</source>
          <target state="translated">El &amp;uacute;ltimo argumento siempre se considera la parte del archivo. Dado que &lt;code&gt;catfile()&lt;/code&gt; usa &lt;code&gt;catdir()&lt;/code&gt; (ver arriba) para la concatenaci&amp;oacute;n de las partes del directorio (si las hay), lo siguiente con respecto a las rutas relativas y absolutas es cierto:</target>
        </trans-unit>
        <trans-unit id="3d5ec4d10744144f22c4f4ea812b28436c8dedd9" translate="yes" xml:space="preserve">
          <source>The last example illustrates another feature of threads. You can spawn off several threads using the same subroutine. Each thread executes the same subroutine, but in a separate thread with a separate environment and potentially separate arguments.</source>
          <target state="translated">El último ejemplo ilustra otra característica de los hilos.Puedes crear varios hilos usando la misma subrutina.Cada hilo ejecuta la misma subrutina,pero en un hilo separado con un entorno separado y argumentos potencialmente separados.</target>
        </trans-unit>
        <trans-unit id="3a9ec3805e1d8d03ada9f35c7b038f53ba566eb8" translate="yes" xml:space="preserve">
          <source>The last example is very slow and outputs extra progress indicators that break the alignment of the result.</source>
          <target state="translated">El último ejemplo es muy lento y produce indicadores de progreso adicionales que rompen la alineación del resultado.</target>
        </trans-unit>
        <trans-unit id="d7140144abdabb3a340f6e7a9626f45a3f6e90a9" translate="yes" xml:space="preserve">
          <source>The last example points out that character classes are like alternations of characters. At a given character position, the first alternative that allows the regexp match to succeed will be the one that matches.</source>
          <target state="translated">El último ejemplo señala que las clases de personajes son como alternancias de personajes.En una posición de personaje dada,la primera alternativa que permite que la coincidencia de regexp tenga éxito será la que coincida.</target>
        </trans-unit>
        <trans-unit id="8ff092050a74224fa6cfcc69192829226bfd39ef" translate="yes" xml:space="preserve">
          <source>The last example should print:</source>
          <target state="translated">El último ejemplo debería imprimirse:</target>
        </trans-unit>
        <trans-unit id="d1b1f35817845b0ebf71ac4a0203b5b76bf2839d" translate="yes" xml:space="preserve">
          <source>The last example shows a match with an &lt;code&gt;'i'&lt;/code&gt;&lt;b&gt;modifier&lt;/b&gt;, which makes the match case-insensitive.</source>
          <target state="translated">El &amp;uacute;ltimo ejemplo muestra una coincidencia con un &lt;b&gt;modificador &lt;/b&gt; &lt;code&gt;'i'&lt;/code&gt; , que hace que la coincidencia no distinga entre may&amp;uacute;sculas y min&amp;uacute;sculas.&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e71d02e5faff1a1d5185411ef0df70f32d8f6d20" translate="yes" xml:space="preserve">
          <source>The last example shows that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; can use other delimiters, such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}{}&lt;/a&gt;&lt;/code&gt;, and even &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}//&lt;/a&gt;&lt;/code&gt;. If single quotes are used &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s'''&lt;/a&gt;&lt;/code&gt;, then the regex and replacement are treated as single-quoted strings.</source>
          <target state="translated">El &amp;uacute;ltimo ejemplo muestra que &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; puede usar otros delimitadores, como &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s!!!&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}{}&lt;/a&gt;&lt;/code&gt; , e incluso &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s{}//&lt;/a&gt;&lt;/code&gt; . Si se utilizan comillas simples &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s'''&lt;/a&gt;&lt;/code&gt; , la expresi&amp;oacute;n regular y el reemplazo se tratan como cadenas entre comillas simples.</target>
        </trans-unit>
        <trans-unit id="1c93c3433d587d711bbae225f518d07bf79a7bfc" translate="yes" xml:space="preserve">
          <source>The last example shows that &lt;code&gt;s///&lt;/code&gt; can use other delimiters, such as &lt;code&gt;s!!!&lt;/code&gt; and &lt;code&gt;s{}{}&lt;/code&gt;, and even &lt;code&gt;s{}//&lt;/code&gt;. If single quotes are used &lt;code&gt;s'''&lt;/code&gt;, then the regex and replacement are treated as single-quoted strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301cab1c29ad0c90c0fe8b5c51d14a74f03d135a" translate="yes" xml:space="preserve">
          <source>The last form sets the error returned by future calls to &lt;code&gt;fileLastError()&lt;/code&gt; and should not be used often. &lt;code&gt;$uError&lt;/code&gt; must be a numeric error code. Also returns the dual-valued version of &lt;code&gt;$uError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38175234fbd8da1fcb9cc33577b554c9cf1a8cdf" translate="yes" xml:space="preserve">
          <source>The last four modifiers listed above, added in Perl 5.14, control the character set rules, but &lt;code&gt;/a&lt;/code&gt; is the only one you are likely to want to specify explicitly; the other three are selected automatically by various pragmas.</source>
          <target state="translated">Los &amp;uacute;ltimos cuatro modificadores enumerados anteriormente, agregados en Perl 5.14, controlan las reglas del juego de caracteres, pero &lt;code&gt;/a&lt;/code&gt; es el &amp;uacute;nico que probablemente desee especificar expl&amp;iacute;citamente; los otros tres son seleccionados autom&amp;aacute;ticamente por varios pragmas.</target>
        </trans-unit>
        <trans-unit id="5b14495e6536f39321b81d2ad45a9b35a4c183b7" translate="yes" xml:space="preserve">
          <source>The last is particularly useful because it knows about machine-dependent architectures. The &lt;code&gt;lib.pm&lt;/code&gt; pragmatic module was first included with the 5.002 release of Perl.</source>
          <target state="translated">El &amp;uacute;ltimo es particularmente &amp;uacute;til porque conoce las arquitecturas dependientes de la m&amp;aacute;quina. El m&amp;oacute;dulo pragm&amp;aacute;tico &lt;code&gt;lib.pm&lt;/code&gt; se incluy&amp;oacute; por primera vez con la versi&amp;oacute;n 5.002 de Perl.</target>
        </trans-unit>
        <trans-unit id="dee33a8bbee7fed8c390da45a40b2881511f80ec" translate="yes" xml:space="preserve">
          <source>The last item listed (SUNWhea in this example) is the package you need.</source>
          <target state="translated">El último artículo listado (SUNWhea en este ejemplo)es el paquete que necesitas.</target>
        </trans-unit>
        <trans-unit id="249e46d8e31e329b6f35d0380e06e9e88206bbb4" translate="yes" xml:space="preserve">
          <source>The last order date for HP 9000 systems was December 31, 2008.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f01afddbe80c4c268f0bac95652fd735743f86" translate="yes" xml:space="preserve">
          <source>The last rites performed by a parent &lt;b&gt;process&lt;/b&gt; on behalf of a deceased child process so that it doesn&amp;rsquo;t remain a &lt;b&gt;zombie&lt;/b&gt;. See the &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt; function calls.</source>
          <target state="translated">Los &amp;uacute;ltimos ritos realizados por un padre &lt;b&gt;procesan&lt;/b&gt; en nombre de un ni&amp;ntilde;o fallecido para que no siga siendo un &lt;b&gt;zombi&lt;/b&gt; . Vea las llamadas a las funciones &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57c0ac80818903e3f90bc72e811a2effb575b793" translate="yes" xml:space="preserve">
          <source>The last rites performed by a parent &lt;b&gt;process&lt;/b&gt; on behalf of a deceased child process so that it doesn&amp;rsquo;t remain a &lt;b&gt;zombie&lt;/b&gt;. See the &lt;code&gt;wait&lt;/code&gt; and &lt;code&gt;waitpid&lt;/code&gt; function calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc5a9dc56cbe77d2375a5e43361dd33676d7edc" translate="yes" xml:space="preserve">
          <source>The last three slots are a recent addition, and for source code compatibility they are only checked for if one of the three flags MGf_COPY, MGf_DUP or MGf_LOCAL is set in mg_flags. This means that most code can continue declaring a vtable as a 5-element value. These three are currently used exclusively by the threading code, and are highly subject to change.</source>
          <target state="translated">Los últimos tres slots son una adición reciente,y para la compatibilidad del código fuente sólo se comprueban si una de las tres banderas MGf,MGf_DUP o MGf_LOCAL está puesta en mg_flags.Esto significa que la mayoría del código puede seguir declarando un vtable como un valor de 5 elementos.Estos tres son actualmente usados exclusivamente por el código de rosca,y están altamente sujetos a cambios.</target>
        </trans-unit>
        <trans-unit id="0f2130944a7df2b125d5d6b5739b2f67242c3907" translate="yes" xml:space="preserve">
          <source>The last time the test program passed, in seconds from the epoch.</source>
          <target state="translated">La última vez que el programa de pruebas pasó,en segundos de la época.</target>
        </trans-unit>
        <trans-unit id="21878c9b3f2934bab56f2ab1ab4a5f355bfffef3" translate="yes" xml:space="preserve">
          <source>The last time the test suite failed, in seconds from the epoch.</source>
          <target state="translated">La última vez que el conjunto de pruebas falló,en segundos de la época.</target>
        </trans-unit>
        <trans-unit id="c8d2323b355b183370e8260c625d724458199602" translate="yes" xml:space="preserve">
          <source>The last topic of Part 1 briefly covers how regexps are used in Perl programs. Where do they fit into Perl syntax?</source>
          <target state="translated">El último tema de la primera parte cubre brevemente cómo se usan los regexps en los programas Perl.¿Dónde encajan en la sintaxis de Perl?</target>
        </trans-unit>
        <trans-unit id="b9c1bf499a546862f7d3dd462a65d36e8e01021a" translate="yes" xml:space="preserve">
          <source>The last two are a little tricky. In &lt;code&gt;[\$x]&lt;/code&gt; , the backslash protects the dollar sign, so the character class has two members &lt;code&gt;$&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; . In &lt;code&gt;[\\$x]&lt;/code&gt; , the backslash is protected, so &lt;code&gt;$x&lt;/code&gt; is treated as a variable and substituted in double quote fashion.</source>
          <target state="translated">Los dos &amp;uacute;ltimos son un poco complicados. En &lt;code&gt;[\$x]&lt;/code&gt; , la barra invertida protege el signo de d&amp;oacute;lar, por lo que la clase de caracteres tiene dos miembros &lt;code&gt;$&lt;/code&gt; y &lt;code&gt;x&lt;/code&gt; . En &lt;code&gt;[\\$x]&lt;/code&gt; , la barra invertida est&amp;aacute; protegida, por lo que &lt;code&gt;$x&lt;/code&gt; se trata como una variable y se sustituye entre comillas dobles.</target>
        </trans-unit>
        <trans-unit id="8da4297e9e11b0bed733e96e0a5ce5a0d837c05e" translate="yes" xml:space="preserve">
          <source>The last two are a little tricky. In &lt;code&gt;[\$x]&lt;/code&gt;, the backslash protects the dollar sign, so the character class has two members &lt;code&gt;'$'&lt;/code&gt; and &lt;code&gt;'x'&lt;/code&gt;. In &lt;code&gt;[\\$x]&lt;/code&gt;, the backslash is protected, so &lt;code&gt;$x&lt;/code&gt; is treated as a variable and substituted in double quote fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a00c9f7ecacbf4d6fa87dfc5eecfd61397b17fd" translate="yes" xml:space="preserve">
          <source>The last two constructs may appear unintuitive to most people. The first repeatedly grows a string, whereas the second allocates a large chunk of memory in one go. On some systems, the second is more efficient than the first.</source>
          <target state="translated">Las dos últimas construcciones pueden parecer poco intuitivas para la mayoría de la gente.La primera hace crecer repetidamente una cuerda,mientras que la segunda asigna una gran cantidad de memoria de una sola vez.En algunos sistemas,el segundo es más eficiente que el primero.</target>
        </trans-unit>
        <trans-unit id="701c321a0a2054ebe884423f3ddbe3fca4e7d084" translate="yes" xml:space="preserve">
          <source>The last two examples in each block show the pipe as &quot;list form&quot;, which is not yet supported on all platforms. (If your platform has a real &lt;a href=&quot;#fork&quot;&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/a&gt;, such as Linux and macOS, you can use the list form; it also works on Windows with Perl 5.22 or later.) You would want to use the list form of the pipe so you can pass literal arguments to the command without risk of the shell interpreting any shell metacharacters in them. However, this also bars you from opening pipes to commands that intentionally contain shell metacharacters, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3180c758450e8b48f9775fac7e74a8e6da633b" translate="yes" xml:space="preserve">
          <source>The last two examples in each block show the pipe as &quot;list form&quot;, which is not yet supported on all platforms. A good rule of thumb is that if your platform has a real &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; (in other words, if your platform is Unix, including Linux and MacOS X), you can use the list form. You would want to use the list form of the pipe so you can pass literal arguments to the command without risk of the shell interpreting any shell metacharacters in them. However, this also bars you from opening pipes to commands that intentionally contain shell metacharacters, such as:</source>
          <target state="translated">Los dos &amp;uacute;ltimos ejemplos de cada bloque muestran la tuber&amp;iacute;a como &quot;forma de lista&quot;, que a&amp;uacute;n no es compatible con todas las plataformas. Una buena regla general es que si su plataforma tiene una &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; real () (en otras palabras, si su plataforma es Unix, incluyendo Linux y MacOS X), puede usar el formulario de lista. Deber&amp;iacute;a usar la forma de lista de la tuber&amp;iacute;a para poder pasar argumentos literales al comando sin riesgo de que el shell interprete los metacaracteres del shell en ellos. Sin embargo, esto tambi&amp;eacute;n le impide abrir tuber&amp;iacute;as a comandos que contienen intencionalmente metacaracteres de shell, como:</target>
        </trans-unit>
        <trans-unit id="224277da0631dd2948d98eac0e58b508ae236071" translate="yes" xml:space="preserve">
          <source>The last two examples in each block show the pipe as &quot;list form&quot;, which is not yet supported on all platforms. A good rule of thumb is that if your platform has a real &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; (in other words, if your platform is Unix, including Linux and MacOS X), you can use the list form. You would want to use the list form of the pipe so you can pass literal arguments to the command without risk of the shell interpreting any shell metacharacters in them. However, this also bars you from opening pipes to commands that intentionally contain shell metacharacters, such as:</source>
          <target state="translated">Los dos &amp;uacute;ltimos ejemplos de cada bloque muestran la tuber&amp;iacute;a como &quot;forma de lista&quot;, que a&amp;uacute;n no es compatible con todas las plataformas. Una buena regla general es que si su plataforma tiene una &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; real () (en otras palabras, si su plataforma es Unix, incluyendo Linux y MacOS X), puede usar el formulario de lista. Deber&amp;iacute;a usar la forma de lista de la tuber&amp;iacute;a para poder pasar argumentos literales al comando sin riesgo de que el shell interprete los metacaracteres del shell en ellos. Sin embargo, esto tambi&amp;eacute;n le impide abrir tuber&amp;iacute;as a comandos que contienen intencionalmente metacaracteres de shell, como:</target>
        </trans-unit>
        <trans-unit id="bb538ba5316dfdb33cebda21455c3214d556eb70" translate="yes" xml:space="preserve">
          <source>The last two were added in Perl 5.22.</source>
          <target state="translated">Los dos últimos se añadieron en Perl 5.22.</target>
        </trans-unit>
        <trans-unit id="631d7a78fc9992a33bb8f42345d827210e402509" translate="yes" xml:space="preserve">
          <source>The last type of L structure is for links to/within Pod documents. It is the most complex because it can have a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea40dd6a00c5982372bccbdaaeeb63948e0cf1b4" translate="yes" xml:space="preserve">
          <source>The later gives you some idea of what failed. It also makes it easier to find the test in your script, simply search for &quot;simple exponential&quot;.</source>
          <target state="translated">Lo último le da una idea de lo que falló.También facilita la búsqueda de la prueba en tu guión,simplemente busca &quot;simple exponencial&quot;.</target>
        </trans-unit>
        <trans-unit id="263e6dbf8c2da6cc4831ea57d73cd01c49808e34" translate="yes" xml:space="preserve">
          <source>The latest</source>
          <target state="translated">El último</target>
        </trans-unit>
        <trans-unit id="d3a60275112428b3ca0987c2c55a45bca5bde073" translate="yes" xml:space="preserve">
          <source>The latest Net::Ping release can be found at CPAN:</source>
          <target state="translated">El último lanzamiento de Net::Ping se puede encontrar en CPAN:</target>
        </trans-unit>
        <trans-unit id="7b2e54c1e5a52bb047587bf92489f8f96027d992" translate="yes" xml:space="preserve">
          <source>The latest Net::Ping releases are included in cperl and perl5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874b36774125604150e5f59fd5253e7e8be8da9e" translate="yes" xml:space="preserve">
          <source>The latest Perl release (5.22.0 as of this writing) builds without changes under all versions of Mac OS X from 10.3 &quot;Panther&quot; onwards.</source>
          <target state="translated">La última versión de Perl (5.22.0 en el momento de escribir esto)se construye sin cambios en todas las versiones de Mac OS X a partir de la 10.3 &quot;Panther&quot;.</target>
        </trans-unit>
        <trans-unit id="064e946234db5ecc10d952d435ad39de892add96" translate="yes" xml:space="preserve">
          <source>The latest Perl release (5.32.0 as of this writing) builds without changes under all versions of Mac OS X from 10.3 &quot;Panther&quot; onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfa4e030032052fa74752414fc7476dcdaf2c76" translate="yes" xml:space="preserve">
          <source>The latest libnet release is always on CPAN, you will find it in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc4f25838809cd7645317e2cc9e7753babbc628" translate="yes" xml:space="preserve">
          <source>The latest source tree is available via cvs:</source>
          <target state="translated">El último árbol fuente está disponible a través de cvs:</target>
        </trans-unit>
        <trans-unit id="3373e831da21b443a04c03079b0c28bf4785000a" translate="yes" xml:space="preserve">
          <source>The latest source tree is available via git:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf89850a166f6a4ee0978de00ea5e89c74558d84" translate="yes" xml:space="preserve">
          <source>The latest versions are probably the least deployed and widely tested, so you may want to wait a few months after their release and see what problems others have if you are risk averse.</source>
          <target state="translated">Las últimas versiones son probablemente las menos desplegadas y ampliamente probadas,por lo que es conveniente esperar unos meses después de su lanzamiento y ver qué problemas tienen los demás si usted es averso al riesgo.</target>
        </trans-unit>
        <trans-unit id="283b07d7f4b68277645e0b52df897e2c505c20d3" translate="yes" xml:space="preserve">
          <source>The latest versions of perl have more bug fixes.</source>
          <target state="translated">Las últimas versiones de perl tienen más correcciones de errores.</target>
        </trans-unit>
        <trans-unit id="5c3562f1019a54d151d180b0074eac428ec1b539" translate="yes" xml:space="preserve">
          <source>The latest versions of perl may contain performance improvements and features not present in older versions. There have been many changes in perl since perl5 was first introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1651bfa501667c3bfa8d542631578218de1ab189" translate="yes" xml:space="preserve">
          <source>The latter is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d373e425dea350cf42b44329f2372765cae74bb5" translate="yes" xml:space="preserve">
          <source>The latter pattern would be a character class consisting of a colon, and the letters &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;h&lt;/code&gt; .</source>
          <target state="translated">Este &amp;uacute;ltimo modelo ser&amp;iacute;a una clase de caracteres que consta de un colon, y las letras &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , &lt;code&gt;p&lt;/code&gt; y &lt;code&gt;h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9695d45b272c946f52b02905e21523ca5bea55db" translate="yes" xml:space="preserve">
          <source>The latter pattern would be a character class consisting of a colon, and the letters &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e4aff4d2758e888da3bc5afffc2587abdc395f" translate="yes" xml:space="preserve">
          <source>The lax criteria corresponds to what is currently allowed by the version parser. All of the following formats are acceptable for dotted-decimal formats strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a94f6519fd2ea2b5da884bb4c80f8058226b090" translate="yes" xml:space="preserve">
          <source>The layer is acceptable to have in a binmode(FH) stack - i.e. it does not (or will configure itself not to) transform bytes passing through it.</source>
          <target state="translated">Es aceptable tener la capa en una pila binmode(FH),es decir,no transforma (o se configurará para no hacerlo)los bytes que pasan por ella.</target>
        </trans-unit>
        <trans-unit id="1281105f1d2923419cef70eff9c7bbaca9c31ca4" translate="yes" xml:space="preserve">
          <source>The layer is buffered.</source>
          <target state="translated">La capa está protegida.</target>
        </trans-unit>
        <trans-unit id="aa6e981b462c3b07834414b5da8720376a618be1" translate="yes" xml:space="preserve">
          <source>The layers are returned in the order an open() or binmode() call would use them, and without colons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2977795d28c25d6eee9e0faa6c0a67b12612914" translate="yes" xml:space="preserve">
          <source>The layers are returned in the order an open() or binmode() call would use them. Note that the &quot;default stack&quot; depends on the operating system and on the Perl version, and both the compile-time and runtime configurations of Perl.</source>
          <target state="translated">Las capas se devuelven en el orden en que una llamada open()o binmode()las usaría.Nótese que la &quot;pila por defecto&quot; depende del sistema operativo y de la versión de Perl,así como de las configuraciones de tiempo de compilación y de ejecución de Perl.</target>
        </trans-unit>
        <trans-unit id="b3e7d5b78b27ea298f2a1cae1408ae86359ba800" translate="yes" xml:space="preserve">
          <source>The lddlflags addition is the only abnormal bit.</source>
          <target state="translated">La adición de lddlflags es la única parte anormal.</target>
        </trans-unit>
        <trans-unit id="7eced80f21a0420b25c8520fadd19d07b97b6f61" translate="yes" xml:space="preserve">
          <source>The leading 'v' is optional if two or more decimals appear. If only a single decimal is included, then the leading 'v' is required to trigger the dotted-decimal parsing. A leading zero is permitted, though not recommended except when quoted, because of the risk that Perl will treat the number as octal. A trailing underscore plus one or more digits denotes an alpha or development release (and must be quoted to be parsed properly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff5a5e9eacb7b6806eb625ddd8923ff29d2efc5" translate="yes" xml:space="preserve">
          <source>The leading &lt;code&gt;+{&lt;/code&gt; and &lt;code&gt;{;&lt;/code&gt; always serve to disambiguate the expression to mean either the HASH reference, or the BLOCK.</source>
          <target state="translated">El &lt;code&gt;+{&lt;/code&gt; y &lt;code&gt;{;&lt;/code&gt; siempre sirven para eliminar la ambig&amp;uuml;edad de la expresi&amp;oacute;n para que signifique la referencia HASH o el BLOQUE.</target>
        </trans-unit>
        <trans-unit id="d4369969cfc835357a0f9f590f26252ba7f58c0e" translate="yes" xml:space="preserve">
          <source>The left hand side of the method invocation (or arrow) operator is the object (or class name), and the right hand side is the method name.</source>
          <target state="translated">El lado izquierdo del operador de la invocación del método (o flecha)es el objeto (o nombre de la clase),y el lado derecho es el nombre del método.</target>
        </trans-unit>
        <trans-unit id="2a9cac37843dad5a4ff70fbd9f8ea25d75266dcb" translate="yes" xml:space="preserve">
          <source>The left side of the arrow can be any expression returning a reference, including a previous dereference. Note that &lt;code&gt;$array[$x]&lt;/code&gt; is</source>
          <target state="translated">El lado izquierdo de la flecha puede ser cualquier expresi&amp;oacute;n que devuelva una referencia, incluida una desreferenciaci&amp;oacute;n anterior. Tenga en cuenta que &lt;code&gt;$array[$x]&lt;/code&gt; es</target>
        </trans-unit>
        <trans-unit id="eb221cc92a9038eecac3c016886c94b3bdd80217" translate="yes" xml:space="preserve">
          <source>The left-hand character up there indicates the context in which the function was called, with &lt;code&gt;$&lt;/code&gt; and &lt;code&gt;@&lt;/code&gt; meaning scalar or list contexts respectively, and &lt;code&gt;.&lt;/code&gt; meaning void context (which is actually a sort of scalar context). The display above says that you were in the function &lt;code&gt;main::infested&lt;/code&gt; when you ran the stack dump, and that it was called in scalar context from line 10 of the file</source>
          <target state="translated">El car&amp;aacute;cter de la izquierda indica el contexto en el que se llam&amp;oacute; a la funci&amp;oacute;n, con &lt;code&gt;$&lt;/code&gt; y &lt;code&gt;@&lt;/code&gt; que significan contextos escalares o de lista respectivamente, y &lt;code&gt;.&lt;/code&gt; significa contexto vac&amp;iacute;o (que en realidad es una especie de contexto escalar). La pantalla de arriba dice que estaba en la funci&amp;oacute;n &lt;code&gt;main::infested&lt;/code&gt; cuando ejecut&amp;oacute; el volcado de pila, y que fue llamado en contexto escalar desde la l&amp;iacute;nea 10 del archivo</target>
        </trans-unit>
        <trans-unit id="d8cc674eda9906f58ae8371f8d5de07f046d9b51" translate="yes" xml:space="preserve">
          <source>The leftmost delimiter beginning the argument text to the interior sequence (should be &quot;&amp;lt;&quot;).</source>
          <target state="translated">El delimitador m&amp;aacute;s a la izquierda que comienza el texto del argumento en la secuencia interior (debe ser &quot;&amp;lt;&quot;).</target>
        </trans-unit>
        <trans-unit id="fbadd9b1973b1ad2d4e5362cd034946bff294cd7" translate="yes" xml:space="preserve">
          <source>The length [in bytes] of the section to be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f9e2e6c56a351b6a88108f75341c9d329b9f6c" translate="yes" xml:space="preserve">
          <source>The length at which the argument list is truncated is governed by the next option:</source>
          <target state="translated">La longitud en la que se trunca la lista de argumentos se rige por la siguiente opción:</target>
        </trans-unit>
        <trans-unit id="0c237bc1e8c7da08e4bc9cf58175d51b2735fd6c" translate="yes" xml:space="preserve">
          <source>The length of an array is a scalar value. You may find the length of array @days by evaluating &lt;code&gt;$#days&lt;/code&gt; , as in &lt;b&gt;csh&lt;/b&gt;. However, this isn't the length of the array; it's the subscript of the last element, which is a different value since there is ordinarily a 0th element. Assigning to &lt;code&gt;$#days&lt;/code&gt; actually changes the length of the array. Shortening an array this way destroys intervening values. Lengthening an array that was previously shortened does not recover values that were in those elements.</source>
          <target state="translated">La longitud de una matriz es un valor escalar. Puede encontrar la duraci&amp;oacute;n de la matriz @days evaluando &lt;code&gt;$#days&lt;/code&gt; , como en &lt;b&gt;csh&lt;/b&gt; . Sin embargo, esta no es la longitud de la matriz; es el sub&amp;iacute;ndice del &amp;uacute;ltimo elemento, que es un valor diferente ya que normalmente hay un elemento 0. Asignar a &lt;code&gt;$#days&lt;/code&gt; realidad cambia la duraci&amp;oacute;n de la matriz. Acortar una matriz de esta manera destruye los valores intermedios. Alargar una matriz que se acort&amp;oacute; anteriormente no recupera los valores que estaban en esos elementos.</target>
        </trans-unit>
        <trans-unit id="f563a4457c7ea4c783229c274409e5e0accbf6ff" translate="yes" xml:space="preserve">
          <source>The length of an array is a scalar value. You may find the length of array @days by evaluating &lt;code&gt;$#days&lt;/code&gt;, as in &lt;b&gt;csh&lt;/b&gt;. However, this isn't the length of the array; it's the subscript of the last element, which is a different value since there is ordinarily a 0th element. Assigning to &lt;code&gt;$#days&lt;/code&gt; actually changes the length of the array. Shortening an array this way destroys intervening values. Lengthening an array that was previously shortened does not recover values that were in those elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4741e016ab3bf497ce5ef4aff13131c47a360d63" translate="yes" xml:space="preserve">
          <source>The length of the field is supplied by padding out the field with multiple &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, or &quot;|&quot; characters to specify a non-numeric field with, respectively, left justification, right justification, or centering. For a regular field, the value (up to the first newline) is taken and printed according to the selected justification, truncating excess characters. If you terminate a text field with &quot;...&quot;, three dots will be shown if the value is truncated. A special text field may be used to do rudimentary multi-line text block filling; see &lt;a href=&quot;#Using-Fill-Mode&quot;&gt;&quot;Using Fill Mode&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ef5c234e3b75bc352e3b032ce59b9fa1929612" translate="yes" xml:space="preserve">
          <source>The length of the field is supplied by padding out the field with multiple &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, or &quot;|&quot; characters to specify a non-numeric field with, respectively, left justification, right justification, or centering. For a regular field, the value (up to the first newline) is taken and printed according to the selected justification, truncating excess characters. If you terminate a text field with &quot;...&quot;, three dots will be shown if the value is truncated. A special text field may be used to do rudimentary multi-line text block filling; see &lt;a href=&quot;#Using-Fill-Mode&quot;&gt;Using Fill Mode&lt;/a&gt; for details.</source>
          <target state="translated">La longitud del campo se proporciona rellenando el campo con varios &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot; o &quot;|&quot; caracteres para especificar un campo no num&amp;eacute;rico con, respectivamente, justificaci&amp;oacute;n a la izquierda, justificaci&amp;oacute;n a la derecha o centrado. Para un campo normal, el valor (hasta la primera l&amp;iacute;nea nueva) se toma y se imprime de acuerdo con la justificaci&amp;oacute;n seleccionada, truncando los caracteres sobrantes. Si termina un campo de texto con &quot;...&quot;, se mostrar&amp;aacute;n tres puntos si el valor est&amp;aacute; truncado. Se puede utilizar un campo de texto especial para realizar un relleno rudimentario de bloques de texto de varias l&amp;iacute;neas; consulte &lt;a href=&quot;#Using-Fill-Mode&quot;&gt;Uso del modo de relleno&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="531fdf3344d9288341eaab36c6e742e75614f35e" translate="yes" xml:space="preserve">
          <source>The length of the filed in hex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b66a1a14f6dce4bff1a210ef4e586716a5899b" translate="yes" xml:space="preserve">
          <source>The length of the name.</source>
          <target state="translated">La longitud del nombre.</target>
        </trans-unit>
        <trans-unit id="696a9e70beeee9b566eace1cd87208a1d5c5089e" translate="yes" xml:space="preserve">
          <source>The length(NAME) Keyword</source>
          <target state="translated">La longitud (NOMBRE)Palabra clave</target>
        </trans-unit>
        <trans-unit id="b958bd03a02b517c3d184dfcfbefe403cc86c37f" translate="yes" xml:space="preserve">
          <source>The level can be changed as follows:</source>
          <target state="translated">El nivel puede ser cambiado de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="64e6e89b4814ce7405192ddfc665d5e521c03538" translate="yes" xml:space="preserve">
          <source>The level constants are not exported by the module.</source>
          <target state="translated">Las constantes de nivel no son exportadas por el módulo.</target>
        </trans-unit>
        <trans-unit id="b4c1d901146534759d309f43fe1b8efda46ffa76" translate="yes" xml:space="preserve">
          <source>The level of detail in Perl module documentation generally goes from less detailed to more detailed. Your SYNOPSIS section should contain a minimal example of use (perhaps as little as one line of code; skip the unusual use cases or anything not needed by most users); the DESCRIPTION should describe your module in broad terms, generally in just a few paragraphs; more detail of the module's routines or methods, lengthy code examples, or other in-depth material should be given in subsequent sections.</source>
          <target state="translated">El nivel de detalle en la documentación del módulo Perl generalmente va de menos a más detallado.Su sección de SINOPSIS debe contener un ejemplo mínimo de uso (tal vez tan poco como una línea de código;omita los casos de uso inusual o cualquier cosa que no sea necesaria para la mayoría de los usuarios);la DESCRIPCIÓN debe describir su módulo en términos amplios,generalmente en sólo unos pocos párrafos;en las secciones subsiguientes se deben dar más detalles de las rutinas o métodos del módulo,ejemplos de códigos extensos u otro material en profundidad.</target>
        </trans-unit>
        <trans-unit id="0ce002d9483143d05cc2ba45ea1b81cd48bfc336" translate="yes" xml:space="preserve">
          <source>The lexer can be bypassed as well by creating the pattern from smaller components:</source>
          <target state="translated">El lexer también puede ser evitado creando el patrón a partir de componentes más pequeños:</target>
        </trans-unit>
        <trans-unit id="dcb697055788c2e7dd63bc610ab1eb6ac51eb7cf" translate="yes" xml:space="preserve">
          <source>The lexer maintains various &lt;code&gt;char*&lt;/code&gt; pointers to things in the &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; buffer. If &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; is ever reallocated, all of these pointers must be updated. Don't attempt to do this manually, but rather use &lt;a href=&quot;#lex_grow_linestr&quot;&gt;&quot;lex_grow_linestr&quot;&lt;/a&gt; if you need to reallocate the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23265d5a0661d902031b21a8d3925278347efe2b" translate="yes" xml:space="preserve">
          <source>The lexer maintains various &lt;code&gt;char*&lt;/code&gt; pointers to things in the &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; buffer. If &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; is ever reallocated, all of these pointers must be updated. Don't attempt to do this manually, but rather use &lt;a href=&quot;#lex_grow_linestr&quot;&gt;lex_grow_linestr&lt;/a&gt; if you need to reallocate the buffer.</source>
          <target state="translated">El lexer mantiene varios punteros &lt;code&gt;char*&lt;/code&gt; a cosas en el &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; . Si &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; alguna vez se reasigna, todos estos punteros deben actualizarse. No intente hacer esto manualmente, utilice &lt;a href=&quot;#lex_grow_linestr&quot;&gt;lex_grow_linestr&lt;/a&gt; si necesita reasignar el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="1ed189d83743aeda186a080785030258aac3dd09" translate="yes" xml:space="preserve">
          <source>The libnetcfg utility can be used to configure the libnet. Starting from perl 5.8 libnet is part of the standard Perl distribution, but the libnetcfg can be used for any libnet installation.</source>
          <target state="translated">La utilidad libnetcfg puede ser usada para configurar la libnet.A partir de perl 5.8 libnet es parte de la distribución estándar de Perl,pero la libnetcfg puede ser usada para cualquier instalación de libnet.</target>
        </trans-unit>
        <trans-unit id="b7cb7266f690af0bb383573e50d303e552d377e1" translate="yes" xml:space="preserve">
          <source>The libraries specified may be a mixture of static libraries and import libraries (to link with DLLs). Since both kinds are used pretty transparently on the Win32 platform, we do not attempt to distinguish between them.</source>
          <target state="translated">Las bibliotecas especificadas pueden ser una mezcla de bibliotecas estáticas y bibliotecas de importación (para enlazar con las DLL).Dado que ambos tipos se utilizan de forma bastante transparente en la plataforma Win32,no intentamos distinguirlos.</target>
        </trans-unit>
        <trans-unit id="df259280ce53fd256ff55110ddf21cb58f64ee0c" translate="yes" xml:space="preserve">
          <source>The library that is loaded last is used. Note that this can be overwritten at any time by loading a different library, and numbers constructed with different libraries cannot be used in math operations together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99e76c717b720c6c49420484756d2dfcd410c40" translate="yes" xml:space="preserve">
          <source>The library that is loaded last will be used. Note that this can be overwritten at any time by loading a different library, and numbers constructed with different libraries cannot be used in math operations together.</source>
          <target state="translated">La biblioteca que se cargue en último lugar será utilizada.Tenga en cuenta que esto puede ser sobrescrito en cualquier momento al cargar una biblioteca diferente,y los números construidos con diferentes bibliotecas no pueden ser utilizados en operaciones matemáticas juntas.</target>
        </trans-unit>
        <trans-unit id="f52597109e4fab2376043609905f67d9e1da90d1" translate="yes" xml:space="preserve">
          <source>The license under which this distribution may be used and redistributed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be37c25dc5d34ce7bba6cfdf56923967183a419" translate="yes" xml:space="preserve">
          <source>The licensing terms of your distribution. Generally it's &quot;perl_5&quot; for the same license as Perl itself.</source>
          <target state="translated">Los términos de la licencia de su distribución.Generalmente es &quot;perl_5&quot; para la misma licencia que el propio Perl.</target>
        </trans-unit>
        <trans-unit id="ee54e36e284ff26a979d2076f6ca4023c3d73825" translate="yes" xml:space="preserve">
          <source>The line above describes the limits of buckets currently in use. Each bucket has two sizes: memory footprint and the maximal size of user data that can fit into this bucket. Suppose in the above example that the smallest bucket were size 4. The biggest bucket would have usable size 8188, and the memory footprint would be 8192.</source>
          <target state="translated">La línea anterior describe los límites de los cubos que se utilizan actualmente.Cada cubo tiene dos tamaños:la huella de la memoria y el tamaño máximo de los datos del usuario que pueden caber en este cubo.Supongamos en el ejemplo anterior que el cubo más pequeño fuera de tamaño 4.El cubo más grande tendría un tamaño utilizable de 8188,y la huella de memoria sería de 8192.</target>
        </trans-unit>
        <trans-unit id="391452165da7e2f812078f7c3a4920d3947a871e" translate="yes" xml:space="preserve">
          <source>The line in &lt;code&gt;$E-&amp;gt;file&lt;/code&gt; where the exceptional code was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac97bcd51055b69e1b4470987fa154b899ce651a" translate="yes" xml:space="preserve">
          <source>The line number the error occurred in.</source>
          <target state="translated">El número de línea en el que se produjo el error.</target>
        </trans-unit>
        <trans-unit id="cc23ac8e14569b4b19694084670492ce2aa4a0c6" translate="yes" xml:space="preserve">
          <source>The line shown is the one that is about to be executed &lt;b&gt;next&lt;/b&gt;, it hasn't happened yet. So while we can print a variable with the letter '&lt;b&gt;p&lt;/b&gt;', at this point all we'd get is an empty (undefined) value back. What we need to do is to step through the next executable statement with an '&lt;b&gt;s&lt;/b&gt;':</source>
          <target state="translated">La l&amp;iacute;nea que se muestra es la que est&amp;aacute; a punto de ejecutarse a &lt;b&gt;continuaci&amp;oacute;n&lt;/b&gt; , a&amp;uacute;n no ha sucedido. Entonces, si bien podemos imprimir una variable con la letra ' &lt;b&gt;p&lt;/b&gt; ', en este punto todo lo que obtendr&amp;iacute;amos es un valor vac&amp;iacute;o (indefinido). Lo que tenemos que hacer es recorrer la siguiente declaraci&amp;oacute;n ejecutable con una ' &lt;b&gt;s&lt;/b&gt; ':</target>
        </trans-unit>
        <trans-unit id="e54713c2cd710c76f4d69536879402921ef82d04" translate="yes" xml:space="preserve">
          <source>The linearized MRO of a class is an ordered array of all of the classes one would search when resolving a method on that class, starting with the class itself.</source>
          <target state="translated">El MRO linealizado de una clase es un conjunto ordenado de todas las clases que uno buscaría al resolver un método en esa clase,empezando por la clase misma.</target>
        </trans-unit>
        <trans-unit id="f96ce0004635ab8058e21a997ff0fdcac4680ebd" translate="yes" xml:space="preserve">
          <source>The link found cannot be parsed because it does not conform to the syntax described in &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;.</source>
          <target state="translated">El enlace encontrado no se puede analizar porque no se ajusta a la sintaxis descrita en &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="365c0989adb3aa2936b9a9b37c715ae0175f622e" translate="yes" xml:space="preserve">
          <source>The link-text. If there is none, this must be &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. (E.g., in &quot;L&amp;lt;Perl Functions|perlfunc&amp;gt;&quot;, the link-text is &quot;Perl Functions&quot;. In &quot;L&amp;lt;Time::HiRes&amp;gt;&quot; and even &quot;L&amp;lt;|Time::HiRes&amp;gt;&quot;, there is no link text. Note that link text may contain formatting.)</source>
          <target state="translated">El texto del enlace. Si no hay ninguno, debe ser &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . (Por ejemplo, en &quot;L &amp;lt;Funciones Perl | perlfunc&amp;gt;&quot;, el texto del enlace es &quot;Funciones Perl&quot;. En &quot;L &amp;lt;Time :: HiRes&amp;gt;&quot; e incluso &quot;L &amp;lt;| Time :: HiRes&amp;gt;&quot;, no hay texto del enlace. Tenga en cuenta que el texto del enlace puede contener formato).</target>
        </trans-unit>
        <trans-unit id="02b503d2f0eeb8483755cc493aa85b3fc0ad66ce" translate="yes" xml:space="preserve">
          <source>The link-text. If there is none, this must be &lt;code&gt;undef&lt;/code&gt;. (E.g., in &quot;L&amp;lt;Perl Functions|perlfunc&amp;gt;&quot;, the link-text is &quot;Perl Functions&quot;. In &quot;L&amp;lt;Time::HiRes&amp;gt;&quot; and even &quot;L&amp;lt;|Time::HiRes&amp;gt;&quot;, there is no link text. Note that link text may contain formatting.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43c6585f184d3f50d1ee9b3f3e7c9226f529c8c" translate="yes" xml:space="preserve">
          <source>The list becomes the default for</source>
          <target state="translated">La lista se convierte en la predeterminada para</target>
        </trans-unit>
        <trans-unit id="3deb5bdbb77dae94d3dcc1cd91998f32e0e38f14" translate="yes" xml:space="preserve">
          <source>The list in the second argument means:</source>
          <target state="translated">La lista del segundo argumento significa:</target>
        </trans-unit>
        <trans-unit id="e1406e4b9186eac7ca74cdee5b539fc3d6f09c6c" translate="yes" xml:space="preserve">
          <source>The list may well be incomplete, or even wrong in some places. When in doubt, consult the platform-specific README files in the Perl source distribution, and any other documentation resources accompanying a given port.</source>
          <target state="translated">La lista puede estar incompleta,o incluso equivocada en algunos lugares.En caso de duda,consulte los archivos LÉAME específicos de la plataforma en la distribución fuente de Perl,y cualquier otro recurso de documentación que acompañe a un puerto determinado.</target>
        </trans-unit>
        <trans-unit id="47c47cf18ff1538b7e1e7d5d97838485842b3427" translate="yes" xml:space="preserve">
          <source>The list of &lt;b&gt;directories&lt;/b&gt; the system searches to find a program you want to &lt;b&gt;execute&lt;/b&gt;. The list is stored as one of your &lt;b&gt;environment variables&lt;/b&gt;, accessible in Perl as &lt;code&gt;$ENV{PATH}&lt;/code&gt; .</source>
          <target state="translated">La lista de &lt;b&gt;directorios que&lt;/b&gt; el sistema busca para encontrar un programa que desea &lt;b&gt;ejecutar&lt;/b&gt; . La lista se almacena como una de sus &lt;b&gt;variables de entorno&lt;/b&gt; , accesible en Perl como &lt;code&gt;$ENV{PATH}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38740fd91fca4080ce68cbb1a2be0d91acbe5b88" translate="yes" xml:space="preserve">
          <source>The list of &lt;b&gt;directories&lt;/b&gt; the system searches to find a program you want to &lt;b&gt;execute&lt;/b&gt;. The list is stored as one of your &lt;b&gt;environment variables&lt;/b&gt;, accessible in Perl as &lt;code&gt;$ENV{PATH}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b24d146d5dbad44a8c4fe5e7cb3811111eac143" translate="yes" xml:space="preserve">
          <source>The list of characters within the character class gives the set of characters matched by the class. &lt;code&gt;&quot;[abc]&quot;&lt;/code&gt; matches a single &quot;a&quot; or &quot;b&quot; or &quot;c&quot;. But if the first character after the &lt;code&gt;&quot;[&quot;&lt;/code&gt; is &lt;code&gt;&quot;^&quot;&lt;/code&gt;, the class instead matches any character not in the list. Within a list, the &lt;code&gt;&quot;-&quot;&lt;/code&gt; character specifies a range of characters, so that &lt;code&gt;a-z&lt;/code&gt; represents all characters between &quot;a&quot; and &quot;z&quot;, inclusive. If you want either &lt;code&gt;&quot;-&quot;&lt;/code&gt; or &lt;code&gt;&quot;]&quot;&lt;/code&gt; itself to be a member of a class, put it at the start of the list (possibly after a &lt;code&gt;&quot;^&quot;&lt;/code&gt;), or escape it with a backslash. &lt;code&gt;&quot;-&quot;&lt;/code&gt; is also taken literally when it is at the end of the list, just before the closing &lt;code&gt;&quot;]&quot;&lt;/code&gt;. (The following all specify the same class of three characters: &lt;code&gt;[-az]&lt;/code&gt;, &lt;code&gt;[az-]&lt;/code&gt;, and &lt;code&gt;[a\-z]&lt;/code&gt;. All are different from &lt;code&gt;[a-z]&lt;/code&gt;, which specifies a class containing twenty-six characters, even on EBCDIC-based character sets.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880294bb5af5ca3525238395f901655f64c2020a" translate="yes" xml:space="preserve">
          <source>The list of functions supported by this module.</source>
          <target state="translated">La lista de funciones soportadas por este módulo.</target>
        </trans-unit>
        <trans-unit id="77160ea4e8b3bcdfb5681dd2b39ffff26dc948b8" translate="yes" xml:space="preserve">
          <source>The list of functions that will need to recompiled is: creat, fgetpos, fopen, freopen, fsetpos, fstat, fstatvfs, fstatvfsdev, ftruncate, ftw, lockf, lseek, lstat, mmap, nftw, open, prealloc, stat, statvfs, statvfsdev, tmpfile, truncate, getrlimit, setrlimit</source>
          <target state="translated">La lista de funciones que será necesario recompilar es:creat,fgetpos,fopen,freopen,fsetpos,fstat,fstatvfs,fstatvfsdev,ftruncate,ftw,lockf,lseek,lstat,mmap,nftw,open,prealloc,stat,statvfs,statvfsdev,tmpfile,truncate,getrlimit,setrlimit</target>
        </trans-unit>
        <trans-unit id="0ece79552d7d2f7d04e0b952118b609964429027" translate="yes" xml:space="preserve">
          <source>The list of libraries needed by Perl only (any libraries needed by extensions only will by dropped, if using dynamic loading).</source>
          <target state="translated">La lista de bibliotecas necesarias sólo para Perl (las bibliotecas necesarias para las extensiones sólo se eliminarán si se utiliza la carga dinámica).</target>
        </trans-unit>
        <trans-unit id="8a88dc253dbf62089f3cd58a095e24a1f2508bc5" translate="yes" xml:space="preserve">
          <source>The list of macro definitions to be passed through must be specified using the /MACRO qualifier and must not add another /DEFINE qualifier. We prepend our own comma here to the contents of $(PASTHRU_DEFINE) because it is often empty and a comma always present in CCFLAGS would generate a missing qualifier value error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64ca6ece649f2cd25525c8ae9c0d312fa7bfc44" translate="yes" xml:space="preserve">
          <source>The list of moderators will be public knowledge. At present, it is: Aaron Crane, Andy Dougherty, Ricardo Signes, Steffen M&amp;uuml;ller.</source>
          <target state="translated">La lista de moderadores ser&amp;aacute; de conocimiento p&amp;uacute;blico. En la actualidad, son: Aaron Crane, Andy Dougherty, Ricardo Signes, Steffen M&amp;uuml;ller.</target>
        </trans-unit>
        <trans-unit id="78f6263b45ee82cd9e1bdb24d318e0dddc31338c" translate="yes" xml:space="preserve">
          <source>The list of moderators will be public knowledge. At present, it is: Andy Dougherty, Karen Etheridge, Ricardo Signes, Sawyer X, Steffen M&amp;uuml;ller, Todd Rinaldo, Aaron Crane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1addfaddfdb521f7b3277e8c72cb79cc08f13e02" translate="yes" xml:space="preserve">
          <source>The list of output parameters occurs at the very end of the function, just after the OUTPUT: directive. The use of RETVAL tells Perl that you wish to send this value back as the return value of the XSUB function. In Example 3, we wanted the &quot;return value&quot; placed in the original variable which we passed in, so we listed it (and not RETVAL) in the OUTPUT: section.</source>
          <target state="translated">La lista de parámetros de salida se produce al final de la función,justo después de la directiva OUTPUT:.El uso de RETVAL le dice a Perl que desea enviar este valor de vuelta como el valor de retorno de la función XSUB.En el ejemplo 3,queríamos que el &quot;valor de retorno&quot; se colocara en la variable original que pasamos,por lo que lo enumeramos (y no RETVAL)en la sección OUTPUT:.</target>
        </trans-unit>
        <trans-unit id="2539fe270e83e959d35fc853744365007ae544d9" translate="yes" xml:space="preserve">
          <source>The list of subfields can be supplied in any of the following formats</source>
          <target state="translated">La lista de subcampos puede suministrarse en cualquiera de los siguientes formatos</target>
        </trans-unit>
        <trans-unit id="e16fd393ccc48ed4253b4ef65eb2fcd167d75fd6" translate="yes" xml:space="preserve">
          <source>The list of symbols for the iterator is assembled by spawning off a subprocess, which can be slow. Ideally, we should just traverse the process' symbol table directly from C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcba41fba02d24fea6ac236d8112cd5b98ebb87" translate="yes" xml:space="preserve">
          <source>The list of the registered CPAN sites follows. Please note that the sorting order is alphabetical on fields:</source>
          <target state="translated">A continuación se presenta la lista de los sitios registrados del CPAN.Tenga en cuenta que el orden de clasificación es alfabético en los campos:</target>
        </trans-unit>
        <trans-unit id="e411ef2006039baaa3efb0aa87f085a254587fe2" translate="yes" xml:space="preserve">
          <source>The list of the valid options is shown below. Options not specified will remain unchanged.</source>
          <target state="translated">A continuación se muestra la lista de las opciones válidas.Las opciones no especificadas permanecerán sin cambios.</target>
        </trans-unit>
        <trans-unit id="cca90ac8d52c301adc0df9b517c693dc0133a8b6" translate="yes" xml:space="preserve">
          <source>The list opened with &lt;code&gt;=over&lt;/code&gt; does not contain any items.</source>
          <target state="translated">La lista abierta con &lt;code&gt;=over&lt;/code&gt; no contiene ning&amp;uacute;n elemento.</target>
        </trans-unit>
        <trans-unit id="4d086b1f033b01df712b5de461a87fac4f3a292c" translate="yes" xml:space="preserve">
          <source>The list opened with &lt;code&gt;=over&lt;/code&gt; does not contain anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37870cad335f71a8db1ccbfc9f539b9f8492c3a2" translate="yes" xml:space="preserve">
          <source>The list reference contains one or more strings specifying patterns that are</source>
          <target state="translated">La referencia de la lista contiene una o más cadenas que especifican patrones que son</target>
        </trans-unit>
        <trans-unit id="7ecd93d98b44cbb94ca7891c2599a20dc8e75287" translate="yes" xml:space="preserve">
          <source>The list reference contains one or more strings specifying patterns that must</source>
          <target state="translated">La referencia de la lista contiene una o más cadenas que especifican los patrones que deben</target>
        </trans-unit>
        <trans-unit id="0da38439f7a00ec9abb7cd8b98624a8251f6fb80" translate="yes" xml:space="preserve">
          <source>The listing below is alphabetical, case insensitive.</source>
          <target state="translated">La lista que figura a continuación es alfabética,sin distinción de mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="768abd184089ae969a2334570319327e5afad505" translate="yes" xml:space="preserve">
          <source>The listing looks something like this:</source>
          <target state="translated">La lista se parece a esto:</target>
        </trans-unit>
        <trans-unit id="a6fd74766ba848460935d167a256b131af8e02ea" translate="yes" xml:space="preserve">
          <source>The lists are ordered (roughly) so the most preferred names come before less preferred ones.</source>
          <target state="translated">Las listas están ordenadas (a grandes rasgos),de modo que los nombres más preferidos están antes que los menos preferidos.</target>
        </trans-unit>
        <trans-unit id="c3448e4c57076d015f65b6c72251baf22ba5950b" translate="yes" xml:space="preserve">
          <source>The literal string in the regex can be replaced by a variable:</source>
          <target state="translated">La cadena literal en el regex puede ser reemplazada por una variable:</target>
        </trans-unit>
        <trans-unit id="9605e010408c59883a845d8cc68911d04aa028cd" translate="yes" xml:space="preserve">
          <source>The literal string in the regexp can be replaced by a variable:</source>
          <target state="translated">La cadena literal en el regexp puede ser reemplazada por una variable:</target>
        </trans-unit>
        <trans-unit id="cc87d2f061afcaaa2771f59160c4bc3540da65d9" translate="yes" xml:space="preserve">
          <source>The literal string to be output. If it starts with a number and an optional '*' then the padding will be increased by an amount relative to this number, if the '*' is present then this amount will be multiplied by $cnt. This part of $string is removed before output/</source>
          <target state="translated">La cadena literal que se va a emitir.Si comienza con un número y un '*' opcional,entonces el relleno se incrementará en una cantidad relativa a este número,si el '*' está presente,entonces esta cantidad se multiplicará por $cnt.Esta parte de $cnt se elimina antes de la salida/</target>
        </trans-unit>
        <trans-unit id="67b8f203dc692021f65103823771254ae8d76d5b" translate="yes" xml:space="preserve">
          <source>The literals that are converted are &lt;code&gt;q//, qq//, qr//, qw///, qx//&lt;/code&gt; , and starting in v5.8.1, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;. Operations that do conversions include &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;utf8::upgrade&lt;/code&gt; (but not &lt;code&gt;utf8::downgrade&lt;/code&gt; ), and &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los literales que se convierten son &lt;code&gt;q//, qq//, qr//, qw///, qx//&lt;/code&gt; y comienzan en v5.8.1, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; . Las operaciones que realizan conversiones incluyen &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;utf8::upgrade&lt;/code&gt; (pero no &lt;code&gt;utf8::downgrade&lt;/code&gt; ) y &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="116243fae422285ef1d7be17ca7bca8fa87732c6" translate="yes" xml:space="preserve">
          <source>The literals that are converted are &lt;code&gt;q//, qq//, qr//, qw///, qx//&lt;/code&gt;, and starting in v5.8.1, &lt;code&gt;tr///&lt;/code&gt;. Operations that do conversions include &lt;code&gt;chr&lt;/code&gt;, &lt;code&gt;ord&lt;/code&gt;, &lt;code&gt;utf8::upgrade&lt;/code&gt; (but not &lt;code&gt;utf8::downgrade&lt;/code&gt;), and &lt;code&gt;chomp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba36a88aebe7e92337b13757f05491149d1212d" translate="yes" xml:space="preserve">
          <source>The little number the &lt;b&gt;operating system&lt;/b&gt; uses to keep track of which opened &lt;b&gt;file&lt;/b&gt; you&amp;rsquo;re talking about. Perl hides the file descriptor inside a &lt;b&gt;standard I/O&lt;/b&gt; stream and then attaches the stream to a &lt;b&gt;filehandle&lt;/b&gt;.</source>
          <target state="translated">El peque&amp;ntilde;o n&amp;uacute;mero &lt;b&gt;que&lt;/b&gt; usa el &lt;b&gt;sistema operativo&lt;/b&gt; para realizar un seguimiento del &lt;b&gt;archivo&lt;/b&gt; abierto &lt;b&gt;del&lt;/b&gt; que est&amp;aacute; hablando. Perl oculta el descriptor de archivo dentro de una secuencia de &lt;b&gt;E / S est&amp;aacute;ndar&lt;/b&gt; y luego adjunta la secuencia a un &lt;b&gt;identificador de archivo&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c45e18376e8b086f8c631b86953dc61fd730ab6e" translate="yes" xml:space="preserve">
          <source>The load function that dl_load_file() calls may require an absolute pathname. The dl_findfile() function and @dl_library_path can be used to search for and return the absolute pathname for the library/object that you wish to load.</source>
          <target state="translated">La función de carga que llama dl_load_file()puede requerir una ruta absoluta.La función dl_findfile()y la ruta de la biblioteca @dl_library_path pueden ser usadas para buscar y devolver la ruta absoluta de la biblioteca/objeto que se desea cargar.</target>
        </trans-unit>
        <trans-unit id="8c46c2259b1d6fa0f7f68fad81b43f4cfbd94e4d" translate="yes" xml:space="preserve">
          <source>The loaded modules are IO::Handle, IO::Seekable, IO::File, IO::Pipe, IO::Socket, IO::Dir. You should instead explicitly import the IO modules you want.</source>
          <target state="translated">Los módulos cargados son IO::Manejar,IO::Buscar,IO::Archivo,IO::Tubo,IO::Zócalo,IO::Dir.En su lugar,debería importar explícitamente los módulos IO que desee.</target>
        </trans-unit>
        <trans-unit id="0917a1903587e2d522edafea1a2d6e66a9118a13" translate="yes" xml:space="preserve">
          <source>The local() generated a compile-time error because you just touched a global name without fully qualifying it.</source>
          <target state="translated">El local()generó un error en tiempo de compilación porque acabas de tocar un nombre global sin calificarlo completamente.</target>
        </trans-unit>
        <trans-unit id="0cf7efcc5129f771b3d1f0dd51149aa0de4647fc" translate="yes" xml:space="preserve">
          <source>The localeconv function</source>
          <target state="translated">La función localeconv</target>
        </trans-unit>
        <trans-unit id="ba0cd5497a3f02564f53cc5f3cb0a7c74904a185" translate="yes" xml:space="preserve">
          <source>The locking technique went like this.</source>
          <target state="translated">La técnica de cierre fue así.</target>
        </trans-unit>
        <trans-unit id="6e5d8b4586e8d6172f220183afe910608a1d8583" translate="yes" xml:space="preserve">
          <source>The log level to use, with either the embedded, minimal logger or &lt;a href=&quot;Log::Log4perl&quot;&gt;Log::Log4perl&lt;/a&gt; if it is installed. Possible values are the same as the &lt;code&gt;Log::Log4perl&lt;/code&gt; levels: &lt;code&gt;TRACE&lt;/code&gt;, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, and &lt;code&gt;FATAL&lt;/code&gt;. The default is &lt;code&gt;INFO&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb02723b6a87664f1d9c172d5d68ee624445a8a4" translate="yes" xml:space="preserve">
          <source>The logarithm of the Gamma function [C99].</source>
          <target state="translated">El logaritmo de la función Gamma [C99].</target>
        </trans-unit>
        <trans-unit id="12f81008559a10138f818056ec245c593a6400e5" translate="yes" xml:space="preserve">
          <source>The logic of &lt;code&gt;:locale&lt;/code&gt; is described in full in &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt;, but in short it is first trying nl_langinfo(CODESET) and then guessing from the LC_ALL and LANG locale environment variables.</source>
          <target state="translated">La l&amp;oacute;gica de &lt;code&gt;:locale&lt;/code&gt; se describe en su totalidad en la &lt;a href=&quot;encoding&quot;&gt;codificaci&amp;oacute;n&lt;/a&gt; , pero en resumen, primero est&amp;aacute; probando nl_langinfo (CODESET) y luego adivinando a partir de las variables de entorno de locale LC_ALL y LANG.</target>
        </trans-unit>
        <trans-unit id="788028f7f75ce2d23138d44a065abd859dafb9ea" translate="yes" xml:space="preserve">
          <source>The logic of &lt;code&gt;:locale&lt;/code&gt; is described in full in &lt;a href=&quot;encoding#The-%3Alocale-sub-pragma&quot;&gt;&quot;The &lt;code&gt;:locale&lt;/code&gt; sub-pragma&quot; in encoding&lt;/a&gt;, but in short it is first trying nl_langinfo(CODESET) and then guessing from the LC_ALL and LANG locale environment variables. &lt;code&gt;:locale&lt;/code&gt; also implicitly turns on &lt;code&gt;:std&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf878ca097d48d543ea19885a2629244c15e1017" translate="yes" xml:space="preserve">
          <source>The logic of finding which locale &lt;code&gt;:locale&lt;/code&gt; uses is as follows:</source>
          <target state="translated">La l&amp;oacute;gica para encontrar qu&amp;eacute; locale &lt;code&gt;:locale&lt;/code&gt; usa es la siguiente:</target>
        </trans-unit>
        <trans-unit id="49964803a05917808abe031a83a5e6119fc9d862" translate="yes" xml:space="preserve">
          <source>The lone dot that ends a format can also prematurely end a mail message passing through a misconfigured Internet mailer (and based on experience, such misconfiguration is the rule, not the exception). So when sending format code through mail, you should indent it so that the format-ending dot is not on the left margin; this will prevent SMTP cutoff.</source>
          <target state="translated">El único punto que termina un formato también puede terminar prematuramente un mensaje de correo que pasa por un correo de Internet mal configurado (y,según la experiencia,esa mala configuración es la regla,no la excepción).Por lo tanto,cuando se envía código de formato a través de un correo,se debe sangrar para que el punto final del formato no esté en el margen izquierdo;esto evitará el corte del SMTP.</target>
        </trans-unit>
        <trans-unit id="23ac1b0fabb60338fc7595b94617767f0048e6fc" translate="yes" xml:space="preserve">
          <source>The lonesome dash</source>
          <target state="translated">El solitario guión</target>
        </trans-unit>
        <trans-unit id="58b8d17fbed51ef506dcc5bc2dfad68f8e405d89" translate="yes" xml:space="preserve">
          <source>The long answer is that &quot;it depends&quot;, and a good answer cannot be given without knowing (at the very least) the language context. See &lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acab1ed969d76981aca60d63a3ad2f6189741fb" translate="yes" xml:space="preserve">
          <source>The long answer is that &quot;it depends&quot;, and a good answer cannot be given without knowing (at the very least) the language context. See &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt;, and</source>
          <target state="translated">La respuesta larga es que &quot;depende&quot;, y no se puede dar una buena respuesta sin conocer (como m&amp;iacute;nimo) el contexto del idioma. Consulte &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="12b46ea21e617b9bac57234d9626d778dcbba94b" translate="yes" xml:space="preserve">
          <source>The long answer is that you need to consider character normalization and casing issues: see &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;, Unicode Technical Report #15, &lt;a href=&quot;https://www.unicode.org/unicode/reports/tr15&quot;&gt;Unicode Normalization Forms&lt;/a&gt; and sections on case mapping in the &lt;a href=&quot;https://www.unicode.org&quot;&gt;Unicode Standard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b351929b2c368a051a670eae8fde3b6788ce75f" translate="yes" xml:space="preserve">
          <source>The long answer is that you need to consider character normalization and casing issues: see &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;, Unicode Technical Report #15, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2funicode%2freports%2ftr15&quot;&gt;Unicode Normalization Forms&lt;/a&gt; and sections on case mapping in the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org&quot;&gt;Unicode Standard&lt;/a&gt;.</source>
          <target state="translated">La respuesta larga es que debe considerar la normalizaci&amp;oacute;n de caracteres y los problemas de may&amp;uacute;sculas y min&amp;uacute;sculas : consulte &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt; , Informe t&amp;eacute;cnico de Unicode n. &amp;deg; 15, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2funicode%2freports%2ftr15&quot;&gt;Formularios de normalizaci&amp;oacute;n Unicode&lt;/a&gt; y las secciones sobre mapeo de casos en el &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org&quot;&gt;est&amp;aacute;ndar Unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b13e585010c555d0e300d8fe834b6f46a4ae81c6" translate="yes" xml:space="preserve">
          <source>The long answer is the rest of the manpage :-)</source>
          <target state="translated">La respuesta larga es el resto de la página.)</target>
        </trans-unit>
        <trans-unit id="31adae3a57b090c57ee3c7e6d1bf3e97b3bf17d2" translate="yes" xml:space="preserve">
          <source>The long name is returned in a form nicely capitalized, suitable for printing.</source>
          <target state="translated">El nombre largo se devuelve en una forma bien capitalizada,adecuada para la impresión.</target>
        </trans-unit>
        <trans-unit id="3088cd686b7b7b0dbd27c6c1543c10f8e12363eb" translate="yes" xml:space="preserve">
          <source>The lookahead and lookbehind assertions are generalizations of the anchor concept. Lookahead and lookbehind are zero-width assertions that let us specify which characters we want to test for. The lookahead assertion is denoted by &lt;code&gt;(?=regexp)&lt;/code&gt; and the lookbehind assertion is denoted by &lt;code&gt;(?&amp;lt;=fixed-regexp)&lt;/code&gt;. Some examples are</source>
          <target state="translated">Las afirmaciones de anticipaci&amp;oacute;n y retroceso son generalizaciones del concepto de anclaje. Lookahead y lookbehind son aserciones de ancho cero que nos permiten especificar qu&amp;eacute; caracteres queremos probar. La aserci&amp;oacute;n de b&amp;uacute;squeda anticipada se denota por &lt;code&gt;(?=regexp)&lt;/code&gt; y la aserci&amp;oacute;n de b&amp;uacute;squeda anticipada se denota por &lt;code&gt;(?&amp;lt;=fixed-regexp)&lt;/code&gt; . Algunos ejemplos son</target>
        </trans-unit>
        <trans-unit id="5683ae6515c38a0cd77c7a977d476fd0513aeaf5" translate="yes" xml:space="preserve">
          <source>The lookahead and lookbehind assertions are generalizations of the anchor concept. Lookahead and lookbehind are zero-width assertions that let us specify which characters we want to test for. The lookahead assertion is denoted by &lt;code&gt;(?=regexp)&lt;/code&gt; or (starting in 5.32, experimentally in 5.28) &lt;code&gt;(*pla:regexp)&lt;/code&gt; or &lt;code&gt;(*positive_lookahead:regexp)&lt;/code&gt;; and the lookbehind assertion is denoted by &lt;code&gt;(?&amp;lt;=fixed-regexp)&lt;/code&gt; or (starting in 5.32, experimentally in 5.28) &lt;code&gt;(*plb:fixed-regexp)&lt;/code&gt; or &lt;code&gt;(*positive_lookbehind:fixed-regexp)&lt;/code&gt;. Some examples are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f75c5b0c19aae838064eb95c9b0bb2969329be" translate="yes" xml:space="preserve">
          <source>The lookbehind &lt;code&gt;condition&lt;/code&gt; allows, along with backreferences, an earlier part of the match to influence a later part of the match. For instance,</source>
          <target state="translated">La &lt;code&gt;condition&lt;/code&gt; mirar atr&amp;aacute;s permite, junto con las referencias inversas, que una parte anterior del partido influya en una parte posterior del partido. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="81e7a5f6a959e62bd2ce3d55576db8abdefeae7e" translate="yes" xml:space="preserve">
          <source>The loop will do the right thing for a while, but it will unexpectedly fail.</source>
          <target state="translated">El bucle hará lo correcto por un tiempo,pero fallará inesperadamente.</target>
        </trans-unit>
        <trans-unit id="45575ec17d57b6c0181a285166eef0dbc45075e3" translate="yes" xml:space="preserve">
          <source>The loop will never terminate.</source>
          <target state="translated">El bucle nunca terminará.</target>
        </trans-unit>
        <trans-unit id="ef06996a2f846d6797b75f13080961cc1d5fe17b" translate="yes" xml:space="preserve">
          <source>The low levels of the stack work with the low-level operating system calls (file descriptors in C) getting bytes in and out, the higher layers of the stack buffer, filter, and otherwise manipulate the I/O, and return characters (or bytes) to Perl. Terms</source>
          <target state="translated">Los niveles bajos de la pila funcionan con las llamadas de bajo nivel del sistema operativo (descriptores de archivos en C),haciendo que los bytes entren y salgan,las capas más altas de la memoria intermedia de la pila,filtren y manipulen de otra manera la E/S,y devuelvan los caracteres (o bytes)a Perl.Términos</target>
        </trans-unit>
        <trans-unit id="af589ba8a2b7e981d742f8a3045bf5151d26273f" translate="yes" xml:space="preserve">
          <source>The low-order 4 bytes of the total number of cylinders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcd393353514c923ef3599ddd24840670260ada" translate="yes" xml:space="preserve">
          <source>The low-order and high-order [respectively] 4 bytes of the offset [in bytes] where the formatting should begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbaa8b5bbc22fc30de9a07ab039a1fa2504ddd5" translate="yes" xml:space="preserve">
          <source>The low-order and high-order [respectively] 4 bytes of the starting offset of the partition, measured in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e618b44ecefc43c73cbcbb761a0be8756b4a11d0" translate="yes" xml:space="preserve">
          <source>The lower-level loops are</source>
          <target state="translated">Los bucles de nivel inferior son</target>
        </trans-unit>
        <trans-unit id="d49e301cfdcfd0dc30c1292d8446531a39bb2c8d" translate="yes" xml:space="preserve">
          <source>The lvalue &lt;code&gt;$ref&lt;/code&gt; will be turned into a weak reference. This means that it will not hold a reference count on the object it references. Also when the reference count on that object reaches zero, the reference will be set to undef. This function mutates the lvalue passed as its argument and returns no value.</source>
          <target state="translated">El lvalue &lt;code&gt;$ref&lt;/code&gt; se convertir&amp;aacute; en una referencia d&amp;eacute;bil. Esto significa que no mantendr&amp;aacute; un recuento de referencias sobre el objeto al que hace referencia. Adem&amp;aacute;s, cuando el recuento de referencias en ese objeto llegue a cero, la referencia se establecer&amp;aacute; en indef. Esta funci&amp;oacute;n muta el lvalue pasado como argumento y no devuelve ning&amp;uacute;n valor.</target>
        </trans-unit>
        <trans-unit id="24ee888b5b6764355f1443fa7075b59310751e36" translate="yes" xml:space="preserve">
          <source>The lvalue &lt;code&gt;$ref&lt;/code&gt; will be turned into a weak reference. This means that it will not hold a reference count on the object it references. Also, when the reference count on that object reaches zero, the reference will be set to undef. This function mutates the lvalue passed as its argument and returns no value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b929552916e7407c841dad6560b9f648df9456" translate="yes" xml:space="preserve">
          <source>The lvalue &lt;code&gt;REF&lt;/code&gt; will be turned from a weak reference back into a normal (strong) reference again. This function mutates the lvalue passed as its argument and returns no value. This undoes the action performed by &lt;a href=&quot;#weaken&quot;&gt;&quot;weaken&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3f15897ac19338676b9cf56d55755a66f779f6" translate="yes" xml:space="preserve">
          <source>The lvalue &lt;code&gt;REF&lt;/code&gt; will be turned from a weak reference back into a normal (strong) reference again. This function mutates the lvalue passed as its argument and returns no value. This undoes the action performed by &lt;a href=&quot;#weaken&quot;&gt;weaken&lt;/a&gt;.</source>
          <target state="translated">El valor &lt;code&gt;REF&lt;/code&gt; cambiar&amp;aacute; de una referencia d&amp;eacute;bil de nuevo a una referencia normal (fuerte) nuevamente. Esta funci&amp;oacute;n muta el lvalue pasado como argumento y no devuelve ning&amp;uacute;n valor. Esto deshace la acci&amp;oacute;n realizada por &lt;a href=&quot;#weaken&quot;&gt;debilitar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c832abcca8e03b1175991e252a63bb6082afdd89" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;cxstack&lt;/code&gt; returns the base of the current context stack, while &lt;code&gt;cxstack_ix&lt;/code&gt; is the index of the current frame within that stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b79adf8cca5ef25d3cb23e673042840fb0ff857" translate="yes" xml:space="preserve">
          <source>The macro to put this target on stack is &lt;code&gt;PUSHTARG&lt;/code&gt; , and it is directly used in some opcodes, as well as indirectly in zillions of others, which use it via &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt;.</source>
          <target state="translated">La macro para poner este objetivo en la pila es &lt;code&gt;PUSHTARG&lt;/code&gt; , y se usa directamente en algunos c&amp;oacute;digos de operaci&amp;oacute;n , as&amp;iacute; como indirectamente en millones de otros, que lo usan a trav&amp;eacute;s de &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="693b2cae8dc15e395df0cd8e5b72f3d52fadcead" translate="yes" xml:space="preserve">
          <source>The macro to put this target on stack is &lt;code&gt;PUSHTARG&lt;/code&gt;, and it is directly used in some opcodes, as well as indirectly in zillions of others, which use it via &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde4ff87d6048995f18afa79c7d92547dd919bf7" translate="yes" xml:space="preserve">
          <source>The macros PERL_SYS_INIT3() and PERL_SYS_TERM() provide system-specific tune up of the C runtime environment necessary to run Perl interpreters; they should only be called once regardless of how many interpreters you create or destroy. Call PERL_SYS_INIT3() before you create your first interpreter, and PERL_SYS_TERM() after you free your last interpreter.</source>
          <target state="translated">Las macros PERL_SYS_INIT3()y PERL_SYS_TERM()proporcionan un ajuste específico del sistema del entorno de tiempo de ejecución C necesario para ejecutar los intérpretes de Perl;sólo deben ser llamados una vez independientemente de cuántos intérpretes se creen o destruyan.Llame a PERL_SYS_INIT3()antes de crear su primer intérprete,y a PERL_SYS_TERM()después de liberar su último intérprete.</target>
        </trans-unit>
        <trans-unit id="b34be3b84eadf2e475f94c5862ce6783466cbe33" translate="yes" xml:space="preserve">
          <source>The macros below now require an extra parameter than in versions prior to Perl 5.32. The final parameter in each one is a pointer into the string supplied by the first parameter beyond which the input will not be read. This prevents potential reading beyond the end of the buffer. &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt;, &lt;code&gt;isASCII_utf8&lt;/code&gt;, &lt;code&gt;isBLANK_utf8&lt;/code&gt;, &lt;code&gt;isCNTRL_utf8&lt;/code&gt;, &lt;code&gt;isDIGIT_utf8&lt;/code&gt;, &lt;code&gt;isIDFIRST_utf8&lt;/code&gt;, &lt;code&gt;isPSXSPC_utf8&lt;/code&gt;, &lt;code&gt;isSPACE_utf8&lt;/code&gt;, &lt;code&gt;isVERTWS_utf8&lt;/code&gt;, &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt;, &lt;code&gt;isXDIGIT_utf8&lt;/code&gt;, &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt;, &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt;, &lt;code&gt;isASCII_LC_utf8&lt;/code&gt;, &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt;, &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt;, &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt;, &lt;code&gt;isGRAPH_LC_utf8&lt;/code&gt;, &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt;, &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt;, &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt;, &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt;, &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt;, &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt;, &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt;, &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt;, &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt;, &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt;, &lt;code&gt;toFOLD_utf8&lt;/code&gt;, &lt;code&gt;toLOWER_utf8&lt;/code&gt;, &lt;code&gt;toTITLE_utf8&lt;/code&gt;, and &lt;code&gt;toUPPER_utf8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1139ce181f4f4cad2c7f324461583f5984431bd" translate="yes" xml:space="preserve">
          <source>The macros to simplify this type of error propagation are</source>
          <target state="translated">Las macros para simplificar este tipo de propagación de errores son</target>
        </trans-unit>
        <trans-unit id="c70f4757860a22dec9e7cd7195f5c976eb6e087f" translate="yes" xml:space="preserve">
          <source>The mailbox (MBX) that perl can create to communicate with a pipe defaults to a buffer size of 8192 on 64-bit systems, 512 on VAX. The default buffer size is adjustable via the logical name PERL_MBX_SIZE provided that the value falls between 128 and the SYSGEN parameter MAXBUF inclusive. For example, to set the mailbox size to 32767 use &lt;code&gt;$ENV{'PERL_MBX_SIZE'} = 32767;&lt;/code&gt; and then open and use pipe constructs. An alternative would be to issue the command:</source>
          <target state="translated">El buz&amp;oacute;n de correo (MBX) que perl puede crear para comunicarse con una tuber&amp;iacute;a tiene por defecto un tama&amp;ntilde;o de b&amp;uacute;fer de 8192 en sistemas de 64 bits, 512 en VAX. El tama&amp;ntilde;o del b&amp;uacute;fer predeterminado se puede ajustar mediante el nombre l&amp;oacute;gico PERL_MBX_SIZE siempre que el valor est&amp;eacute; entre 128 y el par&amp;aacute;metro SYSGEN MAXBUF inclusive. Por ejemplo, para establecer el tama&amp;ntilde;o del buz&amp;oacute;n en 32767 use &lt;code&gt;$ENV{'PERL_MBX_SIZE'} = 32767;&lt;/code&gt; y luego abra y use construcciones de tuber&amp;iacute;a. Una alternativa ser&amp;iacute;a emitir el comando:</target>
        </trans-unit>
        <trans-unit id="08ec92a415b0c7db1f570cc5fe1a3d90ed229b88" translate="yes" xml:space="preserve">
          <source>The main advantage of &lt;code&gt;$]&lt;/code&gt; over &lt;code&gt;$^V&lt;/code&gt; is that it works the same on any version of Perl. The disadvantages are that it can't easily be compared to versions in other formats (e.g. literal v-strings, &quot;v1.2.3&quot; or version objects) and numeric comparisons are subject to the binary floating point representation; it's good for numeric literal version checks and bad for comparing to a variable that hasn't been sanity-checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5ef5a84eaac465306135c82a819527f916862a" translate="yes" xml:space="preserve">
          <source>The main advantage of &lt;code&gt;$]&lt;/code&gt; over &lt;code&gt;$^V&lt;/code&gt; is that it works the same on any version of Perl. The disadvantages are that it can't easily be compared to versions in other formats (e.g. literal v-strings, &quot;v1.2.3&quot; or version objects) and numeric comparisons can occasionally fail; it's good for string literal version checks and bad for comparing to a variable that hasn't been sanity-checked.</source>
          <target state="translated">La principal ventaja de &lt;code&gt;$]&lt;/code&gt; sobre &lt;code&gt;$^V&lt;/code&gt; es que funciona igual en cualquier versi&amp;oacute;n de Perl. Las desventajas son que no se puede comparar f&amp;aacute;cilmente con versiones en otros formatos (por ejemplo, cadenas v literales, &quot;v1.2.3&quot; u objetos de versi&amp;oacute;n) y las comparaciones num&amp;eacute;ricas ocasionalmente pueden fallar; es bueno para verificaciones de versi&amp;oacute;n literal de cadena y malo para comparar con una variable que no ha sido verificada.</target>
        </trans-unit>
        <trans-unit id="4dbfa08a8a6c8cbfafaef8a1a762c3513a39fb28" translate="yes" xml:space="preserve">
          <source>The main advantage of &lt;code&gt;$^V&lt;/code&gt; over &lt;code&gt;$]&lt;/code&gt; is that, for Perl v5.10.0 or later, it overloads operators, allowing easy comparison against other version representations (e.g. decimal, literal v-string, &quot;v1.2.3&quot;, or objects). The disadvantage is that prior to v5.10.0, it was only a literal v-string, which can't be easily printed or compared, whereas the behavior of &lt;code&gt;$]&lt;/code&gt; is unchanged on all versions of Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb52b8877c2d456ae00a93e532373fbd1c4c24a5" translate="yes" xml:space="preserve">
          <source>The main advantage of &lt;code&gt;$^V&lt;/code&gt; over &lt;code&gt;$]&lt;/code&gt; is that, for Perl v5.10.0 or later, it overloads operators, allowing easy comparison against other version representations (e.g. decimal, literal v-string, &quot;v1.2.3&quot;, or objects). The disadvantage is that prior to v5.10.0, it was only a literal v-string, which can't be easily printed or compared.</source>
          <target state="translated">La principal ventaja de &lt;code&gt;$^V&lt;/code&gt; sobre &lt;code&gt;$]&lt;/code&gt; es que, para Perl v5.10.0 o posterior, sobrecarga los operadores, lo que permite una f&amp;aacute;cil comparaci&amp;oacute;n con otras representaciones de versiones (por ejemplo, decimal, literal v-string, &quot;v1.2.3&quot; u objetos). . La desventaja es que antes de v5.10.0, era solo una cadena en v literal, que no se puede imprimir ni comparar f&amp;aacute;cilmente.</target>
        </trans-unit>
        <trans-unit id="101d1c6f485f1984d68802df9d96ca30aed70d37" translate="yes" xml:space="preserve">
          <source>The main change in &lt;code&gt;Compress::Zlib&lt;/code&gt; version 2.x is that it does not now interface directly to the zlib library. Instead it uses the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; and &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; modules for reading/writing gzip files, and the &lt;code&gt;Compress::Raw::Zlib&lt;/code&gt; module for some low-level zlib access.</source>
          <target state="translated">El principal cambio en &lt;code&gt;Compress::Zlib&lt;/code&gt; versi&amp;oacute;n 2.x es que ahora no interact&amp;uacute;a directamente con la biblioteca zlib. En su lugar, usa los m&amp;oacute;dulos &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; e &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; para leer / escribir archivos gzip, y el &lt;code&gt;Compress::Raw::Zlib&lt;/code&gt; para algunos accesos zlib de bajo nivel.</target>
        </trans-unit>
        <trans-unit id="372171de4da878145ca85489d35a3856b5f753b3" translate="yes" xml:space="preserve">
          <source>The main difference between this form of the &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method and the previous one, is that this one will attempt to return</source>
          <target state="translated">La principal diferencia entre esta forma del m&amp;eacute;todo de &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; y la anterior, es que esta intentar&amp;aacute; devolver</target>
        </trans-unit>
        <trans-unit id="208796ee71984ca1960f03809fd6acd6ef109429" translate="yes" xml:space="preserve">
          <source>The main difference between this form of the &lt;code&gt;read&lt;/code&gt; method and the previous one, is that this one will attempt to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506249c3cb5dbdd1518162463cf96d2d3b772f7e" translate="yes" xml:space="preserve">
          <source>The main difference in your code when using &lt;code&gt;LimitOutput&lt;/code&gt; is having to deal with cases where the &lt;code&gt;$input&lt;/code&gt; parameter still contains some uncompressed data that &lt;code&gt;inflate&lt;/code&gt; hasn't processed yet. The status code returned from &lt;code&gt;inflate&lt;/code&gt; will be &lt;code&gt;Z_OK&lt;/code&gt; if uncompression took place and &lt;code&gt;Z_BUF_ERROR&lt;/code&gt; if the output buffer is full.</source>
          <target state="translated">La principal diferencia en el c&amp;oacute;digo cuando se utiliza &lt;code&gt;LimitOutput&lt;/code&gt; es tener que lidiar con los casos en que la &lt;code&gt;$input&lt;/code&gt; par&amp;aacute;metro todav&amp;iacute;a contiene algo de datos sin comprimir que &lt;code&gt;inflate&lt;/code&gt; no ha procesado todav&amp;iacute;a. El c&amp;oacute;digo de estado de regresar de &lt;code&gt;inflate&lt;/code&gt; ser&amp;aacute; &lt;code&gt;Z_OK&lt;/code&gt; si descompresi&amp;oacute;n llev&amp;oacute; a cabo y &lt;code&gt;Z_BUF_ERROR&lt;/code&gt; si el buffer de salida est&amp;aacute; llena.</target>
        </trans-unit>
        <trans-unit id="92b5e72aa08b04ddc99309d77bb3cb7a3bd1fb12" translate="yes" xml:space="preserve">
          <source>The main division in the context struct is between a substitution scope (&lt;code&gt;CXt_SUBST&lt;/code&gt;) and block scopes, which are everything else. The former is just used while executing &lt;code&gt;s///e&lt;/code&gt;, and won't be discussed further here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05152f518d0f3656c0688ee9cee29d35fcced80c" translate="yes" xml:space="preserve">
          <source>The main enhancements over the standard DBM Filter hooks are:</source>
          <target state="translated">Las principales mejoras con respecto a los ganchos del Filtro DBM estándar son:</target>
        </trans-unit>
        <trans-unit id="e1f5b26355b7b70560c834756cb61711542dab38" translate="yes" xml:space="preserve">
          <source>The main interface to Perl's documentation is &lt;code&gt;perldoc&lt;/code&gt; , although if you're reading this, it's more than likely that you've already found it.</source>
          <target state="translated">La interfaz principal de la documentaci&amp;oacute;n de Perl es &lt;code&gt;perldoc&lt;/code&gt; , aunque si est&amp;aacute; leyendo esto, es muy probable que ya la haya encontrado.</target>
        </trans-unit>
        <trans-unit id="d4c0d9f985e6490addfa7c9bcf66885ac7eb6fd4" translate="yes" xml:space="preserve">
          <source>The main interface to Perl's documentation is &lt;code&gt;perldoc&lt;/code&gt;, although if you're reading this, it's more than likely that you've already found it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d35e12fdba0e51aa394bd8618a43431bb51d2f3" translate="yes" xml:space="preserve">
          <source>The main processing loop in the code handles reading of compressed data from STDIN.</source>
          <target state="translated">El bucle de procesamiento principal del código se encarga de la lectura de los datos comprimidos de STDIN.</target>
        </trans-unit>
        <trans-unit id="10be13178c7ed17eb7ff58045f81aad5069fb2a4" translate="yes" xml:space="preserve">
          <source>The main reason for using these constants is to help avoid spelling mistakes and similar typos. It will not help you if you forget to prefix the '+' though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fda3610207ec49730bec59c6f9f9a606bd23ef" translate="yes" xml:space="preserve">
          <source>The main restriction is that everything is a metacharacter. Thus, you cannot refer to single characters by doing something like this:</source>
          <target state="translated">La principal restricción es que todo es un metacaracterístico.Por lo tanto,no puedes referirte a los personajes individuales haciendo algo como esto:</target>
        </trans-unit>
        <trans-unit id="5f01e11115c777ec013558e25689beffe8389e6e" translate="yes" xml:space="preserve">
          <source>The main run-time, i.e. the execution of &lt;code&gt;PL_main_root&lt;/code&gt; .</source>
          <target state="translated">El tiempo de ejecuci&amp;oacute;n principal, es decir, la ejecuci&amp;oacute;n de &lt;code&gt;PL_main_root&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7fd0d727cdc1e3c76c39fb195a6b8c660cb66d4" translate="yes" xml:space="preserve">
          <source>The main run-time, i.e. the execution of &lt;code&gt;PL_main_root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fc4f091ec88a6495b33730022421e8180365bf" translate="yes" xml:space="preserve">
          <source>The main thing to bear in mind when comparing Perl's</source>
          <target state="translated">Lo principal que hay que tener en cuenta cuando se comparan los</target>
        </trans-unit>
        <trans-unit id="c06e6958bf7f6e1def3af629026b1de09d93eea1" translate="yes" xml:space="preserve">
          <source>The main two standard installer modules are the old and well established ExtUtils::MakeMaker (for short: EUMM) which uses the Makefile.PL. And the next generation installer Module::Build (MB) which works with the Build.PL (and often comes with a Makefile.PL too). If a module comes only with one of the two we will use that one but if both are supplied then a decision must be made between EUMM and MB. See also &lt;a href=&quot;http://rt.cpan.org/Ticket/Display.html?id=29235&quot;&gt;http://rt.cpan.org/Ticket/Display.html?id=29235&lt;/a&gt; for a discussion about the right default.</source>
          <target state="translated">Los dos m&amp;oacute;dulos de instalaci&amp;oacute;n est&amp;aacute;ndar principales son los antiguos y bien establecidos ExtUtils :: MakeMaker (para abreviar: EUMM) que usa Makefile.PL. Y el instalador de pr&amp;oacute;xima generaci&amp;oacute;n Module :: Build (MB) que funciona con Build.PL (y a menudo tambi&amp;eacute;n viene con Makefile.PL). Si un m&amp;oacute;dulo viene solo con uno de los dos, usaremos ese, pero si se suministran ambos, entonces se debe tomar una decisi&amp;oacute;n entre EUMM y MB. Consulte tambi&amp;eacute;n &lt;a href=&quot;http://rt.cpan.org/Ticket/Display.html?id=29235&quot;&gt;http://rt.cpan.org/Ticket/Display.html?id=29235&lt;/a&gt; para ver una discusi&amp;oacute;n sobre el valor predeterminado correcto.</target>
        </trans-unit>
        <trans-unit id="4a4d251a87e0958567984c04589a931c90f147e2" translate="yes" xml:space="preserve">
          <source>The main two standard installer modules are the old and well established ExtUtils::MakeMaker (for short: EUMM) which uses the Makefile.PL. And the next generation installer Module::Build (MB) which works with the Build.PL (and often comes with a Makefile.PL too). If a module comes only with one of the two we will use that one but if both are supplied then a decision must be made between EUMM and MB. See also http://rt.cpan.org/Ticket/Display.html?id=29235 for a discussion about the right default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05599914a88c35566cdc46d5be82351b5056b7bb" translate="yes" xml:space="preserve">
          <source>The main use for &lt;code&gt;ascii&lt;/code&gt; is to force the output to not contain characters with values &amp;gt; 127, which means you can interpret the resulting string as UTF-8, ISO-8859-1, ASCII, KOI8-R or most about any character set and 8-bit-encoding, and still get the same data structure back. This is useful when your channel for JSON transfer is not 8-bit clean or the encoding might be mangled in between (e.g. in mail), and works because ASCII is a proper subset of most 8-bit and multibyte encodings in use in the world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa39b18861e8c0d0fbd241aca023fce2a33049ad" translate="yes" xml:space="preserve">
          <source>The main use for &lt;code&gt;latin1&lt;/code&gt; is to relatively efficiently store binary data as JSON, at the expense of breaking compatibility with most JSON decoders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866c41ef1cd5e3c514447a1eb0c0a78fc5c432a8" translate="yes" xml:space="preserve">
          <source>The main use for this flag is efficiently encoding binary data as JSON text, as most octets will not be escaped, resulting in a smaller encoded size. The disadvantage is that the resulting JSON text is encoded in latin1 (and must correctly be treated as such when storing and transferring), a rare encoding for JSON. It is therefore most useful when you want to store data structures known to contain binary data efficiently in files or databases, not when talking to other JSON encoders/decoders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fa4e1ba42a335acb6388e4bce2e76ff0904fc1" translate="yes" xml:space="preserve">
          <source>The main use for this flag is to produce JSON texts that can be transmitted over a 7-bit channel, as the encoded JSON texts will not contain any 8 bit characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f8fe511450837b8803ee63b84fd8df2352eb1f" translate="yes" xml:space="preserve">
          <source>The main use of the &lt;code&gt;@_&lt;/code&gt; pass-through feature is to write subroutines whose main job it is to call other subroutines for you. For further details, see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">El uso principal de la &lt;code&gt;@_&lt;/code&gt; transferencia @_ es escribir subrutinas cuyo trabajo principal es llamar a otras subrutinas por usted. Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53e4e2133c40d29e72103e441a447d5a4a38fc75" translate="yes" xml:space="preserve">
          <source>The main use of typeglobs in modern Perl is create symbol table aliases. This assignment:</source>
          <target state="translated">El uso principal de los dactilogramas en el Perl moderno es crear alias de tablas de símbolos.Esta tarea:</target>
        </trans-unit>
        <trans-unit id="69b1898f468b9694e16716e650f4f44f6641ba6b" translate="yes" xml:space="preserve">
          <source>The main way they do this is by abstracting the solution into a Perl module. If you don't know what one of these is, the rest of this document isn't going to be much use to you. You're also missing out on an awful lot of useful code; consider having a look at &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;, &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; and &lt;a href=&quot;perlmodinstall&quot;&gt;perlmodinstall&lt;/a&gt; before coming back here.</source>
          <target state="translated">La principal forma en que lo hacen es abstrayendo la soluci&amp;oacute;n en un m&amp;oacute;dulo Perl. Si no sabe cu&amp;aacute;l es uno de estos, el resto de este documento no le ser&amp;aacute; de mucha utilidad. Tambi&amp;eacute;n se est&amp;aacute; perdiendo una gran cantidad de c&amp;oacute;digo &amp;uacute;til; considere echar un vistazo a &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; , &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; y &lt;a href=&quot;perlmodinstall&quot;&gt;perlmodinstall&lt;/a&gt; antes de volver aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="0f1c38b1c10cfb3cbb67b1b10b401ccad6c0863c" translate="yes" xml:space="preserve">
          <source>The main workhorse. This is a chimera executable: it is compiled as an &lt;code&gt;a.out&lt;/code&gt; -style executable, but is linked with &lt;code&gt;omf&lt;/code&gt; -style dynamic library</source>
          <target state="translated">El principal caballo de batalla. Este es un ejecutable de quimera: est&amp;aacute; compilado como un ejecutable de estilo &lt;code&gt;a.out&lt;/code&gt; , pero est&amp;aacute; vinculado con una biblioteca din&amp;aacute;mica de estilo &lt;code&gt;omf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="545144eca602ef4173887f0da06edec85e29ecc4" translate="yes" xml:space="preserve">
          <source>The main workhorse. This is a chimera executable: it is compiled as an &lt;code&gt;a.out&lt;/code&gt;-style executable, but is linked with &lt;code&gt;omf&lt;/code&gt;-style dynamic library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3956c803121907ff5d6974bf9c432a88f1cf833c" translate="yes" xml:space="preserve">
          <source>The major headers should be set out using a &lt;code&gt;=head1&lt;/code&gt; directive, and are historically written in the rather startling ALL UPPER CASE format; this is not mandatory, but it's strongly recommended so that sections have consistent naming across different software packages. Minor headers may be included using &lt;code&gt;=head2&lt;/code&gt; , and are typically in mixed case.</source>
          <target state="translated">Los encabezados principales deben establecerse usando una directiva &lt;code&gt;=head1&lt;/code&gt; , y hist&amp;oacute;ricamente est&amp;aacute;n escritos en un formato bastante sorprendente TODO EN MAY&amp;Uacute;SCULAS; esto no es obligatorio, pero se recomienda encarecidamente para que las secciones tengan nombres consistentes en diferentes paquetes de software. Los encabezados menores se pueden incluir usando &lt;code&gt;=head2&lt;/code&gt; , y normalmente est&amp;aacute;n en may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="00d415a583ddacb7562640a4ed5cbc374d3a4aac" translate="yes" xml:space="preserve">
          <source>The major headers should be set out using a &lt;code&gt;=head1&lt;/code&gt; directive, and are historically written in the rather startling ALL UPPER CASE format; this is not mandatory, but it's strongly recommended so that sections have consistent naming across different software packages. Minor headers may be included using &lt;code&gt;=head2&lt;/code&gt;, and are typically in mixed case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d78be692306962b0b26bf44b44f51f19191990" translate="yes" xml:space="preserve">
          <source>The major reference book on Perl, written by the creator of Perl, is</source>
          <target state="translated">El principal libro de referencia sobre Perl,escrito por el creador de Perl,es</target>
        </trans-unit>
        <trans-unit id="13680a9d6e9227284375bc26da8c5530041e38fc" translate="yes" xml:space="preserve">
          <source>The majority of messages from the first three classifications above (W, D &amp;amp; S) can be controlled using the &lt;code&gt;warnings&lt;/code&gt; pragma.</source>
          <target state="translated">La mayor&amp;iacute;a de los mensajes de las tres primeras clasificaciones anteriores (W, D y S) se pueden controlar utilizando el pragma de &lt;code&gt;warnings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47a0713a7794ab11956a543900cb0615be7d2460" translate="yes" xml:space="preserve">
          <source>The majority of the code above is concerned with reading the zip local header data. The code that I want to focus on is at the bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd369e1f787ef0292f11539410c5f0156585f6b5" translate="yes" xml:space="preserve">
          <source>The make process also creates the Perl extensions as</source>
          <target state="translated">El proceso de fabricación también crea las extensiones de Perl como</target>
        </trans-unit>
        <trans-unit id="6834c3d08e7b64ac9a3d75579db624c6bb6535ce" translate="yes" xml:space="preserve">
          <source>The make process runs only under WinNT shell. The NetWare makefile is located under the NetWare folder. This makes use of miniperl.exe to run some of the Perl scripts. To create miniperl.exe, first set the required paths for Visual c++ compiler (specify vcvars32 location) at the command prompt. Then run nmake from win32 folder through WinNT command prompt. The build process can be stopped after miniperl.exe is created. Then run nmake from NetWare folder through WinNT command prompt.</source>
          <target state="translated">El proceso de fabricación sólo funciona bajo el armazón del WinNT.El makefile de NetWare se encuentra bajo la carpeta de NetWare.Este hace uso de miniperl.exe para ejecutar algunos de los scripts Perl.Para crear miniperl.exe,primero establezca las rutas necesarias para el compilador de Visual c++(especifique la ubicación de vcvars32)en el símbolo del sistema.Luego ejecute nmake desde la carpeta win32 a través de la línea de comandos de WinNT.El proceso de construcción puede detenerse después de crear miniperl.exe.A continuación,ejecute nmake desde la carpeta NetWare a través del símbolo del sistema de WinNT.</target>
        </trans-unit>
        <trans-unit id="6f3be1c564860e93ed0610de17db5187711f88d0" translate="yes" xml:space="preserve">
          <source>The make target 'allsis' combines all the above SIS targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050ece2e16daad9919f83779717a0433d9f5277b" translate="yes" xml:space="preserve">
          <source>The make under /usr/ccs/bin works fine for building perl. If you have the Sun C compilers, you will also have a parallel version of make (dmake). This works fine to build perl, but can sometimes cause problems when running 'make test' due to underspecified dependencies between the different test harness files. The same problem can also affect the building of some add-on modules, so in those cases either specify '-m serial' on the dmake command line, or use /usr/ccs/bin/make instead. If you wish to use GNU make, be sure that the set-group-id bit is not set. If it is, then arrange your PATH so that /usr/ccs/bin/make is before GNU make or else have the system administrator disable the set-group-id bit on GNU make.</source>
          <target state="translated">La marca bajo /usr/ccs/bin funciona bien para construir perl.Si tienes los compiladores de Sun C,también tendrás una versión paralela de make (dmake).Esto funciona bien para construir perl,pero a veces puede causar problemas al ejecutar 'make test' debido a dependencias subespecificadas entre los diferentes archivos del arnés de pruebas.El mismo problema también puede afectar a la construcción de algunos módulos adicionales,así que en esos casos,o bien especifica '-m serial' en la línea de comandos de dmake,o bien usa /usr/ccs/bin/make en su lugar.Si desea usar GNU make,asegúrese de que el bit set-group-id no esté activado.Si lo está,entonces organiza tu PATH de manera que /usr/ccs/bin/make esté antes que GNU make o si no haz que el administrador del sistema deshabilite el bit set-group-id en GNU make.</target>
        </trans-unit>
        <trans-unit id="093c5a0fa4f10414f0bded11d9711f892cf8d016" translate="yes" xml:space="preserve">
          <source>The makefile for Win32 is used as a reference to create the makefile for NetWare. Also, the make process for NetWare port uses miniperl.exe to run scripts during the make and installation process.</source>
          <target state="translated">El makefile para Win32 se utiliza como referencia para crear el makefile para NetWare.Además,el makefile para el puerto NetWare utiliza miniperl.exe para ejecutar scripts durante el proceso de creación e instalación.</target>
        </trans-unit>
        <trans-unit id="27e98181ad3a79924d7fd39b526549233ec76d6a" translate="yes" xml:space="preserve">
          <source>The man page documenting the an macro set may be</source>
          <target state="translated">La página principal que documenta el conjunto de macros puede ser</target>
        </trans-unit>
        <trans-unit id="623ee701bbcdbe97eed930b9efd8035f1a031aee" translate="yes" xml:space="preserve">
          <source>The man page documenting the an macro set may be &lt;a href=&quot;http://man.he.net/man5/man&quot;&gt;man(5)&lt;/a&gt; instead of &lt;a href=&quot;http://man.he.net/man7/man&quot;&gt;man(7)&lt;/a&gt; on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b2bfc99455c361765a64ae36b53dd690daec7f" translate="yes" xml:space="preserve">
          <source>The man page documenting the man macro set may be</source>
          <target state="translated">La página de hombre que documenta el conjunto de macros de hombre puede ser</target>
        </trans-unit>
        <trans-unit id="7f7916f4586e4282d358ae1052455bb329b90846" translate="yes" xml:space="preserve">
          <source>The man page documenting the man macro set may be &lt;a href=&quot;http://man.he.net/man5/man&quot;&gt;man(5)&lt;/a&gt; instead of &lt;a href=&quot;http://man.he.net/man7/man&quot;&gt;man(7)&lt;/a&gt; on your system. Also, please see &lt;a href=&quot;http://man.he.net/man1/pod2man&quot;&gt;pod2man(1)&lt;/a&gt; for extensive documentation on writing manual pages if you've not done it before and aren't familiar with the conventions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284a6c5b883e0ac48b839ca370726900339633bc" translate="yes" xml:space="preserve">
          <source>The mandatory parameter &lt;code&gt;$input&lt;/code&gt; is used to determine the source of the compressed data. This parameter can take one of three forms.</source>
          <target state="translated">El par&amp;aacute;metro obligatorio &lt;code&gt;$input&lt;/code&gt; se utiliza para determinar la fuente de los datos comprimidos. Este par&amp;aacute;metro puede adoptar una de estas tres formas.</target>
        </trans-unit>
        <trans-unit id="c485ab3d22837e3f8be3f1796e0e79d8c8f06f1f" translate="yes" xml:space="preserve">
          <source>The mandatory parameter &lt;code&gt;$output&lt;/code&gt; is used to control the destination of the compressed data. This parameter can take one of these forms.</source>
          <target state="translated">El par&amp;aacute;metro obligatorio &lt;code&gt;$output&lt;/code&gt; se utiliza para controlar el destino de los datos comprimidos. Este par&amp;aacute;metro puede adoptar una de estas formas.</target>
        </trans-unit>
        <trans-unit id="de616d536d8ef10cc9a3f654a8c90f376abf8093" translate="yes" xml:space="preserve">
          <source>The manual for GNU &lt;code&gt;gettext&lt;/code&gt; . The gettext dist is available in &lt;code&gt;&lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;&lt;/code&gt; -- get a recent gettext tarball and look in its &quot;doc/&quot; directory, there's an easily browsable HTML version in there. The gettext documentation asks lots of questions worth thinking about, even if some of their answers are sometimes wonky, particularly where they start talking about pluralization.</source>
          <target state="translated">El manual de GNU &lt;code&gt;gettext&lt;/code&gt; . El dist de gettext est&amp;aacute; disponible en &lt;code&gt;&lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;&lt;/code&gt; - obtenga un tarball de gettext reciente y busque en su directorio &quot;doc /&quot;, hay una versi&amp;oacute;n HTML f&amp;aacute;cilmente navegable all&amp;iacute;. La documentaci&amp;oacute;n de gettext hace muchas preguntas en las que vale la pena pensar, incluso si algunas de sus respuestas a veces son dudosas, particularmente cuando comienzan a hablar de pluralizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b1839a690d37e18249310936fdff387ca895bbd5" translate="yes" xml:space="preserve">
          <source>The manual for GNU &lt;code&gt;gettext&lt;/code&gt;. The gettext dist is available in &lt;code&gt;&lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;&lt;/code&gt; -- get a recent gettext tarball and look in its &quot;doc/&quot; directory, there's an easily browsable HTML version in there. The gettext documentation asks lots of questions worth thinking about, even if some of their answers are sometimes wonky, particularly where they start talking about pluralization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154ce4660707f31f1810dc0e3b48188806eef41c" translate="yes" xml:space="preserve">
          <source>The many &lt;code&gt;SO_*&lt;/code&gt; and other constants provide the socket option names for getsockopt() and setsockopt().</source>
          <target state="translated">Las muchas &lt;code&gt;SO_*&lt;/code&gt; y otras proporcionan los nombres de las opciones de socket para getsockopt () y setsockopt ().</target>
        </trans-unit>
        <trans-unit id="55aaa52fca491aa374cc9b313f0827cacbb95ed1" translate="yes" xml:space="preserve">
          <source>The map of tags-to-names that it uses is accessible as %I18N::LangTags::List::Name, and it's the same as the list that follows in this documentation, which should be useful to you even if you don't use this module.</source>
          <target state="translated">El mapa de etiquetas a nombres que utiliza es accesible como %I18N::LangTags::List::Name,y es el mismo que la lista que sigue en esta documentación,que debería serte útil incluso si no utilizas este módulo.</target>
        </trans-unit>
        <trans-unit id="4ec748c6f374bea6dd407e2a2206dd66cc0ef16e" translate="yes" xml:space="preserve">
          <source>The mapping between the C callback and Perl is stored in the global hash &lt;code&gt;Mapping&lt;/code&gt; this time. Using a hash has the distinct advantage that it allows an unlimited number of callbacks to be registered.</source>
          <target state="translated">El mapeo entre la devoluci&amp;oacute;n de llamada C y Perl se almacena en el &lt;code&gt;Mapping&lt;/code&gt; hash global esta vez. El uso de un hash tiene la clara ventaja de que permite registrar un n&amp;uacute;mero ilimitado de devoluciones de llamada.</target>
        </trans-unit>
        <trans-unit id="3b99545de853bbada80b111bce027d144c0231ba" translate="yes" xml:space="preserve">
          <source>The mapping between the C callback and the Perl equivalent is stored in the global variable &lt;code&gt;callback&lt;/code&gt; .</source>
          <target state="translated">El mapeo entre la devoluci&amp;oacute;n de llamada de C y el equivalente de Perl se almacena en la &lt;code&gt;callback&lt;/code&gt; variable global .</target>
        </trans-unit>
        <trans-unit id="8e93b95ea6fe70dd3da986ffb8fe9a8d23395a81" translate="yes" xml:space="preserve">
          <source>The mapping between the C callback and the Perl equivalent is stored in the global variable &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc01e02bb3d7483c767fb0c7888218cdd8db8748" translate="yes" xml:space="preserve">
          <source>The mapping from Perl to JSON is slightly more difficult, as Perl is a truly typeless language, so we can only guess which JSON type is meant by a Perl value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a662bfcb14335a42ef03f81101790bf366195df" translate="yes" xml:space="preserve">
          <source>The mapping of &lt;code&gt;U+FFFD&lt;/code&gt; is corrected in Unicode 6.3.0. see &lt;a href=&quot;http://www.unicode.org/reports/tr10/tr10-28.html#Trailing_Weights&quot;&gt;http://www.unicode.org/reports/tr10/tr10-28.html#Trailing_Weights&lt;/a&gt; (7.1.4 Trailing Weights). Such a correction is reproduced by this.</source>
          <target state="translated">La asignaci&amp;oacute;n de &lt;code&gt;U+FFFD&lt;/code&gt; se corrige en Unicode 6.3.0. consulte &lt;a href=&quot;http://www.unicode.org/reports/tr10/tr10-28.html#Trailing_Weights&quot;&gt;http://www.unicode.org/reports/tr10/tr10-28.html#Trailing_Weights&lt;/a&gt; (7.1.4 Trailing Weights). Esta correcci&amp;oacute;n se reproduce con esto.</target>
        </trans-unit>
        <trans-unit id="14cb589f53d7d0d4a1221387fff53b0981603202" translate="yes" xml:space="preserve">
          <source>The mapping of &lt;code&gt;U+FFFD&lt;/code&gt; is corrected in Unicode 6.3.0. see &lt;a href=&quot;https://www.unicode.org/reports/tr10/tr10-28.html#Trailing_Weights&quot;&gt;http://www.unicode.org/reports/tr10/tr10-28.html#Trailing_Weights&lt;/a&gt; (7.1.4 Trailing Weights). Such a correction is reproduced by this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff19693156a4d3c9d0ae54fb777710debdba865" translate="yes" xml:space="preserve">
          <source>The maps for almost all properties are simple scalars that should be interpreted as-is. These values are those given in the Unicode-supplied data files, which may be inconsistent as to capitalization and as to which synonym for a property-value is given. The results may be normalized by using the &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b1175bc8b4e9784f2300c93388884be8f7673f" translate="yes" xml:space="preserve">
          <source>The maps for almost all properties are simple scalars that should be interpreted as-is. These values are those given in the Unicode-supplied data files, which may be inconsistent as to capitalization and as to which synonym for a property-value is given. The results may be normalized by using the &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; function.</source>
          <target state="translated">Los mapas de casi todas las propiedades son escalares simples que deben interpretarse tal cual. Estos valores son los dados en los archivos de datos proporcionados por Unicode, que pueden ser inconsistentes en cuanto a las may&amp;uacute;sculas y en cuanto al sin&amp;oacute;nimo de un valor de propiedad. Los resultados se pueden normalizar utilizando la funci&amp;oacute;n &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d366a92e1e29300af2573c9ebee67dbf16243194" translate="yes" xml:space="preserve">
          <source>The maps for the following are available at &lt;a href=&quot;http://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt; but remain unsupported because those encodings need an algorithmical approach, currently unsupported by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e84bede14af96d7537c254ba694518a759f3d13" translate="yes" xml:space="preserve">
          <source>The maps for the following are available at &lt;a href=&quot;https://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt; but remain unsupported because those encodings need an algorithmical approach, currently unsupported by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2864353a5c8a1c71a51a027ee705129966bd16" translate="yes" xml:space="preserve">
          <source>The mark stack stores integers as I32 values, which are the height of the value stack at the time before the list began; thus the mark itself actually points to the value stack entry one before the list. The list itself starts at &lt;code&gt;mark + 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4bf89cabbc9315682f2b81d303b6aa4fa34849" translate="yes" xml:space="preserve">
          <source>The markup used to embed documentation into your Perl code. Pod stands for &amp;ldquo;Plain old documentation&amp;rdquo;. See Camel chapter 23, &amp;ldquo;Plain Old Documentation&amp;rdquo;.</source>
          <target state="translated">El marcado utilizado para incrustar documentaci&amp;oacute;n en su c&amp;oacute;digo Perl. Pod son las siglas de &quot;Documentaci&amp;oacute;n antigua sin formato&quot;. Consulte el cap&amp;iacute;tulo 23 de Camel, &amp;ldquo;Documentaci&amp;oacute;n sencilla y antigua&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="34cc83ddfdc06a0bade5acdcde84b75e2705b198" translate="yes" xml:space="preserve">
          <source>The master web site for CPAN is &lt;a href=&quot;http://www.cpan.org/&quot;&gt;http://www.cpan.org/&lt;/a&gt;, &lt;a href=&quot;http://www.cpan.org/SITES.html&quot;&gt;http://www.cpan.org/SITES.html&lt;/a&gt; lists all mirrors.</source>
          <target state="translated">El sitio web maestro para CPAN es &lt;a href=&quot;http://www.cpan.org/&quot;&gt;http://www.cpan.org/&lt;/a&gt; , &lt;a href=&quot;http://www.cpan.org/SITES.html&quot;&gt;http://www.cpan.org/SITES.html&lt;/a&gt; enumera todos los espejos.</target>
        </trans-unit>
        <trans-unit id="3c45f7edc42ff58b499f5e637a319d744b7420b9" translate="yes" xml:space="preserve">
          <source>The match is greedy and non-backtracking, so that the cluster is never broken up into smaller components.</source>
          <target state="translated">El partido es codicioso y sin seguimiento,por lo que el grupo nunca se rompe en componentes más pequeños.</target>
        </trans-unit>
        <trans-unit id="c68736af7f30812a5478f14010c89b4ae65386b0" translate="yes" xml:space="preserve">
          <source>The match operator is &quot;=~&quot;, not &quot;~&quot;. (&quot;~&quot; is the one's complement operator, as in C.)</source>
          <target state="translated">El operador del partido es &quot;=~&quot;,no &quot;~&quot;.(&quot;~&quot; es el operador de complemento de uno,como en C.)</target>
        </trans-unit>
        <trans-unit id="5795a85f98b64dffbf8aba9e904fb2bc93749e98" translate="yes" xml:space="preserve">
          <source>The match operator is a double quote context, so you can interpolate your variable just like a double quoted string. In this case, you read the regular expression as user input and store it in &lt;code&gt;$regex&lt;/code&gt; . Once you have the pattern in &lt;code&gt;$regex&lt;/code&gt; , you use that variable in the match operator.</source>
          <target state="translated">El operador de coincidencia es un contexto de comillas dobles, por lo que puede interpolar su variable como una cadena entre comillas dobles. En este caso, lee la expresi&amp;oacute;n regular como entrada del usuario y la almacena en &lt;code&gt;$regex&lt;/code&gt; . Una vez que tenga el patr&amp;oacute;n en &lt;code&gt;$regex&lt;/code&gt; , use esa variable en el operador de coincidencia.</target>
        </trans-unit>
        <trans-unit id="fc14d244fbe8a0161a49513d59d3516c03861ccd" translate="yes" xml:space="preserve">
          <source>The match operator is a double quote context, so you can interpolate your variable just like a double quoted string. In this case, you read the regular expression as user input and store it in &lt;code&gt;$regex&lt;/code&gt;. Once you have the pattern in &lt;code&gt;$regex&lt;/code&gt;, you use that variable in the match operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab1da87cbb5d0fd800bfa0309cbbc3c397f76b8" translate="yes" xml:space="preserve">
          <source>The match operator. See &lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">El operador del partido. Consulte &lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;Operadores similares a citas de Regexp en perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2d946e2bfb34dd4f7ba8364971084f9045ae306" translate="yes" xml:space="preserve">
          <source>The match operator. See &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23da9f3c77f641f40df01068ee8c7ee0a479ea6c" translate="yes" xml:space="preserve">
          <source>The match operator. See &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">El operador del partido. Consulte &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Operadores similares a citas de Regexp en perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f542541549a1bc6970c3286cf46be7af8b4f2d05" translate="yes" xml:space="preserve">
          <source>The match-once behavior is controlled by the match delimiter being &lt;code&gt;?&lt;/code&gt;; with any other delimiter this is the normal &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">El comportamiento de coincidencia &amp;uacute;nica est&amp;aacute; controlado por el delimitador de coincidencia que es &lt;code&gt;?&lt;/code&gt; ; con cualquier otro delimitador, este es el operador &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; normal .</target>
        </trans-unit>
        <trans-unit id="9eb42805d07d25374f7b5e9e6773ad7d57c9e1fb" translate="yes" xml:space="preserve">
          <source>The match-once behavior is controlled by the match delimiter being &lt;code&gt;?&lt;/code&gt;; with any other delimiter this is the normal &lt;code&gt;m//&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeba81f62bbef449f5b856ee7d56cb86c716867d" translate="yes" xml:space="preserve">
          <source>The matched-pattern variables, &lt;code&gt;$&amp;amp;&lt;/code&gt; , &lt;code&gt;$`&lt;/code&gt; (pre-match), &lt;code&gt;$'&lt;/code&gt; (post-match), and &lt;code&gt;$+&lt;/code&gt; (last match) also are tainted.</source>
          <target state="translated">Las variables de patr&amp;oacute;n coincidente, &lt;code&gt;$&amp;amp;&lt;/code&gt; , &lt;code&gt;$`&lt;/code&gt; (pre-coincidencia), &lt;code&gt;$'&lt;/code&gt; (post-coincidencia) y &lt;code&gt;$+&lt;/code&gt; (&amp;uacute;ltima coincidencia) tambi&amp;eacute;n est&amp;aacute;n contaminadas.</target>
        </trans-unit>
        <trans-unit id="22ab92cf81444e038908ef762ce8e093bd1b736d" translate="yes" xml:space="preserve">
          <source>The matched-pattern variables, &lt;code&gt;$&amp;amp;&lt;/code&gt;, &lt;code&gt;$`&lt;/code&gt; (pre-match), &lt;code&gt;$'&lt;/code&gt; (post-match), and &lt;code&gt;$+&lt;/code&gt; (last match) also are tainted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef4278a734cc2ba9814c78fdf30442bf1892ae1" translate="yes" xml:space="preserve">
          <source>The matching of encoding names is loose: case does not matter, and many encodings have several aliases. Note that the &lt;code&gt;:utf8&lt;/code&gt; layer must always be specified exactly like that; it is</source>
          <target state="translated">La coincidencia de nombres de codificaci&amp;oacute;n es imprecisa: las may&amp;uacute;sculas y min&amp;uacute;sculas no importan, y muchas codificaciones tienen varios alias. Tenga en cuenta que la capa &lt;code&gt;:utf8&lt;/code&gt; siempre debe especificarse exactamente as&amp;iacute;; es</target>
        </trans-unit>
        <trans-unit id="906f4ce57c5894760cba731d333a52399d7a0c38" translate="yes" xml:space="preserve">
          <source>The matching of encoding names is loose: case does not matter, and many encodings have several aliases. See &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt; for details and the list of supported locales.</source>
          <target state="translated">La coincidencia de nombres de codificaci&amp;oacute;n es imprecisa: las may&amp;uacute;sculas y min&amp;uacute;sculas no importan, y muchas codificaciones tienen varios alias. Consulte &lt;a href=&quot;encode/supported&quot;&gt;Encode :: Supported&lt;/a&gt; para obtener detalles y la lista de configuraciones regionales admitidas.</target>
        </trans-unit>
        <trans-unit id="4f9b61e44ff3edc932c4eb7e36f1dd657aefd954" translate="yes" xml:space="preserve">
          <source>The material below is separated into three main sections: main issues of portability (&lt;a href=&quot;#ISSUES&quot;&gt;&quot;ISSUES&quot;&lt;/a&gt;), platform-specific issues (&lt;a href=&quot;#PLATFORMS&quot;&gt;&quot;PLATFORMS&quot;&lt;/a&gt;), and built-in Perl functions that behave differently on various ports (&lt;a href=&quot;#FUNCTION-IMPLEMENTATIONS&quot;&gt;&quot;FUNCTION IMPLEMENTATIONS&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5401e94f4440b62a9a27d03fcc9d30b1169f66e8" translate="yes" xml:space="preserve">
          <source>The material below is separated into three main sections: main issues of portability (&lt;a href=&quot;#ISSUES&quot;&gt;ISSUES&lt;/a&gt;), platform-specific issues (&lt;a href=&quot;#PLATFORMS&quot;&gt;PLATFORMS&lt;/a&gt;), and built-in Perl functions that behave differently on various ports (&lt;a href=&quot;#FUNCTION-IMPLEMENTATIONS&quot;&gt;FUNCTION IMPLEMENTATIONS&lt;/a&gt;).</source>
          <target state="translated">El material a continuaci&amp;oacute;n se divide en tres secciones principales: problemas principales de portabilidad ( &lt;a href=&quot;#ISSUES&quot;&gt;PROBLEMAS&lt;/a&gt; ), problemas espec&amp;iacute;ficos de la plataforma ( &lt;a href=&quot;#PLATFORMS&quot;&gt;PLATAFORMAS&lt;/a&gt; ) y funciones de Perl integradas que se comportan de manera diferente en varios puertos ( &lt;a href=&quot;#FUNCTION-IMPLEMENTATIONS&quot;&gt;IMPLEMENTACIONES DE FUNCIONES&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6fb16dd0911e0291e015ca052ebafe0545c2d31f" translate="yes" xml:space="preserve">
          <source>The mathematically logical behavior for what matches when inverting is very different from what people expect, so we have decided to forbid it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bdf4570ce948d9dc30acbc885de4c23118fcd9" translate="yes" xml:space="preserve">
          <source>The maximal stack recursion limit for your system is returned by &lt;code&gt;stack_depth()&lt;/code&gt; and &lt;code&gt;stack_depth_hash()&lt;/code&gt;. The hash limit is usually half the size of the array and ref limit, as the Perl hash API is not optimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a757bded9f533a67a5134eccc21794fdd0b6bd" translate="yes" xml:space="preserve">
          <source>The maximum Unicode code point is &lt;code&gt;U+10FFFF&lt;/code&gt; , and Unicode only defines operations on code points up through that. But Perl works on code points up to the maximum permissible unsigned number available on the platform. However, Perl will not accept these from input streams unless lax rules are being used, and will warn (using the warning category &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; , which is a sub-category of &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; ) if any are output.</source>
          <target state="translated">El punto de c&amp;oacute;digo Unicode m&amp;aacute;ximo es &lt;code&gt;U+10FFFF&lt;/code&gt; , y Unicode solo define operaciones en puntos de c&amp;oacute;digo hasta ese punto. Pero Perl trabaja en puntos de c&amp;oacute;digo hasta el n&amp;uacute;mero m&amp;aacute;ximo permitido sin firmar disponible en la plataforma. Sin embargo, Perl no los aceptar&amp;aacute; de los flujos de entrada a menos que se est&amp;eacute;n usando reglas laxas, y advertir&amp;aacute; (usando la categor&amp;iacute;a de advertencia &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; , que es una subcategor&amp;iacute;a de &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; ) si se genera alguna.</target>
        </trans-unit>
        <trans-unit id="b742e9c8b7767f6a214c8234694eb3d1179ce880" translate="yes" xml:space="preserve">
          <source>The maximum Unicode code point is &lt;code&gt;U+10FFFF&lt;/code&gt;, and Unicode only defines operations on code points up through that. But Perl works on code points up to the maximum permissible signed number available on the platform. However, Perl will not accept these from input streams unless lax rules are being used, and will warn (using the warning category &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt;, which is a sub-category of &lt;code&gt;&quot;utf8&quot;&lt;/code&gt;) if any are output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf34b110c57827c6b09abffd19d7c17fb58a109" translate="yes" xml:space="preserve">
          <source>The maximum number of UTF-8 bytes a single Unicode character can uppercase/lowercase/titlecase/fold into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc1808d3e3fb6de5739d08162d085e4fb2b2c51" translate="yes" xml:space="preserve">
          <source>The maximum number of parallel tests to run at any time. Which tests can be run in parallel is controlled by &lt;code&gt;rules&lt;/code&gt; . The default is to run only one test at a time.</source>
          <target state="translated">El n&amp;uacute;mero m&amp;aacute;ximo de pruebas paralelas que se pueden ejecutar en cualquier momento. Las pruebas que se pueden ejecutar en paralelo se controlan mediante &lt;code&gt;rules&lt;/code&gt; . El valor predeterminado es ejecutar solo una prueba a la vez.</target>
        </trans-unit>
        <trans-unit id="406651585ee02adfd4eadd3dc163e4004c7e7bf5" translate="yes" xml:space="preserve">
          <source>The maximum number of parallel tests to run at any time. Which tests can be run in parallel is controlled by &lt;code&gt;rules&lt;/code&gt;. The default is to run only one test at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec24717c6af4893fa65de730b8ddea405e13134" translate="yes" xml:space="preserve">
          <source>The maximum number this construct can express is &lt;code&gt;\777&lt;/code&gt; . If you need a larger one, you need to use &lt;a href=&quot;perlrebackslash#Octal-escapes&quot;&gt;\o{}&lt;/a&gt; instead. If you meant two separate things, you need to separate them:</source>
          <target state="translated">El n&amp;uacute;mero m&amp;aacute;ximo que puede expresar esta construcci&amp;oacute;n es &lt;code&gt;\777&lt;/code&gt; . Si necesita uno m&amp;aacute;s grande, debe usar &lt;a href=&quot;perlrebackslash#Octal-escapes&quot;&gt;\ o {} en su&lt;/a&gt; lugar. Si se refer&amp;iacute;a a dos cosas distintas, debe separarlas:</target>
        </trans-unit>
        <trans-unit id="7227c386d0e30465e8c341c159e2afa8f961c0f3" translate="yes" xml:space="preserve">
          <source>The maximum number this construct can express is &lt;code&gt;\777&lt;/code&gt;. If you need a larger one, you need to use &lt;a href=&quot;perlrebackslash#Octal-escapes&quot;&gt;\o{}&lt;/a&gt; instead. If you meant two separate things, you need to separate them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823e727fb7ce51ed0c50f11b0b5dce6f9f8c6422" translate="yes" xml:space="preserve">
          <source>The maximum size of a Storable header is currently 21 bytes. If the provided $buffer is only the first part of a Storable image it should at least be this long to ensure that read_magic() will recognize it as such.</source>
          <target state="translated">El tamaño máximo de un encabezado almacenable es actualmente de 21 bytes.Si el $buffer proporcionado es sólo la primera parte de una imagen almacenable,debería ser al menos de este largo para asegurar que read_magic()lo reconozca como tal.</target>
        </trans-unit>
        <trans-unit id="54655c72af2839e9f037d863fc7638dac7966cf0" translate="yes" xml:space="preserve">
          <source>The maximum size of an extra field 65535 bytes.</source>
          <target state="translated">El tamaño máximo de un campo extra es de 65535 bytes.</target>
        </trans-unit>
        <trans-unit id="60da8f51a4ded24731bf101a405dc42107509236" translate="yes" xml:space="preserve">
          <source>The maximum size of the Extra Field 65535 bytes.</source>
          <target state="translated">El tamaño máximo del Campo Extra es de 65535 bytes.</target>
        </trans-unit>
        <trans-unit id="51d29e4ee16b1b5f77f1b62a7cfc84201aec0810" translate="yes" xml:space="preserve">
          <source>The maximum system file descriptor, ordinarily 2. System file descriptors are passed to &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;ed processes, while higher file descriptors are not. Also, during an &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;, system file descriptors are preserved even if the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; fails (ordinary file descriptors are closed before the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; is attempted). The close-on-exec status of a file descriptor will be decided according to the value of &lt;code&gt;$^F&lt;/code&gt; when the corresponding file, pipe, or socket was opened, not the time of the &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El descriptor m&amp;aacute;ximo de archivos del sistema, normalmente 2. Los descriptores de archivos del sistema se pasan a los procesos &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; ed, mientras que los descriptores de archivos superiores no. Adem&amp;aacute;s, durante un &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; , los descriptores de archivos del sistema se conservan incluso si &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; falla (los descriptores de archivos normales se cierran antes de intentar &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; ). El estado de cierre en ejecuci&amp;oacute;n de un descriptor de archivo se decidir&amp;aacute; de acuerdo con el valor de &lt;code&gt;$^F&lt;/code&gt; cuando se abri&amp;oacute; el archivo, tuber&amp;iacute;a o conector correspondiente, no el tiempo del &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="255fcbaa29e8f59e394f504d9d5b97b78390691f" translate="yes" xml:space="preserve">
          <source>The maximum system file descriptor, ordinarily 2. System file descriptors are passed to &lt;code&gt;exec()&lt;/code&gt;ed processes, while higher file descriptors are not. Also, during an &lt;code&gt;open()&lt;/code&gt;, system file descriptors are preserved even if the &lt;code&gt;open()&lt;/code&gt; fails (ordinary file descriptors are closed before the &lt;code&gt;open()&lt;/code&gt; is attempted). The close-on-exec status of a file descriptor will be decided according to the value of &lt;code&gt;$^F&lt;/code&gt; when the corresponding file, pipe, or socket was opened, not the time of the &lt;code&gt;exec()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e89770735afbf4b1f68a8769fe96140987a421" translate="yes" xml:space="preserve">
          <source>The maximum width of a single UTF-8 encoded character, in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9125f66ae949d81694c6e6210bfeb871e3d64e" translate="yes" xml:space="preserve">
          <source>The mechanism of translation of &lt;code&gt;\N{...}&lt;/code&gt; escapes is general and not hardwired into</source>
          <target state="translated">El mecanismo de traducci&amp;oacute;n de &lt;code&gt;\N{...}&lt;/code&gt; escapes es general y no est&amp;aacute; integrado en</target>
        </trans-unit>
        <trans-unit id="15610051fc12501695115ef5aed4c6968c7a9267" translate="yes" xml:space="preserve">
          <source>The members whose names begin with &lt;code&gt;int_p_&lt;/code&gt; and &lt;code&gt;int_n_&lt;/code&gt; were added by POSIX.1-2008 and are only available on systems that support them.</source>
          <target state="translated">Los miembros cuyos nombres comienzan con &lt;code&gt;int_p_&lt;/code&gt; e &lt;code&gt;int_n_&lt;/code&gt; fueron agregados por POSIX.1-2008 y solo est&amp;aacute;n disponibles en sistemas que los admiten.</target>
        </trans-unit>
        <trans-unit id="4d5d40b7966fb62c912a4471f016e0810caccade" translate="yes" xml:space="preserve">
          <source>The message attempts to include the name of the called subroutine. If the subroutine has been aliased, the subroutine's original name will be shown, regardless of what name the caller used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003de5e9e6baa363e9c030caff26155e591e361d" translate="yes" xml:space="preserve">
          <source>The message for the diag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a832ceb4e1a37f34e093f08ce43b0057c15482" translate="yes" xml:space="preserve">
          <source>The message for the note.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0974f2e5536c89d5a7aa01e203cfd55eb3c162" translate="yes" xml:space="preserve">
          <source>The message will be taken from whatever locale would be used by &lt;code&gt;$!&lt;/code&gt;, and will be encoded in the SV in whatever manner would be used by &lt;code&gt;$!&lt;/code&gt;. The details of this process are subject to future change. Currently, the message is taken from the C locale by default (usually producing an English message), and from the currently selected locale when in the scope of the &lt;code&gt;use locale&lt;/code&gt; pragma. A heuristic attempt is made to decode the message from the locale's character encoding, but it will only be decoded as either UTF-8 or ISO-8859-1. It is always correctly decoded in a UTF-8 locale, usually in an ISO-8859-1 locale, and never in any other locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36545165ac282d6d6bbbc3b54b056ad82f2d5183" translate="yes" xml:space="preserve">
          <source>The message, either sent via &lt;code&gt;datasend&lt;/code&gt; or as the &lt;code&gt;MESSAGE&lt;/code&gt; parameter, must be in the format as described by RFC822 and must contain From:, Newsgroups: and Subject: headers.</source>
          <target state="translated">El mensaje, ya sea enviado a trav&amp;eacute;s de env&amp;iacute;o de &lt;code&gt;datasend&lt;/code&gt; o como el par&amp;aacute;metro &lt;code&gt;MESSAGE&lt;/code&gt; , debe tener el formato descrito por RFC822 y debe contener los encabezados From :, Newsgroups: y Subject:.</target>
        </trans-unit>
        <trans-unit id="ee89b7499807e434bb5f68dbb5e73957271240a3" translate="yes" xml:space="preserve">
          <source>The messages are in alphabetical order, without regard to upper or lower-case. Some of these messages are generic. Spots that vary are denoted with a %s or other printf-style escape. These escapes are ignored by the alphabetical order, as are all characters other than letters. To look up your message, just ignore anything that is not a letter.</source>
          <target state="translated">Los mensajes están en orden alfabético,sin tener en cuenta las mayúsculas o minúsculas.Algunos de estos mensajes son genéricos.Los mensajes que varían se denotan con un %s u otro escape de tipo impreso.Estos escapes son ignorados por orden alfabético,al igual que todos los caracteres que no sean letras.Para buscar tu mensaje,simplemente ignora todo lo que no sea una letra.</target>
        </trans-unit>
        <trans-unit id="e3b332cdd50b0075e2980a517442567c35047868" translate="yes" xml:space="preserve">
          <source>The messages from error exits from inside the Perl core are generally more serious, and are not suppressed.</source>
          <target state="translated">Los mensajes de las salidas de error del interior del núcleo de Perl son generalmente más graves,y no se suprimen.</target>
        </trans-unit>
        <trans-unit id="f4b9735187b885f7dd604f43a0be8de295177167" translate="yes" xml:space="preserve">
          <source>The meta facet contains all the meta-data attached to the event. In this case the &lt;code&gt;details&lt;/code&gt; field has no special meaning, but may be present if something sets the 'details' meta-key on the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af14bb7cef38c681cd522700a18f3c2e85c4645f" translate="yes" xml:space="preserve">
          <source>The metacharacter &lt;code&gt;&quot;|&quot;&lt;/code&gt; is used to match one thing or another. Thus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1808948aa8eaa300120a3b2e59e72e75d61ea383" translate="yes" xml:space="preserve">
          <source>The metaconfig system has its own git repository. Please see its README file in &lt;a href=&quot;http://perl5.git.perl.org/metaconfig.git/&quot;&gt;http://perl5.git.perl.org/metaconfig.git/&lt;/a&gt; for more details.</source>
          <target state="translated">El sistema de metaconfiguraci&amp;oacute;n tiene su propio repositorio de git. Consulte su archivo README en &lt;a href=&quot;http://perl5.git.perl.org/metaconfig.git/&quot;&gt;http://perl5.git.perl.org/metaconfig.git/&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="bc1a65f602d496a5d44a6f0eb65c069b2917da93" translate="yes" xml:space="preserve">
          <source>The metaconfig system has its own git repository. Please see its README file in &lt;a href=&quot;https://github.com/Perl/metaconfig&quot;&gt;https://github.com/Perl/metaconfig&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4d1d7707c31f137e3be5c9c3439a6616b37606" translate="yes" xml:space="preserve">
          <source>The metadata structure is a data element of type Map. This section describes valid keys within the Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57044926f6935330105dc7655b75810e4319d78e" translate="yes" xml:space="preserve">
          <source>The metanotation &lt;code&gt;a{b,c,d}e&lt;/code&gt; is a shorthand for &lt;code&gt;abe ace ade&lt;/code&gt; . Left to right order is preserved, with results of matches being sorted separately at a low level to preserve this order. As a special case &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, and &lt;code&gt;{}&lt;/code&gt; are passed undisturbed.</source>
          <target state="translated">La metanotaci&amp;oacute;n &lt;code&gt;a{b,c,d}e&lt;/code&gt; es una abreviatura de &lt;code&gt;abe ace ade&lt;/code&gt; . Se conserva el orden de izquierda a derecha, y los resultados de las coincidencias se ordenan por separado en un nivel bajo para conservar este orden. Como caso especial , &lt;code&gt;{&lt;/code&gt; , &lt;code&gt;}&lt;/code&gt; y &lt;code&gt;{}&lt;/code&gt; se pasan sin problemas.</target>
        </trans-unit>
        <trans-unit id="9487974ec391513333e9625acd21a3a26e0c7e56" translate="yes" xml:space="preserve">
          <source>The metanotation &lt;code&gt;a{b,c,d}e&lt;/code&gt; is a shorthand for &lt;code&gt;abe ace ade&lt;/code&gt;. Left to right order is preserved, with results of matches being sorted separately at a low level to preserve this order. As a special case &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, and &lt;code&gt;{}&lt;/code&gt; are passed undisturbed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3047e3773833dff832f2198e8a9edf5e427dcdc4" translate="yes" xml:space="preserve">
          <source>The method &lt;b&gt;simplify_name&lt;/b&gt; is equivalent to &lt;b&gt;basename&lt;/b&gt;, but also strips Perl-like extensions (.pm, .pl, .pod) and extensions like</source>
          <target state="translated">El m&amp;eacute;todo &lt;b&gt;simplify_name&lt;/b&gt; es equivalente a &lt;b&gt;basename&lt;/b&gt; , pero tambi&amp;eacute;n elimina las extensiones similares a Perl (.pm, .pl, .pod) y extensiones como</target>
        </trans-unit>
        <trans-unit id="81b66f93d3069f9e60e8cef6e91ea8cf83a141d7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;pretty&lt;/code&gt; is doing object-to-string conversion, so it is natural to overload the operator &lt;code&gt;&quot;&quot;&lt;/code&gt; using this method. However, inside such a method it is not necessary to pretty-print the</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;pretty&lt;/code&gt; est&amp;aacute; haciendo conversi&amp;oacute;n de objeto a cadena, por lo que es natural &lt;code&gt;&quot;&quot;&lt;/code&gt; sobrecargar al operador usando este m&amp;eacute;todo. Sin embargo, dentro de un mtodo de este tipo no es necesario imprimir</target>
        </trans-unit>
        <trans-unit id="a6763bc5ce44c1cfaff83e339121fc03fa4b9167" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;survey&lt;/code&gt; searches for POD documents in a given set of files and/or directories. This runs the search according to the various options set by the accessors above. (For example, if the &lt;code&gt;inc&lt;/code&gt; attribute is on, as it is by default, then the perl @INC directories are implicitly added to the list of directories (if any) that you specify.)</source>
          <target state="translated">La &lt;code&gt;survey&lt;/code&gt; m&amp;eacute;todo busca documentos POD en un conjunto dado de archivos y / o directorios. Esto ejecuta la b&amp;uacute;squeda de acuerdo con las diversas opciones establecidas por los descriptores de acceso anteriores. (Por ejemplo, si el atributo &lt;code&gt;inc&lt;/code&gt; est&amp;aacute; activado, como est&amp;aacute; por defecto, los directorios perl @INC se agregan impl&amp;iacute;citamente a la lista de directorios (si corresponde) que especifique).</target>
        </trans-unit>
        <trans-unit id="c2594fdbf7af0dec9dd0b0469d5ba6b9ac83d4b7" translate="yes" xml:space="preserve">
          <source>The method forms return the object itself when called with arguments, so that they can be chained together nicely.</source>
          <target state="translated">Las formas del método devuelven el objeto mismo cuando es llamado con argumentos,para que puedan ser encadenados juntos de forma agradable.</target>
        </trans-unit>
        <trans-unit id="2dce83e2cc72bad00d236d5c3647c5845395811f" translate="yes" xml:space="preserve">
          <source>The method invoked by the command &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt; $scalar, classname&lt;/code&gt; . Associates a new scalar instance with the specified class. &lt;code&gt;LIST&lt;/code&gt; would represent additional arguments (along the lines of &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; and compatriots) needed to complete the association.</source>
          <target state="translated">El m&amp;eacute;todo invocado por el comando &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt; $scalar, classname&lt;/code&gt; . Asocia una nueva instancia escalar con la clase especificada. &lt;code&gt;LIST&lt;/code&gt; representar&amp;iacute;a argumentos adicionales (en la l&amp;iacute;nea de &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; y compatriotas) necesarios para completar la asociaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1329855cb3bc4e49bb5ad4447529605d17972380" translate="yes" xml:space="preserve">
          <source>The method invoked by the command &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt; %hash, classname&lt;/code&gt; . Associates a new hash instance with the specified class. &lt;code&gt;LIST&lt;/code&gt; would represent additional arguments (along the lines of &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; and compatriots) needed to complete the association.</source>
          <target state="translated">El m&amp;eacute;todo invocado por el comando &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt; %hash, classname&lt;/code&gt; . Asocia una nueva instancia de hash con la clase especificada. &lt;code&gt;LIST&lt;/code&gt; representar&amp;iacute;a argumentos adicionales (en la l&amp;iacute;nea de &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; y compatriotas) necesarios para completar la asociaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f4e115efd5b349da6e5daf0e7907f6b8a0251fea" translate="yes" xml:space="preserve">
          <source>The method invoked by the command &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt; *glob, classname&lt;/code&gt; . Associates a new glob instance with the specified class. &lt;code&gt;LIST&lt;/code&gt; would represent additional arguments (along the lines of &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; and compatriots) needed to complete the association.</source>
          <target state="translated">El m&amp;eacute;todo invocado por el comando &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt; *glob, classname&lt;/code&gt; . Asocia una nueva instancia global con la clase especificada. &lt;code&gt;LIST&lt;/code&gt; representar&amp;iacute;a argumentos adicionales (en la l&amp;iacute;nea de &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; y compatriotas) necesarios para completar la asociaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3c64476d97600b750453bf420a9f4075f0306d1d" translate="yes" xml:space="preserve">
          <source>The method invoked by the command &lt;code&gt;tie $scalar, classname&lt;/code&gt;. Associates a new scalar instance with the specified class. &lt;code&gt;LIST&lt;/code&gt; would represent additional arguments (along the lines of &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; and compatriots) needed to complete the association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf56df28d8dc9b4d15467c9f598303b09011b2d" translate="yes" xml:space="preserve">
          <source>The method invoked by the command &lt;code&gt;tie %hash, classname&lt;/code&gt;. Associates a new hash instance with the specified class. &lt;code&gt;LIST&lt;/code&gt; would represent additional arguments (along the lines of &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; and compatriots) needed to complete the association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef7e6fea27b8c9527a2ee7d3c51ad487105105d" translate="yes" xml:space="preserve">
          <source>The method invoked by the command &lt;code&gt;tie *glob, classname&lt;/code&gt;. Associates a new glob instance with the specified class. &lt;code&gt;LIST&lt;/code&gt; would represent additional arguments (along the lines of &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; and compatriots) needed to complete the association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5b5c7ccd1b01e888481ba1e2326ba23ba62558" translate="yes" xml:space="preserve">
          <source>The method may be called as a function (this is the legacy interface) and will then use a singleton as invocant.</source>
          <target state="translated">El método puede ser llamado como una función (esta es la interfaz de legado)y luego usará un solo botón como invocador.</target>
        </trans-unit>
        <trans-unit id="a347cbeea5ef9dc7aa2915d6eb1498ed186d3546" translate="yes" xml:space="preserve">
          <source>The method must then return the object. While technically you can return any Perl scalar, you might have to enable the &lt;code&gt;allow_nonref&lt;/code&gt; setting to make that work in all cases, so better return an actual blessed reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219560b3e009187526f9cca6647b331f9670e08d" translate="yes" xml:space="preserve">
          <source>The method takes care not to use a HERE-doc end marker that appears in the typemap string itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8494bae7398a8984704473fee4ce9cba1c67c3" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt; are not defined in &lt;b&gt;Tie::Hash&lt;/b&gt;, &lt;b&gt;Tie::StdHash&lt;/b&gt;, or &lt;b&gt;Tie::ExtraHash&lt;/b&gt;. Tied hashes do not require presence of these methods, but if defined, the methods will be called in proper time, see &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;.</source>
          <target state="translated">Los m&amp;eacute;todos &lt;code&gt;UNTIE&lt;/code&gt; y &lt;code&gt;DESTROY&lt;/code&gt; no est&amp;aacute;n definidos en &lt;b&gt;Tie :: Hash&lt;/b&gt; , &lt;b&gt;Tie :: StdHash&lt;/b&gt; o &lt;b&gt;Tie :: ExtraHash&lt;/b&gt; . Los hash vinculados no requieren la presencia de estos m&amp;eacute;todos, pero si se definen, los m&amp;eacute;todos se &lt;a href=&quot;../perltie&quot;&gt;llamar&amp;aacute;n&lt;/a&gt; en el momento adecuado, consulte perltie .</target>
        </trans-unit>
        <trans-unit id="ef8892a6c7e1ed9417668a258714fa58aaa9de51" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt; are not defined in &lt;b&gt;Tie::Hash&lt;/b&gt;, &lt;b&gt;Tie::StdHash&lt;/b&gt;, or &lt;b&gt;Tie::ExtraHash&lt;/b&gt;. Tied hashes do not require presence of these methods, but if defined, the methods will be called in proper time, see &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0efdfb2d42a690264f248f711dbbf09fd69f9a" translate="yes" xml:space="preserve">
          <source>The methods POP, PUSH, SHIFT, UNSHIFT, SPLICE, DELETE, and EXISTS are required if the perl operator with the corresponding (but lowercase) name is to operate on the tied array. The &lt;b&gt;Tie::Array&lt;/b&gt; class can be used as a base class to implement the first five of these in terms of the basic methods above. The default implementations of DELETE and EXISTS in &lt;b&gt;Tie::Array&lt;/b&gt; simply &lt;code&gt;croak&lt;/code&gt; .</source>
          <target state="translated">Los m&amp;eacute;todos POP, PUSH, SHIFT, UNSHIFT, SPLICE, DELETE y EXISTS son necesarios si el operador perl con el nombre correspondiente (pero en min&amp;uacute;sculas) va a operar en la matriz vinculada. La clase &lt;b&gt;Tie :: Array&lt;/b&gt; se puede utilizar como una clase base para implementar las cinco primeras en t&amp;eacute;rminos de los m&amp;eacute;todos b&amp;aacute;sicos anteriores. Las implementaciones predeterminadas de DELETE y EXISTS en &lt;b&gt;Tie :: Array&lt;/b&gt; simplemente &lt;code&gt;croak&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4a5e54d75cc63679c6ace9898dabb0095727d66" translate="yes" xml:space="preserve">
          <source>The methods POP, PUSH, SHIFT, UNSHIFT, SPLICE, DELETE, and EXISTS are required if the perl operator with the corresponding (but lowercase) name is to operate on the tied array. The &lt;b&gt;Tie::Array&lt;/b&gt; class can be used as a base class to implement the first five of these in terms of the basic methods above. The default implementations of DELETE and EXISTS in &lt;b&gt;Tie::Array&lt;/b&gt; simply &lt;code&gt;croak&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca020c3e2bd3840f09ecda9c60cedd92ab50da2" translate="yes" xml:space="preserve">
          <source>The methods associated with a file might include &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los m&amp;eacute;todos asociados con un archivo pueden incluir &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9038e299e83dde3b869fda0661c2f473ffe7af89" translate="yes" xml:space="preserve">
          <source>The methods associated with a file might include &lt;code&gt;rename()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5263ae238fdcff040734aa4eb38a1f937d29acc1" translate="yes" xml:space="preserve">
          <source>The methods make the assumption that there are 24 hours in a day, 7 days in a week, 365.24225 days in a year and 12 months in a year. (from The Calendar FAQ at &lt;a href=&quot;http://www.tondering.dk/claus/calendar.html&quot;&gt;http://www.tondering.dk/claus/calendar.html&lt;/a&gt;)</source>
          <target state="translated">Los m&amp;eacute;todos suponen que hay 24 horas en un d&amp;iacute;a, 7 d&amp;iacute;as en una semana, 365,24225 d&amp;iacute;as en un a&amp;ntilde;o y 12 meses en un a&amp;ntilde;o. (de The Calendar FAQ en &lt;a href=&quot;http://www.tondering.dk/claus/calendar.html&quot;&gt;http://www.tondering.dk/claus/calendar.html&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f3937d8a57bcf6a9fc84c7bb1157e33f7b1b81bb" translate="yes" xml:space="preserve">
          <source>The methods make the assumption that there are 24 hours in a day, 7 days in a week, 365.24225 days in a year and 12 months in a year. (from The Calendar FAQ at http://www.tondering.dk/claus/calendar.html)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cd0464641ff6280d0d7597be80f4d79435c372" translate="yes" xml:space="preserve">
          <source>The methods provided by this package are designed to be used in conjunction with &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;. When MakeMaker writes a Makefile, it creates one or more objects that inherit their methods from a package &lt;a href=&quot;ExtUtils::MM&quot;&gt;MM&lt;/a&gt;. MM itself doesn't provide any methods, but it ISA ExtUtils::MM_Unix class. The inheritance tree of MM lets operating specific packages take the responsibility for all the methods provided by MM_Unix. We are trying to reduce the number of the necessary overrides by defining rather primitive operations within ExtUtils::MM_Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b489e4d842d7bd01e6f982c6cbb73f631b2bc2" translate="yes" xml:space="preserve">
          <source>The methods provided by this package are designed to be used in conjunction with ExtUtils::MakeMaker. When MakeMaker writes a Makefile, it creates one or more objects that inherit their methods from a package &lt;code&gt;MM&lt;/code&gt; . MM itself doesn't provide any methods, but it ISA ExtUtils::MM_Unix class. The inheritance tree of MM lets operating specific packages take the responsibility for all the methods provided by MM_Unix. We are trying to reduce the number of the necessary overrides by defining rather primitive operations within ExtUtils::MM_Unix.</source>
          <target state="translated">Los m&amp;eacute;todos proporcionados por este paquete est&amp;aacute;n dise&amp;ntilde;ados para utilizarse junto con ExtUtils :: MakeMaker. Cuando MakeMaker escribe un Makefile, crea uno o m&amp;aacute;s objetos que heredan sus m&amp;eacute;todos de un paquete &lt;code&gt;MM&lt;/code&gt; . MM en s&amp;iacute; no proporciona ning&amp;uacute;n m&amp;eacute;todo, pero es la clase ISA ExtUtils :: MM_Unix. El &amp;aacute;rbol de herencia de MM permite que los paquetes operativos espec&amp;iacute;ficos asuman la responsabilidad de todos los m&amp;eacute;todos proporcionados por MM_Unix. Estamos tratando de reducir el n&amp;uacute;mero de anulaciones necesarias definiendo operaciones bastante primitivas dentro de ExtUtils :: MM_Unix.</target>
        </trans-unit>
        <trans-unit id="8c66ae4f45a17e24ec4e91baabbe3addbe06fe69" translate="yes" xml:space="preserve">
          <source>The methods return a status value. All return 0 on success. All return -1 to signify an error and set &lt;code&gt;$!&lt;/code&gt; to the exact error code. The return code 1 generally (but not always) means that the key specified did not exist in the database.</source>
          <target state="translated">Los m&amp;eacute;todos devuelven un valor de estado. Todos devuelven 0 en caso de &amp;eacute;xito. Todos devuelven -1 para indicar un error y ponen &lt;code&gt;$!&lt;/code&gt; al c&amp;oacute;digo de error exacto. El c&amp;oacute;digo de retorno 1 generalmente (pero no siempre) significa que la clave especificada no exist&amp;iacute;a en la base de datos.</target>
        </trans-unit>
        <trans-unit id="fbd4260de22fedf44d365a30940fb70d70e7661e" translate="yes" xml:space="preserve">
          <source>The methods return true if the argument is positive or negative, respectively. &lt;code&gt;NaN&lt;/code&gt; is neither positive nor negative, while &lt;code&gt;+inf&lt;/code&gt; counts as positive, and &lt;code&gt;-inf&lt;/code&gt; is negative. A &lt;code&gt;zero&lt;/code&gt; is neither positive nor negative.</source>
          <target state="translated">Los m&amp;eacute;todos devuelven verdadero si el argumento es positivo o negativo, respectivamente. &lt;code&gt;NaN&lt;/code&gt; no es ni positivo ni negativo, mientras que &lt;code&gt;+inf&lt;/code&gt; cuenta como positivo y &lt;code&gt;-inf&lt;/code&gt; es negativo. Un &lt;code&gt;zero&lt;/code&gt; no es ni positivo ni negativo.</target>
        </trans-unit>
        <trans-unit id="6c2ef40bc1a0b74efb3bfbccd9cee9239eba6f64" translate="yes" xml:space="preserve">
          <source>The midpoint between London and Tokyo being</source>
          <target state="translated">El punto medio entre Londres y Tokio es</target>
        </trans-unit>
        <trans-unit id="bbcb1c9041fb73d5b33a27311e97c3d17c5b0e33" translate="yes" xml:space="preserve">
          <source>The minimal implementation of the package &lt;code&gt;MyMaths&lt;/code&gt; would be something like this:</source>
          <target state="translated">La implementaci&amp;oacute;n m&amp;iacute;nima del paquete &lt;code&gt;MyMaths&lt;/code&gt; ser&amp;iacute;a algo como esto:</target>
        </trans-unit>
        <trans-unit id="3d4726f2195d659bbd07fd552c77e45ca0215cb6" translate="yes" xml:space="preserve">
          <source>The minimal length of the match.</source>
          <target state="translated">La duración mínima del partido.</target>
        </trans-unit>
        <trans-unit id="4d621dfdcd896d4c7f5ef5df72bf41823f001388" translate="yes" xml:space="preserve">
          <source>The minimal string that will allow both the start of the string &lt;code&gt;'^'&lt;/code&gt; and the alternation to match is &lt;code&gt;Th&lt;/code&gt;, with the alternation &lt;code&gt;e|r&lt;/code&gt; matching &lt;code&gt;'e'&lt;/code&gt;. The second quantifier &lt;code&gt;.*&lt;/code&gt; is free to gobble up the rest of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a86715e4677adbc552d12f74a0aff8aa19f9b9f" translate="yes" xml:space="preserve">
          <source>The minimal string that will allow both the start of the string &lt;code&gt;^&lt;/code&gt; and the alternation to match is &lt;code&gt;Th&lt;/code&gt; , with the alternation &lt;code&gt;e|r&lt;/code&gt; matching &lt;code&gt;e&lt;/code&gt; . The second quantifier &lt;code&gt;.*&lt;/code&gt; is free to gobble up the rest of the string.</source>
          <target state="translated">La cadena m&amp;iacute;nima que permitir&amp;aacute; que el inicio de la cadena &lt;code&gt;^&lt;/code&gt; y la alternancia coincidan es &lt;code&gt;Th&lt;/code&gt; , con la alternancia &lt;code&gt;e|r&lt;/code&gt; coincidiendo con &lt;code&gt;e&lt;/code&gt; . El segundo cuantificador &lt;code&gt;.*&lt;/code&gt; Es libre de engullir el resto de la cadena.</target>
        </trans-unit>
        <trans-unit id="42ee81d06f4fac118ea52fe7a6d4f7afb844e686" translate="yes" xml:space="preserve">
          <source>The minimum prerequisites for the distribution, to which dynamic configuration will only add items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e954716b49cb8b56dd5f1434ce35c364bc034cbd" translate="yes" xml:space="preserve">
          <source>The minimum required version of Perl for this distribution.</source>
          <target state="translated">La versión mínima requerida de Perl para esta distribución.</target>
        </trans-unit>
        <trans-unit id="8f285323eacf0d3787ce2842089aae064f612899" translate="yes" xml:space="preserve">
          <source>The minimum severity level set by &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; mode may be changed to be ERROR or higher in the future depending on the results of testing and further review.</source>
          <target state="translated">El nivel de gravedad m&amp;iacute;nimo establecido por el &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; en el modo &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; puede cambiarse para ser ERROR o superior en el futuro, seg&amp;uacute;n los resultados de las pruebas y la revisi&amp;oacute;n adicional.</target>
        </trans-unit>
        <trans-unit id="a1189f16cd283f7a0c83693c3d814114bd713075" translate="yes" xml:space="preserve">
          <source>The minimum severity level set by &lt;code&gt;die&lt;/code&gt; in &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; mode may be changed to be ERROR or higher in the future depending on the results of testing and further review.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0eb7e9cbc117a074d8972fb43eb29ea9f494777" translate="yes" xml:space="preserve">
          <source>The minimum string length (in characters) required for the pattern to match. This is used to prune the search space by not bothering to match any closer to the end of a string than would allow a match. For instance there is no point in even starting the regex engine if the minlen is 10 but the string is only 5 characters long. There is no way that the pattern can match.</source>
          <target state="translated">La longitud mínima de la cadena (en caracteres)necesaria para que el patrón coincida.Esto se utiliza para podar el espacio de búsqueda al no molestarse en emparejar más cerca del final de una cadena de lo que permitiría una coincidencia.Por ejemplo,no tiene sentido ni siquiera iniciar el motor regex si el minlen es 10 pero la cadena sólo tiene 5 caracteres de longitud.No hay manera de que el patrón pueda coincidir.</target>
        </trans-unit>
        <trans-unit id="210162554d25993f24361ef0d0eb6d7705ae9f1e" translate="yes" xml:space="preserve">
          <source>The mkpath() function provide the legacy interface of make_path() with a different interpretation of the arguments passed. The behaviour and return value of the function is otherwise identical to make_path().</source>
          <target state="translated">La función mkpath()proporciona a la interfaz heredada de make_path()una interpretación diferente de los argumentos pasados.El comportamiento y el valor de retorno de la función es,por lo demás,idéntico a make_path().</target>
        </trans-unit>
        <trans-unit id="06ad56158c8fa5ced75a1aebddb172710774c3d6" translate="yes" xml:space="preserve">
          <source>The mode argument should be a string as would be passed to fopen/PerlIO_open. If it is NULL then - for legacy support - the code will (depending upon the platform and the implementation) either attempt to empirically determine the mode in which</source>
          <target state="translated">El argumento mode debería ser una cadena como la que se pasaría a fopen/PerlIO_open.Si es NULL entonces-para el soporte de legado-el código (dependiendo de la plataforma y la implementación)intentará determinar empíricamente el modo en el que</target>
        </trans-unit>
        <trans-unit id="a3c9e181407a3d8dbcbede503e296bb6515c64a6" translate="yes" xml:space="preserve">
          <source>The modern convention for OO modules is to always use &lt;code&gt;new&lt;/code&gt; as the name for the constructor, but there is no requirement to do so. Any subroutine that blesses a data structure into a class is a valid constructor in Perl.</source>
          <target state="translated">La convenci&amp;oacute;n moderna para los m&amp;oacute;dulos OO es usar siempre &lt;code&gt;new&lt;/code&gt; como el nombre del constructor, pero no es necesario hacerlo. Cualquier subrutina que bendiga una estructura de datos en una clase es un constructor v&amp;aacute;lido en Perl.</target>
        </trans-unit>
        <trans-unit id="3447af7744c6d54de16c62d9254e4d7db34879e8" translate="yes" xml:space="preserve">
          <source>The modern successor of &lt;code&gt;CJK.inf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a53357f11465725d38d814ff941d393401ed024" translate="yes" xml:space="preserve">
          <source>The module</source>
          <target state="translated">El módulo</target>
        </trans-unit>
        <trans-unit id="73f13a2108211624409b0cfacd9ef18c01b16a7a" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;Perl::Unsafe::Signals&quot;&gt;Perl::Unsafe::Signals&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e5705c3d4c65fd8c41a20a40b57ad45ad89ac2" translate="yes" xml:space="preserve">
          <source>The module actually implements most of an interface described by Larry Wall on the perl5-porters mailing list here: &lt;a href=&quot;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2000-01/msg00241.html&quot;&gt;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2000-01/msg00241.html&lt;/a&gt;</source>
          <target state="translated">El m&amp;oacute;dulo en realidad implementa la mayor parte de una interfaz descrita por Larry Wall en la lista de correo de perl5-porters aqu&amp;iacute;: &lt;a href=&quot;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2000-01/msg00241.html&quot;&gt;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2000-01/msg00241.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbe2b6eee3b2ebdf5395a20e5b4843961160d7fa" translate="yes" xml:space="preserve">
          <source>The module actually implements most of an interface described by Larry Wall on the perl5-porters mailing list here: &lt;a href=&quot;https://www.nntp.perl.org/group/perl.perl5.porters/2000/01/msg5283.html&quot;&gt;https://www.nntp.perl.org/group/perl.perl5.porters/2000/01/msg5283.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eac150fbe415255f3cdb34d1744497bc9492853" translate="yes" xml:space="preserve">
          <source>The module also lets you save intermediate SHA states to a string. The</source>
          <target state="translated">El módulo también permite guardar los estados intermedios del SHA en una cadena.El</target>
        </trans-unit>
        <trans-unit id="ee711fa1cc9e23459ad1dea67a4bc2640b9361b2" translate="yes" xml:space="preserve">
          <source>The module and its user have a contract, part of which is common law, and part of which is &quot;written&quot;. Part of the common law contract is that a module doesn't pollute any namespace it wasn't asked to. The written contract for the module (A.K.A. documentation) may make other provisions. But then you know when you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; RedefineTheWorld&lt;/code&gt; that you're redefining the world and willing to take the consequences.</source>
          <target state="translated">El m&amp;oacute;dulo y su usuario tienen un contrato, parte del cual es de derecho consuetudinario y parte del cual est&amp;aacute; &quot;escrito&quot;. Parte del contrato de derecho consuetudinario es que un m&amp;oacute;dulo no contamina ning&amp;uacute;n espacio de nombres que no se le pidi&amp;oacute;. El contrato escrito para el m&amp;oacute;dulo (documentaci&amp;oacute;n AKA) puede incluir otras disposiciones. Pero entonces usted sabe cuando se &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; RedefineTheWorld&lt;/code&gt; que est&amp;aacute; redefiniendo el mundo y dispuesto a asumir las consecuencias.</target>
        </trans-unit>
        <trans-unit id="9372253e447b67364ad520e524aa1e247f7dc577" translate="yes" xml:space="preserve">
          <source>The module and its user have a contract, part of which is common law, and part of which is &quot;written&quot;. Part of the common law contract is that a module doesn't pollute any namespace it wasn't asked to. The written contract for the module (A.K.A. documentation) may make other provisions. But then you know when you &lt;code&gt;use RedefineTheWorld&lt;/code&gt; that you're redefining the world and willing to take the consequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f631dbc58be0710de0b64e0128de801aadc778" translate="yes" xml:space="preserve">
          <source>The module appropriate for the current OS is automatically loaded by File::Spec. Since some modules (like VMS) make use of facilities available only under that OS, it may not be possible to load all modules under all operating systems.</source>
          <target state="translated">El módulo apropiado para el sistema operativo actual es cargado automáticamente por el archivo::Spec.Dado que algunos módulos (como el VMS)hacen uso de instalaciones disponibles sólo en ese SO,puede que no sea posible cargar todos los módulos en todos los sistemas operativos.</target>
        </trans-unit>
        <trans-unit id="f14f53ac2830f28434b0714747d843bf7a9d032c" translate="yes" xml:space="preserve">
          <source>The module author loves to hear how &lt;code&gt;autodie&lt;/code&gt; has made your life better (or worse). Feedback can be sent to &amp;lt;pjf@perltraining.com.au&amp;gt;.</source>
          <target state="translated">Al autor del m&amp;oacute;dulo le encanta escuchar c&amp;oacute;mo &lt;code&gt;autodie&lt;/code&gt; ha mejorado (o empeorado) su vida. Los comentarios se pueden enviar a &amp;lt;pjf@perltraining.com.au&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="64e716d94d3201717e95856fa71dba02b691c1e4" translate="yes" xml:space="preserve">
          <source>The module functionality relies on symbolic references, so things will break under 'use strict' unless 'no strict &quot;refs&quot;' is also specified.</source>
          <target state="translated">La funcionalidad del módulo se basa en referencias simbólicas,por lo que las cosas se romperán bajo &quot;use strict&quot; a menos que también se especifique &quot;no strict &quot;refs&quot;&quot;.</target>
        </trans-unit>
        <trans-unit id="0003d7a83a288e163c978c48b4832ab6428ef2d5" translate="yes" xml:space="preserve">
          <source>The module is not entirely round-trip safe: For example it currently simply strips all comments. The order of entries in the maps is, however, preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dfe6e94b964deab3088dd9f024d26797644959" translate="yes" xml:space="preserve">
          <source>The module is used to replace common UNIX commands. In all cases the functions work from @ARGV rather than taking arguments. This makes them easier to deal with in Makefiles. Call them like this:</source>
          <target state="translated">El módulo se utiliza para reemplazar los comandos comunes de UNIX.En todos los casos las funciones funcionan desde @ARGV en lugar de tomar argumentos.Esto hace que sean más fáciles de tratar en los Makefiles.Llámalas así:</target>
        </trans-unit>
        <trans-unit id="7b2c2d003f5a465317ebb185dd8468c1c69f2ab8" translate="yes" xml:space="preserve">
          <source>The module itself never broke, you do not need to upgrade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a785d24a660af5bf727090a58cdad6783dbc670b" translate="yes" xml:space="preserve">
          <source>The module itself works fine, there is no need to upgrade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c671baea2f821aba32cfc72c5c947bba8fda15dc" translate="yes" xml:space="preserve">
          <source>The module might issue the following warnings:</source>
          <target state="translated">El módulo podría emitir las siguientes advertencias:</target>
        </trans-unit>
        <trans-unit id="06580747828c7d751b4066d4d4c51e0e99e3ed97" translate="yes" xml:space="preserve">
          <source>The module that implements the canned filter can take one of two forms. Here is a template for the first</source>
          <target state="translated">El módulo que implementa el filtro enlatado puede tomar una de dos formas.Aquí hay una plantilla para la primera</target>
        </trans-unit>
        <trans-unit id="aa3f15cb2c51087f06437c33aa4d5adadaa3850c" translate="yes" xml:space="preserve">
          <source>The module will auto-detect which, if any, of the supported compression formats is being used.</source>
          <target state="translated">El módulo detectará automáticamente cuál,si es que hay alguno,de los formatos de compresión soportados se está usando.</target>
        </trans-unit>
        <trans-unit id="f166adc5fd8c563e508f523c65a82ae50be2d86f" translate="yes" xml:space="preserve">
          <source>The month (&lt;code&gt;mon&lt;/code&gt; ), weekday (&lt;code&gt;wday&lt;/code&gt; ), and yearday (&lt;code&gt;yday&lt;/code&gt; ) begin at zero,</source>
          <target state="translated">El mes ( &lt;code&gt;mon&lt;/code&gt; ), el d&amp;iacute;a de la semana ( &lt;code&gt;wday&lt;/code&gt; ) y el d&amp;iacute;a del a&amp;ntilde;o ( &lt;code&gt;yday&lt;/code&gt; ) comienzan en cero,</target>
        </trans-unit>
        <trans-unit id="716f3ac895408852fbfe14ab4075855f3cc5828e" translate="yes" xml:space="preserve">
          <source>The month (&lt;code&gt;mon&lt;/code&gt;), weekday (&lt;code&gt;wday&lt;/code&gt;), and yearday (&lt;code&gt;yday&lt;/code&gt;) begin at zero,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7976bab032857556f1afeeb5486bc37536242264" translate="yes" xml:space="preserve">
          <source>The months and years can be negative for subtractions. Note that there is some &quot;strange&quot; behaviour when adding and subtracting months at the ends of months. Generally when the resulting month is shorter than the starting month then the number of overlap days is added. For example subtracting a month from 2008-03-31 will not result in 2008-02-31 as this is an impossible date. Instead you will get 2008-03-02. This appears to be consistent with other date manipulation tools.</source>
          <target state="translated">Los meses y años pueden ser negativos para las sustracciones.Obsérvese que hay un comportamiento &quot;extraño&quot; al sumar y restar meses al final de los meses.Generalmente,cuando el mes resultante es más corto que el mes inicial,entonces se suma el número de días de superposición.Por ejemplo,restar un mes de 2008-03-31 no dará como resultado 2008-02-31 ya que es una fecha imposible.En su lugar obtendrá 2008-03-02.Esto parece ser coherente con otras herramientas de manipulación de fechas.</target>
        </trans-unit>
        <trans-unit id="467ee849edeaf9f54792730271f84d84084b5500" translate="yes" xml:space="preserve">
          <source>The more modern form of version assignment, with 3 (or potentially more) integers separated by decimal points (e.g. v1.2.3). This is the form that Perl itself has used since 5.6.0 was released. The leading 'v' is now strongly recommended for clarity, and will throw a warning in a future release if omitted. A leading 'v' character is required to pass the &lt;a href=&quot;#is_strict%28%29&quot;&gt;&quot;is_strict()&quot;&lt;/a&gt; test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9450d19149fb47c1c53f97698b4be633a15d56" translate="yes" xml:space="preserve">
          <source>The more you think about interfacing between two languages, the more you'll realize that the majority of programmer effort has to go into converting between the data structures that are native to either of the languages involved. This trumps other matter such as differing calling conventions because the problem space is so much greater. There are simply more ways to shove data into memory than there are ways to implement a function call.</source>
          <target state="translated">Cuanto más pienses en la interconexión entre dos lenguajes,más te darás cuenta de que la mayor parte del esfuerzo de los programadores tiene que ir en la conversión entre las estructuras de datos que son nativas de cualquiera de los lenguajes involucrados.Esto supera a otros asuntos como las diferentes convenciones de llamada porque el espacio del problema es mucho mayor.Simplemente hay más formas de introducir datos en la memoria que formas de implementar una llamada de función.</target>
        </trans-unit>
        <trans-unit id="8176a4ffeb356c4a7a23ddcef37f49bf2bb9d8e2" translate="yes" xml:space="preserve">
          <source>The mortal routines are not just for SVs; AVs and HVs can be made mortal by passing their address (type-casted to &lt;code&gt;SV*&lt;/code&gt; ) to the &lt;code&gt;sv_2mortal&lt;/code&gt; or &lt;code&gt;sv_mortalcopy&lt;/code&gt; routines.</source>
          <target state="translated">Las rutinas mortales no son solo para SV; Los AV y HV se pueden convertir en mortales pasando su direcci&amp;oacute;n (convertida en tipo a &lt;code&gt;SV*&lt;/code&gt; ) a las rutinas &lt;code&gt;sv_2mortal&lt;/code&gt; o &lt;code&gt;sv_mortalcopy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="caf6b1916b41e472c1ad4cc38efc1ebb428fd15c" translate="yes" xml:space="preserve">
          <source>The mortal routines are not just for SVs; AVs and HVs can be made mortal by passing their address (type-casted to &lt;code&gt;SV*&lt;/code&gt;) to the &lt;code&gt;sv_2mortal&lt;/code&gt; or &lt;code&gt;sv_mortalcopy&lt;/code&gt; routines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1cfa37e915685db47ff38f6021965013b98c8b" translate="yes" xml:space="preserve">
          <source>The most common CPAN version numbering scheme looks like this:</source>
          <target state="translated">El esquema de numeración de la versión CPAN más común se ve así:</target>
        </trans-unit>
        <trans-unit id="d13f6c55db0d43d578a52888c54a47f93bad3e7e" translate="yes" xml:space="preserve">
          <source>The most common context-specific hints are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4361ab99106fa73a1bb41dd2c636e6a27fcbec" translate="yes" xml:space="preserve">
          <source>The most common example of this is changing the current working directory using &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt;. One thread calls &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt;, and the working directory of all the threads changes.</source>
          <target state="translated">El ejemplo m&amp;aacute;s com&amp;uacute;n de esto es cambiar el directorio de trabajo actual usando &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; . Un hilo llama a &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; y el directorio de trabajo de todos los hilos cambia.</target>
        </trans-unit>
        <trans-unit id="c1920ebe5b8490b9051b66a85a68049c7044d116" translate="yes" xml:space="preserve">
          <source>The most common example of this is changing the current working directory using &lt;code&gt;chdir()&lt;/code&gt;. One thread calls &lt;code&gt;chdir()&lt;/code&gt;, and the working directory of all the threads changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d1fc7a0fdb4e15b4bc8d9defba4491def9b679" translate="yes" xml:space="preserve">
          <source>The most common git command you will use will probably be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7e55ecc01719c5e313506a020593317cb7d856" translate="yes" xml:space="preserve">
          <source>The most common such DOS devices include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f63cc6de2a2448196e1a86a35300d77fbd9cdf9" translate="yes" xml:space="preserve">
          <source>The most common uses of the interactive modes are</source>
          <target state="translated">Los usos más comunes de los modos interactivos son</target>
        </trans-unit>
        <trans-unit id="3f3dfdc5e3f12eaa9aae95ba108f269ad1f91764" translate="yes" xml:space="preserve">
          <source>The most common way to create an object is to pass in key/value pairs where each key is an attribute and each value is what you want assigned to that attribute. No checking is done to verify the attributes or values are valid, you may do that in &lt;code&gt;init()&lt;/code&gt; if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3870e4765effd8ab5e5da52360ab236ece22162c" translate="yes" xml:space="preserve">
          <source>The most commonly used of these functions is &lt;code&gt;Perl_sv_dump&lt;/code&gt; ; it's used for dumping SVs, AVs, HVs, and CVs. The &lt;code&gt;Devel::Peek&lt;/code&gt; module calls &lt;code&gt;sv_dump&lt;/code&gt; to produce debugging output from Perl-space, so users of that module should already be familiar with its format.</source>
          <target state="translated">La m&amp;aacute;s utilizada de estas funciones es &lt;code&gt;Perl_sv_dump&lt;/code&gt; ; se utiliza para descargar SV, AV, HV y CV. El m&amp;oacute;dulo &lt;code&gt;Devel::Peek&lt;/code&gt; llama a &lt;code&gt;sv_dump&lt;/code&gt; para producir una salida de depuraci&amp;oacute;n desde Perl-space, por lo que los usuarios de ese m&amp;oacute;dulo ya deber&amp;iacute;an estar familiarizados con su formato.</target>
        </trans-unit>
        <trans-unit id="40e2d355a29a78e1dd4f49324b9dbebe996e6a33" translate="yes" xml:space="preserve">
          <source>The most commonly used of these functions is &lt;code&gt;Perl_sv_dump&lt;/code&gt;; it's used for dumping SVs, AVs, HVs, and CVs. The &lt;code&gt;Devel::Peek&lt;/code&gt; module calls &lt;code&gt;sv_dump&lt;/code&gt; to produce debugging output from Perl-space, so users of that module should already be familiar with its format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3104b20dd3af96ae7f833de8c6d7e1e79108b35" translate="yes" xml:space="preserve">
          <source>The most convenient way of installing a binary distribution of perl is via perl installer</source>
          <target state="translated">La forma más conveniente de instalar una distribución binaria de perl es a través del instalador de perl</target>
        </trans-unit>
        <trans-unit id="8449f9a2d2191f3c7392f9226647d2910704473a" translate="yes" xml:space="preserve">
          <source>The most efficient way is using &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; and &lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;. This is faster than using &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt; when taking many, many strings. It is slower for just a few.</source>
          <target state="translated">La forma m&amp;aacute;s eficiente es usar &lt;a href=&quot;functions/pack&quot;&gt;empaquetar&lt;/a&gt; y &lt;a href=&quot;functions/unpack&quot;&gt;desempacar&lt;/a&gt; . Esto es m&amp;aacute;s r&amp;aacute;pido que usar &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt; cuando se toman muchas, muchas cadenas. Es m&amp;aacute;s lento para unos pocos.</target>
        </trans-unit>
        <trans-unit id="e62c7de4b0c0c77c458201d125462fa3d57ea6f5" translate="yes" xml:space="preserve">
          <source>The most efficient way is using &lt;a href=&quot;perlfunc#pack&quot;&gt;pack()&lt;/a&gt; and &lt;a href=&quot;perlfunc#unpack&quot;&gt;unpack()&lt;/a&gt;. This is faster than using &lt;a href=&quot;perlfunc#substr&quot;&gt;substr()&lt;/a&gt; when taking many, many strings. It is slower for just a few.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee8f017f47cf02290cdcd6ac5e270d04e302d38" translate="yes" xml:space="preserve">
          <source>The most general way to do this is to cast them to a UV or IV, and print as in the &lt;a href=&quot;#Formatted-Printing-of-IVs%2C-UVs%2C-and-NVs&quot;&gt;previous section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c40808afd7fc4cc79463965386f4682ff94dfa" translate="yes" xml:space="preserve">
          <source>The most hairy case</source>
          <target state="translated">El caso más peludo</target>
        </trans-unit>
        <trans-unit id="51dfbd93c1252c67b5797f63c0a32f35baffd72d" translate="yes" xml:space="preserve">
          <source>The most important Perl parsing rule is the first one discussed below: when processing a quoted construct, Perl first finds the end of that construct, then interprets its contents. If you understand this rule, you may skip the rest of this section on the first reading. The other rules are likely to contradict the user's expectations much less frequently than this first one.</source>
          <target state="translated">La regla de análisis más importante de Perl es la primera que se discute a continuación:al procesar una construcción citada,Perl primero encuentra el final de esa construcción,y luego interpreta su contenido.Si entiende esta regla,puede saltarse el resto de esta sección en la primera lectura.Es probable que las otras reglas contradigan las expectativas del usuario con mucha menos frecuencia que esta primera.</target>
        </trans-unit>
        <trans-unit id="aef7d8dbf9d828ab96b855e0061e1f04b9541021" translate="yes" xml:space="preserve">
          <source>The most important attribute of a socket, like your telephone&amp;rsquo;s telephone number. Typically an IP address. See also &lt;b&gt;port&lt;/b&gt;.</source>
          <target state="translated">El atributo m&amp;aacute;s importante de un enchufe, como el n&amp;uacute;mero de tel&amp;eacute;fono de su tel&amp;eacute;fono. Normalmente, una direcci&amp;oacute;n IP. V&amp;eacute;ase tambi&amp;eacute;n &lt;b&gt;puerto&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="10d61cb4054b3dd458a76a9b2241b8875252cd6d" translate="yes" xml:space="preserve">
          <source>The most important of which are probably &lt;code&gt;GV_ADD&lt;/code&gt; and &lt;code&gt;SVf_UTF8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a25c59d901462fca0083edfc964d9c8bf518a04" translate="yes" xml:space="preserve">
          <source>The most important of which are probably GV_ADD and SVf_UTF8.</source>
          <target state="translated">Los más importantes de los cuales son probablemente GV_ADD y SVf_UTF8.</target>
        </trans-unit>
        <trans-unit id="0626c5878256026e37d6cadc7a0a5c68ea6109bd" translate="yes" xml:space="preserve">
          <source>The most important of which is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aae52fef16fc25bcc3b6593dc3391e48196f1ad" translate="yes" xml:space="preserve">
          <source>The most important thing is to run your programs under the &lt;b&gt;-w&lt;/b&gt; flag at all times. You may turn it off explicitly for particular portions of code via the &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; pragma or the &lt;code&gt;$^W&lt;/code&gt; variable if you must. You should also always run under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; or know the reason why not. The &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; sigtrap&lt;/code&gt; and even &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; diagnostics&lt;/code&gt; pragmas may also prove useful.</source>
          <target state="translated">Lo m&amp;aacute;s importante es ejecutar sus programas bajo la bandera &lt;b&gt;-w&lt;/b&gt; en todo momento. Puede desactivarlo expl&amp;iacute;citamente para partes particulares de c&amp;oacute;digo mediante el pragma &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; o la variable &lt;code&gt;$^W&lt;/code&gt; si es necesario. Tambi&amp;eacute;n debe ejecutar siempre bajo &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; o conocer la raz&amp;oacute;n por la cual no. El &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; sigtrap&lt;/code&gt; e incluso el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; diagnostics&lt;/code&gt; pragmas de diagn&amp;oacute;stico tambi&amp;eacute;n pueden resultar &amp;uacute;tiles.</target>
        </trans-unit>
        <trans-unit id="8c3b2954acd0c4fdd7e8575f6e05f126659f29cc" translate="yes" xml:space="preserve">
          <source>The most important thing is to use &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt; and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; in all your code or know the reason why not to. You may turn them off explicitly for particular portions of code via &lt;code&gt;no warnings&lt;/code&gt; or &lt;code&gt;no strict&lt;/code&gt;, and this can be limited to the specific warnings or strict features you wish to disable. The &lt;b&gt;-w&lt;/b&gt; flag and &lt;code&gt;$^W&lt;/code&gt; variable should not be used for this purpose since they can affect code you use but did not write, such as modules from core or CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6be7df730b69bf2abfbfef25c9c73eef66cdf79" translate="yes" xml:space="preserve">
          <source>The most important thing to understand about all data structures in Perl--including multidimensional arrays--is that even though they might appear otherwise, Perl &lt;code&gt;@ARRAY&lt;/code&gt; s and &lt;code&gt;%HASH&lt;/code&gt; es are all internally one-dimensional. They can hold only scalar values (meaning a string, number, or a reference). They cannot directly contain other arrays or hashes, but instead contain</source>
          <target state="translated">Lo m&amp;aacute;s importante que hay que comprender acerca de todas las estructuras de datos en Perl, incluidas las matrices multidimensionales, es que, aunque puedan parecer de otra manera, Perl &lt;code&gt;@ARRAY&lt;/code&gt; sy &lt;code&gt;%HASH&lt;/code&gt; es internamente unidimensional. Solo pueden contener valores escalares (es decir, una cadena, un n&amp;uacute;mero o una referencia). No pueden contener directamente otras matrices o hashes, sino que contienen</target>
        </trans-unit>
        <trans-unit id="787b225130f60b5479ecb7c71a8dc7b419116101" translate="yes" xml:space="preserve">
          <source>The most important thing to understand about all data structures in Perl--including multidimensional arrays--is that even though they might appear otherwise, Perl &lt;code&gt;@ARRAY&lt;/code&gt;s and &lt;code&gt;%HASH&lt;/code&gt;es are all internally one-dimensional. They can hold only scalar values (meaning a string, number, or a reference). They cannot directly contain other arrays or hashes, but instead contain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5f029eca08711d302dd8f17b7e7f9e635b1ec8" translate="yes" xml:space="preserve">
          <source>The most popular books</source>
          <target state="translated">Los libros más populares</target>
        </trans-unit>
        <trans-unit id="c77ae4b23596713f5e5db719e4b12df8a45dd104" translate="yes" xml:space="preserve">
          <source>The most practical use is likely to specify that some tests are not &quot;parallel-ready&quot;. Since mentioning a file with --rules doesn't cause it to be selected to run as a test, you can &quot;set and forget&quot; some rules preferences in your .proverc file. Then you'll be able to take maximum advantage of the performance benefits of parallel testing, while some exceptions are still run in parallel.</source>
          <target state="translated">Es probable que el uso más práctico sea especificar que algunos ensayos no están &quot;listos para el paralelismo&quot;.Dado que la mención de un archivo con --rules no hace que se seleccione para ejecutarlo como prueba,puede &quot;establecer y olvidar&quot; algunas preferencias de reglas en su archivo .proverc.Así podrás aprovechar al máximo las ventajas de rendimiento de las pruebas paralelas,mientras que algunas excepciones siguen ejecutándose en paralelo.</target>
        </trans-unit>
        <trans-unit id="6f276b3b1a0cf0e0ed49a901109064669a604004" translate="yes" xml:space="preserve">
          <source>The most preferable one is &quot;The Default Unicode Collation Element Table&quot; (aka DUCET), available from the Unicode Consortium's website:</source>
          <target state="translated">La más preferible es &quot;The Default Unicode Collation Element Table&quot; (alias DUCET),disponible en el sitio web del Consorcio Unicode:</target>
        </trans-unit>
        <trans-unit id="1a2b184063d0bc0a35feb7fb346e45c3d6648eb5" translate="yes" xml:space="preserve">
          <source>The most recent development releases of Perl have been experimenting with removing Perl's dependency on the &quot;normal&quot; standard I/O suite and allowing other stdio implementations to be used. This involves creating a new abstraction layer that then calls whichever implementation of stdio Perl was compiled with. All XSUBs should now use the functions in the PerlIO abstraction layer and not make any assumptions about what kind of stdio is being used.</source>
          <target state="translated">En las versiones de desarrollo más recientes de Perl se ha estado experimentando con la eliminación de la dependencia de Perl de la suite de E/S estándar &quot;normal&quot; y permitiendo que se utilicen otras implementaciones stdio.Esto implica la creación de una nueva capa de abstracción que llama a cualquier implementación de Perl estándar con la que se haya compilado.Todos los XSUB deberían ahora usar las funciones de la capa de abstracción de PerlIO y no hacer ninguna suposición sobre qué tipo de stdio se está usando.</target>
        </trans-unit>
        <trans-unit id="d790d27d68eef3be56d3d5afa1a5d1f30d794f18" translate="yes" xml:space="preserve">
          <source>The most recent upgrade to the PA-RISC design, it added support for 64-bit integer data.</source>
          <target state="translated">La más reciente actualización del diseño del PA-RISC,añadió soporte para datos enteros de 64 bits.</target>
        </trans-unit>
        <trans-unit id="0603f466834b0d6d823bdd46c3606b7ca755f71a" translate="yes" xml:space="preserve">
          <source>The most recent version of this module, including documentation and any news of importance, will be available at</source>
          <target state="translated">La versión más reciente de este módulo,incluida la documentación y cualquier noticia de importancia,estará disponible en</target>
        </trans-unit>
        <trans-unit id="f4a085ad231e217eed37777279430f48e1cf87a2" translate="yes" xml:space="preserve">
          <source>The most significant information in the output is about the particular</source>
          <target state="translated">La información más significativa en el producto es acerca de la</target>
        </trans-unit>
        <trans-unit id="9de43c038dc457f71dc272efc26e8a4eb0e6b17e" translate="yes" xml:space="preserve">
          <source>The most simple options are the ones that take no values. Their mere presence on the command line enables the option. Popular examples are:</source>
          <target state="translated">Las opciones más simples son las que no toman valores.Su mera presencia en la línea de mando permite la opción.Los ejemplos más populares son:</target>
        </trans-unit>
        <trans-unit id="fe61ded48d4439fb9787ec0d115995f08935a048" translate="yes" xml:space="preserve">
          <source>The most useful option the cross referencer has is to save the report to a separate file. For instance, to save the report on</source>
          <target state="translated">La opción más útil que tiene la referencia cruzada es guardar el informe en un archivo separado.Por ejemplo,para guardar el informe en</target>
        </trans-unit>
        <trans-unit id="762e20af8acff77775848b01e093c2cac3013ec4" translate="yes" xml:space="preserve">
          <source>The most useful types that will be returned are:</source>
          <target state="translated">Los tipos más útiles que serán devueltos son:</target>
        </trans-unit>
        <trans-unit id="a4f13e9fd0d66b114f604fe2129d7ad6d576d1c5" translate="yes" xml:space="preserve">
          <source>The movement of bits left or right in a computer word, which has the effect of multiplying or dividing by a power of 2.</source>
          <target state="translated">El movimiento de los bits a la izquierda o a la derecha en una palabra de ordenador,que tiene el efecto de multiplicar o dividir por una potencia de 2.</target>
        </trans-unit>
        <trans-unit id="811ee2e71fefd4dbb8ec994c3d2df771d4653871" translate="yes" xml:space="preserve">
          <source>The multiple-bracket form does not affect the interpretation of the contents of the formatting code, only how it must end. That means that the examples above are also exactly the same as this:</source>
          <target state="translated">La forma de paréntesis múltiples no afecta a la interpretación del contenido del código de formato,sólo a la forma en que debe terminar.Eso significa que los ejemplos anteriores también son exactamente iguales a este:</target>
        </trans-unit>
        <trans-unit id="b62777fe39744a74b7fc65bfce887b1ed7aeecd0" translate="yes" xml:space="preserve">
          <source>The mutators for flags all return the JSON::PP object again and thus calls can be chained:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2632e91c7e1b901a77d044556dbd4ff9d5c87be" translate="yes" xml:space="preserve">
          <source>The name</source>
          <target state="translated">El nombre</target>
        </trans-unit>
        <trans-unit id="db6539b7ba93a9d46c820cb8d93cf44ff14b7c45" translate="yes" xml:space="preserve">
          <source>The name &quot;WinXP/.Net&quot; is used for historical reasons only, to maintain backwards compatibility of the Win32 module. Windows .NET Server has been renamed as Windows 2003 Server before final release and uses a different major/minor version number than Windows XP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32c3c3ac333fcf1879195759e18947b403def2d" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;new&lt;/code&gt; isn't special. We could name our constructor something else:</source>
          <target state="translated">El nombre &lt;code&gt;new&lt;/code&gt; no es especial. Podr&amp;iacute;amos nombrar a nuestro constructor de otra manera:</target>
        </trans-unit>
        <trans-unit id="381ffb5c7c9337af9dd775ed33da7e16dd88d27a" translate="yes" xml:space="preserve">
          <source>The name in the IANA registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316e7deb3997f109974511d20499a1d93aa6493c" translate="yes" xml:space="preserve">
          <source>The name is returned as a mortal SV.</source>
          <target state="translated">El nombre es devuelto como un SV mortal.</target>
        </trans-unit>
        <trans-unit id="e84fcc4ee47e1e1b5639888428e055c00959431a" translate="yes" xml:space="preserve">
          <source>The name may contain embedded E&amp;lt;&amp;gt; and Z&amp;lt;&amp;gt; formatting codes, and the section, anchor text, and inferred anchor text may contain any formatting codes. Any double quotes around the section are removed as part of the parsing, as is any leading or trailing whitespace.</source>
          <target state="translated">El nombre puede contener c&amp;oacute;digos de formato E &amp;lt;&amp;gt; y Z &amp;lt;&amp;gt; incrustados, y la secci&amp;oacute;n, el texto de anclaje y el texto de anclaje inferido pueden contener cualquier c&amp;oacute;digo de formato. Las comillas dobles alrededor de la secci&amp;oacute;n se eliminan como parte del an&amp;aacute;lisis, al igual que cualquier espacio en blanco inicial o final.</target>
        </trans-unit>
        <trans-unit id="8ada838033f411154fe022f162bc95bf1ac56e8a" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;(*SKIP:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt; pattern has special significance. If a &lt;code&gt;(*MARK:&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt; was encountered while matching, then it is that position which is used as the &quot;skip point&quot;. If no &lt;code&gt;(*MARK)&lt;/code&gt; of that name was encountered, then the &lt;code&gt;(*SKIP)&lt;/code&gt; operator has no effect. When used without a name the &quot;skip point&quot; is where the match point was when executing the &lt;code&gt;(*SKIP)&lt;/code&gt; pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f683b00c5db230ebae95056480292ae0fa37d30" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;(*SKIP:NAME)&lt;/code&gt; pattern has special significance. If a &lt;code&gt;(*MARK:NAME)&lt;/code&gt; was encountered while matching, then it is that position which is used as the &quot;skip point&quot;. If no &lt;code&gt;(*MARK)&lt;/code&gt; of that name was encountered, then the &lt;code&gt;(*SKIP)&lt;/code&gt; operator has no effect. When used without a name the &quot;skip point&quot; is where the match point was when executing the (*SKIP) pattern.</source>
          <target state="translated">El nombre del patr&amp;oacute;n &lt;code&gt;(*SKIP:NAME)&lt;/code&gt; tiene un significado especial. Si se encontr&amp;oacute; un &lt;code&gt;(*MARK:NAME)&lt;/code&gt; durante la coincidencia, entonces es esa posici&amp;oacute;n la que se utiliza como &quot;punto de omisi&amp;oacute;n&quot;. Si no se encontr&amp;oacute; ning&amp;uacute;n &lt;code&gt;(*MARK)&lt;/code&gt; de ese nombre, entonces el operador &lt;code&gt;(*SKIP)&lt;/code&gt; no tiene ning&amp;uacute;n efecto. Cuando se usa sin un nombre, el &quot;punto de omisi&amp;oacute;n&quot; es donde estaba el punto de coincidencia al ejecutar el patr&amp;oacute;n (* SKIP).</target>
        </trans-unit>
        <trans-unit id="4ffbfa835ecb6cb544ad106cd35f35360cfc377b" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;result_class&lt;/code&gt; . Defaults to &lt;code&gt;App::Prove::State::Result&lt;/code&gt; .</source>
          <target state="translated">El nombre de &lt;code&gt;result_class&lt;/code&gt; . El valor predeterminado es &lt;code&gt;App::Prove::State::Result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b922baa1630e5f6c97eeff342a7feb7ab689a79" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;result_class&lt;/code&gt;. Defaults to &lt;code&gt;App::Prove::State::Result&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689345a6c608b08f0da8c40d1de1f0d6ad537fb4" translate="yes" xml:space="preserve">
          <source>The name of the C subroutine generated which will return the constants. The default is</source>
          <target state="translated">El nombre de la subrutina C generada que devolverá las constantes.El valor por defecto es</target>
        </trans-unit>
        <trans-unit id="24928164de71defca77ef40b5800aabbee56b274" translate="yes" xml:space="preserve">
          <source>The name of the Makefile to be produced. This is used for the second Makefile that will be produced for the MAP_TARGET.</source>
          <target state="translated">El nombre del Makefile que se producirá.Esto se utiliza para el segundo Makefile que se producirá para el MAP_TARGET.</target>
        </trans-unit>
        <trans-unit id="586bd0a2b6cddbba1d51a20c05e33d4e435a88ba" translate="yes" xml:space="preserve">
          <source>The name of the OP, or 'ex-foo' if the OP is a null that used to be a foo.</source>
          <target state="translated">El nombre de la OP,o &quot;ex-foo&quot; si la OP es un nulo que solía ser un foo.</target>
        </trans-unit>
        <trans-unit id="5c8f940ac3ab77f3cca6bf5d7c2332906bee0772" translate="yes" xml:space="preserve">
          <source>The name of the array containing the &lt;b&gt;argument&lt;/b&gt;&lt;b&gt;vector&lt;/b&gt; from the command line. If you use the empty &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator, &lt;code&gt;ARGV&lt;/code&gt; is the name of both the &lt;b&gt;filehandle&lt;/b&gt; used to traverse the arguments and the &lt;b&gt;scalar&lt;/b&gt; containing the name of the current input file.</source>
          <target state="translated">El nombre de la matriz que contiene el &lt;b&gt;vector de &lt;/b&gt;&lt;b&gt;argumento&lt;/b&gt; de la l&amp;iacute;nea de comando. Si se utiliza el vac&amp;iacute;o &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operador, &lt;code&gt;ARGV&lt;/code&gt; es el nombre tanto del &lt;b&gt;gestor de archivo&lt;/b&gt; utilizado para atravesar los argumentos y el &lt;b&gt;escalar&lt;/b&gt; que contiene el nombre del fichero de entrada actual.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c0ef9637fb40c44d741c359416d9acc461c4754b" translate="yes" xml:space="preserve">
          <source>The name of the capability to be output.</source>
          <target state="translated">El nombre de la capacidad de salida.</target>
        </trans-unit>
        <trans-unit id="25678c01479ff57e49b16538b63d4932cacd981b" translate="yes" xml:space="preserve">
          <source>The name of the class to use to aggregate test results. The default is &lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cd22adf72a74a4b456151c3e1d9f81b33d09a6" translate="yes" xml:space="preserve">
          <source>The name of the class to use to aggregate test results. The default is &lt;a href=&quot;parser/aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;.</source>
          <target state="translated">El nombre de la clase que se utilizar&amp;aacute; para agregar los resultados de las pruebas. El valor predeterminado es &lt;a href=&quot;parser/aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f598b6f749ef712a68f14ac426c778ed4bbb049" translate="yes" xml:space="preserve">
          <source>The name of the class to use to format output. The default is &lt;a href=&quot;TAP::Formatter::Console&quot;&gt;TAP::Formatter::Console&lt;/a&gt;, or &lt;a href=&quot;TAP::Formatter::File&quot;&gt;TAP::Formatter::File&lt;/a&gt; if the output isn't a TTY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaad217bdc2e240c2b5911f874d90cf603ae7ab9" translate="yes" xml:space="preserve">
          <source>The name of the class to use to format output. The default is &lt;a href=&quot;formatter/console&quot;&gt;TAP::Formatter::Console&lt;/a&gt;, or &lt;a href=&quot;formatter/file&quot;&gt;TAP::Formatter::File&lt;/a&gt; if the output isn't a TTY.</source>
          <target state="translated">El nombre de la clase que se utilizar&amp;aacute; para formatear la salida. El valor predeterminado es &lt;a href=&quot;formatter/console&quot;&gt;TAP :: Formatter :: Console&lt;/a&gt; o &lt;a href=&quot;formatter/file&quot;&gt;TAP :: Formatter :: File&lt;/a&gt; si la salida no es un TTY.</target>
        </trans-unit>
        <trans-unit id="2938c30f6481c7209480e330f5d2558def4c79e1" translate="yes" xml:space="preserve">
          <source>The name of the class to use to multiplex tests during parallel testing. The default is &lt;a href=&quot;TAP::Parser::Multiplexer&quot;&gt;TAP::Parser::Multiplexer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72da2c41641715361491c5ff4abc5e20b2230add" translate="yes" xml:space="preserve">
          <source>The name of the class to use to multiplex tests during parallel testing. The default is &lt;a href=&quot;parser/multiplexer&quot;&gt;TAP::Parser::Multiplexer&lt;/a&gt;.</source>
          <target state="translated">El nombre de la clase que se utilizar&amp;aacute; para multiplexar pruebas durante las pruebas en paralelo. El valor predeterminado es &lt;a href=&quot;parser/multiplexer&quot;&gt;TAP :: Parser :: Multiplexer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d2b438590e86cedd0b4ce69e5a89edf3f57ce2f" translate="yes" xml:space="preserve">
          <source>The name of the class to use to parse TAP. The default is &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5c1530a58c08454895ba69cebd216b2fda858b" translate="yes" xml:space="preserve">
          <source>The name of the class to use to parse TAP. The default is &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt;.</source>
          <target state="translated">El nombre de la clase que se utilizar&amp;aacute; para analizar TAP. El valor predeterminado es &lt;a href=&quot;parser&quot;&gt;TAP :: Parser&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6353269469768546ffd890653f96373f13d0ecd8" translate="yes" xml:space="preserve">
          <source>The name of the class to use to schedule test execution. The default is &lt;a href=&quot;TAP::Parser::Scheduler&quot;&gt;TAP::Parser::Scheduler&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c363903c8b428e2f92b68d74a94f7359ac65693" translate="yes" xml:space="preserve">
          <source>The name of the class to use to schedule test execution. The default is &lt;a href=&quot;parser/scheduler&quot;&gt;TAP::Parser::Scheduler&lt;/a&gt;.</source>
          <target state="translated">El nombre de la clase que se usar&amp;aacute; para programar la ejecuci&amp;oacute;n de la prueba. El valor predeterminado es &lt;a href=&quot;parser/scheduler&quot;&gt;TAP :: Parser :: Scheduler&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be46c0fe1db34418e8697bff77cb46ef2046a9fa" translate="yes" xml:space="preserve">
          <source>The name of the constant, as seen by the perl code.</source>
          <target state="translated">El nombre de la constante,como se ve por el código perl.</target>
        </trans-unit>
        <trans-unit id="4720e470b7493414aa6c88cde788462359384401" translate="yes" xml:space="preserve">
          <source>The name of the current report format for the currently selected output channel. The default format name is the same as the filehandle name. For example, the default format name for the &lt;code&gt;STDOUT&lt;/code&gt; filehandle is just &lt;code&gt;STDOUT&lt;/code&gt; .</source>
          <target state="translated">El nombre del formato de informe actual para el canal de salida seleccionado actualmente. El nombre de formato predeterminado es el mismo que el nombre del identificador de archivo. Por ejemplo, el nombre de formato predeterminado para el &lt;code&gt;STDOUT&lt;/code&gt; archivo STDOUT es simplemente &lt;code&gt;STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f308d321f719413a7daef45e5b751142a5169847" translate="yes" xml:space="preserve">
          <source>The name of the current report format for the currently selected output channel. The default format name is the same as the filehandle name. For example, the default format name for the &lt;code&gt;STDOUT&lt;/code&gt; filehandle is just &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e5170077c0838d812432a43efc57d6e9e83c1c" translate="yes" xml:space="preserve">
          <source>The name of the current top-of-page format for the currently selected output channel. The default is the name of the filehandle with &lt;code&gt;_TOP&lt;/code&gt; appended. For example, the default format top name for the &lt;code&gt;STDOUT&lt;/code&gt; filehandle is &lt;code&gt;STDOUT_TOP&lt;/code&gt; .</source>
          <target state="translated">El nombre del formato de inicio de p&amp;aacute;gina actual para el canal de salida seleccionado actualmente. El valor predeterminado es el nombre del &lt;code&gt;_TOP&lt;/code&gt; con _TOP agregado. Por ejemplo, el nombre superior del formato predeterminado para el &lt;code&gt;STDOUT_TOP&lt;/code&gt; &lt;code&gt;STDOUT&lt;/code&gt; es STDOUT_TOP .</target>
        </trans-unit>
        <trans-unit id="a0743a6b94bb8bebfeea265e55206e1f27d87193" translate="yes" xml:space="preserve">
          <source>The name of the current top-of-page format for the currently selected output channel. The default is the name of the filehandle with &lt;code&gt;_TOP&lt;/code&gt; appended. For example, the default format top name for the &lt;code&gt;STDOUT&lt;/code&gt; filehandle is &lt;code&gt;STDOUT_TOP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6379fb4c9e525f705c12afeef2d60c9f65c93af3" translate="yes" xml:space="preserve">
          <source>The name of the default local file, that $ff-&amp;gt;output_file falls back to if it would otherwise return no filename. For example when fetching a URI like &lt;a href=&quot;http://www.abc.net.au/&quot;&gt;http://www.abc.net.au/&lt;/a&gt; the contents retrieved may be from a remote file called 'index.html'. The default value of this attribute is literally 'file_default'.</source>
          <target state="translated">El nombre del archivo local predeterminado, al que $ ff-&amp;gt; output_file recurre si de otra manera no devolver&amp;iacute;a ning&amp;uacute;n nombre de archivo. Por ejemplo, al obtener un URI como &lt;a href=&quot;http://www.abc.net.au/&quot;&gt;http://www.abc.net.au/,&lt;/a&gt; el contenido recuperado puede ser de un archivo remoto llamado 'index.html'. El valor predeterminado de este atributo es literalmente 'file_default'.</target>
        </trans-unit>
        <trans-unit id="724f86ff11ab9d4f954a655139b3c95fbd6d6b99" translate="yes" xml:space="preserve">
          <source>The name of the default local file, that $ff-&amp;gt;output_file falls back to if it would otherwise return no filename. For example when fetching a URI like http://www.abc.net.au/ the contents retrieved may be from a remote file called 'index.html'. The default value of this attribute is literally 'file_default'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ff7c2b3c1b5f1d9d21717655a465440b8c3a51" translate="yes" xml:space="preserve">
          <source>The name of the distribution. Often created by taking the &quot;main module&quot; in the distribution and changing &quot;::&quot; to &quot;-&quot;. Sometimes it's completely different, however, as in the case of the &lt;a href=&quot;http://search.cpan.org/author/GAAS/libwww-perl/&quot;&gt;libwww-perl&lt;/a&gt; distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec9b1148eb41355676951fe5003b4832073d292" translate="yes" xml:space="preserve">
          <source>The name of the file to write containing the C code. The default is &lt;code&gt;const-c.inc&lt;/code&gt; . The &lt;code&gt;-&lt;/code&gt; in the name ensures that the file can't be mistaken for anything related to a legitimate perl package name, and not naming the file &lt;code&gt;.c&lt;/code&gt; avoids having to override Makefile.PL's &lt;code&gt;.xs&lt;/code&gt; to &lt;code&gt;.c&lt;/code&gt; rules.</source>
          <target state="translated">El nombre del archivo para escribir que contiene el c&amp;oacute;digo C. El valor predeterminado es &lt;code&gt;const-c.inc&lt;/code&gt; . El &lt;code&gt;-&lt;/code&gt; en el nombre asegura que el archivo no se pueda confundir con nada relacionado con un nombre de paquete leg&amp;iacute;timo de perl, y no nombrar el archivo &lt;code&gt;.c&lt;/code&gt; evita tener que anular las reglas &lt;code&gt;.xs&lt;/code&gt; a &lt;code&gt;.c&lt;/code&gt; de Makefile.PL .</target>
        </trans-unit>
        <trans-unit id="cd1ff7ef642391e787d3298e4e4d4178df728894" translate="yes" xml:space="preserve">
          <source>The name of the file to write containing the C code. The default is &lt;code&gt;const-c.inc&lt;/code&gt;. The &lt;code&gt;-&lt;/code&gt; in the name ensures that the file can't be mistaken for anything related to a legitimate perl package name, and not naming the file &lt;code&gt;.c&lt;/code&gt; avoids having to override Makefile.PL's &lt;code&gt;.xs&lt;/code&gt; to &lt;code&gt;.c&lt;/code&gt; rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bed22db2d9895f574b197dc49845a9793eb5ff4" translate="yes" xml:space="preserve">
          <source>The name of the file to write containing the XS code. The default is &lt;code&gt;const-xs.inc&lt;/code&gt; .</source>
          <target state="translated">El nombre del archivo a escribir que contiene el c&amp;oacute;digo XS. El valor predeterminado es &lt;code&gt;const-xs.inc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff977189b5dca37639aa340e96771f65419bc6de" translate="yes" xml:space="preserve">
          <source>The name of the file to write containing the XS code. The default is &lt;code&gt;const-xs.inc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d500a8c6262466b93b5ca84e3fdd9132c3d42c" translate="yes" xml:space="preserve">
          <source>The name of the file you want to tie to the hash.</source>
          <target state="translated">El nombre del archivo que quieres atar al hachís.</target>
        </trans-unit>
        <trans-unit id="264313247d929c3123a9e7fe3982f9c4d6734ea2" translate="yes" xml:space="preserve">
          <source>The name of the file.</source>
          <target state="translated">El nombre del archivo.</target>
        </trans-unit>
        <trans-unit id="2fed9b5e3d1ecfa444bc4bf0c0867e79f9d251bc" translate="yes" xml:space="preserve">
          <source>The name of the interior sequence command.</source>
          <target state="translated">El nombre del comando de secuencia interior.</target>
        </trans-unit>
        <trans-unit id="850e998443ed95a332bbac695731c9e48b93fd64" translate="yes" xml:space="preserve">
          <source>The name of the label is returned in the form of a fresh scalar. If an optional label is absent, a null pointer is returned.</source>
          <target state="translated">El nombre de la etiqueta se devuelve en forma de un escalar fresco.Si no hay una etiqueta opcional,se devuelve un puntero nulo.</target>
        </trans-unit>
        <trans-unit id="73fad9a569b3c6f7964969b809a10335f9888518" translate="yes" xml:space="preserve">
          <source>The name of the layer whose open() method Perl should invoke on open(). For example if the layer is called APR, you will call:</source>
          <target state="translated">El nombre de la capa cuyo método open()Perl debe invocar en open().Por ejemplo,si la capa se llama APR,llamará:</target>
        </trans-unit>
        <trans-unit id="72863e084ba8d90c496ae5c6484f120959926659" translate="yes" xml:space="preserve">
          <source>The name of the method</source>
          <target state="translated">El nombre del método</target>
        </trans-unit>
        <trans-unit id="e4c23f5fa4cbd2a24c92f584213f4e01a597f939" translate="yes" xml:space="preserve">
          <source>The name of the module you wish to verify -- this is a required key</source>
          <target state="translated">El nombre del módulo que desea verificar...es una clave obligatoria.</target>
        </trans-unit>
        <trans-unit id="8baabdd6359e36f0075679bff6c64a42d5070771" translate="yes" xml:space="preserve">
          <source>The name of the operating system under which this copy of Perl was built, as determined during the configuration process. For examples see &lt;a href=&quot;perlport#PLATFORMS&quot;&gt;&quot;PLATFORMS&quot; in perlport&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917bce2995f64faec20b4096ae916c3c8efb0bec" translate="yes" xml:space="preserve">
          <source>The name of the operating system under which this copy of Perl was built, as determined during the configuration process. For examples see &lt;a href=&quot;perlport#PLATFORMS&quot;&gt;PLATFORMS in perlport&lt;/a&gt;.</source>
          <target state="translated">El nombre del sistema operativo con el que se cre&amp;oacute; esta copia de Perl, seg&amp;uacute;n se determin&amp;oacute; durante el proceso de configuraci&amp;oacute;n. Para ver ejemplos, consulte &lt;a href=&quot;perlport#PLATFORMS&quot;&gt;PLATAFORMAS en perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2040df0b9281e990b52b6ffee0618e248f91a919" translate="yes" xml:space="preserve">
          <source>The name of the output file. This is the same as $ff-&amp;gt;file, but any query parameters are stripped off. For example:</source>
          <target state="translated">El nombre del archivo de salida. Es lo mismo que $ ff-&amp;gt; file, pero se eliminan los par&amp;aacute;metros de consulta. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="cbe18d7ad69e81d6c826df352db92d6f22fccd8c" translate="yes" xml:space="preserve">
          <source>The name of the program being documented is conventionally written in bold (using B&amp;lt;&amp;gt;) wherever it occurs, as are all program options. Arguments should be written in italics (I&amp;lt;&amp;gt;). Function names are traditionally written in italics; if you write a function as function(), Pod::Man will take care of this for you. Literal code or commands should be in C&amp;lt;&amp;gt;. References to other man pages should be in the form &lt;code&gt;manpage(section)&lt;/code&gt; or &lt;code&gt;L&amp;lt;manpage(section)&amp;gt;&lt;/code&gt; , and Pod::Man will automatically format those appropriately. The second form, with L&amp;lt;&amp;gt;, is used to request that a POD formatter make a link to the man page if possible. As an exception, one normally omits the section when referring to module documentation since it's not clear what section module documentation will be in; use &lt;code&gt;L&amp;lt;Module::Name&amp;gt;&lt;/code&gt; for module references instead.</source>
          <target state="translated">El nombre del programa que se est&amp;aacute; documentando se escribe convencionalmente en negrita (usando B &amp;lt;&amp;gt;) dondequiera que ocurra, al igual que todas las opciones del programa. Los argumentos deben escribirse en cursiva (I &amp;lt;&amp;gt;). Los nombres de las funciones se escriben tradicionalmente en cursiva; si escribe una funci&amp;oacute;n como function (), Pod :: Man se encargar&amp;aacute; de esto por usted. El c&amp;oacute;digo o los comandos literales deben estar en C &amp;lt;&amp;gt;. Las referencias a otras p&amp;aacute;ginas de manual deben tener el formato p&amp;aacute;gina de &lt;code&gt;manpage(section)&lt;/code&gt; o &lt;code&gt;L&amp;lt;manpage(section)&amp;gt;&lt;/code&gt; , y Pod :: Man las formatear&amp;aacute; autom&amp;aacute;ticamente de manera apropiada. La segunda forma, con L &amp;lt;&amp;gt;, se usa para solicitar que un formateador POD haga un enlace a la p&amp;aacute;gina de manual si es posible. Como excepci&amp;oacute;n, normalmente se omite la secci&amp;oacute;n cuando se hace referencia a la documentaci&amp;oacute;n del m&amp;oacute;dulo, ya que no est&amp;aacute; claro en qu&amp;eacute; secci&amp;oacute;n estar&amp;aacute; la documentaci&amp;oacute;n del m&amp;oacute;dulo;utilizar &lt;code&gt;L&amp;lt;Module::Name&amp;gt;&lt;/code&gt; para referencias de m&amp;oacute;dulo en su lugar.</target>
        </trans-unit>
        <trans-unit id="1b18709c27f5d88461bdcb14ca9e036ab15a9e4c" translate="yes" xml:space="preserve">
          <source>The name of the program being documented is conventionally written in bold (using B&amp;lt;&amp;gt;) wherever it occurs, as are all program options. Arguments should be written in italics (I&amp;lt;&amp;gt;). Function names are traditionally written in italics; if you write a function as function(), Pod::Man will take care of this for you. Literal code or commands should be in C&amp;lt;&amp;gt;. References to other man pages should be in the form &lt;code&gt;manpage(section)&lt;/code&gt; or &lt;code&gt;L&amp;lt;manpage(section)&amp;gt;&lt;/code&gt;, and Pod::Man will automatically format those appropriately. The second form, with L&amp;lt;&amp;gt;, is used to request that a POD formatter make a link to the man page if possible. As an exception, one normally omits the section when referring to module documentation since it's not clear what section module documentation will be in; use &lt;code&gt;L&amp;lt;Module::Name&amp;gt;&lt;/code&gt; for module references instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1dece7f57632e56f321f082b4b7487de40077a" translate="yes" xml:space="preserve">
          <source>The name of the program currently executing, as typed on the command line. In C, the &lt;b&gt;command&lt;/b&gt; name is passed to the program as the first command-line argument. In Perl, it comes in separately as &lt;code&gt;$0&lt;/code&gt; .</source>
          <target state="translated">El nombre del programa que se est&amp;aacute; ejecutando actualmente, tal como se escribe en la l&amp;iacute;nea de comando. En C, el nombre del &lt;b&gt;comando&lt;/b&gt; se pasa al programa como el primer argumento de la l&amp;iacute;nea de comandos. En Perl, viene por separado como &lt;code&gt;$0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24e0c1ed3bcd878bf180116a18e90c254b00991c" translate="yes" xml:space="preserve">
          <source>The name of the program currently executing, as typed on the command line. In C, the &lt;b&gt;command&lt;/b&gt; name is passed to the program as the first command-line argument. In Perl, it comes in separately as &lt;code&gt;$0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87ba5fd11240d3846b6402630cc4fc5a1bb692a" translate="yes" xml:space="preserve">
          <source>The name of the remote file. For the local file name, the result of $ff-&amp;gt;output_file will be used.</source>
          <target state="translated">El nombre del archivo remoto. Para el nombre del archivo local, se utilizar&amp;aacute; el resultado de $ ff-&amp;gt; output_file.</target>
        </trans-unit>
        <trans-unit id="7b5484f9bbb8c882de4857813fc18405c14f1941" translate="yes" xml:space="preserve">
          <source>The name of the subtest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a547e6d045957f910163d7d9750610edbb9f85" translate="yes" xml:space="preserve">
          <source>The name of the test that will be displayed after the &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;not
ok&lt;/code&gt; .</source>
          <target state="translated">El nombre de la prueba que se mostrar&amp;aacute; despu&amp;eacute;s de &lt;code&gt;ok&lt;/code&gt; o &lt;code&gt;not ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0319d70ade81e70a5ad5c9b04019b6a6a650fd8c" translate="yes" xml:space="preserve">
          <source>The name of the test that will be displayed after the &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;not ok&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed54953d3ed163e618a466d003f5bcd630ecc77" translate="yes" xml:space="preserve">
          <source>The name of the test. Usually a filename.</source>
          <target state="translated">El nombre de la prueba.Normalmente un nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="bddd22d202ef6bbfb07440852aa85decd3f86741" translate="yes" xml:space="preserve">
          <source>The name of the variable the OP's targ refers to, if any, otherwise the letter t followed by the OP's targ in decimal.</source>
          <target state="translated">El nombre de la variable a la que se refiere el targ de la OP,si la hay,de lo contrario la letra t seguida del targ de la OP en decimal.</target>
        </trans-unit>
        <trans-unit id="57d8fd0b0612e473ba409ed332506df9547952e4" translate="yes" xml:space="preserve">
          <source>The name of this target is the name of the tarball generated by tardist. This target does the actual work of turning the distdir into a tarball.</source>
          <target state="translated">El nombre de este objetivo es el nombre de la bola de alquitrán generada por Tardist.Este objetivo hace el trabajo real de convertir el distdir en un tarball.</target>
        </trans-unit>
        <trans-unit id="7f384abee623b7aefa3eee77d6cf325a89576f28" translate="yes" xml:space="preserve">
          <source>The name of this target is the name of the zip file generated by zipdist. This target does the actual work of turning the distdir into a zip file.</source>
          <target state="translated">El nombre de este objetivo es el nombre del archivo zip generado por zipdist.Este objetivo hace el trabajo real de convertir el distdir en un archivo zip.</target>
        </trans-unit>
        <trans-unit id="40fffdd6d8d082596e0b6d7269c4fc2ab2372dd8" translate="yes" xml:space="preserve">
          <source>The name or URL, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if none. (E.g., in &quot;L&amp;lt;Perl Functions|perlfunc&amp;gt;&quot;, the name (also sometimes called the page) is &quot;perlfunc&quot;. In &quot;L&amp;lt;/CAVEATS&amp;gt;&quot;, the name is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">El nombre o URL, o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si no hay ninguno. (Por ejemplo, en &quot;L &amp;lt;Funciones de Perl | perlfunc&amp;gt;&quot;, el nombre (tambi&amp;eacute;n llamado a veces la p&amp;aacute;gina) es &quot;perlfunc&quot;. En &quot;L &amp;lt;/CAVEATS&amp;gt;&quot;, el nombre es &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="db1774b0bd337a6db893379927df425f03f56870" translate="yes" xml:space="preserve">
          <source>The name or URL, or &lt;code&gt;undef&lt;/code&gt; if none. (E.g., in &quot;L&amp;lt;Perl Functions|perlfunc&amp;gt;&quot;, the name (also sometimes called the page) is &quot;perlfunc&quot;. In &quot;L&amp;lt;/CAVEATS&amp;gt;&quot;, the name is &lt;code&gt;undef&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032b79c8986bca0bbbc3c31a86f48e2e4e0d3085" translate="yes" xml:space="preserve">
          <source>The name returned is the &quot;best&quot; (defined below) official name or alias for the code point, if available; otherwise your custom alias for it, if defined; otherwise &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. This means that your alias will only be returned for code points that don't have an official Unicode name (nor alias) such as private use code points.</source>
          <target state="translated">El nombre devuelto es el &quot;mejor&quot; (definido a continuaci&amp;oacute;n) nombre oficial o alias para el punto de c&amp;oacute;digo, si est&amp;aacute; disponible; de lo contrario, su alias personalizado para &amp;eacute;l, si est&amp;aacute; definido; de lo contrario, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Esto significa que su alias solo se devolver&amp;aacute; para los puntos de c&amp;oacute;digo que no tienen un nombre oficial Unicode (ni alias), como los puntos de c&amp;oacute;digo de uso privado.</target>
        </trans-unit>
        <trans-unit id="6ccf456e05fb0bbcace6b6fbae7f69f4f9acbb13" translate="yes" xml:space="preserve">
          <source>The name returned is the &quot;best&quot; (defined below) official name or alias for the code point, if available; otherwise your custom alias for it, if defined; otherwise &lt;code&gt;undef&lt;/code&gt;. This means that your alias will only be returned for code points that don't have an official Unicode name (nor alias) such as private use code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c859e03c561ae7900b19a5195289cf330fd686" translate="yes" xml:space="preserve">
          <source>The name specification contains the name of the option, optionally followed by a list of alternative names separated by vertical bar characters.</source>
          <target state="translated">La especificación del nombre contiene el nombre de la opción,opcionalmente seguido de una lista de nombres alternativos separados por caracteres de barras verticales.</target>
        </trans-unit>
        <trans-unit id="c00824bf96e3af72974b0dc7167ce50b9784a97a" translate="yes" xml:space="preserve">
          <source>The name stored in the pad name struct. This returns &lt;code&gt;NULL&lt;/code&gt; for a target slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ea5f2153ac354bb676ac855da5204a1c4f0887" translate="yes" xml:space="preserve">
          <source>The name stored in the pad name struct. This returns NULL for a target slot.</source>
          <target state="translated">El nombre almacenado en la estructura de nombres de la almohadilla.Esto devuelve NULL para una ranura de destino.</target>
        </trans-unit>
        <trans-unit id="8d08870c9ada1df075e2fe0edf360d9170cd33f2" translate="yes" xml:space="preserve">
          <source>The name supplied for the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9c5d421e8490b0fb44df42960273145ec017c2" translate="yes" xml:space="preserve">
          <source>The name that &lt;code&gt;gv_stash*v&lt;/code&gt; wants is the name of the package whose symbol table you want. The default package is called &lt;code&gt;main&lt;/code&gt; . If you have multiply nested packages, pass their names to &lt;code&gt;gv_stash*v&lt;/code&gt; , separated by &lt;code&gt;::&lt;/code&gt; as in the Perl language itself.</source>
          <target state="translated">El nombre que &lt;code&gt;gv_stash*v&lt;/code&gt; es el nombre del paquete cuya tabla de s&amp;iacute;mbolos desea. El paquete predeterminado se llama &lt;code&gt;main&lt;/code&gt; . Si tiene varios paquetes anidados, pase sus nombres a &lt;code&gt;gv_stash*v&lt;/code&gt; , separados por &lt;code&gt;::&lt;/code&gt; como en el propio lenguaje Perl.</target>
        </trans-unit>
        <trans-unit id="3ac1dff6b7360564b5ef0a6823013e115cd6dc89" translate="yes" xml:space="preserve">
          <source>The name that &lt;code&gt;gv_stash*v&lt;/code&gt; wants is the name of the package whose symbol table you want. The default package is called &lt;code&gt;main&lt;/code&gt;. If you have multiply nested packages, pass their names to &lt;code&gt;gv_stash*v&lt;/code&gt;, separated by &lt;code&gt;::&lt;/code&gt; as in the Perl language itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5602fbc4cb262cfe30268630c826bf892b1b3d53" translate="yes" xml:space="preserve">
          <source>The name used by the Perl community. That includes 'utf8' and 'ascii'. Unlike aliases, canonical names directly reach the method so such frequently used words like 'utf8' don't need to do alias lookups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f8223ba7b643b349f360058fbf26b1973aa5a7" translate="yes" xml:space="preserve">
          <source>The name used by the organization that defined it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea1c9f71e1742c14f7e274aadd24083453f785c" translate="yes" xml:space="preserve">
          <source>The name used to execute the current copy of Perl, from C's &lt;code&gt;argv[0]&lt;/code&gt; or (where supported)</source>
          <target state="translated">El nombre usado para ejecutar la copia actual de Perl, de &lt;code&gt;argv[0]&lt;/code&gt; de C o (donde sea compatible)</target>
        </trans-unit>
        <trans-unit id="7d5e4108cb484849f5cc23fa9d5c378793d57fcf" translate="yes" xml:space="preserve">
          <source>The names</source>
          <target state="translated">Los nombres</target>
        </trans-unit>
        <trans-unit id="e163bed624ffb39e2435b88e57776aaac39a8121" translate="yes" xml:space="preserve">
          <source>The names are in the old-style (see &lt;a href=&quot;#Old-style-versus-new-style-block-names&quot;&gt;&quot;Old-style versus new-style block names&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618e9ec6e6fd129b3719b6fed50188e89fd59442" translate="yes" xml:space="preserve">
          <source>The names are in the old-style (see &lt;a href=&quot;#Old-style-versus-new-style-block-names&quot;&gt;Old-style versus new-style block names&lt;/a&gt;).</source>
          <target state="translated">Los nombres est&amp;aacute;n en el estilo antiguo (consulte &lt;a href=&quot;#Old-style-versus-new-style-block-names&quot;&gt;Nombres de bloque de estilo antiguo versus estilo nuevo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="07ca386df79309f7e041c206d3183ef66c0ddbc4" translate="yes" xml:space="preserve">
          <source>The names associated with pad entries.</source>
          <target state="translated">Los nombres asociados con las entradas de la libreta.</target>
        </trans-unit>
        <trans-unit id="9b163a7bfc6ff4bff1595ddcc9e4a9a73a9a9a05" translate="yes" xml:space="preserve">
          <source>The names have been chosen by analogy with &lt;a href=&quot;Tie::Scalar&quot;&gt;Tie::Scalar&lt;/a&gt; methods names with an additional &lt;b&gt;LENGTH&lt;/b&gt; callback for efficiency. However named capture variables are currently not tied internally but implemented via magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284af84a82eacc68e4acdb3ccfa2e6b8438eb902" translate="yes" xml:space="preserve">
          <source>The names have been chosen by analogy with &lt;a href=&quot;tie/scalar&quot;&gt;Tie::Scalar&lt;/a&gt; methods names with an additional &lt;b&gt;LENGTH&lt;/b&gt; callback for efficiency. However named capture variables are currently not tied internally but implemented via magic.</source>
          <target state="translated">Los nombres se han elegido por analog&amp;iacute;a con los nombres de los m&amp;eacute;todos &lt;a href=&quot;tie/scalar&quot;&gt;Tie :: Scalar&lt;/a&gt; con una devoluci&amp;oacute;n de llamada &lt;b&gt;LENGTH&lt;/b&gt; adicional para mayor eficiencia. Sin embargo, las variables de captura con nombre actualmente no est&amp;aacute;n vinculadas internamente, sino que se implementan mediante magia.</target>
        </trans-unit>
        <trans-unit id="6f2021e99e612abfa74ac94b1f6cbd3e729a273e" translate="yes" xml:space="preserve">
          <source>The names of any symbols that cannot be exported should be listed in the &lt;code&gt;@EXPORT_FAIL&lt;/code&gt; array.</source>
          <target state="translated">Los nombres de los s&amp;iacute;mbolos que no se pueden exportar deben aparecer en la matriz &lt;code&gt;@EXPORT_FAIL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce28b5edeebefe670a07dac363032a7c7d1c8c78" translate="yes" xml:space="preserve">
          <source>The names of one or more patch files or other text attachments to be included with the report. Multiple files must be separated with commas.</source>
          <target state="translated">Los nombres de uno o más archivos de parches u otros anexos de texto que se incluirán en el informe.Los archivos múltiples deben estar separados por comas.</target>
        </trans-unit>
        <trans-unit id="8f857c3b3defbce0780a8f039ec3e39d992aed2b" translate="yes" xml:space="preserve">
          <source>The names of the constants are grouped by length. Generate child subroutines for each group with this number or more names in.</source>
          <target state="translated">Los nombres de las constantes están agrupados por longitud.Genera subrutinas infantiles para cada grupo con este número o más nombres.</target>
        </trans-unit>
        <trans-unit id="014e7ffcf388c955244e207841832a805e1b764b" translate="yes" xml:space="preserve">
          <source>The names of the fields can be obtained by calling &lt;code&gt;overview_fmt&lt;/code&gt; .</source>
          <target state="translated">Los nombres de los campos se pueden obtener llamando a &lt;code&gt;overview_fmt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e645b67ba06f3c61734454bcb81a97d709157227" translate="yes" xml:space="preserve">
          <source>The names of the fields can be obtained by calling &lt;code&gt;overview_fmt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fc313d5aefbc7e8f27ebb1be72375df1f65ec2" translate="yes" xml:space="preserve">
          <source>The names of the signals are the ones listed out by &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; on your system, or you can retrieve them using the CPAN module &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Signal&quot;&gt;IPC::Signal&lt;/a&gt;.</source>
          <target state="translated">Los nombres de las se&amp;ntilde;ales son los enumerados por &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; en su sistema, o puede recuperarlos usando el m&amp;oacute;dulo CPAN &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Signal&quot;&gt;IPC :: Signal&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e02e2136011dc08d1ab7910eb739f830a21ebe7" translate="yes" xml:space="preserve">
          <source>The names of the signals are the ones listed out by &lt;code&gt;kill -l&lt;/code&gt; on your system, or you can retrieve them using the CPAN module &lt;a href=&quot;IPC::Signal&quot;&gt;IPC::Signal&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5a87a1d013fec4fa7021ebe1fad71eb5dada0f" translate="yes" xml:space="preserve">
          <source>The naming of encodings, both by the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; and by the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; pragma allows for flexible names: &lt;code&gt;koi8-r&lt;/code&gt; and &lt;code&gt;KOI8R&lt;/code&gt; will both be understood.</source>
          <target state="translated">El nombre de las codificaciones, tanto por el pragma &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; como por el pragma &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; permite nombres flexibles: se entender&amp;aacute;n tanto &lt;code&gt;koi8-r&lt;/code&gt; como &lt;code&gt;KOI8R&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="854c8ac2d9120b67c893ac9dc1ee0ecda32433aa" translate="yes" xml:space="preserve">
          <source>The naming of encodings, both by the &lt;code&gt;open()&lt;/code&gt; and by the &lt;code&gt;open&lt;/code&gt; pragma allows for flexible names: &lt;code&gt;koi8-r&lt;/code&gt; and &lt;code&gt;KOI8R&lt;/code&gt; will both be understood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afc81fb7787a63e6fa9bc963817cbc2add1c18f" translate="yes" xml:space="preserve">
          <source>The native Win32 version of &lt;code&gt;seek()&lt;/code&gt;. &lt;code&gt;SetFilePointer&lt;/code&gt; sets the position within a file where the next read or write operation will start from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb26ebee327534f7eadec1f76baa31ad090fef00" translate="yes" xml:space="preserve">
          <source>The native status returned by the last pipe close, backtick (&lt;code&gt;``&lt;/code&gt; ) command, successful call to &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid()&lt;/a&gt;&lt;/code&gt;, or from the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; operator. On POSIX-like systems this value can be decoded with the WIFEXITED, WEXITSTATUS, WIFSIGNALED, WTERMSIG, WIFSTOPPED, WSTOPSIG and WIFCONTINUED functions provided by the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="translated">El estado nativo devuelto por el &amp;uacute;ltimo cierre de tuber&amp;iacute;a, el comando backtick ( &lt;code&gt;``&lt;/code&gt; ), la llamada exitosa a &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid()&lt;/a&gt;&lt;/code&gt; , o desde el operador del &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; . En sistemas similares a POSIX, este valor se puede decodificar con las funciones WIFEXITED, WEXITSTATUS, WIFSIGNALED, WTERMSIG, WIFSTOPPED, WSTOPSIG y WIFCONTINUED proporcionadas por el m&amp;oacute;dulo &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbaba3e2cc788e3f7da9b6f38cb2688cde834f68" translate="yes" xml:space="preserve">
          <source>The native status returned by the last pipe close, backtick (&lt;code&gt;``&lt;/code&gt;) command, successful call to &lt;code&gt;wait()&lt;/code&gt; or &lt;code&gt;waitpid()&lt;/code&gt;, or from the &lt;code&gt;system()&lt;/code&gt; operator. On POSIX-like systems this value can be decoded with the WIFEXITED, WEXITSTATUS, WIFSIGNALED, WTERMSIG, WIFSTOPPED, WSTOPSIG and WIFCONTINUED functions provided by the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f679d50295d2d00d85ba280df81111988684878" translate="yes" xml:space="preserve">
          <source>The natural question: &quot;Why can't Perl compensate for the gaps?&quot; warrants an answer. One good reason is that C compilers might provide (non-ANSI) extensions permitting all sorts of fancy control over the way structures are aligned, even at the level of an individual structure field. And, if this were not enough, there is an insidious thing called &lt;code&gt;union&lt;/code&gt; where the amount of fill bytes cannot be derived from the alignment of the next item alone.</source>
          <target state="translated">La pregunta natural: &quot;&amp;iquest;Por qu&amp;eacute; Perl no puede compensar las brechas?&quot; garantiza una respuesta. Una buena raz&amp;oacute;n es que los compiladores de C pueden proporcionar extensiones (no ANSI) que permitan todo tipo de control sofisticado sobre la forma en que se alinean las estructuras, incluso a nivel de un campo de estructura individual. Y, si esto no fuera suficiente, existe una cosa insidiosa llamada &lt;code&gt;union&lt;/code&gt; donde la cantidad de bytes de relleno no se puede derivar de la alineaci&amp;oacute;n del siguiente elemento solo.</target>
        </trans-unit>
        <trans-unit id="73304f2bc3720cbdf5bbe3a347ce1a6a6606cb3e" translate="yes" xml:space="preserve">
          <source>The natural way to do this is to have a hash whose keys are country names. Associated with each country name key is a list of the cities in that country. Each time you read a line of input, split it into a country and a city, look up the list of cities already known to be in that country, and append the new city to the list. When you're done reading the input, iterate over the hash as usual, sorting each list of cities before you print it out.</source>
          <target state="translated">La forma natural de hacerlo es tener un hachís cuyas claves son los nombres de los países.Asociada a cada clave de nombre de país hay una lista de las ciudades de ese país.Cada vez que lees una línea de entrada,la divides en un país y una ciudad,buscas la lista de ciudades que ya se sabe que están en ese país,y añades la nueva ciudad a la lista.Cuando termines de leer la entrada,itera sobre el hash como de costumbre,ordenando cada lista de ciudades antes de imprimirla.</target>
        </trans-unit>
        <trans-unit id="47d44728d6d28aac48e384cc30fefc76b5a26c28" translate="yes" xml:space="preserve">
          <source>The negated versions of the lookahead and lookbehind assertions are denoted by &lt;code&gt;(?!regexp)&lt;/code&gt; and &lt;code&gt;(?&amp;lt;!fixed-regexp)&lt;/code&gt; respectively. Or, starting in 5.32 (experimentally in 5.28), &lt;code&gt;(*nla:regexp)&lt;/code&gt;, &lt;code&gt;(*negative_lookahead:regexp)&lt;/code&gt;, &lt;code&gt;(*nlb:regexp)&lt;/code&gt;, or &lt;code&gt;(*negative_lookbehind:regexp)&lt;/code&gt;. They evaluate true if the regexps do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba13cfae515a220e252c3e1157af722de7da0aa" translate="yes" xml:space="preserve">
          <source>The negation is useful for defining (surprise!) negated classes.</source>
          <target state="translated">La negación es útil para definir (¡sorpresa!)las clases negadas.</target>
        </trans-unit>
        <trans-unit id="db0ad6bd4816ce652496b94f2f1d7976b92ada0c" translate="yes" xml:space="preserve">
          <source>The negation of this macro, &lt;code&gt;OP_TYPE_ISNT&lt;/code&gt; is also available as well as &lt;code&gt;OP_TYPE_IS_NN&lt;/code&gt; and &lt;code&gt;OP_TYPE_ISNT_NN&lt;/code&gt; which elide the NULL pointer check.</source>
          <target state="translated">La negaci&amp;oacute;n de esta macro, &lt;code&gt;OP_TYPE_ISNT&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; disponible, as&amp;iacute; como &lt;code&gt;OP_TYPE_IS_NN&lt;/code&gt; y &lt;code&gt;OP_TYPE_ISNT_NN&lt;/code&gt; , que omiten la comprobaci&amp;oacute;n de puntero NULL.</target>
        </trans-unit>
        <trans-unit id="34a8b60e3a36600480a60cec2deec17ff174ebef" translate="yes" xml:space="preserve">
          <source>The negation of this macro, &lt;code&gt;OP_TYPE_ISNT_AND_WASNT&lt;/code&gt; is also available as well as &lt;code&gt;OP_TYPE_IS_OR_WAS_NN&lt;/code&gt; and &lt;code&gt;OP_TYPE_ISNT_AND_WASNT_NN&lt;/code&gt; which elide the &lt;code&gt;NULL&lt;/code&gt; pointer check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691f70fa29f72e49de97eccc12c05c1f840f1b46" translate="yes" xml:space="preserve">
          <source>The negation of this macro, &lt;code&gt;OP_TYPE_ISNT_AND_WASNT&lt;/code&gt; is also available as well as &lt;code&gt;OP_TYPE_IS_OR_WAS_NN&lt;/code&gt; and &lt;code&gt;OP_TYPE_ISNT_AND_WASNT_NN&lt;/code&gt; which elide the NULL pointer check.</source>
          <target state="translated">La negaci&amp;oacute;n de esta macro, &lt;code&gt;OP_TYPE_ISNT_AND_WASNT&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; disponible, as&amp;iacute; como &lt;code&gt;OP_TYPE_IS_OR_WAS_NN&lt;/code&gt; y &lt;code&gt;OP_TYPE_ISNT_AND_WASNT_NN&lt;/code&gt; que eluden la verificaci&amp;oacute;n de puntero NULL.</target>
        </trans-unit>
        <trans-unit id="528d5b378ab36165946632706d39fa6c9839837e" translate="yes" xml:space="preserve">
          <source>The new behavior provides a much more robust solution for checking Winsock errors in portable software without accidentally matching POSIX tests that were intended for other OSes and may have different meanings for Winsock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68f1f4d38ce035e2e238de529bbc7313afe802e" translate="yes" xml:space="preserve">
          <source>The new class is given a constructor method, &lt;code&gt;new&lt;/code&gt; , for creating struct objects.</source>
          <target state="translated">La nueva clase recibe un m&amp;eacute;todo constructor, &lt;code&gt;new&lt;/code&gt; , para crear objetos de estructura.</target>
        </trans-unit>
        <trans-unit id="9d80888ad8b596747bf8185a9ccf7eb36f05c472" translate="yes" xml:space="preserve">
          <source>The new class is given a constructor method, &lt;code&gt;new&lt;/code&gt;, for creating struct objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133a286ef1fa797920ffbacb6d543c092bbb9c81" translate="yes" xml:space="preserve">
          <source>The new compare function must be specified when you create the database.</source>
          <target state="translated">La nueva función de comparación debe especificarse al crear la base de datos.</target>
        </trans-unit>
        <trans-unit id="6ca5133e85084fb8ccd654bdee5f648c6a7925f9" translate="yes" xml:space="preserve">
          <source>The new interface to the USE_PERLIO implementation. The layers &quot;:crlf&quot; and &quot;:raw&quot; are only ones allowed for other implementations and those are silently ignored. (As of perl5.8 &quot;:raw&quot; is deprecated.) Use PerlIO_binmode() below for the portable case.</source>
          <target state="translated">La nueva interfaz de la implementación de USE_PERLIO.Las capas &quot;:crlf&quot; y &quot;:raw&quot; son las únicas permitidas para otras implementaciones y son ignoradas silenciosamente.(A partir de perl5.8 &quot;:raw&quot; está desactualizado.)Use PerlIO_binmode()abajo para el caso portátil.</target>
        </trans-unit>
        <trans-unit id="ef605716ebbaada258955508adf61e07c343c95f" translate="yes" xml:space="preserve">
          <source>The new key is specified by</source>
          <target state="translated">La nueva clave está especificada por</target>
        </trans-unit>
        <trans-unit id="93da98420a9bfc76d18ae79d8876182fff5c85c5" translate="yes" xml:space="preserve">
          <source>The new key is specified by &lt;code&gt;keypv&lt;/code&gt; and &lt;code&gt;keylen&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;REFCOUNTED_HE_KEY_UTF8&lt;/code&gt; bit set, the key octets are interpreted as UTF-8, otherwise they are interpreted as Latin-1. &lt;code&gt;hash&lt;/code&gt; is a precomputed hash of the key string, or zero if it has not been precomputed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853b1cad8315c050b3031642990285f3b3f61796" translate="yes" xml:space="preserve">
          <source>The new perlIO layer is used. NI-S' favorite.</source>
          <target state="translated">Se utiliza la nueva capa de perlIO.La favorita de NI-S.</target>
        </trans-unit>
        <trans-unit id="437054ab8086dcb8d5230b53692e92ce8976728d" translate="yes" xml:space="preserve">
          <source>The new prereqs object has no ties to the originals, and altering it further will not alter them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f44fc740bd8115fd48ea2f3dccbe8d30383620f" translate="yes" xml:space="preserve">
          <source>The new routine will be called whenever a built-in function is called without a qualifying package:</source>
          <target state="translated">La nueva rutina se llamará siempre que se llame a una función incorporada sin un paquete de calificación:</target>
        </trans-unit>
        <trans-unit id="69fd8169a1c03a87b9cb7323668ea2985b78ca39" translate="yes" xml:space="preserve">
          <source>The new semantics are now only available with &lt;code&gt;make_path&lt;/code&gt; and &lt;code&gt;remove_tree&lt;/code&gt; . The old semantics are only available through &lt;code&gt;mkpath&lt;/code&gt; and &lt;code&gt;rmtree&lt;/code&gt; . Users are strongly encouraged to upgrade to at least 2.08 in order to avoid surprises.</source>
          <target state="translated">La nueva sem&amp;aacute;ntica ahora solo est&amp;aacute; disponible con &lt;code&gt;make_path&lt;/code&gt; y &lt;code&gt;remove_tree&lt;/code&gt; . La antigua sem&amp;aacute;ntica solo est&amp;aacute; disponible a trav&amp;eacute;s de &lt;code&gt;mkpath&lt;/code&gt; y &lt;code&gt;rmtree&lt;/code&gt; . Se recomienda encarecidamente a los usuarios que actualicen al menos a 2.08 para evitar sorpresas.</target>
        </trans-unit>
        <trans-unit id="e786b3ec60d0d79422f9596d38dfebba203b53ce" translate="yes" xml:space="preserve">
          <source>The new semantics are now only available with &lt;code&gt;make_path&lt;/code&gt; and &lt;code&gt;remove_tree&lt;/code&gt;. The old semantics are only available through &lt;code&gt;mkpath&lt;/code&gt; and &lt;code&gt;rmtree&lt;/code&gt;. Users are strongly encouraged to upgrade to at least 2.08 in order to avoid surprises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb00043758d6e48f38e06be5dcd0156fe97d078" translate="yes" xml:space="preserve">
          <source>The new shiny result of either genuine new functionality or your arduous refactoring is now ready and correctly exported. So what could possibly go wrong?</source>
          <target state="translated">El nuevo y brillante resultado de la nueva funcionalidad genuina o de su arduo refactoreo está ahora listo y correctamente exportado.Entonces,¿qué podría salir mal?</target>
        </trans-unit>
        <trans-unit id="c231cf25130a94dd10bb860a955a6b6ad30c18f8" translate="yes" xml:space="preserve">
          <source>The new simpler way to call &lt;code&gt;XSLoader::load()&lt;/code&gt; with no arguments at all does not work on Perl 5.8.4 and 5.8.5.</source>
          <target state="translated">La nueva forma m&amp;aacute;s sencilla de llamar a &lt;code&gt;XSLoader::load()&lt;/code&gt; sin ning&amp;uacute;n argumento no funciona en Perl 5.8.4 y 5.8.5.</target>
        </trans-unit>
        <trans-unit id="80d8983154af8008f3d7e48dfd488df835186d04" translate="yes" xml:space="preserve">
          <source>The new thread creation is line 20. We pass on to it a reference to the queue we've created, and the prime number we've found. In lines 21 through 24, we check to make sure that our new thread got created, and if not, we stop checking any remaining numbers in the queue.</source>
          <target state="translated">La nueva creación del hilo es la línea 20.Le pasamos una referencia a la cola que hemos creado,y el número primo que hemos encontrado.En las líneas 21 a 24,comprobamos que nuestro nuevo hilo se ha creado,y si no,dejamos de comprobar los números restantes de la cola.</target>
        </trans-unit>
        <trans-unit id="9044c695c3da968e5a2ea15d51b8b1e2dbc7cbb0" translate="yes" xml:space="preserve">
          <source>The new() function searches for all the installed .packlists on the system, and stores their contents. The .packlists can be queried with the functions described below. Where it searches by default is determined by the settings found in &lt;code&gt;%Config::Config&lt;/code&gt; , and what the value is of the PERL5LIB environment variable.</source>
          <target state="translated">La funci&amp;oacute;n new () busca todas las listas de paquetes instaladas en el sistema y almacena su contenido. Los .packlists se pueden consultar con las funciones que se describen a continuaci&amp;oacute;n. El lugar donde busca de forma predeterminada est&amp;aacute; determinado por la configuraci&amp;oacute;n que se encuentra en &lt;code&gt;%Config::Config&lt;/code&gt; , y cu&amp;aacute;l es el valor de la variable de entorno PERL5LIB.</target>
        </trans-unit>
        <trans-unit id="e6b22aa358acbe55c29900d7f62b40d0edc02821" translate="yes" xml:space="preserve">
          <source>The new() function searches for all the installed .packlists on the system, and stores their contents. The .packlists can be queried with the functions described below. Where it searches by default is determined by the settings found in &lt;code&gt;%Config::Config&lt;/code&gt;, and what the value is of the PERL5LIB environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e76ad120503fe22fb2abd0288095a443b471d16" translate="yes" xml:space="preserve">
          <source>The newer style replaces these with underscores, like this:</source>
          <target state="translated">El nuevo estilo reemplaza estos con subrayados,como este:</target>
        </trans-unit>
        <trans-unit id="0249c11220739d961eab9d8efdfb827caa468595" translate="yes" xml:space="preserve">
          <source>The newly created subroutine takes ownership of a reference to the passed in SV.</source>
          <target state="translated">La subrutina recién creada se apropia de una referencia a la aprobada en SV.</target>
        </trans-unit>
        <trans-unit id="c36ff1fb86ca87ccc2385388c9e1be809de8496c" translate="yes" xml:space="preserve">
          <source>The next 8 bits contain the termination status of the program.</source>
          <target state="translated">Los siguientes 8 bits contienen el estado de terminación del programa.</target>
        </trans-unit>
        <trans-unit id="429ca09b18f928ad50edc605bbb88976cae30220" translate="yes" xml:space="preserve">
          <source>The next example demonstrates how one would place an explicit undef in the return value, should the need arise.</source>
          <target state="translated">El siguiente ejemplo demuestra cómo se colocaría un indefinido explícito en el valor de retorno,si fuera necesario.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
