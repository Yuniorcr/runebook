<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="95121980b89b7a9fb796f03c8d74599823515afb" translate="yes" xml:space="preserve">
          <source>In general, there's no need to worry about the order of calls. They will be left-to-right, breadth-first, most-derived-first. This works perfectly for most inherited methods (including destructors), but is inappropriate for some kinds of methods (such as constructors, cloners, debuggers, and initializers) where it's more appropriate that the least-derived methods be called first (as more-derived methods may rely on the behaviour of their &quot;ancestors&quot;). In that case, instead of using the &lt;code&gt;EVERY&lt;/code&gt; pseudo-class:</source>
          <target state="translated">En general, no hay necesidad de preocuparse por el orden de las llamadas. Ser&amp;aacute;n de izquierda a derecha, primero en amplitud, primero en la mayor&amp;iacute;a derivada. Esto funciona perfectamente para la mayor&amp;iacute;a de los m&amp;eacute;todos heredados (incluidos los destructores), pero es inapropiado para algunos tipos de m&amp;eacute;todos (como constructores, clonadores, depuradores e inicializadores) donde es m&amp;aacute;s apropiado que los m&amp;eacute;todos menos derivados se llamen primero (como m&amp;aacute;s derivados los m&amp;eacute;todos pueden depender del comportamiento de sus &quot;antepasados&quot;). En ese caso, en lugar de usar &lt;code&gt;EVERY&lt;/code&gt; pseudoclase:</target>
        </trans-unit>
        <trans-unit id="294f7f9dd3d63c6c658291241c38389ef5522490" translate="yes" xml:space="preserve">
          <source>In general, though, it's best to use the &lt;code&gt;Sv*V&lt;/code&gt; macros.</source>
          <target state="translated">Sin embargo, en general, es mejor usar las macros &lt;code&gt;Sv*V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aabaf80efaeb23cca024ae206403fa19e6f8a255" translate="yes" xml:space="preserve">
          <source>In general, with &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; enabled, more detailed information will be available in the exit status for DCL scripts or other native VMS tools, and will give the expected information for Posix programs. It has not been made the default in order to preserve backward compatibility.</source>
          <target state="translated">En general, con &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; habilitado, estar&amp;aacute; disponible informaci&amp;oacute;n m&amp;aacute;s detallada en el estado de salida para scripts DCL u otras herramientas VMS nativas, y dar&amp;aacute; la informaci&amp;oacute;n esperada para los programas Posix. No se ha establecido como predeterminado para preservar la compatibilidad con versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="d941c018a8912081ee9a18eaddf237ed10e20a20" translate="yes" xml:space="preserve">
          <source>In general, you can't do this. There are some things that may work for your situation though. People usually ask this question because they want to distribute their works without giving away the source code, and most solutions trade disk space for convenience. You probably won't see much of a speed increase either, since most solutions simply bundle a Perl interpreter in the final product (but see &lt;a href=&quot;#How-can-I-make-my-Perl-program-run-faster%3f&quot;&gt;How can I make my Perl program run faster?&lt;/a&gt;).</source>
          <target state="translated">En general, no puede hacer esto. Sin embargo, hay algunas cosas que pueden funcionar para su situaci&amp;oacute;n. La gente suele hacer esta pregunta porque quiere distribuir sus trabajos sin revelar el c&amp;oacute;digo fuente, y la mayor&amp;iacute;a de las soluciones intercambian espacio en disco por conveniencia. Probablemente tampoco ver&amp;aacute; mucho aumento de velocidad, ya que la mayor&amp;iacute;a de las soluciones simplemente incluyen un int&amp;eacute;rprete de Perl en el producto final (pero consulte &lt;a href=&quot;#How-can-I-make-my-Perl-program-run-faster%3f&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo hacer que mi programa Perl se ejecute m&amp;aacute;s r&amp;aacute;pido?&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a9eadd2908a4639d8decf9b9f18aef810c6f9990" translate="yes" xml:space="preserve">
          <source>In general, you don't &quot;declare&quot; a structure. Just use a (probably anonymous) hash reference. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; and &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; for details. Here's an example:</source>
          <target state="translated">En general, no &quot;declaras&quot; una estructura. Simplemente use una referencia hash (probablemente an&amp;oacute;nima). Consulte &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; y &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; para obtener m&amp;aacute;s detalles. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="7f00c5d5b02fc95d1502392b2b9783083f707dee" translate="yes" xml:space="preserve">
          <source>In general, you don't, because you don't know whether the recipient has a color-aware display device. If you know that they have an ANSI terminal that understands color, you can use the &lt;a href=&quot;term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; module from CPAN:</source>
          <target state="translated">En general, no lo sabe, porque no sabe si el destinatario tiene un dispositivo de visualizaci&amp;oacute;n con reconocimiento de colores. Si sabe que tienen un terminal ANSI que entiende el color, puede usar el m&amp;oacute;dulo &lt;a href=&quot;term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; de CPAN:</target>
        </trans-unit>
        <trans-unit id="2f87cb8b42da40e06ddcf5b3026af1eac6aa3d5a" translate="yes" xml:space="preserve">
          <source>In general, you either have to know what you're dealing with, or you have to guess. The API function &lt;code&gt;is_utf8_string&lt;/code&gt; can help; it'll tell you if a string contains only valid UTF-8 characters, and the chances of a non-UTF-8 string looking like valid UTF-8 become very small very quickly with increasing string length. On a character-by-character basis, &lt;code&gt;isUTF8_CHAR&lt;/code&gt; will tell you whether the current character in a string is valid UTF-8.</source>
          <target state="translated">En general, tienes que saber con qu&amp;eacute; est&amp;aacute;s lidiando o tienes que adivinar. La funci&amp;oacute;n API &lt;code&gt;is_utf8_string&lt;/code&gt; puede ayudar; le dir&amp;aacute; si una cadena contiene solo caracteres UTF-8 v&amp;aacute;lidos, y las posibilidades de que una cadena que no sea UTF-8 parezca UTF-8 v&amp;aacute;lida se reduzcan muy r&amp;aacute;pidamente al aumentar la longitud de la cadena. Car&amp;aacute;cter por car&amp;aacute;cter, &lt;code&gt;isUTF8_CHAR&lt;/code&gt; le dir&amp;aacute; si el car&amp;aacute;cter actual en una cadena es UTF-8 v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="26ea48aedd1cf988ca4c353ab67e2113694ba714" translate="yes" xml:space="preserve">
          <source>In human terms, it's a funny way of passing arguments to a subroutine when you define it as well as when you call it. It's useful for setting up little bits of code to run later, such as callbacks. You can even do object-oriented stuff with it, though Perl already provides a different mechanism to do that--see &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">En t&amp;eacute;rminos humanos, es una forma divertida de pasar argumentos a una subrutina tanto cuando la define como cuando la llama. Es &amp;uacute;til para configurar peque&amp;ntilde;os fragmentos de c&amp;oacute;digo para que se ejecuten m&amp;aacute;s tarde, como devoluciones de llamada. Incluso puede hacer cosas orientadas a objetos con &amp;eacute;l, aunque Perl ya proporciona un mecanismo diferente para hacerlo: consulte &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ba4c53f21b8779523425f16e680264ebae0decb" translate="yes" xml:space="preserve">
          <source>In inverted bracketed character classes, Perl ignores the Unicode rules that normally say that named sequence, and certain characters should match a sequence of multiple characters use under caseless &lt;code&gt;/i&lt;/code&gt; matching. Following those rules could lead to highly confusing situations:</source>
          <target state="translated">En las clases de caracteres entre corchetes invertidos, Perl ignora las reglas Unicode que normalmente dicen que la secuencia con nombre, y ciertos caracteres deben coincidir con una secuencia de varios caracteres utilizados bajo coincidencia &lt;code&gt;/i&lt;/code&gt; sin may&amp;uacute;sculas y min&amp;uacute;sculas . Seguir esas reglas podr&amp;iacute;a llevar a situaciones muy confusas:</target>
        </trans-unit>
        <trans-unit id="60a70875c03150cbfc8e14e2cc2dec49ecd50454" translate="yes" xml:space="preserve">
          <source>In its most basic usage, &lt;code&gt;ok(...)&lt;/code&gt; simply takes a single scalar expression. If its value is true, the test passes; if false, the test fails. Examples:</source>
          <target state="translated">En su uso m&amp;aacute;s b&amp;aacute;sico, &lt;code&gt;ok(...)&lt;/code&gt; simplemente toma una sola expresi&amp;oacute;n escalar. Si su valor es verdadero, la prueba pasa; si es falso, la prueba falla. Ejemplos:</target>
        </trans-unit>
        <trans-unit id="4d817298c353371e9d0b73c75cf1950195e64063" translate="yes" xml:space="preserve">
          <source>In its second form, &lt;code&gt;cond_wait&lt;/code&gt; takes a shared, &lt;b&gt;unlocked&lt;/b&gt; variable followed by a shared, &lt;b&gt;locked&lt;/b&gt; variable. The second variable is unlocked and thread execution suspended until another thread signals the first variable.</source>
          <target state="translated">En su segunda forma, &lt;code&gt;cond_wait&lt;/code&gt; toma una variable &lt;b&gt;desbloqueada&lt;/b&gt; compartida seguida de una variable &lt;b&gt;bloqueada&lt;/b&gt; compartida . La segunda variable se desbloquea y la ejecuci&amp;oacute;n del hilo se suspende hasta que otro hilo se&amp;ntilde;ala la primera variable.</target>
        </trans-unit>
        <trans-unit id="4c9702efe584ddf3df38f0a305879394e6c945fd" translate="yes" xml:space="preserve">
          <source>In its two-argument form, &lt;code&gt;cond_timedwait&lt;/code&gt; takes a &lt;b&gt;locked&lt;/b&gt; variable and an absolute timeout in</source>
          <target state="translated">En su forma de dos argumentos, &lt;code&gt;cond_timedwait&lt;/code&gt; toma una variable &lt;b&gt;bloqueada&lt;/b&gt; y un tiempo de espera absoluto en</target>
        </trans-unit>
        <trans-unit id="fbaa31119043f388b0d536e0c6af6beff83b01ef" translate="yes" xml:space="preserve">
          <source>In its two-argument form, &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;arg2&lt;/i&gt;)&lt;/code&gt; compares the two scalar values to see if they match. They match if both are undefined, or if</source>
          <target state="translated">En su forma de dos argumentos, &lt;code&gt;ok(&lt;i&gt;arg1&lt;/i&gt;, &lt;i&gt;arg2&lt;/i&gt;)&lt;/code&gt; compara los dos valores escalares para ver si coinciden. Coinciden si ambos son indefinidos, o si</target>
        </trans-unit>
        <trans-unit id="278b05f5c861132c7f4bc86f277c1645adbbdf57" translate="yes" xml:space="preserve">
          <source>In less grandiose terms, the first part of the job is to turn a pattern into something the computer can efficiently use to find the matching point in the string, and the second part is performing the search itself.</source>
          <target state="translated">En términos menos grandiosos,la primera parte del trabajo es convertir un patrón en algo que la computadora pueda usar eficientemente para encontrar el punto de coincidencia en la cadena,y la segunda parte es realizar la búsqueda por sí misma.</target>
        </trans-unit>
        <trans-unit id="f53ef23dfb1a32e84061a4ee3198583f6963d3be" translate="yes" xml:space="preserve">
          <source>In line 7, we make sure that the SV will have enough room to accommodate the old string, the new string and the null terminator. If &lt;code&gt;LEN&lt;/code&gt; isn't big enough, &lt;code&gt;SvGROW&lt;/code&gt; will reallocate space for us.</source>
          <target state="translated">En la l&amp;iacute;nea 7, nos aseguramos de que el SV tenga suficiente espacio para acomodar la cadena antigua, la nueva y el terminador nulo. Si &lt;code&gt;LEN&lt;/code&gt; no es lo suficientemente grande, &lt;code&gt;SvGROW&lt;/code&gt; reasignar&amp;aacute; espacio para nosotros.</target>
        </trans-unit>
        <trans-unit id="6338eafb38b19e3533d3d49a05621b9aaa4f97d8" translate="yes" xml:space="preserve">
          <source>In line mode, &lt;code&gt;filter_read&lt;/code&gt; will append the next source line to the end of the &lt;code&gt;$_&lt;/code&gt; scalar.</source>
          <target state="translated">En el modo de l&amp;iacute;nea, &lt;code&gt;filter_read&lt;/code&gt; agregar&amp;aacute; la siguiente l&amp;iacute;nea fuente al final del escalar &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a450e27bd36ea332e7d75f6381cc8a12782b5b7a" translate="yes" xml:space="preserve">
          <source>In list context (which is usually what you want), the function returns a (possibly empty) list of language tags representing (best first) what languages the user apparently would accept output in. You will probably want to pass the output of this through &lt;code&gt;I18N::LangTags::implicate_supers_tightly(...)&lt;/code&gt; or &lt;code&gt;I18N::LangTags::implicate_supers(...)&lt;/code&gt; , like so:</source>
          <target state="translated">En el contexto de la lista (que suele ser lo que desea), la funci&amp;oacute;n devuelve una lista (posiblemente vac&amp;iacute;a) de etiquetas de idioma que representan (lo mejor primero) los idiomas en los que el usuario aparentemente aceptar&amp;iacute;a la salida. &lt;code&gt;I18N::LangTags::implicate_supers_tightly(...)&lt;/code&gt; o &lt;code&gt;I18N::LangTags::implicate_supers(...)&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="239ff52c002bacbd9ef8a650976d52e44cb1392b" translate="yes" xml:space="preserve">
          <source>In list context it returns a two element list, the first element containing the pattern and the second containing the modifiers used when the pattern was compiled.</source>
          <target state="translated">En el contexto de la lista,devuelve una lista de dos elementos,el primero de los cuales contiene la pauta y el segundo los modificadores utilizados cuando se compiló la pauta.</target>
        </trans-unit>
        <trans-unit id="a8954af69f3e9417a81eb4843c66328678eb290e" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;//g&lt;/code&gt; returns a list of matched groupings, or if there are no groupings, a list of matches to the whole regex. So</source>
          <target state="translated">En el contexto de la lista, &lt;code&gt;//g&lt;/code&gt; devuelve una lista de agrupaciones coincidentes, o si no hay agrupaciones, una lista de coincidencias con toda la expresi&amp;oacute;n regular. Entonces</target>
        </trans-unit>
        <trans-unit id="4a59e7f9e300ced2156a7bfdcb5c2ed656175ffd" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;//g&lt;/code&gt; returns a list of matched groupings, or if there are no groupings, a list of matches to the whole regexp. So if we wanted just the words, we could use</source>
          <target state="translated">En el contexto de la lista, &lt;code&gt;//g&lt;/code&gt; devuelve una lista de agrupaciones coincidentes, o si no hay agrupaciones, una lista de coincidencias con toda la expresi&amp;oacute;n regular. Entonces, si solo quisi&amp;eacute;ramos las palabras, podr&amp;iacute;amos usar</target>
        </trans-unit>
        <trans-unit id="ce23af9639d689001f6ad6f1b438efaee509bdfe" translate="yes" xml:space="preserve">
          <source>In list context, &lt;code&gt;extract_delimited&lt;/code&gt; returns a array of three elements, the extracted substring (</source>
          <target state="translated">En el contexto de la lista, &lt;code&gt;extract_delimited&lt;/code&gt; devuelve una matriz de tres elementos, la subcadena extra&amp;iacute;da (</target>
        </trans-unit>
        <trans-unit id="85fefe43cf3ce99aee8bf62db2fc923ea0e22144" translate="yes" xml:space="preserve">
          <source>In list context, a match &lt;code&gt;/regex/&lt;/code&gt; with groupings will return the list of matched values &lt;code&gt;($1,$2,...)&lt;/code&gt; . So we could rewrite it as</source>
          <target state="translated">En el contexto de la lista, una coincidencia &lt;code&gt;/regex/&lt;/code&gt; con agrupaciones devolver&amp;aacute; la lista de valores coincidentes &lt;code&gt;($1,$2,...)&lt;/code&gt; . Entonces podr&amp;iacute;amos reescribirlo como</target>
        </trans-unit>
        <trans-unit id="c008355e8673133191ef9e0d9724c780f81e596e" translate="yes" xml:space="preserve">
          <source>In list context, both the remaining time and the interval are returned.</source>
          <target state="translated">En el contexto de la lista,se devuelve tanto el tiempo restante como el intervalo.</target>
        </trans-unit>
        <trans-unit id="4ff8ef7b7f3933511d227abc0760c6958871615f" translate="yes" xml:space="preserve">
          <source>In list context, both the remaining time and the interval are returned. The interval is always what you put in using &lt;code&gt;setitimer()&lt;/code&gt; .</source>
          <target state="translated">En el contexto de la lista, se devuelven tanto el tiempo restante como el intervalo. El intervalo es siempre lo que pones usando &lt;code&gt;setitimer()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f52db4aa7cef4591f6ad21954e80ef3d1ce4ff3" translate="yes" xml:space="preserve">
          <source>In list context, if the second parameter is present and evaluates TRUE, the method returns an associative array. The keys of the associative array correspond to the values that matched in the BTREE and the values of the array are a count of the number of times that particular value occurred in the BTREE.</source>
          <target state="translated">En el contexto de la lista,si el segundo parámetro está presente y evalúa VERDADERO,el método devuelve una matriz asociativa.Las claves de la matriz asociativa corresponden a los valores que coincidieron en el BTREE y los valores de la matriz son un recuento del número de veces que ese valor particular ocurrió en el BTREE.</target>
        </trans-unit>
        <trans-unit id="611c9c24bc1f7655268ae0a922a1bafe9f75484e" translate="yes" xml:space="preserve">
          <source>In list context, it returns all the values which match &lt;code&gt;$key&lt;/code&gt; . Note that the values will be returned in an apparently random order.</source>
          <target state="translated">En el contexto de la lista, devuelve todos los valores que coinciden con &lt;code&gt;$key&lt;/code&gt; . Tenga en cuenta que los valores se devolver&amp;aacute;n en un orden aparentemente aleatorio.</target>
        </trans-unit>
        <trans-unit id="b9e8a08a17d7e9ccb66ceef8551ab60c5578a3cb" translate="yes" xml:space="preserve">
          <source>In list context, it's just the list argument separator, and inserts both its arguments into the list. These arguments are also evaluated from left to right.</source>
          <target state="translated">En el contexto de la lista,es sólo el separador de argumentos de la lista,e inserta sus dos argumentos en la lista.Estos argumentos también se evalúan de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="d53a53afd4d30e8bf9ee4f38d18899b7c7ca7c4f" translate="yes" xml:space="preserve">
          <source>In list context, returns a (possibly empty) list of filename expansions on the value of EXPR such as the standard Unix shell</source>
          <target state="translated">En el contexto de la lista,devuelve una lista (posiblemente vacía)de expansiones de nombres de archivos en el valor de EXPR como el shell estándar de Unix</target>
        </trans-unit>
        <trans-unit id="6f4ce95673df56dca54efc694ff26b54d19e3c4c" translate="yes" xml:space="preserve">
          <source>In list context, returns a list consisting of all the values of the named hash. In Perl 5.12 or later only, will also return a list of the values of an array; prior to that release, attempting to use an array argument will produce a syntax error. In scalar context, returns the number of values.</source>
          <target state="translated">En el contexto de la lista,devuelve una lista que consiste en todos los valores del hash nombrado.Sólo en Perl 5.12 o posterior,también devuelve una lista de los valores de una matriz;antes de esa publicación,intentar utilizar un argumento de matriz producirá un error de sintaxis.En contexto escalar,devuelve el número de valores.</target>
        </trans-unit>
        <trans-unit id="7bcc561bb33b529c7d0fa7662daf305595924e45" translate="yes" xml:space="preserve">
          <source>In list context, returns a list value consisting of the elements of LIST in the opposite order. In scalar context, concatenates the elements of LIST and returns a string value with all characters in the opposite order.</source>
          <target state="translated">En el contexto de la lista,devuelve un valor de lista que consiste en los elementos de LIST en el orden contrario.En contexto escalar,concatena los elementos de LIST y devuelve un valor de cadena con todos los caracteres en el orden opuesto.</target>
        </trans-unit>
        <trans-unit id="8b48751518b742e90690dec941b028dbd41c2485" translate="yes" xml:space="preserve">
          <source>In list context, returns the value or values deleted, or the last such element in scalar context. The return list's length always matches that of the argument list: deleting non-existent elements returns the undefined value in their corresponding positions.</source>
          <target state="translated">En el contexto de la lista,devuelve el valor o los valores suprimidos,o el último de esos elementos en el contexto escalar.La longitud de la lista de retorno siempre coincide con la de la lista de argumentos:la eliminación de elementos inexistentes devuelve el valor indefinido en sus posiciones correspondientes.</target>
        </trans-unit>
        <trans-unit id="14dda5a0315cd38b494f1396d6549e05a88ce769" translate="yes" xml:space="preserve">
          <source>In list context, this sorts the LIST and returns the sorted list value. In scalar context, the behaviour of &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; is undefined.</source>
          <target state="translated">En el contexto de la lista, esto ordena la LISTA y devuelve el valor de la lista ordenada. En contexto escalar, el comportamiento de &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="c275967193060ed0f99b2fe8baeb485ea49b9b81" translate="yes" xml:space="preserve">
          <source>In list context, this sorts the LIST and returns the sorted list value. In scalar context, the behaviour of &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; is undefined.</source>
          <target state="translated">En el contexto de la lista, esto ordena la LISTA y devuelve el valor de la lista ordenada. En contexto escalar, el comportamiento de &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="f04d016b9064bf9bf9d2d6da3b96e6acf6fd1521" translate="yes" xml:space="preserve">
          <source>In literal patterns, the code is parsed at the same time as the surrounding code. While within the pattern, control is passed temporarily back to the perl parser, until the logically-balancing closing brace is encountered. This is similar to the way that an array index expression in a literal string is handled, for example</source>
          <target state="translated">En los patrones literales,el código se analiza al mismo tiempo que el código circundante.Mientras que dentro del patrón,el control se pasa temporalmente de nuevo al analizador de perlas,hasta que se encuentra el cierre de equilibrio lógico.Esto es similar a la forma en que se maneja una expresión de índice de matriz en una cadena literal,por ejemplo</target>
        </trans-unit>
        <trans-unit id="1a35afb8085f46becc13477af444009e4d377a40" translate="yes" xml:space="preserve">
          <source>In many cases, methods that are used to set the internal state of the object will return the object itself, so method calls can be conveniently chained together.</source>
          <target state="translated">En muchos casos,los métodos que se utilizan para establecer el estado interno del objeto devolverán el objeto mismo,por lo que las llamadas a los métodos pueden ser convenientemente encadenadas.</target>
        </trans-unit>
        <trans-unit id="e9b8eb0a3ccf1ee1e198f508015d1976e62c80e9" translate="yes" xml:space="preserve">
          <source>In many systems the &lt;code&gt;O_EXCL&lt;/code&gt; flag is available for opening files in exclusive mode. This is &lt;b&gt;not&lt;/b&gt; locking: exclusiveness means here that if the file already exists, sysopen() fails. &lt;code&gt;O_EXCL&lt;/code&gt; may not work on network filesystems, and has no effect unless the &lt;code&gt;O_CREAT&lt;/code&gt; flag is set as well. Setting &lt;code&gt;O_CREAT|O_EXCL&lt;/code&gt; prevents the file from being opened if it is a symbolic link. It does not protect against symbolic links in the file's path.</source>
          <target state="translated">En muchos sistemas, la bandera &lt;code&gt;O_EXCL&lt;/code&gt; est&amp;aacute; disponible para abrir archivos en modo exclusivo. Esto &lt;b&gt;no&lt;/b&gt; es bloqueo: exclusividad significa aqu&amp;iacute; que si el archivo ya existe, sysopen () falla. &lt;code&gt;O_EXCL&lt;/code&gt; posible que O_EXCL no funcione en sistemas de archivos de red y no tiene ning&amp;uacute;n efecto a menos que tambi&amp;eacute;n se establezca el indicador &lt;code&gt;O_CREAT&lt;/code&gt; . La configuraci&amp;oacute;n de &lt;code&gt;O_CREAT|O_EXCL&lt;/code&gt; evita que el archivo se abra si es un enlace simb&amp;oacute;lico. No protege contra enlaces simb&amp;oacute;licos en la ruta del archivo.</target>
        </trans-unit>
        <trans-unit id="8450d241305d74878facdc73fccc0a1c6ea4d3de" translate="yes" xml:space="preserve">
          <source>In module</source>
          <target state="translated">En el módulo</target>
        </trans-unit>
        <trans-unit id="286bdc943117014c33efb93a016a5d1869678221" translate="yes" xml:space="preserve">
          <source>In module filtering context, it can be used as Perl version filter.</source>
          <target state="translated">En el contexto del filtrado de módulos,puede utilizarse como filtro de la versión Perl.</target>
        </trans-unit>
        <trans-unit id="a173a70aa245271ccb4f943a053fd8f7539c03d6" translate="yes" xml:space="preserve">
          <source>In more practical terms, the typemap is a collection of code fragments which are used by the &lt;b&gt;xsubpp&lt;/b&gt; compiler to map C function parameters and values to Perl values. The typemap file may consist of three sections labelled &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; , and &lt;code&gt;OUTPUT&lt;/code&gt; . An unlabelled initial section is assumed to be a &lt;code&gt;TYPEMAP&lt;/code&gt; section. The INPUT section tells the compiler how to translate Perl values into variables of certain C types. The OUTPUT section tells the compiler how to translate the values from certain C types into values Perl can understand. The TYPEMAP section tells the compiler which of the INPUT and OUTPUT code fragments should be used to map a given C type to a Perl value. The section labels &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; , or &lt;code&gt;OUTPUT&lt;/code&gt; must begin in the first column on a line by themselves, and must be in uppercase.</source>
          <target state="translated">En t&amp;eacute;rminos m&amp;aacute;s pr&amp;aacute;cticos, el typemap es una colecci&amp;oacute;n de fragmentos de c&amp;oacute;digo que son usados ​​por el compilador &lt;b&gt;xsubpp&lt;/b&gt; para mapear los par&amp;aacute;metros y valores de la funci&amp;oacute;n C a los valores Perl. El archivo de mapa de tipos puede constar de tres secciones etiquetadas como &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; y &lt;code&gt;OUTPUT&lt;/code&gt; . Se supone que una secci&amp;oacute;n inicial sin etiquetar es una secci&amp;oacute;n &lt;code&gt;TYPEMAP&lt;/code&gt; . La secci&amp;oacute;n INPUT le dice al compilador c&amp;oacute;mo traducir los valores de Perl en variables de ciertos tipos de C. La secci&amp;oacute;n OUTPUT le dice al compilador c&amp;oacute;mo traducir los valores de ciertos tipos de C en valores que Perl pueda entender. La secci&amp;oacute;n TYPEMAP le dice al compilador cu&amp;aacute;l de los fragmentos de c&amp;oacute;digo INPUT y OUTPUT debe usarse para mapear un tipo C dado a un valor Perl. Las etiquetas de secci&amp;oacute;n &lt;code&gt;TYPEMAP&lt;/code&gt; , &lt;code&gt;INPUT&lt;/code&gt; o &lt;code&gt;OUTPUT&lt;/code&gt; deben comenzar en la primera columna de una l&amp;iacute;nea por s&amp;iacute; mismos y deben estar en may&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="428ffc575a57b1bff79640b48a60fb8f688d9deb" translate="yes" xml:space="preserve">
          <source>In most cases people have reported better results with GNU make rather than the system's /bin/make program, whether for plain modules or for xs based extensions.</source>
          <target state="translated">En la mayoría de los casos la gente ha reportado mejores resultados con GNU make en lugar del programa /bin/make del sistema,ya sea para módulos simples o para extensiones basadas en xs.</target>
        </trans-unit>
        <trans-unit id="f5afec4e8618986f557789f84e21b385879c2564" translate="yes" xml:space="preserve">
          <source>In most cases you want to make sure that the $io_handle is in &quot;binmode&quot; before you pass it as argument to the addfile() method.</source>
          <target state="translated">En la mayoría de los casos quieres asegurarte de que $io_handle está en &quot;binmode&quot; antes de pasarlo como argumento al método addfile().</target>
        </trans-unit>
        <trans-unit id="c59025c8c8f5462c9fb0d9eec8118a96c3e872c2" translate="yes" xml:space="preserve">
          <source>In most cases you want to make sure that the $io_handle is in &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; before you pass it as argument to the addfile() method.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, desea asegurarse de que $ io_handle est&amp;eacute; en modo &lt;code&gt;&lt;a href=&quot;../functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; antes de pasarlo como argumento al m&amp;eacute;todo addfile ().</target>
        </trans-unit>
        <trans-unit id="525f40bb529483f51193d29f821ebe7da0a52cf3" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; is implemented via the undocumented system service &lt;code&gt;$SIGPRC&lt;/code&gt; , which has the same calling sequence as &lt;code&gt;$FORCEX&lt;/code&gt; , but throws an exception in the target process rather than forcing it to call &lt;code&gt;$EXIT&lt;/code&gt; . Generally speaking, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; follows the behavior of the CRTL's &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; function, but unlike that function can be called from within a signal handler. Also, unlike the &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; in some versions of the CRTL, Perl's &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; checks the validity of the signal passed in and returns an error rather than attempting to send an unrecognized signal.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; se implementa a trav&amp;eacute;s del servicio del sistema no documentado &lt;code&gt;$SIGPRC&lt;/code&gt; , que tiene la misma secuencia de llamada que &lt;code&gt;$FORCEX&lt;/code&gt; , pero genera una excepci&amp;oacute;n en el proceso de destino en lugar de forzarlo a llamar a &lt;code&gt;$EXIT&lt;/code&gt; . En t&amp;eacute;rminos generales, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; sigue el comportamiento de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; CRTL, pero a diferencia de esa funci&amp;oacute;n, se puede llamar desde un controlador de se&amp;ntilde;ales. Adem&amp;aacute;s, a diferencia del &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; en algunas versiones de CRTL, el &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;&lt;/code&gt; de Perl verifica la validez de la se&amp;ntilde;al pasada y devuelve un error en lugar de intentar enviar una se&amp;ntilde;al no reconocida.</target>
        </trans-unit>
        <trans-unit id="eede988897716aa1422cf3adeb53444b2cab13f0" translate="yes" xml:space="preserve">
          <source>In most cases, it is probably easier to simply use string concatenation, which also forces scalar context.</source>
          <target state="translated">En la mayoría de los casos,probablemente sea más fácil utilizar simplemente la concatenación de cuerdas,lo que también fuerza el contexto escalar.</target>
        </trans-unit>
        <trans-unit id="ace8b1ddef61865f0aa48c02a6d220e56f6740dd" translate="yes" xml:space="preserve">
          <source>In most cases, patches to modules in</source>
          <target state="translated">En la mayoría de los casos,los parches de los módulos de</target>
        </trans-unit>
        <trans-unit id="3d608639121073b361e23e425be9ba9c84646ab9" translate="yes" xml:space="preserve">
          <source>In most cases, you can just run it interactively from a command line without any special arguments and follow the prompts.</source>
          <target state="translated">En la mayoría de los casos,puedes ejecutarlo de forma interactiva desde una línea de comandos sin ningún argumento especial y seguir las instrucciones.</target>
        </trans-unit>
        <trans-unit id="2f1846566ce8422fbda676e86cc15846d05061a2" translate="yes" xml:space="preserve">
          <source>In most cases, you should probably round the results explicitly using one of &lt;a href=&quot;#round()&quot;&gt;round()&lt;/a&gt;, &lt;a href=&quot;#bround()&quot;&gt;bround()&lt;/a&gt; or &lt;a href=&quot;#bfround()&quot;&gt;bfround()&lt;/a&gt; or by passing the desired accuracy to the math operation as additional parameter:</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, probablemente deber&amp;iacute;a redondear los resultados expl&amp;iacute;citamente usando uno de &lt;a href=&quot;#round()&quot;&gt;round ()&lt;/a&gt; , &lt;a href=&quot;#bround()&quot;&gt;bround ()&lt;/a&gt; o &lt;a href=&quot;#bfround()&quot;&gt;bfround ()&lt;/a&gt; o pasando la precisi&amp;oacute;n deseada a la operaci&amp;oacute;n matem&amp;aacute;tica como par&amp;aacute;metro adicional:</target>
        </trans-unit>
        <trans-unit id="fbf91aec7f60195ab2e4c16d72de4bd0b0dad318" translate="yes" xml:space="preserve">
          <source>In most cases, you should probably round the results explicitly using one of &lt;a href=&quot;bigint#round()&quot;&gt;round() in Math::BigInt&lt;/a&gt;, &lt;a href=&quot;bigint#bround()&quot;&gt;bround() in Math::BigInt&lt;/a&gt; or &lt;a href=&quot;bigint#bfround()&quot;&gt;bfround() in Math::BigInt&lt;/a&gt; or by passing the desired accuracy to the math operation as additional parameter:</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, probablemente deber&amp;iacute;a redondear los resultados expl&amp;iacute;citamente usando uno de &lt;a href=&quot;bigint#round()&quot;&gt;round () en Math :: BigInt&lt;/a&gt; , &lt;a href=&quot;bigint#bround()&quot;&gt;bround () en Math :: BigInt&lt;/a&gt; o &lt;a href=&quot;bigint#bfround()&quot;&gt;bfround () en Math :: BigInt&lt;/a&gt; o pasando la precisi&amp;oacute;n deseada a la operaci&amp;oacute;n matem&amp;aacute;tica como par&amp;aacute;metro adicional:</target>
        </trans-unit>
        <trans-unit id="a42b298f707283d45326f409618401d12bc90d6e" translate="yes" xml:space="preserve">
          <source>In most cases, you write an external module to do it--see the answer to &quot;Where can I learn about linking C with Perl? [h2xs, xsubpp]&quot;. However, if the function is a system call, and your system supports &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall()&lt;/a&gt;&lt;/code&gt;, you can use the &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; function (documented in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;).</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, escribe un m&amp;oacute;dulo externo para hacerlo - vea la respuesta a &quot;&amp;iquest;D&amp;oacute;nde puedo aprender sobre c&amp;oacute;mo vincular C con Perl? [H2xs, xsubpp]&quot;. Sin embargo, si la funci&amp;oacute;n es una llamada al sistema y su sistema admite &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall()&lt;/a&gt;&lt;/code&gt; , puede usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; (documentada en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d19f51a558abe46dfdc218b96bc734b3c276b079" translate="yes" xml:space="preserve">
          <source>In most operating systems, lines in files are terminated by newlines. Just what is used as a newline may vary from OS to OS. Unix traditionally uses &lt;code&gt;\012&lt;/code&gt; , one type of DOSish I/O uses &lt;code&gt;\015\012&lt;/code&gt; , Mac OS uses &lt;code&gt;\015&lt;/code&gt; , and z/OS uses &lt;code&gt;\025&lt;/code&gt; .</source>
          <target state="translated">En la mayor&amp;iacute;a de los sistemas operativos, las l&amp;iacute;neas de los archivos terminan con nuevas l&amp;iacute;neas. Lo que se utiliza como nueva l&amp;iacute;nea puede variar de un sistema operativo a otro. Unix usa tradicionalmente &lt;code&gt;\012&lt;/code&gt; , un tipo de E / S de DOS utiliza &lt;code&gt;\015\012&lt;/code&gt; , Mac OS usa &lt;code&gt;\015&lt;/code&gt; yz / OS usa &lt;code&gt;\025&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c4293bfbaf72968d51c71aab642ca2822c9579" translate="yes" xml:space="preserve">
          <source>In multithreaded scripts Perl coordinates the threads so that any thread may modify its copy of the &lt;code&gt;$0&lt;/code&gt; and the change becomes visible to ps(1) (assuming the operating system plays along). Note that the view of &lt;code&gt;$0&lt;/code&gt; the other threads have will not change since they have their own copies of it.</source>
          <target state="translated">En los scripts multiproceso, Perl coordina los hilos de modo que cualquier hilo pueda modificar su copia del &lt;code&gt;$0&lt;/code&gt; y el cambio se vuelve visible para ps (1) (asumiendo que el sistema operativo sigue el juego). Tenga en cuenta que la vista de &lt;code&gt;$0&lt;/code&gt; los otros hilos no cambiar&amp;aacute;, ya que tienen sus propias copias.</target>
        </trans-unit>
        <trans-unit id="2ff5aa25fe59ffebaa3d9b983e6ed41dcfbb4c10" translate="yes" xml:space="preserve">
          <source>In networking, a &lt;b&gt;process&lt;/b&gt; that either advertises a &lt;b&gt;service&lt;/b&gt; or just hangs around at a known location and waits for &lt;b&gt;clients&lt;/b&gt; who need service to get in touch with it.</source>
          <target state="translated">En redes, un &lt;b&gt;proceso&lt;/b&gt; que anuncia un &lt;b&gt;servicio&lt;/b&gt; o simplemente se queda en una ubicaci&amp;oacute;n conocida y espera a que los &lt;b&gt;clientes&lt;/b&gt; que necesitan el servicio se pongan en contacto con &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="fe020f31c58d30517974e8b54ebe9cc4a8fb1397" translate="yes" xml:space="preserve">
          <source>In networking, a &lt;b&gt;process&lt;/b&gt; that initiates contact with a &lt;b&gt;server&lt;/b&gt; process in order to exchange data and perhaps receive a service.</source>
          <target state="translated">En redes, un &lt;b&gt;proceso&lt;/b&gt; que inicia el contacto con un proceso de &lt;b&gt;servidor&lt;/b&gt; para intercambiar datos y quiz&amp;aacute;s recibir un servicio.</target>
        </trans-unit>
        <trans-unit id="b7faa009c2918d4804b660feca8b23ad35925a6e" translate="yes" xml:space="preserve">
          <source>In networking, an agreed-upon way of sending messages back and forth so that neither correspondent will get too confused.</source>
          <target state="translated">En la red,una forma acordada de enviar mensajes de ida y vuelta para que ninguno de los corresponsales se confunda demasiado.</target>
        </trans-unit>
        <trans-unit id="71b3fd1615492dc9bf230d9f033afbf83da86082" translate="yes" xml:space="preserve">
          <source>In normal &amp;ldquo;computerese&amp;rdquo;, the piece of data of the size most efficiently handled by your computer, typically 32 bits or so, give or take a few powers of 2. In Perl culture, it more often refers to an alphanumeric &lt;b&gt;identifier&lt;/b&gt; (including underscores), or to a string of nonwhitespace &lt;b&gt;characters&lt;/b&gt; bounded by whitespace or string boundaries.</source>
          <target state="translated">En &quot;computerese&quot; normal, el dato del tama&amp;ntilde;o manejado de manera m&amp;aacute;s eficiente por su computadora, t&amp;iacute;picamente 32 bits m&amp;aacute;s o menos, m&amp;aacute;s o menos algunas potencias de 2. En la cultura Perl, m&amp;aacute;s a menudo se refiere a un &lt;b&gt;identificador&lt;/b&gt; alfanum&amp;eacute;rico (incluidos guiones bajos ), oa una cadena de &lt;b&gt;caracteres que&lt;/b&gt; no son espacios en blanco delimitados por espacios en blanco o l&amp;iacute;mites de cadena.</target>
        </trans-unit>
        <trans-unit id="2b1437a6901ce1f87cee7f4d6385fbba76b51c73" translate="yes" xml:space="preserve">
          <source>In object-oriented code, we often find that one object references another object. This is called &lt;b&gt;composition&lt;/b&gt;, or a &lt;b&gt;has-a&lt;/b&gt; relationship.</source>
          <target state="translated">En el c&amp;oacute;digo orientado a objetos, a menudo encontramos que un objeto hace referencia a otro objeto. A esto se le llama &lt;b&gt;composici&amp;oacute;n&lt;/b&gt; o relaci&amp;oacute;n &lt;b&gt;tiene-una&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="0840885f4ae0e15a9e1a64e6e2f2e63bb6055bf6" translate="yes" xml:space="preserve">
          <source>In olden days, the act of looking up a &lt;b&gt;key&lt;/b&gt; in an actual index (such as a phone book). But now it's merely the act of using any kind of key or position to find the corresponding &lt;b&gt;value&lt;/b&gt;, even if no index is involved. Things have degenerated to the point that Perl&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; function merely locates the position (index) of one string in another.</source>
          <target state="translated">En la antig&amp;uuml;edad, el acto de buscar una &lt;b&gt;clave&lt;/b&gt; en un &amp;iacute;ndice real (como una gu&amp;iacute;a telef&amp;oacute;nica). Pero ahora es simplemente el acto de usar cualquier tipo de clave o posici&amp;oacute;n para encontrar el &lt;b&gt;valor&lt;/b&gt; correspondiente , incluso si no hay ning&amp;uacute;n &amp;iacute;ndice involucrado. Las cosas han degenerado hasta el punto de que la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; de Perl simplemente localiza la posici&amp;oacute;n (&amp;iacute;ndice) de una cadena en otra.</target>
        </trans-unit>
        <trans-unit id="8954164487b10a1a06bdaedbfbaa22faf258c328" translate="yes" xml:space="preserve">
          <source>In older Unicode versions, a small number of characters (all of which are CJK compatibility ideographs as far as they have been found) may have an erroneous decomposition mapping (see</source>
          <target state="translated">En versiones anteriores de Unicode,un pequeño número de caracteres (todos los cuales son ideogramas de compatibilidad CJK en la medida en que se han encontrado)pueden tener una cartografía de descomposición errónea (ver</target>
        </trans-unit>
        <trans-unit id="25564a5fe1398dbc91939b7e3cb0a5bccfb1e2c1" translate="yes" xml:space="preserve">
          <source>In one sense, what you are asking doesn't make much sense: encodings are for characters, and binary data are not &quot;characters&quot;, so converting &quot;data&quot; into some encoding isn't meaningful unless you know in what character set and encoding the binary data is in, in which case it's not just binary data, now is it?</source>
          <target state="translated">En cierto sentido,lo que está pidiendo no tiene mucho sentido:las codificaciones son para los caracteres,y los datos binarios no son &quot;caracteres&quot;,por lo que convertir &quot;datos&quot; en alguna codificación no tiene sentido a menos que sepa en qué conjunto de caracteres y codificación están los datos binarios,en cuyo caso no son sólo datos binarios,¿verdad?</target>
        </trans-unit>
        <trans-unit id="0665aadb9203e48ab11fdbdc61f426bdf069c8ef" translate="yes" xml:space="preserve">
          <source>In one's own MANIFEST.SKIP file, certain directives can be used to include the contents of other MANIFEST.SKIP files. At present two such directives are recognized.</source>
          <target state="translated">En el propio archivo MANIFEST.SKIP se pueden usar ciertas directivas para incluir el contenido de otros archivos MANIFEST.SKIP.En la actualidad se reconocen dos directivas de este tipo.</target>
        </trans-unit>
        <trans-unit id="775d518fe37c14b3f79041d34b5efaca033dd3ab" translate="yes" xml:space="preserve">
          <source>In one-liner form:</source>
          <target state="translated">En forma de una sola línea:</target>
        </trans-unit>
        <trans-unit id="3a599813be17001915e0601602237bd798d15d3b" translate="yes" xml:space="preserve">
          <source>In one-shot mode this flag will be set to true if the Perl &lt;code&gt;-T&lt;/code&gt; operator thinks the file contains text.</source>
          <target state="translated">En el modo one-shot, este indicador se establecer&amp;aacute; en verdadero si el operador Perl &lt;code&gt;-T&lt;/code&gt; cree que el archivo contiene texto.</target>
        </trans-unit>
        <trans-unit id="0a387689b89f7b0ad51aa990a4b2c214ffa94375" translate="yes" xml:space="preserve">
          <source>In order for object method lookup and/or prototype checking to operate correctly even when methods have not yet been defined it is necessary to &quot;forward declare&quot; each subroutine (as in &lt;code&gt;sub NAME;&lt;/code&gt; ). See &lt;a href=&quot;perlsub#SYNOPSIS&quot;&gt;SYNOPSIS in perlsub&lt;/a&gt;. Such forward declaration creates &quot;subroutine stubs&quot;, which are place holders with no code.</source>
          <target state="translated">Para que la b&amp;uacute;squeda de m&amp;eacute;todos de objetos y / o la verificaci&amp;oacute;n de prototipos funcionen correctamente incluso cuando los m&amp;eacute;todos a&amp;uacute;n no se han definido, es necesario &quot;declarar hacia adelante&quot; cada subrutina (como en el &lt;code&gt;sub NAME;&lt;/code&gt; ). Ver &lt;a href=&quot;perlsub#SYNOPSIS&quot;&gt;SINOPSIS en perlsub&lt;/a&gt; . Dicha declaraci&amp;oacute;n hacia adelante crea &quot;stubs de subrutina&quot;, que son marcadores de posici&amp;oacute;n sin c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="f0241ec9af4c551ca21dc35ad3b6791e44a33543" translate="yes" xml:space="preserve">
          <source>In order to allow for multiple big integer libraries, Math::BigInt was rewritten to use a plug-in library for core math routines. Any module which conforms to the API can be used by Math::BigInt by using this in your program:</source>
          <target state="translated">Para permitir múltiples bibliotecas de números enteros grandes,Math::BigInt fue reescrito para usar una biblioteca de plugins para rutinas matemáticas básicas.Cualquier módulo que se ajuste a la API puede ser usado por Math::BigInt usando esto en su programa:</target>
        </trans-unit>
        <trans-unit id="db68f3a19f1d4b1da9de666e4465352494a86e3b" translate="yes" xml:space="preserve">
          <source>In order to allow for multiple big integer libraries, Math::BigInt was rewritten to use library modules for core math routines. Any module which follows the same API as this can be used instead by using the following:</source>
          <target state="translated">Para permitir múltiples bibliotecas de números enteros grandes,Math::BigInt fue reescrito para usar módulos de biblioteca para rutinas matemáticas básicas.Cualquier módulo que siga la misma API que este puede ser usado en su lugar usando lo siguiente:</target>
        </trans-unit>
        <trans-unit id="79f9d107daff2d5afbf356c8809d8a77ed4fb993" translate="yes" xml:space="preserve">
          <source>In order to build your own version of Perl you will need 'make', which is part of Apple's developer tools - also known as Xcode. From Mac OS X 10.7 &quot;Lion&quot; onwards, it can be downloaded separately as the 'Command Line Tools' bundle directly from &lt;a href=&quot;https://developer.apple.com/downloads/&quot;&gt;https://developer.apple.com/downloads/&lt;/a&gt; (you will need a free account to log in), or as a part of the Xcode suite, freely available at the App Store. Xcode is a pretty big app, so unless you already have it or really want it, you are advised to get the 'Command Line Tools' bundle separately from the link above. If you want to do it from within Xcode, go to Xcode -&amp;gt; Preferences -&amp;gt; Downloads and select the 'Command Line Tools' option.</source>
          <target state="translated">Para crear su propia versi&amp;oacute;n de Perl, necesitar&amp;aacute; 'make', que forma parte de las herramientas de desarrollo de Apple, tambi&amp;eacute;n conocidas como Xcode. Desde Mac OS X 10.7 &quot;Lion&quot; en adelante, se puede descargar por separado como el paquete 'Herramientas de l&amp;iacute;nea de comandos' directamente desde &lt;a href=&quot;https://developer.apple.com/downloads/&quot;&gt;https://developer.apple.com/downloads/&lt;/a&gt; (necesitar&amp;aacute; una cuenta gratuita para iniciar sesi&amp;oacute;n), o como parte de la suite Xcode, disponible gratuitamente en la App Store. Xcode es una aplicaci&amp;oacute;n bastante grande, por lo que, a menos que ya la tenga o realmente la desee, le recomendamos que obtenga el paquete 'Herramientas de l&amp;iacute;nea de comandos' por separado del enlace anterior. Si desea hacerlo desde Xcode, vaya a Xcode -&amp;gt; Preferencias -&amp;gt; Descargas y seleccione la opci&amp;oacute;n 'Herramientas de l&amp;iacute;nea de comandos'.</target>
        </trans-unit>
        <trans-unit id="a93cd8781d8e041e8355a0aefc4276597d7a98e8" translate="yes" xml:space="preserve">
          <source>In order to convert a string of characters from one character set to another a simple list of numbers, such as in the right columns in the above table, along with Perl's &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; operator is all that is needed. The data in the table are in ASCII/Latin1 order, hence the EBCDIC columns provide easy-to-use ASCII/Latin1 to EBCDIC operations that are also easily reversed.</source>
          <target state="translated">Para convertir una cadena de caracteres de un juego de caracteres a otro, todo lo que se necesita es una lista simple de n&amp;uacute;meros, como en las columnas de la derecha en la tabla anterior, junto con el operador &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; Perl . Los datos en la tabla est&amp;aacute;n en orden ASCII / Latin1, por lo tanto, las columnas EBCDIC proporcionan operaciones ASCII / Latin1 a EBCDIC f&amp;aacute;ciles de usar que tambi&amp;eacute;n se pueden revertir f&amp;aacute;cilmente.</target>
        </trans-unit>
        <trans-unit id="2f5fa67b20e8cfe8e347f59bf69babb07bc272aa" translate="yes" xml:space="preserve">
          <source>In order to install a new regexp handler, &lt;code&gt;$^H{regcomp}&lt;/code&gt; is set to an integer which (when casted appropriately) resolves to one of these structures. When compiling, the &lt;code&gt;comp&lt;/code&gt; method is executed, and the resulting &lt;code&gt;regexp&lt;/code&gt; structure's engine field is expected to point back at the same structure.</source>
          <target state="translated">Para instalar un nuevo controlador de &lt;code&gt;$^H{regcomp}&lt;/code&gt; , $ ^ H {regcomp} se establece en un n&amp;uacute;mero entero que (cuando se convierte de manera apropiada) se resuelve en una de estas estructuras. Al compilar, el &lt;code&gt;comp&lt;/code&gt; se ejecute el m&amp;eacute;todo, y la consiguiente &lt;code&gt;regexp&lt;/code&gt; se espera que el motor del campo de estructura a punto de volver a la misma estructura.</target>
        </trans-unit>
        <trans-unit id="437d80cea54e562ec941100e6a72df58383866f9" translate="yes" xml:space="preserve">
          <source>In order to keep lib.pm small and simple, it only works with Unix filepaths. This doesn't mean it only works on Unix, but non-Unix users must first translate their file paths to Unix conventions.</source>
          <target state="translated">Para mantener el lib.pm pequeño y simple,sólo funciona con filepaths de Unix.Esto no significa que sólo funciona en Unix,pero los no usuarios de Unix deben primero traducir sus rutas de archivos a las convenciones de Unix.</target>
        </trans-unit>
        <trans-unit id="364bb5f6d99dcae74466742fdf303cf213f25184" translate="yes" xml:space="preserve">
          <source>In order to maintain maximum compatibility with earlier versions of Perl, this function will return either the floating point notation or the multiple dotted notation, depending on whether the original version contained 1 or more dots, respectively.</source>
          <target state="translated">A fin de mantener la máxima compatibilidad con las versiones anteriores de Perl,esta función devolverá la notación de punto flotante o la notación de puntos múltiples,dependiendo de si la versión original contenía 1 o más puntos,respectivamente.</target>
        </trans-unit>
        <trans-unit id="381ea4e1bb108f2a93fb8d7c5edae34da5e15c66" translate="yes" xml:space="preserve">
          <source>In order to maintain portability of attributes with older versions of MakeMaker you may want to use &lt;a href=&quot;http://search.cpan.org/perldoc/App::EUMM::Upgrade&quot;&gt;App::EUMM::Upgrade&lt;/a&gt; with your &lt;code&gt;Makefile.PL&lt;/code&gt; .</source>
          <target state="translated">Para mantener la portabilidad de los atributos con versiones anteriores de MakeMaker, es posible que desee utilizar &lt;a href=&quot;http://search.cpan.org/perldoc/App::EUMM::Upgrade&quot;&gt;App :: EUMM :: Upgrade&lt;/a&gt; con su &lt;code&gt;Makefile.PL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9248f937d9955a6043a592d635bc82f1867f0186" translate="yes" xml:space="preserve">
          <source>In order to make RECNO more compatible with Perl, the array offset for all RECNO arrays begins at 0 rather than 1 as in Berkeley DB.</source>
          <target state="translated">Para que RECNO sea más compatible con Perl,el desplazamiento de la matriz para todas las matrices de RECNO comienza en 0 en lugar de 1 como en la base de datos de Berkeley.</target>
        </trans-unit>
        <trans-unit id="c8f50d2afd74c2c616567dbb29c3d95a6bbbba68" translate="yes" xml:space="preserve">
          <source>In order to make it impossible to know what seed to generate an attack key set for, this seed is randomly initialized at process start. This may be overridden by using the PERL_HASH_SEED environment variable, see &lt;a href=&quot;perlrun#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED in perlrun&lt;/a&gt;. This environment variable controls how items are actually stored, not how they are presented via &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Para que sea imposible saber para qu&amp;eacute; semilla generar un conjunto de claves de ataque, esta semilla se inicializa aleatoriamente al inicio del proceso. Esto se puede anular utilizando la variable de entorno PERL_HASH_SEED, consulte &lt;a href=&quot;perlrun#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED en perlrun&lt;/a&gt; . Esta variable de entorno controla c&amp;oacute;mo se almacenan realmente los elementos, no c&amp;oacute;mo se presentan mediante &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1eda6692f2f4e28d3303c1b91852403d3cf17be" translate="yes" xml:space="preserve">
          <source>In order to make sense of Maketext and how all its components fit together, you should probably go read &lt;a href=&quot;maketext/tpj13&quot;&gt;Locale::Maketext::TPJ13&lt;/a&gt;, and</source>
          <target state="translated">Para entender Maketext y c&amp;oacute;mo encajan todos sus componentes, probablemente deber&amp;iacute;a leer &lt;a href=&quot;maketext/tpj13&quot;&gt;Locale :: Maketext :: TPJ13&lt;/a&gt; , y</target>
        </trans-unit>
        <trans-unit id="5ff6fc777d96f10921d74c27d5ed5e70b4334507" translate="yes" xml:space="preserve">
          <source>In order to make use of the rot13 filter we need some way of encoding the source file in rot13 format. The script below, &lt;code&gt;mkrot13&lt;/code&gt; , does just that.</source>
          <target state="translated">Para hacer uso del filtro rot13 necesitamos alguna forma de codificar el archivo fuente en formato rot13. El siguiente script, &lt;code&gt;mkrot13&lt;/code&gt; , hace precisamente eso.</target>
        </trans-unit>
        <trans-unit id="21d2fc600dcdd5c6cb297e557194c37b7f0f485a" translate="yes" xml:space="preserve">
          <source>In order to preserve backward compatibility, Perl does not turn on full internal Unicode support unless the pragma &lt;a href=&quot;feature#The-'unicode_strings'-feature&quot;&gt;use feature 'unicode_strings' &lt;/a&gt; is specified. (This is automatically selected if you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; or higher.) Failure to do this can trigger unexpected surprises. See &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt; below.</source>
          <target state="translated">Para preservar la compatibilidad con versiones anteriores, Perl no &lt;a href=&quot;feature#The-'unicode_strings'-feature&quot;&gt;activa el&lt;/a&gt; soporte interno completo de Unicode a menos que se especifique la funci&amp;oacute;n de uso de pragma 'unicode_strings' . (Esto se selecciona autom&amp;aacute;ticamente si &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; o superior). Si no lo hace, puede desencadenar sorpresas inesperadas. Consulte &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;El error Unicode a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fd47550c4a48b602de1804d810fabdd19f1a7062" translate="yes" xml:space="preserve">
          <source>In order to process interior sequences, subclasses implementations of this method will probably want to invoke either &lt;b&gt;interpolate()&lt;/b&gt; or &lt;b&gt;parse_text()&lt;/b&gt;, passing it the text block &lt;code&gt;$text&lt;/code&gt; , and the corresponding line number in &lt;code&gt;$line_num&lt;/code&gt; , and then perform any desired processing upon the returned result.</source>
          <target state="translated">Para procesar secuencias interiores, las implementaciones de subclases de este m&amp;eacute;todo probablemente querr&amp;aacute;n invocar &lt;b&gt;interpolate ()&lt;/b&gt; o &lt;b&gt;parse_text ()&lt;/b&gt; , pas&amp;aacute;ndole el bloque &lt;code&gt;$text&lt;/code&gt; y el n&amp;uacute;mero de l&amp;iacute;nea correspondiente en &lt;code&gt;$line_num&lt;/code&gt; , y luego realizar cualquier procesamiento deseado en el resultado devuelto.</target>
        </trans-unit>
        <trans-unit id="96a9bbcaad8032f3708be9f9aad29a52e4a152b3" translate="yes" xml:space="preserve">
          <source>In order to test that our extension works, we now need to look at the file Mytest.t. This file is set up to imitate the same kind of testing structure that Perl itself has. Within the test script, you perform a number of tests to confirm the behavior of the extension, printing &quot;ok&quot; when the test is correct, &quot;not ok&quot; when it is not.</source>
          <target state="translated">Para probar que nuestra extensión funciona,ahora tenemos que mirar el archivo Mytest.t.Este archivo está configurado para imitar el mismo tipo de estructura de pruebas que tiene el propio Perl.Dentro del script de prueba,se realizan una serie de pruebas para confirmar el comportamiento de la extensión,imprimiendo &quot;ok&quot; cuando la prueba es correcta,&quot;no ok&quot; cuando no lo es.</target>
        </trans-unit>
        <trans-unit id="e8108d3bcd39eeb2141d68d5707c2daf6f01568e" translate="yes" xml:space="preserve">
          <source>In order to understand Perl objects, you first need to understand references in Perl. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for details.</source>
          <target state="translated">Para comprender los objetos de Perl, primero debe comprender las referencias en Perl. Consulte &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="769d36508232140bd94018f22812d43183fa9db1" translate="yes" xml:space="preserve">
          <source>In order to use &lt;b&gt;AutoLoader&lt;/b&gt;'s AUTOLOAD subroutine you</source>
          <target state="translated">Para utilizar la subrutina AUTOLOAD del &lt;b&gt;Autocargador&lt;/b&gt; ,</target>
        </trans-unit>
        <trans-unit id="af99082b46921b802ae95263001ef07cb7aa2040" translate="yes" xml:space="preserve">
          <source>In ordinary paragraphs and in some command paragraphs, various formatting codes (a.k.a. &quot;interior sequences&quot;) can be used:</source>
          <target state="translated">En los párrafos ordinarios y en algunos párrafos de comando,pueden utilizarse varios códigos de formato (también conocidos como &quot;secuencias interiores&quot;):</target>
        </trans-unit>
        <trans-unit id="de5a0be2abf85a22324ace726b3f113f3ddb049b" translate="yes" xml:space="preserve">
          <source>In other boolean contexts, &lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; without an explicit &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; test or comparison elicits a warning if the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; command-line switch (the &lt;code&gt;$^W&lt;/code&gt; variable) is in effect.</source>
          <target state="translated">En otros contextos booleanos, &lt;code&gt;&amp;lt;&lt;i&gt;FILEHANDLE&lt;/i&gt;&amp;gt;&lt;/code&gt; sin una prueba o comparaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;citamente &lt;i&gt;genera&lt;/i&gt; una advertencia si el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; o el &lt;b&gt;modificador -w&lt;/b&gt; de la l&amp;iacute;nea de comandos (la variable &lt;code&gt;$^W&lt;/code&gt; ) est&amp;aacute; en efecto.</target>
        </trans-unit>
        <trans-unit id="633c40ae3272eb641ed90a2b64f933bcfc1ab4fa" translate="yes" xml:space="preserve">
          <source>In other cases, the patch will need more work or discussion. That will happen on the p5p list.</source>
          <target state="translated">En otros casos,el parche necesitará más trabajo o discusión.Eso ocurrirá en la lista p5p.</target>
        </trans-unit>
        <trans-unit id="7b3796099c87e59fc24644465a4e8f63a8bac8d4" translate="yes" xml:space="preserve">
          <source>In other files which wish to use &lt;code&gt;YourModule&lt;/code&gt; :</source>
          <target state="translated">En otros archivos que deseen utilizar &lt;code&gt;YourModule&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3b8bb595443598bbfebd43734b72b246e5109db8" translate="yes" xml:space="preserve">
          <source>In other files which wish to use your module there are three basic ways for them to load your module and import its symbols:</source>
          <target state="translated">En otros archivos que deseen utilizar su módulo hay tres formas básicas para que carguen su módulo e importen sus símbolos:</target>
        </trans-unit>
        <trans-unit id="dac5b44cbcccec7c46874f1c0dae34c3e4179f83" translate="yes" xml:space="preserve">
          <source>In other words, a call to &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; resumes the depth-first, left-to-right search of &lt;code&gt;$self&lt;/code&gt; 's class hierarchy that resulted in the original call to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">En otras palabras, una llamada a &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; reanuda la b&amp;uacute;squeda en profundidad de izquierda a derecha de &lt;code&gt;$self&lt;/code&gt; jerarqu&amp;iacute;a de clases de $ self que result&amp;oacute; en la llamada original a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4828bb0cda42f406a7ca05570f3e0910c8f19571" translate="yes" xml:space="preserve">
          <source>In other words, each type of bracket specified as a delimiter must be balanced and correctly nested within the substring, and any other kind of (&quot;non-delimiter&quot;) bracket in the substring is ignored.</source>
          <target state="translated">En otras palabras,cada tipo de corchete especificado como delimitador debe estar equilibrado y correctamente anidado dentro de la subcadena,y se ignora cualquier otro tipo de corchete (&quot;no delimitador&quot;)en la subcadena.</target>
        </trans-unit>
        <trans-unit id="74fd5671e652ca312e8092bc1ce538f5b223a43a" translate="yes" xml:space="preserve">
          <source>In other words, if you try this:</source>
          <target state="translated">En otras palabras,si intentas esto:</target>
        </trans-unit>
        <trans-unit id="877ca893c0d0ee5563d6603bca839b1fc7617192" translate="yes" xml:space="preserve">
          <source>In other words, implicate_supers_strictly takes a list of strings (which are presumed to be language-tags; strings that aren't, are ignored) and after the whole given list, it inserts the super-ordinate forms of all given tags, minus any tags that already appear in the input list.</source>
          <target state="translated">En otras palabras,implicate_supers_strictly toma una lista de cadenas (que se presume son etiquetas de lenguaje;las cadenas que no lo son,son ignoradas)y después de toda la lista dada,inserta las formas superordinadas de todas las etiquetas dadas,menos las etiquetas que ya aparecen en la lista de entrada.</target>
        </trans-unit>
        <trans-unit id="25d319aebdebcd5625f4059cfe98447477589bac" translate="yes" xml:space="preserve">
          <source>In other words, in the &quot;C&quot; (or English) locale the above will probably print something like:</source>
          <target state="translated">En otras palabras,en el lugar de la &quot;C&quot; (o inglés)lo anterior probablemente imprimirá algo como:</target>
        </trans-unit>
        <trans-unit id="550ff39ed161b9edd0e84b02fed3dec9d30c2e67" translate="yes" xml:space="preserve">
          <source>In other words, it does not check the full recursion stack.</source>
          <target state="translated">En otras palabras,no comprueba la pila de recursividad completa.</target>
        </trans-unit>
        <trans-unit id="e0fc4bff9ab6a124fdea1a036cef443002eab13f" translate="yes" xml:space="preserve">
          <source>In other words, it takes this:</source>
          <target state="translated">En otras palabras,se necesita esto:</target>
        </trans-unit>
        <trans-unit id="9c65668195992fe68f06679feb8eacf4cd2f8800" translate="yes" xml:space="preserve">
          <source>In other words, it's the character whose code point has had 64 xor'd with its uppercase. &lt;code&gt;\c?&lt;/code&gt; is DELETE on ASCII platforms because &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;?&quot;) ^ 64&lt;/code&gt; is 127, and &lt;code&gt;\c@&lt;/code&gt; is NULL because the ord of &lt;code&gt;&quot;@&quot;&lt;/code&gt; is 64, so xor'ing 64 itself produces 0.</source>
          <target state="translated">En otras palabras, es el car&amp;aacute;cter cuyo punto de c&amp;oacute;digo ha tenido 64 xor con su may&amp;uacute;scula. &lt;code&gt;\c?&lt;/code&gt; es DELETE en plataformas ASCII porque &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;(&quot;?&quot;) ^ 64&lt;/code&gt; es 127, y &lt;code&gt;\c@&lt;/code&gt; es NULL porque el ord de &lt;code&gt;&quot;@&quot;&lt;/code&gt; es 64, por lo que xor'ing 64 produce 0.</target>
        </trans-unit>
        <trans-unit id="2b7ead3432ce6ef0a214c631da3fb65f28ad59d4" translate="yes" xml:space="preserve">
          <source>In other words, it's the projection of the vector onto the</source>
          <target state="translated">En otras palabras,es la proyección del vector sobre el</target>
        </trans-unit>
        <trans-unit id="173982625284de4ecdaf57b42d11dd41503a3a62" translate="yes" xml:space="preserve">
          <source>In other words, once the &lt;code&gt;(*COMMIT)&lt;/code&gt; has been entered, and if the pattern does not match, the regex engine will not try any further matching on the rest of the string.</source>
          <target state="translated">En otras palabras, una vez que se ha ingresado &lt;code&gt;(*COMMIT)&lt;/code&gt; , y si el patr&amp;oacute;n no coincide, el motor de expresiones regulares no intentar&amp;aacute; m&amp;aacute;s coincidencias en el resto de la cadena.</target>
        </trans-unit>
        <trans-unit id="080def995649dc7c78c927509a6265da0f050d82" translate="yes" xml:space="preserve">
          <source>In other words, text outside bracket groups is turned into string literals. Text in brackets is rather more complex, and currently follows these rules:</source>
          <target state="translated">En otras palabras,el texto fuera de los grupos de corchetes se convierte en literales de cadena.El texto entre corchetes es bastante más complejo,y actualmente sigue estas reglas:</target>
        </trans-unit>
        <trans-unit id="f68e3679fc5753d52f8311d0156c23ac089d43c6" translate="yes" xml:space="preserve">
          <source>In other words, the Pod processing handler for &quot;head1&quot; will apply the same processing to &quot;Did You Remember to C&amp;lt;use strict;&amp;gt;?&quot; that it would to an ordinary paragraph (i.e., formatting codes like &quot;C&amp;lt;...&amp;gt;&quot;) are parsed and presumably formatted appropriately, and whitespace in the form of literal spaces and/or tabs is not significant.</source>
          <target state="translated">En otras palabras, el controlador de procesamiento de Pod para &quot;head1&quot; aplicar&amp;aacute; el mismo procesamiento a &quot;&amp;iquest;Recordaste C &amp;lt;usar estricto;&amp;gt;?&quot; que para un p&amp;aacute;rrafo ordinario (es decir, c&amp;oacute;digos de formato como &quot;C &amp;lt;...&amp;gt;&quot;) se analizan y presumiblemente se formatean de forma adecuada, y los espacios en blanco en forma de espacios literales y / o tabulaciones no son significativos.</target>
        </trans-unit>
        <trans-unit id="d0443748797b84576038c7f78a4ac322e4d4dc07" translate="yes" xml:space="preserve">
          <source>In other words, the author of a module should be considered to have final say on modifications to their module whenever possible (bearing in mind that it's expected that everyone involved will work together and arrive at reasonable compromises when there are disagreements).</source>
          <target state="translated">En otras palabras,se debe considerar que el autor de un módulo tiene la última palabra sobre las modificaciones de su módulo siempre que sea posible (teniendo en cuenta que se espera que todos los involucrados trabajen juntos y lleguen a compromisos razonables cuando haya desacuerdos).</target>
        </trans-unit>
        <trans-unit id="585a94d48c61cb81b39fc84dfe81f19ca97413b7" translate="yes" xml:space="preserve">
          <source>In other words, the implementation of &lt;code&gt;extract_tagged&lt;/code&gt; is exactly equivalent to:</source>
          <target state="translated">En otras palabras, la implementaci&amp;oacute;n de &lt;code&gt;extract_tagged&lt;/code&gt; es exactamente equivalente a:</target>
        </trans-unit>
        <trans-unit id="6437ac2d46829a1156ddedffd3475d352ba0e256" translate="yes" xml:space="preserve">
          <source>In other words, the previous example, would become:</source>
          <target state="translated">En otras palabras,el ejemplo anterior,se convertiría:</target>
        </trans-unit>
        <trans-unit id="bb35ba757de61444a9e16187e2167074637a80ae" translate="yes" xml:space="preserve">
          <source>In other words, the two zero-width assertions next to each other work as though they're ANDed together, just as you'd use any built-in assertions: &lt;code&gt;/^$/&lt;/code&gt; matches only if you're at the beginning of the line AND the end of the line simultaneously. The deeper underlying truth is that juxtaposition in regular expressions always means AND, except when you write an explicit OR using the vertical bar. &lt;code&gt;/ab/&lt;/code&gt; means match &quot;a&quot; AND (then) match &quot;b&quot;, although the attempted matches are made at different positions because &quot;a&quot; is not a zero-width assertion, but a one-width assertion.</source>
          <target state="translated">En otras palabras, las dos aserciones de ancho cero una al lado de la otra funcionan como si estuvieran unidas por AND, tal como usar&amp;iacute;a cualquier aserci&amp;oacute;n incorporada: &lt;code&gt;/^$/&lt;/code&gt; coincide solo si est&amp;aacute; al comienzo de la l&amp;iacute;nea Y el final de la l&amp;iacute;nea simult&amp;aacute;neamente. La verdad subyacente m&amp;aacute;s profunda es que la yuxtaposici&amp;oacute;n en las expresiones regulares siempre significa Y, excepto cuando escribe un O expl&amp;iacute;cito usando la barra vertical. &lt;code&gt;/ab/&lt;/code&gt; significa coincidir con &quot;a&quot; Y (luego) coincidir con &quot;b&quot;, aunque las coincidencias intentadas se realizan en diferentes posiciones porque &quot;a&quot; no es una aserci&amp;oacute;n de ancho cero, sino una aserci&amp;oacute;n de un ancho.</target>
        </trans-unit>
        <trans-unit id="459d5640fff6f70049a1cb4e21dd9d95f811c50c" translate="yes" xml:space="preserve">
          <source>In other words, this is valid:</source>
          <target state="translated">En otras palabras,esto es válido:</target>
        </trans-unit>
        <trans-unit id="b1e37082db8f86fab9970e0f78a995b4a26a2a25" translate="yes" xml:space="preserve">
          <source>In other words, you can write:</source>
          <target state="translated">En otras palabras,puedes escribir:</target>
        </trans-unit>
        <trans-unit id="760e520ac926fbcbcf184f0f289efd734964ab6f" translate="yes" xml:space="preserve">
          <source>In other words: regardless of platform, use binmode() on binary data, like images, for example.</source>
          <target state="translated">En otras palabras:independientemente de la plataforma,use binmode()en los datos binarios,como las imágenes,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="9c34e83f6eab1310b3613a944eb5e27cd7e611dd" translate="yes" xml:space="preserve">
          <source>In other words: replace &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; DynaLoader&lt;/code&gt; by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; XSLoader&lt;/code&gt; , remove &lt;code&gt;DynaLoader&lt;/code&gt; from &lt;code&gt;@ISA&lt;/code&gt; , change &lt;code&gt;bootstrap&lt;/code&gt; by &lt;code&gt;XSLoader::load&lt;/code&gt; . Do not forget to quote the name of your package on the &lt;code&gt;XSLoader::load&lt;/code&gt; line, and add comma (&lt;code&gt;,&lt;/code&gt; ) before the arguments (&lt;code&gt;$VERSION&lt;/code&gt; above).</source>
          <target state="translated">En otras palabras: reemplazar &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; DynaLoader&lt;/code&gt; por &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; XSLoader&lt;/code&gt; , retire &lt;code&gt;DynaLoader&lt;/code&gt; de &lt;code&gt;@ISA&lt;/code&gt; , el cambio &lt;code&gt;bootstrap&lt;/code&gt; por &lt;code&gt;XSLoader::load&lt;/code&gt; . No olvide citar el nombre de su paquete en la l&amp;iacute;nea &lt;code&gt;XSLoader::load&lt;/code&gt; y agregue una coma ( &lt;code&gt;,&lt;/code&gt; ) antes de los argumentos ( &lt;code&gt;$VERSION&lt;/code&gt; arriba).</target>
        </trans-unit>
        <trans-unit id="cc33d1c173d87ad8a862029ec4420d308b38832f" translate="yes" xml:space="preserve">
          <source>In our case, Mytest.pm tells perl that it will need the Exporter and Dynamic Loader extensions. It then sets the &lt;code&gt;@ISA&lt;/code&gt; and &lt;code&gt;@EXPORT&lt;/code&gt; arrays and the &lt;code&gt;$VERSION&lt;/code&gt; scalar; finally it tells perl to bootstrap the module. Perl will call its dynamic loader routine (if there is one) and load the shared library.</source>
          <target state="translated">En nuestro caso, Mytest.pm le dice a perl que necesitar&amp;aacute; las extensiones Exporter y Dynamic Loader. Luego, establece las matrices &lt;code&gt;@ISA&lt;/code&gt; y &lt;code&gt;@EXPORT&lt;/code&gt; y el escalar &lt;code&gt;$VERSION&lt;/code&gt; ; finalmente le dice a perl que arranque el m&amp;oacute;dulo. Perl llamar&amp;aacute; a su rutina de carga din&amp;aacute;mica (si hay una) y cargar&amp;aacute; la biblioteca compartida.</target>
        </trans-unit>
        <trans-unit id="92b4893cf24b728e0fae1966639d9078e63fc3f7" translate="yes" xml:space="preserve">
          <source>In our example we can just call &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; on the underlying hash referenced by &lt;code&gt;$self-&amp;gt;{LIST}&lt;/code&gt; :</source>
          <target state="translated">En nuestro ejemplo, podemos simplemente llamar a &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; en el hash subyacente al que hace referencia &lt;code&gt;$self-&amp;gt;{LIST}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bc1f779d9a34032474fc9a65f77cb8d2776cbce1" translate="yes" xml:space="preserve">
          <source>In our example we're going to create a shouting handle.</source>
          <target state="translated">En nuestro ejemplo vamos a crear una manija para gritar.</target>
        </trans-unit>
        <trans-unit id="a13dbabebbc5437dccc50e5be8ddf3c33a642ee8" translate="yes" xml:space="preserve">
          <source>In our example, 'undef' is really an element containing &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; number of spaces. Observe:</source>
          <target state="translated">En nuestro ejemplo, 'undef' es realmente un elemento que contiene &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; n&amp;uacute;mero de espacios. Observar:</target>
        </trans-unit>
        <trans-unit id="aabcb2149f4617fcf7efa6bbc92a17b687ef3353" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is really &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; number of spaces so we have a little more work to do here:</source>
          <target state="translated">En nuestro ejemplo, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; es realmente &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; n&amp;uacute;mero de espacios, as&amp;iacute; que tenemos un poco m&amp;aacute;s de trabajo por hacer aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="1f1787ee08eebed75ede8020208e3ff9eccca1a6" translate="yes" xml:space="preserve">
          <source>In our example, a deleted item is &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; spaces:</source>
          <target state="translated">En nuestro ejemplo, un elemento eliminado es &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; espacios:</target>
        </trans-unit>
        <trans-unit id="91424799b59a91080c214218f5e7f8c9b0b084d8" translate="yes" xml:space="preserve">
          <source>In our example, just to show you that you don't</source>
          <target state="translated">En nuestro ejemplo,sólo para mostrarte que no</target>
        </trans-unit>
        <trans-unit id="11b35d0e0b09647c243a787b95c24ae27233aecd" translate="yes" xml:space="preserve">
          <source>In our example, that would remove all the user's dot files! It's such a dangerous thing that they'll have to set CLOBBER to something higher than 1 to make it happen.</source>
          <target state="translated">En nuestro ejemplo,eso eliminaría todos los archivos de puntos del usuario.Es algo tan peligroso que tendrán que poner CLOBBER a algo más alto que 1 para que suceda.</target>
        </trans-unit>
        <trans-unit id="8f92d427a1809586b396dc516bf348aaa08bbed7" translate="yes" xml:space="preserve">
          <source>In our example, we want to make sure there are no blank (&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;) entries, so &lt;code&gt;EXTEND&lt;/code&gt; will make use of &lt;code&gt;STORESIZE&lt;/code&gt; to fill elements as needed:</source>
          <target state="translated">En nuestro ejemplo, queremos asegurarnos de que no &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; entradas en blanco ( indef ), por lo que &lt;code&gt;EXTEND&lt;/code&gt; har&amp;aacute; uso de &lt;code&gt;STORESIZE&lt;/code&gt; para completar los elementos seg&amp;uacute;n sea necesario:</target>
        </trans-unit>
        <trans-unit id="24d1f4e04fd957695cb0fc036193c59fca0468cd" translate="yes" xml:space="preserve">
          <source>In our example, we will determine that if an element consists of &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; spaces only, it does not exist:</source>
          <target state="translated">En nuestro ejemplo, determinaremos que si un elemento consta de espacios &lt;code&gt;$self-&amp;gt;{ELEMSIZE}&lt;/code&gt; &amp;uacute;nicamente, no existe:</target>
        </trans-unit>
        <trans-unit id="9241072dd02f63704e06d0e4788fd47ef3eca294" translate="yes" xml:space="preserve">
          <source>In our example, we'll use a little shortcut if there is a</source>
          <target state="translated">En nuestro ejemplo,usaremos un pequeño atajo si hay un</target>
        </trans-unit>
        <trans-unit id="6a2c73ee683cc447274fd115e41a8a6212c0860c" translate="yes" xml:space="preserve">
          <source>In our intranet, we have many modules for internal use. How can I integrate these modules with CPAN.pm but without uploading the modules to CPAN?</source>
          <target state="translated">En nuestra intranet,tenemos muchos módulos para uso interno.¿Cómo puedo integrar estos módulos con CPAN.pm pero sin subir los módulos a CPAN?</target>
        </trans-unit>
        <trans-unit id="e3d33b8a8cd9ee1cbb39097ccf83087f357647e8" translate="yes" xml:space="preserve">
          <source>In our tied hash DotFiles example, we use a regular hash for the object containing several important fields, of which only the &lt;code&gt;{LIST}&lt;/code&gt; field will be what the user thinks of as the real hash.</source>
          <target state="translated">En nuestro ejemplo de DotFiles de hash vinculado, usamos un hash regular para el objeto que contiene varios campos importantes, de los cuales solo el campo &lt;code&gt;{LIST}&lt;/code&gt; ser&amp;aacute; lo que el usuario considere el hash real.</target>
        </trans-unit>
        <trans-unit id="07709450f49a2785357dceda9bbcd6e033ef5380" translate="yes" xml:space="preserve">
          <source>In paragraphs where formatting codes (like E&amp;lt;...&amp;gt;, B&amp;lt;...&amp;gt;) are understood (i.e.,</source>
          <target state="translated">En los p&amp;aacute;rrafos donde se entienden los c&amp;oacute;digos de formato (como E &amp;lt;...&amp;gt;, B &amp;lt;...&amp;gt;) (es decir,</target>
        </trans-unit>
        <trans-unit id="fb0742f46f732e81f9ef6b26f9dd077a50514538" translate="yes" xml:space="preserve">
          <source>In parsing Pod, a notably tricky part is the correct parsing of (potentially nested!) formatting codes. Implementors should consult the code in the &lt;code&gt;parse_text&lt;/code&gt; routine in Pod::Parser as an example of a correct implementation.</source>
          <target state="translated">Al analizar Pod, una parte notablemente complicada es el an&amp;aacute;lisis correcto de los c&amp;oacute;digos de formato (&amp;iexcl;potencialmente anidados!). Los implementadores deben consultar el c&amp;oacute;digo en la rutina &lt;code&gt;parse_text&lt;/code&gt; en Pod :: Parser como un ejemplo de una implementaci&amp;oacute;n correcta.</target>
        </trans-unit>
        <trans-unit id="e44b2915e9ebcfa80eaf0cd0b8fc6a537b378a7a" translate="yes" xml:space="preserve">
          <source>In parsing an L&amp;lt;...&amp;gt; code, Pod parsers must distinguish at least four attributes:</source>
          <target state="translated">Al analizar un c&amp;oacute;digo L &amp;lt;...&amp;gt;, los analizadores de pod deben distinguir al menos cuatro atributos:</target>
        </trans-unit>
        <trans-unit id="173ae1b4c7abf280ed9de2a2e4233e82968c1ade" translate="yes" xml:space="preserve">
          <source>In parsing these constructs, Perl always ignores Upper/lower case differences everywhere within the {braces}. Thus &lt;code&gt;\p{Greek}&lt;/code&gt; means the same thing as &lt;code&gt;\p{greek}&lt;/code&gt; . But note that changing the case of the &lt;code&gt;&quot;p&quot;&lt;/code&gt; or &lt;code&gt;&quot;P&quot;&lt;/code&gt; before the left brace completely changes the meaning of the construct, from &quot;match&quot; (for &lt;code&gt;\p{}&lt;/code&gt; ) to &quot;doesn't match&quot; (for &lt;code&gt;\P{}&lt;/code&gt; ). Casing in this document is for improved legibility.</source>
          <target state="translated">Al analizar estas construcciones, Perl siempre ignora las diferencias entre may&amp;uacute;sculas y min&amp;uacute;sculas en todas partes dentro de las {llaves}. Por tanto, &lt;code&gt;\p{Greek}&lt;/code&gt; significa lo mismo que &lt;code&gt;\p{greek}&lt;/code&gt; . Pero tenga en cuenta que cambiar el caso de la &lt;code&gt;&quot;p&quot;&lt;/code&gt; o &lt;code&gt;&quot;P&quot;&lt;/code&gt; antes de la llave izquierda cambia completamente el significado de la construcci&amp;oacute;n, de &quot;coincide&quot; (para &lt;code&gt;\p{}&lt;/code&gt; ) a &quot;no coincide&quot; (para &lt;code&gt;\P{}&lt;/code&gt; ). La carcasa de este documento es para mejorar la legibilidad.</target>
        </trans-unit>
        <trans-unit id="9aaf8e25ca7ca9dd8d4b03a35ad6a47a7f371c04" translate="yes" xml:space="preserve">
          <source>In particular</source>
          <target state="translated">En particular</target>
        </trans-unit>
        <trans-unit id="2f4b20effb603658d4594f20068f3202a019f207" translate="yes" xml:space="preserve">
          <source>In particular have a hunt around for the following:</source>
          <target state="translated">En particular,tener una caza en torno a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="549a73d37bd647b3d02bdfb1ed4587a94e6c791c" translate="yes" xml:space="preserve">
          <source>In particular the following metacharacters have their standard</source>
          <target state="translated">En particular,los siguientes metacaracteres tienen su estándar</target>
        </trans-unit>
        <trans-unit id="d9ca3d8c112df43cded72f31c7db395214aede20" translate="yes" xml:space="preserve">
          <source>In particular,</source>
          <target state="translated">En particular,</target>
        </trans-unit>
        <trans-unit id="ef80eb5daee93a0d4fde8126fc49aefdc4e89c82" translate="yes" xml:space="preserve">
          <source>In particular, &lt;code&gt;Tie::File&lt;/code&gt; will</source>
          <target state="translated">En particular, &lt;code&gt;Tie::File&lt;/code&gt; voluntad</target>
        </trans-unit>
        <trans-unit id="2db3c0671aba0d3ee80c31fffb1da43c83f4160e" translate="yes" xml:space="preserve">
          <source>In particular, braces do not need to be balanced:</source>
          <target state="translated">En particular,los frenos no necesitan ser equilibrados:</target>
        </trans-unit>
        <trans-unit id="2cbf0bbf93ed5b0e470ae4c77978f151618da6e4" translate="yes" xml:space="preserve">
          <source>In particular, follow these general guidelines for patching Perl sources:</source>
          <target state="translated">En particular,siga estas directrices generales para parchear las fuentes de Perl:</target>
        </trans-unit>
        <trans-unit id="588a69fc1734910196fa33dcc3398592c9c2b486" translate="yes" xml:space="preserve">
          <source>In particular, if you are using Info-Zip you need to have zip version 3.x or better to update a Zip64 archive and unzip version 6.x to read a zip64 archive.</source>
          <target state="translated">En particular,si usas Info-Zip necesitas tener la versión 3.x o mejor para actualizar un archivo Zip64 y descomprimir la versión 6.x para leer un archivo Zip64.</target>
        </trans-unit>
        <trans-unit id="b8504eca27d4d7dd980e055d06368ef344507bf5" translate="yes" xml:space="preserve">
          <source>In particular, if you opened the pipe using &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , then you cannot simply use close() in the parent process to close an unwanted writer. Consider this code:</source>
          <target state="translated">En particular, si abri&amp;oacute; la tuber&amp;iacute;a usando &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , entonces no puede simplemente usar close () en el proceso padre para cerrar un escritor no deseado. Considere este c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="55f883bf0e56efd410000618d8c0d414be5f0032" translate="yes" xml:space="preserve">
          <source>In particular, it is not possible to write general-purpose classes in this technique, classes that can advertise themselves as &quot;Put me on your @ISA list and use my methods&quot;. If the other class has different ideas about how the object body is used, there is trouble.</source>
          <target state="translated">En particular,no es posible escribir clases de propósito general en esta técnica,clases que pueden anunciarse como &quot;Póngame en su lista @ISA y use mis métodos&quot;.Si la otra clase tiene ideas diferentes sobre cómo se usa el cuerpo del objeto,hay problemas.</target>
        </trans-unit>
        <trans-unit id="2fd11e0201dc297df1cba370809db0d5939f0ec0" translate="yes" xml:space="preserve">
          <source>In particular, the extensions &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; and &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; are not supported under EBCDIC; likewise for the (now deprecated) &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; pragma.</source>
          <target state="translated">En particular, las extensiones &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; y &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt; no son compatibles con EBCDIC; lo mismo ocurre con el pragma de &lt;a href=&quot;encoding&quot;&gt;codificaci&amp;oacute;n&lt;/a&gt; (ahora en desuso) .</target>
        </trans-unit>
        <trans-unit id="b491336832fe24926f813912697f1c74d79ed48d" translate="yes" xml:space="preserve">
          <source>In particular, the special &lt;code&gt;${^_XYZ}&lt;/code&gt; variables are always taken to be in package &lt;code&gt;main&lt;/code&gt; , regardless of any &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declarations presently in scope.</source>
          <target state="translated">En particular, las variables especiales &lt;code&gt;${^_XYZ}&lt;/code&gt; siempre se consideran en el paquete &lt;code&gt;main&lt;/code&gt; , independientemente de las declaraciones de &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; que se encuentren actualmente en el alcance.</target>
        </trans-unit>
        <trans-unit id="5adbc38d169db3c0edbc488274012a781b34d025" translate="yes" xml:space="preserve">
          <source>In particular, this API does &lt;b&gt;not&lt;/b&gt; provide the following functions:</source>
          <target state="translated">En particular, esta API &lt;b&gt;no&lt;/b&gt; proporciona las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="26d259999f6bd5eabc0e32bc92fd018cffcba101" translate="yes" xml:space="preserve">
          <source>In particular, this is applicable to the structure of &lt;code&gt;@INC&lt;/code&gt; used for testing not-yet-installed extensions. This means that running uninstalled extensions may have much more overhead than running the same extensions after &lt;code&gt;make install&lt;/code&gt; .</source>
          <target state="translated">En particular, esto es aplicable a la estructura de &lt;code&gt;@INC&lt;/code&gt; usada para probar extensiones a&amp;uacute;n no instaladas. Esto significa que ejecutar extensiones desinstaladas puede tener mucha m&amp;aacute;s sobrecarga que ejecutar las mismas extensiones despu&amp;eacute;s de &lt;code&gt;make install&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da2e58986eb4f3be556785c248e50c152e1a4485" translate="yes" xml:space="preserve">
          <source>In particular, this means that you shouldn't use this for selecting between two aggregates for assignment:</source>
          <target state="translated">En particular,esto significa que no se debe utilizar para seleccionar entre dos agregados para la asignación:</target>
        </trans-unit>
        <trans-unit id="6b654969e8b0fb9bedec078843fc01697a0cd123" translate="yes" xml:space="preserve">
          <source>In particular:</source>
          <target state="translated">En particular:</target>
        </trans-unit>
        <trans-unit id="f7e08b6bdc00b0694ecd1bf1d445c34c08eeec2b" translate="yes" xml:space="preserve">
          <source>In patterns where the text of the code is derived from run-time information rather than appearing literally in a source code /pattern/, the code is compiled at the same time that the pattern is compiled, and for reasons of security, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; must be in scope. This is to stop user-supplied patterns containing code snippets from being executable.</source>
          <target state="translated">En patrones donde el texto del c&amp;oacute;digo se deriva de informaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n en lugar de aparecer literalmente en un c&amp;oacute;digo fuente / patr&amp;oacute;n /, el c&amp;oacute;digo se compila al mismo tiempo que se compila el patr&amp;oacute;n y, por razones de seguridad, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; debe estar dentro del alcance. Esto es para evitar que los patrones proporcionados por el usuario que contienen fragmentos de c&amp;oacute;digo sean ejecutables.</target>
        </trans-unit>
        <trans-unit id="1ea88d26430c6d46158be27b80e4634d3a9d07c0" translate="yes" xml:space="preserve">
          <source>In perl 5.14 and higher, on systems other than Windows that do not support the &lt;code&gt;fchdir&lt;/code&gt; C function, directory handles (see &lt;a href=&quot;functions/opendir&quot;&gt;opendir DIRHANDLE,EXPR&lt;/a&gt;) will not be copied to new threads. You can use the &lt;code&gt;d_fchdir&lt;/code&gt; variable in &lt;a href=&quot;config&quot;&gt;Config.pm&lt;/a&gt; to determine whether your system supports it.</source>
          <target state="translated">En perl 5.14 y superior, en sistemas distintos de Windows que no admiten la funci&amp;oacute;n &lt;code&gt;fchdir&lt;/code&gt; C, los identificadores de directorio (consulte &lt;a href=&quot;functions/opendir&quot;&gt;opendir DIRHANDLE, EXPR&lt;/a&gt; ) no se copiar&amp;aacute;n en nuevos hilos. Puede utilizar la variable &lt;code&gt;d_fchdir&lt;/code&gt; en &lt;a href=&quot;config&quot;&gt;Config.pm&lt;/a&gt; para determinar si su sistema la admite.</target>
        </trans-unit>
        <trans-unit id="978dbedfe97270c6d04770e8f1b09ed5adf8e8d1" translate="yes" xml:space="preserve">
          <source>In perl 5.8.0, &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; was also used to mark placeholders in restricted hashes. This caused such hash entries not to appear when iterating over the hash or when checking for the keys with the &lt;code&gt;hv_exists&lt;/code&gt; function.</source>
          <target state="translated">En perl 5.8.0, &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; tambi&amp;eacute;n se utiliz&amp;oacute; para marcar marcadores de posici&amp;oacute;n en hashes restringidos. Esto provoc&amp;oacute; que tales entradas hash no aparecieran al iterar sobre el hash o al verificar las claves con la funci&amp;oacute;n &lt;code&gt;hv_exists&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d10ca79661f6cd0c4cfd21cf2e8aa0ee582a6a" translate="yes" xml:space="preserve">
          <source>In perl 5.8.1 and later, Test::Builder is thread-safe. The test number is shared amongst all threads. This means if one thread sets the test number using &lt;code&gt;current_test()&lt;/code&gt; they will all be effected.</source>
          <target state="translated">En perl 5.8.1 y posteriores, Test :: Builder es seguro para subprocesos. El n&amp;uacute;mero de prueba se comparte entre todos los hilos. Esto significa que si un hilo establece el n&amp;uacute;mero de prueba usando &lt;code&gt;current_test()&lt;/code&gt; , todos se ver&amp;aacute;n afectados.</target>
        </trans-unit>
        <trans-unit id="1269cc2ad1ea6f2d742e35bd480e05b3838a6225" translate="yes" xml:space="preserve">
          <source>In perl v5.8.0, you can work around this as follows;</source>
          <target state="translated">En perl v5.8.0,puedes trabajar alrededor de esto de la siguiente manera;</target>
        </trans-unit>
        <trans-unit id="3903f5f9bb5ec2db6467ae7e05ade21cf24078e9" translate="yes" xml:space="preserve">
          <source>In perls older than 5.8.1, map suffers from this problem as well. But since 5.8.1, this has been fixed, and map is context aware - in void context, no lists are constructed.</source>
          <target state="translated">En las perlas mayores de 5.8.1,el mapa también sufre este problema.Pero desde 5.8.1,esto se ha arreglado,y el mapa es consciente del contexto-en el contexto vacío,no se construyen listas.</target>
        </trans-unit>
        <trans-unit id="201c993ba430d2b34780a5f6bce751f372ee2124" translate="yes" xml:space="preserve">
          <source>In portable Perl code, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(9, $child)&lt;/code&gt; must not be used on forked processes. Killing a forked process is unsafe and has unpredictable results. See &lt;a href=&quot;#kill()&quot;&gt;kill()&lt;/a&gt;, above.</source>
          <target state="translated">En el c&amp;oacute;digo Perl port&amp;aacute;til, &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;(9, $child)&lt;/code&gt; no debe usarse en procesos bifurcados. Matar un proceso bifurcado no es seguro y tiene resultados impredecibles. Vea &lt;a href=&quot;#kill()&quot;&gt;kill ()&lt;/a&gt; , arriba.</target>
        </trans-unit>
        <trans-unit id="64e70c5c9f546a348d8be9f13ed9b3d5b217325e" translate="yes" xml:space="preserve">
          <source>In practice this logic is better performed by &lt;a href=&quot;io/socket/ip&quot;&gt;IO::Socket::IP&lt;/a&gt;.</source>
          <target state="translated">En la pr&amp;aacute;ctica, esta l&amp;oacute;gica se realiza mejor con &lt;a href=&quot;io/socket/ip&quot;&gt;IO :: Socket :: IP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f10d5bbc85368eaaed58b49509d8d5537fcea2c6" translate="yes" xml:space="preserve">
          <source>In practice this makes seldom a difference as &lt;b&gt;parts and results&lt;/b&gt; of expressions will be truncated anyway, but this can, for instance, affect the return value of subroutines:</source>
          <target state="translated">En la pr&amp;aacute;ctica, esto rara vez hace una diferencia, ya que las &lt;b&gt;partes y los resultados&lt;/b&gt; de las expresiones se truncar&amp;aacute;n de todos modos, pero esto puede, por ejemplo, afectar el valor de retorno de las subrutinas:</target>
        </trans-unit>
        <trans-unit id="2c8bdda291d4d16e099108c0540471c243257c86" translate="yes" xml:space="preserve">
          <source>In practice, Perl scripts that call programs that return _POSIX_EXIT type status values will be expecting those values, and programs that call traditional VMS programs will either be expecting the previous behavior or just checking for a non-zero status.</source>
          <target state="translated">En la práctica,los scripts Perl que llaman a los programas que devuelven valores de estado de tipo _POSIX_EXIT estarán esperando esos valores,y los programas que llaman a los programas tradicionales de VMS estarán esperando el comportamiento anterior o simplemente comprobando si el estado es distinto de cero.</target>
        </trans-unit>
        <trans-unit id="6ed326b6d59e850419b57af366a49ca220934029" translate="yes" xml:space="preserve">
          <source>In practice, it is anticipated that this character will not be used often, but formatters should either support it, or delete it.</source>
          <target state="translated">En la práctica,se prevé que este carácter no se utilice con frecuencia,pero los formateadores deberían apoyarlo o eliminarlo.</target>
        </trans-unit>
        <trans-unit id="796550631a5df07b05a560a67d63d7ad67fdf7c5" translate="yes" xml:space="preserve">
          <source>In previous sections we have seen how to pack numbers and character strings. If it were not for a couple of snags we could conclude this section right away with the terse remark that C structures don't contain anything else, and therefore you already know all there is to it. Sorry, no: read on, please.</source>
          <target state="translated">En secciones anteriores hemos visto cómo empaquetar números y cadenas de caracteres.Si no fuera por un par de inconvenientes,podríamos concluir esta sección de inmediato con el breve comentario de que las estructuras C no contienen nada más,y por lo tanto ya sabes todo lo que hay que hacer.Lo siento,no:sigue leyendo,por favor.</target>
        </trans-unit>
        <trans-unit id="692b842adc759f56816c9c058cae643b8a51086a" translate="yes" xml:space="preserve">
          <source>In principle the unpack() command can be used to convert the bytes back to a number (if the underlying type is known to be a number).</source>
          <target state="translated">En principio,el comando unpack()puede utilizarse para convertir los bytes de nuevo en un número (si se sabe que el tipo subyacente es un número).</target>
        </trans-unit>
        <trans-unit id="1221515422031848620efe6d264c7054adcd4f04" translate="yes" xml:space="preserve">
          <source>In prior perl versions, spawning threads with open directory handles would crash the interpreter. &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2frt.perl.org%2frt3%2fPublic%2fBug%2fDisplay.html%3fid%3d75154&quot;&gt;[perl #75154]&lt;/a&gt;</source>
          <target state="translated">En versiones anteriores de Perl, la generaci&amp;oacute;n de subprocesos con identificadores de directorio abiertos bloqueaba el int&amp;eacute;rprete. &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2frt.perl.org%2frt3%2fPublic%2fBug%2fDisplay.html%3fid%3d75154&quot;&gt;[perl # 75154]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d807cc153636cb39c76e4cb0277ef6012694dae7" translate="yes" xml:space="preserve">
          <source>In programs:</source>
          <target state="translated">En los programas:</target>
        </trans-unit>
        <trans-unit id="48c74c56dfa96426cf79d4567af2599b0fde094e" translate="yes" xml:space="preserve">
          <source>In recent years, vendors have begun to supply systems free of this inherent security bug. On such systems, when the kernel passes the name of the set-id script to open to the interpreter, rather than using a pathname subject to meddling, it instead passes</source>
          <target state="translated">En los últimos años,los vendedores han empezado a suministrar sistemas libres de este inherente fallo de seguridad.En tales sistemas,cuando el núcleo pasa el nombre del script de identificación para abrirse al intérprete,en lugar de usar una ruta sujeta a la intromisión,pasa en cambio</target>
        </trans-unit>
        <trans-unit id="fc7a0ac9fe9f163678a08865a8ae2ec22fbc06ff" translate="yes" xml:space="preserve">
          <source>In regex speak, a word boundary (\b) is a &quot;zero width assertion&quot;, meaning that it doesn't represent a character in the string, but a condition at a certain position.</source>
          <target state="translated">En lenguaje regex,una palabra límite (\b)es una &quot;afirmación de ancho cero&quot;,lo que significa que no representa un carácter en la cadena,sino una condición en una determinada posición.</target>
        </trans-unit>
        <trans-unit id="1b5ca67e58e909ea0b763b445166b0dc50f9fff9" translate="yes" xml:space="preserve">
          <source>In regular expressions, the &lt;code&gt;${foo[2]}&lt;/code&gt; syntax is sometimes necessary to disambiguate between array subscripts and character classes. &lt;code&gt;/$length[2345]/&lt;/code&gt; , for instance, will be interpreted as &lt;code&gt;$length&lt;/code&gt; followed by the character class &lt;code&gt;[2345]&lt;/code&gt; . If an array subscript is what you want, you can avoid the warning by changing &lt;code&gt;/${length[2345]}/&lt;/code&gt; to the unsightly &lt;code&gt;/${\$length[2345]}/&lt;/code&gt; , by renaming your array to something that does not coincide with a built-in keyword, or by simply turning off warnings with &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'ambiguous';&lt;/code&gt; .</source>
          <target state="translated">En expresiones regulares, la sintaxis &lt;code&gt;${foo[2]}&lt;/code&gt; veces es necesaria para eliminar la ambig&amp;uuml;edad entre los sub&amp;iacute;ndices de matriz y las clases de caracteres. &lt;code&gt;/$length[2345]/&lt;/code&gt; , por ejemplo, se interpretar&amp;aacute; como &lt;code&gt;$length&lt;/code&gt; seguido de la clase de caracteres &lt;code&gt;[2345]&lt;/code&gt; . Si lo que desea es un sub&amp;iacute;ndice de matriz, puede evitar la advertencia cambiando &lt;code&gt;/${length[2345]}/&lt;/code&gt; por el antiest&amp;eacute;tico &lt;code&gt;/${\$length[2345]}/&lt;/code&gt; , cambiando el nombre de su matriz a algo que no coincida con una palabra clave incorporada, o simplemente desactivando las advertencias &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'ambiguous';&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="870f19d24df4b4eee6c062f874fd2afacdfc9f30" translate="yes" xml:space="preserve">
          <source>In scalar context it returns the same as perl would when stringifying a raw &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; with the same pattern inside. If the argument is not a compiled reference then this routine returns false but defined in scalar context, and the empty list in list context. Thus the following</source>
          <target state="translated">En contexto escalar, devuelve lo mismo que perl cuando se encadena un &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; crudo con el mismo patr&amp;oacute;n en su interior. Si el argumento no es una referencia compilada, esta rutina devuelve falso pero definido en contexto escalar y la lista vac&amp;iacute;a en contexto de lista. As&amp;iacute; lo siguiente</target>
        </trans-unit>
        <trans-unit id="0a19f93e8a70aa3709a4c5eb5c497d67c74952ec" translate="yes" xml:space="preserve">
          <source>In scalar context will return just the IP address.</source>
          <target state="translated">En contexto escalar devolverá sólo la dirección IP.</target>
        </trans-unit>
        <trans-unit id="1370034b95e83c1602601f8f2c93a5f4f13c28ad" translate="yes" xml:space="preserve">
          <source>In scalar context without arguments, this method returns the number of parsers aggregated. In list context without arguments, returns the parsers in the order they were added.</source>
          <target state="translated">En un contexto escalar sin argumentos,este método devuelve el número de analizadores agregados.En contexto de lista sin argumentos,devuelve los analizadores en el orden en que fueron añadidos.</target>
        </trans-unit>
        <trans-unit id="3e333b48f248d91366426a74dfbbc3da65c8ea7d" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&quot;..&quot;&lt;/code&gt; returns a boolean value. The operator is bistable, like a flip-flop, and emulates the line-range (comma) operator of &lt;b&gt;sed&lt;/b&gt;, &lt;b&gt;awk&lt;/b&gt;, and various editors. Each &lt;code&gt;&quot;..&quot;&lt;/code&gt; operator maintains its own boolean state, even across calls to a subroutine that contains it. It is false as long as its left operand is false. Once the left operand is true, the range operator stays true until the right operand is true,</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&quot;..&quot;&lt;/code&gt; devuelve un valor booleano. El operador es biestable, como un flip-flop, y emula el operador de rango de l&amp;iacute;nea (coma) de &lt;b&gt;sed&lt;/b&gt; , &lt;b&gt;awk&lt;/b&gt; y varios editores. Cada operador &lt;code&gt;&quot;..&quot;&lt;/code&gt; mantiene su propio estado booleano, incluso a trav&amp;eacute;s de llamadas a una subrutina que lo contiene. Es falso siempre que su operando izquierdo sea falso. Una vez que el operando izquierdo es verdadero, el operador de rango permanece verdadero hasta que el operando derecho es verdadero,</target>
        </trans-unit>
        <trans-unit id="4702696bd1a6606f8c00bfa48b7462e238b219f8" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; returns the ctime(3) value:</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; devuelve el valor ctime (3):</target>
        </trans-unit>
        <trans-unit id="50ab8480db61cacd9dd3820b8d1635a7c8fbf2e8" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; returns a boolean value indicating success or failure, and, if successful, sets the information associated with the special filehandle &lt;code&gt;_&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; devuelve un valor booleano que indica &amp;eacute;xito o fracaso y, si tiene &amp;eacute;xito, establece la informaci&amp;oacute;n asociada con el identificador de archivo especial &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1818a475de168c2b1a7d2bb086c2af5a3f3a97b" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;$user&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;functions/times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;$user&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d16f2c8ac24f3fef816016a050127e8baea1e4f0" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; returns the ctime(3) value:</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; devuelve el valor ctime (3):</target>
        </trans-unit>
        <trans-unit id="c038fe7af8fd4fba37237e821dee5726e03d9bcf" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; returns a boolean value indicating success or failure, and, if successful, sets the information associated with the special filehandle &lt;code&gt;_&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; devuelve un valor booleano que indica &amp;eacute;xito o fracaso y, si tiene &amp;eacute;xito, establece la informaci&amp;oacute;n asociada con el identificador de archivo especial &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f361652bf48a4a2a1736272eaacbdbdece5ad741" translate="yes" xml:space="preserve">
          <source>In scalar context, &lt;code&gt;&lt;a href=&quot;times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;$user&lt;/code&gt; .</source>
          <target state="translated">En contexto escalar, &lt;code&gt;&lt;a href=&quot;times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;$user&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67f63380dd91d8509df2b85f67d144a31345d453" translate="yes" xml:space="preserve">
          <source>In scalar context, each execution of &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; finds the next match, returning true if it matches, and false if there is no further match. The position after the last match can be read or set using the &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; function; see &lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;. A failed match normally resets the search position to the beginning of the string, but you can avoid that by adding the &lt;code&gt;/c&lt;/code&gt; modifier (for example, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt;). Modifying the target string also resets the search position.</source>
          <target state="translated">En contexto escalar, cada ejecuci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; encuentra la siguiente coincidencia, devolviendo verdadero si coincide y falso si no hay m&amp;aacute;s coincidencia. La posici&amp;oacute;n despu&amp;eacute;s de la &amp;uacute;ltima coincidencia se puede leer o establecer usando la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; ; ver &lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt; . Una coincidencia fallida normalmente restablece la posici&amp;oacute;n de b&amp;uacute;squeda al principio de la cadena, pero puede evitarlo agregando el modificador &lt;code&gt;/c&lt;/code&gt; (por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; ). La modificaci&amp;oacute;n de la cadena de destino tambi&amp;eacute;n restablece la posici&amp;oacute;n de b&amp;uacute;squeda.</target>
        </trans-unit>
        <trans-unit id="8800b54c59ca34fbb2fd00902e130cb43eb3acc5" translate="yes" xml:space="preserve">
          <source>In scalar context, evaluating a filehandle in angle brackets yields the next line from that file (the newline, if any, included), or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; at end-of-file or on error. When &lt;code&gt;$/&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (sometimes known as file-slurp mode) and the file is empty, it returns &lt;code&gt;''&lt;/code&gt; the first time, followed by &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; subsequently.</source>
          <target state="translated">En contexto escalar, la evaluaci&amp;oacute;n de un identificador de archivo entre par&amp;eacute;ntesis angulares produce la siguiente l&amp;iacute;nea de ese archivo (la nueva l&amp;iacute;nea, si la hay, incluida), o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; al final del archivo o en caso de error. Cuando &lt;code&gt;$/&lt;/code&gt; se establece en &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (a veces conocido como modo file-slurp) y el archivo est&amp;aacute; vac&amp;iacute;o, devuelve &lt;code&gt;''&lt;/code&gt; la primera vez, seguido de &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; posteriormente.</target>
        </trans-unit>
        <trans-unit id="90d5e99280edc013a52bda47119a081391fd852e" translate="yes" xml:space="preserve">
          <source>In scalar context, just the filehandle is returned.</source>
          <target state="translated">En el contexto escalar,sólo se devuelve el filehandle.</target>
        </trans-unit>
        <trans-unit id="26e7b891880cf2546cd4182b9d0f0a5ab5924094" translate="yes" xml:space="preserve">
          <source>In scalar context, the function returns the most preferred language tag (or undef if no preference was seen).</source>
          <target state="translated">En el contexto escalar,la función devuelve la etiqueta del idioma más preferido (o undef si no se ha visto ninguna preferencia).</target>
        </trans-unit>
        <trans-unit id="b1d9f6c7ff92d9e4431c44fd49623f31abe26893" translate="yes" xml:space="preserve">
          <source>In scalar context, the remaining time in the timer is returned.</source>
          <target state="translated">En el contexto escalar,se devuelve el tiempo restante en el temporizador.</target>
        </trans-unit>
        <trans-unit id="f286b508bea32b55376de76bb51800a879183e4c" translate="yes" xml:space="preserve">
          <source>In scalar context, the remaining time is returned.</source>
          <target state="translated">En el contexto escalar,se devuelve el tiempo restante.</target>
        </trans-unit>
        <trans-unit id="1fc032fde56245f910fbc6d13638ce22e45ea79e" translate="yes" xml:space="preserve">
          <source>In scalar context, you get the name, unless the function was a lookup by name, in which case you get the other thing, whatever it is. (If the entry doesn't exist you get the undefined value.) For example:</source>
          <target state="translated">En el contexto escalar,obtienes el nombre,a menos que la función fuera una búsqueda por nombre,en cuyo caso obtienes la otra cosa,sea lo que sea.(Si la entrada no existe,se obtiene el valor indefinido.)Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="070ead24adcf97bbf0458e41cddfaf9060fd1c75" translate="yes" xml:space="preserve">
          <source>In scopes where &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; is in force, nearly all the operators listed above will force their argument(s) into integer format, and return an integer result. The exceptions, &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; , do not change their behavior with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt;</source>
          <target state="translated">En &amp;aacute;mbitos donde &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; est&amp;aacute; en vigor, casi todos los operadores enumerados anteriormente forzar&amp;aacute;n su (s) argumento (s) en formato entero y devolver&amp;aacute;n un resultado entero. Las excepciones, &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;++&lt;/code&gt; y &lt;code&gt;--&lt;/code&gt; , no cambian su comportamiento con &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3fd63b759e64d942882eb1c88a05afcfdaffadf" translate="yes" xml:space="preserve">
          <source>In searching for &lt;code&gt;/\bfoo\b/&lt;/code&gt; , only locations in &lt;code&gt;$_&lt;/code&gt; that contain &lt;code&gt;f&lt;/code&gt; will be looked at, because &lt;code&gt;f&lt;/code&gt; is rarer than &lt;code&gt;o&lt;/code&gt; . In general, this is a big win except in pathological cases. The only question is whether it saves you more time than it took to build the linked list in the first place.</source>
          <target state="translated">Al buscar &lt;code&gt;/\bfoo\b/&lt;/code&gt; , solo se ver&amp;aacute;n las ubicaciones en &lt;code&gt;$_&lt;/code&gt; que contengan &lt;code&gt;f&lt;/code&gt; , porque &lt;code&gt;f&lt;/code&gt; es m&amp;aacute;s raro que &lt;code&gt;o&lt;/code&gt; . En general, esta es una gran victoria, excepto en casos patol&amp;oacute;gicos. La &amp;uacute;nica pregunta es si le ahorra m&amp;aacute;s tiempo del que tom&amp;oacute; para crear la lista vinculada en primer lugar.</target>
        </trans-unit>
        <trans-unit id="d510b9d55974c5ad5785f6cfe4077983c695078d" translate="yes" xml:space="preserve">
          <source>In short, Perl 4 is the parent to both Perl 5 and Perl 6. Perl 5 is the older sibling, and though they are different languages, someone who knows one will spot many similarities in the other.</source>
          <target state="translated">En resumen,el Perl 4 es el padre del Perl 5 y del Perl 6.Perl 5 es el hermano mayor,y aunque son idiomas diferentes,alguien que conoce uno notará muchas similitudes en el otro.</target>
        </trans-unit>
        <trans-unit id="a022deee593194afb675e77892be1749073d500f" translate="yes" xml:space="preserve">
          <source>In simple cases, it is equivalent to:</source>
          <target state="translated">En casos sencillos,es equivalente a:</target>
        </trans-unit>
        <trans-unit id="ffcc65b4ec59c10cd981321f645c18e2c2833005" translate="yes" xml:space="preserve">
          <source>In simple terms, this is what happens:</source>
          <target state="translated">En términos simples,esto es lo que sucede:</target>
        </trans-unit>
        <trans-unit id="d121139946109160493990901ec9a05c62500b61" translate="yes" xml:space="preserve">
          <source>In situations where you need to enable this with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; , you should also have taint checking enabled. Better yet, use the carefully constrained evaluation within a Safe compartment. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; for details about both these mechanisms.</source>
          <target state="translated">En situaciones en las que necesite habilitar esto con &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; , tambi&amp;eacute;n debe tener habilitada la verificaci&amp;oacute;n de corrupci&amp;oacute;n. Mejor a&amp;uacute;n, utilice la evaluaci&amp;oacute;n cuidadosamente restringida dentro de un compartimento seguro. Consulte &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; para obtener detalles sobre estos dos mecanismos.</target>
        </trans-unit>
        <trans-unit id="e2046d35bd71cc3166ad97adddb890d2444c1f0f" translate="yes" xml:space="preserve">
          <source>In some cases (starting server processes, for instance) you'll want to completely dissociate the child process from the parent. This is often called daemonization. A well-behaved daemon will also chdir() to the root directory so it doesn't prevent unmounting the filesystem containing the directory from which it was launched, and redirect its standard file descriptors from and to</source>
          <target state="translated">En algunos casos (iniciando procesos de servidor,por ejemplo)querrá disociar completamente el proceso hijo del padre.A esto se le llama a menudo demonización.Un demonio que se comporte bien también chdir()al directorio raíz para que no impida desmontar el sistema de archivos que contiene el directorio desde el que se lanzó,y redirigir sus descriptores de archivo estándar desde y hacia</target>
        </trans-unit>
        <trans-unit id="fd4562e3425450ab12fc121ff9cd696fd05153a4" translate="yes" xml:space="preserve">
          <source>In some cases files created by File::Temp are removed from within an END block. Since END blocks are triggered when a child process exits (unless C&amp;lt;:_exit&amp;gt; is used by the child) File::Temp takes care to only remove those temp files created by a particular process ID. This means that a child will not attempt to remove temp files created by the parent process.</source>
          <target state="translated">En algunos casos, los archivos creados por File :: Temp se eliminan de un bloque END. Dado que los bloques END se activan cuando un proceso hijo sale (a menos que el hijo utilice C &amp;lt;: _ exit&amp;gt;), File :: Temp se encarga de eliminar solo los archivos temporales creados por un ID de proceso en particular. Esto significa que un ni&amp;ntilde;o no intentar&amp;aacute; eliminar los archivos temporales creados por el proceso principal.</target>
        </trans-unit>
        <trans-unit id="4cd284f272380bf09ca4f9468d05eb334cb95414" translate="yes" xml:space="preserve">
          <source>In some cases the 'application' can then be reduced to a small</source>
          <target state="translated">En algunos casos,la &quot;aplicación&quot; puede entonces reducirse a una pequeña</target>
        </trans-unit>
        <trans-unit id="df381c2814bde8cd15795ab2d100f8c130800cb5" translate="yes" xml:space="preserve">
          <source>In some cases this</source>
          <target state="translated">En algunos casos esto</target>
        </trans-unit>
        <trans-unit id="cde62ba475df964750a3cdf495be48e1d052051b" translate="yes" xml:space="preserve">
          <source>In some cases, files will only be retained if this variable is true when the file is created. This means that you can not create a temporary file, set this variable and expect the temp file to still be around when the program exits.</source>
          <target state="translated">En algunos casos,los archivos sólo se conservarán si esta variable es verdadera cuando se crea el archivo.Esto significa que no puedes crear un archivo temporal,establece esta variable y espera que el archivo temporal siga estando presente cuando el programa salga.</target>
        </trans-unit>
        <trans-unit id="3905e6a37b63c12afc3763addc4e36a653fc636f" translate="yes" xml:space="preserve">
          <source>In some cases, using substr() or vec() to simulate arrays can be highly beneficial. For example, an array of a thousand booleans will take at least 20,000 bytes of space, but it can be turned into one 125-byte bit vector--a considerable memory savings. The standard Tie::SubstrHash module can also help for certain types of data structure. If you're working with specialist data structures (matrices, for instance) modules that implement these in C may use less memory than equivalent Perl modules.</source>
          <target state="translated">En algunos casos,el uso de substr()o vec()para simular matrices puede ser muy beneficioso.Por ejemplo,una matriz de mil booleanos tomará al menos 20.000 bytes de espacio,pero puede ser convertida en un vector de 125 bytes...un considerable ahorro de memoria.El módulo estándar Tie::SubstrHash también puede ayudar para ciertos tipos de estructura de datos.Si se trabaja con estructuras de datos especializadas (matrices,por ejemplo)los módulos que las implementan en C pueden usar menos memoria que los módulos equivalentes de Perl.</target>
        </trans-unit>
        <trans-unit id="24e84c8e00f2a5bb70e605cd2c69e1dd80d922f5" translate="yes" xml:space="preserve">
          <source>In some cases, yes. You can use the &lt;code&gt;iter&lt;/code&gt; class method to iterate over the files in the tarball without reading them all in memory at once.</source>
          <target state="translated">En algunos casos, s&amp;iacute;. Puede usar el m&amp;eacute;todo de la clase &lt;code&gt;iter&lt;/code&gt; para iterar sobre los archivos en el tarball sin leerlos todos en la memoria a la vez.</target>
        </trans-unit>
        <trans-unit id="da7c53f5c4edfd54be873e35b150cbb2e0f64102" translate="yes" xml:space="preserve">
          <source>In some cases, you may be able to make several patterns into a single regular expression. Beware of situations that require backtracking though.</source>
          <target state="translated">En algunos casos,puede ser capaz de hacer varios patrones en una sola expresión regular.Pero ten cuidado con las situaciones que requieren retroceder.</target>
        </trans-unit>
        <trans-unit id="55ed1ae3a3af36b978490ace319abb286ca584e8" translate="yes" xml:space="preserve">
          <source>In some cases, you'll want to completely skip an entire testing script.</source>
          <target state="translated">En algunos casos,querrás saltarte completamente un guión de prueba completo.</target>
        </trans-unit>
        <trans-unit id="b444fb6bd755ce68abe6b0c45e2101b6fb938848" translate="yes" xml:space="preserve">
          <source>In some contexts, a backslash followed by two or even one octal digits may be interpreted as an octal escape, sometimes with a warning, and because of some bugs, sometimes with surprising results. Also, if you are creating a regex out of smaller snippets concatenated together, and you use fewer than three digits, the beginning of one snippet may be interpreted as adding digits to the ending of the snippet before it. See &lt;a href=&quot;#Absolute-referencing&quot;&gt;Absolute referencing&lt;/a&gt; for more discussion and examples of the snippet problem.</source>
          <target state="translated">En algunos contextos, una barra invertida seguida de dos o incluso un d&amp;iacute;gito octal puede interpretarse como un escape octal, a veces con una advertencia, y debido a algunos errores, a veces con resultados sorprendentes. Adem&amp;aacute;s, si est&amp;aacute; creando una expresi&amp;oacute;n regular a partir de fragmentos m&amp;aacute;s peque&amp;ntilde;os concatenados, y usa menos de tres d&amp;iacute;gitos, el comienzo de un fragmento se puede interpretar como la adici&amp;oacute;n de d&amp;iacute;gitos al final del fragmento anterior. Consulte &lt;a href=&quot;#Absolute-referencing&quot;&gt;Referencia absoluta&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n y ejemplos del problema del fragmento.</target>
        </trans-unit>
        <trans-unit id="941b228759db0ad2f21515f9edebce99234327a5" translate="yes" xml:space="preserve">
          <source>In some future version of I18N::LangTags, I plan to include support for RFC2482-style language tags -- which are basically just normal language tags with their ASCII characters shifted into Plane 14.</source>
          <target state="translated">En alguna futura versión de I18N::LangTags,planeo incluir soporte para etiquetas de lenguaje al estilo RFC2482 --que son básicamente etiquetas de lenguaje normal con sus caracteres ASCII cambiados al Plano 14.</target>
        </trans-unit>
        <trans-unit id="b0260d31b907a523df71ffe831436a5256c0c0bb" translate="yes" xml:space="preserve">
          <source>In some literature this construct is called &quot;atomic matching&quot; or &quot;possessive matching&quot;.</source>
          <target state="translated">En alguna literatura este constructo se llama &quot;emparejamiento atómico&quot; o &quot;emparejamiento posesivo&quot;.</target>
        </trans-unit>
        <trans-unit id="79419ef5fc7d87682a2736d33053a4e99ddcc17b" translate="yes" xml:space="preserve">
          <source>In some platforms it is not possible to get an alarm with subsecond resolution and later than one second.</source>
          <target state="translated">En algunas plataformas no es posible obtener una alarma con una resolución de subsegundo y más de un segundo.</target>
        </trans-unit>
        <trans-unit id="6aef2a6b389cc51b9d270ade7d87dfa403f876dd" translate="yes" xml:space="preserve">
          <source>In some platforms there may be arbitrary amount of padding, for example space characters, after the modified name as shown by &lt;code&gt;ps&lt;/code&gt; . In some platforms this padding may extend all the way to the original length of the argument area, no matter what you do (this is the case for example with Linux 2.2).</source>
          <target state="translated">En algunas plataformas puede haber una cantidad arbitraria de relleno, por ejemplo, caracteres de espacio, despu&amp;eacute;s del nombre modificado como se muestra en &lt;code&gt;ps&lt;/code&gt; . En algunas plataformas, este relleno puede extenderse hasta la longitud original del &amp;aacute;rea de argumentos, sin importar lo que haga (este es el caso, por ejemplo, de Linux 2.2).</target>
        </trans-unit>
        <trans-unit id="08216ba09095e01bafc1d8f5f89aaf1f507c0440" translate="yes" xml:space="preserve">
          <source>In some situations you may want to prevent certain symbols from being exported. Typically this applies to extensions which have functions or constants that may not exist on some systems.</source>
          <target state="translated">En algunas situaciones puede que desee evitar que se exporten ciertos símbolos.Esto se aplica típicamente a las extensiones que tienen funciones o constantes que pueden no existir en algunos sistemas.</target>
        </trans-unit>
        <trans-unit id="6f0ffd2574e55bd73781b2f238993d92b6b53578" translate="yes" xml:space="preserve">
          <source>In spite of its name,</source>
          <target state="translated">A pesar de su nombre,</target>
        </trans-unit>
        <trans-unit id="3a8cbd2876234fb0eafe4d9966f4f375e97df144" translate="yes" xml:space="preserve">
          <source>In such cases, to force an additional variable to be declared together with declarations of other variables, place the declaration into a PREINIT: section. The PREINIT: keyword may be used one or more times within an XSUB.</source>
          <target state="translated">En tales casos,para forzar a que se declare una variable adicional junto con las declaraciones de otras variables,coloque la declaración en una sección PREINIT:.La palabra clave PREINIT:puede ser usada una o más veces dentro de un XSUB.</target>
        </trans-unit>
        <trans-unit id="ac9198f5929b9dd8df4d3b09d9577116cbbad276" translate="yes" xml:space="preserve">
          <source>In such cases, you are advised to either split the test file into smaller ones, or use a reverse approach, doing &quot;normal&quot; (code) compares and triggering &lt;code&gt;fail()&lt;/code&gt; should anything go unexpected.</source>
          <target state="translated">En tales casos, se recomienda dividir el archivo de prueba en archivos m&amp;aacute;s peque&amp;ntilde;os o usar un enfoque inverso, haciendo comparaciones &quot;normales&quot; (c&amp;oacute;digo) y activando &lt;code&gt;fail()&lt;/code&gt; si algo sale inesperado.</target>
        </trans-unit>
        <trans-unit id="a4b3a6172283064c4d2c38bcdfc1abf019578af1" translate="yes" xml:space="preserve">
          <source>In summary, Perl now normally treats non-Unicode code points as typical Unicode unassigned code points for regular expression matches, raising a warning only when it is arguable what the result should be. However, if this warning has been made fatal, it isn't skipped.</source>
          <target state="translated">En resumen,Perl ahora trata normalmente los puntos de código no Unicode como típicos puntos de código no asignados Unicode para coincidencias de expresiones regulares,levantando una advertencia sólo cuando es discutible cuál debería ser el resultado.Sin embargo,si esta advertencia se ha hecho fatal,no se salta.</target>
        </trans-unit>
        <trans-unit id="bdfe847eef52d0f5e340cab498d8b20a1e1ac3a3" translate="yes" xml:space="preserve">
          <source>In summary, a compiler backend module should be called &quot;B::Foo&quot; for some foo and live in the appropriate directory for that name. It should define a function called &lt;code&gt;compile&lt;/code&gt; . When the user types</source>
          <target state="translated">En resumen, un m&amp;oacute;dulo de backend del compilador deber&amp;iacute;a llamarse &quot;B :: Foo&quot; para algunos foo y vivir en el directorio apropiado para ese nombre. Deber&amp;iacute;a definir una funci&amp;oacute;n llamada &lt;code&gt;compile&lt;/code&gt; . Cuando el usuario escribe</target>
        </trans-unit>
        <trans-unit id="fc74db358d542b3438f19ea437ddcca2306a63f1" translate="yes" xml:space="preserve">
          <source>In summary, local() doesn't make what you think of as private, local variables. It gives a global variable a temporary value. my() is what you're looking for if you want private variables.</source>
          <target state="translated">En resumen,local()no hace lo que usted piensa que son variables privadas,locales.Le da a una variable global un valor temporal.my()es lo que buscas si quieres variables privadas.</target>
        </trans-unit>
        <trans-unit id="ec6a62285f67e2d7161b800ebd3c834d396ca9bd" translate="yes" xml:space="preserve">
          <source>In summary:</source>
          <target state="translated">En resumen:</target>
        </trans-unit>
        <trans-unit id="f27d5775b98cc1edc00b71d0a359c25acea44018" translate="yes" xml:space="preserve">
          <source>In telephony, the temporary electrical circuit between the caller&amp;rsquo;s and the callee&amp;rsquo;s phone. In networking, the same kind of temporary circuit between a &lt;b&gt;client&lt;/b&gt; and a &lt;b&gt;server&lt;/b&gt;.</source>
          <target state="translated">En telefon&amp;iacute;a, el circuito el&amp;eacute;ctrico temporal entre el tel&amp;eacute;fono de la persona que llama y el de la persona que llama. En redes, el mismo tipo de circuito temporal entre un &lt;b&gt;cliente&lt;/b&gt; y un &lt;b&gt;servidor&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="8a961ce11a5972421c4f26b07fe69c91b0c3c7f5" translate="yes" xml:space="preserve">
          <source>In the .xs file, there's now a #include directive with the absolute path to the mylib.h header file. We changed this to a relative path so that we could move the extension directory if we wanted to.</source>
          <target state="translated">En el archivo .xs,ahora hay una directiva #include con la ruta absoluta al archivo de cabecera mylib.h.Cambiamos esto a una ruta relativa para poder mover el directorio de extensión si queremos.</target>
        </trans-unit>
        <trans-unit id="f2ed93444f2e4f61ea8ed89fb84f5492a5e66658" translate="yes" xml:space="preserve">
          <source>In the 5.9.x development version of perl you can &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re Debug =&amp;gt; 'PARSE'&lt;/code&gt; to see some trace information about the parse process. We will start with some simple patterns and build up to more complex patterns.</source>
          <target state="translated">En la versi&amp;oacute;n de desarrollo 5.9.x de perl, puede &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re Debug =&amp;gt; 'PARSE'&lt;/code&gt; para ver informaci&amp;oacute;n de seguimiento sobre el proceso de an&amp;aacute;lisis. Comenzaremos con algunos patrones simples y avanzaremos hasta patrones m&amp;aacute;s complejos.</target>
        </trans-unit>
        <trans-unit id="695cc6d82e9a098f429aaf4feaee8cd47933f5d7" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Encode&lt;/code&gt; module, &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; is actually a canonical name for &lt;code&gt;&quot;utf-8-strict&quot;&lt;/code&gt; . That hyphen between the &lt;code&gt;&quot;UTF&quot;&lt;/code&gt; and the &lt;code&gt;&quot;8&quot;&lt;/code&gt; is critical; without it, &lt;code&gt;Encode&lt;/code&gt; goes &quot;liberal&quot; and (perhaps overly-)permissive:</source>
          <target state="translated">En el m&amp;oacute;dulo &lt;code&gt;Encode&lt;/code&gt; , &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; es en realidad un nombre can&amp;oacute;nico para &lt;code&gt;&quot;utf-8-strict&quot;&lt;/code&gt; . Ese gui&amp;oacute;n entre el &lt;code&gt;&quot;UTF&quot;&lt;/code&gt; y el &lt;code&gt;&quot;8&quot;&lt;/code&gt; es fundamental; sin &amp;eacute;l, &lt;code&gt;Encode&lt;/code&gt; se vuelve &quot;liberal&quot; y (quiz&amp;aacute;s demasiado) permisivo:</target>
        </trans-unit>
        <trans-unit id="b4feedfc56c9ca92e3c18dcd179dd65dfefb5217" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;SvPV&lt;/code&gt; macro, the length of the string returned is placed into the variable &lt;code&gt;len&lt;/code&gt; (this is a macro, so you do</source>
          <target state="translated">En la macro &lt;code&gt;SvPV&lt;/code&gt; , la longitud de la cadena devuelta se coloca en la variable &lt;code&gt;len&lt;/code&gt; (esta es una macro, as&amp;iacute; que lo hace</target>
        </trans-unit>
        <trans-unit id="070901afbf1f09255274e8877eb8bc2c70b45164" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; form,</source>
          <target state="translated">En la forma &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="95cc687da96e0b7f7623a95a00b37de925f9f2e9" translate="yes" xml:space="preserve">
          <source>In the C part of the XS file (above the first MODULE line) you have</source>
          <target state="translated">En la parte C del archivo XS (encima de la primera línea del MÓDULO)tienes</target>
        </trans-unit>
        <trans-unit id="9da81592ea409347d5f06bd8bb3e9dfa81794242" translate="yes" xml:space="preserve">
          <source>In the RE above, which is intentionally obfuscated for illustration, the delimiter is &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;, the modifier is &lt;code&gt;mx&lt;/code&gt; , and after delimiter-removal the RE is the same as for &lt;code&gt;m/ ^ a \s* b /mx&lt;/code&gt; . There's more than one reason you're encouraged to restrict your delimiters to non-alphanumeric, non-whitespace choices.</source>
          <target state="translated">En el RE anterior, que est&amp;aacute; ofuscado intencionalmente para ilustrar, el delimitador es &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; , el modificador es &lt;code&gt;mx&lt;/code&gt; , y despu&amp;eacute;s de eliminar el delimitador, el RE es el mismo que para &lt;code&gt;m/ ^ a \s* b /mx&lt;/code&gt; . Hay m&amp;aacute;s de una raz&amp;oacute;n por la que le recomendamos que restrinja sus delimitadores a opciones que no sean alfanum&amp;eacute;ricas ni espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="e13a699e1847e4e4560a850a3ff6592656db6884" translate="yes" xml:space="preserve">
          <source>In the above &quot;TAP&quot;, the second and fourth lines will generate &quot;Unknown&quot; tokens.</source>
          <target state="translated">En el &quot;TAP&quot; anterior,la segunda y la cuarta línea generarán fichas &quot;Desconocidas&quot;.</target>
        </trans-unit>
        <trans-unit id="058e91307a10961fd993a819105cb638818d3bdd" translate="yes" xml:space="preserve">
          <source>In the above [A, C] example, the &lt;code&gt;STORABLE_freeze&lt;/code&gt; hook could return:</source>
          <target state="translated">En el ejemplo [A, C] anterior, el gancho &lt;code&gt;STORABLE_freeze&lt;/code&gt; podr&amp;iacute;a devolver:</target>
        </trans-unit>
        <trans-unit id="eb159de765838e35dcdde7356fd1bd005beb7684" translate="yes" xml:space="preserve">
          <source>In the above, the threads object is returned to the parent thread in scalar context, and the thread's entry point function &lt;code&gt;foo&lt;/code&gt; will be called in list (array) context such that the parent thread can receive a list (array) from the &lt;code&gt;-&amp;gt;join()&lt;/code&gt; call. (&lt;code&gt;'array'&lt;/code&gt; is synonymous with &lt;code&gt;'list'&lt;/code&gt; .)</source>
          <target state="translated">En lo anterior, el objeto de subprocesos se devuelve al subproceso principal en el contexto escalar, y la funci&amp;oacute;n de punto de entrada del subproceso &lt;code&gt;foo&lt;/code&gt; se llamar&amp;aacute; en el contexto de lista (matriz) de modo que el subproceso principal pueda recibir una lista (matriz) de la &lt;code&gt;-&amp;gt;join()&lt;/code&gt; llamar. ( &lt;code&gt;'array'&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;'list'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d73b10ae1520507352b424e24dd93e5f334c96c" translate="yes" xml:space="preserve">
          <source>In the above, your &lt;code&gt;frobnicate&lt;/code&gt; function has been changed to be made aware of whether or not it's dealing with UTF-8 data, so that it can handle the string appropriately.</source>
          <target state="translated">En lo anterior, su funci&amp;oacute;n &lt;code&gt;frobnicate&lt;/code&gt; se ha cambiado para saber si se trata o no de datos UTF-8, de modo que pueda manejar la cadena de forma adecuada.</target>
        </trans-unit>
        <trans-unit id="e3c7cb8befa26cf8853246bc9e4f9d7c53539559" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_COLLATE&lt;/code&gt; chooses the collation (sorting) locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_COLLATE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the collation locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_COLLATE&lt;/code&gt; elige la ubicaci&amp;oacute;n de colaci&amp;oacute;n (clasificaci&amp;oacute;n). En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_COLLATE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional de clasificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="15ce031d9fce06ed575c3914c8c9ea6101622d1e" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; chooses the character type locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the character type locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_CTYPE&lt;/code&gt; elige la configuraci&amp;oacute;n regional del tipo de car&amp;aacute;cter. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_CTYPE&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional del tipo de car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="6468a6eaf61ca1746bc5af34d7e2d7db949b3755" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_MONETARY&lt;/code&gt; chooses the monetary formatting locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_MONETARY&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the monetary formatting locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_MONETARY&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato monetario. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_MONETARY&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato monetario.</target>
        </trans-unit>
        <trans-unit id="aa4035e23872d9d83606fa0ea98c9a044e6d0674" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_NUMERIC&lt;/code&gt; chooses the numeric format locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_NUMERIC&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the numeric format.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_NUMERIC&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato num&amp;eacute;rico. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_NUMERIC&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige el formato num&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="6ab8079d22785df117a0b766ea8b7c3baae6e9c3" translate="yes" xml:space="preserve">
          <source>In the absence of &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_TIME&lt;/code&gt; chooses the date and time formatting locale. In the absence of both &lt;code&gt;LC_ALL&lt;/code&gt; and &lt;code&gt;LC_TIME&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; chooses the date and time formatting locale.</source>
          <target state="translated">En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; , &lt;code&gt;LC_TIME&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato de fecha y hora. En ausencia de &lt;code&gt;LC_ALL&lt;/code&gt; y &lt;code&gt;LC_TIME&lt;/code&gt; , &lt;code&gt;LANG&lt;/code&gt; elige la configuraci&amp;oacute;n regional de formato de fecha y hora.</target>
        </trans-unit>
        <trans-unit id="68e71f53c7f8acf89933bfc63a04da9641a2aa37" translate="yes" xml:space="preserve">
          <source>In the absence of parentheses, the precedence of list operators such as &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; is either very high or very low depending on whether you are looking at the left side or the right side of the operator. For example, in</source>
          <target state="translated">En ausencia de par&amp;eacute;ntesis, la prioridad de los operadores de lista como &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; es muy alta o muy baja dependiendo de si est&amp;aacute; mirando el lado izquierdo o el lado derecho del operador. Por ejemplo, en</target>
        </trans-unit>
        <trans-unit id="8e8c77934a4391ccf6a1b211036cc4430a6aec4a" translate="yes" xml:space="preserve">
          <source>In the argument hashref,</source>
          <target state="translated">En el argumento hashref,</target>
        </trans-unit>
        <trans-unit id="c8faecb0e00885cd9d3471fff022824b0e193793" translate="yes" xml:space="preserve">
          <source>In the beginning there was ASCII, the &quot;American Standard Code for Information Interchange&quot;, which works quite well for Americans with their English alphabet and dollar-denominated currency. But it doesn't work so well even for other English speakers, who may use different currencies, such as the pound sterling (as the symbol for that currency is not in ASCII); and it's hopelessly inadequate for many of the thousands of the world's other languages.</source>
          <target state="translated">Al principio existía el ASCII,el &quot;Código Estándar Americano para el Intercambio de Información&quot;,que funciona bastante bien para los americanos con su alfabeto inglés y su moneda denominada en dólares.Pero no funciona tan bien ni siquiera para otros angloparlantes,que pueden usar diferentes monedas,como la libra esterlina (ya que el símbolo de esa moneda no está en ASCII);y es irremediablemente inadecuado para muchos de los miles de otros idiomas del mundo.</target>
        </trans-unit>
        <trans-unit id="4d58fb76f14dae3b712c2d1ef16b33d41abd7aa5" translate="yes" xml:space="preserve">
          <source>In the case of &lt;b&gt;-M&lt;/b&gt; and &lt;b&gt;-m&lt;/b&gt;, this is an error because those options are not intended for use inside scripts. Use the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; pragma instead.</source>
          <target state="translated">En el caso de &lt;b&gt;-M&lt;/b&gt; y &lt;b&gt;-m&lt;/b&gt; , esto es un error porque esas opciones no est&amp;aacute;n dise&amp;ntilde;adas para usarse dentro de scripts. Utilice el pragma de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="468d95254e2569de4c93c44e90ecaaab6e1c8a96" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;(normalization =&amp;gt; &quot;prenormalized&quot;)&lt;/code&gt; , any normalization is not performed, but discontiguous contractions with combining characters are performed. Therefore &lt;code&gt;(normalization =&amp;gt; 'prenormalized', preprocess =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; { NFD(&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;) })&lt;/code&gt;&lt;b&gt;is&lt;/b&gt; equivalent to &lt;code&gt;(normalization =&amp;gt; 'NFD')&lt;/code&gt; . If source strings are finely prenormalized, &lt;code&gt;(normalization =&amp;gt; 'prenormalized')&lt;/code&gt; may save time for normalization.</source>
          <target state="translated">En el caso de &lt;code&gt;(normalization =&amp;gt; &quot;prenormalized&quot;)&lt;/code&gt; , no se realiza ninguna normalizaci&amp;oacute;n, pero se realizan contracciones no contiguas con caracteres combinados. Por lo tanto &lt;code&gt;(normalization =&amp;gt; 'prenormalized', preprocess =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; { NFD(&lt;a href=&quot;../functions/shift&quot;&gt;shift&lt;/a&gt;) })&lt;/code&gt; &lt;b&gt;es&lt;/b&gt; equivalente a &lt;code&gt;(normalization =&amp;gt; 'NFD')&lt;/code&gt; . Si las cadenas de origen est&amp;aacute;n finamente prenormalizadas, &lt;code&gt;(normalization =&amp;gt; 'prenormalized')&lt;/code&gt; puede ahorrar tiempo para la normalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5830f7641c2c9f00de57771005c708cf9a4d5c74" translate="yes" xml:space="preserve">
          <source>In the case of a perl test suite, typically</source>
          <target state="translated">En el caso de un conjunto de pruebas de perl,típicamente</target>
        </trans-unit>
        <trans-unit id="93b5501796f0c8e106f09c3c3a171aba6b8b3835" translate="yes" xml:space="preserve">
          <source>In the case of a shared array, all the array's elements are shared, and for a shared hash, all the keys and values are shared. This places restrictions on what may be assigned to shared array and hash elements: only simple values or references to shared variables are allowed - this is so that a private variable can't accidentally become shared. A bad assignment will cause the thread to die. For example:</source>
          <target state="translated">En el caso de una matriz compartida,todos los elementos de la matriz son compartidos,y para un hash compartido,todas las claves y valores son compartidos.Esto impone restricciones sobre lo que puede asignarse a los elementos de la matriz y el hash compartidos:sólo se permiten valores simples o referencias a variables compartidas,de modo que una variable privada no pueda ser compartida accidentalmente.Una mala asignación causará que el hilo muera.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2e771b6edcf0a67e48248188d99cc8c1ee77f6d9" translate="yes" xml:space="preserve">
          <source>In the case of a string, &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; assumes you are wanting to load a file. But in the case of a bareword, it assumes you mean a module.</source>
          <target state="translated">En el caso de una cadena, &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; asume que desea cargar un archivo. Pero en el caso de una palabra b&amp;aacute;sica, se supone que se refiere a un m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="92d133184cc1d94941d92f9ddbb74be254d7536c" translate="yes" xml:space="preserve">
          <source>In the case of an unrestricted hash this will be equivalent to</source>
          <target state="translated">En el caso de un hash no restringido,esto equivaldrá a</target>
        </trans-unit>
        <trans-unit id="9c7996f6bbe611631e0062a5b0c8688fa0df75c4" translate="yes" xml:space="preserve">
          <source>In the case of an unrestricted hash this will return an empty list.</source>
          <target state="translated">En el caso de un hachís sin restricciones,esto devolverá una lista vacía.</target>
        </trans-unit>
        <trans-unit id="bbcb89949ef30fa331653e26c292cc6bfd5402d5" translate="yes" xml:space="preserve">
          <source>In the case of branching constructs like the following:</source>
          <target state="translated">En el caso de las construcciones de ramificación como las siguientes:</target>
        </trans-unit>
        <trans-unit id="235ed9f8205c1cb0e0f0c89543ab0c301b45cc8b" translate="yes" xml:space="preserve">
          <source>In the case where bsd_glob() has found some matching paths, but is interrupted by an error, it will return a list of filenames &lt;b&gt;and&lt;/b&gt; set &amp;amp;File::Glob::ERROR.</source>
          <target state="translated">En el caso de que bsd_glob () haya encontrado algunas rutas coincidentes, pero sea interrumpido por un error, devolver&amp;aacute; una lista de nombres de archivo &lt;b&gt;y&lt;/b&gt; establecer&amp;aacute; &amp;amp; File :: Glob :: ERROR.</target>
        </trans-unit>
        <trans-unit id="ab44e54a843289d8fb48be15296e74831fd77123" translate="yes" xml:space="preserve">
          <source>In the cases of NFD, NFKD, and FCD, the answer must be either &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt; . The answer &lt;code&gt;MAYBE&lt;/code&gt; may be returned in the cases of NFC, NFKC, and FCC.</source>
          <target state="translated">En los casos de NFD, NFKD y FCD, la respuesta debe ser &lt;code&gt;YES&lt;/code&gt; o &lt;code&gt;NO&lt;/code&gt; . La respuesta &lt;code&gt;MAYBE&lt;/code&gt; se pueda devolver en los casos de NFC, NFKC y FCC.</target>
        </trans-unit>
        <trans-unit id="94e0ab2727afbd4185da2de81e38250408bd5cc4" translate="yes" xml:space="preserve">
          <source>In the code below, the use of &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; can all produce a &lt;code&gt;&quot;Useless use of xxx in void context&quot;&lt;/code&gt; warning.</source>
          <target state="translated">En el c&amp;oacute;digo siguiente, el uso de &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; pueden producir una advertencia de &lt;code&gt;&quot;Useless use of xxx in void context&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fd1596cdd97dc35baf217614ea25fccb283e4de" translate="yes" xml:space="preserve">
          <source>In the consideration of speed against memory requirements the balance has been tilted in favor of faster execution. This has influenced the way C compilers allocate memory for structures: On architectures where a 16-bit or 32-bit operand can be moved faster between places in memory, or to or from a CPU register, if it is aligned at an even or multiple-of-four or even at a multiple-of eight address, a C compiler will give you this speed benefit by stuffing extra bytes into structures. If you don't cross the C shoreline this is not likely to cause you any grief (although you should care when you design large data structures, or you want your code to be portable between architectures (you do want that, don't you?)).</source>
          <target state="translated">En la consideración de la velocidad contra los requerimientos de memoria la balanza se ha inclinado a favor de una ejecución más rápida.Esto ha influido en la forma en que los compiladores C asignan la memoria para las estructuras:En las arquitecturas en las que un operando de 16 o 32 bits puede moverse más rápidamente entre lugares de la memoria,o hacia o desde un registro de la CPU,si está alineado en una dirección par o múltiplo de cuatro o incluso en un múltiplo de ocho,un compilador de C le dará este beneficio de velocidad rellenando las estructuras con bytes adicionales.Si no cruza la línea de costa de C,no es probable que esto le cause ningún problema (aunque debería preocuparse cuando diseña grandes estructuras de datos,o quiere que su código sea portátil entre arquitecturas (¿lo quiere,verdad?)).</target>
        </trans-unit>
        <trans-unit id="9d33a076ef77a2ea3c1cd018606852167138e6c8" translate="yes" xml:space="preserve">
          <source>In the context of the</source>
          <target state="translated">En el contexto de la</target>
        </trans-unit>
        <trans-unit id="d491c48b25f3ad65e82b4c5c2097be0b50a9588c" translate="yes" xml:space="preserve">
          <source>In the current implementation, scalar constants are actually inlinable subroutines. As of version 5.004 of Perl, the appropriate scalar constant is inserted directly in place of some subroutine calls, thereby saving the overhead of a subroutine call. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for details about how and when this happens.</source>
          <target state="translated">En la implementaci&amp;oacute;n actual, las constantes escalares son en realidad subrutinas insertables. A partir de la versi&amp;oacute;n 5.004 de Perl, la constante escalar apropiada se inserta directamente en lugar de algunas llamadas de subrutina, ahorrando as&amp;iacute; la sobrecarga de una llamada de subrutina. Consulte &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Funciones constantes en perlsub&lt;/a&gt; para obtener detalles sobre c&amp;oacute;mo y cu&amp;aacute;ndo sucede esto.</target>
        </trans-unit>
        <trans-unit id="3c0455a3b2b53d95f4e20ec0b4340a717b68f76c" translate="yes" xml:space="preserve">
          <source>In the default case where no value is explicitly assigned to &lt;code&gt;fallback&lt;/code&gt; , magic autogeneration is enabled.</source>
          <target state="translated">En el caso predeterminado en el que no se asigna expl&amp;iacute;citamente ning&amp;uacute;n valor al &lt;code&gt;fallback&lt;/code&gt; , la generaci&amp;oacute;n autom&amp;aacute;tica m&amp;aacute;gica est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="9e4e78aa2b33a6d6dac51bbc3211d37de72733b0" translate="yes" xml:space="preserve">
          <source>In the default configuration, options names may be abbreviated to uniqueness, case does not matter, and a single dash is sufficient, even for long option names. Also, options may be placed between non-option arguments. See &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuring Getopt::Long&lt;/a&gt; for more details on how to configure Getopt::Long.</source>
          <target state="translated">En la configuraci&amp;oacute;n predeterminada, los nombres de las opciones se pueden abreviar a unicidad, el caso no importa y un solo gui&amp;oacute;n es suficiente, incluso para nombres de opciones largos. Adem&amp;aacute;s, las opciones se pueden colocar entre argumentos que no sean de opci&amp;oacute;n. Consulte &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuraci&amp;oacute;n de Getopt :: Long&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre c&amp;oacute;mo configurar Getopt :: Long.</target>
        </trans-unit>
        <trans-unit id="e72101fd159fd0afaf983f558f5b87febb7113ce" translate="yes" xml:space="preserve">
          <source>In the description it is mentioned that</source>
          <target state="translated">En la descripción se menciona que</target>
        </trans-unit>
        <trans-unit id="ef03d8c00322da2ed4dc98f0803a382ee30a4ed1" translate="yes" xml:space="preserve">
          <source>In the diagram, the further right you go the more deeply nested the scope is. It is only when control is back with perl on the extreme left of the diagram that you will have dropped back to the enclosing scope and any temporaries you have left hanging around will be freed.</source>
          <target state="translated">En el diagrama,cuanto más a la derecha vayas,más profundamente anidado estará el telescopio.Sólo cuando el control esté de vuelta con el perl en el extremo izquierdo del diagrama,habrás vuelto al telescopio adjunto y cualquier temporal que hayas dejado colgando será liberado.</target>
        </trans-unit>
        <trans-unit id="6f416a980a416e375bc66bc2d4fa36e45d3dee04" translate="yes" xml:space="preserve">
          <source>In the event that your XS code may need the underlying &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale, there are macros available to access this; see &lt;a href=&quot;perlapi#Locale-related-functions-and-macros&quot;&gt;Locale-related functions and macros in perlapi&lt;/a&gt;.</source>
          <target state="translated">En el caso de que su c&amp;oacute;digo XS pueda necesitar la &lt;code&gt;LC_NUMERIC&lt;/code&gt; regional LC_NUMERIC subyacente , hay macros disponibles para acceder a esto; consulte &lt;a href=&quot;perlapi#Locale-related-functions-and-macros&quot;&gt;Funciones y macros relacionadas con la configuraci&amp;oacute;n regional en perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf76bf6bac3fdd00f94042b70f25cd2c0127da6a" translate="yes" xml:space="preserve">
          <source>In the example above $DB_HASH is actually a pre-defined reference to a hash object. &lt;b&gt;DB_File&lt;/b&gt; has three of these pre-defined references. Apart from $DB_HASH, there is also $DB_BTREE and $DB_RECNO.</source>
          <target state="translated">En el ejemplo anterior, $ DB_HASH es en realidad una referencia predefinida a un objeto hash. &lt;b&gt;DB_File&lt;/b&gt; tiene tres de estas referencias predefinidas. Aparte de $ DB_HASH, tambi&amp;eacute;n hay $ DB_BTREE y $ DB_RECNO.</target>
        </trans-unit>
        <trans-unit id="383bad82dbf36df5fcbc2607474fc2833874c49f" translate="yes" xml:space="preserve">
          <source>In the example above, no file in</source>
          <target state="translated">En el ejemplo anterior,ningún archivo en</target>
        </trans-unit>
        <trans-unit id="a6fdb80f186445ea957d140c9ee93d85c7f7bc67" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; method returns as soon as the thread ends. In addition to waiting for a thread to finish and gathering up any values that the thread might have returned, &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; also performs any OS cleanup necessary for the thread. That cleanup might be important, especially for long-running programs that spawn lots of threads. If you don't want the return values and don't want to wait for the thread to finish, you should call the &lt;code&gt;detach()&lt;/code&gt; method instead, as described next.</source>
          <target state="translated">En el ejemplo anterior, el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; regresa tan pronto como termina el hilo. Adem&amp;aacute;s de esperar a que finalice un hilo y recopilar los valores que el hilo podr&amp;iacute;a haber devuelto, &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n realiza cualquier limpieza del sistema operativo necesaria para el hilo. Esa limpieza puede ser importante, especialmente para programas de larga ejecuci&amp;oacute;n que generan muchos hilos. Si no desea los valores de retorno y no desea esperar a que termine el hilo, debe llamar al m&amp;eacute;todo &lt;code&gt;detach()&lt;/code&gt; lugar, como se describe a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e4fb9b67eb5a1d7e86fa97df408aad4ebc6c2e68" translate="yes" xml:space="preserve">
          <source>In the example above, the true parent does not want to write to the WRITER filehandle, so it closes it. However, because WRITER was opened using &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , it has a special behavior: closing it calls waitpid() (see &lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;), which waits for the subprocess to exit. If the child process ends up waiting for something happening in the section marked &quot;do something else&quot;, you have deadlock.</source>
          <target state="translated">En el ejemplo anterior, el padre verdadero no quiere escribir en el identificador de archivo WRITER, por lo que lo cierra. Sin embargo, debido a que WRITER se abri&amp;oacute; usando &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; FH, &quot;|-&quot;&lt;/code&gt; , tiene un comportamiento especial: al cerrarlo, llama a waitpid () (ver &lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt; ), que espera a que el subproceso salga. Si el proceso hijo termina esperando a que suceda algo en la secci&amp;oacute;n marcada &quot;hacer algo m&amp;aacute;s&quot;, tiene un punto muerto.</target>
        </trans-unit>
        <trans-unit id="e18ac50c69f2e5daf082fad97b93479b32118e7a" translate="yes" xml:space="preserve">
          <source>In the example above, we've created a global variable to temporarily store the computed value of our eval'ed expression. It is also possible and in most cases a better strategy to fetch the return value from</source>
          <target state="translated">En el ejemplo anterior,hemos creado una variable global para almacenar temporalmente el valor calculado de nuestra expresión evaluada.También es posible,y en la mayoría de los casos una mejor estrategia para obtener el valor de retorno de</target>
        </trans-unit>
        <trans-unit id="215f011f187069670df6baefac97d219cfd4d544" translate="yes" xml:space="preserve">
          <source>In the example above, you can see that we passed &lt;code&gt;isa =&amp;gt; 'Bool'&lt;/code&gt; to &lt;code&gt;has()&lt;/code&gt; when creating our &lt;code&gt;is_on&lt;/code&gt; attribute. This tells &lt;code&gt;Moose&lt;/code&gt; that this attribute must be a boolean value. If we try to set it to an invalid value, our code will throw an error.</source>
          <target state="translated">En el ejemplo anterior, puede ver que pasamos &lt;code&gt;isa =&amp;gt; 'Bool'&lt;/code&gt; a &lt;code&gt;has()&lt;/code&gt; al crear nuestro atributo &lt;code&gt;is_on&lt;/code&gt; . Esto le dice a &lt;code&gt;Moose&lt;/code&gt; que este atributo debe ser un valor booleano. Si intentamos establecerlo en un valor no v&amp;aacute;lido, nuestro c&amp;oacute;digo arrojar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="7091546bde153dd7889f18e20c48c8bc55eaa567" translate="yes" xml:space="preserve">
          <source>In the example filter, the object (&lt;code&gt;$ref&lt;/code&gt; ) is blessed just like any other Perl object. Our example uses an anonymous array, but this isn't a requirement. Because this example doesn't need to store any context information, we could have used a scalar or hash reference just as well. The next section demonstrates context data.</source>
          <target state="translated">En el filtro de ejemplo, el objeto ( &lt;code&gt;$ref&lt;/code&gt; ) est&amp;aacute; bendecido como cualquier otro objeto de Perl. Nuestro ejemplo usa una matriz an&amp;oacute;nima, pero esto no es un requisito. Debido a que este ejemplo no necesita almacenar ninguna informaci&amp;oacute;n de contexto, tambi&amp;eacute;n podr&amp;iacute;amos haber usado una referencia escalar o hash. La siguiente secci&amp;oacute;n muestra datos de contexto.</target>
        </trans-unit>
        <trans-unit id="7cad79aaf9d1ce6eabd545156fa679d72897f6d5" translate="yes" xml:space="preserve">
          <source>In the example script below, the &lt;code&gt;match&lt;/code&gt; sub uses this feature to find and print the first matching key/value pair given a partial key.</source>
          <target state="translated">En el script de ejemplo a continuaci&amp;oacute;n, el sub de &lt;code&gt;match&lt;/code&gt; utiliza esta funci&amp;oacute;n para buscar e imprimir el primer par clave / valor coincidente con una clave parcial.</target>
        </trans-unit>
        <trans-unit id="874b0ca5f6d74bc36f1a8bf750e4d758cb8b0d1e" translate="yes" xml:space="preserve">
          <source>In the examples above, we assigned the filehandle to a scalar variable before using it. That is because only simple scalar variables, not expressions or subscripts of hashes or arrays, can be used with built-ins like &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the diamond operator. Using something other than a simple scalar variable as a filehandle is illegal and won't even compile:</source>
          <target state="translated">En los ejemplos anteriores, asignamos el identificador de archivo a una variable escalar antes de usarlo. Esto se debe a que solo se pueden usar variables escalares simples, no expresiones o sub&amp;iacute;ndices de hashes o matrices, con elementos integrados como &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; o el operador de diamante. Usar algo que no sea una variable escalar simple como un identificador de archivo es ilegal y ni siquiera se compilar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="1d5cb1050428e1b3c39a6dbeac5fa82c4e3ee30c" translate="yes" xml:space="preserve">
          <source>In the examples given to date, any temporaries created in the callback (i.e., parameters passed on the stack to the</source>
          <target state="translated">En los ejemplos dados hasta la fecha,cualquier temporal creado en la llamada de retorno (es decir,los parámetros pasados en la pila a la</target>
        </trans-unit>
        <trans-unit id="52df5ff09c57ff6bd4a65152023282e8e3fdf423" translate="yes" xml:space="preserve">
          <source>In the extended usage form, the references to be dumped can be given user-specified names. If a name begins with a &lt;code&gt;*&lt;/code&gt; , the output will describe the dereferenced type of the supplied reference for hashes and arrays, and coderefs. Output of names will be avoided where possible if the &lt;code&gt;Terse&lt;/code&gt; flag is set.</source>
          <target state="translated">En el formulario de uso extendido, las referencias que se van a descargar pueden recibir nombres especificados por el usuario. Si un nombre comienza con &lt;code&gt;*&lt;/code&gt; , la salida describir&amp;aacute; el tipo desreferenciado de la referencia proporcionada para hashes y matrices, y coderefs. La salida de nombres se evitar&amp;aacute; siempre que sea posible si se establece la bandera &lt;code&gt;Terse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e093183cde30fbf5834bc8c2f2306668f0a93ab" translate="yes" xml:space="preserve">
          <source>In the eyes of the operating system, pseudo-processes created via the fork() emulation are simply threads in the same process. This means that any process-level limits imposed by the operating system apply to all pseudo-processes taken together. This includes any limits imposed by the operating system on the number of open file, directory and socket handles, limits on disk space usage, limits on memory size, limits on CPU utilization etc.</source>
          <target state="translated">A los ojos del sistema operativo,los pseudo-procesos creados mediante la emulación de fork()son simplemente hilos en el mismo proceso.Esto significa que cualquier límite a nivel de proceso impuesto por el sistema operativo se aplica a todos los seudoprocesos tomados en conjunto.Esto incluye cualquier límite impuesto por el sistema operativo en el número de archivos abiertos,directorios y manejadores de sockets,límites en el uso de espacio en disco,límites en el tamaño de la memoria,límites en la utilización de la CPU,etc.</target>
        </trans-unit>
        <trans-unit id="c87855f737ebcf54612bd0d985e7951567552bdc" translate="yes" xml:space="preserve">
          <source>In the final example above, the first ASCII Hex digit is code point 48, the character &quot;0&quot;, and all code points from it through 57 (a &quot;9&quot;) are ASCII hex digits. Code points 58 through 64 aren't, but 65 (an &quot;A&quot;) through 70 (an &quot;F&quot;) are, as are 97 (&quot;a&quot;) through 102 (&quot;f&quot;). 103 starts a range of code points that aren't ASCII hex digits. That range extends to infinity, which on your computer can be found in the variable &lt;code&gt;$Unicode::UCD::MAX_CP&lt;/code&gt; . (This variable is as close to infinity as Perl can get on your platform, and may be too high for some operations to work; you may wish to use a smaller number for your purposes.)</source>
          <target state="translated">En el ejemplo final anterior, el primer d&amp;iacute;gito hexadecimal ASCII es el punto de c&amp;oacute;digo 48, el car&amp;aacute;cter &quot;0&quot; y todos los puntos de c&amp;oacute;digo desde &amp;eacute;l hasta el 57 (un &quot;9&quot;) son d&amp;iacute;gitos hexadecimales ASCII. Los puntos de c&amp;oacute;digo 58 a 64 no lo son, pero 65 (una &quot;A&quot;) a 70 (una &quot;F&quot;) lo son, al igual que 97 (&quot;a&quot;) a 102 (&quot;f&quot;). 103 inicia un rango de puntos de c&amp;oacute;digo que no son d&amp;iacute;gitos hexadecimales ASCII. Ese rango se extiende hasta el infinito, que en su computadora se puede encontrar en la variable &lt;code&gt;$Unicode::UCD::MAX_CP&lt;/code&gt; . (Esta variable es lo m&amp;aacute;s cercana al infinito que Perl puede conseguir en su plataforma, y ​​puede ser demasiado alta para que funcionen algunas operaciones; es posible que desee utilizar un n&amp;uacute;mero menor para sus prop&amp;oacute;sitos).</target>
        </trans-unit>
        <trans-unit id="acc9782ed3f3e2b680013d144689804f90d54bf6" translate="yes" xml:space="preserve">
          <source>In the first example, an error handler, the flow of control could be as follows. You have created an interface to an external library. Control can reach the external library like this</source>
          <target state="translated">En el primer ejemplo,un manejador de errores,el flujo de control podría ser el siguiente.Ha creado una interfaz con una biblioteca externa.El control puede llegar a la biblioteca externa de esta manera</target>
        </trans-unit>
        <trans-unit id="837426c8f21e7781853f5f83912529e607900661" translate="yes" xml:space="preserve">
          <source>In the first form, often referred to as a &quot;string eval&quot;, the return value of EXPR is parsed and executed as if it were a little Perl program. The value of the expression (which is itself determined within scalar context) is first parsed, and if there were no errors, executed as a block within the lexical context of the current Perl program. This means, that in particular, any outer lexical variables are visible to it, and any package variable settings or subroutine and format definitions remain afterwards.</source>
          <target state="translated">En la primera forma,a menudo llamada &quot;evaluación de cadena&quot;,el valor de retorno de EXPR es analizado y ejecutado como si fuera un pequeño programa de Perl.El valor de la expresión (que a su vez se determina en un contexto escalar)se analiza primero y,si no hay errores,se ejecuta como un bloque en el contexto léxico del programa Perl actual.Esto significa,en particular,que todas las variables léxicas externas son visibles para él,y los ajustes de las variables del paquete o las definiciones de subrutinas y formatos permanecen después.</target>
        </trans-unit>
        <trans-unit id="9907ef81620f333168bdff52969249681c5309f5" translate="yes" xml:space="preserve">
          <source>In the first form, registers an object to work with for the function &lt;code&gt;id_2obj()&lt;/code&gt; . In the second form, it additionally marks the given hashrefs down for garbage collection. This means that when the object goes out of scope, any entries in the given hashes under the key of &lt;code&gt;id($obj)&lt;/code&gt; will be deleted from the hashes.</source>
          <target state="translated">En la primera forma, registra un objeto con el que trabajar para la funci&amp;oacute;n &lt;code&gt;id_2obj()&lt;/code&gt; . En la segunda forma, adem&amp;aacute;s marca los hashrefs dados para la recolecci&amp;oacute;n de basura. Esto significa que cuando el objeto sale del alcance, cualquier entrada en los hash dados bajo la clave de &lt;code&gt;id($obj)&lt;/code&gt; se eliminar&amp;aacute; de los hash.</target>
        </trans-unit>
        <trans-unit id="886a42840b4db0f0804225c4bdd1da338f8eaea4" translate="yes" xml:space="preserve">
          <source>In the first form, the anonymous hash is being blessed into the class in &lt;code&gt;$class&lt;/code&gt; . In the second form, the anonymous hash is blessed into the current package.</source>
          <target state="translated">En la primera forma, el hash an&amp;oacute;nimo est&amp;aacute; siendo bendecido en la clase en &lt;code&gt;$class&lt;/code&gt; . En la segunda forma, el hash an&amp;oacute;nimo se incorpora al paquete actual.</target>
        </trans-unit>
        <trans-unit id="5ba19d40237087370736921c2b055d0f9f4e8621" translate="yes" xml:space="preserve">
          <source>In the first two versions, the body of the subroutine is lexically in the main package,</source>
          <target state="translated">En las dos primeras versiones,el cuerpo de la subrutina está léxicamente en el paquete principal,</target>
        </trans-unit>
        <trans-unit id="78475acfd51fd678e0727a44ada7dcef5de0bc33" translate="yes" xml:space="preserve">
          <source>In the first version above, you let the appropriate encoding layer handle the conversion. In the second, you explicitly translate from one encoding to the other.</source>
          <target state="translated">En la primera versión de arriba,dejas que la capa de codificación apropiada se encargue de la conversión.En la segunda,traduces explícitamente de una codificación a la otra.</target>
        </trans-unit>
        <trans-unit id="2414010bede2999a6fc168db89c621d8bb7bb77d" translate="yes" xml:space="preserve">
          <source>In the following all questions and explanations regarding config variables are collected.</source>
          <target state="translated">A continuación se recogen todas las preguntas y explicaciones sobre las variables de configuración.</target>
        </trans-unit>
        <trans-unit id="33eb6a227648440eaeed500f955607df47c5aa25" translate="yes" xml:space="preserve">
          <source>In the following examples, &lt;code&gt;$pad_len&lt;/code&gt; is the length to which you wish to pad the string, &lt;code&gt;$text&lt;/code&gt; or &lt;code&gt;$num&lt;/code&gt; contains the string to be padded, and &lt;code&gt;$pad_char&lt;/code&gt; contains the padding character. You can use a single character string constant instead of the &lt;code&gt;$pad_char&lt;/code&gt; variable if you know what it is in advance. And in the same way you can use an integer in place of &lt;code&gt;$pad_len&lt;/code&gt; if you know the pad length in advance.</source>
          <target state="translated">En los siguientes ejemplos, &lt;code&gt;$pad_len&lt;/code&gt; es la longitud a la que desea rellenar la cadena, &lt;code&gt;$text&lt;/code&gt; o &lt;code&gt;$num&lt;/code&gt; contiene la cadena a rellenar y &lt;code&gt;$pad_char&lt;/code&gt; contiene el car&amp;aacute;cter de relleno. Puede utilizar una constante de cadena de un solo car&amp;aacute;cter en lugar de la variable &lt;code&gt;$pad_char&lt;/code&gt; si sabe de antemano cu&amp;aacute;l es. Y de la misma manera, puede usar un n&amp;uacute;mero entero en lugar de &lt;code&gt;$pad_len&lt;/code&gt; si conoce la longitud del pad de antemano.</target>
        </trans-unit>
        <trans-unit id="76ac42f7d8b0a7d53378ec8bb6883cc947c8612a" translate="yes" xml:space="preserve">
          <source>In the following sections, these operators are covered in precedence order.</source>
          <target state="translated">En las secciones siguientes,estos operadores se tratan en orden de precedencia.</target>
        </trans-unit>
        <trans-unit id="4b178b275b86ca37ae6642cdcf850388ebe0add6" translate="yes" xml:space="preserve">
          <source>In the following tables, numbers indicate priority. For example, the table below states that, if no implementation for &lt;code&gt;'!'&lt;/code&gt; has been defined then Perl will implement it using &lt;code&gt;'bool'&lt;/code&gt; (that is, by inverting the value returned by the method for &lt;code&gt;'bool'&lt;/code&gt; ); if boolean conversion is also unimplemented then Perl will use &lt;code&gt;'0+'&lt;/code&gt; or, failing that, &lt;code&gt;'&quot;&quot;'&lt;/code&gt; .</source>
          <target state="translated">En las siguientes tablas, los n&amp;uacute;meros indican prioridad. Por ejemplo, la siguiente tabla indica que, si no hay implementaci&amp;oacute;n para &lt;code&gt;'!'&lt;/code&gt; se ha definido, entonces Perl lo implementar&amp;aacute; usando &lt;code&gt;'bool'&lt;/code&gt; (es decir, invirtiendo el valor devuelto por el m&amp;eacute;todo para &lt;code&gt;'bool'&lt;/code&gt; ); si la conversi&amp;oacute;n booleana tampoco est&amp;aacute; implementada, Perl usar&amp;aacute; &lt;code&gt;'0+'&lt;/code&gt; o, en su defecto, &lt;code&gt;'&quot;&quot;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8a38bcdad9de0c83d52fd95f8565a94b07788e8" translate="yes" xml:space="preserve">
          <source>In the following tables:</source>
          <target state="translated">En las siguientes tablas:</target>
        </trans-unit>
        <trans-unit id="770598786b9fb05b86d05d808ab206b9dce08c07" translate="yes" xml:space="preserve">
          <source>In the form of pipe opens taking three or more arguments, if LIST is specified (extra arguments after the command name) then LIST becomes arguments to the command invoked if the platform supports it. The meaning of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with more than three arguments for non-pipe modes is not yet defined, but experimental &quot;layers&quot; may give extra LIST arguments meaning.</source>
          <target state="translated">En forma de tuber&amp;iacute;a se abre tomando tres o m&amp;aacute;s argumentos, si se especifica LIST (argumentos adicionales despu&amp;eacute;s del nombre del comando), entonces LIST se convierte en argumentos para el comando invocado si la plataforma lo admite. El significado de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; con m&amp;aacute;s de tres argumentos para los modos sin tuber&amp;iacute;a a&amp;uacute;n no est&amp;aacute; definido, pero las &quot;capas&quot; experimentales pueden dar un significado adicional a los argumentos LIST.</target>
        </trans-unit>
        <trans-unit id="351023ba55a42928810e8ea146d7f9a69c7e4007" translate="yes" xml:space="preserve">
          <source>In the form of pipe opens taking three or more arguments, if LIST is specified (extra arguments after the command name) then LIST becomes arguments to the command invoked if the platform supports it. The meaning of &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with more than three arguments for non-pipe modes is not yet defined, but experimental &quot;layers&quot; may give extra LIST arguments meaning.</source>
          <target state="translated">En forma de tuber&amp;iacute;a se abre tomando tres o m&amp;aacute;s argumentos, si se especifica LIST (argumentos adicionales despu&amp;eacute;s del nombre del comando), entonces LIST se convierte en argumentos para el comando invocado si la plataforma lo admite. El significado de &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; con m&amp;aacute;s de tres argumentos para los modos sin tuber&amp;iacute;a a&amp;uacute;n no est&amp;aacute; definido, pero las &quot;capas&quot; experimentales pueden dar un significado adicional a los argumentos LIST.</target>
        </trans-unit>
        <trans-unit id="0d9756e636c498fe9304eb168ab8f26e641d5c72" translate="yes" xml:space="preserve">
          <source>In the future, this module will likely use File::Spec for determining paths, as it does now for Mac OS (where Unix-style or Mac-style paths work, and Unix-style paths are converted properly to Mac-style paths before being added to @INC).</source>
          <target state="translated">En el futuro,es probable que este módulo utilice File::Spec para determinar las rutas,como lo hace ahora para Mac OS (donde las rutas de estilo Unix o de estilo Mac funcionan,y las rutas de estilo Unix se convierten correctamente en rutas de estilo Mac antes de ser añadidas a @INC).</target>
        </trans-unit>
        <trans-unit id="46cedf56be184729e0d91d65fc9c0d53cad92704" translate="yes" xml:space="preserve">
          <source>In the last example, the end of the string is considered a word boundary.</source>
          <target state="translated">En el último ejemplo,el final de la cadena se considera un límite de palabra.</target>
        </trans-unit>
        <trans-unit id="6405a42cdbbb08be1356ae610a2c353a3021f6e3" translate="yes" xml:space="preserve">
          <source>In the last example, the whole string was matched, but only the part inside the single quotes was grouped. With the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; operator, the matched variables &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. are immediately available for use in the replacement expression, so we use &lt;code&gt;$1&lt;/code&gt; to replace the quoted string with just what was quoted. With the global modifier, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///g&lt;/a&gt;&lt;/code&gt; will search and replace all occurrences of the regexp in the string:</source>
          <target state="translated">En el &amp;uacute;ltimo ejemplo, se hizo coincidir toda la cadena, pero solo se agrup&amp;oacute; la parte dentro de las comillas simples. Con el operador &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , las variables coincidentes &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc. est&amp;aacute;n inmediatamente disponibles para su uso en la expresi&amp;oacute;n de reemplazo, por lo que usamos &lt;code&gt;$1&lt;/code&gt; para reemplazar la cadena entre comillas con solo lo que se cit&amp;oacute;. Con el modificador global, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///g&lt;/a&gt;&lt;/code&gt; buscar&amp;aacute; y reemplazar&amp;aacute; todas las apariciones de la expresi&amp;oacute;n regular en la cadena:</target>
        </trans-unit>
        <trans-unit id="06c06ffd743a05cb45342ceadd66f34d1f6c47cc" translate="yes" xml:space="preserve">
          <source>In the last regex, the forward slash &lt;code&gt;'/'&lt;/code&gt; is also backslashed, because it is used to delimit the regex.</source>
          <target state="translated">En la &amp;uacute;ltima expresi&amp;oacute;n regular, la barra inclinada &lt;code&gt;'/'&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; invertida, porque se usa para delimitar la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="11c4a29ccb7ab2ebd1eeaf108124208b060d0f4a" translate="yes" xml:space="preserve">
          <source>In the last regexp, the forward slash &lt;code&gt;'/'&lt;/code&gt; is also backslashed, because it is used to delimit the regexp. This can lead to LTS (leaning toothpick syndrome), however, and it is often more readable to change delimiters.</source>
          <target state="translated">En la &amp;uacute;ltima expresi&amp;oacute;n regular, la barra inclinada &lt;code&gt;'/'&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; invertida, porque se usa para delimitar la expresi&amp;oacute;n regular. Sin embargo, esto puede provocar LTS (s&amp;iacute;ndrome del palillo inclinado) y, a menudo, es m&amp;aacute;s legible cambiar los delimitadores.</target>
        </trans-unit>
        <trans-unit id="3c351aa56c66843f422f8613ab5ba80764ad66e0" translate="yes" xml:space="preserve">
          <source>In the last statement, even though &lt;code&gt;'c'&lt;/code&gt; is the first character in the class, &lt;code&gt;'a'&lt;/code&gt; matches because the first character position in the string is the earliest point at which the regexp can match.</source>
          <target state="translated">En la &amp;uacute;ltima declaraci&amp;oacute;n, aunque &lt;code&gt;'c'&lt;/code&gt; es el primer car&amp;aacute;cter de la clase, &lt;code&gt;'a'&lt;/code&gt; coincide porque la posici&amp;oacute;n del primer car&amp;aacute;cter en la cadena es el punto m&amp;aacute;s temprano en el que la expresi&amp;oacute;n regular puede coincidir.</target>
        </trans-unit>
        <trans-unit id="eb7827ba059fba337cd380ecde1e864bd7488e84" translate="yes" xml:space="preserve">
          <source>In the last statement, even though &lt;code&gt;'c'&lt;/code&gt; is the first character in the class, the earliest point at which the regex can match is &lt;code&gt;'a'&lt;/code&gt; .</source>
          <target state="translated">En la &amp;uacute;ltima declaraci&amp;oacute;n, aunque &lt;code&gt;'c'&lt;/code&gt; es el primer car&amp;aacute;cter de la clase, el punto m&amp;aacute;s temprano en el que la expresi&amp;oacute;n regular puede coincidir es &lt;code&gt;'a'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d9813d8232f26905286fe72c0fb88aaeece44db" translate="yes" xml:space="preserve">
          <source>In the latter case, characters that map to 0212 are first converted to U+3013 (0xA2AE in EUC-JP; a white square also known as 'Tofu' or 'geta mark') then fed to the decoding engine. U+FFFD is not used, in order to preserve text layout as much as possible.</source>
          <target state="translated">En este último caso,los caracteres que se asignan al 0212 se convierten primero en U+3013 (0xA2AE en EUC-JP;un cuadrado blanco también conocido como 'Tofu' o 'marca geta')y luego se alimentan al motor de decodificación.El U+FFFD no se utiliza,para preservar la disposición del texto tanto como sea posible.</target>
        </trans-unit>
        <trans-unit id="a8f8d594e47a7aed4b47d21c04c8b5fc5ac50b38" translate="yes" xml:space="preserve">
          <source>In the latter, foo.h is taken as</source>
          <target state="translated">En este último,foo.h se toma como</target>
        </trans-unit>
        <trans-unit id="9b81dfce26cb69eddfbb13b42d7a921ee8ba05af" translate="yes" xml:space="preserve">
          <source>In the list of parameters for an XSUB, one can precede parameter names by the &lt;code&gt;IN&lt;/code&gt; /&lt;code&gt;OUTLIST&lt;/code&gt; /&lt;code&gt;IN_OUTLIST&lt;/code&gt; /&lt;code&gt;OUT&lt;/code&gt; /&lt;code&gt;IN_OUT&lt;/code&gt; keywords. &lt;code&gt;IN&lt;/code&gt; keyword is the default, the other keywords indicate how the Perl interface should differ from the C interface.</source>
          <target state="translated">En la lista de par&amp;aacute;metros para un XSUB, se pueden preceder los nombres de los par&amp;aacute;metros con las palabras clave &lt;code&gt;IN&lt;/code&gt; / &lt;code&gt;OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; . &lt;code&gt;IN&lt;/code&gt; palabra clave IN es la predeterminada, las otras palabras clave indican en qu&amp;eacute; debe diferir la interfaz Perl de la interfaz C.</target>
        </trans-unit>
        <trans-unit id="6c32d4238ee6ff96fa8bb06b99ee3f8b0689422e" translate="yes" xml:space="preserve">
          <source>In the method descriptions below</source>
          <target state="translated">En las descripciones de los métodos que figuran a continuación</target>
        </trans-unit>
        <trans-unit id="1b237b2ec2e195bf52f7f15f0ad99e5a2c78e4b1" translate="yes" xml:space="preserve">
          <source>In the more general case, you can use the &lt;code&gt;/g&lt;/code&gt; modifier in a &lt;code&gt;while&lt;/code&gt; loop, keeping count of matches.</source>
          <target state="translated">En el caso m&amp;aacute;s general, se puede utilizar el &lt;code&gt;/g&lt;/code&gt; modificador en un &lt;code&gt;while&lt;/code&gt; bucle, llevar la cuenta de los partidos.</target>
        </trans-unit>
        <trans-unit id="784f063825aaf77ec4d5f9b15d7c0e7efc2377c9" translate="yes" xml:space="preserve">
          <source>In the mylib directory, create a file mylib.h that looks like this:</source>
          <target state="translated">En el directorio mylib,crea un archivo mylib.h que se vea así:</target>
        </trans-unit>
        <trans-unit id="79fbf0c13d713302225cff8f61abd9dd7ac74b43" translate="yes" xml:space="preserve">
          <source>In the next paragraph follows a short description of terms used here (because these may differ from terms used by others people or documentation).</source>
          <target state="translated">En el párrafo siguiente sigue una breve descripción de los términos utilizados aquí (porque pueden diferir de los términos utilizados por otras personas o por la documentación).</target>
        </trans-unit>
        <trans-unit id="5152e34177e8a3d4c184b97093704f88de6ca9db" translate="yes" xml:space="preserve">
          <source>In the notation discussed so far, the characters &quot;[&quot; and &quot;]&quot; are given special meaning, for opening and closing bracket groups, and &quot;,&quot; has a special meaning inside bracket groups, where it separates items in the group. This begs the question of how you'd express a literal &quot;[&quot; or &quot;]&quot; in a Bracket Notation string, and how you'd express a literal comma inside a bracket group. For this purpose I've adopted &quot;~&quot; (tilde) as an escape character: &quot;~[&quot; means a literal '[' character anywhere in Bracket Notation (i.e., regardless of whether you're in a bracket group or not), and ditto for &quot;~]&quot; meaning a literal ']', and &quot;~,&quot; meaning a literal comma. (Altho &quot;,&quot; means a literal comma outside of bracket groups -- it's only inside bracket groups that commas are special.)</source>
          <target state="translated">En la notación discutida hasta ahora,los caracteres &quot;[&quot; y &quot;]&quot; tienen un significado especial,para abrir y cerrar los grupos de corchetes,y &quot;,&quot; tiene un significado especial dentro de los grupos de corchetes,donde separa los elementos del grupo.Esto plantea la cuestión de cómo se expresaría una &quot;[&quot; o &quot;]&quot; literal en una cadena de notación entre corchetes,y cómo se expresaría una coma literal dentro de un grupo de corchetes.Para este propósito he adoptado &quot;~&quot; (tilde)como un personaje de escape:&quot;~[&quot; significa un carácter literal '[' en cualquier parte de la notación de corchetes (es decir,independientemente de si estás en un grupo de corchetes o no),e igual para &quot;~]&quot; que significa un literal ']',y &quot;~&quot; que significa una coma literal.(Altho &quot;,&quot; significa una coma literal fuera de los grupos de paréntesis --es sólo dentro de los grupos de paréntesis que las comas son especiales.)</target>
        </trans-unit>
        <trans-unit id="9c42fcbdbf3cd24cfb1dac2e8ba1cbc829f18933" translate="yes" xml:space="preserve">
          <source>In the olden, less enlightened times, we all used to use ASCII. Most of us did, anyway. The big problem with ASCII is that it's American. Well, no, that's not actually the problem; the problem is that it's not particularly useful for people who don't use the Roman alphabet. What used to happen was that particular languages would stick their own alphabet in the upper range of the sequence, between 128 and 255. Of course, we then ended up with plenty of variants that weren't quite ASCII, and the whole point of it being a standard was lost.</source>
          <target state="translated">En los viejos tiempos,menos iluminados,todos solíamos usar ASCII.La mayoría de nosotros lo hacía,de todos modos.El gran problema con el ASCII es que es americano.Bueno,no,ese no es realmente el problema;el problema es que no es particularmente útil para la gente que no usa el alfabeto romano.Lo que solía suceder era que determinados idiomas pegaban su propio alfabeto en el rango superior de la secuencia,entre 128 y 255.Por supuesto,terminamos con muchas variantes que no eran del todo ASCII,y se perdió todo el sentido de que fuera un estándar.</target>
        </trans-unit>
        <trans-unit id="50b947f69a6b2d22a725a2d7ba0813fc1f66f21b" translate="yes" xml:space="preserve">
          <source>In the one case the code, which does exactly the same thing as far as outputting any debugging information is concerned, in other words nothing, takes 14 seconds, and in the other case the code takes one hundredth of a second. Looks fairly definitive. Use a &lt;code&gt;$DEBUG&lt;/code&gt; variable BEFORE you call the subroutine, rather than relying on the smart functionality inside it.</source>
          <target state="translated">En un caso, el c&amp;oacute;digo, que hace exactamente lo mismo en cuanto a la salida de cualquier informaci&amp;oacute;n de depuraci&amp;oacute;n, en otras palabras, nada, toma 14 segundos, y en el otro caso el c&amp;oacute;digo toma una cent&amp;eacute;sima de segundo. Parece bastante definitivo. Utilice una variable &lt;code&gt;$DEBUG&lt;/code&gt; ANTES de llamar a la subrutina, en lugar de confiar en la funcionalidad inteligente que contiene.</target>
        </trans-unit>
        <trans-unit id="9cd2461949e5dab65a2af380d7f878aad8f12946" translate="yes" xml:space="preserve">
          <source>In the one- and two-argument forms of the call, the mode and filename should be concatenated (in that order), preferably separated by white space. You can--but shouldn't--omit the mode in these forms when that mode is &lt;code&gt;&amp;lt;&lt;/code&gt; . It is always safe to use the two-argument form of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; if the filename argument is a known literal.</source>
          <target state="translated">En las formas de uno y dos argumentos de la llamada, el modo y el nombre del archivo deben concatenarse (en ese orden), preferiblemente separados por espacios en blanco. Puede, pero no debe, omitir el modo en estos formularios cuando ese modo es &lt;code&gt;&amp;lt;&lt;/code&gt; . Siempre es seguro utilizar la forma de dos argumentos de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; si el argumento del nombre de archivo es un literal conocido.</target>
        </trans-unit>
        <trans-unit id="6c1895cc93a277f17a7d9aa8c8fca89d99b0c8a2" translate="yes" xml:space="preserve">
          <source>In the one- and two-argument forms of the call, the mode and filename should be concatenated (in that order), preferably separated by white space. You can--but shouldn't--omit the mode in these forms when that mode is &lt;code&gt;&amp;lt;&lt;/code&gt; . It is always safe to use the two-argument form of &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; if the filename argument is a known literal.</source>
          <target state="translated">En las formas de uno y dos argumentos de la llamada, el modo y el nombre del archivo deben concatenarse (en ese orden), preferiblemente separados por espacios en blanco. Puede, pero no debe, omitir el modo en estos formularios cuando ese modo es &lt;code&gt;&amp;lt;&lt;/code&gt; . Siempre es seguro utilizar la forma de dos argumentos de &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; si el argumento del nombre de archivo es un literal conocido.</target>
        </trans-unit>
        <trans-unit id="9baa512a702be95a00f5cdfa9d3fa8d7a2a0b696" translate="yes" xml:space="preserve">
          <source>In the opposite way, to resolve a hostname to the IP address you can write this:</source>
          <target state="translated">De la manera opuesta,para resolver un nombre de host a la dirección IP puedes escribir esto:</target>
        </trans-unit>
        <trans-unit id="ecb2e91137fed6da0013b83630021f3d72198be0" translate="yes" xml:space="preserve">
          <source>In the option specification, the option name is followed by an equals sign &lt;code&gt;=&lt;/code&gt; and the letter &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. The equals sign indicates that this option requires a value. The letter &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; indicates that this value is an arbitrary string. Other possible value types are &lt;code&gt;i&lt;/code&gt; for integer values, and &lt;code&gt;f&lt;/code&gt; for floating point values. Using a colon &lt;code&gt;:&lt;/code&gt; instead of the equals sign indicates that the option value is optional. In this case, if no suitable value is supplied, string valued options get an empty string &lt;code&gt;''&lt;/code&gt; assigned, while numeric options are set to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">En la especificaci&amp;oacute;n de la opci&amp;oacute;n, el nombre de la opci&amp;oacute;n va seguido de un signo igual &lt;code&gt;=&lt;/code&gt; y la letra &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; . El signo igual indica que esta opci&amp;oacute;n requiere un valor. La letra &lt;code&gt;&lt;a href=&quot;../functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; indica que este valor es una cadena arbitraria. Otros tipos de valores posibles son &lt;code&gt;i&lt;/code&gt; para valores enteros y &lt;code&gt;f&lt;/code&gt; para valores de coma flotante. El uso de dos puntos &lt;code&gt;:&lt;/code&gt; en lugar del signo igual indica que el valor de la opci&amp;oacute;n es opcional. En este caso, si no se proporciona un valor adecuado, las opciones con valor de cadena obtienen una cadena vac&amp;iacute;a &lt;code&gt;''&lt;/code&gt; asignada, mientras que las opciones num&amp;eacute;ricas se establecen en &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53db56988ad2d32c572da0df498153024ad7a10e" translate="yes" xml:space="preserve">
          <source>In the past, the Perl community experimented with a technique called &quot;inside-out objects&quot;. An inside-out object stores its data outside of the object's reference, indexed on a unique property of the object, such as its memory address, rather than in the object itself. This has the advantage of enforcing the encapsulation of object attributes, since their data is not stored in the object itself.</source>
          <target state="translated">En el pasado,la comunidad de Perl experimentó con una técnica llamada &quot;objetos de adentro hacia afuera&quot;.Un objeto inside-out almacena sus datos fuera de la referencia del objeto,indexados en una propiedad única del objeto,como su dirección de memoria,en lugar de en el propio objeto.Esto tiene la ventaja de reforzar el encapsulamiento de los atributos del objeto,ya que sus datos no se almacenan en el propio objeto.</target>
        </trans-unit>
        <trans-unit id="8a3a725cb056826efb62b17fb21f5a5c69a3ce79" translate="yes" xml:space="preserve">
          <source>In the past, the leading &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;m?&lt;i&gt;PATTERN&lt;/i&gt;?&lt;/code&gt; was optional, but omitting it would produce a deprecation warning. As of v5.22.0, omitting it produces a syntax error. If you encounter this construct in older code, you can just add &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">En el pasado, la &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; principal en &lt;code&gt;m?&lt;i&gt;PATTERN&lt;/i&gt;?&lt;/code&gt; era opcional, pero omitirlo producir&amp;iacute;a una advertencia de obsolescencia. A partir de la versi&amp;oacute;n 5.22.0, omitirlo produce un error de sintaxis. Si encuentra esta construcci&amp;oacute;n en c&amp;oacute;digo anterior, simplemente puede agregar &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a63857af592db7e75d88e816c7c7a1180f9eb89" translate="yes" xml:space="preserve">
          <source>In the pathological case that a script is called via a relative path</source>
          <target state="translated">En el caso patológico de que un guión se llame a través de un camino relativo</target>
        </trans-unit>
        <trans-unit id="b5cb98f00aa6aaa22eb71c271690cbb1ebc9df81" translate="yes" xml:space="preserve">
          <source>In the pattern /\Bam\B/, there must be a word character before the &quot;a&quot; and after the &quot;m&quot;. These patterns match /\Bam\B/:</source>
          <target state="translated">En el patrón /\Bam\B/,debe haber un personaje de la palabra antes de la &quot;a&quot; y después de la &quot;m&quot;.Estos patrones coinciden con /\Bam\B/:</target>
        </trans-unit>
        <trans-unit id="d454ee791b9ae0c5bbb81657f656033f3c0c5a24" translate="yes" xml:space="preserve">
          <source>In the peculiar &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; form, VERSION may be either a positive decimal fraction such as 5.006, which will be compared to &lt;code&gt;$]&lt;/code&gt; , or a v-string of the form v5.6.1, which will be compared to &lt;code&gt;$^V&lt;/code&gt; (aka $PERL_VERSION). An exception is raised if VERSION is greater than the version of the current Perl interpreter; Perl will not attempt to parse the rest of the file. Compare with &lt;a href=&quot;#require&quot;&gt;require&lt;/a&gt;, which can do a similar check at run time. Symmetrically, &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; allows you to specify that you want a version of Perl older than the specified one.</source>
          <target state="translated">En la forma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; peculiar , VERSION puede ser una fracci&amp;oacute;n decimal positiva como 5.006, que se comparar&amp;aacute; con &lt;code&gt;$]&lt;/code&gt; , o una cadena v de la forma v5.6.1, que se comparar&amp;aacute; con &lt;code&gt;$^V&lt;/code&gt; (tambi&amp;eacute;n conocida como $ PERL_VERSION). Se genera una excepci&amp;oacute;n si VERSION es mayor que la versi&amp;oacute;n del int&amp;eacute;rprete de Perl actual; Perl no intentar&amp;aacute; analizar el resto del archivo. Compare con &lt;a href=&quot;#require&quot;&gt;require&lt;/a&gt; , que puede hacer una verificaci&amp;oacute;n similar en tiempo de ejecuci&amp;oacute;n. Sim&amp;eacute;tricamente, &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; permite especificar que desea una versi&amp;oacute;n de Perl m&amp;aacute;s antigua que la especificada.</target>
        </trans-unit>
        <trans-unit id="74d3b7e92857ff92a78ee1a11cb1e6022b249cb3" translate="yes" xml:space="preserve">
          <source>In the peculiar &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; form, VERSION may be either a positive decimal fraction such as 5.006, which will be compared to &lt;code&gt;$]&lt;/code&gt; , or a v-string of the form v5.6.1, which will be compared to &lt;code&gt;$^V&lt;/code&gt; (aka $PERL_VERSION). An exception is raised if VERSION is greater than the version of the current Perl interpreter; Perl will not attempt to parse the rest of the file. Compare with &lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;, which can do a similar check at run time. Symmetrically, &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; allows you to specify that you want a version of Perl older than the specified one.</source>
          <target state="translated">En la forma &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;uso&lt;/a&gt; peculiar , VERSION puede ser una fracci&amp;oacute;n decimal positiva como 5.006, que se comparar&amp;aacute; con &lt;code&gt;$]&lt;/code&gt; , o una cadena v de la forma v5.6.1, que se comparar&amp;aacute; con &lt;code&gt;$^V&lt;/code&gt; (tambi&amp;eacute;n conocida como $ PERL_VERSION). Se genera una excepci&amp;oacute;n si VERSION es mayor que la versi&amp;oacute;n del int&amp;eacute;rprete de Perl actual; Perl no intentar&amp;aacute; analizar el resto del archivo. Compare con &lt;a href=&quot;require&quot;&gt;require&lt;/a&gt; , que puede hacer una verificaci&amp;oacute;n similar en tiempo de ejecuci&amp;oacute;n. Sim&amp;eacute;tricamente, &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; VERSION&lt;/code&gt; permite especificar que desea una versi&amp;oacute;n de Perl m&amp;aacute;s antigua que la especificada.</target>
        </trans-unit>
        <trans-unit id="a5da666074fc2ec75362b3b68f86858be734f6e9" translate="yes" xml:space="preserve">
          <source>In the presence of multiple classes it can be non-trivial to make sure that every relevant destructor is called for every object. Perl calls the first one it finds on the inheritance tree (if any) and that's it.</source>
          <target state="translated">En presencia de múltiples clases puede ser no trivial asegurarse de que cada destructor relevante sea llamado para cada objeto.Perl llama al primero que encuentra en el árbol genealógico (si lo hay)y eso es todo.</target>
        </trans-unit>
        <trans-unit id="cd34d34a3c68755abc29d11ed297638bd9fdb29d" translate="yes" xml:space="preserve">
          <source>In the presence of the &lt;code&gt;REXEC_COPY_STR&lt;/code&gt; flag, but with the addition of the &lt;code&gt;REXEC_COPY_SKIP_PRE&lt;/code&gt; or &lt;code&gt;REXEC_COPY_SKIP_POST&lt;/code&gt; flags, an engine can choose not to copy the full buffer (although it must still do so in the presence of &lt;code&gt;RXf_PMf_KEEPCOPY&lt;/code&gt; or the relevant bits being set in &lt;code&gt;PL_sawampersand&lt;/code&gt; ). In this case, it may set &lt;code&gt;suboffset&lt;/code&gt; to indicate the number of bytes from the logical start of the buffer to the physical start (i.e. &lt;code&gt;subbeg&lt;/code&gt; ). It should also set &lt;code&gt;subcoffset&lt;/code&gt; , the number of characters in the offset. The latter is needed to support &lt;code&gt;@-&lt;/code&gt; and &lt;code&gt;@+&lt;/code&gt; which work in characters, not bytes.</source>
          <target state="translated">En presencia del indicador &lt;code&gt;REXEC_COPY_STR&lt;/code&gt; , pero con la adici&amp;oacute;n de los &lt;code&gt;REXEC_COPY_SKIP_PRE&lt;/code&gt; o &lt;code&gt;REXEC_COPY_SKIP_POST&lt;/code&gt; , un motor puede optar por no copiar el b&amp;uacute;fer completo (aunque a&amp;uacute;n debe hacerlo en presencia de &lt;code&gt;RXf_PMf_KEEPCOPY&lt;/code&gt; o los bits relevantes configurados en &lt;code&gt;PL_sawampersand&lt;/code&gt; ) . En este caso, puede establecer &lt;code&gt;suboffset&lt;/code&gt; para indicar el n&amp;uacute;mero de bytes desde el inicio l&amp;oacute;gico del b&amp;uacute;fer hasta el inicio f&amp;iacute;sico (es decir, &lt;code&gt;subbeg&lt;/code&gt; ). Tambi&amp;eacute;n debe establecer &lt;code&gt;subcoffset&lt;/code&gt; , el n&amp;uacute;mero de caracteres en el desplazamiento. Este &amp;uacute;ltimo es necesario para admitir &lt;code&gt;@-&lt;/code&gt; y &lt;code&gt;@+&lt;/code&gt; que funcionan en caracteres, no en bytes.</target>
        </trans-unit>
        <trans-unit id="b073c0a34c41b3ba5f06418d694ba351020d4acc" translate="yes" xml:space="preserve">
          <source>In the previous example, you created a function-private variable because only one function remembered its reference. You could define multiple functions while the variable is in scope, and each function can share the &quot;private&quot; variable. It's not really &quot;static&quot; because you can access it outside the function while the lexical variable is in scope, and even create references to it. In this example, &lt;code&gt;increment_count&lt;/code&gt; and &lt;code&gt;return_count&lt;/code&gt; share the variable. One function adds to the value and the other simply returns the value. They can both access &lt;code&gt;$count&lt;/code&gt; , and since it has gone out of scope, there is no other way to access it.</source>
          <target state="translated">En el ejemplo anterior, cre&amp;oacute; una variable privada de funci&amp;oacute;n porque solo una funci&amp;oacute;n recordaba su referencia. Puede definir varias funciones mientras la variable est&amp;aacute; dentro del alcance, y cada funci&amp;oacute;n puede compartir la variable &quot;privada&quot;. No es realmente &quot;est&amp;aacute;tico&quot; porque puede acceder a &amp;eacute;l fuera de la funci&amp;oacute;n mientras la variable l&amp;eacute;xica est&amp;aacute; dentro del alcance, e incluso crear referencias a ella. En este ejemplo, &lt;code&gt;increment_count&lt;/code&gt; y &lt;code&gt;return_count&lt;/code&gt; comparten la variable. Una funci&amp;oacute;n se suma al valor y la otra simplemente devuelve el valor. Ambos pueden acceder a &lt;code&gt;$count&lt;/code&gt; y, dado que se ha salido del alcance, no hay otra forma de acceder a &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="d099eddc17fd02123a62f3b5a7b0e3fc3ac46d20" translate="yes" xml:space="preserve">
          <source>In the previous examples, the &lt;code&gt;{}&lt;/code&gt; code creates a reference to an empty anonymous hash. The &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; function then takes that reference and associates the hash with the class in &lt;code&gt;$class&lt;/code&gt; . In the simplest case, the &lt;code&gt;$class&lt;/code&gt; variable will end up containing the string &quot;File&quot;.</source>
          <target state="translated">En los ejemplos anteriores, el c&amp;oacute;digo &lt;code&gt;{}&lt;/code&gt; crea una referencia a un hash an&amp;oacute;nimo vac&amp;iacute;o. La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; luego toma esa referencia y asocia el hash con la clase en &lt;code&gt;$class&lt;/code&gt; . En el caso m&amp;aacute;s simple, la variable &lt;code&gt;$class&lt;/code&gt; terminar&amp;aacute; conteniendo la cadena &quot;Archivo&quot;.</target>
        </trans-unit>
        <trans-unit id="c1001ba58ff0530a993f349b4836f78782ab43f8" translate="yes" xml:space="preserve">
          <source>In the previous section we've seen a network message that was constructed by prefixing the binary message length to the actual message. You'll find that packing a length followed by so many bytes of data is a frequently used recipe since appending a null byte won't work if a null byte may be part of the data. Here is an example where both techniques are used: after two null terminated strings with source and destination address, a Short Message (to a mobile phone) is sent after a length byte:</source>
          <target state="translated">En la sección anterior hemos visto un mensaje de red que se construyó prefijando la longitud del mensaje binario al mensaje real.Encontrará que empaquetar una longitud seguida de tantos bytes de datos es una receta frecuentemente utilizada ya que añadir un byte nulo no funcionará si un byte nulo puede ser parte de los datos.He aquí un ejemplo en el que se utilizan ambas técnicas:después de dos cadenas terminadas nulas con dirección de origen y destino,se envía un mensaje corto (a un teléfono móvil)después de un byte de longitud:</target>
        </trans-unit>
        <trans-unit id="4d306b4b58fb980badf24b06473c4af8a30ac12e" translate="yes" xml:space="preserve">
          <source>In the previous sections we've learned how to use &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt; to pack and unpack integers with big- or little-endian byte-order. While this is nice, it's still rather limited because it leaves out all kinds of signed integers as well as 64-bit integers. For example, if you wanted to unpack a sequence of signed big-endian 16-bit integers in a platform-independent way, you would have to write:</source>
          <target state="translated">En las secciones anteriores, hemos aprendido c&amp;oacute;mo usar &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; y &lt;code&gt;V&lt;/code&gt; para empaquetar y descomprimir enteros con orden de bytes big o little-endian. Si bien esto es bueno, todav&amp;iacute;a es bastante limitado porque omite todo tipo de enteros con signo y enteros de 64 bits. Por ejemplo, si quisiera descomprimir una secuencia de enteros big-endian firmados de 16 bits de forma independiente de la plataforma, tendr&amp;iacute;a que escribir:</target>
        </trans-unit>
        <trans-unit id="4bb18f0a7b082417093abe50cb091ae0ce9d7c1a" translate="yes" xml:space="preserve">
          <source>In the rare case in which you need to discover at run time whether a particular constant has been declared via this module, you may use this function to examine the hash &lt;code&gt;%constant::declared&lt;/code&gt; . If the given constant name does not include a package name, the current package is used.</source>
          <target state="translated">En el caso poco com&amp;uacute;n en el que necesite descubrir en tiempo de ejecuci&amp;oacute;n si una constante en particular ha sido declarada a trav&amp;eacute;s de este m&amp;oacute;dulo, puede usar esta funci&amp;oacute;n para examinar el &lt;code&gt;%constant::declared&lt;/code&gt; hash constante :: declarado . Si el nombre de la constante proporcionado no incluye un nombre de paquete, se utiliza el paquete actual.</target>
        </trans-unit>
        <trans-unit id="b3168d71bbd1d6362a03e87b3b6357cbc463ee97" translate="yes" xml:space="preserve">
          <source>In the scalar context, returns the modified collator (but it is &lt;b&gt;not&lt;/b&gt; a clone from the original).</source>
          <target state="translated">En el contexto escalar, devuelve la alzadora modificada (pero es &lt;b&gt;no&lt;/b&gt; un clon de la original).</target>
        </trans-unit>
        <trans-unit id="4e123d33b9c36acd15c038a592d06bccf26e5a4c" translate="yes" xml:space="preserve">
          <source>In the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; , Perl obeys the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale setting. This controls the application's notion of which characters are alphabetic, numeric, punctuation,</source>
          <target state="translated">En el &amp;aacute;mbito de un formulario de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; que incluye &lt;code&gt;LC_CTYPE&lt;/code&gt; , Perl obedece a la configuraci&amp;oacute;n regional &lt;code&gt;LC_CTYPE&lt;/code&gt; . Esto controla la noci&amp;oacute;n de la aplicaci&amp;oacute;n de qu&amp;eacute; caracteres son alfab&amp;eacute;ticos, num&amp;eacute;ricos, puntuaci&amp;oacute;n,</target>
        </trans-unit>
        <trans-unit id="ea3c9a616e33a3cad4631e8af654cde72ce4e1bd" translate="yes" xml:space="preserve">
          <source>In the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes collation, Perl looks to the &lt;code&gt;LC_COLLATE&lt;/code&gt; environment variable to determine the application's notions on collation (ordering) of characters. For example, &quot;b&quot; follows &quot;a&quot; in Latin alphabets, but where do &quot;&amp;aacute;&quot; and &quot;&amp;aring;&quot; belong? And while &quot;color&quot; follows &quot;chocolate&quot; in English, what about in traditional Spanish?</source>
          <target state="translated">En el &amp;aacute;mbito de un formulario de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; que incluye la intercalaci&amp;oacute;n, Perl busca en la variable de entorno &lt;code&gt;LC_COLLATE&lt;/code&gt; para determinar las nociones de la aplicaci&amp;oacute;n sobre la intercalaci&amp;oacute;n (ordenaci&amp;oacute;n) de caracteres. Por ejemplo, &quot;b&quot; sigue a &quot;a&quot; en los alfabetos latinos, pero &amp;iquest;a d&amp;oacute;nde pertenecen &quot;&amp;aacute;&quot; y &quot;&amp;aring;&quot;? Y mientras que &quot;color&quot; sigue a &quot;chocolate&quot; en ingl&amp;eacute;s, &amp;iquest;qu&amp;eacute; pasa en el espa&amp;ntilde;ol tradicional?</target>
        </trans-unit>
        <trans-unit id="85dc6b4df5881b7609167c49737d8fd061975bdc" translate="yes" xml:space="preserve">
          <source>In the second example, an event driven program, the flow of control will be more like this</source>
          <target state="translated">En el segundo ejemplo,un programa impulsado por eventos,el flujo de control será más como esto</target>
        </trans-unit>
        <trans-unit id="0aec5f41df04fa608d73972b5b60d0e21665dd44" translate="yes" xml:space="preserve">
          <source>In the second example, however, we have stored another reference to the tied object in $x. That means that when untie() gets called there will still be a valid reference to the object in existence, so the destructor is not called at that time, and thus the file is not closed. The reason there is no output is because the file buffers have not been flushed to disk.</source>
          <target state="translated">En el segundo ejemplo,sin embargo,hemos almacenado otra referencia al objeto atado en $x.Esto significa que cuando se llame a untie()seguirá habiendo una referencia válida al objeto existente,por lo que no se llama al destructor en ese momento,y por lo tanto el archivo no se cierra.La razón por la que no hay salida es porque los búferes de los archivos no han sido vaciados en el disco.</target>
        </trans-unit>
        <trans-unit id="69631891c8053c89e0b6bca3447bddf1c255a6c7" translate="yes" xml:space="preserve">
          <source>In the second form, the code within the BLOCK is parsed only once--at the same time the code surrounding the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; itself was parsed--and executed within the context of the current Perl program. This form is typically used to trap exceptions more efficiently than the first (see below), while also providing the benefit of checking the code within BLOCK at compile time.</source>
          <target state="translated">En la segunda forma, el c&amp;oacute;digo dentro del BLOQUE se analiza solo una vez (al mismo tiempo que se analiza el c&amp;oacute;digo que rodea a la &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n ) y se ejecuta dentro del contexto del programa Perl actual. Este formulario se usa generalmente para capturar excepciones de manera m&amp;aacute;s eficiente que el primero (ver m&amp;aacute;s abajo), mientras que tambi&amp;eacute;n brinda la ventaja de verificar el c&amp;oacute;digo dentro de BLOCK en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4a4b1f50ba31b2407de5a923935b79599705457e" translate="yes" xml:space="preserve">
          <source>In the second form, the code within the BLOCK is parsed only once--at the same time the code surrounding the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; itself was parsed--and executed within the context of the current Perl program. This form is typically used to trap exceptions more efficiently than the first (see below), while also providing the benefit of checking the code within BLOCK at compile time.</source>
          <target state="translated">En la segunda forma, el c&amp;oacute;digo dentro del BLOQUE se analiza solo una vez (al mismo tiempo que se analiza el c&amp;oacute;digo que rodea a la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n ) y se ejecuta dentro del contexto del programa Perl actual. Este formulario se usa generalmente para capturar excepciones de manera m&amp;aacute;s eficiente que el primero (ver m&amp;aacute;s abajo), mientras que tambi&amp;eacute;n brinda la ventaja de verificar el c&amp;oacute;digo dentro de BLOCK en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0d9a2ff0446afe648b7cb9385c3e87c463ddf6fa" translate="yes" xml:space="preserve">
          <source>In the second match, &lt;code&gt;$`&lt;/code&gt; equals &lt;code&gt;''&lt;/code&gt; because the regexp matched at the first character position in the string and stopped; it never saw the second 'the'.</source>
          <target state="translated">En la segunda coincidencia, &lt;code&gt;$`&lt;/code&gt; es igual a &lt;code&gt;''&lt;/code&gt; porque la expresi&amp;oacute;n regular coincidi&amp;oacute; con la posici&amp;oacute;n del primer car&amp;aacute;cter en la cadena y se detuvo; nunca vio el segundo 'el'.</target>
        </trans-unit>
        <trans-unit id="37e9c3cdd59dd9ca84f70e11b37a63713067a365" translate="yes" xml:space="preserve">
          <source>In the second step, the free inheritability of the implementation (or lack thereof) is demonstrated. For this purpose it constructs a class called &lt;code&gt;NamedFile&lt;/code&gt; which is a common subclass of &lt;code&gt;Name&lt;/code&gt; and the standard class &lt;code&gt;IO::File&lt;/code&gt; . This puts inheritability to the test because objects of &lt;code&gt;IO::File&lt;/code&gt;</source>
          <target state="translated">En el segundo paso, se demuestra la libre heredabilidad de la implementaci&amp;oacute;n (o la falta de ella). Para este prop&amp;oacute;sito, construye una clase llamada &lt;code&gt;NamedFile&lt;/code&gt; que es una subclase com&amp;uacute;n de &lt;code&gt;Name&lt;/code&gt; y la clase est&amp;aacute;ndar &lt;code&gt;IO::File&lt;/code&gt; . Esto pone a prueba la heredabilidad porque los objetos de &lt;code&gt;IO::File&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="979450caa584768989298a5e328245eeac253de3" translate="yes" xml:space="preserve">
          <source>In the strictest sense, it can't be done--the script executes as a different process from the shell it was started from. Changes to a process are not reflected in its parent--only in any children created after the change. There is shell magic that may allow you to fake it by &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;ing the script's output in your shell; check out the comp.unix.questions FAQ for details.</source>
          <target state="translated">En el sentido m&amp;aacute;s estricto, no se puede hacer: el script se ejecuta como un proceso diferente del shell desde el que se inici&amp;oacute;. Los cambios en un proceso no se reflejan en su padre, solo en los hijos creados despu&amp;eacute;s del cambio. Hay magia de shell que puede permitirle falsificarla &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; la salida del script en su shell; consulte las preguntas frecuentes de comp.unix.questions para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="8d5c6294b971049c13607515864de8d9b4202e94" translate="yes" xml:space="preserve">
          <source>In the symbian subdirectory there is</source>
          <target state="translated">En el subdirectorio simbólico hay</target>
        </trans-unit>
        <trans-unit id="a6664c3e7887f18c07bf996abcbf98da47057e7d" translate="yes" xml:space="preserve">
          <source>In the syntax descriptions that follow, list operators that expect a list (and provide list context for elements of the list) are shown with LIST as an argument. Such a list may consist of any combination of scalar arguments or list values; the list values will be included in the list as if each individual element were interpolated at that point in the list, forming a longer single-dimensional list value. Commas should separate literal elements of the LIST.</source>
          <target state="translated">En las descripciones sintácticas que siguen,los operadores de listas que esperan una lista (y proporcionan un contexto de lista para los elementos de la lista)se muestran con LIST como argumento.Esa lista puede consistir en cualquier combinación de argumentos escalares o valores de lista;los valores de lista se incluirán en la lista como si cada elemento individual se interpolara en ese punto de la lista,formando un valor de lista unidimensional más largo.Las comas deben separar los elementos literales de la LISTA.</target>
        </trans-unit>
        <trans-unit id="fe67245ac84887f626543e24a3e6a624b4a7332b" translate="yes" xml:space="preserve">
          <source>In the tie() call, &lt;code&gt;VARIABLE&lt;/code&gt; is the name of the variable to be enchanted. &lt;code&gt;CLASSNAME&lt;/code&gt; is the name of a class implementing objects of the correct type. Any additional arguments in the &lt;code&gt;LIST&lt;/code&gt; are passed to the appropriate constructor method for that class--meaning TIESCALAR(), TIEARRAY(), TIEHASH(), or TIEHANDLE(). (Typically these are arguments such as might be passed to the dbminit() function of C.) The object returned by the &quot;new&quot; method is also returned by the tie() function, which would be useful if you wanted to access other methods in &lt;code&gt;CLASSNAME&lt;/code&gt; . (You don't actually have to return a reference to a right &quot;type&quot; (e.g., HASH or &lt;code&gt;CLASSNAME&lt;/code&gt; ) so long as it's a properly blessed object.) You can also retrieve a reference to the underlying object using the tied() function.</source>
          <target state="translated">En la llamada a tie (), &lt;code&gt;VARIABLE&lt;/code&gt; es el nombre de la variable que se va a encantar. &lt;code&gt;CLASSNAME&lt;/code&gt; es el nombre de una clase que implementa objetos del tipo correcto. Cualquier argumento adicional en la &lt;code&gt;LIST&lt;/code&gt; A se pasa al m&amp;eacute;todo constructor apropiado para esa clase, es decir, TIESCALAR (), TIEARRAY (), TIEHASH () o TIEHANDLE (). (Por lo general, estos son argumentos que se pueden pasar a la funci&amp;oacute;n dbminit () de C.) El objeto devuelto por el m&amp;eacute;todo &quot;nuevo&quot; tambi&amp;eacute;n es devuelto por la funci&amp;oacute;n tie (), que ser&amp;iacute;a &amp;uacute;til si quisiera acceder a otros m&amp;eacute;todos en &lt;code&gt;CLASSNAME&lt;/code&gt; . (En realidad, no es necesario que devuelva una referencia a un &quot;tipo&quot; correcto (por ejemplo, HASH o &lt;code&gt;CLASSNAME&lt;/code&gt; ) siempre que sea un objeto debidamente bendecido.) Tambi&amp;eacute;n puede recuperar una referencia al objeto subyacente utilizando la funci&amp;oacute;n atada ().</target>
        </trans-unit>
        <trans-unit id="72e605f529d11854bba56a166fe10700b1dd88fb" translate="yes" xml:space="preserve">
          <source>In the two-argument (and one-argument) form, opening &lt;code&gt;&amp;lt;-&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; opens STDIN and opening &lt;code&gt;&amp;gt;-&lt;/code&gt; opens STDOUT.</source>
          <target state="translated">En la forma de dos argumentos (y un argumento), abrir &lt;code&gt;&amp;lt;-&lt;/code&gt; o &lt;code&gt;-&lt;/code&gt; abre STDIN y abrir &lt;code&gt;&amp;gt;-&lt;/code&gt; abre STDOUT.</target>
        </trans-unit>
        <trans-unit id="305b7a93b43681322f3469e0f0cb84a704ec6817" translate="yes" xml:space="preserve">
          <source>In the unlikely case of a SV requiring more complex initialization, you can create an empty SV with newSV(len). If &lt;code&gt;len&lt;/code&gt; is 0 an empty SV of type NULL is returned, else an SV of type PV is returned with len + 1 (for the &lt;code&gt;NUL&lt;/code&gt; ) bytes of storage allocated, accessible via SvPVX. In both cases the SV has the undef value.</source>
          <target state="translated">En el caso poco probable de un SV que requiera una inicializaci&amp;oacute;n m&amp;aacute;s compleja, puede crear un SV vac&amp;iacute;o con newSV (len). Si &lt;code&gt;len&lt;/code&gt; es 0, se devuelve un SV vac&amp;iacute;o de tipo NULL; de lo contrario, se devuelve un SV de tipo PV con len + 1 (para el &lt;code&gt;NUL&lt;/code&gt; ) bytes de almacenamiento asignados, accesibles a trav&amp;eacute;s de SvPVX. En ambos casos, el SV tiene el valor indefinido.</target>
        </trans-unit>
        <trans-unit id="e08f73822da4db28b0244d63be2806e6742a13f9" translate="yes" xml:space="preserve">
          <source>In the words of Chaim Frenkel: &quot;Perl's grammar can not be reduced to BNF. The work of parsing perl is distributed between yacc, the lexer, smoke and mirrors.&quot;</source>
          <target state="translated">En palabras de Chaim Frenkel:&quot;La gramática de Perl no puede ser reducida a BNF.El trabajo de analizar perl se distribuye entre el yacc,el lexer,el humo y los espejos&quot;.</target>
        </trans-unit>
        <trans-unit id="eea8935b77be896004ea3b86596d8c4b9f389127" translate="yes" xml:space="preserve">
          <source>In the work crew model, several threads are created that do essentially the same thing to different pieces of data. It closely mirrors classical parallel processing and vector processors, where a large array of processors do the exact same thing to many pieces of data.</source>
          <target state="translated">En el modelo de la tripulación de trabajo,se crean varios hilos que hacen esencialmente lo mismo con diferentes piezas de datos.Refleja de cerca el procesamiento paralelo clásico y los procesadores vectoriales,donde una gran variedad de procesadores hacen exactamente lo mismo a muchas piezas de datos.</target>
        </trans-unit>
        <trans-unit id="c55ef95af3c2d0a3702a06238a73d0da82b1e62b" translate="yes" xml:space="preserve">
          <source>In the year 2010 App::cpanminus was launched as a new approach to a cpan shell with a considerably smaller footprint. Very cool stuff.</source>
          <target state="translated">En el año 2010 se lanzó App::cpanminus como un nuevo enfoque de una carcasa de cpan con una huella considerablemente más pequeña.Un material muy bueno.</target>
        </trans-unit>
        <trans-unit id="113762dd3316218250364ac4d21aa3eda82fed63" translate="yes" xml:space="preserve">
          <source>In theory &lt;code&gt;Strtol&lt;/code&gt; and &lt;code&gt;Strtoul&lt;/code&gt; may not be defined if the machine perl is built on doesn't actually have strtol and strtoul. But as those 2 functions are part of the 1989 ANSI C spec we suspect you'll find them everywhere by now.</source>
          <target state="translated">En teor&amp;iacute;a, &lt;code&gt;Strtol&lt;/code&gt; y &lt;code&gt;Strtoul&lt;/code&gt; pueden no definirse si la m&amp;aacute;quina en la que se basa perl no tiene strtol y strtoul. Pero como esas 2 funciones son parte de la especificaci&amp;oacute;n ANSI C de 1989, sospechamos que ya las encontrar&amp;aacute; en todas partes.</target>
        </trans-unit>
        <trans-unit id="d524f396baff67e45d81dc7f8d13d5cf1e77d980" translate="yes" xml:space="preserve">
          <source>In theory, &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; is reliable from -2**63 to 2**63-1. However, because work arounds in the implementation use floating point numbers, it will become inaccurate as the time gets larger. This is a bug and will be fixed in the future.</source>
          <target state="translated">En teor&amp;iacute;a, &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; es confiable de -2 ** 63 a 2 ** 63-1. Sin embargo, debido a que las soluciones alternativas en la implementaci&amp;oacute;n usan n&amp;uacute;meros de punto flotante, se volver&amp;aacute; inexacto a medida que aumenta el tiempo. Esto es un error y se solucionar&amp;aacute; en el futuro.</target>
        </trans-unit>
        <trans-unit id="cbe5df9e111a076eb83a7b1ca2b907e2c293b988" translate="yes" xml:space="preserve">
          <source>In these loop constructs, the assigned value (whether assignment is automatic or explicit) is then tested to see whether it is defined. The defined test avoids problems where the line has a string value that would be treated as false by Perl; for example a &quot;&quot; or a &lt;code&gt;&quot;0&quot;&lt;/code&gt; with no trailing newline. If you really mean for such values to terminate the loop, they should be tested for explicitly:</source>
          <target state="translated">En estas construcciones de bucle, el valor asignado (si la asignaci&amp;oacute;n es autom&amp;aacute;tica o expl&amp;iacute;cita) luego se prueba para ver si est&amp;aacute; definido. La prueba definida evita problemas en los que la l&amp;iacute;nea tiene un valor de cadena que Perl tratar&amp;iacute;a como falso; por ejemplo, un &quot;&quot; o un &lt;code&gt;&quot;0&quot;&lt;/code&gt; sin nueva l&amp;iacute;nea final. Si realmente quiere que tales valores terminen el ciclo, deben probarse expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="6e44b8059bd25cac80d7a80701ceeb87c0cc485a" translate="yes" xml:space="preserve">
          <source>In this -exec rendering, each opcode is executed in the order shown. The add opcode, marked with '*', is discussed in more detail.</source>
          <target state="translated">En esta representación ejecutiva,cada código de operación se ejecuta en el orden que se muestra.El opcode de adición,marcado con '*',se discute con más detalle.</target>
        </trans-unit>
        <trans-unit id="fd1f4af2f36f22296f6e12cb734299d228fd203a" translate="yes" xml:space="preserve">
          <source>In this alternation, it is important to put &lt;code&gt;'\d+\.\d+'&lt;/code&gt; before &lt;code&gt;'\d+\.'&lt;/code&gt; . If &lt;code&gt;'\d+\.'&lt;/code&gt; were first, the regexp would happily match that and ignore the fractional part of the number.</source>
          <target state="translated">En esta alternancia, es importante poner &lt;code&gt;'\d+\.\d+'&lt;/code&gt; antes de &lt;code&gt;'\d+\.'&lt;/code&gt; . Si &lt;code&gt;'\d+\.'&lt;/code&gt; fueran primero, la expresi&amp;oacute;n regular coincidir&amp;iacute;a felizmente con eso e ignorar&amp;iacute;a la parte fraccionaria del n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="c0e19afab75cca33f669db41034484d08b958820" translate="yes" xml:space="preserve">
          <source>In this call,</source>
          <target state="translated">En esta llamada,</target>
        </trans-unit>
        <trans-unit id="6f085ed6c4e3052eb0bb052f156e9a4157a1fe5d" translate="yes" xml:space="preserve">
          <source>In this call, the two arrays will be populated as shown below (for Unicode 6.0):</source>
          <target state="translated">En esta llamada,las dos matrices se poblarán como se muestra a continuación (para Unicode 6.0):</target>
        </trans-unit>
        <trans-unit id="9ebdd72fd702032acef9641f741ed417c8e827d9" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;IO::Compress::Zip&lt;/code&gt; will check that &lt;code&gt;$rawdata&lt;/code&gt; consists of zero or more conformant sub-fields.</source>
          <target state="translated">En este caso, &lt;code&gt;IO::Compress::Zip&lt;/code&gt; comprobar&amp;aacute; que &lt;code&gt;$rawdata&lt;/code&gt; consta de cero o m&amp;aacute;s subcampos conformes.</target>
        </trans-unit>
        <trans-unit id="7445390dec364c96fb636b6c3a3e08bbc004467f" translate="yes" xml:space="preserve">
          <source>In this case a possible way around this problem is to predefine a series of C functions to act as the interface to Perl, thus</source>
          <target state="translated">En este caso una posible solución a este problema es predefinir una serie de funciones C para que actúen como interfaz con Perl,así</target>
        </trans-unit>
        <trans-unit id="e58eeb1fce65fa0151692bc12dbf74ccd83c8127" translate="yes" xml:space="preserve">
          <source>In this case it is possible to speed up the routine (often quite substantially) by using the lightweight callback API. The idea is that the calling context only needs to be created and destroyed once, and the sub can be called arbitrarily many times in between.</source>
          <target state="translated">En este caso es posible acelerar la rutina (a menudo bastante sustancialmente)utilizando el API de retrollamada ligera.La idea es que el contexto de llamada sólo necesita ser creado y destruido una vez,y el submarino puede ser llamado arbitrariamente muchas veces entremedio.</target>
        </trans-unit>
        <trans-unit id="7a45b342cd0260187347347f25fa6f1ce0fc4500" translate="yes" xml:space="preserve">
          <source>In this case the flow of control can consist of only the repeated sequence</source>
          <target state="translated">En este caso el flujo de control puede consistir sólo en la secuencia repetida</target>
        </trans-unit>
        <trans-unit id="de52280d051bfe1e84ce26c045f4bd463f4ae0ee" translate="yes" xml:space="preserve">
          <source>In this case the functions &lt;code&gt;fn1&lt;/code&gt; , &lt;code&gt;fn2&lt;/code&gt; , and &lt;code&gt;fn3&lt;/code&gt; are used to remember the Perl subroutine to be called. Each of the functions holds a separate hard-wired index which is used in the function &lt;code&gt;Pcb&lt;/code&gt; to access the &lt;code&gt;Map&lt;/code&gt; array and actually call the Perl subroutine.</source>
          <target state="translated">En este caso las funciones &lt;code&gt;fn1&lt;/code&gt; , &lt;code&gt;fn2&lt;/code&gt; y &lt;code&gt;fn3&lt;/code&gt; se utilizan para recordar la subrutina Perl para ser llamado. Cada una de las funciones contiene un &amp;iacute;ndice cableado independiente que se utiliza en la funci&amp;oacute;n &lt;code&gt;Pcb&lt;/code&gt; para acceder a la matriz de &lt;code&gt;Map&lt;/code&gt; y llamar a la subrutina Perl.</target>
        </trans-unit>
        <trans-unit id="4ba717b73fce507fddc399244f240ef5b6f054dd" translate="yes" xml:space="preserve">
          <source>In this case the input fileglob &lt;code&gt;*.tar.gz&lt;/code&gt; will be transformed into this Perl regular expression</source>
          <target state="translated">En este caso, el archivo de entrada glob &lt;code&gt;*.tar.gz&lt;/code&gt; se transformar&amp;aacute; en esta expresi&amp;oacute;n regular de Perl</target>
        </trans-unit>
        <trans-unit id="779676f9752f28e10579e10de2beca329de72fea" translate="yes" xml:space="preserve">
          <source>In this case the main point to note is that only the last item in the list is returned from the subroutine.</source>
          <target state="translated">En este caso,el principal punto a tener en cuenta es que sólo se devuelve de la subrutina el último elemento de la lista.</target>
        </trans-unit>
        <trans-unit id="570da359699c43b4bafeef5621d77b9bbf97eae1" translate="yes" xml:space="preserve">
          <source>In this case the program will be run multiple times using each target file.</source>
          <target state="translated">En este caso el programa se ejecutará varias veces usando cada archivo de destino.</target>
        </trans-unit>
        <trans-unit id="2b0f3bc0334984124b9519a2c06691727251a21f" translate="yes" xml:space="preserve">
          <source>In this case we know that the string must contain a &lt;code&gt;foo&lt;/code&gt; which must be followed by &lt;code&gt;bar&lt;/code&gt; . We can use Fast Boyer-Moore matching as implemented in &lt;code&gt;fbm_instr()&lt;/code&gt; to find the location of these strings. If they don't exist then we don't need to resort to the much more expensive regex engine. Even better, if they do exist then we can use their positions to reduce the search space that the regex engine needs to cover to determine if the entire pattern matches.</source>
          <target state="translated">En este caso sabemos que la cadena debe contener un &lt;code&gt;foo&lt;/code&gt; que debe ir seguido de &lt;code&gt;bar&lt;/code&gt; . Podemos usar la coincidencia r&amp;aacute;pida de Boyer-Moore como se implement&amp;oacute; en &lt;code&gt;fbm_instr()&lt;/code&gt; para encontrar la ubicaci&amp;oacute;n de estas cadenas. Si no existen, entonces no es necesario recurrir al motor de expresiones regulares mucho m&amp;aacute;s caro. A&amp;uacute;n mejor, si existen, podemos usar sus posiciones para reducir el espacio de b&amp;uacute;squeda que el motor de expresiones regulares necesita cubrir para determinar si todo el patr&amp;oacute;n coincide.</target>
        </trans-unit>
        <trans-unit id="7adf1e07cf7e2de470c351018728e0b1e6d507de" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be substituted for the item to be cloned. If set to zero:</source>
          <target state="translated">En este caso, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; sustituir&amp;aacute; al art&amp;iacute;culo a clonar. Si se establece en cero:</target>
        </trans-unit>
        <trans-unit id="6c66364cb0f3415ad0b76d2776349bcfcc95f50e" translate="yes" xml:space="preserve">
          <source>In this case, because the &lt;code&gt;JMPENV&lt;/code&gt; level recorded in the &lt;code&gt;CxEVAL&lt;/code&gt; differs from the current one, &lt;code&gt;docatch&lt;/code&gt; just does a &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; and the C stack unwinds to:</source>
          <target state="translated">En este caso, debido a que el nivel de &lt;code&gt;JMPENV&lt;/code&gt; registrado en el &lt;code&gt;CxEVAL&lt;/code&gt; difiere del actual, &lt;code&gt;docatch&lt;/code&gt; solo hace un &lt;code&gt;JMPENV_JUMP(3)&lt;/code&gt; y la pila de C se desenrolla para:</target>
        </trans-unit>
        <trans-unit id="38ba605349bb20448e174208a445c574b3bbbe89" translate="yes" xml:space="preserve">
          <source>In this case, if</source>
          <target state="translated">En este caso,si</target>
        </trans-unit>
        <trans-unit id="bb541d2c2f3bc8d3faf27ff1a86aae9a349b1c56" translate="yes" xml:space="preserve">
          <source>In this case, it finds a &lt;code&gt;save()&lt;/code&gt; method in the &lt;code&gt;File&lt;/code&gt; class. Note that the object passed to &lt;code&gt;save()&lt;/code&gt; in this case is still a &lt;code&gt;File::MP3&lt;/code&gt; object, even though the method is found in the &lt;code&gt;File&lt;/code&gt; class.</source>
          <target state="translated">En este caso, encuentra un m&amp;eacute;todo &lt;code&gt;save()&lt;/code&gt; en la clase &lt;code&gt;File&lt;/code&gt; . Tenga en cuenta que el objeto pasado a &lt;code&gt;save()&lt;/code&gt; en este caso sigue siendo un objeto &lt;code&gt;File::MP3&lt;/code&gt; , aunque el m&amp;eacute;todo se encuentra en la clase &lt;code&gt;File&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9ed12158dee993299753ff9f1084ddd79644a4a" translate="yes" xml:space="preserve">
          <source>In this case, the BEGIN is freed immediately after execution since there are no active references to it: the anon sub prototype has &lt;code&gt;CvWEAKOUTSIDE&lt;/code&gt; set since it's not a closure, and $a points to the same CV, so it doesn't contribute to BEGIN's refcount either. When $a is executed, the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; '$x'&lt;/code&gt; causes the chain of &lt;code&gt;CvOUTSIDE&lt;/code&gt; s to be followed, and the freed BEGIN is accessed.</source>
          <target state="translated">En este caso, el BEGIN se libera inmediatamente despu&amp;eacute;s de la ejecuci&amp;oacute;n, ya que no hay referencias activas a &amp;eacute;l: el &lt;code&gt;CvWEAKOUTSIDE&lt;/code&gt; anon tiene CvWEAKOUTSIDE configurado ya que no es un cierre, y $ a apunta al mismo CV, por lo que no contribuye a BEGIN's refcount tampoco. Cuando se ejecuta $ a, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; '$x'&lt;/code&gt; hace que se &lt;code&gt;CvOUTSIDE&lt;/code&gt; la cadena de CvOUTSIDE s, y se accede al BEGIN liberado.</target>
        </trans-unit>
        <trans-unit id="445e238a2cf161c353789dd6ff6ac3c0dc14cd3f" translate="yes" xml:space="preserve">
          <source>In this case, the data flow from the pipeline can be represented as follows:</source>
          <target state="translated">En este caso,el flujo de datos del oleoducto puede representarse de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="76ef174320084e5b9df3d70ddc86b3f46c5bccd4" translate="yes" xml:space="preserve">
          <source>In this case, the function will overload both of the three way comparison operators. For all overload operations using non-alpha characters, you must type the parameter without quoting, separating multiple overloads with whitespace. Note that &quot;&quot; (the stringify overload) should be entered as \&quot;\&quot; (i.e. escaped).</source>
          <target state="translated">En este caso,la función sobrecargará a los dos operadores de comparación de tres vías.Para todas las operaciones de sobrecarga que utilicen caracteres no alfa,debe escribir el parámetro sin comillas,separando las múltiples sobrecargas con espacios en blanco.Tenga en cuenta que &quot;&quot; (el stringify overload)debe ser introducido como \&quot;\N&quot;\N-escape&quot; (es decir,escapado).</target>
        </trans-unit>
        <trans-unit id="3d4b7be359855c6b427d300bbc65846d64f8cf9d" translate="yes" xml:space="preserve">
          <source>In this case, the reference count for the variables will never reach 0, and the references will never be garbage-collected. This can lead to memory leaks.</source>
          <target state="translated">En este caso,la cuenta de referencia de las variables nunca llegará a 0,y las referencias nunca serán recogidas por la basura.Esto puede conducir a fugas de memoria.</target>
        </trans-unit>
        <trans-unit id="cc6f51a2de8f8d888eeb99016141d99a3d195bd9" translate="yes" xml:space="preserve">
          <source>In this case, the yes-pattern is never directly executed, and no no-pattern is allowed. Similar in spirit to &lt;code&gt;(?{0})&lt;/code&gt; but more efficient. See below for details.</source>
          <target state="translated">En este caso, el patr&amp;oacute;n yes nunca se ejecuta directamente y no se permite ning&amp;uacute;n patr&amp;oacute;n no. Similar en esp&amp;iacute;ritu a &lt;code&gt;(?{0})&lt;/code&gt; pero m&amp;aacute;s eficiente. Consulte los detalles a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="18c031d44e01689714a7d1be31709243cd683ac5" translate="yes" xml:space="preserve">
          <source>In this case, there's not much to see, but of course normally there's pages of stuff to wade through, and 'l' can be very useful. To reset your view to the line we're about to execute, type a lone period '.':</source>
          <target state="translated">En este caso,no hay mucho que ver,pero por supuesto normalmente hay páginas de cosas para vadear,y &quot;l&quot; puede ser muy útil.Para reajustar la vista a la línea que estamos a punto de ejecutar,escriba un punto único '.':</target>
        </trans-unit>
        <trans-unit id="d6cf564bd8d8897a564d43efb035ccf8128bfa59" translate="yes" xml:space="preserve">
          <source>In this case, you cannot omit the first</source>
          <target state="translated">En este caso,no se puede omitir la primera</target>
        </trans-unit>
        <trans-unit id="c6ff251bc24fa4db8e24130b2fd6042c3837352e" translate="yes" xml:space="preserve">
          <source>In this case, you use the &lt;code&gt;detach()&lt;/code&gt; method. Once a thread is detached, it'll run until it's finished; then Perl will clean up after it automatically.</source>
          <target state="translated">En este caso, usa el m&amp;eacute;todo &lt;code&gt;detach()&lt;/code&gt; . Una vez que se separa un hilo, se ejecutar&amp;aacute; hasta que finalice; luego Perl lo limpiar&amp;aacute; autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="f06a2a722f183edc4aa583848f94d04c7c5ace33" translate="yes" xml:space="preserve">
          <source>In this document, &quot;must&quot; / &quot;must not&quot;, &quot;should&quot; / &quot;should not&quot;, and &quot;may&quot; have their conventional (cf. RFC 2119) meanings: &quot;X must do Y&quot; means that if X doesn't do Y, it's against this specification, and should really be fixed. &quot;X should do Y&quot; means that it's recommended, but X may fail to do Y, if there's a good reason. &quot;X may do Y&quot; is merely a note that X can do Y at will (although it is up to the reader to detect any connotation of &quot;and I think it would be</source>
          <target state="translated">En este documento,&quot;debe&quot;/&quot;no debe&quot;,&quot;debe&quot;/&quot;no debe&quot; y &quot;puede&quot; tienen sus significados convencionales (cf.RFC 2119):&quot;X debe hacer Y&quot; significa que si X no hace Y,va en contra de esta especificación,y realmente debe ser fijado.&quot;X debe hacer Y&quot; significa que es recomendable,pero X puede no hacer Y,si hay una buena razón.&quot;X puede hacer Y&quot; es simplemente una nota que X puede hacer Y a voluntad (aunque depende del lector detectar cualquier connotación de &quot;y creo que sería</target>
        </trans-unit>
        <trans-unit id="f65b8f5200f2d0ab93731dfb5d397ad4f5889d0a" translate="yes" xml:space="preserve">
          <source>In this documentation, &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; on the first line of the program will stand in for whatever method works on your system. You are advised to use a specific path if you care about a specific version.</source>
          <target state="translated">En esta documentaci&amp;oacute;n, &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; en la primera l&amp;iacute;nea del programa reemplazar&amp;aacute; cualquier m&amp;eacute;todo que funcione en su sistema. Se le recomienda utilizar una ruta espec&amp;iacute;fica si le interesa una versi&amp;oacute;n espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="317bfd052c319e12e1dcc797f6ad498f8171149f" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;--all&lt;/code&gt; will</source>
          <target state="translated">En este ejemplo, &lt;code&gt;--all&lt;/code&gt; voluntad</target>
        </trans-unit>
        <trans-unit id="e92bf3ad9ffe37a0d52db0112f7aacb357e3a712" translate="yes" xml:space="preserve">
          <source>In this example, a new &lt;code&gt;$x&lt;/code&gt; is created when &lt;code&gt;whatever&lt;/code&gt; is called, and also a new &lt;code&gt;inner&lt;/code&gt; , which can see the new &lt;code&gt;$x&lt;/code&gt; . A &quot;state&quot; sub will only see the &lt;code&gt;$x&lt;/code&gt; from the first call to &lt;code&gt;whatever&lt;/code&gt; .</source>
          <target state="translated">En este ejemplo, se crea un nuevo &lt;code&gt;$x&lt;/code&gt; cuando se llama &lt;code&gt;whatever&lt;/code&gt; sea, y tambi&amp;eacute;n un nuevo &lt;code&gt;inner&lt;/code&gt; , que puede ver el nuevo &lt;code&gt;$x&lt;/code&gt; . Un sub &quot;estado&quot; solo ver&amp;aacute; el &lt;code&gt;$x&lt;/code&gt; de la primera llamada a &lt;code&gt;whatever&lt;/code&gt; que sea .</target>
        </trans-unit>
        <trans-unit id="dd205d2b3e2dec6816acf70e5f088db6d1ebf4c2" translate="yes" xml:space="preserve">
          <source>In this example, only the first two assignments will be done immediately; after this, all the changes to the file will be deferred up to the user-specified memory limit.</source>
          <target state="translated">En este ejemplo,sólo las dos primeras asignaciones se harán inmediatamente;después de esto,todos los cambios en el archivo se aplazarán hasta el límite de memoria especificado por el usuario.</target>
        </trans-unit>
        <trans-unit id="19c920ce6f8f3e81b20912d17931330182ad0a53" translate="yes" xml:space="preserve">
          <source>In this example, we will accept a reference to an array as an input parameter, and return a reference to an array of hashes. This will demonstrate manipulation of complex Perl data types from an XSUB.</source>
          <target state="translated">En este ejemplo,aceptaremos una referencia a una matriz como parámetro de entrada,y devolveremos una referencia a una matriz de hashes.Esto demostrará la manipulación de tipos de datos complejos de Perl desde un XSUB.</target>
        </trans-unit>
        <trans-unit id="b22f4e4bd19dab41fd1e0219238248b0317aa35c" translate="yes" xml:space="preserve">
          <source>In this example, we will get the following output:</source>
          <target state="translated">En este ejemplo,obtendremos la siguiente salida:</target>
        </trans-unit>
        <trans-unit id="ee2620c9071c60e99d08be588513a407e9d8d25d" translate="yes" xml:space="preserve">
          <source>In this example, we'll do some more work with the argument stack. The previous examples have all returned only a single value. We'll now create an extension that returns an array.</source>
          <target state="translated">En este ejemplo,trabajaremos un poco más con la pila de argumentos.Todos los ejemplos anteriores han devuelto un solo valor.Ahora crearemos una extensión que devuelva una matriz.</target>
        </trans-unit>
        <trans-unit id="bc42a21b3f25368390b359d2c6a1e02f5038d3de" translate="yes" xml:space="preserve">
          <source>In this example, we'll now begin to write XSUBs that will interact with pre-defined C libraries. To begin with, we will build a small library of our own, then let h2xs write our .pm and .xs files for us.</source>
          <target state="translated">En este ejemplo,ahora comenzaremos a escribir XSUB que interactuarán con las bibliotecas C predefinidas.Para empezar,construiremos una pequeña biblioteca propia,luego dejaremos que los h2xs escriban nuestros archivos .pm y .xs por nosotros.</target>
        </trans-unit>
        <trans-unit id="ccfbfd9001b68d4bb9123e9a75f5be994042b170" translate="yes" xml:space="preserve">
          <source>In this form, it is easier to see a way to simplify the alternation. Alternatives 1, 2, and 4 all start with &lt;code&gt;\d+&lt;/code&gt; , so it could be factored out:</source>
          <target state="translated">De esta forma, es m&amp;aacute;s f&amp;aacute;cil ver una forma de simplificar la alternancia. Las alternativas 1, 2 y 4 comienzan con &lt;code&gt;\d+&lt;/code&gt; , por lo que podr&amp;iacute;a factorizarse:</target>
        </trans-unit>
        <trans-unit id="5b24fb7d07c9db355f07769493a9de293acc8111" translate="yes" xml:space="preserve">
          <source>In this hash each key represents a category of functions and the value is a short description of that category.</source>
          <target state="translated">En este hash cada tecla representa una categoría de funciones y el valor es una breve descripción de esa categoría.</target>
        </trans-unit>
        <trans-unit id="3f56d8b8bdb8c26426f0b6660b2be0710caeb9c2" translate="yes" xml:space="preserve">
          <source>In this hash each key represents a function and the value is a short description of that function.</source>
          <target state="translated">En este hash cada tecla representa una función y el valor es una breve descripción de esa función.</target>
        </trans-unit>
        <trans-unit id="4112ec477caea48107dc76ca327ecc26b9559568" translate="yes" xml:space="preserve">
          <source>In this hash each key represents a function and the value is the category. The category can be a comma separated list.</source>
          <target state="translated">En este hash cada tecla representa una función y el valor es la categoría.La categoría puede ser una lista separada por comas.</target>
        </trans-unit>
        <trans-unit id="5b991cc90d42bab8c037a6310ce95c7fd23aada4" translate="yes" xml:space="preserve">
          <source>In this instance the &quot;Store&quot; and &quot;Fetch&quot; methods are encapsulated inside a &quot;Filter&quot; method.</source>
          <target state="translated">En este caso los métodos &quot;Store&quot; y &quot;Fetch&quot; están encapsulados dentro de un método &quot;Filter&quot;.</target>
        </trans-unit>
        <trans-unit id="d35ad5c2c0618e945079ac0ca929cf4d613d24d9" translate="yes" xml:space="preserve">
          <source>In this library, the numbers are represented in base B = 10**N, where N is the largest possible value that does not cause overflow in the intermediate computations. The base B elements are stored in an array, with the least significant element stored in array element zero. There are no leading zero elements, except a single zero element when the number is zero.</source>
          <target state="translated">En esta biblioteca,los números están representados en la base B=10**N,donde N es el mayor valor posible que no causa desbordamiento en los cálculos intermedios.Los elementos de la base B se almacenan en una matriz,con el elemento menos significativo almacenado en el elemento cero de la matriz.No hay elementos cero principales,excepto un único elemento cero cuando el número es cero.</target>
        </trans-unit>
        <trans-unit id="df68cfd3648ab58a91a7f368ccaceffbf7d1f325" translate="yes" xml:space="preserve">
          <source>In this particular case we don't have to call</source>
          <target state="translated">En este caso en particular no tenemos que llamar</target>
        </trans-unit>
        <trans-unit id="dad6a924b2e38abcfe4b4ffded7acf8266a85c31" translate="yes" xml:space="preserve">
          <source>In this pass the input pattern is parsed in order to calculate how much space is needed for each regop we would need to emit. The size is also used to determine whether long jumps will be required in the program.</source>
          <target state="translated">En este paso se analiza el patrón de entrada para calcular cuánto espacio se necesita para cada regop que tendríamos que emitir.El tamaño también se utiliza para determinar si se necesitarán saltos largos en el programa.</target>
        </trans-unit>
        <trans-unit id="41f31a4be766288871cf075eb0ef8be8f75f8e7b" translate="yes" xml:space="preserve">
          <source>In this pod section each line obeys the format</source>
          <target state="translated">En esta sección de la vaina cada línea obedece al formato</target>
        </trans-unit>
        <trans-unit id="2a40391b3aa03b91dc32950cbb01e23eafc7a333" translate="yes" xml:space="preserve">
          <source>In this regexp, you might expect the first minimal quantifier &lt;code&gt;.*?&lt;/code&gt; to match the empty string, because it is not constrained by a &lt;code&gt;^&lt;/code&gt; anchor to match the beginning of the word. Principle 0 applies here, however. Because it is possible for the whole regexp to match at the start of the string, it</source>
          <target state="translated">En esta expresi&amp;oacute;n regular, podr&amp;iacute;a esperar el primer cuantificador m&amp;iacute;nimo &lt;code&gt;.*?&lt;/code&gt; para que coincida con la cadena vac&amp;iacute;a, porque no est&amp;aacute; limitada por un ancla &lt;code&gt;^&lt;/code&gt; para que coincida con el comienzo de la palabra. Sin embargo, aqu&amp;iacute; se aplica el principio 0. Debido a que es posible que toda la expresi&amp;oacute;n regular coincida con el inicio de la cadena,</target>
        </trans-unit>
        <trans-unit id="1677ca4d68d5b3cd757901e02552a2ca6071fc8c" translate="yes" xml:space="preserve">
          <source>In this regular expression, the alternation matches either at the beginning or the end of the string since the anchors have a lower precedence than the alternation. With the &lt;code&gt;/g&lt;/code&gt; flag, the substitution makes all possible matches, so it gets both. Remember, the trailing newline matches the &lt;code&gt;\s+&lt;/code&gt;, and the &lt;code&gt;$&lt;/code&gt; anchor can match to the absolute end of the string, so the newline disappears too. Just add the newline to the output, which has the added benefit of preserving &quot;blank&quot; (consisting entirely of whitespace) lines which the &lt;code&gt;^\s+&lt;/code&gt; would remove all by itself:</source>
          <target state="translated">En esta expresi&amp;oacute;n regular, la alternancia coincide al principio o al final de la cadena, ya que los anclajes tienen una precedencia menor que la alternancia. Con la bandera &lt;code&gt;/g&lt;/code&gt; , la sustituci&amp;oacute;n hace todas las coincidencias posibles, por lo que obtiene ambas. Recuerde, el salto de l&amp;iacute;nea final coincide con &lt;code&gt;\s+&lt;/code&gt; , y el ancla &lt;code&gt;$&lt;/code&gt; puede coincidir con el final absoluto de la cadena, por lo que el salto de l&amp;iacute;nea tambi&amp;eacute;n desaparece. Simplemente agregue la nueva l&amp;iacute;nea a la salida, que tiene el beneficio adicional de preservar las l&amp;iacute;neas &quot;en blanco&quot; (que consisten enteramente en espacios en blanco) que el &lt;code&gt;^\s+&lt;/code&gt; eliminar&amp;iacute;a por s&amp;iacute; solo:</target>
        </trans-unit>
        <trans-unit id="77b676e373d337a1558a3681668f6ee37714295f" translate="yes" xml:space="preserve">
          <source>In this statement, &lt;code&gt;World&lt;/code&gt; is a regex and the &lt;code&gt;//&lt;/code&gt; enclosing &lt;code&gt;/World/&lt;/code&gt; tells Perl to search a string for a match. The operator &lt;code&gt;=~&lt;/code&gt; associates the string with the regex match and produces a true value if the regex matched, or false if the regex did not match. In our case, &lt;code&gt;World&lt;/code&gt; matches the second word in &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; , so the expression is true. This idea has several variations.</source>
          <target state="translated">En esta declaraci&amp;oacute;n, &lt;code&gt;World&lt;/code&gt; es una expresi&amp;oacute;n regular y &lt;code&gt;//&lt;/code&gt; que encierra &lt;code&gt;/World/&lt;/code&gt; le dice a Perl que busque una cadena para encontrar una coincidencia. El operador &lt;code&gt;=~&lt;/code&gt; asocia la cadena con la expresi&amp;oacute;n regular y produce un valor verdadero si la expresi&amp;oacute;n regular coincide, o falso si la expresi&amp;oacute;n regular no coincide. En nuestro caso, &lt;code&gt;World&lt;/code&gt; coincide con la segunda palabra en &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; , por lo que la expresi&amp;oacute;n es verdadera. Esta idea tiene varias variaciones.</target>
        </trans-unit>
        <trans-unit id="c818981124c0efd397c772e8c5a5bccf099d60f4" translate="yes" xml:space="preserve">
          <source>In this way (as for perl's scalars) a pointer to a PerlIOBuf can be treated as a pointer to a PerlIOl.</source>
          <target state="translated">De esta manera (como en el caso de los escalares de perlino)un puntero a un PerlIOBuf puede ser tratado como un puntero a un PerlIOl.</target>
        </trans-unit>
        <trans-unit id="47c607bae4c1c842072097188930b7f5e712b730" translate="yes" xml:space="preserve">
          <source>In those 8 cases above, the value of EXPR is used directly as a boolean, so no smartmatching is done. You may think of &lt;code&gt;when&lt;/code&gt; as a smartsmartmatch.</source>
          <target state="translated">En los 8 casos anteriores, el valor de EXPR se usa directamente como booleano, por lo que no se realiza ninguna comparaci&amp;oacute;n inteligente. Puede pensar en &lt;code&gt;when&lt;/code&gt; como un smartsmartmatch.</target>
        </trans-unit>
        <trans-unit id="9186d74e76b80422b13adb44366ed78c8afac4f7" translate="yes" xml:space="preserve">
          <source>In those cases, it is easier to just append the filtering subroutine and any terminator specification directly to the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement that loads Filter::Simple, like so:</source>
          <target state="translated">En esos casos, es m&amp;aacute;s f&amp;aacute;cil agregar la subrutina de filtrado y cualquier especificaci&amp;oacute;n de terminador directamente a la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; que carga Filter :: Simple, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="95167fe0e36a49f5080da73352ed44710a152f26" translate="yes" xml:space="preserve">
          <source>In those cases, you would turn off &lt;code&gt;strict 'refs'&lt;/code&gt; temporarily so you can play around with the symbol table. For example:</source>
          <target state="translated">En esos casos, desactivar&amp;iacute;a los &lt;code&gt;strict 'refs'&lt;/code&gt; temporalmente para poder jugar con la tabla de s&amp;iacute;mbolos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c6200c4c82d6daee49dcd17953c7919b7352b65f" translate="yes" xml:space="preserve">
          <source>In time-critical applications, it is worthwhile to avoid splitting into more fields than necessary. Thus, when assigning to a list, if LIMIT is omitted (or zero), then LIMIT is treated as though it were one larger than the number of variables in the list; for the following, LIMIT is implicitly 3:</source>
          <target state="translated">En las aplicaciones en las que el tiempo es un factor crítico,vale la pena evitar la división en más campos de los necesarios.Así,cuando se asigna a una lista,si se omite el LÍMITE (o cero),entonces el LÍMITE se trata como si fuera uno más que el número de variables de la lista;para lo siguiente,el LÍMITE es implícitamente 3:</target>
        </trans-unit>
        <trans-unit id="61aec1693f3cca77d878f9993860b197db04ab69" translate="yes" xml:space="preserve">
          <source>In turning &lt;a href=&quot;http://search.cpan.org/perldoc/Foo::Bar&quot;&gt;Foo::Bar&lt;/a&gt; into &lt;a href=&quot;http://whatever/Foo%3a%3aBar&quot;&gt;http://whatever/Foo%3a%3aBar&lt;/a&gt;, what to put before the &quot;Foo%3a%3aBar&quot;. The default value is &quot;&lt;a href=&quot;http://search.cpan.org/perldoc&quot;&gt;http://search.cpan.org/perldoc&lt;/a&gt;?&quot;.</source>
          <target state="translated">Al convertir &lt;a href=&quot;http://search.cpan.org/perldoc/Foo::Bar&quot;&gt;Foo :: Bar&lt;/a&gt; en &lt;a href=&quot;http://whatever/Foo%3a%3aBar&quot;&gt;http: // lo que sea / Foo% 3a% 3aBar&lt;/a&gt; , qu&amp;eacute; poner antes de &quot;Foo% 3a% 3aBar&quot;. El valor predeterminado es &quot; &lt;a href=&quot;http://search.cpan.org/perldoc&quot;&gt;http://search.cpan.org/perldoc&lt;/a&gt; ?&quot;.</target>
        </trans-unit>
        <trans-unit id="fe66d5d405c8ef8a7eac08fc91eff0a843fd6e3f" translate="yes" xml:space="preserve">
          <source>In turning &lt;code&gt;&lt;i&gt;crontab(5)&lt;/i&gt;&lt;/code&gt; into &lt;a href=&quot;http://whatever/man/1/crontab&quot;&gt;http://whatever/man/1/crontab&lt;/a&gt;, what to put before the &quot;1/crontab&quot;. The default value is &quot;&lt;a href=&quot;http://man.he.net/man&quot;&gt;http://man.he.net/man&lt;/a&gt;&quot;.</source>
          <target state="translated">Al convertir &lt;code&gt;&lt;i&gt;crontab(5)&lt;/i&gt;&lt;/code&gt; en &lt;a href=&quot;http://whatever/man/1/crontab&quot;&gt;http: // lo que sea / man / 1 / crontab&lt;/a&gt; , qu&amp;eacute; poner antes de &quot;1 / crontab&quot;. El valor predeterminado es &quot; &lt;a href=&quot;http://man.he.net/man&quot;&gt;http://man.he.net/man&lt;/a&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="43281809d91fd31f1807b9436030386775e6651b" translate="yes" xml:space="preserve">
          <source>In typical VMS style, only the first letter of the value of this logical name is actually checked in a case insensitive mode, and it is considered enabled if it is the value &quot;T&quot;,&quot;1&quot; or &quot;E&quot;.</source>
          <target state="translated">En el estilo típico de VMS,sólo la primera letra del valor de este nombre lógico se comprueba realmente en un modo que no distingue entre mayúsculas y minúsculas,y se considera activada si es el valor &quot;T&quot;,&quot;1&quot; o &quot;E&quot;.</target>
        </trans-unit>
        <trans-unit id="573e7b50018345b4e76799c05af940dc27c74f2b" translate="yes" xml:space="preserve">
          <source>In ualarm() you tried to use number of microseconds or interval (also in microseconds) more than 1_000_000 and setitimer() is not available in your system to emulate that case.</source>
          <target state="translated">En ualarm()intentaste usar el número de microsegundos o intervalo (también en microsegundos)más de 1_000_000 y setimer()no está disponible en tu sistema para emular ese caso.</target>
        </trans-unit>
        <trans-unit id="f02423b74e4b6df478931aa6ac2f4633241db988" translate="yes" xml:space="preserve">
          <source>In verbose mode, a warning is printed if shadows are found (i.e., more than one POD file with the same POD name is found, e.g.</source>
          <target state="translated">En el modo verborreico,se imprime una advertencia si se encuentran sombras (es decir,si se encuentra más de un archivo POD con el mismo nombre POD,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="8a3ebab20ae57eb43347721d9e5a409b1ce17a43" translate="yes" xml:space="preserve">
          <source>In version 2.37 the first argument to the callback function was changed from string to object. This was done to make room for extensions and more detailed control. The object stringifies to the option name so this change should not introduce compatibility problems.</source>
          <target state="translated">En la versión 2.37 el primer argumento de la función de devolución de llamada se cambió de cadena a objeto.Esto se hizo para hacer espacio para las extensiones y un control más detallado.El objeto se encadena al nombre de la opción,por lo que este cambio no debería introducir problemas de compatibilidad.</target>
        </trans-unit>
        <trans-unit id="880a8be23ba2ee8779ff63078e49dfc5216b39eb" translate="yes" xml:space="preserve">
          <source>In versions 5.000 and 5.001, instead of using the above line, you will need to use the following line:</source>
          <target state="translated">En las versiones 5.000 y 5.001,en lugar de usar la línea anterior,tendrá que usar la siguiente línea:</target>
        </trans-unit>
        <trans-unit id="1cc474b32c69cb459158c3dcaef8e4f4b651d874" translate="yes" xml:space="preserve">
          <source>In versions 5.6 and later, Perl won't recompile the regular expression if the variable hasn't changed, so you probably don't need the &lt;code&gt;/o&lt;/code&gt; option. It doesn't hurt, but it doesn't help either. If you want any version of Perl to compile the regular expression only once even if the variable changes (thus, only using its initial value), you still need the &lt;code&gt;/o&lt;/code&gt;.</source>
          <target state="translated">En las versiones 5.6 y posteriores, Perl no recompilar&amp;aacute; la expresi&amp;oacute;n regular si la variable no ha cambiado, por lo que probablemente no necesite la opci&amp;oacute;n &lt;code&gt;/o&lt;/code&gt; . No duele, pero tampoco ayuda. Si desea que cualquier versi&amp;oacute;n de Perl compile la expresi&amp;oacute;n regular solo una vez, incluso si la variable cambia (por lo tanto, solo usa su valor inicial), a&amp;uacute;n necesita la &lt;code&gt;/o&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb448bdd461c35050663768e40f737fb69d01266" translate="yes" xml:space="preserve">
          <source>In versions of 5.002 prior to the gamma version, the test script in Example 1 will not function properly. You need to change the &quot;use lib&quot; line to read:</source>
          <target state="translated">En las versiones de 5.002 anteriores a la versión gamma,el guión de prueba del ejemplo 1 no funcionará correctamente.Necesitas cambiar la línea de &quot;use lib&quot; para leer:</target>
        </trans-unit>
        <trans-unit id="47fb4d46b782f60712d6e476480e232acaeda83d" translate="yes" xml:space="preserve">
          <source>In versions of 5.002 prior to version 5.002b1h, the test.pl file was not automatically created by h2xs. This means that you cannot say &quot;make test&quot; to run the test script. You will need to add the following line before the &quot;use extension&quot; statement:</source>
          <target state="translated">En las versiones de 5.002 anteriores a la 5.002b1h,el archivo test.pl no fue creado automáticamente por h2xs.Esto significa que no se puede decir &quot;hacer la prueba&quot; para ejecutar el script de prueba.Tendrá que añadir la siguiente línea antes de la declaración &quot;use extension&quot;:</target>
        </trans-unit>
        <trans-unit id="ac1080be96df0c995d03afc96266140d8a96249c" translate="yes" xml:space="preserve">
          <source>In versions of Perl prior to 5.004, per-locale collation was possible using the &lt;code&gt;I18N::Collate&lt;/code&gt; library module. This module is now mildly obsolete and should be avoided in new applications. The &lt;code&gt;LC_COLLATE&lt;/code&gt; functionality is now integrated into the Perl core language: One can use locale-specific scalar data completely normally with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , so there is no longer any need to juggle with the scalar references of &lt;code&gt;I18N::Collate&lt;/code&gt; .</source>
          <target state="translated">En versiones de Perl anteriores a la 5.004, la clasificaci&amp;oacute;n por configuraci&amp;oacute;n regional era posible utilizando el m&amp;oacute;dulo de biblioteca &lt;code&gt;I18N::Collate&lt;/code&gt; . Este m&amp;oacute;dulo ahora est&amp;aacute; ligeramente obsoleto y debe evitarse en nuevas aplicaciones. La funcionalidad &lt;code&gt;LC_COLLATE&lt;/code&gt; ahora est&amp;aacute; integrada en el lenguaje central de Perl: se pueden usar datos escalares espec&amp;iacute;ficos de la configuraci&amp;oacute;n regional de forma completamente normal con la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; , por lo que ya no es necesario hacer malabarismos con las referencias escalares de &lt;code&gt;I18N::Collate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48a813c6d738225545b449a151bcdc156058f932" translate="yes" xml:space="preserve">
          <source>In your XS code, when you define an argument with a C type or when you are using a &lt;code&gt;CODE:&lt;/code&gt; and an &lt;code&gt;OUTPUT:&lt;/code&gt; section together with a C return type of your XSUB, it'll be the typemapping mechanism that makes this easy.</source>
          <target state="translated">En su c&amp;oacute;digo XS, cuando defina un argumento con un tipo C o cuando est&amp;eacute; usando una secci&amp;oacute;n &lt;code&gt;CODE:&lt;/code&gt; y una &lt;code&gt;OUTPUT:&lt;/code&gt; junto con un tipo de retorno C de su XSUB, ser&amp;aacute; el mecanismo de mapeo de tipos el que lo haga f&amp;aacute;cil.</target>
        </trans-unit>
        <trans-unit id="9357861451f0b2f036dafa4da40d9ece429bcae6" translate="yes" xml:space="preserve">
          <source>In-line functions that are in headers that are accessible to XS code need to be able to compile without warnings with commonly used extra compilation flags, such as gcc's &lt;code&gt;-Wswitch-default&lt;/code&gt; which warns whenever a switch statement does not have a &quot;default&quot; case. The use of these extra flags is to catch potential problems in legal C code, and is often used by Perl aggregators, such as Linux distributors.</source>
          <target state="translated">Las funciones en l&amp;iacute;nea que se encuentran en los encabezados que son accesibles al c&amp;oacute;digo XS deben poder compilarse sin advertencias con indicadores de compilaci&amp;oacute;n adicionales de uso com&amp;uacute;n, como gcc's &lt;code&gt;-Wswitch-default&lt;/code&gt; , que advierte siempre que una declaraci&amp;oacute;n de cambio no tiene un caso &quot;predeterminado&quot; . El uso de estos indicadores adicionales es para detectar problemas potenciales en el c&amp;oacute;digo C legal, y los agregadores de Perl, como los distribuidores de Linux, lo utilizan a menudo.</target>
        </trans-unit>
        <trans-unit id="1fac261b8677bb294fa8e76c7f44d73a02d84ebb" translate="yes" xml:space="preserve">
          <source>In-memory IO, scalar IO</source>
          <target state="translated">IO en memoria,IO escalar</target>
        </trans-unit>
        <trans-unit id="022b1dbe77251c047456c4feb5d0409e122d6848" translate="yes" xml:space="preserve">
          <source>In-place upgrade of the supplied SV to a version object.</source>
          <target state="translated">Actualización in situ del SV suministrado a un objeto de la versión.</target>
        </trans-unit>
        <trans-unit id="1930e5219f1534978185f9ba376df01339047154" translate="yes" xml:space="preserve">
          <source>Inappropriate documentation</source>
          <target state="translated">Documentación inapropiada</target>
        </trans-unit>
        <trans-unit id="72a5f6c42a6c39ea891ecb24d22128fd281d0e18" translate="yes" xml:space="preserve">
          <source>Inc</source>
          <target state="translated">Inc</target>
        </trans-unit>
        <trans-unit id="70b0bede26554e7ae42316f8d3fd932a7cdc066c" translate="yes" xml:space="preserve">
          <source>Incidentally, note that each class's &lt;code&gt;%Lexicon&lt;/code&gt; inherits-and-extends the lexicons in its superclasses. This is not because these are special hashes</source>
          <target state="translated">Por cierto, tenga en cuenta que el &lt;code&gt;%Lexicon&lt;/code&gt; cada clase hereda y ampl&amp;iacute;a los l&amp;eacute;xicos de sus superclases. Esto no se debe a que estos sean hash especiales.</target>
        </trans-unit>
        <trans-unit id="56c1bcd0fe0c175606142de66e47a332c19454ad" translate="yes" xml:space="preserve">
          <source>Incidentally, note that there's no easy way to express a data paragraph starting with something that looks like a command. Consider:</source>
          <target state="translated">A propósito,note que no hay una forma fácil de expresar un párrafo de datos que comienza con algo que parece un comando.Considere:</target>
        </trans-unit>
        <trans-unit id="af23144864617d68a82ad427e6d70d917f0fe977" translate="yes" xml:space="preserve">
          <source>Incidentally, note the variance in the result values between the two examples; this is typical of benchmarking. If this were a real benchmark, you would probably want to run a lot more iterations.</source>
          <target state="translated">Por cierto,observe la variación de los valores de los resultados entre los dos ejemplos;esto es típico de los puntos de referencia.Si esto fuera un verdadero punto de referencia,probablemente querrías hacer muchas más iteraciones.</target>
        </trans-unit>
        <trans-unit id="11c54a59d8a9668fa20146e40c46116f6e7acc35" translate="yes" xml:space="preserve">
          <source>Include</source>
          <target state="translated">Include</target>
        </trans-unit>
        <trans-unit id="7f36757a0ff9e21d096da46852dca59689517203" translate="yes" xml:space="preserve">
          <source>Include /usr/ccs/bin/ in your PATH.</source>
          <target state="translated">Incluya /usr/ccs/bin/en su PATH.</target>
        </trans-unit>
        <trans-unit id="5f7213221d8f17a14d6c7b8882fe3f1c79362499" translate="yes" xml:space="preserve">
          <source>Include a &quot;POD ERRORS&quot; section in the outfile if there were any POD errors in the infile (default behaviour).</source>
          <target state="translated">Incluya una sección de &quot;ERRORES POD&quot; en el archivo de salida si hubo algún error POD en el archivo de entrada (comportamiento por defecto).</target>
        </trans-unit>
        <trans-unit id="1f63d3adcc78e2a751c9de88b5a592a5d6f05fed" translate="yes" xml:space="preserve">
          <source>Include a &quot;POD ERRORS&quot; section in the outfile if there were any POD errors in the infile. This section is included by default.</source>
          <target state="translated">Incluya una sección de &quot;ERRORES POD&quot; en el archivo de salida si hubo algún error POD en el archivo de entrada.Esta sección se incluye por defecto.</target>
        </trans-unit>
        <trans-unit id="1be836334b7992bf64bdd66feaf2cdd670e862a6" translate="yes" xml:space="preserve">
          <source>Include a single css source in the header:</source>
          <target state="translated">Incluya una sola fuente css en el encabezado:</target>
        </trans-unit>
        <trans-unit id="82da13ca7b8da7d4d7bd6d25f32b5e4df5ab790d" translate="yes" xml:space="preserve">
          <source>Include a single javascript source:</source>
          <target state="translated">Incluya una sola fuente de javascript:</target>
        </trans-unit>
        <trans-unit id="dacfcf246f0e94f511558260bbdd933b10ed8af6" translate="yes" xml:space="preserve">
          <source>Include any non-POD text from the input file in the output as well. Useful for viewing code documented with POD blocks with the POD rendered and the code left intact.</source>
          <target state="translated">Incluya cualquier texto no POD del archivo de entrada en la salida también.Útil para ver el código documentado con bloques POD con el POD renderizado y el código dejado intacto.</target>
        </trans-unit>
        <trans-unit id="b3aefa9c8a28918cfdeb274cb63c2499f4f13ccf" translate="yes" xml:space="preserve">
          <source>Include code for safely storing static data in the .xs file. Extensions that do no make use of static data can ignore this option.</source>
          <target state="translated">Incluya el código para almacenar de forma segura los datos estáticos en el archivo .xs.Las extensiones que no hacen uso de los datos estáticos pueden ignorar esta opción.</target>
        </trans-unit>
        <trans-unit id="73830e720872f365cfd2f2dbd3697deb29a3d139" translate="yes" xml:space="preserve">
          <source>Include file dirs eg: &lt;code&gt;&quot;-I/usr/5include -I/path/to/inc&quot;&lt;/code&gt;</source>
          <target state="translated">Incluir directorios de archivos, por ejemplo: &lt;code&gt;&quot;-I/usr/5include -I/path/to/inc&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf7dea1bf3fcc056eca7b649b6605fbf3217e27a" translate="yes" xml:space="preserve">
          <source>Include tests with your module</source>
          <target state="translated">Incluya pruebas con su módulo</target>
        </trans-unit>
        <trans-unit id="44cae264b95e40204b6c9817100d817393044faa" translate="yes" xml:space="preserve">
          <source>Include the `nstore' option to have the &lt;code&gt;Storable&lt;/code&gt; database written in `network order'. (See &lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt; for more details about this.)</source>
          <target state="translated">Incluya la opci&amp;oacute;n &quot;nstore&quot; para que la base de datos &lt;code&gt;Storable&lt;/code&gt; escriba en &quot;orden de red&quot;. (Consulte &lt;a href=&quot;storable&quot;&gt;Almacenable&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre esto).</target>
        </trans-unit>
        <trans-unit id="428c39cb578db360bfc5803c8ec5f4e60b61ea16" translate="yes" xml:space="preserve">
          <source>Include the code from the &lt;b&gt;.h&lt;/b&gt; file as a comment in the &lt;b&gt;.ph&lt;/b&gt; file. This is primarily used for debugging</source>
          <target state="translated">Incluya el c&amp;oacute;digo del archivo &lt;b&gt;.h&lt;/b&gt; como comentario en el archivo &lt;b&gt;.ph&lt;/b&gt; . Esto se usa principalmente para depurar</target>
        </trans-unit>
        <trans-unit id="5318c44a39f5f77944d683ed2f0ae1a7ab04539f" translate="yes" xml:space="preserve">
          <source>Include the following line in the XS section of your XS file: (don't break the line)</source>
          <target state="translated">Incluya la siguiente línea en la sección XS de su archivo XS:(no rompa la línea)</target>
        </trans-unit>
        <trans-unit id="eb7645ad7831d7d6fd6181e27396b77155390482" translate="yes" xml:space="preserve">
          <source>Include the main program in the output, even if subroutines were also specified. This rendering is normally suppressed when a subroutine name or reference is given.</source>
          <target state="translated">Incluir el programa principal en la salida,aunque también se hayan especificado subrutinas.Esta representación se suprime normalmente cuando se da un nombre o una referencia de subrutina.</target>
        </trans-unit>
        <trans-unit id="39d690d519d42e4c1222e708f1a7882603060ecf" translate="yes" xml:space="preserve">
          <source>Include verbose configuration data in the report.</source>
          <target state="translated">Incluya datos de configuración verbosos en el informe.</target>
        </trans-unit>
        <trans-unit id="7af107d55e07795d28db937bc5e2e6b3d1acdce5" translate="yes" xml:space="preserve">
          <source>Included in the official Perl distribution, as in a standard module, a standard tool, or a standard Perl &lt;b&gt;manpage&lt;/b&gt;.</source>
          <target state="translated">Incluido en la distribuci&amp;oacute;n oficial de Perl, como en un m&amp;oacute;dulo est&amp;aacute;ndar, una herramienta est&amp;aacute;ndar o una p&amp;aacute;gina de &lt;b&gt;manual de&lt;/b&gt; Perl est&amp;aacute;ndar .</target>
        </trans-unit>
        <trans-unit id="0c36d5529b0434732ae50f5c4cfddc9ab638ebdc" translate="yes" xml:space="preserve">
          <source>Included recommended modules?</source>
          <target state="translated">¿Incluyó los módulos recomendados?</target>
        </trans-unit>
        <trans-unit id="2d5cfde693773293f9c93c5da459379d1390e74a" translate="yes" xml:space="preserve">
          <source>Included suggested modules?</source>
          <target state="translated">¿Incluyó los módulos sugeridos?</target>
        </trans-unit>
        <trans-unit id="fd1eb7c27a0ef162dc3c74b06bcd124d36810aee" translate="yes" xml:space="preserve">
          <source>Included with the standard Cygwin netrelease is the inetutils package which includes libutil.a.</source>
          <target state="translated">El paquete de inetutils,que incluye libutil.a,está incluido en la versión estándar de Cygwin netrelease.</target>
        </trans-unit>
        <trans-unit id="62deb9b6c9960c6cf27bcef72a0cb725d958b5ee" translate="yes" xml:space="preserve">
          <source>Includes the closing tag of &amp;lt;/title&amp;gt; and through the rest of the head till the opening of the body</source>
          <target state="translated">Incluye la etiqueta de cierre de &amp;lt;/title&amp;gt; y a trav&amp;eacute;s del resto de la cabeza hasta la apertura del cuerpo.</target>
        </trans-unit>
        <trans-unit id="9abdbb8c9871ea5d015e2e60e10f71a6f7c5bffa" translate="yes" xml:space="preserve">
          <source>Inclusion of library modules is better done with the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; operators, which also do automatic error checking and raise an exception if there's a problem.</source>
          <target state="translated">La inclusi&amp;oacute;n de m&amp;oacute;dulos de biblioteca se realiza mejor con los operadores de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , que tambi&amp;eacute;n realizan una verificaci&amp;oacute;n autom&amp;aacute;tica de errores y generan una excepci&amp;oacute;n si hay un problema.</target>
        </trans-unit>
        <trans-unit id="fc7468d33bdeb93695da594528f2501435fe4708" translate="yes" xml:space="preserve">
          <source>Inclusion of library modules is better done with the &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; operators, which also do automatic error checking and raise an exception if there's a problem.</source>
          <target state="translated">La inclusi&amp;oacute;n de m&amp;oacute;dulos de biblioteca se realiza mejor con los operadores de &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , que tambi&amp;eacute;n realizan una verificaci&amp;oacute;n autom&amp;aacute;tica de errores y generan una excepci&amp;oacute;n si hay un problema.</target>
        </trans-unit>
        <trans-unit id="d536a03f0c3143f6e1f810634a3c64f1cee1463a" translate="yes" xml:space="preserve">
          <source>Incompatibility with AIX Toolbox lib gdbm</source>
          <target state="translated">Incompatibilidad con AIX Toolbox lib gdbm</target>
        </trans-unit>
        <trans-unit id="e53b7251c10e4fb16639ff0eb74e48d3fdb255f3" translate="yes" xml:space="preserve">
          <source>Increment OBJ by one.</source>
          <target state="translated">Incrementar OBJ por uno.</target>
        </trans-unit>
        <trans-unit id="a3b00269821fb57d8ea2de1fc824b0f5f9a60902" translate="yes" xml:space="preserve">
          <source>Increment an SV's reference count. Use the &lt;code&gt;SvREFCNT_inc()&lt;/code&gt; wrapper instead.</source>
          <target state="translated">Incrementar el recuento de referencia de un SV. En su lugar, utilice el &lt;code&gt;SvREFCNT_inc()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e74e496959812fcc073992ca705206317cb9544" translate="yes" xml:space="preserve">
          <source>Increment the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt; . The pointer to the &lt;code&gt;refcounted_he&lt;/code&gt; is also returned. It is safe to pass a null pointer to this function: no action occurs and a null pointer is returned.</source>
          <target state="translated">Incrementa el recuento de referencias de un &lt;code&gt;refcounted_he&lt;/code&gt; . Tambi&amp;eacute;n se devuelve el puntero a &lt;code&gt;refcounted_he&lt;/code&gt; . Es seguro pasar un puntero nulo a esta funci&amp;oacute;n: no se produce ninguna acci&amp;oacute;n y se devuelve un puntero nulo.</target>
        </trans-unit>
        <trans-unit id="e3802b6aa343742e73ae6047c081fca9075a08d1" translate="yes" xml:space="preserve">
          <source>Increment the version number for every change, no matter how small</source>
          <target state="translated">Incrementar el número de versión para cada cambio,no importa cuán pequeño sea</target>
        </trans-unit>
        <trans-unit id="4c98c7bfa60bc9d7d9626649411d920868a3e57d" translate="yes" xml:space="preserve">
          <source>Increments &lt;code&gt;PL_sub_generation&lt;/code&gt; , which invalidates method caching in all packages.</source>
          <target state="translated">Incrementa &lt;code&gt;PL_sub_generation&lt;/code&gt; , lo que invalida el almacenamiento en cach&amp;eacute; del m&amp;eacute;todo en todos los paquetes.</target>
        </trans-unit>
        <trans-unit id="3272c368109726f88d497737f134b46e95de8369" translate="yes" xml:space="preserve">
          <source>Increments the reference count of the given SV, returning the SV.</source>
          <target state="translated">Incrementa la cuenta de referencia del SV dado,devolviendo el SV.</target>
        </trans-unit>
        <trans-unit id="b3fb59bb686d8260401f92a3aa6f2bbde8cfdc66" translate="yes" xml:space="preserve">
          <source>Indeed, a negative real number can be noted &lt;code&gt;[x,pi]&lt;/code&gt; (the modulus</source>
          <target state="translated">De hecho, se puede observar un n&amp;uacute;mero real negativo &lt;code&gt;[x,pi]&lt;/code&gt; (el m&amp;oacute;dulo</target>
        </trans-unit>
        <trans-unit id="a04774d4b73d320e20f71b059e1b914a71747c31" translate="yes" xml:space="preserve">
          <source>Indeed, to terminate the cycle, the $cnt should become false. However, the operator &lt;code&gt;bool&lt;/code&gt; for checking falsity is overloaded (this time via overloaded &lt;code&gt;&quot;&quot;&lt;/code&gt; ), and returns a long string, thus any object of type &lt;code&gt;symbolic&lt;/code&gt; is true. To overcome this, we need a way to compare an object to 0. In fact, it is easier to write a numeric conversion routine.</source>
          <target state="translated">De hecho, para terminar el ciclo, $ cnt deber&amp;iacute;a volverse falso. Sin embargo, el operador &lt;code&gt;bool&lt;/code&gt; para verificar la falsedad est&amp;aacute; sobrecargado (esta vez a trav&amp;eacute;s de sobrecargado &lt;code&gt;&quot;&quot;&lt;/code&gt; ) y devuelve una cadena larga, por lo que cualquier objeto de tipo &lt;code&gt;symbolic&lt;/code&gt; es verdadero. Para superar esto, necesitamos una forma de comparar un objeto con 0. De hecho, es m&amp;aacute;s f&amp;aacute;cil escribir una rutina de conversi&amp;oacute;n num&amp;eacute;rica.</target>
        </trans-unit>
        <trans-unit id="62ba8e1b3397c92c36fc4b8d835f19b0c882946b" translate="yes" xml:space="preserve">
          <source>Indent lines by multiples of</source>
          <target state="translated">Líneas de sangría por múltiplos de</target>
        </trans-unit>
        <trans-unit id="62114f3245956b96ef644ac166335fb4a4e9a90b" translate="yes" xml:space="preserve">
          <source>Independent of which seed is used in the hash function, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; return items in a per-hash randomized order. Modifying a hash by insertion will change the iteration order of that hash. This behavior can be overridden by using &lt;code&gt;hash_traversal_mask()&lt;/code&gt; from &lt;a href=&quot;hash/util&quot;&gt;Hash::Util&lt;/a&gt; or by using the PERL_PERTURB_KEYS environment variable, see &lt;a href=&quot;perlrun#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS in perlrun&lt;/a&gt;. Note that this feature controls the &quot;visible&quot; order of the keys, and not the actual order they are stored in.</source>
          <target state="translated">Independientemente de la semilla que se utilice en la funci&amp;oacute;n hash, las &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , los &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; elemento devuelve en un orden aleatorio por hash. La modificaci&amp;oacute;n de un hash por inserci&amp;oacute;n cambiar&amp;aacute; el orden de iteraci&amp;oacute;n de ese hash. Este comportamiento se puede anular usando &lt;code&gt;hash_traversal_mask()&lt;/code&gt; de &lt;a href=&quot;hash/util&quot;&gt;Hash :: Util&lt;/a&gt; o usando la variable de entorno PERL_PERTURB_KEYS, vea &lt;a href=&quot;perlrun#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS en perlrun&lt;/a&gt; . Tenga en cuenta que esta funci&amp;oacute;n controla el orden &quot;visible&quot; de las claves, y no el orden real en el que se almacenan.</target>
        </trans-unit>
        <trans-unit id="074fa110a121b41d1fc8547d15dc9f9c647ba94b" translate="yes" xml:space="preserve">
          <source>Independent subexpressions</source>
          <target state="translated">Subexpresiones independientes</target>
        </trans-unit>
        <trans-unit id="f095033a2da35066ce69235bfd888bf108da82db" translate="yes" xml:space="preserve">
          <source>Index/Value Array Slices</source>
          <target state="translated">Cortes de la matriz de índice/valor</target>
        </trans-unit>
        <trans-unit id="9376bb53130ade1b5bef94ae526efe4afa9ba571" translate="yes" xml:space="preserve">
          <source>India Pale Ale. Also the International Phonetic Alphabet, the standard alphabet used for phonetic notation worldwide. Draws heavily on Unicode, including many combining characters.</source>
          <target state="translated">India Pale Ale.También el Alfabeto Fonético Internacional,el alfabeto estándar utilizado para la notación fonética en todo el mundo.Se basa en gran medida en el Unicode,incluyendo muchos caracteres de combinación.</target>
        </trans-unit>
        <trans-unit id="7939b23cc59e5fecb713c284b9570bf5c06bc4a8" translate="yes" xml:space="preserve">
          <source>Indicate if List::Util was compiled with a C compiler</source>
          <target state="translated">Indique si la lista::Util fue compilada con un compilador C</target>
        </trans-unit>
        <trans-unit id="257f1f56edc7d22d13ca3e932a232d7b1ce1cb6a" translate="yes" xml:space="preserve">
          <source>Indicates how many bits are produced by the function used to generate normalized random numbers.</source>
          <target state="translated">Indica cuántos bits produce la función utilizada para generar números aleatorios normalizados.</target>
        </trans-unit>
        <trans-unit id="9e61b5d3c6d9951043a7c42ee4ac908615e6dda5" translate="yes" xml:space="preserve">
          <source>Indicates if the test suite is currently passing.</source>
          <target state="translated">Indica si el conjunto de pruebas está pasando actualmente.</target>
        </trans-unit>
        <trans-unit id="89c8d4afc13dccaac0824429842e2b3486822df1" translate="yes" xml:space="preserve">
          <source>Indicates that a user-supplied typemap should take precedence over the default typemaps. A single typemap may be specified as a string, or multiple typemaps can be specified in an array reference, with the last typemap having the highest precedence.</source>
          <target state="translated">Indica que un mapa tipográfico suministrado por el usuario debe tener prioridad sobre los mapas tipográficos predeterminados.Se puede especificar un solo mapa tipográfico como una cadena,o se pueden especificar múltiples mapas tipográficos en una referencia de matriz,teniendo el último mapa tipográfico la mayor precedencia.</target>
        </trans-unit>
        <trans-unit id="a07031906aeffe3119baa721e29202522fd91917" translate="yes" xml:space="preserve">
          <source>Indicates that a user-supplied typemap should take precedence over the default typemaps. This option may be used multiple times, with the last typemap having the highest precedence.</source>
          <target state="translated">Indica que un mapa tipográfico suministrado por el usuario debe tener prioridad sobre los mapas tipográficos predeterminados.Esta opción puede utilizarse varias veces,teniendo el último mapa de caracteres la mayor precedencia.</target>
        </trans-unit>
        <trans-unit id="2a6c6be6a26747d93fbb6c3ceadc3f2de48a2c99" translate="yes" xml:space="preserve">
          <source>Indicates that arguments returned from a callback should be discarded. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Indica que los argumentos devueltos por una devoluci&amp;oacute;n de llamada deben descartarse. Ver &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0527e8a268302f8a5a261750f72fb958d828bf1d" translate="yes" xml:space="preserve">
          <source>Indicates that no arguments are being sent to a callback. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Indica que no se env&amp;iacute;an argumentos a una devoluci&amp;oacute;n de llamada. Ver &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1a4d2b29fe4bc866080992a5b7a34bdbecb2aeb" translate="yes" xml:space="preserve">
          <source>Indicates that the caller is not interested in the hostname of the result, so it does not have to be converted. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned as the hostname.</source>
          <target state="translated">Indica que la persona que llama no est&amp;aacute; interesada en el nombre de host del resultado, por lo que no es necesario convertirlo. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devolver&amp;aacute; como nombre de host.</target>
        </trans-unit>
        <trans-unit id="b7ec72841bfda828e77f110fabfe3b01a8c116ba" translate="yes" xml:space="preserve">
          <source>Indicates that the caller is not interested in the service name of the result, so it does not have to be converted. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned as the service name.</source>
          <target state="translated">Indica que la persona que llama no est&amp;aacute; interesada en el nombre de servicio del resultado, por lo que no es necesario convertirlo. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devolver&amp;aacute; como el nombre del servicio.</target>
        </trans-unit>
        <trans-unit id="f532e8b4a0494e58b3d4e84b40bc705bd9387b6c" translate="yes" xml:space="preserve">
          <source>Indicates that the caller will pass a numeric address, rather than a hostname, and that getaddrinfo() must not perform a resolve operation on this name. This flag will prevent a possibly-slow network lookup operation, and instead return an error if a hostname is passed.</source>
          <target state="translated">Indica que el llamante pasará una dirección numérica,en lugar de un nombre de host,y que getaddrinfo()no debe realizar una operación de resolución sobre este nombre.Este indicador evitará una posible operación de búsqueda de red lenta,y en su lugar devolverá un error si se pasa un nombre de host.</target>
        </trans-unit>
        <trans-unit id="3c8087750e8c32a23d6ccd2949d0b7dadc5ebeea" translate="yes" xml:space="preserve">
          <source>Indicates that the caller wishes the canonical hostname (&lt;code&gt;canonname&lt;/code&gt; ) field of the result to be filled in.</source>
          <target state="translated">Indica que la persona que llama desea que se &lt;code&gt;canonname&lt;/code&gt; campo can&amp;oacute;nico de nombre de host ( canonname ) del resultado.</target>
        </trans-unit>
        <trans-unit id="0a02454d6f3918d6c495eef14a92688abca3837e" translate="yes" xml:space="preserve">
          <source>Indicates that the referenced subroutine is a method. A subroutine so marked will not trigger the &quot;Ambiguous call resolved as CORE::%s&quot; warning.</source>
          <target state="translated">Indica que la subrutina de referencia es un método.Una subrutina así marcada no activará la advertencia &quot;Llamada ambigua resuelta como CORE::%s&quot;.</target>
        </trans-unit>
        <trans-unit id="1c805274f5974d7ec81414a21a79ac4005ac17f0" translate="yes" xml:space="preserve">
          <source>Indicates that the referenced subroutine is a valid lvalue and can be assigned to. The subroutine must return a modifiable value such as a scalar variable, as described in &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Indica que la subrutina a la que se hace referencia es un valor l v&amp;aacute;lido y se puede asignar. La subrutina debe devolver un valor modificable, como una variable escalar, como se describe en &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="945cc6067d92cdd88f1d4d49015ca5f672222998" translate="yes" xml:space="preserve">
          <source>Indicates that the referenced variable can be shared across different threads when used in conjunction with the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; and &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt; modules.</source>
          <target state="translated">Indica que la variable a la que se hace referencia se puede compartir entre diferentes subprocesos cuando se utiliza junto con los &lt;a href=&quot;threads&quot;&gt;subprocesos&lt;/a&gt; y &lt;a href=&quot;threads/shared&quot;&gt;subprocesos ::&lt;/a&gt; m&amp;oacute;dulos compartidos .</target>
        </trans-unit>
        <trans-unit id="f5dc796b3c6e09f2adbe1df261ece3a878874b6e" translate="yes" xml:space="preserve">
          <source>Indicates that the socket address relates to a &lt;code&gt;SOCK_DGRAM&lt;/code&gt; socket, for the services whose name differs between TCP and UDP protocols.</source>
          <target state="translated">Indica que la direcci&amp;oacute;n del socket se relaciona con un socket &lt;code&gt;SOCK_DGRAM&lt;/code&gt; , para los servicios cuyo nombre difiere entre los protocolos TCP y UDP.</target>
        </trans-unit>
        <trans-unit id="d2c743e25365a9bdf3ff9b009f1ca948b97e6afb" translate="yes" xml:space="preserve">
          <source>Indicates that this resolution is for a local bind() for a passive (i.e. listening) socket, rather than an active (i.e. connecting) socket.</source>
          <target state="translated">Indica que esta resolución es para un bind()local para una toma pasiva (es decir,de escucha),en lugar de una toma activa (es decir,de conexión).</target>
        </trans-unit>
        <trans-unit id="1f10eaccf1b997cf7e5e0f8a8f4fab0ca55e7525" translate="yes" xml:space="preserve">
          <source>Indicates the macro to be used to generate normalized random numbers. Uses randfunc, often divided by (double) (((unsigned long) 1 &amp;lt;&amp;lt; randbits)) in order to normalize the result. In C programs, the macro &lt;code&gt;Drand01&lt;/code&gt; is mapped to drand01.</source>
          <target state="translated">Indica la macro que se utilizar&amp;aacute; para generar n&amp;uacute;meros aleatorios normalizados. Utiliza randfunc, a menudo dividido por (double) (((unsigned long) 1 &amp;lt;&amp;lt; randbits)) para normalizar el resultado. En los programas C, la macro &lt;code&gt;Drand01&lt;/code&gt; se asigna a drand01.</target>
        </trans-unit>
        <trans-unit id="46fbaffe89877f1dd0586f026a063f6bfd1ece0d" translate="yes" xml:space="preserve">
          <source>Indicates the name of the random number function to use. Values include drand48, random, and rand. In C programs, the &lt;code&gt;Drand01&lt;/code&gt; macro is defined to generate uniformly distributed random numbers over the range [0., 1.[ (see drand01 and nrand).</source>
          <target state="translated">Indica el nombre de la funci&amp;oacute;n de n&amp;uacute;mero aleatorio que se utilizar&amp;aacute;. Los valores incluyen drand48, random y rand. En los programas C, la macro &lt;code&gt;Drand01&lt;/code&gt; se define para generar n&amp;uacute;meros aleatorios distribuidos uniformemente en el rango [0., 1. [(ver drand01 y nrand).</target>
        </trans-unit>
        <trans-unit id="0e9d38aea41337c4a340bd6ff37e0fceaaf530c7" translate="yes" xml:space="preserve">
          <source>Indicates the random number generating seed function. Values include srand48, srandom, and srand.</source>
          <target state="translated">Indica la función de generación de números aleatorios de semillas.Los valores incluyen srand48,srandom y srand.</target>
        </trans-unit>
        <trans-unit id="90e351cd851905a73031d78312feecb33ffe731a" translate="yes" xml:space="preserve">
          <source>Indicates the type of the argument of the seedfunc.</source>
          <target state="translated">Indica el tipo de argumento de la semilla.</target>
        </trans-unit>
        <trans-unit id="2261f14a4235af1795b8d1185c5372fb55826237" translate="yes" xml:space="preserve">
          <source>Indicates to the &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; that things are going so badly all testing should terminate. This includes running any additional test scripts.</source>
          <target state="translated">Indica al &lt;a href=&quot;harness&quot;&gt;Test :: Harness&lt;/a&gt; que las cosas van tan mal que todas las pruebas deber&amp;iacute;an terminar. Esto incluye ejecutar cualquier script de prueba adicional.</target>
        </trans-unit>
        <trans-unit id="fe441aac507416c2ecf5fefc2720f5a5e7cc6991" translate="yes" xml:space="preserve">
          <source>Indicates to the harness that things are going so badly all testing should terminate. This includes the running of any additional test scripts.</source>
          <target state="translated">Indica al arnés que las cosas van tan mal que todas las pruebas deberían terminar.Esto incluye la ejecución de cualquier guión de prueba adicional.</target>
        </trans-unit>
        <trans-unit id="bdde223b122eaee17c31cfd6ef76f52ec58ce6f0" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the current item is a YAML block.</source>
          <target state="translated">Indica si el elemento actual es o no un bloque YAML.</target>
        </trans-unit>
        <trans-unit id="2ac3f8f7cb3f69c816245189833fb5047e4be353" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the current line could be parsed.</source>
          <target state="translated">Indica si la línea actual puede ser analizada o no.</target>
        </trans-unit>
        <trans-unit id="765249e9b3e3ba66799eb3c3e692065e2ef4bdde" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the given result has a SKIP directive.</source>
          <target state="translated">Indica si el resultado dado tiene o no una directiva SKIP.</target>
        </trans-unit>
        <trans-unit id="1e5feadbfd972a9ef3f2203c437baf1b81be3303" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the given result has a TODO directive.</source>
          <target state="translated">Indica si el resultado dado tiene o no una directiva TODO.</target>
        </trans-unit>
        <trans-unit id="5ae3ac2f7146f745d483818a88c053580ae4ad1e" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the given result has a TODO or SKIP directive.</source>
          <target state="translated">Indica si el resultado dado tiene o no una directiva de TODO o SALTO.</target>
        </trans-unit>
        <trans-unit id="33c1162df0e994c2dba92771958227447c3c8740" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a TAP version line.</source>
          <target state="translated">Indica si es o no una línea de la versión TAP.</target>
        </trans-unit>
        <trans-unit id="82a274793f5ee26247829ddf91f4a9bd5a24bbd9" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a YAML chunk.</source>
          <target state="translated">Indica si es o no un trozo de YAML.</target>
        </trans-unit>
        <trans-unit id="551b037463cdc6d8ee7a155c709c206438a14ea9" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a comment.</source>
          <target state="translated">Indica si se trata de un comentario o no.</target>
        </trans-unit>
        <trans-unit id="fa47f2a4b95862bdf9eb043bb9b755ecb73bbd6f" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a comment. Comments will generally only appear in the TAP stream if STDERR is merged to STDOUT. See the &lt;code&gt;merge&lt;/code&gt; option.</source>
          <target state="translated">Indica si se trata de un comentario o no. Los comentarios generalmente solo aparecer&amp;aacute;n en la secuencia TAP si STDERR se fusiona con STDOUT. Vea la opci&amp;oacute;n de &lt;code&gt;merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5add899043fa2f2909dd47a1020e2ad33a37e66d" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a pragma line.</source>
          <target state="translated">Indica si es o no una línea pragmática.</target>
        </trans-unit>
        <trans-unit id="7023aeaf089510f19833c997992b3c941c8dc92d" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is a test line.</source>
          <target state="translated">Indica si se trata de una línea de prueba o no.</target>
        </trans-unit>
        <trans-unit id="9f9b15b44f69cccc124e6789e9d93a4a06a7d51c" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is bailout line.</source>
          <target state="translated">Indica si esto es o no una línea de rescate.</target>
        </trans-unit>
        <trans-unit id="7a3a5d84e52530eeac47fceba7db01f6e0dcbe22" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this is the test plan line.</source>
          <target state="translated">Indica si esta es o no la línea del plan de pruebas.</target>
        </trans-unit>
        <trans-unit id="9010b0739ea277aa1257ee6d74e58336f2039de7" translate="yes" xml:space="preserve">
          <source>Indicates whether the octets in the lexer buffer (&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;) should be interpreted as the UTF-8 encoding of Unicode characters. If not, they should be interpreted as Latin-1 characters. This is analogous to the &lt;code&gt;SvUTF8&lt;/code&gt; flag for scalars.</source>
          <target state="translated">Indica si los octetos en el b&amp;uacute;fer de &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;lexer&lt;/a&gt; ( PL_parser-&amp;gt; linestr ) deben interpretarse como la codificaci&amp;oacute;n UTF-8 de caracteres Unicode. En caso contrario, deben interpretarse como caracteres latinos 1. Esto es an&amp;aacute;logo al indicador &lt;code&gt;SvUTF8&lt;/code&gt; para escalares.</target>
        </trans-unit>
        <trans-unit id="6add24acec866ad90335d7337161ba97a738a82e" translate="yes" xml:space="preserve">
          <source>Indicating the Film::Rating() method is broken.</source>
          <target state="translated">Indicando que el método Film::Rating()está roto.</target>
        </trans-unit>
        <trans-unit id="065a6d5ea3be3a587038269a904d146bb9a0a3c1" translate="yes" xml:space="preserve">
          <source>Indirect Object Syntax</source>
          <target state="translated">Sintaxis indirecta de objetos</target>
        </trans-unit>
        <trans-unit id="3fba9ca2a9139d262136aa9779aba86f7f14b1e8" translate="yes" xml:space="preserve">
          <source>Individual Results</source>
          <target state="translated">Resultados individuales</target>
        </trans-unit>
        <trans-unit id="cb52fbb620cf2997c4aa4b5107c331f4b77d2de2" translate="yes" xml:space="preserve">
          <source>Individual test results.</source>
          <target state="translated">Los resultados de las pruebas individuales.</target>
        </trans-unit>
        <trans-unit id="a6118403aceb71cf86308ba3cff213cbc8856dc0" translate="yes" xml:space="preserve">
          <source>Individual test suite results.</source>
          <target state="translated">Resultados de la serie de pruebas individuales.</target>
        </trans-unit>
        <trans-unit id="a1d71ca242908209d7ea479076e7d5102e909486" translate="yes" xml:space="preserve">
          <source>Inf</source>
          <target state="translated">Inf</target>
        </trans-unit>
        <trans-unit id="68dcf262960464f7812ef1f6844ea3187d8ab76d" translate="yes" xml:space="preserve">
          <source>Infinity and Not a Number</source>
          <target state="translated">Infinito y no un número</target>
        </trans-unit>
        <trans-unit id="ec4c72e2c7996edd7fe98bac862051d171e8f331" translate="yes" xml:space="preserve">
          <source>Inflate Interface</source>
          <target state="translated">Inflar la interfaz</target>
        </trans-unit>
        <trans-unit id="ae8803342c993280c888b28837c9da6527d39370" translate="yes" xml:space="preserve">
          <source>Inflates the complete contents of &lt;code&gt;$buffer&lt;/code&gt; . The buffer can either be a scalar or a scalar reference.</source>
          <target state="translated">Infla el contenido completo de &lt;code&gt;$buffer&lt;/code&gt; . El b&amp;uacute;fer puede ser una referencia escalar o escalar.</target>
        </trans-unit>
        <trans-unit id="beedaffabd6b03c265ffb648f984a13e030e2063" translate="yes" xml:space="preserve">
          <source>Inflates the complete contents of &lt;code&gt;$input&lt;/code&gt; and writes the uncompressed data to &lt;code&gt;$output&lt;/code&gt; . The &lt;code&gt;$input&lt;/code&gt; and &lt;code&gt;$output&lt;/code&gt; parameters can either be scalars or scalar references.</source>
          <target state="translated">Infla el contenido completo de &lt;code&gt;$input&lt;/code&gt; y escribe los datos sin comprimir en &lt;code&gt;$output&lt;/code&gt; . Los par&amp;aacute;metros &lt;code&gt;$input&lt;/code&gt; y &lt;code&gt;$output&lt;/code&gt; pueden ser escalares o referencias escalares.</target>
        </trans-unit>
        <trans-unit id="75ddcc47830d9749b1f6958774d6b7383d928afa" translate="yes" xml:space="preserve">
          <source>Information on installing the Perl documentation in HTML format can be found in the</source>
          <target state="translated">La información sobre la instalación de la documentación de Perl en formato HTML se puede encontrar en el</target>
        </trans-unit>
        <trans-unit id="63a11938f1b7522fad4baac591e5655e30cc1a15" translate="yes" xml:space="preserve">
          <source>Information on the git commit from which the current perl binary was compiled can be found in the variable &lt;code&gt;$Config::Git_Data&lt;/code&gt; . The variable is a structured string that looks something like this:</source>
          <target state="translated">La informaci&amp;oacute;n sobre la confirmaci&amp;oacute;n de git desde la que se compil&amp;oacute; el binario de perl actual se puede encontrar en la variable &lt;code&gt;$Config::Git_Data&lt;/code&gt; . La variable es una cadena estructurada que se parece a esto:</target>
        </trans-unit>
        <trans-unit id="4fa18069a4aed5716a8df64d9e082aca15aa5195" translate="yes" xml:space="preserve">
          <source>Informative call that array is likely to grow to have</source>
          <target state="translated">Llamada informativa de que la matriz es probable que crezca para tener</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="fdd8dbf1164cff77c53c1fcf6f05a5248f3597e3" translate="yes" xml:space="preserve">
          <source>Inheritance allows two classes to share code. By default, every method in the parent class is also available in the child. The child can explicitly &lt;b&gt;override&lt;/b&gt; a parent's method to provide its own implementation. For example, if we have an &lt;code&gt;File::MP3&lt;/code&gt; object, it has the &lt;code&gt;print_info()&lt;/code&gt; method from &lt;code&gt;File&lt;/code&gt; :</source>
          <target state="translated">La herencia permite que dos clases compartan c&amp;oacute;digo. De forma predeterminada, todos los m&amp;eacute;todos de la clase principal tambi&amp;eacute;n est&amp;aacute;n disponibles en la secundaria. El ni&amp;ntilde;o puede &lt;b&gt;anular&lt;/b&gt; expl&amp;iacute;citamente el m&amp;eacute;todo de un padre para proporcionar su propia implementaci&amp;oacute;n. Por ejemplo, si tenemos un objeto &lt;code&gt;File::MP3&lt;/code&gt; , tiene el m&amp;eacute;todo &lt;code&gt;print_info()&lt;/code&gt; de &lt;code&gt;File&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bbc41c48400edb2d66f46abd2eeeb9f193aa61fe" translate="yes" xml:space="preserve">
          <source>Inheritance and Overloading</source>
          <target state="translated">Herencia y sobrecarga</target>
        </trans-unit>
        <trans-unit id="b4102e1cbc70e34f207d4b05daf2f7d154eb2cce" translate="yes" xml:space="preserve">
          <source>Inheriting from *Tie::ExtraHash*</source>
          <target state="translated">Heredando de *Tie::ExtraHash*</target>
        </trans-unit>
        <trans-unit id="07845e4fa81351b41e3aca0473590f0745f203e3" translate="yes" xml:space="preserve">
          <source>Inheriting from *Tie::Memoize*</source>
          <target state="translated">Heredando de *Tie::Memoize*</target>
        </trans-unit>
        <trans-unit id="c5a788b89ced595ecbe83baf444c015d5af4ed62" translate="yes" xml:space="preserve">
          <source>Inheriting from *Tie::StdHash*</source>
          <target state="translated">Heredando de *Tie::StdHash*</target>
        </trans-unit>
        <trans-unit id="2af015f1a7a88588d2bedaaf274af7c154500941" translate="yes" xml:space="preserve">
          <source>Inheriting from &lt;b&gt;Tie::ExtraHash&lt;/b&gt;</source>
          <target state="translated">Herencia de &lt;b&gt;Tie :: ExtraHash&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0ee435be5e637cbc759b674414f3dfaaeaa6a310" translate="yes" xml:space="preserve">
          <source>Inheriting from &lt;b&gt;Tie::Memoize&lt;/b&gt;</source>
          <target state="translated">Herencia de &lt;b&gt;Tie :: Memoize&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0942164c538c56917cf82fee8d95de867370af98" translate="yes" xml:space="preserve">
          <source>Inheriting from &lt;b&gt;Tie::StdHash&lt;/b&gt;</source>
          <target state="translated">Herencia de &lt;b&gt;Tie :: StdHash&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="697bba69426638bf8ad3245a38ff2084b17b3805" translate="yes" xml:space="preserve">
          <source>Init methods</source>
          <target state="translated">Métodos de inicio</target>
        </trans-unit>
        <trans-unit id="469d92ba331e1f193a058b9d59b36d9c2695f1be" translate="yes" xml:space="preserve">
          <source>Init.U</source>
          <target state="translated">Init.U</target>
        </trans-unit>
        <trans-unit id="188fedc6f79203e40eb5a91d186ec6c30916e7f9" translate="yes" xml:space="preserve">
          <source>Initial discussion of the ability to modify IO streams behaviour used the term &quot;discipline&quot; for the entities which were added. This came (I believe) from the use of the term in &quot;sfio&quot;, which in turn borrowed it from &quot;line disciplines&quot; on Unix terminals. However, this document (and the C code) uses the term &quot;layer&quot;.</source>
          <target state="translated">En el debate inicial sobre la capacidad de modificar el comportamiento de las corrientes de IO se utilizó el término &quot;disciplina&quot; para las entidades que se añadieron.Esto vino (creo)del uso del término en &quot;sfio&quot;,que a su vez lo tomó prestado de &quot;disciplinas de línea&quot; en los terminales Unix.Sin embargo,en este documento (y en el código C)se utiliza el término &quot;capa&quot;.</target>
        </trans-unit>
        <trans-unit id="af26189aae099c8b0074103f2d4d6fbc19c70e2f" translate="yes" xml:space="preserve">
          <source>Initial port of perl to WinCE. It was performed in separate directory named</source>
          <target state="translated">Puerto inicial de Perl a WinCE.Se realizó en un directorio separado llamado</target>
        </trans-unit>
        <trans-unit id="64a1cc8196dec5ffb0b6abf423df9a7b0c6e0219" translate="yes" xml:space="preserve">
          <source>Initial version (GSAR 20-FEB-97)</source>
          <target state="translated">Versión inicial (GSAR 20-FEB-97)</target>
        </trans-unit>
        <trans-unit id="681e3458dd2b1a02b6b17850e74b7b6f830be8ea" translate="yes" xml:space="preserve">
          <source>Initialisation in &lt;code&gt;pregcomp()&lt;/code&gt; mostly involves the creation and data-filling of a special structure, &lt;code&gt;RExC_state_t&lt;/code&gt; (defined in</source>
          <target state="translated">La inicializaci&amp;oacute;n en &lt;code&gt;pregcomp()&lt;/code&gt; implica principalmente la creaci&amp;oacute;n y el llenado de datos de una estructura especial, &lt;code&gt;RExC_state_t&lt;/code&gt; (definida en</target>
        </trans-unit>
        <trans-unit id="c7a9076545ffc08af19383275c9bb0a670aaa64a" translate="yes" xml:space="preserve">
          <source>Initialises a deflation object.</source>
          <target state="translated">Inicializa un objeto de deflación.</target>
        </trans-unit>
        <trans-unit id="b36a0f0079e64fa2a033c629779d3f623a057d8c" translate="yes" xml:space="preserve">
          <source>Initialises a deflation stream.</source>
          <target state="translated">Inicializa un flujo de deflación.</target>
        </trans-unit>
        <trans-unit id="6050c58e3e77b97a8c7a9c2f34e629bf70ca3f1a" translate="yes" xml:space="preserve">
          <source>Initialises an inflation object.</source>
          <target state="translated">Inicializa un objeto de inflación.</target>
        </trans-unit>
        <trans-unit id="d6dc7f91e03e45468b8ef5863382d6fe3515a834" translate="yes" xml:space="preserve">
          <source>Initialises an inflation stream.</source>
          <target state="translated">Inicializa un flujo de inflación.</target>
        </trans-unit>
        <trans-unit id="a08fb78f0ee25d9e540249a9eb4c3ec2aebf86f6" translate="yes" xml:space="preserve">
          <source>Initialization values for some globals</source>
          <target state="translated">Valores de inicialización para algunos globos</target>
        </trans-unit>
        <trans-unit id="d7a3ea6043299cfce500bdda50fb23f6cbea5c5c" translate="yes" xml:space="preserve">
          <source>Initialize MAKE from either a MAKE environment variable or $Config{make}.</source>
          <target state="translated">Inicializar MAKE desde una variable de entorno MAKE o $Config{make}.</target>
        </trans-unit>
        <trans-unit id="8a7c7a1b384ad47d60773edd82ad26376d621207" translate="yes" xml:space="preserve">
          <source>Initialize any macros which are for platform specific use only.</source>
          <target state="translated">Inicie cualquier macro que sea para uso específico de la plataforma.</target>
        </trans-unit>
        <trans-unit id="4476040d6adc770412cdb2150cb39c32735c92d5" translate="yes" xml:space="preserve">
          <source>Initialize macros representing versions of MakeMaker and other tools</source>
          <target state="translated">Iniciar macros que representen versiones de MakeMaker y otras herramientas</target>
        </trans-unit>
        <trans-unit id="fa2a269c8bcaa8f7394ce2454e1f32bd30c51822" translate="yes" xml:space="preserve">
          <source>Initialize macros which have to do with linking.</source>
          <target state="translated">Iniciar macros que tienen que ver con la vinculación.</target>
        </trans-unit>
        <trans-unit id="cf8b76ad5759b00cf83505f7cf706fcbd53a36ab" translate="yes" xml:space="preserve">
          <source>Initialize the SigSet object to be empty.</source>
          <target state="translated">Inicializar el objeto SigSet para que esté vacío.</target>
        </trans-unit>
        <trans-unit id="553a04fdd695ae3cee805a386f6c72d5ee7c6e5d" translate="yes" xml:space="preserve">
          <source>Initialize the SigSet object to include all signals.</source>
          <target state="translated">Inicializar el objeto SigSet para incluir todas las señales.</target>
        </trans-unit>
        <trans-unit id="7ff28902a2edd7a86041272b550eea681cfd2a0b" translate="yes" xml:space="preserve">
          <source>Initializes AR, AR_STATIC_ARGS, BASEEXT, CONFIG, DISTNAME, DLBASE, EXE_EXT, FULLEXT, FULLPERL, FULLPERLRUN, FULLPERLRUNINST, INST_*, INSTALL*, INSTALLDIRS, LIB_EXT, LIBPERL_A, MAP_TARGET, NAME, OBJ_EXT, PARENT_NAME, PERL, PERL_ARCHLIB, PERL_INC, PERL_LIB, PERL_SRC, PERLRUN, PERLRUNINST, PREFIX, VERSION, VERSION_SYM, XS_VERSION.</source>
          <target state="translated">Inicializa AR,AR_STATIC_ARGS,BASEEXT,CONFIG,DISTNAME,DLBASE,EXE_EXT,FULLEXT,FULLPERL,FULLPERLRUN,FULLPERLRUNINST,INST_*,INSTALL*,INSTALLDIRS,LIB_EXT,LIBPERL_A,MAP_TARGET,NAME,OBJ_EXT,PARENT_NAME,PERL,PERL_ARCHLIB,PERL_INC,PERL_LIB,PERL_SRC,PERLRUN,PERLRUNINST,PREFIJO,VERSIÓN,VERSION_SYM,XS_VERSION.</target>
        </trans-unit>
        <trans-unit id="9b0af4794c1652a453537aa4d31bc51217044cfb" translate="yes" xml:space="preserve">
          <source>Initializes MAN1PODS from the list of EXE_FILES.</source>
          <target state="translated">Inicializa MAN1PODS de la lista de EXE_FILES.</target>
        </trans-unit>
        <trans-unit id="9908a02e0ec97a9887147642e25f6d00ba2bba87" translate="yes" xml:space="preserve">
          <source>Initializes MAN3PODS from the list of PM files.</source>
          <target state="translated">Inicializa los MAN3PODS de la lista de archivos PM.</target>
        </trans-unit>
        <trans-unit id="78aa0c8b31d0aa9e4f082b472e25049793a28d4c" translate="yes" xml:space="preserve">
          <source>Initializes PMLIBDIRS and PM from PMLIBDIRS.</source>
          <target state="translated">Inicializa la PMLIBDIRS y la PM de la PMLIBDIRS.</target>
        </trans-unit>
        <trans-unit id="f52193e05865340eb9150e274aa92320b071b3c6" translate="yes" xml:space="preserve">
          <source>Initializes a new Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Inicializa un nuevo int&amp;eacute;rprete de Perl. Ver &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d157e4855cf1cd1f0584d861b76b87bbd1430bbd" translate="yes" xml:space="preserve">
          <source>Initializes a new object. This method is a stub by default, you should override it as appropriate.</source>
          <target state="translated">Inicializa un nuevo objeto.Este método es un stub por defecto,debería anularlo según corresponda.</target>
        </trans-unit>
        <trans-unit id="9cf6c0c33242d2abf005967a6623b3ae8501f304" translate="yes" xml:space="preserve">
          <source>Initializes the DIRFILESEP macro which is the separator between the directory and filename in a filepath. ie. / on Unix, \ on Win32 and nothing on VMS.</source>
          <target state="translated">Inicializa la macro DIRFILESEP que es el separador entre el directorio y el nombre de archivo en una ruta de archivo.Es decir,en Unix,en Win32 y nada en VMS.</target>
        </trans-unit>
        <trans-unit id="1f6be944d9e52d97024d9034508b4cacc682c441" translate="yes" xml:space="preserve">
          <source>Initializes the macro definitions having to do with compiling and linking used by tools_other() and places them in the $MM object.</source>
          <target state="translated">Inicializa las definiciones de las macros que tienen que ver con la compilación y el enlace utilizados por tools_other()y las coloca en el objeto $MM.</target>
        </trans-unit>
        <trans-unit id="e775d4b4b0bd3712f9f514299a1d05c1a00cf523" translate="yes" xml:space="preserve">
          <source>Initializes the simple macro definitions used by tools_other() and places them in the $MM object. These use conservative cross platform versions and should be overridden with platform specific versions for performance.</source>
          <target state="translated">Inicializa las simples definiciones de macros usadas por tools_other()y las coloca en el objeto $MM.Estas usan versiones conservadoras de plataformas cruzadas y deben ser anuladas con versiones específicas de la plataforma para el rendimiento.</target>
        </trans-unit>
        <trans-unit id="282f9af1f24130bc9182b79671b3debcbe420b2a" translate="yes" xml:space="preserve">
          <source>Initializes tools to use their common (and faster) Unix commands.</source>
          <target state="translated">Inicializa las herramientas para usar sus comandos comunes (y más rápidos)de Unix.</target>
        </trans-unit>
        <trans-unit id="7a196e34c731e5f3af1e31be4705513bd9e1800a" translate="yes" xml:space="preserve">
          <source>Initializing Function Parameters</source>
          <target state="translated">Iniciando los parámetros de la función</target>
        </trans-unit>
        <trans-unit id="f762e2df9b5c50638aa3c3cbbaf63d08b1a096ce" translate="yes" xml:space="preserve">
          <source>Initializing with &lt;code&gt;new&lt;/code&gt;</source>
          <target state="translated">Inicializando con &lt;code&gt;new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5374c9bb7d82a306aff38df30638934a3bedb34d" translate="yes" xml:space="preserve">
          <source>Initializing with new</source>
          <target state="translated">Iniciando con nuevos</target>
        </trans-unit>
        <trans-unit id="16e4c7e9d2fa46d1492e494337cfb9b14642fd7d" translate="yes" xml:space="preserve">
          <source>Initiate the sending of the data from the current message.</source>
          <target state="translated">Inicie el envío de los datos del mensaje actual.</target>
        </trans-unit>
        <trans-unit id="fe9280fcef1f95066c459792b601f0a568c68ff3" translate="yes" xml:space="preserve">
          <source>Inplace editing &lt;code&gt;perl -i&lt;/code&gt; of files doesn't work without doing a backup of the file being edited &lt;code&gt;perl -i.bak&lt;/code&gt; because of windowish restrictions, therefore Perl adds the suffix &lt;code&gt;.bak&lt;/code&gt; automatically if you use &lt;code&gt;perl -i&lt;/code&gt; without specifying a backup extension.</source>
          <target state="translated">La edici&amp;oacute;n in situ de archivos &lt;code&gt;perl -i&lt;/code&gt; no funciona sin hacer una copia de seguridad del archivo que se est&amp;aacute; editando &lt;code&gt;perl -i.bak&lt;/code&gt; debido a las restricciones de ventana, por lo tanto, Perl agrega el sufijo &lt;code&gt;.bak&lt;/code&gt; autom&amp;aacute;ticamente si usa &lt;code&gt;perl -i&lt;/code&gt; sin especificar una extensi&amp;oacute;n de copia de seguridad.</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="f2166976e1182028cf4a602c00df0206990e4b61" translate="yes" xml:space="preserve">
          <source>Input File Glob</source>
          <target state="translated">Entrada del archivo Glob...</target>
        </trans-unit>
        <trans-unit id="2dc35a576a410b10bc60ae6d2130c68130a12559" translate="yes" xml:space="preserve">
          <source>Input and Output Parameters</source>
          <target state="translated">Parámetros de entrada y salida</target>
        </trans-unit>
        <trans-unit id="fca6ebb3af2e2ddf731c9ba341152d5ee6d08083" translate="yes" xml:space="preserve">
          <source>Input and output pipes to Perl filehandles are supported; the &quot;file name&quot; is passed to lib$spawn() for asynchronous execution. You should be careful to close any pipes you have opened in a Perl script, lest you leave any &quot;orphaned&quot; subprocesses around when Perl exits.</source>
          <target state="translated">Se admiten los tubos de entrada y salida para los filehandles de Perl;el &quot;nombre del archivo&quot; se pasa a lib$spawn()para la ejecución asíncrona.Debe tener cuidado de cerrar cualquier tubería que haya abierto en un script Perl,no sea que deje algún subproceso &quot;huérfano&quot; cuando Perl salga.</target>
        </trans-unit>
        <trans-unit id="25e7b83bd15298faf6fd8f002de9128fb08ea38f" translate="yes" xml:space="preserve">
          <source>Input from, or output to, a &lt;b&gt;file&lt;/b&gt; or &lt;b&gt;device&lt;/b&gt;.</source>
          <target state="translated">Entrada o salida a un &lt;b&gt;archivo&lt;/b&gt; o &lt;b&gt;dispositivo&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="f6047072eebf842c882d2d1ca55ea7667206a889" translate="yes" xml:space="preserve">
          <source>Input library and path specifications are accepted with or without the &lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-L&lt;/code&gt; prefixes used by Unix linkers.</source>
          <target state="translated">Las especificaciones de la biblioteca de entrada y la ruta se aceptan con o sin los prefijos &lt;code&gt;-l&lt;/code&gt; y &lt;code&gt;-L&lt;/code&gt; utilizados por los enlazadores Unix.</target>
        </trans-unit>
        <trans-unit id="db35c0f2c45290c19fd136029a213ad284b80e55" translate="yes" xml:space="preserve">
          <source>Input library and path specifications are accepted with or without the &lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-L&lt;/code&gt; prefixes used by Unix linkers. If neither prefix is present, a token is considered a directory to search if it is in fact a directory, and a library to search for otherwise. Authors who wish their extensions to be portable to Unix or OS/2 should use the Unix prefixes, since the Unix-OS/2 version of ext() requires them.</source>
          <target state="translated">Las especificaciones de la biblioteca de entrada y la ruta se aceptan con o sin los prefijos &lt;code&gt;-l&lt;/code&gt; y &lt;code&gt;-L&lt;/code&gt; utilizados por los enlazadores Unix. Si ninguno de los prefijos est&amp;aacute; presente, un token se considera un directorio para buscar si de hecho es un directorio, y una biblioteca para buscar de otra manera. Los autores que deseen que sus extensiones sean portables a Unix u OS / 2 deben usar los prefijos Unix, ya que la versi&amp;oacute;n Unix-OS / 2 de ext () los requiere.</target>
        </trans-unit>
        <trans-unit id="a1f8b7d0598aac2b8e4ba4b9244e4a933dc9e6b4" translate="yes" xml:space="preserve">
          <source>Input strings are decode()d then encode()d. A straight two-step implementation.</source>
          <target state="translated">Las cadenas de entrada se decodifican()d y luego se codifican()d.Una implementación directa de dos pasos.</target>
        </trans-unit>
        <trans-unit id="ff3057c52ba4da6e1ddf88eb538e9f34e59f7ee9" translate="yes" xml:space="preserve">
          <source>Input to these routines are either BigFloat objects, or strings of the following four forms:</source>
          <target state="translated">La entrada de estas rutinas son o bien objetos BigFloat,o cadenas de las siguientes cuatro formas:</target>
        </trans-unit>
        <trans-unit id="0c0281be753361164d1d0fc4c9f4d612cf39dd2d" translate="yes" xml:space="preserve">
          <source>Input values to these routines may be any string, that looks like a number and results in an integer, including hexadecimal and binary numbers.</source>
          <target state="translated">Los valores de entrada de estas rutinas pueden ser cualquier cadena,que parece un número y da como resultado un número entero,incluyendo números hexadecimales y binarios.</target>
        </trans-unit>
        <trans-unit id="09ede375a150e967e64e7e2d887a232d51f368fa" translate="yes" xml:space="preserve">
          <source>Insert LIST elements at the beginning of the array, moving existing elements up to make room.</source>
          <target state="translated">Insertar los elementos de la lista al principio de la matriz,moviendo los elementos existentes hacia arriba para hacer espacio.</target>
        </trans-unit>
        <trans-unit id="8b5af2a8ac2266ac1fdb8694203bf8a7b5999fb5" translate="yes" xml:space="preserve">
          <source>Insert LIST elements at the beginning of the array, moving existing elements up to make room. For example:</source>
          <target state="translated">Insertar los elementos de la lista al principio de la matriz,moviendo los elementos existentes hacia arriba para hacer espacio.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="0c8d991df77bf00e29c21cb93175839fa481ea2b" translate="yes" xml:space="preserve">
          <source>Insert characters into the lexer buffer (&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;), immediately after the current lexing point (&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt;), reallocating the buffer if necessary. This means that lexing code that runs later will see the characters as if they had appeared in the input. It is not recommended to do this as part of normal parsing, and most uses of this facility run the risk of the inserted characters being interpreted in an unintended manner.</source>
          <target state="translated">Inserte caracteres en el b&amp;uacute;fer &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;lexer&lt;/a&gt; ( PL_parser-&amp;gt; linestr ), inmediatamente despu&amp;eacute;s del punto de lexing actual ( &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt; ), reasignando el b&amp;uacute;fer si es necesario. Esto significa que el c&amp;oacute;digo lexing que se ejecuta m&amp;aacute;s tarde ver&amp;aacute; los caracteres como si hubieran aparecido en la entrada. No se recomienda hacer esto como parte del an&amp;aacute;lisis normal, y la mayor&amp;iacute;a de los usos de esta funci&amp;oacute;n corren el riesgo de que los caracteres insertados se interpreten de manera no intencionada.</target>
        </trans-unit>
        <trans-unit id="d46d273f43c1298f3a09e3049502d6b87af98707" translate="yes" xml:space="preserve">
          <source>Inserting POD, Comments and C Preprocessor Directives</source>
          <target state="translated">Insertar POD,comentarios y directivas del preprocesador C</target>
        </trans-unit>
        <trans-unit id="3ddc278de0a82017be1546343c053adba747b534" translate="yes" xml:space="preserve">
          <source>Inserting records that</source>
          <target state="translated">Insertar registros que</target>
        </trans-unit>
        <trans-unit id="762d7f10b7a5cbbfbd3a51bba1f8d6e37c660a81" translate="yes" xml:space="preserve">
          <source>Inserts a string at the specified offset/length within the SV. Similar to the Perl substr() function. Handles get magic.</source>
          <target state="translated">Inserta una cadena con el desplazamiento/longitud especificado dentro de la SV.Similar a la función Perl substr().Las manijas consiguen magia.</target>
        </trans-unit>
        <trans-unit id="ac3e05759f66cf1dafff1c764cc8c3b6a42a2c61" translate="yes" xml:space="preserve">
          <source>Inserts the sharpbang or equivalent magic number to a set of @files.</source>
          <target state="translated">Inserta el sharpbang o el número mágico equivalente a un conjunto de @archivos.</target>
        </trans-unit>
        <trans-unit id="bfb7a36a7ca33fb28f326fe5eacde6cacf000521" translate="yes" xml:space="preserve">
          <source>Inside a &lt;code&gt;(?{...})&lt;/code&gt; block, &lt;code&gt;$_&lt;/code&gt; refers to the string the regular expression is matching against. You can also use &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; to know what is the current position of matching within this string.</source>
          <target state="translated">Dentro de un bloque &lt;code&gt;(?{...})&lt;/code&gt; , &lt;code&gt;$_&lt;/code&gt; se refiere a la cadena con la que coincide la expresi&amp;oacute;n regular. Tambi&amp;eacute;n puede usar &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; para saber cu&amp;aacute;l es la posici&amp;oacute;n actual de coincidencia dentro de esta cadena.</target>
        </trans-unit>
        <trans-unit id="60f1ba3b99ef99e8ed328c9a98bf927d5f0a5518" translate="yes" xml:space="preserve">
          <source>Inside a Perl program, you can use the &lt;a href=&quot;extutils/installed&quot;&gt;ExtUtils::Installed&lt;/a&gt; module to show all installed distributions, although it can take awhile to do its magic. The standard library which comes with Perl just shows up as &quot;Perl&quot; (although you can get those with &lt;a href=&quot;module/corelist&quot;&gt;Module::CoreList&lt;/a&gt;).</source>
          <target state="translated">Dentro de un programa Perl, puede usar el m&amp;oacute;dulo &lt;a href=&quot;extutils/installed&quot;&gt;ExtUtils :: Installed&lt;/a&gt; para mostrar todas las distribuciones instaladas, aunque puede llevar un tiempo hacer su magia. La biblioteca est&amp;aacute;ndar que viene con Perl simplemente aparece como &quot;Perl&quot; (aunque puede obtenerlas con &lt;a href=&quot;module/corelist&quot;&gt;Module :: CoreList&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2ac6e4915bcad5900cd6401a5966f997e137a0c9" translate="yes" xml:space="preserve">
          <source>Inside an &lt;code&gt;END&lt;/code&gt; code block, &lt;code&gt;$?&lt;/code&gt; contains the value that the program is going to pass to &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt;. You can modify &lt;code&gt;$?&lt;/code&gt; to change the exit value of the program. Beware of changing &lt;code&gt;$?&lt;/code&gt; by accident (e.g. by running something via &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Dentro de un bloque de c&amp;oacute;digo &lt;code&gt;END&lt;/code&gt; , &lt;code&gt;$?&lt;/code&gt; contiene el valor que el programa va a pasar a &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; . Puede modificar &lt;code&gt;$?&lt;/code&gt; para cambiar el valor de salida del programa. Tenga cuidado con cambiar &lt;code&gt;$?&lt;/code&gt; por accidente (por ejemplo, ejecutando algo a trav&amp;eacute;s del &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2a3aa49ae51d12807c062f5debba3be515ca72cb" translate="yes" xml:space="preserve">
          <source>Inside an &lt;code&gt;END&lt;/code&gt; subroutine &lt;code&gt;$?&lt;/code&gt; contains the value that is going to be given to &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt;. You can modify &lt;code&gt;$?&lt;/code&gt; in an &lt;code&gt;END&lt;/code&gt; subroutine to change the exit status of your program. For example:</source>
          <target state="translated">Dentro de una subrutina &lt;code&gt;END&lt;/code&gt; &lt;code&gt;$?&lt;/code&gt; contiene el valor que se le dar&amp;aacute; a &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; . Puede modificar &lt;code&gt;$?&lt;/code&gt; en una subrutina &lt;code&gt;END&lt;/code&gt; para cambiar el estado de salida de su programa. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6a3aafbb284a68739c4fb1ae1f60eb5141dcdda7" translate="yes" xml:space="preserve">
          <source>Inside of a &lt;code&gt;CHECK&lt;/code&gt; block, the value of &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; will be &lt;code&gt;&quot;CHECK&quot;&lt;/code&gt; .</source>
          <target state="translated">Dentro de un bloque &lt;code&gt;CHECK&lt;/code&gt; , el valor de &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; ser&amp;aacute; &lt;code&gt;&quot;CHECK&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77fd9286042f60d2513d71db2f202e6d15711855" translate="yes" xml:space="preserve">
          <source>Inside of a &lt;code&gt;END&lt;/code&gt; block, the value of &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; will be &lt;code&gt;&quot;END&quot;&lt;/code&gt; .</source>
          <target state="translated">Dentro de un bloque &lt;code&gt;END&lt;/code&gt; , el valor de &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; ser&amp;aacute; &lt;code&gt;&quot;END&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a193b063515ab15da965bd3478de34c4b7d0830" translate="yes" xml:space="preserve">
          <source>Inside of an &lt;code&gt;INIT&lt;/code&gt; block, the value of &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; will be &lt;code&gt;&quot;INIT&quot;&lt;/code&gt; .</source>
          <target state="translated">Dentro de un bloque &lt;code&gt;INIT&lt;/code&gt; , el valor de &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; ser&amp;aacute; &lt;code&gt;&quot;INIT&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b24121a7266e78f12986b250ed98974d9cfcc24b" translate="yes" xml:space="preserve">
          <source>Inside such a</source>
          <target state="translated">Dentro de tal</target>
        </trans-unit>
        <trans-unit id="f7a01b93c52f9dee6e4b496cdb9ca5fafa7aa5b5" translate="yes" xml:space="preserve">
          <source>Inside the Perl core (&lt;code&gt;PERL_CORE&lt;/code&gt; defined), you can get at the functions either with or without the &lt;code&gt;Perl_&lt;/code&gt; prefix, thanks to a bunch of defines that live in</source>
          <target state="translated">Dentro del n&amp;uacute;cleo de Perl ( &lt;code&gt;PERL_CORE&lt;/code&gt; definido), puede acceder a las funciones con o sin el prefijo &lt;code&gt;Perl_&lt;/code&gt; , gracias a un mont&amp;oacute;n de definiciones que viven en</target>
        </trans-unit>
        <trans-unit id="0daafc0685af0d01e22cebc44846559b24d94dc9" translate="yes" xml:space="preserve">
          <source>Inside your block, you can use a &lt;code&gt;;&lt;/code&gt; before the ellipsis to denote that the &lt;code&gt;{ ... }&lt;/code&gt; is a block and not a hash reference constructor. Now the ellipsis works:</source>
          <target state="translated">Dentro de su bloque, puede usar un &lt;code&gt;;&lt;/code&gt; antes de la elipsis para indicar que &lt;code&gt;{ ... }&lt;/code&gt; es un bloque y no un constructor de referencia hash. Ahora la elipsis funciona:</target>
        </trans-unit>
        <trans-unit id="c37269c429f2ad22959db0e60ac4d8827e7e42ce" translate="yes" xml:space="preserve">
          <source>Inside-Out objects</source>
          <target state="translated">Los objetos de adentro hacia afuera</target>
        </trans-unit>
        <trans-unit id="7a4af927ec1e221d9c738e75cdfca5e119205956" translate="yes" xml:space="preserve">
          <source>Inside-out classes give us freedom of inheritance, but as usual there is a price.</source>
          <target state="translated">Las clases de adentro hacia afuera nos dan libertad de herencia,pero como siempre hay un precio.</target>
        </trans-unit>
        <trans-unit id="ec3c84ba848d8b0d780dabe6d5db65999ccfe2b2" translate="yes" xml:space="preserve">
          <source>Inside-out implementation based on the &lt;code&gt;id()&lt;/code&gt; function with explicit object registry. No destructor is needed and objects are thread safe.</source>
          <target state="translated">Implementaci&amp;oacute;n de adentro hacia afuera basada en la funci&amp;oacute;n &lt;code&gt;id()&lt;/code&gt; con registro de objeto expl&amp;iacute;cito. No se necesita ning&amp;uacute;n destructor y los objetos son seguros para subprocesos.</target>
        </trans-unit>
        <trans-unit id="093639ed82951fb2c05d82fa61065038c4a3f59b" translate="yes" xml:space="preserve">
          <source>Inside-out implementation based on the &lt;code&gt;id()&lt;/code&gt; function. It needs a &lt;code&gt;DESTROY&lt;/code&gt; method. For thread support a &lt;code&gt;CLONE&lt;/code&gt; method (not shown) would also be needed. Instead of &lt;code&gt;Hash::Util::FieldHash::id()&lt;/code&gt; the function &lt;code&gt;Scalar::Util::refaddr&lt;/code&gt; could be used with very little functional difference. This is the basic pattern of an inside-out class.</source>
          <target state="translated">Implementaci&amp;oacute;n de adentro hacia afuera basada en la funci&amp;oacute;n &lt;code&gt;id()&lt;/code&gt; . Necesita un m&amp;eacute;todo &lt;code&gt;DESTROY&lt;/code&gt; . Para la compatibilidad con subprocesos , tambi&amp;eacute;n se necesitar&amp;iacute;a un m&amp;eacute;todo &lt;code&gt;CLONE&lt;/code&gt; (no se muestra). En lugar de &lt;code&gt;Hash::Util::FieldHash::id()&lt;/code&gt; la funci&amp;oacute;n &lt;code&gt;Scalar::Util::refaddr&lt;/code&gt; podr&amp;iacute;a usarse con muy poca diferencia funcional. Este es el patr&amp;oacute;n b&amp;aacute;sico de una clase de adentro hacia afuera.</target>
        </trans-unit>
        <trans-unit id="26f7dff6871418123fc5bf54019b9bfae13765ed" translate="yes" xml:space="preserve">
          <source>Inspecting &lt;code&gt;$UTF8{Euro}&lt;/code&gt; shows that it contains 3 bytes: &quot;\xe2\x82\xac&quot;. However, it contains only 1 character, number 0x20AC. The round trip can be completed with &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">La inspecci&amp;oacute;n de &lt;code&gt;$UTF8{Euro}&lt;/code&gt; muestra que contiene 3 bytes: &quot;\ xe2 \ x82 \ xac&quot;. Sin embargo, contiene solo 1 car&amp;aacute;cter, el n&amp;uacute;mero 0x20AC. El viaje de ida y vuelta se puede completar &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="59207d175da65683910680d9c040a0c388fa1f23" translate="yes" xml:space="preserve">
          <source>Install Visual C++ 2005 first, then the Platform SDK. Setup your environment as follows (assuming default installation locations were chosen):</source>
          <target state="translated">Instala primero Visual C++2005,luego el SDK de la plataforma.Configure su entorno de la siguiente manera (asumiendo que se eligieron los lugares de instalación por defecto):</target>
        </trans-unit>
        <trans-unit id="33cbab1690c07ca74d0ff29dfe5b56b37a842899" translate="yes" xml:space="preserve">
          <source>Install Visual C++ 2008-2013 Express, then setup your environment using, e.g.</source>
          <target state="translated">Instale Visual C++2008-2013 Express,y luego configure su entorno usando,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="2f196edb7ca2b342cfc8b1c8d1c16c051256d43c" translate="yes" xml:space="preserve">
          <source>Install a callback for a named event.</source>
          <target state="translated">Instalar una llamada para un evento con nombre.</target>
        </trans-unit>
        <trans-unit id="098146decab9cf9682dd20a4b2bc8c4001fb20aa" translate="yes" xml:space="preserve">
          <source>Install a signal mask and suspend process until signal arrives. This uses &lt;code&gt;POSIX::SigSet&lt;/code&gt; objects for the &lt;code&gt;signal_mask&lt;/code&gt; argument. Consult your system's &lt;code&gt;sigsuspend&lt;/code&gt; manpage for details.</source>
          <target state="translated">Instale una m&amp;aacute;scara de se&amp;ntilde;al y suspenda el proceso hasta que llegue la se&amp;ntilde;al. Esto usa objetos &lt;code&gt;POSIX::SigSet&lt;/code&gt; para el argumento &lt;code&gt;signal_mask&lt;/code&gt; . Consulte la p&amp;aacute;gina de &lt;code&gt;sigsuspend&lt;/code&gt; de sigsuspend de su sistema para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="5064d1cdb752ce928134eb0a4e8326765bed0d5e" translate="yes" xml:space="preserve">
          <source>Install all distributions that have been tested successfully but have not yet been installed. See also &lt;code&gt;is_tested&lt;/code&gt; .</source>
          <target state="translated">Instale todas las distribuciones que se hayan probado con &amp;eacute;xito pero que a&amp;uacute;n no se hayan instalado. Consulte tambi&amp;eacute;n &lt;code&gt;is_tested&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30bb41e456f55898b9a816d97d83d13570e789d0" translate="yes" xml:space="preserve">
          <source>Install files from here to there</source>
          <target state="translated">Instalar archivos de aquí a allá</target>
        </trans-unit>
        <trans-unit id="be838642bc4439dddc0a654f23d9ebf8387685d2" translate="yes" xml:space="preserve">
          <source>Install my_handler() as the handler for the &lt;b&gt;normal-signals&lt;/b&gt;:</source>
          <target state="translated">Instale my_handler () como el controlador de las &lt;b&gt;se&amp;ntilde;ales normales&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="f8eeec02705f1ef8eb9bf0619d6a4de1e15c32de" translate="yes" xml:space="preserve">
          <source>Install my_handler() as the handler for the normal-signals, provide a Perl stack trace on receipt of one of the error-signals:</source>
          <target state="translated">Instalar my_handler()como el manejador de las señales normales,proporcionar un rastro de la pila Perl al recibir una de las señales de error:</target>
        </trans-unit>
        <trans-unit id="e64dce2583dfe013eb849f3d2d103a519b4f693d" translate="yes" xml:space="preserve">
          <source>Install the Toolkit first, then the Platform SDK, then the .NET Framework SDK. Setup your environment as follows (assuming default installation locations were chosen):</source>
          <target state="translated">Instale primero el kit de herramientas,luego el SDK de la plataforma,y luego el SDK del .NET Framework.Configure su entorno de la siguiente manera (suponiendo que se hayan elegido las ubicaciones de instalación predeterminadas):</target>
        </trans-unit>
        <trans-unit id="cd990d98fdc32595b067d42fc715d5ce94d57be2" translate="yes" xml:space="preserve">
          <source>Install the bundle &lt;code&gt;Bundle::OS2_default&lt;/code&gt;</source>
          <target state="translated">Instale el paquete &lt;code&gt;Bundle::OS2_default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b20b73b1de67223c2bd9207fae1a1e9b72c2233d" translate="yes" xml:space="preserve">
          <source>Install the bundle file you produced in the first step with something like</source>
          <target state="translated">Instale el archivo del paquete que produjo en el primer paso con algo como</target>
        </trans-unit>
        <trans-unit id="a972b5a9d813b2528044bfdb606fb493e85bedb6" translate="yes" xml:space="preserve">
          <source>Install will copy the files into the Windows machine where NetWare Perl is installed and these files may have to be copied to the NetWare server manually. Alternatively, pass</source>
          <target state="translated">Install copiará los archivos en la máquina de Windows en la que está instalado NetWare Perl y es posible que estos archivos tengan que ser copiados en el servidor NetWare manualmente.Como alternativa,pase</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="5170591ca8711f15e1b20c47f412774e19b0fe70" translate="yes" xml:space="preserve">
          <source>Installation Anomalies with Perl on OS/390</source>
          <target state="translated">Anomalías de instalación con Perl en OS/390</target>
        </trans-unit>
        <trans-unit id="8744a89757a103643f2c85c220b914d085ffdf88" translate="yes" xml:space="preserve">
          <source>Installation Prefix</source>
          <target state="translated">Prefijo de instalación</target>
        </trans-unit>
        <trans-unit id="180cc178e07c1743ecf9dbe37bab2bf2dabe5bb5" translate="yes" xml:space="preserve">
          <source>Installation of Perl on DOS</source>
          <target state="translated">Instalación de Perl en el DOS</target>
        </trans-unit>
        <trans-unit id="cfb2e768feadc8837cc7fc759954e96ac60a95b5" translate="yes" xml:space="preserve">
          <source>Installation of Perl on Windows</source>
          <target state="translated">Instalación de Perl en Windows</target>
        </trans-unit>
        <trans-unit id="4ca02b48dd8aa7c8862ef964b8ef23527a77760c" translate="yes" xml:space="preserve">
          <source>Installing Perl Documentation on Plan 9</source>
          <target state="translated">Instalación de la documentación de Perl en el Plan 9</target>
        </trans-unit>
        <trans-unit id="2ae981a52ea5c2d2aafd4355287d2406dc0ef314" translate="yes" xml:space="preserve">
          <source>Installing Perl in OS/400 PASE</source>
          <target state="translated">Instalando Perl en OS/400 PASE</target>
        </trans-unit>
        <trans-unit id="b61a365b42d75d8e047fa9fe92ff65b4f60e9701" translate="yes" xml:space="preserve">
          <source>Installing Perl on BS2000</source>
          <target state="translated">Instalando Perl en BS2000</target>
        </trans-unit>
        <trans-unit id="0417ed1ca822a227853883f689e9fa61b7253133" translate="yes" xml:space="preserve">
          <source>Installing dynamic extensions</source>
          <target state="translated">Instalando extensiones dinámicas</target>
        </trans-unit>
        <trans-unit id="d551e6ba21a76c8b829c9fd66b0f82cb57a2e6c1" translate="yes" xml:space="preserve">
          <source>Installing handlers into UNIVERSAL, makes them...err..universal. For example:</source>
          <target state="translated">Instalar manipuladores en el UNIVERSAL,los hace...eh...universales.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="0cfc88ee57d518bf7af556a12ced2b10a8287ca8" translate="yes" xml:space="preserve">
          <source>Installing static extensions</source>
          <target state="translated">Instalando extensiones estáticas</target>
        </trans-unit>
        <trans-unit id="257dd2466c69ad9b24149fb3bc3f1813543ba72a" translate="yes" xml:space="preserve">
          <source>Installing the built Perl on AmigaOS</source>
          <target state="translated">Instalando el Perl construido en AmigaOS</target>
        </trans-unit>
        <trans-unit id="db29ef231e31119424ca9f0f93b9223b833e4152" translate="yes" xml:space="preserve">
          <source>Installing the built perl</source>
          <target state="translated">Instalando la perla construida</target>
        </trans-unit>
        <trans-unit id="d904df04db30e9f6033f6ecb3f32eb4c2b0e5b70" translate="yes" xml:space="preserve">
          <source>Installing your Extension</source>
          <target state="translated">Instalando su extensión</target>
        </trans-unit>
        <trans-unit id="dd4a61ab3dc44ab9b5a205303724a68f74a735a7" translate="yes" xml:space="preserve">
          <source>Instance Methods</source>
          <target state="translated">Métodos de instancia</target>
        </trans-unit>
        <trans-unit id="e18280b32ffbeebedfcc0fc6dbe9b749315b6ea6" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; , we can write &lt;code&gt;$a[1][2]&lt;/code&gt; ; it means the same thing. Instead of &lt;code&gt;$a[0]-&amp;gt;[1] = 23&lt;/code&gt; , we can write &lt;code&gt;$a[0][1] = 23&lt;/code&gt; ; it means the same thing.</source>
          <target state="translated">En lugar de &lt;code&gt;$a[1]-&amp;gt;[2]&lt;/code&gt; , podemos escribir &lt;code&gt;$a[1][2]&lt;/code&gt; ; Significa lo mismo. En lugar de &lt;code&gt;$a[0]-&amp;gt;[1] = 23&lt;/code&gt; , podemos escribir &lt;code&gt;$a[0][1] = 23&lt;/code&gt; ; Significa lo mismo.</target>
        </trans-unit>
        <trans-unit id="ba491ba1ec8ef4be8f85786b6a781edf6fccddb7" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; , you can simply use &lt;code&gt;:utf8&lt;/code&gt; , which skips the encoding step if the data was already represented as UTF8 internally. This is widely accepted as good behavior when you're writing, but it can be dangerous when reading, because it causes internal inconsistency when you have invalid byte sequences. Using &lt;code&gt;:utf8&lt;/code&gt; for input can sometimes result in security breaches, so please use &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; instead.</source>
          <target state="translated">En lugar de &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; , simplemente puede usar &lt;code&gt;:utf8&lt;/code&gt; , que omite el paso de codificaci&amp;oacute;n si los datos ya estaban representados como UTF8 internamente. Esto es ampliamente aceptado como un buen comportamiento cuando est&amp;aacute; escribiendo, pero puede ser peligroso cuando lee, porque causa inconsistencia interna cuando tiene secuencias de bytes no v&amp;aacute;lidas. El uso de &lt;code&gt;:utf8&lt;/code&gt; para la entrada a veces puede resultar en violaciones de seguridad, as&amp;iacute; que use &lt;code&gt;:encoding(UTF-8)&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="77ad0b5725694a222d6ac24da3bbb122aa3a958a" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;decode&lt;/code&gt; and &lt;code&gt;encode&lt;/code&gt; , you could use &lt;code&gt;_utf8_on&lt;/code&gt; and &lt;code&gt;_utf8_off&lt;/code&gt; , but this is considered bad style. Especially &lt;code&gt;_utf8_on&lt;/code&gt; can be dangerous, for the same reason that &lt;code&gt;:utf8&lt;/code&gt; can.</source>
          <target state="translated">En lugar de &lt;code&gt;decode&lt;/code&gt; y &lt;code&gt;encode&lt;/code&gt; , puede usar &lt;code&gt;_utf8_on&lt;/code&gt; y &lt;code&gt;_utf8_off&lt;/code&gt; , pero esto se considera de mal estilo. Especialmente &lt;code&gt;_utf8_on&lt;/code&gt; puede ser peligroso, por la misma raz&amp;oacute;n que &lt;code&gt;:utf8&lt;/code&gt; puede.</target>
        </trans-unit>
        <trans-unit id="1f30761f7bbd31f759ef384a9ad19f6187329e7a" translate="yes" xml:space="preserve">
          <source>Instead of a filename, you can also pass it an existing &lt;code&gt;Archive::Tar::File&lt;/code&gt; object from, for example, another archive. The object will be clone, and effectively be a copy of the original, not an alias.</source>
          <target state="translated">En lugar de un nombre de archivo, tambi&amp;eacute;n puede pasarle un objeto &lt;code&gt;Archive::Tar::File&lt;/code&gt; desde, por ejemplo, otro archivo. El objeto se clonar&amp;aacute; y, de hecho, ser&amp;aacute; una copia del original, no un alias.</target>
        </trans-unit>
        <trans-unit id="3d7794c8d2e8209f9cf8a080564bc83932d1de0d" translate="yes" xml:space="preserve">
          <source>Instead of a number, you can use &lt;code&gt;*&lt;/code&gt; to mean &quot;consume everything else left&quot;.</source>
          <target state="translated">En lugar de un n&amp;uacute;mero, puede usar &lt;code&gt;*&lt;/code&gt; para significar &quot;consumir todo lo que queda&quot;.</target>
        </trans-unit>
        <trans-unit id="2d5ef8b3223bf8e72260629cb76365a1c7d119c3" translate="yes" xml:space="preserve">
          <source>Instead of an actual C function that has to fetch the thread context using &lt;code&gt;dTHX&lt;/code&gt; , you can define macros of the same name and avoid the overhead. Also, keep in mind to possibly free the memory allocated by &lt;code&gt;XS_unpack_foo_tPtr&lt;/code&gt; .</source>
          <target state="translated">En lugar de una funci&amp;oacute;n C real que tiene que buscar el contexto del hilo usando &lt;code&gt;dTHX&lt;/code&gt; , puede definir macros con el mismo nombre y evitar la sobrecarga. Adem&amp;aacute;s, tenga en cuenta la &lt;code&gt;XS_unpack_foo_tPtr&lt;/code&gt; liberar la memoria asignada por XS_unpack_foo_tPtr .</target>
        </trans-unit>
        <trans-unit id="efec145a63aada8917ea862470d1c559b417d5a8" translate="yes" xml:space="preserve">
          <source>Instead of it, do like this:</source>
          <target state="translated">En lugar de eso,haz así:</target>
        </trans-unit>
        <trans-unit id="18bf50916f725e20e492e415ffe30f1d8deec329" translate="yes" xml:space="preserve">
          <source>Instead of loading feature bundles by name, it is easier to let Perl do implicit loading of a feature bundle for you.</source>
          <target state="translated">En lugar de cargar los paquetes de características por nombre,es más fácil dejar que Perl haga la carga implícita de un paquete de características por ti.</target>
        </trans-unit>
        <trans-unit id="4549985addea58856a2589a95661e1f3d1246c4e" translate="yes" xml:space="preserve">
          <source>Instead of setting &lt;code&gt;$SIG{ALRM}&lt;/code&gt; :</source>
          <target state="translated">En lugar de configurar &lt;code&gt;$SIG{ALRM}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a4cf4072b6ecd93f69baec56cef0a223f95f5666" translate="yes" xml:space="preserve">
          <source>Instead of specifying the VERSION in the Makefile.PL you can let MakeMaker parse a file to determine the version number. The parsing routine requires that the file named by VERSION_FROM contains one single line to compute the version number. The first line in the file that contains something like a $VERSION assignment or &lt;code&gt;package Name
VERSION&lt;/code&gt; will be used. The following lines will be parsed o.k.:</source>
          <target state="translated">En lugar de especificar la VERSI&amp;Oacute;N en Makefile.PL, puede permitir que MakeMaker analice un archivo para determinar el n&amp;uacute;mero de versi&amp;oacute;n. La rutina de an&amp;aacute;lisis requiere que el archivo nombrado por VERSION_FROM contenga una sola l&amp;iacute;nea para calcular el n&amp;uacute;mero de versi&amp;oacute;n. Se utilizar&amp;aacute; la primera l&amp;iacute;nea del archivo que contiene algo como una asignaci&amp;oacute;n $ VERSION o un &lt;code&gt;package Name VERSION&lt;/code&gt; . Las siguientes l&amp;iacute;neas se analizar&amp;aacute;n correctamente:</target>
        </trans-unit>
        <trans-unit id="c9d067c5eb0ad6111602fcfc2b4a14a7fd5906ed" translate="yes" xml:space="preserve">
          <source>Instead of the</source>
          <target state="translated">En lugar de la</target>
        </trans-unit>
        <trans-unit id="52ef12851a02520ecdc1bb50b94ab80ca32cf34d" translate="yes" xml:space="preserve">
          <source>Instead of the above process, with Filter::Simple the task of setting up a source code filter is reduced to:</source>
          <target state="translated">En lugar del proceso anterior,con Filter::Simple se reduce la tarea de configurar un filtro de código fuente:</target>
        </trans-unit>
        <trans-unit id="08d78413d66ea6fc10e343adae82dd66dad36d77" translate="yes" xml:space="preserve">
          <source>Instead of the shell's &lt;code&gt;expand&lt;/code&gt; command, use:</source>
          <target state="translated">En lugar del comando &lt;code&gt;expand&lt;/code&gt; ir del shell , use:</target>
        </trans-unit>
        <trans-unit id="c97f35f08c784710202f7afd89947e84d996ff4b" translate="yes" xml:space="preserve">
          <source>Instead of the shell's &lt;code&gt;unexpand -a&lt;/code&gt; command, use:</source>
          <target state="translated">En lugar del comando &lt;code&gt;unexpand -a&lt;/code&gt; del shell , use:</target>
        </trans-unit>
        <trans-unit id="6ba67eec9e92df05acdf46af85244d2e3cb47ac2" translate="yes" xml:space="preserve">
          <source>Instead of this:</source>
          <target state="translated">En lugar de esto:</target>
        </trans-unit>
        <trans-unit id="f550302de10f6528309a1269c83c4106b886739f" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;$*&lt;/code&gt; you should use the &lt;code&gt;/m&lt;/code&gt; (and maybe &lt;code&gt;/s&lt;/code&gt;) regexp modifiers. You can enable &lt;code&gt;/m&lt;/code&gt; for a lexical scope (even a whole file) with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/m'&lt;/code&gt; . (In older versions: when &lt;code&gt;$*&lt;/code&gt; was set to a true value then all regular expressions behaved as if they were written using &lt;code&gt;/m&lt;/code&gt;.)</source>
          <target state="translated">En lugar de usar &lt;code&gt;$*&lt;/code&gt; , debe usar los modificadores de expresiones regulares &lt;code&gt;/m&lt;/code&gt; (y tal vez &lt;code&gt;/s&lt;/code&gt; ). Puede habilitar &lt;code&gt;/m&lt;/code&gt; para un &amp;aacute;mbito l&amp;eacute;xico (incluso un archivo completo) con el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/m'&lt;/code&gt; . (En versiones anteriores: cuando &lt;code&gt;$*&lt;/code&gt; se estableci&amp;oacute; en un valor verdadero, todas las expresiones regulares se comportaron como si estuvieran escritas usando &lt;code&gt;/m&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6e1ae30c884ab234189c910ec5202733bc2390ed" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;given()&lt;/code&gt; , you can use a &lt;code&gt;foreach()&lt;/code&gt; loop. For example, here's one way to count how many times a particular string occurs in an array:</source>
          <target state="translated">En lugar de utilizar &lt;code&gt;given()&lt;/code&gt; , puede utilizar un bucle &lt;code&gt;foreach()&lt;/code&gt; . Por ejemplo, aqu&amp;iacute; hay una forma de contar cu&amp;aacute;ntas veces aparece una cadena en particular en una matriz:</target>
        </trans-unit>
        <trans-unit id="ccf329df99c7b872b2b1eb49834514d53120f89e" translate="yes" xml:space="preserve">
          <source>Instead of writing an overloaded interface using pure Perl, you can also use the OVERLOAD keyword to define additional Perl names for your functions (like the ALIAS: keyword above). However, the overloaded functions must be defined with three parameters (except for the nomethod() function which needs four parameters). If any function has the OVERLOAD: keyword, several additional lines will be defined in the c file generated by xsubpp in order to register with the overload magic.</source>
          <target state="translated">En lugar de escribir una interfaz sobrecargada usando Perl puro,también puede usar la palabra clave SOBRECARGA para definir nombres adicionales de Perl para sus funciones (como el ALIAS:palabra clave arriba).Sin embargo,las funciones sobrecargadas deben ser definidas con tres parámetros (excepto la función nomethod()que necesita cuatro parámetros).Si alguna función tiene la palabra clave OVERLOAD:,se definirán varias líneas adicionales en el archivo c generado por xsubpp para registrarse con la magia de la sobrecarga.</target>
        </trans-unit>
        <trans-unit id="638fcabfcb5cd72cef4275780294bf41068d5ea4" translate="yes" xml:space="preserve">
          <source>Instead of writing multiple &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; constant&lt;/code&gt; statements, you may define multiple constants in a single statement by giving, instead of the constant name, a reference to a hash where the keys are the names of the constants to be defined. Obviously, all constants defined using this method must have a single value.</source>
          <target state="translated">En lugar de escribir declaraciones de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; constant&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; m&amp;uacute;ltiple , puede definir m&amp;uacute;ltiples constantes en una sola declaraci&amp;oacute;n dando, en lugar del nombre de la constante, una referencia a un hash donde las claves son los nombres de las constantes que se definir&amp;aacute;n. Obviamente, todas las constantes definidas con este m&amp;eacute;todo deben tener un solo valor.</target>
        </trans-unit>
        <trans-unit id="6782b252ab0c32bd42d86fbd7b3f79af4ff565e5" translate="yes" xml:space="preserve">
          <source>Instead use &lt;a href=&quot;#toFOLD_utf8&quot;&gt;toFOLD_utf8&lt;/a&gt;.</source>
          <target state="translated">En su lugar, utilice &lt;a href=&quot;#toFOLD_utf8&quot;&gt;toFOLD_utf8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1f6743fcc3e6286f6e367f0b73ab61c02242a50" translate="yes" xml:space="preserve">
          <source>Instead use &lt;a href=&quot;#toLOWER_utf8&quot;&gt;toLOWER_utf8&lt;/a&gt;.</source>
          <target state="translated">En su lugar, utilice &lt;a href=&quot;#toLOWER_utf8&quot;&gt;toLOWER_utf8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef6bd3b06361be7e68d9b7223a3d403afc7f30fb" translate="yes" xml:space="preserve">
          <source>Instead use &lt;a href=&quot;#toTITLE_utf8&quot;&gt;toTITLE_utf8&lt;/a&gt;.</source>
          <target state="translated">En su lugar, use &lt;a href=&quot;#toTITLE_utf8&quot;&gt;toTITLE_utf8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f68321016539906487e3d1b25d1d9b7700cb63a1" translate="yes" xml:space="preserve">
          <source>Instead use &lt;a href=&quot;#toUPPER_utf8&quot;&gt;toUPPER_utf8&lt;/a&gt;.</source>
          <target state="translated">En su lugar, utilice &lt;a href=&quot;#toUPPER_utf8&quot;&gt;toUPPER_utf8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8ee82e6fa25bfd2bc478049adfc2e72d633951e" translate="yes" xml:space="preserve">
          <source>Instead use &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;utf8_to_uvchr_buf&lt;/a&gt;, or rarely, &lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;utf8n_to_uvchr&lt;/a&gt;.</source>
          <target state="translated">En su lugar, use &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;utf8_to_uvchr_buf&lt;/a&gt; , o raramente, &lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;utf8n_to_uvchr&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a1e3be314ffd2bc3abc3de781de1fea85191bb5" translate="yes" xml:space="preserve">
          <source>Instead you almost certainly want to use &lt;a href=&quot;#uvchr_to_utf8&quot;&gt;uvchr_to_utf8&lt;/a&gt; or &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;.</source>
          <target state="translated">En su lugar, es casi seguro que desee utilizar &lt;a href=&quot;#uvchr_to_utf8&quot;&gt;uvchr_to_utf8&lt;/a&gt; o &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c61a7798941b565eb0ca8902a985ea083443b8b" translate="yes" xml:space="preserve">
          <source>Instead, &lt;code&gt;bytes_to_utf8&lt;/code&gt; will give you a UTF-8-encoded &lt;b&gt;copy&lt;/b&gt; of its string argument. This is useful for having the data available for comparisons and so on, without harming the original SV. There's also &lt;code&gt;utf8_to_bytes&lt;/code&gt; to go the other way, but naturally, this will fail if the string contains any characters above 255 that can't be represented in a single byte.</source>
          <target state="translated">En cambio, &lt;code&gt;bytes_to_utf8&lt;/code&gt; le dar&amp;aacute; una &lt;b&gt;copia&lt;/b&gt; codificada en UTF-8 de su argumento de cadena. Esto es &amp;uacute;til para tener los datos disponibles para comparaciones, etc., sin da&amp;ntilde;ar el SV original. Tambi&amp;eacute;n hay &lt;code&gt;utf8_to_bytes&lt;/code&gt; para ir en sentido contrario, pero, naturalmente, esto fallar&amp;aacute; si la cadena contiene caracteres por encima de 255 que no se pueden representar en un solo byte.</target>
        </trans-unit>
        <trans-unit id="1d682bf7489c4d815717f3faba809d2c01f4ea4b" translate="yes" xml:space="preserve">
          <source>Instead, all available methods to execute plain text files on Windows rely on the file &quot;extension&quot;. There are three methods to use this to execute perl scripts:</source>
          <target state="translated">En cambio,todos los métodos disponibles para ejecutar archivos de texto plano en Windows dependen de la &quot;extensión&quot; del archivo.Hay tres métodos para usar esto para ejecutar scripts perl:</target>
        </trans-unit>
        <trans-unit id="1b6f6bc21ad6a818717c640ad98e7196014d29c9" translate="yes" xml:space="preserve">
          <source>Instead, have it like this:</source>
          <target state="translated">En vez de eso,téngalo así:</target>
        </trans-unit>
        <trans-unit id="767f1cd6299c67c930c8d9fe765261f308e05da4" translate="yes" xml:space="preserve">
          <source>Instead, the following solution works rather well. The nice things about it are 1) you can start using it right away; 2) it is more powerful, because it will do the right thing with a pattern like */*/*.c; 3) you can decide whether you do/don't want to use it; and 4) you can extend the method to add any customizations (or even entirely different kinds of wildcard expansion).</source>
          <target state="translated">En cambio,la siguiente solución funciona bastante bien.Lo bueno de ella es que 1)puedes empezar a usarla inmediatamente;2)es más potente,porque hará lo correcto con un patrón como */*/*.c;3)puedes decidir si la usas o no;y 4)puedes extender el método para añadir cualquier personalización (o incluso tipos completamente diferentes de expansión de comodines).</target>
        </trans-unit>
        <trans-unit id="ca3e6ac1b90019684415c1dbba6b4a76bfa88d1e" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;blessed&lt;/code&gt; (in the &lt;a href=&quot;../scalar/util&quot;&gt;Scalar::Util&lt;/a&gt; module) for boolean checks, &lt;code&gt;isa&lt;/code&gt; for specific class checks and &lt;code&gt;reftype&lt;/code&gt; (also from &lt;a href=&quot;../scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;) for type checks. (See &lt;a href=&quot;../perlobj&quot;&gt;perlobj&lt;/a&gt; for details and a &lt;code&gt;blessed/isa&lt;/code&gt; example.)</source>
          <target state="translated">En su lugar, utilice &lt;code&gt;blessed&lt;/code&gt; (en el m&amp;oacute;dulo &lt;a href=&quot;../scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; ) para comprobaciones booleanas, &lt;code&gt;isa&lt;/code&gt; para comprobaciones de clases espec&amp;iacute;ficas y &lt;code&gt;reftype&lt;/code&gt; (tambi&amp;eacute;n de &lt;a href=&quot;../scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; ) para comprobaciones de tipos. (Ver &lt;a href=&quot;../perlobj&quot;&gt;perlobj&lt;/a&gt; para m&amp;aacute;s detalles y un ejemplo de &lt;code&gt;blessed/isa&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ff6123faf0e0d43395bbeea664d72b0be06f73ad" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;blessed&lt;/code&gt; (in the &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt; module) for boolean checks, &lt;code&gt;isa&lt;/code&gt; for specific class checks and &lt;code&gt;reftype&lt;/code&gt; (also from &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;) for type checks. (See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for details and a &lt;code&gt;blessed/isa&lt;/code&gt; example.)</source>
          <target state="translated">En su lugar, utilice &lt;code&gt;blessed&lt;/code&gt; (en el m&amp;oacute;dulo &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; ) para comprobaciones booleanas, &lt;code&gt;isa&lt;/code&gt; para comprobaciones de clases espec&amp;iacute;ficas y &lt;code&gt;reftype&lt;/code&gt; (tambi&amp;eacute;n de &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; ) para comprobaciones de tipos. (Ver &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; para m&amp;aacute;s detalles y un ejemplo de &lt;code&gt;blessed/isa&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4b239d64a76a8342f4a5e3f91a8ae44b81bce472" translate="yes" xml:space="preserve">
          <source>Instead, use double-quotes with a single backslash:</source>
          <target state="translated">En su lugar,usa comillas dobles con una sola barra invertida:</target>
        </trans-unit>
        <trans-unit id="d6975d2303b579219cd1ad4ae114ac6792c64260" translate="yes" xml:space="preserve">
          <source>Instead, use the definitions IV, UV, IVSIZE, I32SIZE, and so forth. Avoid things like I32 because they are &lt;b&gt;not&lt;/b&gt; guaranteed to be</source>
          <target state="translated">En su lugar, utilice las definiciones IV, UV, IVSIZE, I32SIZE, etc. Evitar cosas como I32, ya que se &lt;b&gt;no&lt;/b&gt; garantiza que sea</target>
        </trans-unit>
        <trans-unit id="08114352d8e01718b9f4310cee2e4e9e17e09b27" translate="yes" xml:space="preserve">
          <source>Instructions on how to install your module along with any dependencies. Suggested information to include here:</source>
          <target state="translated">Instrucciones sobre cómo instalar su módulo junto con cualquier dependencia.Información sugerida para incluir aquí:</target>
        </trans-unit>
        <trans-unit id="ecdea140cf34e5fdf5440492ab0f9ef1743393d2" translate="yes" xml:space="preserve">
          <source>Insure that colons marking targets are preceded by space, in order to distinguish the target delimiter from a colon appearing as part of a filespec.</source>
          <target state="translated">Asegurarse de que los dos puntos que marcan los objetivos estén precedidos por el espacio,a fin de distinguir el delimitador del objetivo de los dos puntos que aparecen como parte de una filespec.</target>
        </trans-unit>
        <trans-unit id="683987ee4aeb538cfdf37663a8c0ab7ac90a2019" translate="yes" xml:space="preserve">
          <source>Integer Arithmetic</source>
          <target state="translated">Aritmética de números enteros</target>
        </trans-unit>
        <trans-unit id="efbf94ff9c1725858eeaef5462e64f2f9beabf82" translate="yes" xml:space="preserve">
          <source>Integer binary logarithm [C99]</source>
          <target state="translated">Logaritmo binario entero [C99]</target>
        </trans-unit>
        <trans-unit id="0bbddfa82bfc58cb4fa39eff708183ee398ca07e" translate="yes" xml:space="preserve">
          <source>Integer binary logarithm [C99].</source>
          <target state="translated">Logaritmo binario entero [C99].</target>
        </trans-unit>
        <trans-unit id="d2e40742eb38c2f7d8587ad34912b36536447d35" translate="yes" xml:space="preserve">
          <source>Integer. An optional leading plus or minus sign, followed by a sequence of digits.</source>
          <target state="translated">Entero.Un signo opcional de más o menos,seguido de una secuencia de dígitos.</target>
        </trans-unit>
        <trans-unit id="724b5422dc05c791b8cf0befd732972c0409722e" translate="yes" xml:space="preserve">
          <source>Integers</source>
          <target state="translated">Integers</target>
        </trans-unit>
        <trans-unit id="4b35a75e337792a14859048b5fe4c1f4a2d46a86" translate="yes" xml:space="preserve">
          <source>Integrating local directories</source>
          <target state="translated">Integrar los directorios locales</target>
        </trans-unit>
        <trans-unit id="f3a43fe57e64c611c07e7f0722fcf5e81fd02d7e" translate="yes" xml:space="preserve">
          <source>Intel HEX</source>
          <target state="translated">Intel HEX</target>
        </trans-unit>
        <trans-unit id="283a7688f976826bc81b0d15b139b8fb7bc39125" translate="yes" xml:space="preserve">
          <source>Intel HEX is a file format for representing binary data, mostly for programming various chips, as a text file. (See &lt;a href=&quot;http://en.wikipedia.org/wiki/.hex&quot;&gt;http://en.wikipedia.org/wiki/.hex&lt;/a&gt; for a detailed description, and &lt;a href=&quot;http://en.wikipedia.org/wiki/SREC_&quot;&gt;http://en.wikipedia.org/wiki/SREC_&lt;/a&gt;(file_format) for the Motorola S-record format, which can be unravelled using the same technique.) Each line begins with a colon (':') and is followed by a sequence of hexadecimal characters, specifying a byte count</source>
          <target state="translated">Intel HEX es un formato de archivo para representar datos binarios, principalmente para programar varios chips, como un archivo de texto. (Consulte &lt;a href=&quot;http://en.wikipedia.org/wiki/.hex&quot;&gt;http://en.wikipedia.org/wiki/.hex&lt;/a&gt; para obtener una descripci&amp;oacute;n detallada y &lt;a href=&quot;http://en.wikipedia.org/wiki/SREC_&quot;&gt;http://en.wikipedia.org/wiki/SREC_&lt;/a&gt; (file_format) para el formato de registro S de Motorola, que se puede descifrar usando la misma t&amp;eacute;cnica.) Cada l&amp;iacute;nea comienza con dos puntos (':') y es seguida por una secuencia de caracteres hexadecimales, especificando un n&amp;uacute;mero de bytes</target>
        </trans-unit>
        <trans-unit id="380d7ac3123e0e68ffb5963fc34784cfb9731163" translate="yes" xml:space="preserve">
          <source>Intended for use on command line with &lt;b&gt;-M&lt;/b&gt; option as a way of testing arbitrary scripts against an uninstalled version of a package.</source>
          <target state="translated">Dise&amp;ntilde;ado para su uso en la l&amp;iacute;nea de comandos con la opci&amp;oacute;n &lt;b&gt;-M&lt;/b&gt; como una forma de probar scripts arbitrarios contra una versi&amp;oacute;n desinstalada de un paquete.</target>
        </trans-unit>
        <trans-unit id="d75d6528effe0d95b951e2f70179256a5a75c5b0" translate="yes" xml:space="preserve">
          <source>Interacting with Perl from the Digital Command Language (DCL) shell often requires a different set of quotation marks than Unix shells do. For example:</source>
          <target state="translated">Interactuar con el Perl desde el shell del Lenguaje de Comandos Digitales (DCL)a menudo requiere un juego de comillas diferente al de los shells de Unix.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="39c574bcdb6de6c0029ded259821021591e578be" translate="yes" xml:space="preserve">
          <source>Interaction with Extensions</source>
          <target state="translated">Interacción con las extensiones</target>
        </trans-unit>
        <trans-unit id="36743263147e4579bf65378679da63cd8385f8a2" translate="yes" xml:space="preserve">
          <source>Interactive Client with IO::Socket</source>
          <target state="translated">Cliente interactivo con IO::Socket</target>
        </trans-unit>
        <trans-unit id="a16954cde7a599ddba4d577acd1b685762317ea3" translate="yes" xml:space="preserve">
          <source>Interactive mode:</source>
          <target state="translated">Modo interactivo:</target>
        </trans-unit>
        <trans-unit id="bdcd0f2bf481dc531fd0fd8a96b470b347913b64" translate="yes" xml:space="preserve">
          <source>Interactive sessions maintain a lockfile, by default &lt;code&gt;~/.cpan/.&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; . Batch jobs can run without a lockfile and not disturb each other.</source>
          <target state="translated">Las sesiones interactivas mantienen un archivo de bloqueo, por defecto &lt;code&gt;~/.cpan/.&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; . Los trabajos por lotes se pueden ejecutar sin un archivo de bloqueo y no se molestan entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="4049be05b318660a87d35f9664cb17d1ca51f690" translate="yes" xml:space="preserve">
          <source>Interactively supply an arbitrary &lt;code&gt;expression&lt;/code&gt; using &lt;code&gt;-e&lt;/code&gt; .</source>
          <target state="translated">Proporcione de forma interactiva una &lt;code&gt;expression&lt;/code&gt; arbitraria utilizando &lt;code&gt;-e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f4333051573407ec799c7bafee1c6ca09470f1b" translate="yes" xml:space="preserve">
          <source>Interestingly we get slightly different results, which is mostly because the algorithm which generates the report is different, even though the output file format was allegedly identical. The elapsed, user and system times are clearly showing the time it took for &lt;code&gt;Devel::Profiler&lt;/code&gt; to execute its own run, but the column listings feel more accurate somehow than the ones we had earlier from &lt;code&gt;Devel::DProf&lt;/code&gt; . The 102% figure has disappeared, for example. This is where we have to use the tools at our disposal, and recognise their pros and cons, before using them. Interestingly, the numbers of calls for each subroutine are identical in the two reports, it's the percentages which differ. As the author of &lt;code&gt;Devel::Proviler&lt;/code&gt; writes:</source>
          <target state="translated">Curiosamente, obtenemos resultados ligeramente diferentes, que se deben principalmente a que el algoritmo que genera el informe es diferente, aunque el formato del archivo de salida supuestamente era id&amp;eacute;ntico. Los tiempos transcurridos, del usuario y del sistema muestran claramente el tiempo que le tom&amp;oacute; a &lt;code&gt;Devel::Profiler&lt;/code&gt; ejecutar su propia ejecuci&amp;oacute;n, pero los listados de columnas se sienten m&amp;aacute;s precisos de alguna manera que los que ten&amp;iacute;amos anteriormente de &lt;code&gt;Devel::DProf&lt;/code&gt; . La cifra del 102% ha desaparecido, por ejemplo. Aqu&amp;iacute; es donde tenemos que utilizar las herramientas a nuestra disposici&amp;oacute;n, y reconocer sus pros y contras, antes de utilizarlas. Curiosamente, el n&amp;uacute;mero de llamadas para cada subrutina es id&amp;eacute;ntico en los dos informes, son los porcentajes los que difieren. Como escribe el autor de &lt;code&gt;Devel::Proviler&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8fe9cc8d59c908d2dfc528838b1b4b5192a00c09" translate="yes" xml:space="preserve">
          <source>Interface Strategy</source>
          <target state="translated">Estrategia de interfaz</target>
        </trans-unit>
        <trans-unit id="e9bdbdb9fc26f525c1a8ecbeb7cc8ceb768f4d54" translate="yes" xml:space="preserve">
          <source>Interface between CPAN.pm and Kwalify.pm</source>
          <target state="translated">Interfaz entre CPAN.pm y Kwalify.pm</target>
        </trans-unit>
        <trans-unit id="7481e39dedf2d2f4c332b82f6502c28043c6929e" translate="yes" xml:space="preserve">
          <source>Interface to Berkeley DB</source>
          <target state="translated">Interfaz con la base de datos de Berkeley</target>
        </trans-unit>
        <trans-unit id="8e2ccff2c57048b71f1d307b6edb8f11b2c43b05" translate="yes" xml:space="preserve">
          <source>Interface to cwd from EMX. Used by &lt;code&gt;Cwd::cwd&lt;/code&gt; .</source>
          <target state="translated">Interfaz para cwd desde EMX. Utilizado por &lt;code&gt;Cwd::cwd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dae2466aff78641921461ec62c4d4ef5f0f5b074" translate="yes" xml:space="preserve">
          <source>Interface to zlib compression library</source>
          <target state="translated">Interfaz a la biblioteca de compresión zlib</target>
        </trans-unit>
        <trans-unit id="e346886e4b9cdfd6ef396ff466a7b37cd952cc6d" translate="yes" xml:space="preserve">
          <source>Interfaces to / Emulations of Other Programming Languages</source>
          <target state="translated">Interfaces para/Emulaciones de otros lenguajes de programación</target>
        </trans-unit>
        <trans-unit id="2188689d5ae5f33a21007d13b3dcb52813873257" translate="yes" xml:space="preserve">
          <source>Interfaces to some Win32 API Functions</source>
          <target state="translated">Interfaces para algunas funciones de la API de Win32</target>
        </trans-unit>
        <trans-unit id="e20643cb83b71e3458cd8974c42d3daa3e1288a1" translate="yes" xml:space="preserve">
          <source>Internal Format</source>
          <target state="translated">Formato interno</target>
        </trans-unit>
        <trans-unit id="61d67a4869b5e28886ef542cee4befaab340cf82" translate="yes" xml:space="preserve">
          <source>Internal Functions</source>
          <target state="translated">Funciones internas</target>
        </trans-unit>
        <trans-unit id="5af8acca69afbd9c6d39218e0bb28d32d199f366" translate="yes" xml:space="preserve">
          <source>Internal configuration handling for CPAN.pm</source>
          <target state="translated">Manejo de configuración interna para CPAN.pm</target>
        </trans-unit>
        <trans-unit id="0806883110f04db9f91191aca94f31996b0d72ea" translate="yes" xml:space="preserve">
          <source>Internal debugging for CPAN.pm</source>
          <target state="translated">Depuración interna para CPAN.pm</target>
        </trans-unit>
        <trans-unit id="4c898c3410ed0ae8d99f5b87b9783ee59e1feeaf" translate="yes" xml:space="preserve">
          <source>Internal debugging messages are enabled when $dl_debug is set true. Currently setting $dl_debug only affects the Perl side of the DynaLoader. These messages should help an application developer to resolve any DynaLoader usage problems.</source>
          <target state="translated">Los mensajes de depuración interna se activan cuando $dl_debug se establece como verdadero.La configuración actual de $dl_debug sólo afecta al lado Perl del DynaLoader.Estos mensajes deberían ayudar al desarrollador de la aplicación a resolver cualquier problema de uso de DynaLoader.</target>
        </trans-unit>
        <trans-unit id="d873f4a2f97ab05d24f6fa0f06cef45d8aeae3b7" translate="yes" xml:space="preserve">
          <source>Internal format</source>
          <target state="translated">Formato interno</target>
        </trans-unit>
        <trans-unit id="a7b06547359f2b157e33961f9b748082a4eb9b46" translate="yes" xml:space="preserve">
          <source>Internal function Hash::Util::FieldHash::_fieldhash</source>
          <target state="translated">Función interna Hash::Util::FieldHash::_fieldhash</target>
        </trans-unit>
        <trans-unit id="51b9dd26770184bcb91b7be8acd8ff5db510c8df" translate="yes" xml:space="preserve">
          <source>Internal function which adds the filter, based on the &lt;a href=&quot;http://search.cpan.org/perldoc/filter_add&quot;&gt;filter_add&lt;/a&gt; argument type.</source>
          <target state="translated">Funci&amp;oacute;n interna que agrega el filtro, seg&amp;uacute;n el tipo de argumento &lt;a href=&quot;http://search.cpan.org/perldoc/filter_add&quot;&gt;filter_add&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fee2b9c80ad50aec00177a91487a9d17942074f" translate="yes" xml:space="preserve">
          <source>Internal handling of tar archives for CPAN.pm</source>
          <target state="translated">Manejo interno de los archivos de alquitrán para CPAN.pm</target>
        </trans-unit>
        <trans-unit id="f7017225658a0f9fba19af865f848f427597c31a" translate="yes" xml:space="preserve">
          <source>Internal method for printing errors and warnings. If no options are given, simply prints &quot;@_&quot;. The following options are recognized and used to form the output:</source>
          <target state="translated">Método interno para imprimir errores y advertencias.Si no se dan opciones,simplemente imprime &quot;@_&quot;.Las siguientes opciones se reconocen y se utilizan para formar la salida:</target>
        </trans-unit>
        <trans-unit id="d524d9cfc678704c162c4cb4460355871a08ade5" translate="yes" xml:space="preserve">
          <source>Internal object used by Time::gmtime and Time::localtime</source>
          <target state="translated">Objeto interno utilizado por Time::gmtime y Time::localtime</target>
        </trans-unit>
        <trans-unit id="dec6a2c45a2bdd64a3ec8fcc2511727cc99b5b26" translate="yes" xml:space="preserve">
          <source>Internal queue support for CPAN.pm</source>
          <target state="translated">Soporte de cola interna para CPAN.pm</target>
        </trans-unit>
        <trans-unit id="1de0eedbd92548d18bf918a068ea4b60732f9cf3" translate="yes" xml:space="preserve">
          <source>Internally &lt;code&gt;%+&lt;/code&gt; and &lt;code&gt;%-&lt;/code&gt; are implemented with a real tied interface via &lt;a href=&quot;tie/hash/namedcapture&quot;&gt;Tie::Hash::NamedCapture&lt;/a&gt;. The methods in that package will call back into these functions. However the usage of &lt;a href=&quot;tie/hash/namedcapture&quot;&gt;Tie::Hash::NamedCapture&lt;/a&gt; for this purpose might change in future releases. For instance this might be implemented by magic instead (would need an extension to mgvtbl).</source>
          <target state="translated">Internamente, &lt;code&gt;%+&lt;/code&gt; y &lt;code&gt;%-&lt;/code&gt; se implementan con una interfaz vinculada real a trav&amp;eacute;s de &lt;a href=&quot;tie/hash/namedcapture&quot;&gt;Tie :: Hash :: NamedCapture&lt;/a&gt; . Los m&amp;eacute;todos de ese paquete volver&amp;aacute;n a llamar a estas funciones. Sin embargo, el uso de &lt;a href=&quot;tie/hash/namedcapture&quot;&gt;Tie :: Hash :: NamedCapture&lt;/a&gt; para este prop&amp;oacute;sito podr&amp;iacute;a cambiar en futuras versiones. Por ejemplo, esto podr&amp;iacute;a implementarse por arte de magia (necesitar&amp;iacute;a una extensi&amp;oacute;n para mgvtbl).</target>
        </trans-unit>
        <trans-unit id="1b09ff7b696f900f84f4dabc94d78d0ec9f89714" translate="yes" xml:space="preserve">
          <source>Internally CPAN.pm uses the UTF-8 charset. If your terminal is expecting ISO-8859-1 charset, a converter can be activated by setting term_is_latin to a true value in your config file. One way of doing so would be</source>
          <target state="translated">Internamente CPAN.pm usa el charset UTF-8.Si su terminal espera el juego de caracteres ISO-8859-1,se puede activar un convertidor estableciendo el term_is_latin a un valor verdadero en su archivo de configuración.Una forma de hacerlo sería</target>
        </trans-unit>
        <trans-unit id="80378d1e7d2da0cf424eca7e07458848627808d4" translate="yes" xml:space="preserve">
          <source>Internally Encoding -&amp;gt; Unicode and Unicode -&amp;gt; Encoding Map looks like this;</source>
          <target state="translated">Codificaci&amp;oacute;n interna -&amp;gt; Unicode y Unicode -&amp;gt; El mapa de codificaci&amp;oacute;n se ve as&amp;iacute;;</target>
        </trans-unit>
        <trans-unit id="8ac21d3e9553672475ffa22a2c6fb0c3420e3cc6" translate="yes" xml:space="preserve">
          <source>Internally the Benchmark object holds timing values, described in &lt;a href=&quot;#NOTES&quot;&gt;NOTES&lt;/a&gt; below. The following methods can be used to access them:</source>
          <target state="translated">Internamente, el objeto Benchmark contiene valores de tiempo, descritos en &lt;a href=&quot;#NOTES&quot;&gt;NOTAS a&lt;/a&gt; continuaci&amp;oacute;n. Se pueden utilizar los siguientes m&amp;eacute;todos para acceder a ellos:</target>
        </trans-unit>
        <trans-unit id="a523262f74789d99cb822f252d727c1f77360575" translate="yes" xml:space="preserve">
          <source>Internally this is set to &lt;code&gt;NULL&lt;/code&gt; unless a custom engine is specified in &lt;code&gt;$^H{regcomp}&lt;/code&gt; , Perl's own set of callbacks can be accessed in the struct pointed to by &lt;code&gt;RE_ENGINE_PTR&lt;/code&gt; .</source>
          <target state="translated">Internamente, esto se establece en &lt;code&gt;NULL&lt;/code&gt; a menos que se especifique un motor personalizado en &lt;code&gt;$^H{regcomp}&lt;/code&gt; , se puede acceder al propio conjunto de devoluciones de llamada de Perl en la estructura apuntada por &lt;code&gt;RE_ENGINE_PTR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d5951d905f459e1665d8721f731d5fdbea427b7" translate="yes" xml:space="preserve">
          <source>Internally used by Encode</source>
          <target state="translated">Utilizado internamente por Encode</target>
        </trans-unit>
        <trans-unit id="e76ceb49e27718344d5ee1ece08b4b732be4cccc" translate="yes" xml:space="preserve">
          <source>Internally used by Encode::??::ISO_2022_*</source>
          <target state="translated">Usado internamente por Encode::??::ISO_2022_*</target>
        </trans-unit>
        <trans-unit id="2bebc443d25f2caf9161712ece027e6af3e9145b" translate="yes" xml:space="preserve">
          <source>Internally used by Encode::CN</source>
          <target state="translated">Usado internamente por Encode::CN</target>
        </trans-unit>
        <trans-unit id="449dbdf27f0aebf5b3ec15f606b3cbc5adf19193" translate="yes" xml:space="preserve">
          <source>Internally used by Encode::JP</source>
          <target state="translated">Internamente usado por Encode::JP</target>
        </trans-unit>
        <trans-unit id="c43fcf4d81bc5dc37c2f1693cf4046ad46e8bf06" translate="yes" xml:space="preserve">
          <source>Internally used by Encode::JP::2022_JP*</source>
          <target state="translated">Usado internamente por Encode::JP::2022_JP*</target>
        </trans-unit>
        <trans-unit id="b7211781b63a5b485cff3f483aa4493e62335113" translate="yes" xml:space="preserve">
          <source>Internally used by Encode::KR</source>
          <target state="translated">Usado internamente por Encode::KR</target>
        </trans-unit>
        <trans-unit id="87865024ef8da5f651d4b8f2dfd42f62371e839c" translate="yes" xml:space="preserve">
          <source>Internally, Perl currently uses either whatever the native eight-bit character set of the platform (for example Latin-1) is, defaulting to UTF-8, to encode Unicode strings. Specifically, if all code points in the string are &lt;code&gt;0xFF&lt;/code&gt; or less, Perl uses the native eight-bit character set. Otherwise, it uses UTF-8.</source>
          <target state="translated">Internamente, Perl utiliza actualmente cualquiera que sea el conjunto de caracteres nativo de ocho bits de la plataforma (por ejemplo, Latin-1), por defecto en UTF-8, para codificar cadenas Unicode. Espec&amp;iacute;ficamente, si todos los puntos de c&amp;oacute;digo en la cadena son &lt;code&gt;0xFF&lt;/code&gt; o menos, Perl usa el juego de caracteres nativo de ocho bits. De lo contrario, usa UTF-8.</target>
        </trans-unit>
        <trans-unit id="5c9c0562b20651bd210573c4a3cd205f4716cb6a" translate="yes" xml:space="preserve">
          <source>Internally, native integer arithmetic (as provided by your C compiler) is used. This means that Perl's own semantics for arithmetic operations may not be preserved. One common source of trouble is the modulus of negative numbers, which Perl does one way, but your hardware may do another.</source>
          <target state="translated">Internamente,se utiliza la aritmética de números enteros nativos (como la proporcionada por su compilador C).Esto significa que la propia semántica de Perl para las operaciones aritméticas no puede ser preservada.Una fuente común de problemas es el módulo de números negativos,que Perl hace de una manera,pero su hardware puede hacer otra.</target>
        </trans-unit>
        <trans-unit id="b7fbfab5bd07346d2a0d188d0642fad2cf67e914" translate="yes" xml:space="preserve">
          <source>Internally, we often set this to an object of class Pod::Simple::Progress. That class is probably undocumented, but you may wish to look at its source.</source>
          <target state="translated">Internamente,a menudo lo fijamos como un objeto de clase Pod::Simple::Progreso.Esa clase es probablemente indocumentada,pero puede que quieras mirar su fuente.</target>
        </trans-unit>
        <trans-unit id="4e1f47a6ca884b2242a2daaec979f4c9e4628f25" translate="yes" xml:space="preserve">
          <source>Internally, your computer represents floating-point numbers in binary. Digital (as in powers of two) computers cannot store all numbers exactly. Some real numbers lose precision in the process. This is a problem with how computers store numbers and affects all computer languages, not just Perl.</source>
          <target state="translated">Internamente,su computadora representa números de punto flotante en binario.Las computadoras digitales (como en las potencias de dos)no pueden almacenar todos los números exactamente.Algunos números reales pierden precisión en el proceso.Este es un problema de la forma en que las computadoras almacenan los números y afecta a todos los lenguajes de computación,no sólo a Perl.</target>
        </trans-unit>
        <trans-unit id="653edb0bfdb6bd20dfe7affb5776bc7d271237c7" translate="yes" xml:space="preserve">
          <source>Internals</source>
          <target state="translated">Internals</target>
        </trans-unit>
        <trans-unit id="f3272f534c54bc991446f61c8eb13e09347dc7ac" translate="yes" xml:space="preserve">
          <source>Internals and C Language Interface</source>
          <target state="translated">Internos e interfaz de lenguaje C</target>
        </trans-unit>
        <trans-unit id="56e7980ec1f234461f5c5cc8a7f141d36197c7ac" translate="yes" xml:space="preserve">
          <source>Internationalisation</source>
          <target state="translated">Internationalisation</target>
        </trans-unit>
        <trans-unit id="31cadca51461dbf1ea6607e7802c11fbe6ff93d3" translate="yes" xml:space="preserve">
          <source>Internationalization (I18N) and localization (L10N) are supported at least in principle even on EBCDIC platforms. The details are system-dependent and discussed under the &lt;a href=&quot;#OS-ISSUES&quot;&gt;OS ISSUES&lt;/a&gt; section below.</source>
          <target state="translated">La internacionalizaci&amp;oacute;n (I18N) y la localizaci&amp;oacute;n (L10N) son compatibles al menos en principio incluso en plataformas EBCDIC. Los detalles dependen del sistema y se analizan en la secci&amp;oacute;n &lt;a href=&quot;#OS-ISSUES&quot;&gt;PROBLEMAS DEL SO a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="06442c59ec9f24811c5d9eb359e2f21b42d4c792" translate="yes" xml:space="preserve">
          <source>Internationalization and Locale</source>
          <target state="translated">Internacionalización y Localización</target>
        </trans-unit>
        <trans-unit id="f7421cfdcae4df82cd94a16e9b01d52930cf4a8c" translate="yes" xml:space="preserve">
          <source>Internationalization, as defined in the C and POSIX standards, can be criticized as incomplete, ungainly, and having too large a granularity. (Locales apply to a whole process, when it would arguably be more useful to have them apply to a single thread, window group, or whatever.) They also have a tendency, like standards groups, to divide the world into nations, when we all know that the world can equally well be divided into bankers, bikers, gamers, and so on.</source>
          <target state="translated">La internacionalización,tal como se define en las normas C y POSIX,puede ser criticada como incompleta,desgarbada y con una granularidad demasiado grande.(Los locales se aplican a todo un proceso,cuando podría decirse que sería más útil que se aplicaran a un solo hilo,grupo de ventanas o lo que sea).También tienen una tendencia,como los grupos de estándares,a dividir el mundo en naciones,cuando todos sabemos que el mundo puede dividirse igualmente bien en banqueros,motociclistas,jugadores,y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="2e18cc52391003fa5303fbdac90ff76add1db9f3" translate="yes" xml:space="preserve">
          <source>Internet Line Terminators</source>
          <target state="translated">Terminadores de línea de Internet</target>
        </trans-unit>
        <trans-unit id="1ace89f6b9c54bf536f959a6a92a52a0f9188777" translate="yes" xml:space="preserve">
          <source>Internet Protocol, or Intellectual Property.</source>
          <target state="translated">Protocolo de Internet o propiedad intelectual.</target>
        </trans-unit>
        <trans-unit id="6aafd8134caf0f288faa302a3a8189c60711fc0c" translate="yes" xml:space="preserve">
          <source>Internet TCP Clients and Servers</source>
          <target state="translated">Clientes y servidores de Internet TCP</target>
        </trans-unit>
        <trans-unit id="f4a9147272ff83f2cf2d940d5441a60e554132ae" translate="yes" xml:space="preserve">
          <source>Internet language tags, as defined in RFC 3066, are a formalism for denoting human languages. The two-letter ISO 639-1 language codes are well known (as &quot;en&quot; for English), as are their forms when qualified by a country code (&quot;en-US&quot;). Less well-known are the arbitrary-length non-ISO codes (like &quot;i-mingo&quot;), and the recently (in 2001) introduced three-letter ISO-639-2 codes.</source>
          <target state="translated">Las etiquetas de idiomas en Internet,tal como se definen en la RFC 3066,son un formalismo para denotar los idiomas humanos.Los códigos de idiomas de dos letras ISO 639-1 son muy conocidos (como &quot;en&quot; para el inglés),al igual que sus formas cuando se califican con un código de país (&quot;en-US&quot;).Menos conocidos son los códigos de longitud arbitraria que no son de la ISO (como &quot;i-mingo&quot;),y los códigos de tres letras ISO-639-2 introducidos recientemente (en 2001).</target>
        </trans-unit>
        <trans-unit id="645bb0cb3effc0c464d1fa2ee02c7473d9c16ab6" translate="yes" xml:space="preserve">
          <source>Interpolated scalars and arrays are converted internally to the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&quot;.&quot;&lt;/code&gt; catenation operations. Thus, &lt;code&gt;&quot;$foo XXX '@arr'&quot;&lt;/code&gt; becomes:</source>
          <target state="translated">Los escalares y matrices interpolados se convierten internamente en la &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&quot;.&quot;&lt;/code&gt; operaciones de catenation. Por lo tanto, &lt;code&gt;&quot;$foo XXX '@arr'&quot;&lt;/code&gt; convierte en:</target>
        </trans-unit>
        <trans-unit id="1fc8312ce8a1d5c2a7ed5ed38a0c5c565ab477c8" translate="yes" xml:space="preserve">
          <source>Interpolating an array or slice interpolates the elements in order, separated by the value of &lt;code&gt;$&quot;&lt;/code&gt; , so is equivalent to interpolating &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt; $&quot;, @array&lt;/code&gt; . &quot;Punctuation&quot; arrays such as &lt;code&gt;@*&lt;/code&gt; are usually interpolated only if the name is enclosed in braces &lt;code&gt;@{*}&lt;/code&gt;, but the arrays &lt;code&gt;@_&lt;/code&gt; , &lt;code&gt;@+&lt;/code&gt; , and &lt;code&gt;@-&lt;/code&gt; are interpolated even without braces.</source>
          <target state="translated">La interpolaci&amp;oacute;n de una matriz o un segmento interpola los elementos en orden, separados por el valor de &lt;code&gt;$&quot;&lt;/code&gt; , por lo que es equivalente a interpolar &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt; $&quot;, @array&lt;/code&gt; . Las matrices de &quot;puntuaci&amp;oacute;n&quot; como &lt;code&gt;@*&lt;/code&gt; generalmente se interpolan solo si el nombre est&amp;aacute; entre llaves &lt;code&gt;@{*}&lt;/code&gt; , pero las matrices &lt;code&gt;@_&lt;/code&gt; , &lt;code&gt;@+&lt;/code&gt; y &lt;code&gt;@-&lt;/code&gt; se interpolan incluso sin llaves.</target>
        </trans-unit>
        <trans-unit id="938c8acd8c9d50a2d8734d4eebce781a661d4c88" translate="yes" xml:space="preserve">
          <source>Interpolation in patterns has several quirks: &lt;code&gt;$|&lt;/code&gt; , &lt;code&gt;$(&lt;/code&gt; , &lt;code&gt;$)&lt;/code&gt; , &lt;code&gt;@+&lt;/code&gt; and &lt;code&gt;@-&lt;/code&gt; are not interpolated, and constructs &lt;code&gt;$var[SOMETHING]&lt;/code&gt; are voted (by several different estimators) to be either an array element or &lt;code&gt;$var&lt;/code&gt; followed by an RE alternative. This is where the notation &lt;code&gt;${arr[$bar]}&lt;/code&gt; comes handy: &lt;code&gt;/${arr[0-9]}/&lt;/code&gt; is interpreted as array element &lt;code&gt;-9&lt;/code&gt; , not as a regular expression from the variable &lt;code&gt;$arr&lt;/code&gt; followed by a digit, which would be the interpretation of &lt;code&gt;/$arr[0-9]/&lt;/code&gt; . Since voting among different estimators may occur, the result is not predictable.</source>
          <target state="translated">La interpolaci&amp;oacute;n en patrones tiene varias peculiaridades: &lt;code&gt;$|&lt;/code&gt; , &lt;code&gt;$(&lt;/code&gt; , &lt;code&gt;$)&lt;/code&gt; , &lt;code&gt;@+&lt;/code&gt; y &lt;code&gt;@-&lt;/code&gt; no se interpolan, y las construcciones &lt;code&gt;$var[SOMETHING]&lt;/code&gt; se votan (por varios estimadores diferentes) como un elemento de matriz o &lt;code&gt;$var&lt;/code&gt; seguido de una alternativa de RE. Aqu&amp;iacute; es donde la notaci&amp;oacute;n &lt;code&gt;${arr[$bar]}&lt;/code&gt; resulta &amp;uacute;til: &lt;code&gt;/${arr[0-9]}/&lt;/code&gt; se interpreta como un elemento de matriz &lt;code&gt;-9&lt;/code&gt; , no como una expresi&amp;oacute;n regular de la variable &lt;code&gt;$arr&lt;/code&gt; seguida de un d&amp;iacute;gito, que ser&amp;iacute;a la interpretaci&amp;oacute;n de &lt;code&gt;/$arr[0-9]/&lt;/code&gt; . Dado que puede ocurrir una votaci&amp;oacute;n entre diferentes estimadores, el resultado no es predecible.</target>
        </trans-unit>
        <trans-unit id="73b1ed4106cc19f9516b8700eff6b51f8a50bc7e" translate="yes" xml:space="preserve">
          <source>Interpret input as a hexadecimal string. A &quot;0x&quot; or &quot;x&quot; prefix is optional. A single underscore character may be placed right after the prefix, if present, or between any two digits. If the input is invalid, a NaN is returned.</source>
          <target state="translated">Interpreta la entrada como una cadena hexadecimal.El prefijo &quot;0x&quot; o &quot;x&quot; es opcional.Se puede colocar un solo carácter de subrayado justo después del prefijo,si está presente,o entre dos dígitos cualesquiera.Si la entrada no es válida,se devuelve un NaN.</target>
        </trans-unit>
        <trans-unit id="70a91bb371c7a5d73707f3bf850be5ff775864c2" translate="yes" xml:space="preserve">
          <source>Interpret results strictly.</source>
          <target state="translated">Interprete los resultados estrictamente.</target>
        </trans-unit>
        <trans-unit id="7bc19d89b05f97e1ecec77b1cd80333965f8eac8" translate="yes" xml:space="preserve">
          <source>Interpret the input as a binary string. A &quot;0b&quot; or &quot;b&quot; prefix is optional. A single underscore character may be placed right after the prefix, if present, or between any two digits. If the input is invalid, a NaN is returned.</source>
          <target state="translated">Interpreta la entrada como una cadena binaria.El prefijo &quot;0b&quot; o &quot;b&quot; es opcional.Un solo carácter de subrayado puede colocarse justo después del prefijo,si está presente,o entre dos dígitos cualesquiera.Si la entrada es inválida,se devuelve un NaN.</target>
        </trans-unit>
        <trans-unit id="0fb708839bb76c97a78f59fb0d153db3bcac65ad" translate="yes" xml:space="preserve">
          <source>Interpret the input as an octal string and return the corresponding value. A &quot;0&quot; (zero) prefix is optional. A single underscore character may be placed right after the prefix, if present, or between any two digits. If the input is invalid, a NaN is returned.</source>
          <target state="translated">Interpreta la entrada como una cadena octal y devuelve el valor correspondiente.El prefijo &quot;0&quot; (cero)es opcional.Se puede colocar un solo carácter de subrayado justo después del prefijo,si está presente,o entre dos dígitos cualesquiera.Si la entrada no es válida,se devuelve un NaN.</target>
        </trans-unit>
        <trans-unit id="b29af10220daeb6f80d20ec4774b2643643e00f8" translate="yes" xml:space="preserve">
          <source>Interpretation of the &lt;code&gt;gecos&lt;/code&gt; field varies between systems, but traditionally holds 4 comma-separated fields containing the user's full name, office location, work phone number, and home phone number. An &lt;code&gt;&amp;amp;&lt;/code&gt; in the gecos field should be replaced by the user's properly capitalized login &lt;code&gt;name&lt;/code&gt; . The &lt;code&gt;shell&lt;/code&gt; field, if blank, must be assumed to be</source>
          <target state="translated">La interpretaci&amp;oacute;n del campo &lt;code&gt;gecos&lt;/code&gt; var&amp;iacute;a entre sistemas, pero tradicionalmente contiene 4 campos separados por comas que contienen el nombre completo del usuario, la ubicaci&amp;oacute;n de la oficina, el n&amp;uacute;mero de tel&amp;eacute;fono del trabajo y el n&amp;uacute;mero de tel&amp;eacute;fono de la casa. Un &lt;code&gt;&amp;amp;&lt;/code&gt; en el campo gecos debe reemplazarse por el &lt;code&gt;name&lt;/code&gt; inicio de sesi&amp;oacute;n del usuario en may&amp;uacute;scula adecuada . El campo de &lt;code&gt;shell&lt;/code&gt; , si est&amp;aacute; en blanco, debe asumirse que es</target>
        </trans-unit>
        <trans-unit id="f5cfbb6233c7812b488cce8d6bd3af2af9ab5bc6" translate="yes" xml:space="preserve">
          <source>Interpretation of the buffer's octets can be abstracted out by using the slightly higher-level functions &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt; and &lt;a href=&quot;#lex_read_unichar&quot;&gt;lex_read_unichar&lt;/a&gt;.</source>
          <target state="translated">La interpretaci&amp;oacute;n de los octetos del b&amp;uacute;fer se puede abstraer utilizando las funciones de nivel ligeramente superior &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt; y &lt;a href=&quot;#lex_read_unichar&quot;&gt;lex_read_unichar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92d3f8b03230be860eb13ba99ed5e322ec25a6b0" translate="yes" xml:space="preserve">
          <source>Interpreter</source>
          <target state="translated">Interpreter</target>
        </trans-unit>
        <trans-unit id="c4c7c558d92a61d6a4e1c001e4a147b288928483" translate="yes" xml:space="preserve">
          <source>Interprets EXPR as a hex string and returns the corresponding value. (To convert strings that might start with either &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;0x&lt;/code&gt; , or &lt;code&gt;0b&lt;/code&gt;, see &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt;.) If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Interpreta EXPR como una cadena hexadecimal y devuelve el valor correspondiente. (Para convertir cadenas que pueden comenzar con &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;0x&lt;/code&gt; o &lt;code&gt;0b&lt;/code&gt; , consulte &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt; .) Si se omite EXPR, use &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80995a80c008a9c2a1eb866370afb34599cdd244" translate="yes" xml:space="preserve">
          <source>Interprets EXPR as a hex string and returns the corresponding value. (To convert strings that might start with either &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;0x&lt;/code&gt; , or &lt;code&gt;0b&lt;/code&gt;, see &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;.) If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Interpreta EXPR como una cadena hexadecimal y devuelve el valor correspondiente. (Para convertir cadenas que pueden comenzar con &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;0x&lt;/code&gt; o &lt;code&gt;0b&lt;/code&gt; , consulte &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt; .) Si se omite EXPR, use &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58710e925b06b5bcd617d0a02276a6d507de1826" translate="yes" xml:space="preserve">
          <source>Interprets EXPR as an octal string and returns the corresponding value. (If EXPR happens to start off with &lt;code&gt;0x&lt;/code&gt; , interprets it as a hex string. If EXPR starts off with &lt;code&gt;0b&lt;/code&gt;, it is interpreted as a binary string. Leading whitespace is ignored in all three cases.) The following will handle decimal, binary, octal, and hex in standard Perl notation:</source>
          <target state="translated">Interpreta EXPR como una cadena octal y devuelve el valor correspondiente. (Si EXPR comienza con &lt;code&gt;0x&lt;/code&gt; , lo interpreta como una cadena hexadecimal. Si EXPR comienza con &lt;code&gt;0b&lt;/code&gt; , se interpreta como una cadena binaria. Los espacios en blanco iniciales se ignoran en los tres casos). Lo siguiente manejar&amp;aacute; decimal, binario, octal y hexadecimal en notaci&amp;oacute;n Perl est&amp;aacute;ndar:</target>
        </trans-unit>
        <trans-unit id="92d683f7db5d587ede8e14b4d88e6c417a5847d7" translate="yes" xml:space="preserve">
          <source>Interprocess Communication (IPC)</source>
          <target state="translated">Comunicación entre procesos (IPC)</target>
        </trans-unit>
        <trans-unit id="1e11457cea032ab0c21c71c69e4211f081e8849e" translate="yes" xml:space="preserve">
          <source>Interprocess Communication.</source>
          <target state="translated">Comunicación entre procesos.</target>
        </trans-unit>
        <trans-unit id="58447a233c711f903a2587b91bb291042f4b45da" translate="yes" xml:space="preserve">
          <source>Intersection is used generally for getting the common characters matched by two (or more) classes. It's important to remember not to use &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; for the first set; that would be intersecting with nothing, resulting in an empty set.</source>
          <target state="translated">La intersecci&amp;oacute;n se usa generalmente para obtener los caracteres comunes emparejados por dos (o m&amp;aacute;s) clases. Es importante recordar no usar &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; para el primer conjunto; eso se cruzar&amp;iacute;a con nada, resultando en un conjunto vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="c4724a76d8bc17dfefb1daee3b6d5be588f4c613" translate="yes" xml:space="preserve">
          <source>Introduce the</source>
          <target state="translated">Presentar el</target>
        </trans-unit>
        <trans-unit id="dde62d185b627cf5b7ce046a41566f84e22267ed" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.005</source>
          <target state="translated">Introducido en Perl 5.005</target>
        </trans-unit>
        <trans-unit id="25641bc26420a80c8ddbcf38615ca35ce5d7cb63" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.10.0</source>
          <target state="translated">Introducido en Perl 5.10.0</target>
        </trans-unit>
        <trans-unit id="b91aad730399f200ac6a5b6dba6fed9c61c025f5" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.12</source>
          <target state="translated">Introducido en Perl 5.12</target>
        </trans-unit>
        <trans-unit id="be57168adcd5cd07b75f1c9b6124df0daf76c3bd" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.14.0</source>
          <target state="translated">Introducido en Perl 5.14.0</target>
        </trans-unit>
        <trans-unit id="b294ac0a4f8c5992774c8112441dc302d5816a1f" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.20.0</source>
          <target state="translated">Introducido en Perl 5.20.0</target>
        </trans-unit>
        <trans-unit id="0c3a6017cbcf96eeafb4387eedc602152339297c" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.22.0</source>
          <target state="translated">Introducido en Perl 5.22.0</target>
        </trans-unit>
        <trans-unit id="7993785cfbc9e7981dcd229895be4a20fdb9620c" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.6.0</source>
          <target state="translated">Introducido en Perl 5.6.0</target>
        </trans-unit>
        <trans-unit id="31cd408fa26c1acb52eade6304b9c5ef7d3abe35" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.6.1</source>
          <target state="translated">Introducido en Perl 5.6.1</target>
        </trans-unit>
        <trans-unit id="51378bbd1f0bc4027eee05ffb1e7f6b0f83420b0" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.8.0</source>
          <target state="translated">Introducido en Perl 5.8.0</target>
        </trans-unit>
        <trans-unit id="79667c9718432940922f2e42f6facd3cdd4d3deb" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.9.0</source>
          <target state="translated">Introducido en Perl 5.9.0</target>
        </trans-unit>
        <trans-unit id="bb8c7b3973c6116a9525785ab93801f9d4d4fd02" translate="yes" xml:space="preserve">
          <source>Introduced in Perl 5.9.2</source>
          <target state="translated">Introducido en Perl 5.9.2</target>
        </trans-unit>
        <trans-unit id="7ef8951301d241cbc829612e64580020e610d91f" translate="yes" xml:space="preserve">
          <source>Introduced in: 5.11.2</source>
          <target state="translated">Introducido:5.11.2</target>
        </trans-unit>
        <trans-unit id="a01d17d00de94eaa77554eca767e361f42130168" translate="yes" xml:space="preserve">
          <source>Introduced in: Perl 5.10</source>
          <target state="translated">Introducido:Perl 5.10</target>
        </trans-unit>
        <trans-unit id="1e5c7e1205af583a405c6c00903c26fad40a5e6a" translate="yes" xml:space="preserve">
          <source>Introduced in: Perl 5.11.2</source>
          <target state="translated">Introducido:Perl 5.11.2</target>
        </trans-unit>
        <trans-unit id="d272e647109f1769e2b49a3e24be3094dd708435" translate="yes" xml:space="preserve">
          <source>Introduced in: Perl 5.18</source>
          <target state="translated">Introducido:Perl 5.18</target>
        </trans-unit>
        <trans-unit id="a5210098032cc4bc65f6c8263851cc2d7666b61d" translate="yes" xml:space="preserve">
          <source>Introduced in: Perl 5.22.0</source>
          <target state="translated">Introducido:Perl 5.22.0</target>
        </trans-unit>
        <trans-unit id="5a3a1683287083d64acee02ab986003bcf802274" translate="yes" xml:space="preserve">
          <source>Introduced just after perl5.7.0, this is a re-implementation of the above abstraction which allows perl more control over how IO is done as it decouples IO from the way the operating system and C library choose to do things. For USE_PERLIO PerlIO * has an extra layer of indirection - it is a pointer-to-a-pointer. This allows the PerlIO * to remain with a known value while swapping the implementation around underneath</source>
          <target state="translated">Introducido justo después del perl5.7.0,se trata de una reimplementación de la abstracción anterior que permite al perl un mayor control sobre cómo se hace IO,ya que desvincula IO de la forma en que el sistema operativo y la biblioteca C eligen hacer las cosas.Para USE_PERLIO PerlIO*tiene una capa extra de indirección-es un puntero a un puntero.Esto permite que el PerlIO*permanezca con un valor conocido mientras intercambia la implementación por debajo</target>
        </trans-unit>
        <trans-unit id="df90fec901ab6b3e3c92b7090f061ccf2d6c4aa2" translate="yes" xml:space="preserve">
          <source>Introduces a catch block. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">Introduce un bloque de captura. Consulte &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Manejo de excepciones en perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0c2f1d96cf5d9698341444cc5bc1eb344088014" translate="yes" xml:space="preserve">
          <source>Introducing (non-read-only) globals</source>
          <target state="translated">Presentación de los globos (no de lectura)</target>
        </trans-unit>
        <trans-unit id="154cc0bb0700575719a65b65f0bfb0fc9a438358" translate="yes" xml:space="preserve">
          <source>Introducing read-only (const) globals is okay, as long as you verify with e.g. &lt;code&gt;nm libperl.a|egrep -v ' [TURtr] '&lt;/code&gt; (if your &lt;code&gt;nm&lt;/code&gt; has BSD-style output) that the data you added really is read-only. (If it is, it shouldn't show up in the output of that command.)</source>
          <target state="translated">La introducci&amp;oacute;n de &lt;code&gt;nm libperl.a|egrep -v ' [TURtr] '&lt;/code&gt; globales de solo lectura (const) est&amp;aacute; bien, siempre que verifique con, por ejemplo, nm libperl.a | egrep -v '[TURtr]' (si su &lt;code&gt;nm&lt;/code&gt; tiene una salida de estilo BSD) que los datos que agreg&amp;oacute; realmente son de lectura. solamente. (Si es as&amp;iacute;, no deber&amp;iacute;a aparecer en la salida de ese comando).</target>
        </trans-unit>
        <trans-unit id="dcba11e20d56606a737ad2a86071e282fcf184cf" translate="yes" xml:space="preserve">
          <source>Introducing variables inside for()</source>
          <target state="translated">Introduciendo variables dentro de for()</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="cad0875833b290c88f0275f52c45f410d897ca9f" translate="yes" xml:space="preserve">
          <source>Introductory Texts</source>
          <target state="translated">Textos introductorios</target>
        </trans-unit>
        <trans-unit id="a7111e9430dac55fd4a6c0b16ea2e92ba2187d8a" translate="yes" xml:space="preserve">
          <source>Invalidates method caching on any child classes of the given stash, so that they might notice the changes in this one.</source>
          <target state="translated">Invalida el método de almacenamiento en caché de cualquier clase de niño del alijo dado,para que puedan notar los cambios en éste.</target>
        </trans-unit>
        <trans-unit id="6254374b19c61ff561460206a4f9194f4bcd1a52" translate="yes" xml:space="preserve">
          <source>Invalidates the method cache of any classes dependent on the given class. This is not normally necessary. The only known case where pure perl code can confuse the method cache is when you manually install a new constant subroutine by using a readonly scalar value, like the internals of &lt;a href=&quot;constant&quot;&gt;constant&lt;/a&gt; do. If you find another case, please report it so we can either fix it or document the exception here.</source>
          <target state="translated">Invalida la cach&amp;eacute; de m&amp;eacute;todos de cualquier clase que dependa de la clase dada. Normalmente, esto no es necesario. El &amp;uacute;nico caso conocido en el que el c&amp;oacute;digo perl puro puede confundir la memoria cach&amp;eacute; del m&amp;eacute;todo es cuando instala manualmente una nueva subrutina constante mediante el uso de un valor escalar de solo lectura, como hacen los componentes internos de la &lt;a href=&quot;constant&quot;&gt;constante&lt;/a&gt; . Si encuentra otro caso, inf&amp;oacute;rmelo para que podamos solucionarlo o documentar la excepci&amp;oacute;n aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="c0df4881ff3f493d5106f68dbab35c513534aed4" translate="yes" xml:space="preserve">
          <source>Inventory management of installed modules</source>
          <target state="translated">Gestión del inventario de los módulos instalados</target>
        </trans-unit>
        <trans-unit id="14c5c3735ce54ff56e113f2608fb558c2d638a18" translate="yes" xml:space="preserve">
          <source>Inversion lists are a compact way of specifying Unicode property-value definitions. The 0th item in the list is the lowest code point that has the property-value. The next item (item [1]) is the lowest code point beyond that one that does NOT have the property-value. And the next item beyond that ([2]) is the lowest code point beyond that one that does have the property-value, and so on. Put another way, each element in the list gives the beginning of a range that has the property-value (for even numbered elements), or doesn't have the property-value (for odd numbered elements). The name for this data structure stems from the fact that each element in the list toggles (or inverts) whether the corresponding range is or isn't on the list.</source>
          <target state="translated">Las listas de inversión son una forma compacta de especificar las definiciones de propiedad-valor de Unicode.El 0º elemento de la lista es el punto de código más bajo que tiene la propiedad-valor.El siguiente ítem (ítem [1])es el punto de código más bajo más allá del que NO tiene la propiedad-valor.Y el siguiente ítem más allá de ese ([2])es el punto de código más bajo más allá del que tiene el valor de la propiedad,y así sucesivamente.Dicho de otra manera,cada elemento de la lista da el comienzo de un rango que tiene la propiedad-valor (para elementos numerados pares),o no tiene la propiedad-valor (para elementos numerados impares).El nombre de esta estructura de datos se debe a que cada elemento de la lista conmuta (o invierte)si la gama correspondiente está o no en la lista.</target>
        </trans-unit>
        <trans-unit id="d8e6379916ac816d709ea169dcdb0ea2c85538b2" translate="yes" xml:space="preserve">
          <source>Invocation requires the command to be executed or a coderef and optionally a hashref of options:</source>
          <target state="translated">La invocación requiere que se ejecute el comando o un coderef y opcionalmente un hashref de opciones:</target>
        </trans-unit>
        <trans-unit id="9866e55ebd73eaa4dfd6d462e055f3a88a4fa2b2" translate="yes" xml:space="preserve">
          <source>Invoke a magic method (like FETCH).</source>
          <target state="translated">Invocar un método mágico (como FETCH).</target>
        </trans-unit>
        <trans-unit id="729e0ead914d111524b46b874fed43976337fb94" translate="yes" xml:space="preserve">
          <source>Invoked if &lt;code&gt;$result-&amp;gt;is_comment&lt;/code&gt; returns true.</source>
          <target state="translated">Se invoca si &lt;code&gt;$result-&amp;gt;is_comment&lt;/code&gt; devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="b6d3760550f46e7b28bbf7a09042b6769acf3c7e" translate="yes" xml:space="preserve">
          <source>Invoked if &lt;code&gt;$result-&amp;gt;is_plan&lt;/code&gt; returns true.</source>
          <target state="translated">Se invoca si &lt;code&gt;$result-&amp;gt;is_plan&lt;/code&gt; devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="4d5c6b94ee048c918e4535240e958632aecb1a6d" translate="yes" xml:space="preserve">
          <source>Invoked if &lt;code&gt;$result-&amp;gt;is_test&lt;/code&gt; returns true.</source>
          <target state="translated">Se invoca si &lt;code&gt;$result-&amp;gt;is_test&lt;/code&gt; devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="136fe5e37a3fd848b78d877c253e754a822cac52" translate="yes" xml:space="preserve">
          <source>Invoked if &lt;code&gt;$result-&amp;gt;is_unknown&lt;/code&gt; returns true.</source>
          <target state="translated">Se invoca si &lt;code&gt;$result-&amp;gt;is_unknown&lt;/code&gt; devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="632983081cf348fad68b5fcc938bef7d785aa8ce" translate="yes" xml:space="preserve">
          <source>Invoked if &lt;code&gt;$result-&amp;gt;is_version&lt;/code&gt; returns true.</source>
          <target state="translated">Se invoca si &lt;code&gt;$result-&amp;gt;is_version&lt;/code&gt; devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="dab118fbd97b5abfc5d3df38d7cc4bb27d7a5389" translate="yes" xml:space="preserve">
          <source>Invoked if &lt;code&gt;$result-&amp;gt;is_yaml&lt;/code&gt; returns true.</source>
          <target state="translated">Se invoca si &lt;code&gt;$result-&amp;gt;is_yaml&lt;/code&gt; devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="b4fc12fcbbbf739e9ecf3604f9dbc469d9a9587a" translate="yes" xml:space="preserve">
          <source>Invoked when there are no more lines to be parsed. Since there is no accompanying &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object the &lt;code&gt;TAP::Parser&lt;/code&gt; object is passed instead.</source>
          <target state="translated">Se invoca cuando no hay m&amp;aacute;s l&amp;iacute;neas para analizar. Como no hay un objeto &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result que lo&lt;/a&gt; acompa&amp;ntilde;e, en su lugar se pasa el objeto &lt;code&gt;TAP::Parser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="430786511bff9aaafff5936e905ad653f2aebe92" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;mg_get&lt;/code&gt; on an SV if it has 'get' magic. For example, this will call &lt;code&gt;FETCH&lt;/code&gt; on a tied variable. This macro evaluates its argument more than once.</source>
          <target state="translated">Invoca &lt;code&gt;mg_get&lt;/code&gt; en una SV si tiene 'get' magia. Por ejemplo, esto llamar&amp;aacute; a &lt;code&gt;FETCH&lt;/code&gt; en una variable vinculada. Esta macro eval&amp;uacute;a su argumento m&amp;aacute;s de una vez.</target>
        </trans-unit>
        <trans-unit id="63770cbaa11ab2ed8431af406f1283f32bff5b08" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;mg_set&lt;/code&gt; on an SV if it has 'set' magic. This is necessary after modifying a scalar, in case it is a magical variable like &lt;code&gt;$|&lt;/code&gt; or a tied variable (it calls &lt;code&gt;STORE&lt;/code&gt; ). This macro evaluates its argument more than once.</source>
          <target state="translated">Invoca &lt;code&gt;mg_set&lt;/code&gt; en una SV si tiene 'set' magia. Esto es necesario despu&amp;eacute;s de modificar un escalar, en caso de que sea una variable m&amp;aacute;gica como &lt;code&gt;$|&lt;/code&gt; o una variable ligada (llama &lt;code&gt;STORE&lt;/code&gt; ). Esta macro eval&amp;uacute;a su argumento m&amp;aacute;s de una vez.</target>
        </trans-unit>
        <trans-unit id="6065fa2fda8beaeb12ea495b85a947dc1c32d666" translate="yes" xml:space="preserve">
          <source>Invokes VMS debugger. (VMS)</source>
          <target state="translated">Invoca el depurador del VMS.(VMS)</target>
        </trans-unit>
        <trans-unit id="4a48ee301f0abac2cf4e91d0e45258fd858ca888" translate="yes" xml:space="preserve">
          <source>Invokes debugging mode. Primarily for Encode hackers.</source>
          <target state="translated">Invoca el modo de depuración.Principalmente para los hackers de Encode.</target>
        </trans-unit>
        <trans-unit id="24bad1e8c0ab13d7138af070e6f8fd5104a0af38" translate="yes" xml:space="preserve">
          <source>Invokes the linker to produce a library file from object files. In scalar context, the name of the library file is returned. In list context, the library file and any temporary files created are returned. A required &lt;code&gt;objects&lt;/code&gt; parameter contains the name of the object files to process, either in a string (for one object file) or list reference (for one or more files). The following parameters are optional:</source>
          <target state="translated">Invoca al vinculador para producir un archivo de biblioteca a partir de archivos objeto. En contexto escalar, se devuelve el nombre del archivo de biblioteca. En el contexto de la lista, se devuelve el archivo de biblioteca y los archivos temporales creados. Un par&amp;aacute;metro de &lt;code&gt;objects&lt;/code&gt; obligatorio contiene el nombre de los archivos de objeto a procesar, ya sea en una cadena (para un archivo de objeto) o en una lista de referencia (para uno o m&amp;aacute;s archivos). Los siguientes par&amp;aacute;metros son opcionales:</target>
        </trans-unit>
        <trans-unit id="d6dc74aaf36821077c0007a98c7212fc4b3fa1fa" translate="yes" xml:space="preserve">
          <source>Invokes the linker to produce an executable file from object files. In scalar context, the name of the executable file is returned. In list context, the executable file and any temporary files created are returned. A required &lt;code&gt;objects&lt;/code&gt; parameter contains the name of the object files to process, either in a string (for one object file) or list reference (for one or more files). The optional parameters are the same as &lt;code&gt;&lt;a href=&quot;../functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; with exception for</source>
          <target state="translated">Invoca al vinculador para producir un archivo ejecutable a partir de archivos objeto. En contexto escalar, se devuelve el nombre del archivo ejecutable. En el contexto de la lista, se devuelven el archivo ejecutable y los archivos temporales creados. Un par&amp;aacute;metro de &lt;code&gt;objects&lt;/code&gt; obligatorio contiene el nombre de los archivos de objeto a procesar, ya sea en una cadena (para un archivo de objeto) o en una lista de referencia (para uno o m&amp;aacute;s archivos). Los par&amp;aacute;metros opcionales son los mismos que el &lt;code&gt;&lt;a href=&quot;../functions/link&quot;&gt;link&lt;/a&gt;&lt;/code&gt; con la excepci&amp;oacute;n de</target>
        </trans-unit>
        <trans-unit id="b673c6a72896107ce4c1c1720830db2d7090b84b" translate="yes" xml:space="preserve">
          <source>Invoking</source>
          <target state="translated">Invoking</target>
        </trans-unit>
        <trans-unit id="ad7d6999362a94f744230122565df0fb30cec02f" translate="yes" xml:space="preserve">
          <source>Invoking Class Methods</source>
          <target state="translated">Invocando los métodos de la clase</target>
        </trans-unit>
        <trans-unit id="36b849bf1b11efdfda1ba9f83f6937c3f5f3d9b5" translate="yes" xml:space="preserve">
          <source>Invoking Perl</source>
          <target state="translated">Invocando a Perl</target>
        </trans-unit>
        <trans-unit id="d893e9caa1e5c938c432bca17fd828ff27fd449c" translate="yes" xml:space="preserve">
          <source>Invoking all versions of a method with a single call</source>
          <target state="translated">Invocando todas las versiones de un método con una sola llamada</target>
        </trans-unit>
        <trans-unit id="24170ec2bba17eb099637b415016216327bba9b2" translate="yes" xml:space="preserve">
          <source>Invoking the test script via &quot;&lt;code&gt;make test&lt;/code&gt; &quot; did something very important. It invoked perl with all those &lt;code&gt;-I&lt;/code&gt; arguments so that it could find the various files that are part of the extension. It is</source>
          <target state="translated">Invocar el script de prueba a trav&amp;eacute;s de &quot; &lt;code&gt;make test&lt;/code&gt; &quot; hizo algo muy importante. Invoc&amp;oacute; a perl con todos esos argumentos &lt;code&gt;-I&lt;/code&gt; para poder encontrar los distintos archivos que forman parte de la extensi&amp;oacute;n. Es</target>
        </trans-unit>
        <trans-unit id="5a017d9fae08fe8b742594c766cac2cd8dcf3595" translate="yes" xml:space="preserve">
          <source>Irish for the whole McGillicuddy. In Perl culture, a portmanteau of &amp;ldquo;sharp&amp;rdquo; and &amp;ldquo;bang&amp;rdquo;, meaning the &lt;code&gt;#!&lt;/code&gt; sequence that tells the system where to find the interpreter.</source>
          <target state="translated">Irland&amp;eacute;s para todo McGillicuddy. En la cultura Perl, un acr&amp;oacute;nimo de &quot;agudo&quot; y &quot;bang&quot;, que significa &lt;code&gt;#!&lt;/code&gt; secuencia que le dice al sistema d&amp;oacute;nde encontrar al int&amp;eacute;rprete.</target>
        </trans-unit>
        <trans-unit id="eb88b49be9395cb953eb1205ce4b4ea6acad6f1e" translate="yes" xml:space="preserve">
          <source>Irix 5.3</source>
          <target state="translated">Irix 5.3</target>
        </trans-unit>
        <trans-unit id="280a8973708779722e3c6e60a42a133ed8d4613c" translate="yes" xml:space="preserve">
          <source>Irrespective of its distribution, all code examples here are in the public domain. You are permitted and encouraged to use this code and any derivatives thereof in your own programs for fun or for profit as you see fit. A simple comment in the code giving credit to the FAQ would be courteous but is not required.</source>
          <target state="translated">Independientemente de su distribución,todos los ejemplos de código aquí son de dominio público.Se le permite y se le anima a usar este código y cualquier derivado del mismo en sus propios programas por diversión o con fines de lucro,según le parezca.Un simple comentario en el código que dé crédito a la FAQ sería cortés pero no es necesario.</target>
        </trans-unit>
        <trans-unit id="e6e987fe64dde20e286f30fd90c6b90ffeedb494" translate="yes" xml:space="preserve">
          <source>Irrespective of its distribution, all code examples in these files are hereby placed into the public domain. You are permitted and encouraged to use this code in your own programs for fun or for profit as you see fit. A simple comment in the code giving credit would be courteous but is not required.</source>
          <target state="translated">Independientemente de su distribución,todos los ejemplos de código en estos archivos se ponen por la presente en el dominio público.Se le permite y se le anima a usar este código en sus propios programas por diversión o con fines de lucro,según le parezca.Un simple comentario en el código dando crédito sería cortés pero no es necesario.</target>
        </trans-unit>
        <trans-unit id="16778fd5503d73f3e7cd989fda95007a4e44c18a" translate="yes" xml:space="preserve">
          <source>Irrespective of its distribution, all code examples in this file are hereby placed into the public domain. You are permitted and encouraged to use this code in your own programs for fun or for profit as you see fit. A simple comment in the code giving credit would be courteous but is not required.</source>
          <target state="translated">Independientemente de su distribución,todos los ejemplos de código de este archivo se ponen a disposición del público.Se le permite y se le anima a usar este código en sus propios programas por diversión o con fines de lucro,según le parezca.Un simple comentario en el código dando crédito sería cortés pero no es necesario.</target>
        </trans-unit>
        <trans-unit id="3b1335a849872557c30733349f1e4699d629a12c" translate="yes" xml:space="preserve">
          <source>Is Perl difficult to learn?</source>
          <target state="translated">¿Es difícil aprender Perl?</target>
        </trans-unit>
        <trans-unit id="ac0736b6a42e76cbb8b7ea3d82d9347dd47ba779" translate="yes" xml:space="preserve">
          <source>Is better written:</source>
          <target state="translated">Está mejor escrito:</target>
        </trans-unit>
        <trans-unit id="32906667b7957f587634c3ad2cf7b982992ddda0" translate="yes" xml:space="preserve">
          <source>Is it safe to return a reference to local or lexical data?</source>
          <target state="translated">¿Es seguro devolver una referencia a los datos locales o léxicos?</target>
        </trans-unit>
        <trans-unit id="a15088679e31d0c4822e89f1a281a86a46e94dee" translate="yes" xml:space="preserve">
          <source>Is it the same? Well, maybe so--and maybe not. The subtle difference is that when you assign something in square brackets, you know for sure it's always a brand new reference with a new</source>
          <target state="translated">¿Es lo mismo? Bueno,tal vez sí...y tal vez no.La sutil diferencia es que cuando asignas algo entre corchetes,sabes con seguridad que siempre es una nueva referencia con un nuevo</target>
        </trans-unit>
        <trans-unit id="c842dccd002c594c47398d7b81a3f350518d446b" translate="yes" xml:space="preserve">
          <source>Is not supported for process identification number of 0 or negative numbers. (VMS)</source>
          <target state="translated">No se admite el número de identificación del proceso de 0 o números negativos.(VMS)</target>
        </trans-unit>
        <trans-unit id="892d60f6405f23f25c6b3ae4379071e72ec47d11" translate="yes" xml:space="preserve">
          <source>Is the feature generic enough?</source>
          <target state="translated">¿Es la característica lo suficientemente genérica?</target>
        </trans-unit>
        <trans-unit id="21550a0f41b5f7c0792d01f174b9eb78bb2eb4ca" translate="yes" xml:space="preserve">
          <source>Is the implementation generic enough to be portable?</source>
          <target state="translated">¿Es la aplicación lo suficientemente genérica como para ser portátil?</target>
        </trans-unit>
        <trans-unit id="ef5914893715ffaab39210a601dc4f727d6ff4af" translate="yes" xml:space="preserve">
          <source>Is the implementation robust?</source>
          <target state="translated">¿Es robusta la aplicación?</target>
        </trans-unit>
        <trans-unit id="78090775b623989661f8da8dfe386a79dbfa661d" translate="yes" xml:space="preserve">
          <source>Is the implementation tested?</source>
          <target state="translated">¿Se ha probado la aplicación?</target>
        </trans-unit>
        <trans-unit id="a9f6ff8d209700b0f72a5230b6fb85c97fcff80b" translate="yes" xml:space="preserve">
          <source>Is there a pretty-printer (formatter) for Perl?</source>
          <target state="translated">¿Hay una bonita impresora (formateador)para Perl?</target>
        </trans-unit>
        <trans-unit id="4de697ef2e229f75e5104bfc892c512110a431a3" translate="yes" xml:space="preserve">
          <source>Is there a way to automatically decode or encode?</source>
          <target state="translated">¿Hay alguna forma de decodificar o codificar automáticamente?</target>
        </trans-unit>
        <trans-unit id="39ca1c79bbe21712b9201250f2255ac5dedb029e" translate="yes" xml:space="preserve">
          <source>Is there a way to hide perl's command line from programs such as &quot;ps&quot;?</source>
          <target state="translated">¿Hay alguna forma de ocultar la línea de mando de Perl de programas como &quot;ps&quot;?</target>
        </trans-unit>
        <trans-unit id="3501dfd2cd1d66a0e5956cd00d200fac2bcfba23" translate="yes" xml:space="preserve">
          <source>Is there an IDE or Windows Perl Editor?</source>
          <target state="translated">¿Existe un editor de Perl IDE o Windows?</target>
        </trans-unit>
        <trans-unit id="d38604e1470c164361620c8174e47b26e8405b57" translate="yes" xml:space="preserve">
          <source>Is there another way to do it?</source>
          <target state="translated">¿Hay otra forma de hacerlo?</target>
        </trans-unit>
        <trans-unit id="14fcbaecb1fe49a8bbbcabb376a8c49b63c6d0ee" translate="yes" xml:space="preserve">
          <source>Is there anything else I need to know?</source>
          <target state="translated">¿Hay algo más que necesite saber?</target>
        </trans-unit>
        <trans-unit id="3079a95c08daf3fbe9a6f4a2b3424c5019e5caa9" translate="yes" xml:space="preserve">
          <source>Is there enough documentation?</source>
          <target state="translated">¿Hay suficiente documentación?</target>
        </trans-unit>
        <trans-unit id="a850886339587a195217b1d8cceb0d4cff588e20" translate="yes" xml:space="preserve">
          <source>Is this something that only the submitter wants added to the language, or is it broadly useful? Sometimes, instead of adding a feature with a tight focus, the porters might decide to wait until someone implements the more generalized feature.</source>
          <target state="translated">¿Es algo que sólo el remitente quiere que se añada al idioma,o es ampliamente útil? A veces,en lugar de añadir una característica con un enfoque estricto,los remitentes pueden decidir esperar hasta que alguien implemente la característica más generalizada.</target>
        </trans-unit>
        <trans-unit id="c6c3f322bd4a89ec99cd36027dacc62c0c50b0bf" translate="yes" xml:space="preserve">
          <source>Is this the document you were after?</source>
          <target state="translated">¿Este es el documento que buscabas?</target>
        </trans-unit>
        <trans-unit id="71a13751965545486650d22819d11cd32442498c" translate="yes" xml:space="preserve">
          <source>Issue a command as follows;</source>
          <target state="translated">Emite una orden como la siguiente;</target>
        </trans-unit>
        <trans-unit id="e65cf3242e05b4d2c344ded5e0824a537ad64ec2" translate="yes" xml:space="preserve">
          <source>Issues a &lt;code&gt;ualarm&lt;/code&gt; call; the &lt;code&gt;$interval_useconds&lt;/code&gt; is optional and will be zero if unspecified, resulting in &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;-like behaviour.</source>
          <target state="translated">&lt;code&gt;ualarm&lt;/code&gt; una llamada de alarma ; los &lt;code&gt;$interval_useconds&lt;/code&gt; es opcional y ser&amp;aacute; cero si no se especifica, lo que resulta en &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a -como comportamiento.</target>
        </trans-unit>
        <trans-unit id="8f58a9877a43ede1a54c6d1cffca7950a04cb0e9" translate="yes" xml:space="preserve">
          <source>Issues the warning:</source>
          <target state="translated">Emite la advertencia:</target>
        </trans-unit>
        <trans-unit id="d7acc4a63bfa4b603392fb8adfd2d4ca89c11f46" translate="yes" xml:space="preserve">
          <source>It</source>
          <target state="translated">It</target>
        </trans-unit>
        <trans-unit id="38eb0bc8056860c92fb5c583bff73f1456dae838" translate="yes" xml:space="preserve">
          <source>It allows you to fetch any file pointed to by a &lt;code&gt;ftp&lt;/code&gt; , &lt;code&gt;http&lt;/code&gt; , &lt;code&gt;file&lt;/code&gt; , &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;rsync&lt;/code&gt; uri by a number of different means.</source>
          <target state="translated">Le permite buscar cualquier archivo apuntado por un &lt;code&gt;ftp&lt;/code&gt; , &lt;code&gt;http&lt;/code&gt; , &lt;code&gt;file&lt;/code&gt; , &lt;code&gt;git&lt;/code&gt; o &lt;code&gt;rsync&lt;/code&gt; uri por varios medios diferentes.</target>
        </trans-unit>
        <trans-unit id="0b28d021dc9b9966369f90f11dc74db9e607087c" translate="yes" xml:space="preserve">
          <source>It allows you to validate input via a template. The only requirement is that the arguments must be named.</source>
          <target state="translated">Le permite validar la entrada a través de una plantilla.El único requisito es que los argumentos deben ser nombrados.</target>
        </trans-unit>
        <trans-unit id="5e1f97bb7137990bbbfbdc73b45154ab6a87edc2" translate="yes" xml:space="preserve">
          <source>It also flags things that need to behave specially in an lvalue context, such as &lt;code&gt;$$x = 5&lt;/code&gt; which might have to vivify a reference in &lt;code&gt;$x&lt;/code&gt; .</source>
          <target state="translated">Tambi&amp;eacute;n marca las cosas que deben comportarse especialmente en un contexto lvalue, como &lt;code&gt;$$x = 5&lt;/code&gt; que podr&amp;iacute;a tener que vivificar una referencia en &lt;code&gt;$x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="908ce366021e2b55b694a1cc88f5df405de36e15" translate="yes" xml:space="preserve">
          <source>It also has embedded documentation, so you can use</source>
          <target state="translated">También tiene documentación incrustada,así que puedes usar</target>
        </trans-unit>
        <trans-unit id="2ac24af0ec1c7cfa5374898a3526976fbf4e475c" translate="yes" xml:space="preserve">
          <source>It also made it impossible to pass a perl filehandle that wasn't associated with a real filesystem file, like, say, an &lt;code&gt;IO::String&lt;/code&gt; .</source>
          <target state="translated">Tambi&amp;eacute;n hizo imposible pasar un identificador de archivo perl que no estuviera asociado con un archivo real del sistema de archivos, como, por ejemplo, un &lt;code&gt;IO::String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50072e7f3665a297dafc9a98026d2ece625b9337" translate="yes" xml:space="preserve">
          <source>It also provides a convenient alias via the MM class (I didn't want MakeMaker modules outside of ExtUtils/).</source>
          <target state="translated">También proporciona un conveniente alias a través de la clase MM (no quería módulos de MakeMaker fuera de ExtUtils/).</target>
        </trans-unit>
        <trans-unit id="915bbb1cff409394c98921945b825ccfd726cf97" translate="yes" xml:space="preserve">
          <source>It also provides a convenient alias via the MY class.</source>
          <target state="translated">También proporciona un conveniente alias a través de la clase MY.</target>
        </trans-unit>
        <trans-unit id="f7728ec4984f8aa9520af281a21430a4fa58511c" translate="yes" xml:space="preserve">
          <source>It also sets the effective names (&lt;code&gt;HvENAME&lt;/code&gt; ) on all the stashes as appropriate.</source>
          <target state="translated">Tambi&amp;eacute;n establece los nombres efectivos ( &lt;code&gt;HvENAME&lt;/code&gt; ) en todos los alijos seg&amp;uacute;n corresponda.</target>
        </trans-unit>
        <trans-unit id="0cefa68e3cb791475c8c4a04f377e9985e23ade2" translate="yes" xml:space="preserve">
          <source>It also turns out that EBCDIC has nearly precise equivalents for the ASCII/Latin1 C0 controls and the DELETE control. (The C0 controls are those whose ASCII code points are 0..0x1F; things like TAB, ACK, BEL, etc.) A mapping is set up between these ASCII/EBCDIC controls. There isn't such a precise mapping between the C1 controls on ASCII platforms and the remaining EBCDIC controls. What has been done is to map these controls, mostly arbitrarily, to some otherwise unmatched character in the other character set. Most of these are very very rarely used nowadays in EBCDIC anyway, and their names have been dropped, without much complaint. For example the EO (Eight Ones) EBCDIC control (consisting of eight one bits = 0xFF) is mapped to the C1 APC control (0x9F), and you can't use the name &quot;EO&quot;.</source>
          <target state="translated">También resulta que el EBCDIC tiene equivalentes casi precisos para los controles ASCII/Latin1 C0 y el control DELETE.(Los controles C0 son aquellos cuyos puntos de código ASCII son 0..0x1F;cosas como TAB,ACK,BEL,etc.)Se establece un mapeo entre estos controles ASCII/EBCDIC.No hay un mapeo tan preciso entre los controles C1 de las plataformas ASCII y el resto de los controles EBCDIC.Lo que se ha hecho es mapear estos controles,en su mayoría de manera arbitraria,a algún personaje que de otra manera no sería igualado en el otro conjunto de caracteres.La mayoría de ellos son muy poco utilizados hoy en día en el EBCDIC de todos modos,y sus nombres han sido eliminados,sin mucha queja.Por ejemplo,el control EBCDIC EO (Ocho Unos)(que consiste en ocho un bits=0xFF)está mapeado al control APC C1 (0x9F),y no se puede usar el nombre &quot;EO&quot;.</target>
        </trans-unit>
        <trans-unit id="3c6076aff0ee21a62fd6a390261efc5e5f0afb16" translate="yes" xml:space="preserve">
          <source>It calls &lt;code&gt;croak&lt;/code&gt; on failure.</source>
          <target state="translated">Llama &lt;code&gt;croak&lt;/code&gt; al fracaso.</target>
        </trans-unit>
        <trans-unit id="04dc7e22ec9e3426f178763cb4c63c8305c033ad" translate="yes" xml:space="preserve">
          <source>It calls several other routines, such as &lt;code&gt;fbm_instr()&lt;/code&gt; which does Fast Boyer Moore matching and &lt;code&gt;find_byclass()&lt;/code&gt; which is responsible for finding the start using the first mandatory regop in the program.</source>
          <target state="translated">Llama a varias otras rutinas, como &lt;code&gt;fbm_instr()&lt;/code&gt; que hace la coincidencia Fast Boyer Moore y &lt;code&gt;find_byclass()&lt;/code&gt; que es responsable de encontrar el inicio usando la primera repetici&amp;oacute;n obligatoria en el programa.</target>
        </trans-unit>
        <trans-unit id="497f49c37ce971a4a73fa1723da212a9045a166f" translate="yes" xml:space="preserve">
          <source>It can also be extended to be an application from &lt;b&gt;C&lt;/b&gt; to &lt;b&gt;C&lt;/b&gt;, whilst its restriction to &lt;b&gt;R&lt;/b&gt; behaves as defined above by using the following definition:</source>
          <target state="translated">Tambi&amp;eacute;n se puede extender para que sea una aplicaci&amp;oacute;n de &lt;b&gt;C&lt;/b&gt; a &lt;b&gt;C&lt;/b&gt; , mientras que su restricci&amp;oacute;n a &lt;b&gt;R se&lt;/b&gt; comporta como se defini&amp;oacute; anteriormente usando la siguiente definici&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="037c189042a08e857fa9c25c861179516385e907" translate="yes" xml:space="preserve">
          <source>It can also be that long doubles and doubles are the same thing:</source>
          <target state="translated">También puede ser que los dobles largos y los dobles son la misma cosa:</target>
        </trans-unit>
        <trans-unit id="5a15f67a53851e31c8be84ee1922d871c9c74ea2" translate="yes" xml:space="preserve">
          <source>It can also store the resource directly in a file:</source>
          <target state="translated">También puede almacenar el recurso directamente en un archivo:</target>
        </trans-unit>
        <trans-unit id="2eb713583608cebc3ea2998759255bff9599a6ef" translate="yes" xml:space="preserve">
          <source>It can be called on an object or a class, of course.</source>
          <target state="translated">Se puede llamar a un objeto o a una clase,por supuesto.</target>
        </trans-unit>
        <trans-unit id="e5c905f1665a696bdc789794d07c2a84423a378d" translate="yes" xml:space="preserve">
          <source>It can be used in the regular procedural way by calling &lt;code&gt;store&lt;/code&gt; with a reference to the object to be stored, along with the file name where the image should be written.</source>
          <target state="translated">Se puede utilizar de la forma habitual de procedimiento llamando a &lt;code&gt;store&lt;/code&gt; con una referencia al objeto que se va a almacenar, junto con el nombre del archivo donde se debe escribir la imagen.</target>
        </trans-unit>
        <trans-unit id="1b6d3eb9169140a9a6274f80ff5e86670958b748" translate="yes" xml:space="preserve">
          <source>It can easily be defined like this:</source>
          <target state="translated">Se puede definir fácilmente así:</target>
        </trans-unit>
        <trans-unit id="86ba6d37f32935701376ea8939425dea235ee2d1" translate="yes" xml:space="preserve">
          <source>It can load perl dynamic extensions, and it can fork().</source>
          <target state="translated">Puede cargar extensiones dinámicas de perl,y puede bifurcarse.</target>
        </trans-unit>
        <trans-unit id="64f9135ce7da4c20ac152391823b647cbbeb33a6" translate="yes" xml:space="preserve">
          <source>It can take one of the following forms:</source>
          <target state="translated">Puede tomar una de las siguientes formas:</target>
        </trans-unit>
        <trans-unit id="2f904ea9d1b7cc3495a54fb96cf0850f9e5fd878" translate="yes" xml:space="preserve">
          <source>It can, however, be used as a superclass for other classes. To facilitate this, the generated constructor method uses a two-argument blessing. Furthermore, if the class is hash-based, the key of each element is prefixed with the class name (see</source>
          <target state="translated">Sin embargo,puede ser usado como una superclase para otras clases.Para facilitar esto,el método de construcción generado utiliza una bendición de dos argumentos.Además,si la clase se basa en el hash,la clave de cada elemento se prefija con el nombre de la clase (véase</target>
        </trans-unit>
        <trans-unit id="09d8ef54917c31dc7c7e7dced0a11cfba194a124" translate="yes" xml:space="preserve">
          <source>It combines the features of the</source>
          <target state="translated">Combina las características de la</target>
        </trans-unit>
        <trans-unit id="6de2e6681db9e2aba6bd7eace100b8a569aebcfe" translate="yes" xml:space="preserve">
          <source>It constructs and returns a $treewalker coderef, which when invoked, traverses, or walks, and renders the optrees of the given arguments to STDOUT. You can reuse this, and can change the rendering style used each time; thereafter the coderef renders in the new style.</source>
          <target state="translated">Construye y devuelve un coderef de $treewalker,que cuando es invocado,atraviesa o camina,y devuelve los optrees de los argumentos dados a STDOUT.Puedes reutilizar esto,y puedes cambiar el estilo de renderizado usado cada vez;a partir de entonces el coderef se renderiza en el nuevo estilo.</target>
        </trans-unit>
        <trans-unit id="4b00062db32c6f6da9356b09e0e38ccf6b4650d6" translate="yes" xml:space="preserve">
          <source>It creates a database of the profile information that you can turn into reports. The &lt;code&gt;nytprofhtml&lt;/code&gt; command turns the data into an HTML report similar to the &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::Cover&quot;&gt;Devel::Cover&lt;/a&gt; report:</source>
          <target state="translated">Crea una base de datos de la informaci&amp;oacute;n del perfil que puede convertir en informes. El comando &lt;code&gt;nytprofhtml&lt;/code&gt; convierte los datos en un informe HTML similar al informe &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::Cover&quot;&gt;Devel :: Cover&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ea6e392f63285a19a0d452d50c54df585744488e" translate="yes" xml:space="preserve">
          <source>It currently does</source>
          <target state="translated">Actualmente lo hace</target>
        </trans-unit>
        <trans-unit id="7dad9241afc4fe54f1d9bdea5f00177fb19d962a" translate="yes" xml:space="preserve">
          <source>It depends just what you mean by &quot;escape&quot;. URL escapes are dealt with in &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt;. Shell escapes with the backslash (&lt;code&gt;\&lt;/code&gt; ) character are removed with</source>
          <target state="translated">Depende de lo que quieras decir con &quot;escapar&quot;. Los escapes de URL se tratan en &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt; . Los escapes de shell con el car&amp;aacute;cter de barra invertida ( &lt;code&gt;\&lt;/code&gt; ) se eliminan con</target>
        </trans-unit>
        <trans-unit id="c581007e3ef08adcb3306414f7f2463e871ac22e" translate="yes" xml:space="preserve">
          <source>It does have the drawback of putting the wrong thing in $-[0] and $+[0], but this usually can be worked around.</source>
          <target state="translated">Tiene el inconveniente de poner la cosa equivocada en $-[0]y $+[0],pero esto normalmente se puede trabajar.</target>
        </trans-unit>
        <trans-unit id="79d1a39f53aab3a73596d5fd9d9372e7a56d671b" translate="yes" xml:space="preserve">
          <source>It does implement the full UTS#18 grouping, intersection, union, and removal (subtraction) syntax.</source>
          <target state="translated">Implementa la sintaxis completa de agrupación,intersección,unión y eliminación (sustracción)de la UTS#18.</target>
        </trans-unit>
        <trans-unit id="3283ccec35b62f9d69fc01d0b0127572cdbbfb86" translate="yes" xml:space="preserve">
          <source>It does like &lt;code&gt;normalize_partial('NFC', $unprocessed)&lt;/code&gt; . Note that &lt;code&gt;$unprocessed&lt;/code&gt; will be modified as a side-effect.</source>
          <target state="translated">Hace como &lt;code&gt;normalize_partial('NFC', $unprocessed)&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;$unprocessed&lt;/code&gt; se modificar&amp;aacute; como efecto secundario.</target>
        </trans-unit>
        <trans-unit id="781b506fec7893fd5e327ee69d14b0d379ec072d" translate="yes" xml:space="preserve">
          <source>It does like &lt;code&gt;normalize_partial('NFD', $unprocessed)&lt;/code&gt; . Note that &lt;code&gt;$unprocessed&lt;/code&gt; will be modified as a side-effect.</source>
          <target state="translated">Hace como &lt;code&gt;normalize_partial('NFD', $unprocessed)&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;$unprocessed&lt;/code&gt; se modificar&amp;aacute; como efecto secundario.</target>
        </trans-unit>
        <trans-unit id="98073979e598afdba9b1edfe5653068ff476e437" translate="yes" xml:space="preserve">
          <source>It does like &lt;code&gt;normalize_partial('NFKC', $unprocessed)&lt;/code&gt; . Note that &lt;code&gt;$unprocessed&lt;/code&gt; will be modified as a side-effect.</source>
          <target state="translated">Hace como &lt;code&gt;normalize_partial('NFKC', $unprocessed)&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;$unprocessed&lt;/code&gt; se modificar&amp;aacute; como efecto secundario.</target>
        </trans-unit>
        <trans-unit id="47a16bde88f189f6ad288e03cf560598f2698ec6" translate="yes" xml:space="preserve">
          <source>It does like &lt;code&gt;normalize_partial('NFKD', $unprocessed)&lt;/code&gt; . Note that &lt;code&gt;$unprocessed&lt;/code&gt; will be modified as a side-effect.</source>
          <target state="translated">Hace como &lt;code&gt;normalize_partial('NFKD', $unprocessed)&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;$unprocessed&lt;/code&gt; se modificar&amp;aacute; como efecto secundario.</target>
        </trans-unit>
        <trans-unit id="23674d2d232acdb766b500c08327a83816f04c97" translate="yes" xml:space="preserve">
          <source>It does not protect &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;@&lt;/code&gt; , so that variables can still be substituted.</source>
          <target state="translated">No protege &lt;code&gt;$&lt;/code&gt; ni &lt;code&gt;@&lt;/code&gt; , por lo que las variables a&amp;uacute;n se pueden sustituir.</target>
        </trans-unit>
        <trans-unit id="b4b096762458cc1c67705fc722b1b5c19a799e9a" translate="yes" xml:space="preserve">
          <source>It doesn't handle all C constructs, but it does attempt to isolate definitions inside evals so that you can get at the definitions that it can translate.</source>
          <target state="translated">No maneja todas las construcciones C,pero intenta aislar las definiciones dentro de las evals para que puedas llegar a las definiciones que puede traducir.</target>
        </trans-unit>
        <trans-unit id="661f04839377963b6531cde75241eb25f024872a" translate="yes" xml:space="preserve">
          <source>It doesn't matter whether those elements are already there or not: it'll gladly create them for you, setting intervening elements to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; as need be.</source>
          <target state="translated">No importa si esos elementos ya est&amp;aacute;n all&amp;iacute; o no: con gusto los crear&amp;aacute; para usted, configurando los elementos &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; como indefinidos seg&amp;uacute;n sea necesario.</target>
        </trans-unit>
        <trans-unit id="e3d56e0602580738fb050f4b637c11809b2b2552" translate="yes" xml:space="preserve">
          <source>It ensures that all items returned from the subroutine will be accessible when control returns from the</source>
          <target state="translated">Asegura que todos los artículos devueltos de la subrutina serán accesibles cuando el control regrese del</target>
        </trans-unit>
        <trans-unit id="257a0d1f1aa9bffe5b6fec0d0193d78bda64cf97" translate="yes" xml:space="preserve">
          <source>It ensures that nothing is actually returned from the subroutine.</source>
          <target state="translated">Asegura que no se devuelva nada de la subrutina.</target>
        </trans-unit>
        <trans-unit id="9073e4e615d570b658e9c1dc5b31fb9fbc2e51c4" translate="yes" xml:space="preserve">
          <source>It ensures that only a scalar is actually returned from the subroutine. The subroutine can, of course, ignore the</source>
          <target state="translated">Asegura que sólo se devuelva un escalar de la subrutina.La subrutina puede,por supuesto,ignorar la</target>
        </trans-unit>
        <trans-unit id="6ce1e8c1dec22e7fcef7a08df4a73a6d708c188c" translate="yes" xml:space="preserve">
          <source>It exports the following variables:</source>
          <target state="translated">Exporta las siguientes variables:</target>
        </trans-unit>
        <trans-unit id="c5eede2c3ff2d6a126d9a37fe7b6a2f7c7fef7c9" translate="yes" xml:space="preserve">
          <source>It goes without saying that bundling can be quite confusing.</source>
          <target state="translated">No hace falta decir que el empaquetamiento puede ser bastante confuso.</target>
        </trans-unit>
        <trans-unit id="15f1fa29899dc9be4d2a29da0c1ebb962d996294" translate="yes" xml:space="preserve">
          <source>It implements just a very simple class to manage an array. Apart from the constructor, &lt;code&gt;new&lt;/code&gt; , it declares methods, one static and one virtual. The static method, &lt;code&gt;PrintID&lt;/code&gt; , prints out simply the class name and a version number. The virtual method, &lt;code&gt;Display&lt;/code&gt; , prints out a single element of the array. Here is an all-Perl example of using it.</source>
          <target state="translated">Implementa solo una clase muy simple para administrar una matriz. Aparte del constructor, &lt;code&gt;new&lt;/code&gt; , declara m&amp;eacute;todos, uno est&amp;aacute;tico y otro virtual. El m&amp;eacute;todo est&amp;aacute;tico, &lt;code&gt;PrintID&lt;/code&gt; , imprime simplemente el nombre de la clase y un n&amp;uacute;mero de versi&amp;oacute;n. El m&amp;eacute;todo virtual, &lt;code&gt;Display&lt;/code&gt; , imprime un solo elemento de la matriz. Aqu&amp;iacute; hay un ejemplo de uso de Perl.</target>
        </trans-unit>
        <trans-unit id="4643eacc5a23fd6cfe7dbaa4ae9405cefd594ff8" translate="yes" xml:space="preserve">
          <source>It includes the TAP::Parser Cookbook:</source>
          <target state="translated">Incluye el TAP::Libro de cocina de Parser:</target>
        </trans-unit>
        <trans-unit id="0b24215ad07cf4400cc22f004d70379859a91675" translate="yes" xml:space="preserve">
          <source>It indicates to the subroutine being called that it is executing in a list context (if it executes</source>
          <target state="translated">Indica a la subrutina que se llama que se está ejecutando en un contexto de lista (si ejecuta</target>
        </trans-unit>
        <trans-unit id="fd952552f08ee5c64a4b5cd1472fcbc55f52ff32" translate="yes" xml:space="preserve">
          <source>It indicates to the subroutine being called that it is executing in a scalar context (if it executes</source>
          <target state="translated">Indica a la subrutina que se llama que se está ejecutando en un contexto escalar (si ejecuta</target>
        </trans-unit>
        <trans-unit id="d334572d38ec1bf7625437e6802d9ceede41a62a" translate="yes" xml:space="preserve">
          <source>It indicates to the subroutine being called that it is executing in a void context (if it executes</source>
          <target state="translated">Indica a la subrutina que se llama que se está ejecutando en un contexto de vacío (si ejecuta</target>
        </trans-unit>
        <trans-unit id="3dd5d5b49f19e1af8608ede7c4aa585a51f279cb" translate="yes" xml:space="preserve">
          <source>It is</source>
          <target state="translated">Es...</target>
        </trans-unit>
        <trans-unit id="4593c265ea2a96fff8349127e24d6f8f64bc8930" translate="yes" xml:space="preserve">
          <source>It is a VIO application.</source>
          <target state="translated">Es una aplicación VIO.</target>
        </trans-unit>
        <trans-unit id="15edb9eea808da9feee1a21d84ef34931e249422" translate="yes" xml:space="preserve">
          <source>It is a common feature of applications (whether run directly, or via the Web) for them to be &quot;localized&quot; -- i.e., for them to a present an English interface to an English-speaker, a German interface to a German-speaker, and so on for all languages it's programmed with. Locale::Maketext is a framework for software localization; it provides you with the tools for organizing and accessing the bits of text and text-processing code that you need for producing localized applications.</source>
          <target state="translated">Es una característica común de las aplicaciones (ya sea que se ejecuten directamente o a través de la Web)que sean &quot;localizadas&quot;,es decir,que presenten una interfaz en inglés a un angloparlante,una interfaz en alemán a un germanoparlante,y así sucesivamente para todos los idiomas con los que se programe.Locale::Maketext es un marco para la localización de software;le proporciona las herramientas para organizar y acceder a los bits de texto y al código de procesamiento de texto que necesita para producir aplicaciones localizadas.</target>
        </trans-unit>
        <trans-unit id="dd0c9650fee6ca5253a38ac00e6dc732d4f0e459" translate="yes" xml:space="preserve">
          <source>It is a common problem to want to detect what language(s) the user would prefer output in.</source>
          <target state="translated">Es un problema común querer detectar en qué idioma(s)el usuario preferiría la salida.</target>
        </trans-unit>
        <trans-unit id="0c07216f6ed146b3d5f5f41f5151571003ed974c" translate="yes" xml:space="preserve">
          <source>It is a fatal error to attempt to use this option when &lt;code&gt;$output&lt;/code&gt; is not an RFC 1950 data stream.</source>
          <target state="translated">Es un error fatal intentar usar esta opci&amp;oacute;n cuando &lt;code&gt;$output&lt;/code&gt; no es un flujo de datos RFC 1950.</target>
        </trans-unit>
        <trans-unit id="f26fad9b2ea8dad78ce0ae0159c499c446261e46" translate="yes" xml:space="preserve">
          <source>It is a fatal error to attempt to use this option when &lt;code&gt;$output&lt;/code&gt; is not an RFC 1951 data stream.</source>
          <target state="translated">Es un error fatal intentar usar esta opci&amp;oacute;n cuando &lt;code&gt;$output&lt;/code&gt; no es un flujo de datos RFC 1951.</target>
        </trans-unit>
        <trans-unit id="f52e23ce1b9c7d458b13fea7c76a357d80aa0ef3" translate="yes" xml:space="preserve">
          <source>It is a fatal error to attempt to use this option when &lt;code&gt;$output&lt;/code&gt; is not an RFC 1952 data stream.</source>
          <target state="translated">Es un error fatal intentar usar esta opci&amp;oacute;n cuando &lt;code&gt;$output&lt;/code&gt; no es un flujo de datos RFC 1952.</target>
        </trans-unit>
        <trans-unit id="951fc5c4a5b5cf258c0f54c435f4794f721e0f6c" translate="yes" xml:space="preserve">
          <source>It is a fatal error to call this function except in list context.</source>
          <target state="translated">Es un error fatal llamar a esta función excepto en el contexto de la lista.</target>
        </trans-unit>
        <trans-unit id="84e04c4e01865ff456f52f410d5f957caeadfc3c" translate="yes" xml:space="preserve">
          <source>It is a fatal error to register a non-reference $obj. Any non-hashrefs among the following arguments are silently ignored.</source>
          <target state="translated">Es un error fatal registrar un trabajo que no es de referencia.Cualquier no-referencia entre los siguientes argumentos es silenciosamente ignorada.</target>
        </trans-unit>
        <trans-unit id="62c55db6ed1bb1f62b509a530f9b2d3c904a4f20" translate="yes" xml:space="preserve">
          <source>It is a hash of hashes that is keyed on perl version. Each keyed hash will have the following keys:</source>
          <target state="translated">Es un hachís que se basa en la versión de perl.Cada hash clave tendrá las siguientes claves:</target>
        </trans-unit>
        <trans-unit id="25ddadae24c0653c00410eac3e43d9a6483af1b0" translate="yes" xml:space="preserve">
          <source>It is a little bit easier to do so while</source>
          <target state="translated">Es un poco más fácil hacerlo mientras</target>
        </trans-unit>
        <trans-unit id="41ddae9f4920a415092a3be5fefb0262a7109fa2" translate="yes" xml:space="preserve">
          <source>It is a simple matter to expand out an inversion list to a full list of all code points that have the property-value:</source>
          <target state="translated">Es sencillo ampliar una lista de inversión a una lista completa de todos los puntos de código que tienen el valor de propiedad:</target>
        </trans-unit>
        <trans-unit id="fa408a04e809363f2b269a35a2338df430b18e1f" translate="yes" xml:space="preserve">
          <source>It is a syntax error to use &lt;code&gt;\N{NAME}&lt;/code&gt; where &lt;code&gt;NAME&lt;/code&gt; is unknown.</source>
          <target state="translated">Es un error de sintaxis usar &lt;code&gt;\N{NAME}&lt;/code&gt; donde &lt;code&gt;NAME&lt;/code&gt; es desconocido.</target>
        </trans-unit>
        <trans-unit id="3189cdee5a11207a5d4b78afa8dc9c2b8ecc076f" translate="yes" xml:space="preserve">
          <source>It is able to load multiple modules at once or none at all if one of them was not able to load. It also takes care of any error checking and so forth.</source>
          <target state="translated">Es capaz de cargar varios módulos a la vez o ninguno en absoluto si uno de ellos no fue capaz de cargar.También se ocupa de la comprobación de errores y demás.</target>
        </trans-unit>
        <trans-unit id="5224d6c644e7d334b02295922c6a21bf88351e6e" translate="yes" xml:space="preserve">
          <source>It is advised that formatnames match the regexp &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A:?[-a-zA-Z0-9_]+\z/&lt;/a&gt;&lt;/code&gt;. Everything following whitespace after the formatname is a parameter that may be used by the formatter when dealing with this region. This parameter must not be repeated in the &quot;=end&quot; paragraph. Implementors should anticipate future expansion in the semantics and syntax of the first parameter to &quot;=begin&quot;/&quot;=end&quot;/&quot;=for&quot;.</source>
          <target state="translated">Se recomienda que los nombres de formato coincidan con la expresi&amp;oacute;n regular &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A:?[-a-zA-Z0-9_]+\z/&lt;/a&gt;&lt;/code&gt; . Todo lo que sigue a un espacio en blanco despu&amp;eacute;s del nombre del formato es un par&amp;aacute;metro que puede utilizar el formateador cuando se trata de esta regi&amp;oacute;n. Este par&amp;aacute;metro no debe repetirse en el p&amp;aacute;rrafo &quot;= fin&quot;. Los implementadores deben anticipar la expansi&amp;oacute;n futura en la sem&amp;aacute;ntica y la sintaxis del primer par&amp;aacute;metro a &quot;= comenzar&quot; / &quot;= final&quot; / &quot;= para&quot;.</target>
        </trans-unit>
        <trans-unit id="5bdc4a6dded231914c04e13e61b945f48f5268b4" translate="yes" xml:space="preserve">
          <source>It is also highly desirable that encoding classes inherit from &lt;code&gt;Encode::Encoding&lt;/code&gt; as a base class. This allows that class to define additional behaviour for all encoding objects.</source>
          <target state="translated">Tambi&amp;eacute;n es muy deseable que las clases de codificaci&amp;oacute;n hereden de &lt;code&gt;Encode::Encoding&lt;/code&gt; como clase base. Esto permite que esa clase defina un comportamiento adicional para todos los objetos de codificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="04e94392102301dd0cfd3e0e0b7cc900aa1df8a8" translate="yes" xml:space="preserve">
          <source>It is also hoped that the interface will cover the needs of OS/2, NT etc and also allow pseudo-dynamic linking (using &lt;code&gt;ld -A&lt;/code&gt; at runtime).</source>
          <target state="translated">Tambi&amp;eacute;n se espera que la interfaz cubra las necesidades de OS / 2, NT, etc. y que tambi&amp;eacute;n permita la vinculaci&amp;oacute;n pseudodin&amp;aacute;mica (utilizando &lt;code&gt;ld -A&lt;/code&gt; en tiempo de ejecuci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="c5a799ae9f844383ae213d6362def23a82f89603" translate="yes" xml:space="preserve">
          <source>It is also important to realize that these are default boundary definitions, and that implementations may wish to tailor the results for particular purposes and locales.</source>
          <target state="translated">También es importante tener en cuenta que se trata de definiciones de límites predeterminados,y que las implementaciones tal vez deseen adaptar los resultados a fines y lugares particulares.</target>
        </trans-unit>
        <trans-unit id="f04f0bafdb5580f449ee2f59e8c42ace66bb7312" translate="yes" xml:space="preserve">
          <source>It is also possible for the reverse to happen: &lt;code&gt;prop_aliases('isc')&lt;/code&gt; returns the list &lt;code&gt;(isc, ISO_Comment)&lt;/code&gt; ; whereas &lt;code&gt;prop_aliases('c')&lt;/code&gt; returns &lt;code&gt;(C, Other)&lt;/code&gt; (the latter being a Perl extension meaning &lt;code&gt;General_Category=Other&lt;/code&gt; . &lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;Properties accessible through Unicode::UCD in perluniprops&lt;/a&gt; lists the available forms, including which ones are discouraged from use.</source>
          <target state="translated">Tambi&amp;eacute;n es posible que suceda lo &lt;code&gt;prop_aliases('isc')&lt;/code&gt; : prop_aliases ('isc') devuelve la lista &lt;code&gt;(isc, ISO_Comment)&lt;/code&gt; ; mientras que &lt;code&gt;prop_aliases('c')&lt;/code&gt; devuelve &lt;code&gt;(C, Other)&lt;/code&gt; (el &amp;uacute;ltimo es una extensi&amp;oacute;n de Perl que significa &lt;code&gt;General_Category=Other&lt;/code&gt; . Las &lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;propiedades accesibles a trav&amp;eacute;s de Unicode :: UCD en perluniprops&lt;/a&gt; enumeran los formularios disponibles, incluidos los que no se recomiendan para su uso.</target>
        </trans-unit>
        <trans-unit id="da8c00abb531749489f64809eab7af330894c553" translate="yes" xml:space="preserve">
          <source>It is also possible to generate Symbian executables for &quot;miniperl&quot; and &quot;perl&quot;, but since there is no standard command line interface for Symbian (nor full keyboards in the devices), these are useful mainly as demonstrations.</source>
          <target state="translated">También es posible generar ejecutables Symbian para &quot;miniperl&quot; y &quot;perl&quot;,pero como no existe una interfaz de línea de comandos estándar para Symbian (ni teclados completos en los dispositivos),éstos son útiles principalmente como demostraciones.</target>
        </trans-unit>
        <trans-unit id="fba88eaeb368c964f0dd8f74cbc321efcbbc3751" translate="yes" xml:space="preserve">
          <source>It is also possible to have a complex number as either argument of the &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;emake&lt;/code&gt; , &lt;code&gt;cplx&lt;/code&gt; , and &lt;code&gt;cplxe&lt;/code&gt; : the appropriate component of the argument will be used.</source>
          <target state="translated">Tambi&amp;eacute;n es posible tener un n&amp;uacute;mero complejo como argumento de &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;emake&lt;/code&gt; , &lt;code&gt;cplx&lt;/code&gt; y &lt;code&gt;cplxe&lt;/code&gt; : se usar&amp;aacute; el componente apropiado del argumento.</target>
        </trans-unit>
        <trans-unit id="b1daabab3a866899ef9c74e4b9b632751383e7e2" translate="yes" xml:space="preserve">
          <source>It is also possible to instead list the characters you do not want to match. You can do so by using a caret (&lt;code&gt;^&lt;/code&gt;) as the first character in the character class. For instance, &lt;code&gt;[^a-z]&lt;/code&gt; matches any character that is not a lowercase ASCII letter, which therefore includes more than a million Unicode code points. The class is said to be &quot;negated&quot; or &quot;inverted&quot;.</source>
          <target state="translated">En su lugar, tambi&amp;eacute;n es posible enumerar los caracteres que no desea hacer coincidir. Puede hacerlo utilizando un signo de intercalaci&amp;oacute;n ( &lt;code&gt;^&lt;/code&gt; ) como primer car&amp;aacute;cter de la clase de caracteres. Por ejemplo, &lt;code&gt;[^a-z]&lt;/code&gt; coincide con cualquier car&amp;aacute;cter que no sea una letra ASCII en min&amp;uacute;scula, que por lo tanto incluye m&amp;aacute;s de un mill&amp;oacute;n de puntos de c&amp;oacute;digo Unicode. Se dice que la clase est&amp;aacute; &quot;negada&quot; o &quot;invertida&quot;.</target>
        </trans-unit>
        <trans-unit id="d1b81a5a48e226bc85d367f9c052e3692ba4d679" translate="yes" xml:space="preserve">
          <source>It is also possible to just require Math::BigFloat:</source>
          <target state="translated">También es posible requerir sólo Matemáticas::BigFloat:</target>
        </trans-unit>
        <trans-unit id="b0f73d924849030d9c9bafff98a0dd19b4f629df" translate="yes" xml:space="preserve">
          <source>It is also possible to omit the filename parameter as well, so the call:</source>
          <target state="translated">También es posible omitir el parámetro del nombre de archivo,así que la llamada:</target>
        </trans-unit>
        <trans-unit id="c92bd63c5290ef43a80924b5bd4775d90c01eb70" translate="yes" xml:space="preserve">
          <source>It is also possible to return values directly via the parameter list--whether it is actually desirable to do it is another matter entirely.</source>
          <target state="translated">También es posible devolver los valores directamente a través de la lista de parámetros...si es realmente deseable hacerlo es otra cuestión totalmente distinta.</target>
        </trans-unit>
        <trans-unit id="50a5455e17306f508cbf1a77905bc1e3511b26df" translate="yes" xml:space="preserve">
          <source>It is also possible to specify the minimal and maximal number of arguments an option takes. &lt;code&gt;foo=s{2,4}&lt;/code&gt; indicates an option that takes at least two and at most 4 arguments. &lt;code&gt;foo=s{1,}&lt;/code&gt; indicates one or more values; &lt;code&gt;foo:s{,}&lt;/code&gt; indicates zero or more option values.</source>
          <target state="translated">Tambi&amp;eacute;n es posible especificar el n&amp;uacute;mero m&amp;iacute;nimo y m&amp;aacute;ximo de argumentos que toma una opci&amp;oacute;n. &lt;code&gt;foo=s{2,4}&lt;/code&gt; indica una opci&amp;oacute;n que toma al menos dos y como m&amp;aacute;ximo 4 argumentos. &lt;code&gt;foo=s{1,}&lt;/code&gt; indica uno o m&amp;aacute;s valores; &lt;code&gt;foo:s{,}&lt;/code&gt; indica cero o m&amp;aacute;s valores de opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b77bfd84df66369a6b31eeda1a74a3114d66c160" translate="yes" xml:space="preserve">
          <source>It is also possible to test whether the pre-defined warnings categories are set in the calling module with the &lt;code&gt;warnings::enabled&lt;/code&gt; function. Consider this snippet of code:</source>
          <target state="translated">Tambi&amp;eacute;n es posible probar si las categor&amp;iacute;as de advertencias predefinidas est&amp;aacute;n configuradas en el m&amp;oacute;dulo de llamada con la funci&amp;oacute;n &lt;code&gt;warnings::enabled&lt;/code&gt; . Considere este fragmento de c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="3db1f66552fc819722dedb12482e309bce26efa4" translate="yes" xml:space="preserve">
          <source>It is also unique in that all other Perl operators impose a context (usually string or numeric context) on their operands, autoconverting those operands to those imposed contexts. In contrast, smartmatch</source>
          <target state="translated">También es único en el sentido de que todos los demás operadores de Perl imponen un contexto (por lo general de cuerda o numérico)a sus operandos,autoconvirtiéndolos en esos contextos impuestos.En cambio,el smartmatch</target>
        </trans-unit>
        <trans-unit id="fac8d72d737b1435638a2eef2e2bc6f98342f178" translate="yes" xml:space="preserve">
          <source>It is also worth noting that &lt;code&gt;nextStream&lt;/code&gt; can be called at any time -- you don't have to wait until you have exhausted a compressed data stream before skipping to the next one.</source>
          <target state="translated">Tambi&amp;eacute;n vale la pena se&amp;ntilde;alar que se puede llamar a &lt;code&gt;nextStream&lt;/code&gt; en cualquier momento; no tiene que esperar hasta que haya agotado un flujo de datos comprimidos antes de pasar al siguiente.</target>
        </trans-unit>
        <trans-unit id="acc49eaced7d721523b5bd759190363e32250fa1" translate="yes" xml:space="preserve">
          <source>It is an error to refer to a name not defined by a &lt;code&gt;(?&amp;lt;NAME&amp;gt;)&lt;/code&gt; earlier in the pattern.</source>
          <target state="translated">Es un error hacer referencia a un nombre no definido por un &lt;code&gt;(?&amp;lt;NAME&amp;gt;)&lt;/code&gt; anteriormente en el patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="13ee6665661c6d90800f41308ee104afc7c23af8" translate="yes" xml:space="preserve">
          <source>It is an error to refer to a name that is not declared somewhere in the pattern.</source>
          <target state="translated">Es un error referirse a un nombre que no está declarado en algún lugar del patrón.</target>
        </trans-unit>
        <trans-unit id="65cfdd54d892c74c51301f814a65bd9d932d410a" translate="yes" xml:space="preserve">
          <source>It is an error to try to</source>
          <target state="translated">Es un error intentar</target>
        </trans-unit>
        <trans-unit id="2f0a90fe17f957e846e3b518ba860308d4237cf1" translate="yes" xml:space="preserve">
          <source>It is assumed that if a module name is supplied, that that name matches the file name. Pods are not opened to check for the 'NAME' entry.</source>
          <target state="translated">Se supone que si se suministra un nombre de módulo,ese nombre coincide con el nombre del archivo.Las cápsulas no se abren para comprobar la entrada &quot;NOMBRE&quot;.</target>
        </trans-unit>
        <trans-unit id="c5af0c152794fef2b12ee8e78572d2cb96b0bb53" translate="yes" xml:space="preserve">
          <source>It is at this stage that &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split()&lt;/a&gt;&lt;/code&gt; silently optimizes &lt;code&gt;/^/&lt;/code&gt; to mean &lt;code&gt;/^/m&lt;/code&gt; .</source>
          <target state="translated">Es en esta etapa que &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split()&lt;/a&gt;&lt;/code&gt; optimiza silenciosamente &lt;code&gt;/^/&lt;/code&gt; para significar &lt;code&gt;/^/m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8c668d4a29eb47ae15a72aa4d1dd8cfb718abf5" translate="yes" xml:space="preserve">
          <source>It is at this step that &lt;code&gt;\1&lt;/code&gt; is begrudgingly converted to &lt;code&gt;$1&lt;/code&gt; in the replacement text of &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, in order to correct the incorrigible</source>
          <target state="translated">Es en este paso que &lt;code&gt;\1&lt;/code&gt; se convierte a rega&amp;ntilde;adientes en &lt;code&gt;$1&lt;/code&gt; en el texto de reemplazo de &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; , para corregir el incorregible</target>
        </trans-unit>
        <trans-unit id="4466ca0969a2662c5b072bf7cd93ebda9f966a8c" translate="yes" xml:space="preserve">
          <source>It is basically equivalent to:</source>
          <target state="translated">Es básicamente equivalente a:</target>
        </trans-unit>
        <trans-unit id="c77b015f95e7c8d0f9144f6b141dfe36a63eb292" translate="yes" xml:space="preserve">
          <source>It is clear that inline code is going to be faster than subroutine or method calls, because there is less overhead, but this approach has the disadvantage of being less maintainable and comes at the cost of greater memory usage - there is no such thing as a free lunch. If you are searching for an element in a list, it can be more efficient to store the data in a hash structure, and then simply look to see whether the key is defined, rather than to loop through the entire array using grep() for instance. substr() may be (a lot) faster than grep() but not as flexible, so you have another trade-off to access. Your code may contain a line which takes 0.01 of a second to execute which if you call it 1,000 times, quite likely in a program parsing even medium sized files for instance, you already have a 10 second delay, in just one single code location, and if you call that line 100,000 times, your entire program will slow down to an unbearable crawl.</source>
          <target state="translated">Está claro que el código en línea va a ser más rápido que las llamadas a subrutinas o métodos,porque hay menos gastos generales,pero este enfoque tiene la desventaja de ser menos mantenible y viene a costa de un mayor uso de la memoria-no hay tal cosa como un almuerzo gratis.Si está buscando un elemento en una lista,puede ser más eficiente almacenar los datos en una estructura de hash,y luego simplemente mirar para ver si la clave está definida,en lugar de hacer un bucle a través de todo el array usando grep()por ejemplo.substr()puede ser (mucho)más rápido que grep()pero no tan flexible,por lo que tiene otra desventaja para acceder.Tu código puede contener una línea que tarda 0,01 de segundo en ejecutarse,que si la llamas 1.000 veces,muy probablemente en un programa que analiza incluso archivos de tamaño medio,por ejemplo,ya tienes un retraso de 10 segundos,en una sola ubicación del código,y si llamas a esa línea 100.000 veces,todo tu programa se ralentizará hasta un rastreo insoportable.</target>
        </trans-unit>
        <trans-unit id="f6122f662407715d120a73ec05bd2bbbf07e1b28" translate="yes" xml:space="preserve">
          <source>It is common to simply say &lt;code&gt;$filename = Pod::Simple::Search-&amp;gt; new
-&amp;gt;find(&quot;perlvar&quot;)&lt;/code&gt; so that just the @INC (well, and scriptdir) directories are searched. (This happens because the &lt;code&gt;inc&lt;/code&gt; attribute is true by default.)</source>
          <target state="translated">Es com&amp;uacute;n decir simplemente &lt;code&gt;$filename = Pod::Simple::Search-&amp;gt; new -&amp;gt;find(&quot;perlvar&quot;)&lt;/code&gt; para que solo se busquen los directorios @INC (well, y scriptdir). (Esto sucede porque el atributo &lt;code&gt;inc&lt;/code&gt; es verdadero de forma predeterminada).</target>
        </trans-unit>
        <trans-unit id="94fd6736ac13c38aadc8d6ee40bf099cf30a2334" translate="yes" xml:space="preserve">
          <source>It is commonly thought that if a system does not have the capability to dynamically load a library, you cannot build XSUBs. This is incorrect. You</source>
          <target state="translated">Se piensa comúnmente que si un sistema no tiene la capacidad de cargar dinámicamente una biblioteca,no se pueden construir XSUBs.Esto es incorrecto.Usted</target>
        </trans-unit>
        <trans-unit id="7b3776ce40b36ce2eb6604faa164797c0a666707" translate="yes" xml:space="preserve">
          <source>It is convenient to think that the indirection operator &lt;code&gt;*&lt;/code&gt; should be considered as a part of the type and the address operator &lt;code&gt;&amp;amp;&lt;/code&gt; should be considered part of the variable. See &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; for more info about handling qualifiers and unary operators in C types.</source>
          <target state="translated">Es conveniente pensar que el operador de indirecci&amp;oacute;n &lt;code&gt;*&lt;/code&gt; debe considerarse como parte del tipo y el operador de direcci&amp;oacute;n &lt;code&gt;&amp;amp;&lt;/code&gt; debe considerarse parte de la variable. Consulte &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el manejo de calificadores y operadores unarios en tipos C.</target>
        </trans-unit>
        <trans-unit id="e49556be27809812b1f952c88dbd0fb8ac73080a" translate="yes" xml:space="preserve">
          <source>It is conventional to start layer names with a colon (for example, &lt;code&gt;:perlio&lt;/code&gt; ) to emphasize their similarity to variable &quot;attributes&quot;. But the code that parses layer specification strings, which is also used to decode the PERLIO environment variable, treats the colon as a separator.</source>
          <target state="translated">Es convencional comenzar los nombres de las capas con dos puntos (por ejemplo &lt;code&gt;:perlio&lt;/code&gt; ) para enfatizar su similitud con los &quot;atributos&quot; de las variables. Pero el c&amp;oacute;digo que analiza las cadenas de especificaci&amp;oacute;n de capa, que tambi&amp;eacute;n se utiliza para decodificar la variable de entorno PERLIO, trata los dos puntos como separadores.</target>
        </trans-unit>
        <trans-unit id="9ddbcb8555d7ffc2811c34458dc5e23aebe16a93" translate="yes" xml:space="preserve">
          <source>It is eagerly hoped that in the future, increasing numbers of formats (and formatters) will support Unicode characters directly (as (X)HTML does with &lt;code&gt;&amp;amp;infin;&lt;/code&gt; , &lt;code&gt;&amp;amp;#8734;&lt;/code&gt;, or &lt;code&gt;&amp;amp;#x221E;&lt;/code&gt;), reducing the need for idiosyncratic mappings of Unicode-to-</source>
          <target state="translated">Se espera ansiosamente que en el futuro, un n&amp;uacute;mero creciente de formatos (y formateadores) apoyar&amp;aacute; caracteres Unicode directamente (como (X) HTML hace con &lt;code&gt;&amp;amp;infin;&lt;/code&gt; , &lt;code&gt;&amp;amp;#8734;&lt;/code&gt; o &lt;code&gt;&amp;amp;#x221E;&lt;/code&gt; ), reduciendo la necesidad de idiosincr&amp;aacute;sica asignaciones de Unicode-to-</target>
        </trans-unit>
        <trans-unit id="1feb840e61338fb8d69eab115197ceb6e4d8f195" translate="yes" xml:space="preserve">
          <source>It is easier to see with comments:</source>
          <target state="translated">Es más fácil ver con los comentarios:</target>
        </trans-unit>
        <trans-unit id="deebd2bf2cb329548cf17163d065366c59ebd497" translate="yes" xml:space="preserve">
          <source>It is entirely possible for a subroutine to have both a prototype and a signature. They do different jobs: the prototype affects compilation of calls to the subroutine, and the signature puts argument values into lexical variables at runtime. You can therefore write</source>
          <target state="translated">Es totalmente posible que una subrutina tenga tanto un prototipo como una firma.Hacen trabajos diferentes:el prototipo afecta a la compilación de llamadas a la subrutina,y la firma pone los valores de los argumentos en variables léxicas en tiempo de ejecución.Por lo tanto,se puede escribir</target>
        </trans-unit>
        <trans-unit id="e8705c44d271d802e23ff6717b34393b3365f69d" translate="yes" xml:space="preserve">
          <source>It is even possible to give your own names to characters and character sequences. For details, see &lt;a href=&quot;charnames&quot;&gt;charnames&lt;/a&gt;.</source>
          <target state="translated">Incluso es posible dar sus propios nombres a personajes y secuencias de caracteres. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;charnames&quot;&gt;nombres de caracteres&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c3622fe65f713ae38110b205b49d3188003c82c" translate="yes" xml:space="preserve">
          <source>It is expected that arguments to methods that are not explicitly supposed to be changed are constant (but this is not enforced).</source>
          <target state="translated">Se espera que los argumentos a los métodos que no se supone explícitamente que deben cambiarse sean constantes (pero esto no se aplica).</target>
        </trans-unit>
        <trans-unit id="776c3073c10966ce7532e508c1ba6620f8fcb74a" translate="yes" xml:space="preserve">
          <source>It is expected that what exactly &lt;code&gt;'strict'&lt;/code&gt; does will evolve over time as we gain experience with it. This means that programs that compile under it in today's Perl may not compile, or may have more or fewer warnings, in future Perls. There is no backwards compatibility promises with regards to it. Also there are already proposals for an alternate syntax for enabling it. For these reasons, using it will raise a &lt;code&gt;experimental::re_strict&lt;/code&gt; class warning, unless that category is turned off.</source>
          <target state="translated">Se espera que lo que hace exactamente &lt;code&gt;'strict'&lt;/code&gt; evolucione con el tiempo a medida que ganemos experiencia con &amp;eacute;l. Esto significa que los programas que se compilan con &amp;eacute;l en el Perl actual pueden no compilar, o pueden tener m&amp;aacute;s o menos advertencias, en el futuro Perl. No hay promesas de compatibilidad con versiones anteriores al respecto. Adem&amp;aacute;s, ya hay propuestas para una sintaxis alternativa para habilitarlo. Por estas razones, usarlo generar&amp;aacute; una advertencia de clase &lt;code&gt;experimental::re_strict&lt;/code&gt; , a menos que esa categor&amp;iacute;a est&amp;eacute; desactivada.</target>
        </trans-unit>
        <trans-unit id="743ffcd338b65d877bd2bc22191ffd5f5bc78800" translate="yes" xml:space="preserve">
          <source>It is exported upon request.</source>
          <target state="translated">Se exporta a petición.</target>
        </trans-unit>
        <trans-unit id="fc922ccc86e1ddfa603184a6c1df119e90d551a2" translate="yes" xml:space="preserve">
          <source>It is generally a bad idea to mix non-UTF-8 locales and Unicode, and this issue is one of the reasons why. This warning is raised when Unicode rules would normally cause the result of this operation to contain a character that is in the range specified by the locale, 0..255, and hence is subject to the locale's rules, not Unicode's.</source>
          <target state="translated">Generalmente es una mala idea mezclar locales que no son de UTF-8 y Unicode,y esta cuestión es una de las razones por las que.Esta advertencia se plantea cuando las reglas de Unicode normalmente harían que el resultado de esta operación contuviera un carácter que está en el rango especificado por la locale,0..255,y por lo tanto está sujeto a las reglas de la locale,no a las de Unicode.</target>
        </trans-unit>
        <trans-unit id="4425fdf4018e2e8fba242ccf31d9fb769e12dacd" translate="yes" xml:space="preserve">
          <source>It is guaranteed that</source>
          <target state="translated">Se garantiza que</target>
        </trans-unit>
        <trans-unit id="a6f4741397b5a8e1cbfacb47c2230423a05f8010" translate="yes" xml:space="preserve">
          <source>It is guaranteed that an</source>
          <target state="translated">Se garantiza que un</target>
        </trans-unit>
        <trans-unit id="13b4603391d295cad7c663188ece67a47ecf1dc6" translate="yes" xml:space="preserve">
          <source>It is hard to understand without digging what exactly matches ranges other than subsets of &lt;code&gt;[A-Z]&lt;/code&gt; , &lt;code&gt;[a-z]&lt;/code&gt; , and &lt;code&gt;[0-9]&lt;/code&gt; . A sound principle is to use only ranges that begin from and end at either alphabetics of equal case ([a-e], [A-E]), or digits ([0-9]). Anything else is unsafe or unclear. If in doubt, spell out the range in full.</source>
          <target state="translated">Es dif&amp;iacute;cil de entender sin investigar qu&amp;eacute; coincide exactamente con rangos distintos de los subconjuntos de &lt;code&gt;[A-Z]&lt;/code&gt; , &lt;code&gt;[a-z]&lt;/code&gt; y &lt;code&gt;[0-9]&lt;/code&gt; . Un principio s&amp;oacute;lido es usar solo rangos que comiencen y terminen en letras alfab&amp;eacute;ticas de igual caso ([ae], [AE]) o d&amp;iacute;gitos ([0-9]). Cualquier otra cosa no es segura o no est&amp;aacute; clara. En caso de duda, indique el rango completo.</target>
        </trans-unit>
        <trans-unit id="32102cc598d5c6f1883220e9be88e26b0126c4bb" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use the new interface.</source>
          <target state="translated">Se recomienda encarecidamente utilizar la nueva interfaz.</target>
        </trans-unit>
        <trans-unit id="ca5fa5ba1e81b193ad6d8416f6d80a9e68a2d380" translate="yes" xml:space="preserve">
          <source>It is however guaranteed that backslash or escape sequences never have a punctuation character following the backslash, not now, and not in a future version of Perl 5. So it is safe to put a backslash in front of a non-word character.</source>
          <target state="translated">Sin embargo,está garantizado que la barra invertida o las secuencias de escape nunca tienen un carácter de puntuación después de la barra invertida,ni ahora,ni en una futura versión de Perl 5.Por lo tanto,es seguro poner una barra invertida delante de un personaje que no sea una palabra.</target>
        </trans-unit>
        <trans-unit id="77f0274e9c470893b80643add674cf709738754d" translate="yes" xml:space="preserve">
          <source>It is implemented using the standard perl TIEHASH interface. Please see the &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; entry in perlfunc(1) and perltie(1) for more information.</source>
          <target state="translated">Se implementa utilizando la interfaz est&amp;aacute;ndar de perl TIEHASH. Consulte la entrada de &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; en perlfunc (1) y perltie (1) para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="53ed786f282bde3aa8de3b1b643efa3bb560a2fd" translate="yes" xml:space="preserve">
          <source>It is important that you read the &lt;a href=&quot;opcode&quot;&gt;Opcode&lt;/a&gt; module documentation for more information, especially for detailed definitions of opnames, optags and opsets.</source>
          <target state="translated">Es importante que lea la documentaci&amp;oacute;n del m&amp;oacute;dulo &lt;a href=&quot;opcode&quot;&gt;Opcode&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n, especialmente para obtener definiciones detalladas de opnames, optags y opsets.</target>
        </trans-unit>
        <trans-unit id="2977106e878eb3427358dec08f1824351409ba37" translate="yes" xml:space="preserve">
          <source>It is important that you use a supported 'make' program, and ensure Config.pm knows about it. If you don't have nmake, you can either get dmake from the location mentioned earlier or get an old version of nmake reportedly available from:</source>
          <target state="translated">Es importante que uses un programa 'make' soportado,y asegúrate de que Config.pm lo sepa.Si no tienes nmake,puedes obtener dmake de la ubicación mencionada anteriormente o bien obtener una versión antigua de nmake que se dice que está disponible en:</target>
        </trans-unit>
        <trans-unit id="ff64ea14bb1b01f98f924406ee57c3ed5e8b95d4" translate="yes" xml:space="preserve">
          <source>It is important to do &lt;code&gt;make dist&lt;/code&gt; as early as possible. This way you can easily merge(1) your changes to autogenerated files if you decide to edit your &lt;code&gt;.h&lt;/code&gt; files and rerun h2xs.</source>
          <target state="translated">Es importante &lt;code&gt;make dist&lt;/code&gt; lo antes posible. De esta manera usted puede combinar f&amp;aacute;cilmente (1) los cambios en los archivos autogenerados si decide editar sus &lt;code&gt;.h&lt;/code&gt; archivos y h2xs volver a ejecutar.</target>
        </trans-unit>
        <trans-unit id="a9a567c14d6791400f926d0994fcc8f3b056f648" translate="yes" xml:space="preserve">
          <source>It is important to know that these CLIs may behave different when the command line contains special characters, in particular quotes or backslashes. For example, with Unix shells you can use single quotes (&lt;code&gt;'&lt;/code&gt;) and double quotes (&lt;code&gt;&quot;&lt;/code&gt;) to group words together. The following alternatives are equivalent on Unix:</source>
          <target state="translated">Es importante saber que estas CLI pueden comportarse de manera diferente cuando la l&amp;iacute;nea de comando contiene caracteres especiales, en particular, comillas o barras invertidas. Por ejemplo, con los shells de Unix puede utilizar comillas simples ( &lt;code&gt;'&lt;/code&gt; ) y comillas dobles ( &lt;code&gt;&quot;&lt;/code&gt; ) para agrupar palabras. Las siguientes alternativas son equivalentes en Unix:</target>
        </trans-unit>
        <trans-unit id="dcb1aa33844e3457c736e676b2e42e15c5425cfa" translate="yes" xml:space="preserve">
          <source>It is important to note that the variable can be notified even if no thread &lt;code&gt;cond_signal&lt;/code&gt; or &lt;code&gt;cond_broadcast&lt;/code&gt; on the variable. It is therefore important to check the value of the variable and go back to waiting if the requirement is not fulfilled. For example, to pause until a shared counter drops to zero:</source>
          <target state="translated">Es importante tener en cuenta que la variable puede ser notificada incluso si no hay hilo &lt;code&gt;cond_signal&lt;/code&gt; o &lt;code&gt;cond_broadcast&lt;/code&gt; en la variable. Por tanto, es importante comprobar el valor de la variable y volver a esperar si no se cumple el requisito. Por ejemplo, para hacer una pausa hasta que un contador compartido baje a cero:</target>
        </trans-unit>
        <trans-unit id="07be512ccc5c73682b884e92456cd275f3ff5ced" translate="yes" xml:space="preserve">
          <source>It is important to realize when you use these Unicode boundaries, that you are taking a risk that a future version of Perl which contains a later version of the Unicode Standard will not work precisely the same way as it did when your code was written. These rules are not considered stable and have been somewhat more subject to change than the rest of the Standard. Unicode reserves the right to change them at will, and Perl reserves the right to update its implementation to Unicode's new rules. In the past, some changes have been because new characters have been added to the Standard which have different characteristics than all previous characters, so new rules are formulated for handling them. These should not cause any backward compatibility issues. But some changes have changed the treatment of existing characters because the Unicode Technical Committee has decided that the change is warranted for whatever reason. This could be to fix a bug, or because they think better results are obtained with the new rule.</source>
          <target state="translated">Es importante darse cuenta cuando se usan estos límites de Unicode,que se corre el riesgo de que una futura versión de Perl que contenga una versión posterior del Estándar Unicode no funcione exactamente de la misma manera que cuando se escribió el código.Estas reglas no se consideran estables y han estado algo más sujetas a cambios que el resto del Estándar.Unicode se reserva el derecho de cambiarlas a voluntad,y Perl se reserva el derecho de actualizar su implementación a las nuevas reglas de Unicode.En el pasado,algunos cambios se han producido porque se han añadido nuevos caracteres al Estándar que tienen características diferentes a las de todos los caracteres anteriores,por lo que se formulan nuevas reglas para su manejo.Éstas no deberían causar ningún problema de compatibilidad retroactiva.Pero algunos cambios han cambiado el tratamiento de los caracteres existentes porque el Comité Técnico de Unicode ha decidido que el cambio está justificado por cualquier razón.Esto podría ser para arreglar un error,o porque creen que se obtienen mejores resultados con la nueva regla.</target>
        </trans-unit>
        <trans-unit id="6b377275b56d69ca0e60d3e0cbc10a16f405fe04" translate="yes" xml:space="preserve">
          <source>It is important to remember that &lt;code&gt;yield()&lt;/code&gt; is only a hint to give up the CPU, it depends on your hardware, OS and threading libraries what actually happens. &lt;b&gt;On many operating systems, yield() is a no-op.&lt;/b&gt; Therefore it is important to note that one should not build the scheduling of the threads around &lt;code&gt;yield()&lt;/code&gt; calls. It might work on your platform but it won't work on another platform.</source>
          <target state="translated">Es importante recordar que &lt;code&gt;yield()&lt;/code&gt; es solo una pista para ceder la CPU, depende de su hardware, sistema operativo y bibliotecas de subprocesos lo que realmente sucede. &lt;b&gt;En muchos sistemas operativos, yield () no es una operaci&amp;oacute;n. &lt;/b&gt;Por lo tanto, es importante tener en cuenta que no se debe construir la programaci&amp;oacute;n de los hilos alrededor de las llamadas &lt;code&gt;yield()&lt;/code&gt; . Puede que funcione en su plataforma, pero no funcionar&amp;aacute; en otra plataforma.</target>
        </trans-unit>
        <trans-unit id="bb902098169f8bf10c78af87761104595e279d51" translate="yes" xml:space="preserve">
          <source>It is intended to be called in this manner:</source>
          <target state="translated">Se pretende que se llame de esta manera:</target>
        </trans-unit>
        <trans-unit id="6c67b173e9f7ca15b0d9849fa732dc6b9c27b1b9" translate="yes" xml:space="preserve">
          <source>It is legal to intermix calls to &lt;code&gt;gzread&lt;/code&gt; and &lt;code&gt;gzreadline&lt;/code&gt; .</source>
          <target state="translated">Es legal &lt;code&gt;gzread&lt;/code&gt; llamadas a gzread y &lt;code&gt;gzreadline&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b081e40b0dd1e97c28fc968fc88db21c07110075" translate="yes" xml:space="preserve">
          <source>It is less confusing to either calculate the result fully, and afterwards round it explicitly, or use the additional parameters to the math functions like so:</source>
          <target state="translated">Es menos confuso ya sea calcular el resultado completamente,y después redondearlo explícitamente,o usar los parámetros adicionales a las funciones matemáticas de esta manera:</target>
        </trans-unit>
        <trans-unit id="38f913862bf185692af7e2eaaf2148c65356aec6" translate="yes" xml:space="preserve">
          <source>It is most convenient to use in a &lt;code&gt;foreach&lt;/code&gt; loop, for example:</source>
          <target state="translated">Es m&amp;aacute;s conveniente usarlo en un bucle &lt;code&gt;foreach&lt;/code&gt; , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="69bffc928e3fa117d0fd3dd3376d4295ace44212" translate="yes" xml:space="preserve">
          <source>It is no longer possible to compile PA-RISC 1.0 executables on either the PA-RISC 1.1 or 2.0 platforms. The command-line flags are accepted, but the resulting executable will not run when transferred to a PA-RISC 1.0 system.</source>
          <target state="translated">Ya no es posible compilar los ejecutables PA-RISC 1.0 en las plataformas PA-RISC 1.1 o 2.0.Se aceptan los flags de la línea de comandos,pero el ejecutable resultante no se ejecutará cuando se transfiera a un sistema PA-RISC 1.0.</target>
        </trans-unit>
        <trans-unit id="09c5f6dc5c28104c8b1496a7745505dfd0c3755b" translate="yes" xml:space="preserve">
          <source>It is no longer possible to link PA-RISC 1.0 shared libraries (even though the command-line flags are still present).</source>
          <target state="translated">Ya no es posible enlazar las bibliotecas compartidas de PA-RISC 1.0 (a pesar de que las banderas de la línea de comandos siguen presentes).</target>
        </trans-unit>
        <trans-unit id="5e391513315c3abeec46220661da8fc25e5f09fd" translate="yes" xml:space="preserve">
          <source>It is not considered an error for &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; to return false if it fails due to an &lt;code&gt;EWOULDBLOCK&lt;/code&gt; (or equivalent) condition. This means one can still use the common convention of testing the return value of &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; when called with the &lt;code&gt;LOCK_NB&lt;/code&gt; option:</source>
          <target state="translated">No se considera un error que &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; devuelva falso si falla debido a una &lt;code&gt;EWOULDBLOCK&lt;/code&gt; (o equivalente). Esto significa que uno todav&amp;iacute;a puede usar la convenci&amp;oacute;n com&amp;uacute;n de probar el valor de retorno de &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; cuando se llama con la opci&amp;oacute;n &lt;code&gt;LOCK_NB&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb49901ab613cbcc1013bad05870bde6b73a1f49" translate="yes" xml:space="preserve">
          <source>It is not desirable to import the functions &lt;code&gt;fieldhash&lt;/code&gt; and/or &lt;code&gt;fieldhashes&lt;/code&gt; into every class that is going to use them. They are only used once to set up the class. When the class is up and running, these functions serve no more purpose.</source>
          <target state="translated">No es deseable importar las funciones &lt;code&gt;fieldhash&lt;/code&gt; y / o &lt;code&gt;fieldhashes&lt;/code&gt; en cada clase que las vaya a utilizar. Solo se usan una vez para configurar la clase. Cuando la clase est&amp;aacute; en funcionamiento, estas funciones ya no sirven.</target>
        </trans-unit>
        <trans-unit id="c5fbc8d597bc2a95fe72ba36ecdd3925f81ca3bb" translate="yes" xml:space="preserve">
          <source>It is not necessary for voting to be held on cherry-picking perldelta entries associated with changes that have already been cherry-picked, nor for the maint-pumpking to obtain votes on changes required by the</source>
          <target state="translated">No es necesario que la votación se lleve a cabo sobre las entradas de perldelta de selección de cerezas asociadas con los cambios que ya han sido seleccionados,ni que la selección principal obtenga votos sobre los cambios requeridos por el</target>
        </trans-unit>
        <trans-unit id="fee4bc3261e1d5762f4a782cbbcca1c13a9e84eb" translate="yes" xml:space="preserve">
          <source>It is not necessary to include every change meeting these criteria, and in general the focus should be on addressing security issues, crashing bugs, regressions and serious installation issues. The temptation to include a plethora of minor changes that don't affect the installation or execution of perl (e.g. spelling corrections in documentation) should be resisted in order to reduce the overall risk of overlooking something. The intention is to create maintenance releases which are both worthwhile and which users can have full confidence in the stability of. (A secondary concern is to avoid burning out the maint-pumpking or overwhelming other committers voting on changes to be included (see &lt;a href=&quot;#Getting-changes-into-a-maint-branch&quot;&gt;Getting changes into a maint branch&lt;/a&gt; below).)</source>
          <target state="translated">No es necesario incluir todos los cambios que cumplan con estos criterios y, en general, la atenci&amp;oacute;n debe centrarse en abordar los problemas de seguridad, los fallos, las regresiones y los problemas graves de instalaci&amp;oacute;n. Debe resistirse la tentaci&amp;oacute;n de incluir una pl&amp;eacute;tora de cambios menores que no afectan la instalaci&amp;oacute;n o ejecuci&amp;oacute;n de perl (por ejemplo, correcciones ortogr&amp;aacute;ficas en la documentaci&amp;oacute;n) para reducir el riesgo general de pasar por alto algo. La intenci&amp;oacute;n es crear versiones de mantenimiento que valgan la pena y en las que los usuarios puedan tener plena confianza en la estabilidad. (Una preocupaci&amp;oacute;n secundaria es evitar quemar el maint-pumpking o abrumar a otros confirmadores que votan sobre los cambios que se incluir&amp;aacute;n (consulte &lt;a href=&quot;#Getting-changes-into-a-maint-branch&quot;&gt;C&amp;oacute;mo obtener cambios en una rama de maint a&lt;/a&gt; continuaci&amp;oacute;n)).</target>
        </trans-unit>
        <trans-unit id="90bcb58fb92d14a7b685940a550af6acd8800f2a" translate="yes" xml:space="preserve">
          <source>It is not necessary to mention DynaLoader or the current extension when filling in INCLUDE_EXT. If the INCLUDE_EXT is mentioned but is empty then only DynaLoader and the current extension will be included in the build.</source>
          <target state="translated">No es necesario mencionar el DynaLoader o la actual extensión cuando se rellena el INCLUDE_EXT.Si se menciona el INCLUDE_EXT pero está vacío,entonces sólo se incluirá en la construcción el DynaLoader y la extensión actual.</target>
        </trans-unit>
        <trans-unit id="6c22235436c0d9c88ea34e3651dd185b541bd55a" translate="yes" xml:space="preserve">
          <source>It is not possible to have a subroutine or a keyword with the same name as a constant in the same package. This is probably a Good Thing.</source>
          <target state="translated">No es posible tener una subrutina o una palabra clave con el mismo nombre como una constante en el mismo paquete.Esto es probablemente una cosa buena.</target>
        </trans-unit>
        <trans-unit id="f4712dd85edea86a32c5bfd8ffd1fe49536a91d9" translate="yes" xml:space="preserve">
          <source>It is not possible to pack or unpack bit fields - just integral bytes. &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; always starts at the next byte boundary and &quot;rounds up&quot; to the next multiple of 8 by adding zero bits as required. (If you do want bit fields, there is &lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;. Or you could implement bit field handling at the character string level, using split, substr, and concatenation on unpacked bit strings.)</source>
          <target state="translated">No es posible empaquetar o descomprimir campos de bits, solo bytes integrales. &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; siempre comienza en el siguiente l&amp;iacute;mite de bytes y &quot;redondea hacia arriba&quot; al siguiente m&amp;uacute;ltiplo de 8 agregando cero bits seg&amp;uacute;n sea necesario. (Si desea campos de bits, hay &lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt; . O puede implementar el manejo de campos de bits en el nivel de cadena de caracteres, usando split, substr y concatenaci&amp;oacute;n en cadenas de bits desempaquetadas).</target>
        </trans-unit>
        <trans-unit id="3efe75bc9ad9fbe460b3b9a87287e6aa69baa4d8" translate="yes" xml:space="preserve">
          <source>It is not safe to use the value of &lt;code&gt;$^X&lt;/code&gt; as a path name of a file, as some operating systems that have a mandatory suffix on executable files do not require use of the suffix when invoking a command. To convert the value of &lt;code&gt;$^X&lt;/code&gt; to a path name, use the following statements:</source>
          <target state="translated">No es seguro utilizar el valor de &lt;code&gt;$^X&lt;/code&gt; como nombre de ruta de un archivo, ya que algunos sistemas operativos que tienen un sufijo obligatorio en los archivos ejecutables no requieren el uso del sufijo al invocar un comando. Para convertir el valor de &lt;code&gt;$^X&lt;/code&gt; en un nombre de ruta, use las siguientes declaraciones:</target>
        </trans-unit>
        <trans-unit id="17f49b3471db481f432117951bcb8866bb533894" translate="yes" xml:space="preserve">
          <source>It is not uncommon to want to match a range of characters. Luckily, instead of listing all characters in the range, one may use the hyphen (&lt;code&gt;-&lt;/code&gt; ). If inside a bracketed character class you have two characters separated by a hyphen, it's treated as if all characters between the two were in the class. For instance, &lt;code&gt;[0-9]&lt;/code&gt; matches any ASCII digit, and &lt;code&gt;[a-m]&lt;/code&gt; matches any lowercase letter from the first half of the ASCII alphabet.</source>
          <target state="translated">No es raro querer hacer coincidir una variedad de caracteres. Afortunadamente, en lugar de enumerar todos los caracteres en el rango, se puede usar el gui&amp;oacute;n ( &lt;code&gt;-&lt;/code&gt; ). Si dentro de una clase de caracteres entre corchetes tiene dos caracteres separados por un gui&amp;oacute;n, se trata como si todos los caracteres entre los dos estuvieran en la clase. Por ejemplo, &lt;code&gt;[0-9]&lt;/code&gt; coincide con cualquier d&amp;iacute;gito ASCII y &lt;code&gt;[a-m]&lt;/code&gt; coincide con cualquier letra min&amp;uacute;scula de la primera mitad del alfabeto ASCII.</target>
        </trans-unit>
        <trans-unit id="ea195389d2ab8304dae6a2be37001201928a81bd" translate="yes" xml:space="preserve">
          <source>It is now being maintained separately from the Perl core by Dave Rolsky, &amp;lt;autarch@urth.org&amp;gt;.</source>
          <target state="translated">Ahora, Dave Rolsky, &amp;lt;autarch@urth.org&amp;gt;, lo mantiene separado del n&amp;uacute;cleo de Perl.</target>
        </trans-unit>
        <trans-unit id="0a2d81d68cd0e192d7fee2715fc04989d662c22e" translate="yes" xml:space="preserve">
          <source>It is often more readable to use the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator between key/value pairs. The &lt;code&gt;=&amp;gt;&lt;/code&gt; operator is mostly just a more visually distinctive synonym for a comma, but it also arranges for its left-hand operand to be interpreted as a string if it's a bareword that would be a legal simple identifier. &lt;code&gt;=&amp;gt;&lt;/code&gt; doesn't quote compound identifiers, that contain double colons. This makes it nice for initializing hashes:</source>
          <target state="translated">A menudo es m&amp;aacute;s legible usar el operador &lt;code&gt;=&amp;gt;&lt;/code&gt; entre pares clave / valor. El operador &lt;code&gt;=&amp;gt;&lt;/code&gt; es principalmente un sin&amp;oacute;nimo visualmente m&amp;aacute;s distintivo para una coma, pero tambi&amp;eacute;n organiza que su operando de la izquierda se interprete como una cadena si es una palabra sin cifrar que ser&amp;iacute;a un identificador legal simple. &lt;code&gt;=&amp;gt;&lt;/code&gt; no cita identificadores compuestos, que contienen dos puntos dobles. Esto lo hace bueno para inicializar hashes:</target>
        </trans-unit>
        <trans-unit id="ca5507a15a15ea470ddab20bdff08a946fb003e3" translate="yes" xml:space="preserve">
          <source>It is often not wise to share an object unless the class itself has been written to support sharing. For example, an object's destructor may get called multiple times, once for each thread's scope exit. Another danger is that the contents of hash-based objects will be lost due to the above mentioned limitation. See</source>
          <target state="translated">A menudo no es prudente compartir un objeto a menos que la clase misma haya sido escrita para apoyar el compartir.Por ejemplo,el destructor de un objeto puede ser llamado varias veces,una por cada salida del alcance del hilo.Otro peligro es que el contenido de los objetos basados en el hachís se pierda debido a la limitación antes mencionada.Véase</target>
        </trans-unit>
        <trans-unit id="c69ba08cbdace146eeaa3088aa2fbd7151747d45" translate="yes" xml:space="preserve">
          <source>It is okay for the lines starting at the &quot;CODE:&quot; line to not be indented. However, for readability purposes, it is suggested that you indent CODE: one level and the lines following one more level.</source>
          <target state="translated">Está bien que las líneas que comienzan en la línea &quot;CÓDIGO:&quot; no se sangren.Sin embargo,para propósitos de legibilidad,se sugiere que se sangren CÓDIGO:un nivel y las líneas que siguen a un nivel más.</target>
        </trans-unit>
        <trans-unit id="65df07e3fa6135b82df3a9d6866989ee7ae4d5d2" translate="yes" xml:space="preserve">
          <source>It is only used on OS/2 and Win32.</source>
          <target state="translated">Sólo se usa en OS/2 y Win32.</target>
        </trans-unit>
        <trans-unit id="6661787e0f495e149a6ee0b4ddf2a5d46d4df496" translate="yes" xml:space="preserve">
          <source>It is particularly important to note that neither the shell nor the C runtime do any wildcard expansions of command-line arguments (so wildcards need not be quoted). Also, the quoting behaviours of the shell and the C runtime are rudimentary at best (and may, if you are using a non-standard shell, be inconsistent). The only (useful) quote character is the double quote (&quot;). It can be used to protect spaces and other special characters in arguments.</source>
          <target state="translated">Es particularmente importante señalar que ni el shell ni el tiempo de ejecución C hacen ninguna expansión comodín de los argumentos de la línea de comandos (por lo que no es necesario citar los comodines).Además,los comportamientos de cita del shell y el tiempo de ejecución de C son rudimentarios en el mejor de los casos (y pueden,si se utiliza un shell no estándar,ser inconsistentes).El único carácter de cita (útil)es la doble cita (&quot;).Puede utilizarse para proteger espacios y otros caracteres especiales en los argumentos.</target>
        </trans-unit>
        <trans-unit id="b08f708cd4767406ca484e1891baf6f457b1498f" translate="yes" xml:space="preserve">
          <source>It is possible for the Perl subroutine you are calling to terminate abnormally, e.g., by calling</source>
          <target state="translated">Es posible que la subrutina Perl que está llamando termine anormalmente,por ejemplo,llamando a</target>
        </trans-unit>
        <trans-unit id="68748e768505aa715cf11b4ae34ec36bb19593be" translate="yes" xml:space="preserve">
          <source>It is possible that, upon completion, not all arguments in the string have been processed. &lt;code&gt;GetOptionsFromString&lt;/code&gt; will, when called in list context, return both the return status and an array reference to any remaining arguments:</source>
          <target state="translated">Es posible que, una vez finalizado, no se hayan procesado todos los argumentos de la cadena. &lt;code&gt;GetOptionsFromString&lt;/code&gt; , cuando se llame en el contexto de la lista, devolver&amp;aacute; tanto el estado de retorno como una referencia de matriz a los argumentos restantes:</target>
        </trans-unit>
        <trans-unit id="da1fb645dee4eb2dcf81d78a3bbd52439eec6574" translate="yes" xml:space="preserve">
          <source>It is possible to add &lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;END blocks&lt;/a&gt; to threads by using &lt;a href=&quot;functions/require&quot;&gt;require VERSION&lt;/a&gt; or &lt;a href=&quot;functions/eval&quot;&gt;eval EXPR&lt;/a&gt; with the appropriate code. These &lt;code&gt;END&lt;/code&gt; blocks will then be executed when the thread's interpreter is destroyed (i.e., either during a &lt;code&gt;-&amp;gt;join()&lt;/code&gt; call, or at program termination).</source>
          <target state="translated">Es posible agregar &lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;bloques END&lt;/a&gt; a subprocesos usando &lt;a href=&quot;functions/require&quot;&gt;require VERSION&lt;/a&gt; o &lt;a href=&quot;functions/eval&quot;&gt;eval EXPR&lt;/a&gt; con el c&amp;oacute;digo apropiado. Estos bloques &lt;code&gt;END&lt;/code&gt; se ejecutar&amp;aacute;n cuando se destruya el int&amp;eacute;rprete del hilo (es decir, durante una llamada &lt;code&gt;-&amp;gt;join()&lt;/code&gt; o al finalizar el programa).</target>
        </trans-unit>
        <trans-unit id="103a4ec3966b9d4c47f8bb4d45cb27898db88b92" translate="yes" xml:space="preserve">
          <source>It is possible to ask for a different method resolution order with the &lt;a href=&quot;mro&quot;&gt;mro&lt;/a&gt; pragma.</source>
          <target state="translated">Es posible solicitar un orden de resoluci&amp;oacute;n de m&amp;eacute;todo diferente con el &lt;a href=&quot;mro&quot;&gt;mro&lt;/a&gt; pragma.</target>
        </trans-unit>
        <trans-unit id="214e8fa8e052ffd8fef627a3a69587c1d8000f20" translate="yes" xml:space="preserve">
          <source>It is possible to ask for such a statistic at arbitrary points in your execution using the mstat() function out of the standard Devel::Peek module.</source>
          <target state="translated">Es posible pedir tal estadística en puntos arbitrarios de su ejecución usando la función mstat()del módulo estándar Devel::Peek.</target>
        </trans-unit>
        <trans-unit id="b3c2ec1b334ee0d70dae2975648b13f78c06cb41" translate="yes" xml:space="preserve">
          <source>It is possible to build a threaded version of perl on Solaris. The entire perl thread implementation is still experimental, however, so beware.</source>
          <target state="translated">Es posible construir una versión en hilo de perl en Solaris.Sin embargo,toda la implementación del hilo de perl es todavía experimental,así que tenga cuidado.</target>
        </trans-unit>
        <trans-unit id="5dcdcf19c7450b4c54b9304c481faacc66e7c2fc" translate="yes" xml:space="preserve">
          <source>It is possible to compile a version of threaded Perl on any version of HP-UX before 10.30, but it is strongly suggested that you be running on HP-UX 11.00 at least.</source>
          <target state="translated">Es posible compilar una versión de Perl con hilo en cualquier versión de HP-UX antes de las 10.30,pero se sugiere encarecidamente que se ejecute en HP-UX 11.00 por lo menos.</target>
        </trans-unit>
        <trans-unit id="fda7319a695e60b7430ed01765a1f487df41c0cc" translate="yes" xml:space="preserve">
          <source>It is possible to control which characters terminate words by modifying &lt;code&gt;$Text::Wrap::break&lt;/code&gt; . Set this to a string such as &lt;code&gt;'[\s:]'&lt;/code&gt; (to break before spaces or colons) or a pre-compiled regexp such as &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/[\s']/&lt;/a&gt;&lt;/code&gt; (to break before spaces or apostrophes). The default is simply &lt;code&gt;'\s'&lt;/code&gt; ; that is, words are terminated by spaces. (This means, among other things, that trailing punctuation such as full stops or commas stay with the word they are &quot;attached&quot; to.) Setting &lt;code&gt;$Text::Wrap::break&lt;/code&gt; to a regular expression that doesn't eat any characters (perhaps just a forward look-ahead assertion) will cause warnings.</source>
          <target state="translated">Es posible controlar qu&amp;eacute; caracteres terminan las palabras modificando &lt;code&gt;$Text::Wrap::break&lt;/code&gt; . Establezca esto en una cadena como &lt;code&gt;'[\s:]'&lt;/code&gt; (para romper antes de espacios o dos puntos) o una expresi&amp;oacute;n regular precompilada como &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/[\s']/&lt;/a&gt;&lt;/code&gt; (para romper antes de espacios o ap&amp;oacute;strofos). El valor predeterminado es simplemente &lt;code&gt;'\s'&lt;/code&gt; ; es decir, las palabras terminan con espacios. (Esto significa, entre otras cosas, que los signos de puntuaci&amp;oacute;n final, como puntos o comas, permanecen con la palabra a la que est&amp;aacute;n &quot;adjuntos&quot;). Establecer &lt;code&gt;$Text::Wrap::break&lt;/code&gt; en una expresi&amp;oacute;n regular que no se coma ning&amp;uacute;n car&amp;aacute;cter ( quiz&amp;aacute;s solo una afirmaci&amp;oacute;n prospectiva) generar&amp;aacute; advertencias.</target>
        </trans-unit>
        <trans-unit id="7fe767cd6ad41a1bf2749df0593b7a56afc9ca68" translate="yes" xml:space="preserve">
          <source>It is possible to create a &quot;circular reference&quot; in Perl, which can lead to memory leaks. A circular reference occurs when two references contain a reference to each other, like this:</source>
          <target state="translated">Es posible crear una &quot;referencia circular&quot; en Perl,lo que puede conducir a fugas de memoria.Una referencia circular se produce cuando dos referencias contienen una referencia entre sí,como esta:</target>
        </trans-unit>
        <trans-unit id="c791c22192baa95a06c328176e1b85eddd8c69ea" translate="yes" xml:space="preserve">
          <source>It is possible to determine which character set you are operating under. But first you need to be really really sure you need to do this. Your code will be simpler and probably just as portable if you don't have to test the character set and do different things, depending. There are actually only very few circumstances where it's not easy to write straight-line code portable to all character sets. See &lt;a href=&quot;perluniintro#Unicode-and-EBCDIC&quot;&gt;Unicode and EBCDIC in perluniintro&lt;/a&gt; for how to portably specify characters.</source>
          <target state="translated">Es posible determinar con qu&amp;eacute; juego de caracteres est&amp;aacute; operando. Pero primero debes estar realmente seguro de que debes hacer esto. Su c&amp;oacute;digo ser&amp;aacute; m&amp;aacute;s simple y probablemente igual de port&amp;aacute;til si no tiene que probar el conjunto de caracteres y hacer cosas diferentes, dependiendo. En realidad, hay muy pocas circunstancias en las que no sea f&amp;aacute;cil escribir c&amp;oacute;digo de l&amp;iacute;nea recta port&amp;aacute;til para todos los conjuntos de caracteres. Consulte &lt;a href=&quot;perluniintro#Unicode-and-EBCDIC&quot;&gt;Unicode y EBCDIC en perluniintro&lt;/a&gt; para saber c&amp;oacute;mo especificar caracteres de forma port&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="e0813f66fef4fb95209b9bd5234a37222cb817c4" translate="yes" xml:space="preserve">
          <source>It is possible to explicitly call a parent method from a child:</source>
          <target state="translated">Es posible llamar explícitamente un método parental de un niño:</target>
        </trans-unit>
        <trans-unit id="d19734113aaf232e977540f9be066f896f4d50e8" translate="yes" xml:space="preserve">
          <source>It is possible to get special treatment for a lone dash. This can be achieved by adding an option specification with an empty name, for example:</source>
          <target state="translated">Es posible obtener un tratamiento especial para una carrera en solitario.Esto puede lograrse añadiendo una especificación de opción con un nombre vacío,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="484490759459d1a463406a9ec978f4abc6c5898b" translate="yes" xml:space="preserve">
          <source>It is possible to inspect both the string given to RE engine and the resulting finite automaton. See the arguments &lt;code&gt;debug&lt;/code&gt; /&lt;code&gt;debugcolor&lt;/code&gt; in the &lt;code&gt;use &lt;a href=&quot;re&quot;&gt;re&lt;/a&gt;&lt;/code&gt; pragma, as well as Perl's &lt;b&gt;-Dr&lt;/b&gt; command-line switch documented in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;.</source>
          <target state="translated">Es posible inspeccionar tanto la cadena dada al motor RE como el aut&amp;oacute;mata finito resultante. Vea los argumentos &lt;code&gt;debug&lt;/code&gt; / &lt;code&gt;debugcolor&lt;/code&gt; en &lt;code&gt;use &lt;a href=&quot;re&quot;&gt;re&lt;/a&gt;&lt;/code&gt; pragma, as&amp;iacute; como el &lt;b&gt;modificador&lt;/b&gt; de l&amp;iacute;nea de comandos &lt;b&gt;-Dr&lt;/b&gt; de Perl documentado en &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches en perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4987e0746709787de44b276c954d3dc160982cc" translate="yes" xml:space="preserve">
          <source>It is possible to intermix print()s with write()s on the same output channel, but you'll have to handle &lt;code&gt;$-&lt;/code&gt; (&lt;code&gt;$FORMAT_LINES_LEFT&lt;/code&gt; ) yourself.</source>
          <target state="translated">Es posible entremezclar print () s con write () s en el mismo canal de salida, pero tendr&amp;aacute;s que manejar &lt;code&gt;$-&lt;/code&gt; ( &lt;code&gt;$FORMAT_LINES_LEFT&lt;/code&gt; ) t&amp;uacute; mismo.</target>
        </trans-unit>
        <trans-unit id="8fe4bd11a84db5fbf18822129f597065dac28979" translate="yes" xml:space="preserve">
          <source>It is possible to make &lt;code&gt;NEXT&lt;/code&gt; redispatch more demandingly (i.e. like &lt;code&gt;SUPER&lt;/code&gt; does), so that the redispatch throws an exception if it cannot find a &quot;next&quot; method to call.</source>
          <target state="translated">Es posible hacer que &lt;code&gt;NEXT&lt;/code&gt; redispatch sea m&amp;aacute;s exigente (es decir, como hace &lt;code&gt;SUPER&lt;/code&gt; ), de modo que el redispatch arroje una excepci&amp;oacute;n si no puede encontrar un m&amp;eacute;todo &quot;siguiente&quot; para llamar.</target>
        </trans-unit>
        <trans-unit id="41c5e618b60091d8c922ad7e0e5ebbcfaa2cb4df" translate="yes" xml:space="preserve">
          <source>It is possible to manually set &lt;code&gt;@ISA&lt;/code&gt; , and you may see this in older Perl code. Much older code also uses the &lt;a href=&quot;base&quot;&gt;base&lt;/a&gt; pragma. For new code, we recommend that you use the &lt;a href=&quot;parent&quot;&gt;parent&lt;/a&gt; pragma to declare your parents. This pragma will take care of setting &lt;code&gt;@ISA&lt;/code&gt; . It will also load the parent classes and make sure that the package doesn't inherit from itself.</source>
          <target state="translated">Es posible configurar &lt;code&gt;@ISA&lt;/code&gt; manualmente , y es posible que vea esto en el c&amp;oacute;digo Perl anterior. El c&amp;oacute;digo mucho m&amp;aacute;s antiguo tambi&amp;eacute;n usa el pragma &lt;a href=&quot;base&quot;&gt;base&lt;/a&gt; . Para el c&amp;oacute;digo nuevo, le recomendamos que utilice el pragma &lt;a href=&quot;parent&quot;&gt;principal&lt;/a&gt; para declarar a sus padres. Este pragma se encargar&amp;aacute; de configurar &lt;code&gt;@ISA&lt;/code&gt; . Tambi&amp;eacute;n cargar&amp;aacute; las clases principales y se asegurar&amp;aacute; de que el paquete no se herede de s&amp;iacute; mismo.</target>
        </trans-unit>
        <trans-unit id="0bf520fb97ddb7d66d056d630c6c0c7c679c7af2" translate="yes" xml:space="preserve">
          <source>It is possible to omit some or all of the final 4 parameters in the call to &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; and let them take default values. As DB_HASH is the most common file format used, the call:</source>
          <target state="translated">Es posible omitir algunos o todos los 4 par&amp;aacute;metros finales en la llamada a &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; y dejar que tomen los valores predeterminados. Como DB_HASH es el formato de archivo m&amp;aacute;s utilizado, la llamada:</target>
        </trans-unit>
        <trans-unit id="03c72d0292032af6dedc904ed64f2438fc661321" translate="yes" xml:space="preserve">
          <source>It is possible to provide aliases that will be displayed in place of the test name by supplying the test as a reference to an array containing &lt;code&gt;[ $test, $alias ]&lt;/code&gt; :</source>
          <target state="translated">Es posible proporcionar alias que se mostrar&amp;aacute;n en lugar del nombre de la prueba proporcionando la prueba como una referencia a una matriz que contiene &lt;code&gt;[ $test, $alias ]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="25625bc71a3769321141057e7fb45e78f8f3581c" translate="yes" xml:space="preserve">
          <source>It is possible to replace such an alphanumeric name with an expression that returns a reference to the appropriate type. For a description of this, see &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">Es posible reemplazar dicho nombre alfanum&amp;eacute;rico con una expresi&amp;oacute;n que devuelva una referencia al tipo apropiado. Para obtener una descripci&amp;oacute;n de esto, consulte &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f8a33f0d5f0df1acec3703c5fa0463900e9dcf6" translate="yes" xml:space="preserve">
          <source>It is possible to return a modifiable value from a subroutine. To do this, you have to declare the subroutine to return an lvalue.</source>
          <target state="translated">Es posible devolver un valor modificable de una subrutina.Para ello,hay que declarar la subrutina para devolver un valor l.</target>
        </trans-unit>
        <trans-unit id="deb2736fd66852d74a632f14d09ceb41fcda537d" translate="yes" xml:space="preserve">
          <source>It is possible to stack multiple here-docs in a row:</source>
          <target state="translated">Es posible apilar varios doctores aquí en una fila:</target>
        </trans-unit>
        <trans-unit id="3f9957642dc32b5a7c0c0eefbd7b6c39d5efef50" translate="yes" xml:space="preserve">
          <source>It is possible to strip the EXEs and DLLs created by the build process. The resulting binaries will be significantly smaller. If you want the binaries to be stripped, you can either add a &lt;b&gt;-s&lt;/b&gt; option when Configure prompts you,</source>
          <target state="translated">Es posible eliminar los archivos EXE y DLL creados por el proceso de compilaci&amp;oacute;n. Los binarios resultantes ser&amp;aacute;n significativamente m&amp;aacute;s peque&amp;ntilde;os. Si desea eliminar los archivos binarios, puede agregar una opci&amp;oacute;n &lt;b&gt;-s&lt;/b&gt; cuando Configurar le solicite,</target>
        </trans-unit>
        <trans-unit id="0ddc0840c422187183750aec88a33c70a57206b1" translate="yes" xml:space="preserve">
          <source>It is possible to supply arguments to tests. To do so separate them from prove's own arguments with the arisdottle, '::'. For example</source>
          <target state="translated">Es posible suministrar argumentos a las pruebas.Para hacerlo,sepárelos de los argumentos de las pruebas con el arisdottle.Por ejemplo</target>
        </trans-unit>
        <trans-unit id="aa6e659dc24039769282bd1c1079f9c11cd8c6ba" translate="yes" xml:space="preserve">
          <source>It is possible to write custom layers in addition to the above builtin ones, both in C/XS and Perl. Two such layers (and one example written in Perl using the latter) come with the Perl distribution.</source>
          <target state="translated">Es posible escribir capas personalizadas además de las anteriores,tanto en C/XS como en Perl.Dos de estas capas (y un ejemplo escrito en Perl usando este último)vienen con la distribución Perl.</target>
        </trans-unit>
        <trans-unit id="af11e539efd7b5740f9d5c0eba044f8aebf92a4a" translate="yes" xml:space="preserve">
          <source>It is possible to write:</source>
          <target state="translated">Se puede escribir:</target>
        </trans-unit>
        <trans-unit id="0b89c8d09aeaea53d5ae118db445020ec34e8b36" translate="yes" xml:space="preserve">
          <source>It is probably useful only when combined with &lt;code&gt;(?{})&lt;/code&gt; or &lt;code&gt;(??{})&lt;/code&gt; .</source>
          <target state="translated">Probablemente sea &amp;uacute;til solo cuando se combina con &lt;code&gt;(?{})&lt;/code&gt; O &lt;code&gt;(??{})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf00d26aa745eb3ee05b04278f9eed1956a14d27" translate="yes" xml:space="preserve">
          <source>It is proposed to change this behavior in a future release of Perl so that whether or not Unicode rules are in effect would not change the behavior: Outside of locale, the POSIX classes would behave like their ASCII-range counterparts. If you wish to comment on this proposal, send email to &lt;code&gt;perl5-porters@perl.org&lt;/code&gt; .</source>
          <target state="translated">Se propone cambiar este comportamiento en una versi&amp;oacute;n futura de Perl para que si las reglas Unicode est&amp;eacute;n o no en vigor no cambiar&amp;iacute;a el comportamiento: Fuera de la configuraci&amp;oacute;n regional, las clases POSIX se comportar&amp;iacute;an como sus contrapartes del rango ASCII. Si desea comentar sobre esta propuesta, env&amp;iacute;e un correo electr&amp;oacute;nico a &lt;code&gt;perl5-porters@perl.org&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6c7a14017f055e8f9bd10d510eabf5bf071a9ca" translate="yes" xml:space="preserve">
          <source>It is recommended that for this usage you put the DEFINE block at the end of the pattern, and that you name any subpatterns defined within it.</source>
          <target state="translated">Se recomienda que para este uso se ponga el bloque DEFINE al final del patrón,y que se nombre cualquier subpatrón definido dentro de él.</target>
        </trans-unit>
        <trans-unit id="b57d669e4107366ea65426a960e0887b522f0627" translate="yes" xml:space="preserve">
          <source>It is recommended that you enable this option unless you really need to create a non-standard Zip file.</source>
          <target state="translated">Se recomienda habilitar esta opción a menos que realmente necesite crear un archivo Zip no estándar.</target>
        </trans-unit>
        <trans-unit id="fe9f6b9b410e95d779e30fb9ae34ddfb1f7f1185" translate="yes" xml:space="preserve">
          <source>It is reported that the following archives contain enough utils to build perl:</source>
          <target state="translated">Se informa de que los siguientes archivos contienen suficientes utilidades para construir perl:</target>
        </trans-unit>
        <trans-unit id="eb8af118e1b3c0f503fae4e488d7355647e3de10" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that applications using Opcode should use a leading capital letter on their tag names since lowercase names are reserved for use by the Opcode module. If using Opcode within a module you should prefix your tags names with the name of your module to ensure uniqueness and thus avoid clashes with other modules.</source>
          <target state="translated">Se recomienda encarecidamente que las aplicaciones que utilizan Opcode utilicen una letra mayúscula inicial en sus nombres de etiqueta,ya que los nombres en minúscula se reservan para el uso del módulo Opcode.Si se utiliza Opcode dentro de un módulo,se debe anteponer a los nombres de las etiquetas el nombre del módulo para garantizar la singularidad y evitar así conflictos con otros módulos.</target>
        </trans-unit>
        <trans-unit id="2739f66ac90ce9cc53c7717d098a81a175c0dbe7" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that you enable threads via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; as early as possible in your script.</source>
          <target state="translated">Se recomienda encarecidamente que habilite los subprocesos mediante el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; lo antes posible en su secuencia de comandos.</target>
        </trans-unit>
        <trans-unit id="23330295b88e2dfe22f823906399d30b69678a8c" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that you use this flag when you run Configure. If you do not do this, but later answer the question about large files when Configure asks you, you may get a configuration that cannot be compiled, or that does not function as expected.</source>
          <target state="translated">Se recomienda encarecidamente que utilice esta bandera cuando ejecute Configurar.Si no lo hace,pero más tarde responde a la pregunta sobre archivos grandes cuando Configure se lo pida,puede obtener una configuración que no se puede compilar,o que no funciona como se espera.</target>
        </trans-unit>
        <trans-unit id="d4398ad9975e0145dd25fc7bc9a7058eb6696304" translate="yes" xml:space="preserve">
          <source>It is suggested that you enable the version of malloc that is distributed with Perl. It keeps pools of various sizes of unallocated memory in order to satisfy allocation requests more quickly. However, on some platforms, it may cause spurious malloc or free errors.</source>
          <target state="translated">Se sugiere que habilite la versión de malloc que se distribuye con Perl.Mantiene grupos de varios tamaños de memoria no asignada para satisfacer las solicitudes de asignación más rápidamente.Sin embargo,en algunas plataformas,puede causar un malloc espurio o errores libres.</target>
        </trans-unit>
        <trans-unit id="09d04d7278d56b78f672ffa08fd362fe3b4bb9cb" translate="yes" xml:space="preserve">
          <source>It is the appropriate method to use if you need to get the name of a lexical variable from a padname array. Lexical variable names are always stored with a null terminator, and the length field (CUR) is overloaded for other purposes and can't be relied on here.</source>
          <target state="translated">Es el método apropiado para usar si necesitas obtener el nombre de una variable léxica de un padname array.Los nombres de las variables léxicas siempre se almacenan con un terminador nulo,y el campo de longitud (CUR)está sobrecargado para otros propósitos y no se puede confiar en él.</target>
        </trans-unit>
        <trans-unit id="6f04d78fbcc86fbb7196577b1692934e2955d725" translate="yes" xml:space="preserve">
          <source>It is therefore strongly recommended that these macros be used by all XS modules that make use of static data.</source>
          <target state="translated">Por lo tanto,se recomienda encarecidamente que estos macros sean utilizados por todos los módulos XS que hacen uso de datos estáticos.</target>
        </trans-unit>
        <trans-unit id="6ddce18b6b5d6c4ef9a5cf7c34f05793b72112fd" translate="yes" xml:space="preserve">
          <source>It is typically used to add extra directories to perl's search path so that later &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; statements will find modules which are not located on perl's default search path.</source>
          <target state="translated">Por lo general, se usa para agregar directorios adicionales a la ruta de b&amp;uacute;squeda de perl, de modo que las declaraciones de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; posteriores encuentren m&amp;oacute;dulos que no se encuentran en la ruta de b&amp;uacute;squeda predeterminada de perl.</target>
        </trans-unit>
        <trans-unit id="1a7559da192e0561816f87fb94aa112a7e9ecc6d" translate="yes" xml:space="preserve">
          <source>It is up to individual Pod formatter to display good judgement when confronted with an unrenderable character (which is distinct from an unknown E&amp;lt;thing&amp;gt; sequence that the parser couldn't resolve to anything, renderable or not). It is good practice to map Latin letters with diacritics (like &quot;E&amp;lt;eacute&amp;gt;&quot;/&quot;E&amp;lt;233&amp;gt;&quot;) to the corresponding unaccented US-ASCII letters (like a simple character 101, &quot;e&quot;), but clearly this is often not feasible, and an unrenderable character may be represented as &quot;?&quot;, or the like. In attempting a sane fallback (as from E&amp;lt;233&amp;gt; to &quot;e&quot;), Pod formatters may use the %Latin1Code_to_fallback table in &lt;a href=&quot;pod/escapes&quot;&gt;Pod::Escapes&lt;/a&gt;, or &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Unidecode&quot;&gt;Text::Unidecode&lt;/a&gt;, if available.</source>
          <target state="translated">Depende del formateador de Pod individual mostrar buen juicio cuando se enfrenta a un car&amp;aacute;cter no reproducible (que es distinto de una secuencia E &amp;lt;thing&amp;gt; desconocida que el analizador no pudo resolver en nada, renderizable o no). Es una buena pr&amp;aacute;ctica mapear letras latinas con diacr&amp;iacute;ticos (como &quot;E &amp;lt;eacute&amp;gt;&quot; / &quot;E &amp;lt;233&amp;gt;&quot;) a las correspondientes letras US-ASCII sin acento (como un car&amp;aacute;cter simple 101, &quot;e&quot;), pero claramente esto es a menudo no es factible, y un car&amp;aacute;cter no reproducible puede representarse como &quot;?&quot;, o similar. Al intentar una alternativa sensata (desde E &amp;lt;233&amp;gt; hasta &quot;e&quot;), los formateadores de pod pueden usar la tabla% Latin1Code_to_fallback en &lt;a href=&quot;pod/escapes&quot;&gt;Pod :: Escapes&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Unidecode&quot;&gt;Text :: Unidecode&lt;/a&gt; , si est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="d3fe171c1e178608bc5f92e9c9efc16598ce4a39" translate="yes" xml:space="preserve">
          <source>It is up to you to use this information to populate</source>
          <target state="translated">Depende de ti usar esta información para poblar</target>
        </trans-unit>
        <trans-unit id="ce530e54cb38df50f2b9795b42ad1b0802239f94" translate="yes" xml:space="preserve">
          <source>It is usual to pass parameters using global variables (typically $_ for one parameter, or $a and $b for two parameters) rather than via @_. (It is possible to use the @_ mechanism if you know what you're doing, though there is as yet no supported API for it. It's also inherently slower.)</source>
          <target state="translated">Es habitual pasar los parámetros utilizando variables globales (típicamente $_para un parámetro,o $a y $b para dos parámetros)en lugar de a través de @_.(Es posible usar el mecanismo @_si sabes lo que estás haciendo,aunque todavía no hay una API soportada para ello.También es inherentemente más lento).</target>
        </trans-unit>
        <trans-unit id="69c5d14186ab57b1e0629e917b8215f824fb1b8c" translate="yes" xml:space="preserve">
          <source>It is usually a mistake to intermix &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; calls, because &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; may be internally implemented on your system with &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Por lo general, es un error mezclar las llamadas de &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a y de &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , porque la &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; puede implementarse internamente en su sistema con &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="18d1691040dfd4fd0aeb2ca9801dad0c1249aa8e" translate="yes" xml:space="preserve">
          <source>It is usually a mistake to intermix &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; calls, because &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; may be internally implemented on your system with &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Por lo general, es un error mezclar las llamadas de &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a y de &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , porque la &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; puede implementarse internamente en su sistema con &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="f94317c7d8a68b955ef8fad7379f1f684a3e243d" translate="yes" xml:space="preserve">
          <source>It is usually impossible to add new syntax to Perl without breaking some existing programs. This pragma provides a way to minimize that risk. New syntactic constructs, or new semantic meanings to older constructs, can be enabled by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'foo'&lt;/code&gt; , and will be parsed only when the appropriate feature pragma is in scope. (Nevertheless, the &lt;code&gt;CORE::&lt;/code&gt; prefix provides access to all Perl keywords, regardless of this pragma.)</source>
          <target state="translated">Por lo general, es imposible agregar una nueva sintaxis a Perl sin romper algunos programas existentes. Este pragma proporciona una forma de minimizar ese riesgo. Se pueden habilitar nuevas construcciones sint&amp;aacute;cticas, o nuevos significados sem&amp;aacute;nticos para construcciones m&amp;aacute;s antiguas, mediante el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'foo'&lt;/code&gt; , y se analizar&amp;aacute;n solo cuando el pragma de caracter&amp;iacute;sticas apropiado est&amp;eacute; dentro del alcance. (Sin embargo, el prefijo &lt;code&gt;CORE::&lt;/code&gt; proporciona acceso a todas las palabras clave de Perl, independientemente de este pragma).</target>
        </trans-unit>
        <trans-unit id="60c64d5138091e34ac4e66a3176bc2904d419a6d" translate="yes" xml:space="preserve">
          <source>It is very common when filtering source to only want to apply the filter to the non-character-string parts of the code, or alternatively to</source>
          <target state="translated">Es muy común,cuando se filtra la fuente,querer aplicar el filtro sólo a las partes del código que no son cadenas de caracteres,o alternativamente a</target>
        </trans-unit>
        <trans-unit id="7df1696685d7983c694bb3c5409a0395bf0e003f" translate="yes" xml:space="preserve">
          <source>It is very easy to dead-lock a process using this form of open(), or indeed with any use of pipe() with multiple subprocesses. The example above is &quot;safe&quot; because it is simple and calls exec(). See &lt;a href=&quot;#Avoiding-Pipe-Deadlocks&quot;&gt;Avoiding Pipe Deadlocks&lt;/a&gt; for general safety principles, but there are extra gotchas with Safe Pipe Opens.</source>
          <target state="translated">Es muy f&amp;aacute;cil bloquear un proceso usando esta forma de open (), o de hecho con cualquier uso de pipe () con m&amp;uacute;ltiples subprocesos. El ejemplo anterior es &quot;seguro&quot; porque es simple y llama a exec (). Consulte &lt;a href=&quot;#Avoiding-Pipe-Deadlocks&quot;&gt;Evitar los puntos muertos de las tuber&amp;iacute;as&lt;/a&gt; para conocer los principios generales de seguridad, pero existen trampas adicionales con las aperturas seguras de tuber&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="1f2733d85a83af59b86ea7ca3eeb7a8a21d68e5a" translate="yes" xml:space="preserve">
          <source>It is very easy to get tripped up using a mixture of other programs, external utilities, and Perl scripts that are in varying states of being able to handle case preservation. For example, a file created by an older version of an archive utility or a build utility such as MMK or MMS may generate a filename in all upper case even on an ODS-5 volume. If this filename is later retrieved by a Perl script or module in a case preserving environment, that upper case name may not match the mixed-case or lower-case expectations of the Perl code. Your best bet is to follow an all-or-nothing approach to case preservation: either don't use it at all, or make sure your entire toolchain and application environment support and use it.</source>
          <target state="translated">Es muy fácil tropezar con una mezcla de otros programas,utilidades externas y scripts Perl que se encuentran en diferentes estados de poder manejar la preservación de casos.Por ejemplo,un archivo creado por una versión antigua de una utilidad de archivo o una utilidad de compilación como MMK o MMS puede generar un nombre de archivo en mayúsculas incluso en un volumen ODS-5.Si este nombre de archivo se recupera posteriormente mediante un script o módulo Perl en un entorno de preservación de mayúsculas y minúsculas,es posible que ese nombre de archivo no coincida con las expectativas de mayúsculas o minúsculas del código Perl.Su mejor apuesta es seguir un enfoque de todo o nada para la preservación de casos:o bien no lo usa en absoluto,o bien se asegura de que toda su cadena de herramientas y su entorno de aplicación lo soportan y lo usan.</target>
        </trans-unit>
        <trans-unit id="1057ac1e814cd9a3566a8fed96cf94293953ec7a" translate="yes" xml:space="preserve">
          <source>It is very easy to recover the source of Perl programs. You simply feed the program to the perl interpreter and use the modules in the B:: hierarchy. The B::Deparse module should be able to defeat most attempts to hide source. Again, this is not unique to Perl.</source>
          <target state="translated">Es muy fácil recuperar la fuente de los programas Perl.Simplemente se alimenta el programa al intérprete de perl y se usan los módulos de la jerarquía B::.El módulo B::Deparse debería ser capaz de derrotar la mayoría de los intentos de ocultar la fuente.De nuevo,esto no es exclusivo de Perl.</target>
        </trans-unit>
        <trans-unit id="d5b6f5cbb4ab2d2416457262d0018311cb6ac8d2" translate="yes" xml:space="preserve">
          <source>It is very possible that this document will fall far short of being useful to the casual reader. The reader is expected to understand the material in the first few sections of &lt;a href=&quot;../perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">Es muy posible que este documento no sea &amp;uacute;til para el lector casual. Se espera que el lector comprenda el material de las primeras secciones de &lt;a href=&quot;../perlguts&quot;&gt;perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5424072f53b20136acc827f23a7b8403963d2596" translate="yes" xml:space="preserve">
          <source>It is worth drawing particular attention to the expected ranges for the values provided. The value for the day of the month is the actual day (ie 1..31), while the month is the number of months since January (0..11). This is consistent with the values returned from &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Vale la pena prestar especial atenci&amp;oacute;n a los rangos esperados para los valores proporcionados. El valor del d&amp;iacute;a del mes es el d&amp;iacute;a real (es decir, 1..31), mientras que el mes es el n&amp;uacute;mero de meses desde enero (0..11). Esto es consistente con los valores devueltos por &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c12cfe0a130e1abce3e789227eb445dc3d70c311" translate="yes" xml:space="preserve">
          <source>It is worth emphasizing that &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; , etc, match single characters, not complete numbers or words. To match a number (that consists of digits), use &lt;code&gt;\d+&lt;/code&gt; ; to match a word, use &lt;code&gt;\w+&lt;/code&gt; . But be aware of the security considerations in doing so, as mentioned above.</source>
          <target state="translated">Vale la pena enfatizar que &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\w&lt;/code&gt; , etc., coinciden con caracteres individuales, no con n&amp;uacute;meros completos o palabras. Para hacer coincidir un n&amp;uacute;mero (que consta de d&amp;iacute;gitos), use &lt;code&gt;\d+&lt;/code&gt; ; para hacer coincidir una palabra, use &lt;code&gt;\w+&lt;/code&gt; . Pero tenga en cuenta las consideraciones de seguridad al hacerlo, como se mencion&amp;oacute; anteriormente.</target>
        </trans-unit>
        <trans-unit id="78ab6d3ec3a28b829b407073297587d950173f49" translate="yes" xml:space="preserve">
          <source>It is worth noting that &lt;code&gt;\G&lt;/code&gt; improperly used can result in an infinite loop. Take care when using patterns that include &lt;code&gt;\G&lt;/code&gt; in an alternation.</source>
          <target state="translated">Vale la pena se&amp;ntilde;alar que &lt;code&gt;\G&lt;/code&gt; usado incorrectamente puede resultar en un bucle infinito. Tenga cuidado cuando utilice patrones que incluyan &lt;code&gt;\G&lt;/code&gt; en alternancia.</target>
        </trans-unit>
        <trans-unit id="db9514e6a01f9d85b4ef7b0e350a06b34e756aba" translate="yes" xml:space="preserve">
          <source>It is worth stressing that there are several different sets of digits in Unicode that are equivalent to 0-9 and are matchable by &lt;code&gt;\d&lt;/code&gt; in a regular expression. If they are used in a single language only, they are in that language's &lt;code&gt;Script&lt;/code&gt; and &lt;code&gt;Script_Extension&lt;/code&gt; . If they are used in more than one script, they will be in &lt;code&gt;sc=Common&lt;/code&gt; , but only if they are used in many scripts should they be in &lt;code&gt;scx=Common&lt;/code&gt; .</source>
          <target state="translated">Vale la pena enfatizar que hay varios conjuntos diferentes de d&amp;iacute;gitos en Unicode que son equivalentes a 0-9 y pueden coincidir con &lt;code&gt;\d&lt;/code&gt; en una expresi&amp;oacute;n regular. Si se utilizan en un solo idioma, se encuentran en &lt;code&gt;Script&lt;/code&gt; y &lt;code&gt;Script_Extension&lt;/code&gt; de ese idioma . Si se utilizan en m&amp;aacute;s de un script, estar&amp;aacute;n en &lt;code&gt;sc=Common&lt;/code&gt; , pero solo si se utilizan en muchos scripts deben estar en &lt;code&gt;scx=Common&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb73a60f536c984fec748fd56250217ac857070f" translate="yes" xml:space="preserve">
          <source>It is, after all, just a guess. You should alway be explicit when it comes to encodings. But there are some, especially Japanese, environment that guess-coding is a must. Use this module with care.</source>
          <target state="translated">Es,después de todo,sólo una suposición.Siempre debes ser explícito cuando se trata de codificaciones.Pero hay algunos,especialmente los japoneses,que la codificación de conjeturas es una necesidad.Usa este módulo con cuidado.</target>
        </trans-unit>
        <trans-unit id="b1fd4c29544df6031e0c7f381c345fa955c2ddef" translate="yes" xml:space="preserve">
          <source>It is, however, very simple, pure Perl, and it has no non-core dependencies. It also provides a &quot;Moose-like&quot; API on demand for the features it supports.</source>
          <target state="translated">Sin embargo,es muy simple,puro Perl,y no tiene dependencias secundarias.También proporciona una API &quot;parecida a la de Moose&quot; a petición de las características que soporta.</target>
        </trans-unit>
        <trans-unit id="358ba9c90802ce677d93df629a1697c0599e5843" translate="yes" xml:space="preserve">
          <source>It isn't possible to create a true reference to an IO handle (filehandle or dirhandle) using the backslash operator. The most you can get is a reference to a typeglob, which is actually a complete symbol table entry. But see the explanation of the &lt;code&gt;*foo{THING}&lt;/code&gt; syntax below. However, you can still use type globs and globrefs as though they were IO handles.</source>
          <target state="translated">No es posible crear una referencia verdadera a un identificador de E / S (identificador de archivo o identificador de directorio) usando el operador de barra invertida. Lo m&amp;aacute;ximo que puede obtener es una referencia a un typeglob, que en realidad es una entrada completa de la tabla de s&amp;iacute;mbolos. Pero vea la explicaci&amp;oacute;n de la sintaxis &lt;code&gt;*foo{THING}&lt;/code&gt; continuaci&amp;oacute;n. Sin embargo, a&amp;uacute;n puede usar type globs y globrefs como si fueran identificadores de IO.</target>
        </trans-unit>
        <trans-unit id="be4ec9fbbf231e40204d7019d3f997c286ceaaf0" translate="yes" xml:space="preserve">
          <source>It lets by &lt;code&gt;$(...)&lt;/code&gt;.</source>
          <target state="translated">Deja por &lt;code&gt;$(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1272cce995365257b29707c07e056e98c158a0d6" translate="yes" xml:space="preserve">
          <source>It may also be useful to create a batch file called lib.bat in C:\Program Files\Microsoft Visual C++ Toolkit 2003\bin containing:</source>
          <target state="translated">También puede ser útil crear un archivo por lotes llamado lib.bat en C:\N-Archivos de Programa\N-Microsoft Visual C++Toolkit 2003\Nque contiene:</target>
        </trans-unit>
        <trans-unit id="c3ee59300b49b89fa621ccf66f9ee189105bf2cd" translate="yes" xml:space="preserve">
          <source>It may also indicate a misspelled constant that has been interpreted as a bareword:</source>
          <target state="translated">También puede indicar una constante mal escrita que ha sido interpretada como una palabra clave:</target>
        </trans-unit>
        <trans-unit id="3d71937f4e01c4691f8ad6115319d1b1a1cc17dc" translate="yes" xml:space="preserve">
          <source>It may be handy to add a function or method to retrieve the number. Use the number in announcements and archive file names when releasing the module (ModuleName-1.02.tar.Z). See perldoc ExtUtils::MakeMaker.pm for details.</source>
          <target state="translated">Puede ser útil añadir una función o un método para recuperar el número.Usar el número en los anuncios y los nombres de los archivos cuando se libere el módulo (ModuleName-1.02.tar.Z).Ver perldoc ExtUtils::MakeMaker.pm para más detalles.</target>
        </trans-unit>
        <trans-unit id="4aba7fcd954a7d79c58b4c5db5fcca156f49cb64" translate="yes" xml:space="preserve">
          <source>It may be helpful to always use the forked debugger so that script I/O is separated from debugger I/O. You can force the debugger to be forked by assigning a value to the logical name &amp;lt;PERLDB_PIDS&amp;gt; that is not a process identification number.</source>
          <target state="translated">Puede resultar &amp;uacute;til utilizar siempre el depurador bifurcado para que la E / S del script est&amp;eacute; separada de la E / S del depurador. Puede forzar la bifurcaci&amp;oacute;n del depurador asignando un valor al nombre l&amp;oacute;gico &amp;lt;PERLDB_PIDS&amp;gt; que no sea un n&amp;uacute;mero de identificaci&amp;oacute;n de proceso.</target>
        </trans-unit>
        <trans-unit id="9cf5a525be6e13a9a7b1dd1dbd184cb474cd50ab" translate="yes" xml:space="preserve">
          <source>It may be more portable to use the &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt; module instead. You just copy to the new file to the new name (checking return values), then delete the old one. This isn't really the same semantically as a &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt;, which preserves meta-information like permissions, timestamps, inode info, etc.</source>
          <target state="translated">En su lugar, puede ser m&amp;aacute;s port&amp;aacute;til usar el m&amp;oacute;dulo &lt;a href=&quot;file/copy&quot;&gt;File :: Copy&lt;/a&gt; . Simplemente copie al nuevo archivo con el nuevo nombre (verificando los valores de retorno), luego elimine el anterior. Esto no es realmente lo mismo sem&amp;aacute;nticamente que un &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; , que conserva la metainformaci&amp;oacute;n como permisos, marcas de tiempo, informaci&amp;oacute;n de inodo, etc.</target>
        </trans-unit>
        <trans-unit id="db6d5d1cd198cf53911efce9b9d95d5989e30fc0" translate="yes" xml:space="preserve">
          <source>It may be possible to code a simple workaround which would</source>
          <target state="translated">Puede ser posible codificar una simple solución alternativa que</target>
        </trans-unit>
        <trans-unit id="2d1547ff72328148f73028b4bf53e65cca15e95b" translate="yes" xml:space="preserve">
          <source>It may be possible to use the Entropy Gathering Daemon (written in Perl!), available from &lt;a href=&quot;http://www.lothar.com/tech/crypto/&quot;&gt;http://www.lothar.com/tech/crypto/&lt;/a&gt;.</source>
          <target state="translated">Es posible utilizar el demonio de recopilaci&amp;oacute;n de entrop&amp;iacute;a (escrito en Perl), disponible en &lt;a href=&quot;http://www.lothar.com/tech/crypto/&quot;&gt;http://www.lothar.com/tech/crypto/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea7e33e821e865ae246a0ffae0bdba930182de6b" translate="yes" xml:space="preserve">
          <source>It may seem obvious to say, but Perl is useful only when users can easily find it. When possible, it's good for both</source>
          <target state="translated">Puede parecer obvio decirlo,pero el Perl es útil sólo cuando los usuarios pueden encontrarlo fácilmente.Cuando es posible,es bueno para ambos</target>
        </trans-unit>
        <trans-unit id="fd3430c5befbd819886aa0fff01863d985392126" translate="yes" xml:space="preserve">
          <source>It might conceivably chdir() you out of a directory that it can't chdir() you back into. If fastcwd encounters a problem it will return undef but will probably leave you in a different directory. For a measure of extra security, if everything appears to have worked, the fastcwd() function will check that it leaves you in the same directory that it started in. If it has changed it will &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; with the message &quot;Unstable directory path, current directory changed unexpectedly&quot;. That should never happen.</source>
          <target state="translated">Es posible que le haga chdir () fuera de un directorio en el que no pueda volver a entrar con chdir (). Si fastcwd encuentra un problema, devolver&amp;aacute; undef pero probablemente lo dejar&amp;aacute; en un directorio diferente. Para una medida de seguridad adicional, si todo parece haber funcionado, la funci&amp;oacute;n fastcwd () verificar&amp;aacute; que lo deja en el mismo directorio en el que comenz&amp;oacute;. Si ha cambiado, &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; con el mensaje &quot;Ruta de directorio inestable, actual directorio cambiado inesperadamente &quot;. Eso nunca deber&amp;iacute;a suceder.</target>
        </trans-unit>
        <trans-unit id="106694ead18b1135cc07d2ae597d50b20a4d8af6" translate="yes" xml:space="preserve">
          <source>It must be stressed that the DynaLoader, by itself, is practically useless for accessing non-Perl libraries because it provides almost no Perl-to-C 'glue'. There is, for example, no mechanism for calling a C library function or supplying arguments. A C::DynaLib module is available from CPAN sites which performs that function for some common system types. And since the year 2000, there's also Inline::C, a module that allows you to write Perl subroutines in C. Also available from your local CPAN site.</source>
          <target state="translated">Hay que destacar que el DynaLoader,por sí mismo,es prácticamente inútil para acceder a las bibliotecas que no son de Perl porque casi no proporciona &quot;pegamento&quot; de Perl a C.No hay,por ejemplo,ningún mecanismo para llamar a una función de la biblioteca C o suministrar argumentos.Un módulo C::DynaLib está disponible en los sitios de CPAN que realiza esa función para algunos tipos de sistemas comunes.Y desde el año 2000,también hay Inline::C,un módulo que permite escribir subrutinas Perl en C.También disponible en su sitio CPAN local.</target>
        </trans-unit>
        <trans-unit id="04aa081b59ff3888239972218e3f56b3b6581f1f" translate="yes" xml:space="preserve">
          <source>It particular, it's important to &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;ize $_ in any routine that assigns to it. Look out for implicit assignments in &lt;code&gt;while&lt;/code&gt; conditionals.</source>
          <target state="translated">Es en particular, es importante &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; es ize $ _ en cualquier rutina que se le asigna. Busque asignaciones impl&amp;iacute;citas en condicionales &lt;code&gt;while&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd14db27f979e38e1e8d4c1576f9b693597877fa" translate="yes" xml:space="preserve">
          <source>It performs the following actions:</source>
          <target state="translated">Realiza las siguientes acciones:</target>
        </trans-unit>
        <trans-unit id="3a77cf9922a9fef0374667dd7650f3414798d318" translate="yes" xml:space="preserve">
          <source>It prints (without so many line breaks)</source>
          <target state="translated">Se imprime (sin tantos saltos de línea)</target>
        </trans-unit>
        <trans-unit id="f4bd0cc34b746267dc944192fe3c01787ec4e363" translate="yes" xml:space="preserve">
          <source>It prints both quotient and remainder since print calls &lt;code&gt;bdiv()&lt;/code&gt; in list context. Also, &lt;code&gt;bdiv()&lt;/code&gt; will modify $c, so be careful. You probably want to use</source>
          <target state="translated">Imprime tanto el cociente como el resto ya que print llama a &lt;code&gt;bdiv()&lt;/code&gt; en el contexto de lista. Adem&amp;aacute;s, &lt;code&gt;bdiv()&lt;/code&gt; modificar&amp;aacute; $ c, as&amp;iacute; que tenga cuidado. Probablemente quieras usar</target>
        </trans-unit>
        <trans-unit id="eeeedb6aa3743486c6e5b956ff78abba71960946" translate="yes" xml:space="preserve">
          <source>It prints both quotient and remainder since print works in list context. Also, bdiv() will modify $c, so be careful. You probably want to use</source>
          <target state="translated">Imprime tanto el cociente como el resto,ya que la impresión funciona en el contexto de la lista.Además,bdiv()modificará $c,así que ten cuidado.Probablemente quieras usar</target>
        </trans-unit>
        <trans-unit id="f734db0d61221ca40b0fe2bebce3caa4e0b18089" translate="yes" xml:space="preserve">
          <source>It prints both quotient and remainder, since print calls &lt;code&gt;brsft()&lt;/code&gt; in list context. Also, &lt;code&gt;$c-&amp;gt;brsft()&lt;/code&gt; will modify $c, so be careful. You probably want to use</source>
          <target state="translated">Imprime tanto el cociente como el resto, ya que print llama a &lt;code&gt;brsft()&lt;/code&gt; en el contexto de lista. Adem&amp;aacute;s, &lt;code&gt;$c-&amp;gt;brsft()&lt;/code&gt; modificar&amp;aacute; $ c, as&amp;iacute; que tenga cuidado. Probablemente quieras usar</target>
        </trans-unit>
        <trans-unit id="ce7853179bda4d7415dfcdbc4fb24a48d915ca39" translate="yes" xml:space="preserve">
          <source>It prints both the number of digits in the number and in the fraction part since print calls &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; in list context. Use something like:</source>
          <target state="translated">Imprime tanto el n&amp;uacute;mero de d&amp;iacute;gitos en el n&amp;uacute;mero como en la parte de la fracci&amp;oacute;n, ya que la impresi&amp;oacute;n llama a &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; en el contexto de lista. Usa algo como:</target>
        </trans-unit>
        <trans-unit id="29cdbd5e538c2f505e08e3d1eef02e06fd63d99d" translate="yes" xml:space="preserve">
          <source>It prints the sequence number of each subroutine call and the name of the called subroutine. Note that &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; is being compiled into the package &lt;code&gt;DB&lt;/code&gt; through the use of the &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">Imprime el n&amp;uacute;mero de secuencia de cada llamada de subrutina y el nombre de la subrutina llamada. Tenga en cuenta que &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; se est&amp;aacute; compilando en el paquete &lt;code&gt;DB&lt;/code&gt; mediante el uso de la directiva del &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eb15b033b8c4d79b1e008f6b581eebb8e9cf4d5" translate="yes" xml:space="preserve">
          <source>It provides a number of mechanisms for querying this information.</source>
          <target state="translated">Ofrece una serie de mecanismos para consultar esta información.</target>
        </trans-unit>
        <trans-unit id="b8c1724bc25d41f7c44c94651a6709f709b79e5f" translate="yes" xml:space="preserve">
          <source>It provides default implementations for the methods</source>
          <target state="translated">Proporciona implementaciones predeterminadas para los métodos</target>
        </trans-unit>
        <trans-unit id="991237cf5d3fbec5f0d4f7d308f07d6c33c5c843" translate="yes" xml:space="preserve">
          <source>It rarely happens, but sometimes a harness might encounter 'missing tests:</source>
          <target state="translated">Rara vez ocurre,pero a veces un arnés puede encontrar &quot;pruebas perdidas&quot;:</target>
        </trans-unit>
        <trans-unit id="58b94065e144f3ae0a0ee1916ab6d2ce54ccb558" translate="yes" xml:space="preserve">
          <source>It returns a boolean of the derived property Comp_Ex (Full_Composition_Exclusion). This property is generated from Composition Exclusions + Singletons + Non-Starter Decompositions.</source>
          <target state="translated">Devuelve un booleano de la propiedad derivada Comp_Ex (Full_Composition_Exclusion).Esta propiedad se genera a partir de las Exclusiones de Composición+Singletons+Descomposiciones no iniciales.</target>
        </trans-unit>
        <trans-unit id="2104ee6f115c01f93c99709b67d509e11442417d" translate="yes" xml:space="preserve">
          <source>It returns a boolean of the derived property NFC_MAYBE (NFC_Quick_Check=Maybe).</source>
          <target state="translated">Devuelve un booleano de la propiedad derivada NFC_MAYBE (NFC_Quick_Check=Tal vez).</target>
        </trans-unit>
        <trans-unit id="8eddd31c0562defd83827f48a88a17884adf60ac" translate="yes" xml:space="preserve">
          <source>It returns a boolean of the derived property NFC_NO (NFC_Quick_Check=No).</source>
          <target state="translated">Devuelve un booleano de la propiedad derivada NFC_NO (NFC_Quick_Check=No).</target>
        </trans-unit>
        <trans-unit id="5a5415660523b78bb56fd5e9c17b5e348185ce86" translate="yes" xml:space="preserve">
          <source>It returns a boolean of the derived property NFD_NO (NFD_Quick_Check=No).</source>
          <target state="translated">Devuelve un booleano de la propiedad derivada NFD_NO (NFD_Quick_Check=No).</target>
        </trans-unit>
        <trans-unit id="670fe547c9b7a29b855ab5f7d41534d43d1e9f4c" translate="yes" xml:space="preserve">
          <source>It returns a boolean of the derived property NFKC_MAYBE (NFKC_Quick_Check=Maybe).</source>
          <target state="translated">Devuelve un booleano de la propiedad derivada NFKC_MAYBE (NFKC_Quick_Check=Tal vez).</target>
        </trans-unit>
        <trans-unit id="904cbf02d71113df93de970071185a11138630e4" translate="yes" xml:space="preserve">
          <source>It returns a boolean of the derived property NFKC_NO (NFKC_Quick_Check=No).</source>
          <target state="translated">Devuelve un booleano de la propiedad derivada NFKC_NO (NFKC_Quick_Check=No).</target>
        </trans-unit>
        <trans-unit id="829ea5ef8a5200c844ee7c02042a32bc63c04771" translate="yes" xml:space="preserve">
          <source>It returns a boolean of the derived property NFKD_NO (NFKD_Quick_Check=No).</source>
          <target state="translated">Devuelve un booleano de la propiedad derivada NFKD_NO (NFKD_Quick_Check=No).</target>
        </trans-unit>
        <trans-unit id="8784205d909df0b9a984780fc90733905a3103a1" translate="yes" xml:space="preserve">
          <source>It returns a boolean whether the character of the specified codepoint may be composed with the previous one in a certain composition (including Hangul Compositions, but excluding Composition Exclusions and Non-Starter Decompositions).</source>
          <target state="translated">Devuelve un booleano si el carácter del punto de código especificado puede ser compuesto con el anterior en una determinada composición (incluidas las composiciones en forma de hangar,pero excluyendo las exclusiones de composición y las descomposiciones no iniciales).</target>
        </trans-unit>
        <trans-unit id="32fdbc7eddb18b1a419ce2d35092783f07d4af22" translate="yes" xml:space="preserve">
          <source>It returns a boolean whether the code point has Non-Starter Decomposition.</source>
          <target state="translated">Devuelve un booleano si el punto de código tiene descomposición no inicial.</target>
        </trans-unit>
        <trans-unit id="05cafc23e99e3bc76eb241d5b7b7627390e2da71" translate="yes" xml:space="preserve">
          <source>It returns a boolean whether the code point is a composition exclusion.</source>
          <target state="translated">Devuelve un booleano si el punto de código es una exclusión de composición.</target>
        </trans-unit>
        <trans-unit id="53705043824b274a980c94b9c5b624aa7db18ac7" translate="yes" xml:space="preserve">
          <source>It returns a boolean whether the code point is a singleton</source>
          <target state="translated">Devuelve un booleano si el punto de código es un singleton</target>
        </trans-unit>
        <trans-unit id="3bdd6ab415e1d7803474768a9f82c375da3c7e8f" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$Bzip2Error&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$Bzip2Error&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="7b202b09f5eedc56f3eae8328563e18bb8bb267b" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$DeflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$DeflateError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="0d7bf22968af56755cc48cf3e5eb1866df93fb4a" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$GzipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$GzipError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="e02c10ad441b5cb12d98ff7ac04d2bec29b76002" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$RawDeflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$RawDeflateError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="733e2aec8845350fd889ee56ce6b2b1905e8c50e" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$ZipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">Devuelve un objeto &lt;code&gt;IO::Compress::Zip&lt;/code&gt; en caso de &amp;eacute;xito y undef en caso de error. La variable &lt;code&gt;$ZipError&lt;/code&gt; contendr&amp;aacute; un mensaje de error en caso de falla.</target>
        </trans-unit>
        <trans-unit id="55f5b32339878811a57c6c9adb8fddab3c155d6c" translate="yes" xml:space="preserve">
          <source>It returns an array of four or five scalar values: EXTRALIBS, BSLOADLIBS, LDLOADLIBS, LD_RUN_PATH, and, optionally, a reference to the array of the filenames of actual libraries. Some of these don't mean anything unless on Unix. See the details about those platform specifics below. The list of the filenames is returned only if $need_names argument is true.</source>
          <target state="translated">Devuelve un conjunto de cuatro o cinco valores escalares:EXTRALIBS,BSLOADLIBS,LDLOADLIBS,LD_RUN_PATH,y,opcionalmente,una referencia a la matriz de los nombres de los archivos de las bibliotecas reales.Algunos de estos no significan nada a menos que estén en Unix.Vea los detalles acerca de esos específicos de la plataforma a continuación.La lista de los nombres de archivo se devuelve sólo si el argumento $need_names es verdadero.</target>
        </trans-unit>
        <trans-unit id="1b60723356123e31c4f819b7b57959bd345247e2" translate="yes" xml:space="preserve">
          <source>It returns falls if &lt;code&gt;PACKAGE&lt;/code&gt; has not been loaded yet and the location from where it is said to be loaded on success.</source>
          <target state="translated">Devuelve cae si el &lt;code&gt;PACKAGE&lt;/code&gt; a&amp;uacute;n no se ha cargado y la ubicaci&amp;oacute;n desde donde se dice que se carga con &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="ab042aac65d23a49c795444acd76a148a334187c" translate="yes" xml:space="preserve">
          <source>It returns the FCC form (&quot;Fast C Contiguous&quot;; cf. UTN #5).</source>
          <target state="translated">Devuelve el formulario FCC (&quot;Fast C Contiguous&quot;;cf.UTN #5).</target>
        </trans-unit>
        <trans-unit id="a80e6baf3c3b2c9535a05b4bf410d7b9c5dde971" translate="yes" xml:space="preserve">
          <source>It returns the Normalization Form C (formed by canonical decomposition followed by canonical composition).</source>
          <target state="translated">Devuelve la forma de normalización C (formada por la descomposición canónica seguida de la composición canónica).</target>
        </trans-unit>
        <trans-unit id="a2c5e52810047ee1962e46371ac68fc8dc9054e8" translate="yes" xml:space="preserve">
          <source>It returns the Normalization Form D (formed by canonical decomposition).</source>
          <target state="translated">Devuelve la forma de normalización D (formada por la descomposición canónica).</target>
        </trans-unit>
        <trans-unit id="1383c6449aad07f7997fc3ec42b0ae3c98ca4a0b" translate="yes" xml:space="preserve">
          <source>It returns the Normalization Form KC (formed by compatibility decomposition followed by &lt;b&gt;canonical&lt;/b&gt; composition).</source>
          <target state="translated">Devuelve la forma de normalizaci&amp;oacute;n KC (formada por la descomposici&amp;oacute;n de compatibilidad seguida de la composici&amp;oacute;n &lt;b&gt;can&amp;oacute;nica&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="1d675fdcf5ef1f2056866497e81d752934809791" translate="yes" xml:space="preserve">
          <source>It returns the Normalization Form KD (formed by compatibility decomposition).</source>
          <target state="translated">Devuelve la forma de normalización KD (formada por la descomposición de compatibilidad).</target>
        </trans-unit>
        <trans-unit id="4b300118aa94b87649f21e9834526f64818158d8" translate="yes" xml:space="preserve">
          <source>It returns the combining class (as an integer) of the character.</source>
          <target state="translated">Devuelve la clase de combinación (como un entero)del personaje.</target>
        </trans-unit>
        <trans-unit id="eb22d3dace2d05fa601426312363eea62fa0226b" translate="yes" xml:space="preserve">
          <source>It returns the concatenation of the decomposition of each character in the string.</source>
          <target state="translated">Devuelve la concatenación de la descomposición de cada personaje de la cadena.</target>
        </trans-unit>
        <trans-unit id="8a852534b28496d947f4c8e100a132748793361d" translate="yes" xml:space="preserve">
          <source>It returns the normalization form of &lt;code&gt;$form_name&lt;/code&gt; .</source>
          <target state="translated">Devuelve la forma de normalizaci&amp;oacute;n de &lt;code&gt;$form_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b49fbb316b9278a17d532265fe4cd4e754492934" translate="yes" xml:space="preserve">
          <source>It returns the remainder &lt;code&gt;$r = $x - $n*$y&lt;/code&gt; , where &lt;code&gt;$n = trunc($x/$y)&lt;/code&gt; . The &lt;code&gt;$r&lt;/code&gt; has the same sign as &lt;code&gt;$x&lt;/code&gt; and magnitude (absolute value) less than the magnitude of &lt;code&gt;$y&lt;/code&gt; .</source>
          <target state="translated">Devuelve el resto &lt;code&gt;$r = $x - $n*$y&lt;/code&gt; , donde &lt;code&gt;$n = trunc($x/$y)&lt;/code&gt; . El &lt;code&gt;$r&lt;/code&gt; tiene el mismo signo que &lt;code&gt;$x&lt;/code&gt; y la magnitud (valor absoluto) menor que la magnitud de &lt;code&gt;$y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="837e320b920fba38b4782fb970e5ba4d1738747b" translate="yes" xml:space="preserve">
          <source>It returns the result of canonical composition without applying any decomposition.</source>
          <target state="translated">Devuelve el resultado de la composición canónica sin aplicar ninguna descomposición.</target>
        </trans-unit>
        <trans-unit id="97c8ed595d7942de577ac5b60184bc3e70b57d00" translate="yes" xml:space="preserve">
          <source>It returns the result of reordering the combining characters according to Canonical Ordering Behavior.</source>
          <target state="translated">Devuelve el resultado de reordenar los caracteres de combinación según el comportamiento de ordenación canónica.</target>
        </trans-unit>
        <trans-unit id="30e13862ba07278e0519e9e4b0230517dc0328cb" translate="yes" xml:space="preserve">
          <source>It returns true (&lt;code&gt;1&lt;/code&gt; ) if &lt;code&gt;YES&lt;/code&gt; ; false (&lt;code&gt;empty string&lt;/code&gt; ) if &lt;code&gt;NO&lt;/code&gt; .</source>
          <target state="translated">Devuelve verdadero ( &lt;code&gt;1&lt;/code&gt; ) si &lt;code&gt;YES&lt;/code&gt; ; falso ( &lt;code&gt;empty string&lt;/code&gt; ) si &lt;code&gt;NO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1aae34c500721c408b0788928293058d1fef3fa" translate="yes" xml:space="preserve">
          <source>It returns true (&lt;code&gt;1&lt;/code&gt; ) if &lt;code&gt;YES&lt;/code&gt; ; false (&lt;code&gt;empty string&lt;/code&gt; ) if &lt;code&gt;NO&lt;/code&gt; ; &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;MAYBE&lt;/code&gt; .</source>
          <target state="translated">Devuelve verdadero ( &lt;code&gt;1&lt;/code&gt; ) si &lt;code&gt;YES&lt;/code&gt; ; falso ( &lt;code&gt;empty string&lt;/code&gt; ) si &lt;code&gt;NO&lt;/code&gt; ; &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si &lt;code&gt;MAYBE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a729a5529269a29252f3c2bf2eddc2d7ae807d5" translate="yes" xml:space="preserve">
          <source>It returns true if everything was ok. Otherwise it will &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; with one of the messages in the DIAGNOSTICS section.</source>
          <target state="translated">Devuelve verdadero si todo estuvo bien. De lo contrario, &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; con uno de los mensajes de la secci&amp;oacute;n DIAGN&amp;Oacute;STICO.</target>
        </trans-unit>
        <trans-unit id="714b64110a6e486db425b221e1f3c962f9afdc59" translate="yes" xml:space="preserve">
          <source>It returns true if the key matched the criteria, or false otherwise.</source>
          <target state="translated">Devuelve verdadero si la clave coincide con el criterio,o falso en caso contrario.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
