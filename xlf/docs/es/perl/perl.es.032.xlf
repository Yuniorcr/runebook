<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="77df0281a5c47be5d00ae61a57ff00e23d9d5e5b" translate="yes" xml:space="preserve">
          <source>EXPORTABLE FUNCTIONS</source>
          <target state="translated">EXPORTABLE FUNCTIONS</target>
        </trans-unit>
        <trans-unit id="22d0596dab83a0920d66ad899d3e61f47464b88e" translate="yes" xml:space="preserve">
          <source>EXPORTABLE VARIABLES</source>
          <target state="translated">EXPORTABLE VARIABLES</target>
        </trans-unit>
        <trans-unit id="43aade251566381046f1d9dd6f51422fde3c0fbd" translate="yes" xml:space="preserve">
          <source>EXPORTED FUNCTIONS</source>
          <target state="translated">EXPORTED FUNCTIONS</target>
        </trans-unit>
        <trans-unit id="8b30e3050a39fae8e0c617ff76ab8d47b5f0b044" translate="yes" xml:space="preserve">
          <source>EXPORTED SYMBOLS</source>
          <target state="translated">SÍMBOLOS EXPORTADOS</target>
        </trans-unit>
        <trans-unit id="e9e012170f2df7cb18fa26019e2b46cbf4a91319" translate="yes" xml:space="preserve">
          <source>EXPORTS</source>
          <target state="translated">EXPORTS</target>
        </trans-unit>
        <trans-unit id="7b479848a0ec11ad7c3ba1025f3ac20068015bb9" translate="yes" xml:space="preserve">
          <source>EXPORTS (by request only)</source>
          <target state="translated">EXPORTACIONES (sólo por solicitud)</target>
        </trans-unit>
        <trans-unit id="6b6562ec1f5d1b67f0bbd288b913382cd128ba1e" translate="yes" xml:space="preserve">
          <source>EXPORT_LIST: name of a file that is passed to linker to define symbols to be exported.</source>
          <target state="translated">EXPORT_LIST:nombre de un archivo que se pasa al enlazador para definir los símbolos a exportar.</target>
        </trans-unit>
        <trans-unit id="a6fc3ffe71e48b679d9c5609def42ab3c69aa49f" translate="yes" xml:space="preserve">
          <source>EXPORT_OK</source>
          <target state="translated">EXPORT_OK</target>
        </trans-unit>
        <trans-unit id="f817892a6b7b040f6bf499b1ab6645711184a4f1" translate="yes" xml:space="preserve">
          <source>EXPR</source>
          <target state="translated">EXPR</target>
        </trans-unit>
        <trans-unit id="62af5da98ccf954a1bd12d8422eab969d058949e" translate="yes" xml:space="preserve">
          <source>EXPR is executed as a system command. The collected standard output of the command is returned. In scalar context, it comes back as a single (potentially multi-line) string. In list context, returns a list of lines (however you've defined lines with &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; in &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;)). This is the internal function implementing the &lt;code&gt;qx/EXPR/&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;qx/EXPR/&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#qx%2FSTRING%2F&quot;&gt;&quot;&lt;code&gt;qx/&lt;i&gt;STRING&lt;/i&gt;/&lt;/code&gt;&quot; in perlop&lt;/a&gt;. If EXPR is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3499643610f3dd44dae6eb02d7fed2d648b428d9" translate="yes" xml:space="preserve">
          <source>EXPR is executed as a system command. The collected standard output of the command is returned. In scalar context, it comes back as a single (potentially multi-line) string. In list context, returns a list of lines (however you've defined lines with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). This is the internal function implementing the &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">EXPR se ejecuta como un comando del sistema. Se devuelve la salida est&amp;aacute;ndar recopilada del comando. En contexto escalar, vuelve como una sola cadena (potencialmente multil&amp;iacute;nea). En el contexto de la lista, devuelve una lista de l&amp;iacute;neas (sin embargo, ha definido l&amp;iacute;neas con &lt;code&gt;$/&lt;/code&gt; o &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). Esta es la funci&amp;oacute;n interna que implementa el operador &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; , pero puede usarla directamente. El operador &lt;code&gt;&lt;a href=&quot;functions/qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; se analiza con m&amp;aacute;s detalle en &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;Operadores de E / S en perlop&lt;/a&gt; . Si se omite EXPR, usa &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f586c420e6eaf4cfbda37e4566d4c88b6984ca54" translate="yes" xml:space="preserve">
          <source>EXPR is executed as a system command. The collected standard output of the command is returned. In scalar context, it comes back as a single (potentially multi-line) string. In list context, returns a list of lines (however you've defined lines with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). This is the internal function implementing the &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">EXPR se ejecuta como un comando del sistema. Se devuelve la salida est&amp;aacute;ndar recopilada del comando. En contexto escalar, vuelve como una sola cadena (potencialmente multil&amp;iacute;nea). En el contexto de la lista, devuelve una lista de l&amp;iacute;neas (sin embargo, ha definido l&amp;iacute;neas con &lt;code&gt;$/&lt;/code&gt; o &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). Esta es la funci&amp;oacute;n interna que implementa el operador &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; , pero puede usarla directamente. El operador &lt;code&gt;&lt;a href=&quot;qx&quot;&gt;qx/EXPR/&lt;/a&gt;&lt;/code&gt; se analiza con m&amp;aacute;s detalle en &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;Operadores de E / S en perlop&lt;/a&gt; . Si se omite EXPR, usa &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="891bbd450e125f5b1ee12d035ddc1a7eef7a872c" translate="yes" xml:space="preserve">
          <source>EXPRESSION</source>
          <target state="translated">EXPRESSION</target>
        </trans-unit>
        <trans-unit id="6f64d0b0e54fcf9769746a65fbf9b2ecb163ee70" translate="yes" xml:space="preserve">
          <source>EXTEND</source>
          <target state="translated">EXTEND</target>
        </trans-unit>
        <trans-unit id="105f8f5f3c21e49b28c3216ab6b37ce1503d78bf" translate="yes" xml:space="preserve">
          <source>EXTEND this, count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a4d24b33941bccd86ff7ba0c19dc15933e36a4" translate="yes" xml:space="preserve">
          <source>EXTENDED CONSTRUCTS</source>
          <target state="translated">CONSTRUCCIONES EXTENDIDAS</target>
        </trans-unit>
        <trans-unit id="b070e356144357fb71137b31e2e89f09d2f73b53" translate="yes" xml:space="preserve">
          <source>EXTERN.h</source>
          <target state="translated">EXTERN.h</target>
        </trans-unit>
        <trans-unit id="92f627e6114fde8ec8e85f5dc7eb0d8548926fd9" translate="yes" xml:space="preserve">
          <source>EXTERNAL</source>
          <target state="translated">EXTERNAL</target>
        </trans-unit>
        <trans-unit id="21d7721c8d41e278d11d43cf30b3f64d4c13b7f4" translate="yes" xml:space="preserve">
          <source>EXTRA</source>
          <target state="translated">EXTRA</target>
        </trans-unit>
        <trans-unit id="13ae0f4e98553c4041bca1bd5b70b21a5aa6d865" translate="yes" xml:space="preserve">
          <source>EXTRALIBS</source>
          <target state="translated">EXTRALIBS</target>
        </trans-unit>
        <trans-unit id="3633746b067241666bc462dcfe7a24ff23a8db68" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="translated">Each</target>
        </trans-unit>
        <trans-unit id="64713135c29a168f621e3cd6c59750f2ec3360d2" translate="yes" xml:space="preserve">
          <source>Each &quot;=over&quot; ... &quot;=back&quot; region should be one of the following:</source>
          <target state="translated">Cada &quot;=sobre&quot; ......región &quot;=back&quot; debería ser una de las siguientes:</target>
        </trans-unit>
        <trans-unit id="8573b03d1dbd851733546c18897b586541b26327" translate="yes" xml:space="preserve">
          <source>Each &lt;b&gt;File&lt;/b&gt; section reports on a single file. Each &lt;b&gt;Subroutine&lt;/b&gt; section reports on a single subroutine apart from the special cases &quot;(definitions)&quot; and &quot;(main)&quot;. These report, respectively, on subroutine definitions found by the initial symbol table walk and on the main part of the program or module external to all subroutines.</source>
          <target state="translated">Cada secci&amp;oacute;n de &lt;b&gt;Archivo&lt;/b&gt; informa sobre un solo archivo. Cada secci&amp;oacute;n de &lt;b&gt;Subrutina&lt;/b&gt; informa sobre una sola subrutina, aparte de los casos especiales &quot;(definiciones)&quot; y &quot;(principal)&quot;. Estos informan, respectivamente, sobre las definiciones de subrutinas encontradas por el recorrido de la tabla de s&amp;iacute;mbolos inicial y sobre la parte principal del programa o m&amp;oacute;dulo externo a todas las subrutinas.</target>
        </trans-unit>
        <trans-unit id="c3f67868071b09e484f931abe029f1f8f7b5dc16" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;--$source-option&lt;/code&gt; option must specify a key/value pair separated by an &lt;code&gt;=&lt;/code&gt; . If an option can take multiple values, just specify it multiple times, as with the &lt;code&gt;extensions=&lt;/code&gt; examples above. If the option should be a hash reference, specify the value as a second pair separated by a &lt;code&gt;=&lt;/code&gt; , as in the &lt;code&gt;pset=&lt;/code&gt; examples above (escape &lt;code&gt;=&lt;/code&gt; with a backslash).</source>
          <target state="translated">Cada &lt;code&gt;--$source-option&lt;/code&gt; debe especificar un par clave / valor separado por un &lt;code&gt;=&lt;/code&gt; . Si una opci&amp;oacute;n puede tomar varios valores, especif&amp;iacute;quela varias veces, como en los ejemplos de &lt;code&gt;extensions=&lt;/code&gt; anteriores. Si la opci&amp;oacute;n debe ser una referencia hash, especifique el valor como un segundo par separado por a &lt;code&gt;=&lt;/code&gt; , como en los ejemplos de &lt;code&gt;pset=&lt;/code&gt; anteriores (escape &lt;code&gt;=&lt;/code&gt; con una barra invertida).</target>
        </trans-unit>
        <trans-unit id="72aa1e6906c5ec0ac410f03e5bee3a9d52fb4bb1" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;--$source-option&lt;/code&gt; option must specify a key/value pair separated by an &lt;code&gt;=&lt;/code&gt;. If an option can take multiple values, just specify it multiple times, as with the &lt;code&gt;extensions=&lt;/code&gt; examples above. If the option should be a hash reference, specify the value as a second pair separated by a &lt;code&gt;=&lt;/code&gt;, as in the &lt;code&gt;pset=&lt;/code&gt; examples above (escape &lt;code&gt;=&lt;/code&gt; with a backslash).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114f01b386e99faf35799463e66245b3c628986d" translate="yes" xml:space="preserve">
          <source>Each C type is represented by an entry in the typemap file that is responsible for converting perl variables (SV, AV, HV, CV, etc.) to and from that type. The following sections list all XS types that come with perl by default.</source>
          <target state="translated">Cada tipo C está representado por una entrada en el archivo del mapa de tipos que se encarga de convertir las variables perl (SV,AV,HV,CV,etc.)a y desde ese tipo.En las siguientes secciones se enumeran todos los tipos XS que vienen con perl por defecto.</target>
        </trans-unit>
        <trans-unit id="45fe11f5c5ad8666badf6e1b74648061569fd2e9" translate="yes" xml:space="preserve">
          <source>Each CV has a pointer, &lt;code&gt;CvOUTSIDE()&lt;/code&gt; , to its lexically enclosing CV (if any). Because pointers to anonymous sub prototypes are stored in &lt;code&gt;&amp;amp;&lt;/code&gt; pad slots, it is a possible to get a circular reference, with the parent pointing to the child and vice-versa. To avoid the ensuing memory leak, we do not increment the reference count of the CV pointed to by &lt;code&gt;CvOUTSIDE&lt;/code&gt; in the</source>
          <target state="translated">Cada CV tiene un puntero, &lt;code&gt;CvOUTSIDE()&lt;/code&gt; , a su CV que lo encierra l&amp;eacute;xicamente (si lo hay). Debido a que los punteros a subprototipos an&amp;oacute;nimos se almacenan en las ranuras &lt;code&gt;&amp;amp;&lt;/code&gt; pad, es posible obtener una referencia circular, con el padre apuntando al hijo y viceversa. Para evitar la consiguiente p&amp;eacute;rdida de memoria, no incrementamos el recuento de referencia de la CV apuntada por &lt;code&gt;CvOUTSIDE&lt;/code&gt; en el</target>
        </trans-unit>
        <trans-unit id="0a552f3c9f394752d19b918c33b1679413791b25" translate="yes" xml:space="preserve">
          <source>Each CV has a pointer, &lt;code&gt;CvOUTSIDE()&lt;/code&gt;, to its lexically enclosing CV (if any). Because pointers to anonymous sub prototypes are stored in &lt;code&gt;&amp;amp;&lt;/code&gt; pad slots, it is a possible to get a circular reference, with the parent pointing to the child and vice-versa. To avoid the ensuing memory leak, we do not increment the reference count of the CV pointed to by &lt;code&gt;CvOUTSIDE&lt;/code&gt; in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877f690dc448228c6c71438f034057615156195d" translate="yes" xml:space="preserve">
          <source>Each INPUT or OUTPUT typemap entry is a double-quoted Perl string that will be evaluated in the presence of certain variables to get the final C code for mapping a certain C type.</source>
          <target state="translated">Cada entrada del mapa de tipos INPUT o OUTPUT es una cadena Perl de doble cita que será evaluada en presencia de ciertas variables para obtener el código C final para el mapeo de un cierto tipo de C.</target>
        </trans-unit>
        <trans-unit id="fb013f151204036ffe28cd6f1b7420c85313acfd" translate="yes" xml:space="preserve">
          <source>Each NAME is assumed to be in the calling package. See share_from for an alternative method (which &lt;code&gt;share&lt;/code&gt; uses).</source>
          <target state="translated">Se supone que cada NOMBRE est&amp;aacute; en el paquete de llamada. Consulte share_from para conocer un m&amp;eacute;todo alternativo (que &lt;code&gt;share&lt;/code&gt; usos).</target>
        </trans-unit>
        <trans-unit id="5c9985ee57f0e8b2c8e51c7278e3d4c3d9b47d87" translate="yes" xml:space="preserve">
          <source>Each NAME must be the &lt;b&gt;name&lt;/b&gt; of a non-lexical variable, typically with the leading type identifier included. A bareword is treated as a function name.</source>
          <target state="translated">Cada NOMBRE debe ser el &lt;b&gt;nombre&lt;/b&gt; de una variable no l&amp;eacute;xica, normalmente con el identificador de tipo inicial incluido. Una palabra simple se trata como un nombre de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2d1afe9f64b8afc5ff5d1587bde457161df361bb" translate="yes" xml:space="preserve">
          <source>Each array &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; holds the lines of $filename for a file compiled by Perl. The same is also true for &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings that contain subroutines, or which are currently being executed. The $filename for &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings looks like &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</source>
          <target state="translated">Cada matriz &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contiene las l&amp;iacute;neas de $ filename para un archivo compilado por Perl. Lo mismo ocurre con las cadenas &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uadas que contienen subrutinas o que se est&amp;aacute;n ejecutando actualmente. El nombre de archivo $ para las cadenas &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uadas se parece a &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4542f557bdf7a70f332f8c5d8d58355f058485ae" translate="yes" xml:space="preserve">
          <source>Each array &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; holds the lines of $filename for a file compiled by Perl. The same is also true for &lt;code&gt;eval&lt;/code&gt;ed strings that contain subroutines, or which are currently being executed. The $filename for &lt;code&gt;eval&lt;/code&gt;ed strings looks like &lt;code&gt;(eval 34)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f0c2f3d8605c13877f68e54dd82f6341b8fae0" translate="yes" xml:space="preserve">
          <source>Each class can define its &lt;b&gt;attributes&lt;/b&gt;. When we instantiate an object, we assign values to those attributes. For example, every &lt;code&gt;File&lt;/code&gt; object has a path. Attributes are sometimes called &lt;b&gt;properties&lt;/b&gt;.</source>
          <target state="translated">Cada clase puede definir sus &lt;b&gt;atributos&lt;/b&gt; . Cuando instanciamos un objeto, asignamos valores a esos atributos. Por ejemplo, cada objeto &lt;code&gt;File&lt;/code&gt; tiene una ruta. Los atributos a veces se denominan &lt;b&gt;propiedades&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="64bf8b278b40ceb1457596f928446c91560cdf44" translate="yes" xml:space="preserve">
          <source>Each compartment has an associated &quot;operator mask&quot;. Recall that perl code is compiled into an internal format before execution. Evaluating perl code (e.g. via &quot;eval&quot; or &quot;do 'file'&quot;) causes the code to be compiled into an internal format and then, provided there was no error in the compilation, executed. Code evaluated in a compartment compiles subject to the compartment's operator mask. Attempting to evaluate code in a compartment which contains a masked operator will cause the compilation to fail with an error. The code will not be executed.</source>
          <target state="translated">Cada compartimento tiene una &quot;máscara de operador&quot; asociada.Recuerde que el código perl se compila en un formato interno antes de su ejecución.La evaluación del código perl (por ejemplo,a través de &quot;eval&quot; o &quot;do 'file'&quot;)hace que el código se compile en un formato interno y luego,siempre que no haya habido ningún error en la compilación,se ejecute.El código evaluado en un compartimento compila sujeto a la máscara de operador del compartimento.Intentar evaluar el código en un compartimento que contiene un operador enmascarado hará que la compilación falle con un error.El código no se ejecutará.</target>
        </trans-unit>
        <trans-unit id="c6c4ed2bbcee866615b18a5377b47f14999fe9bd" translate="yes" xml:space="preserve">
          <source>Each context entry is labelled with a context type, &lt;code&gt;cx_type&lt;/code&gt;. Typical context types are &lt;code&gt;CXt_SUB&lt;/code&gt;, &lt;code&gt;CXt_EVAL&lt;/code&gt; etc., as well as &lt;code&gt;CXt_BLOCK&lt;/code&gt; and &lt;code&gt;CXt_NULL&lt;/code&gt; which represent a basic scope (as pushed by &lt;code&gt;pp_enter&lt;/code&gt;) and a sort block. The type determines which part of the context union are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035a2860cc641f9a6aba917e368a923359692185" translate="yes" xml:space="preserve">
          <source>Each element in the struct data has an accessor method, which is used to assign to the element and to fetch its value. The default accessor can be overridden by declaring a &lt;code&gt;&lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; of the same name in the package. (See Example 2.)</source>
          <target state="translated">Cada elemento de la estructura de datos tiene un m&amp;eacute;todo de acceso, que se utiliza para asignar al elemento y recuperar su valor. El descriptor de acceso predeterminado se puede anular declarando un &lt;code&gt;&lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; del mismo nombre en el paquete. (Ver ejemplo 2).</target>
        </trans-unit>
        <trans-unit id="79c8cb706f1fcfacc217858c7c85ae02ae2f4052" translate="yes" xml:space="preserve">
          <source>Each element in the struct data has an accessor method, which is used to assign to the element and to fetch its value. The default accessor can be overridden by declaring a &lt;code&gt;sub&lt;/code&gt; of the same name in the package. (See Example 2.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1373d9ec88c46f95e3a35afb96af5418baf7f3" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;%!&lt;/code&gt; has a true value only if &lt;code&gt;$!&lt;/code&gt; is set to that value. For example, &lt;code&gt;$!{ENOENT}&lt;/code&gt; is true if and only if the current value of &lt;code&gt;$!&lt;/code&gt; is &lt;code&gt;ENOENT&lt;/code&gt; ; that is, if the most recent error was &quot;No such file or directory&quot; (or its moral equivalent: not all operating systems give that exact error, and certainly not all languages). To check if a particular key is meaningful on your system, use &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;
$!{the_key}&lt;/code&gt; ; for a list of legal keys, use &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %!&lt;/code&gt; . See &lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt; for more information, and also see &lt;a href=&quot;#%24!&quot;&gt;$!&lt;/a&gt;.</source>
          <target state="translated">Cada elemento de &lt;code&gt;%!&lt;/code&gt; tiene un valor verdadero solo si &lt;code&gt;$!&lt;/code&gt; se establece en ese valor. Por ejemplo, &lt;code&gt;$!{ENOENT}&lt;/code&gt; es verdadero si y solo si el valor actual de &lt;code&gt;$!&lt;/code&gt; es &lt;code&gt;ENOENT&lt;/code&gt; ; es decir, si el error m&amp;aacute;s reciente fue &quot;No existe tal archivo o directorio&quot; (o su equivalente moral: no todos los sistemas operativos dan ese error exacto, y ciertamente no todos los idiomas). Para comprobar si una clave en particular es significativa en su sistema, utilice &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $!{the_key}&lt;/code&gt; ; para obtener una lista de claves legales, utilice las &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %!&lt;/code&gt; . Consulte &lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n y tambi&amp;eacute;n consulte &lt;a href=&quot;#%24!&quot;&gt;$! &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e3f755ecf95a73dbcb1fefb62d992d2bd88e203f" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;%!&lt;/code&gt; has a true value only if &lt;code&gt;$!&lt;/code&gt; is set to that value. For example, &lt;code&gt;$!{ENOENT}&lt;/code&gt; is true if and only if the current value of &lt;code&gt;$!&lt;/code&gt; is &lt;code&gt;ENOENT&lt;/code&gt;; that is, if the most recent error was &quot;No such file or directory&quot; (or its moral equivalent: not all operating systems give that exact error, and certainly not all languages). The specific true value is not guaranteed, but in the past has generally been the numeric value of &lt;code&gt;$!&lt;/code&gt;. To check if a particular key is meaningful on your system, use &lt;code&gt;exists $!{the_key}&lt;/code&gt;; for a list of legal keys, use &lt;code&gt;keys %!&lt;/code&gt;. See &lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt; for more information, and also see &lt;a href=&quot;#%24%21&quot;&gt;&quot;$!&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a2d451f571f682ca87c1d143e9cc5d9cc9752a" translate="yes" xml:space="preserve">
          <source>Each element of the &lt;code&gt;@tests&lt;/code&gt; array is either:</source>
          <target state="translated">Cada elemento de la matriz &lt;code&gt;@tests&lt;/code&gt; es:</target>
        </trans-unit>
        <trans-unit id="d55ab66461652be4398995f0bc7395b92cdadc85" translate="yes" xml:space="preserve">
          <source>Each element on the right-hand side must be a reference to a datum of the right type. Parentheses immediately surrounding an array (and possibly also &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;) will make each element of the array an alias to the corresponding scalar referenced on the right-hand side:</source>
          <target state="translated">Cada elemento del lado derecho debe ser una referencia a un dato del tipo correcto. Los par&amp;eacute;ntesis que rodean inmediatamente una matriz (y posiblemente tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; ) har&amp;aacute;n que cada elemento de la matriz sea un alias del escalar correspondiente al que se hace referencia en el lado derecho:</target>
        </trans-unit>
        <trans-unit id="73d053df17de770313a9997b0c6b33ddac74a8d7" translate="yes" xml:space="preserve">
          <source>Each element on the right-hand side must be a reference to a datum of the right type. Parentheses immediately surrounding an array (and possibly also &lt;code&gt;my&lt;/code&gt;/&lt;code&gt;state&lt;/code&gt;/&lt;code&gt;our&lt;/code&gt;/&lt;code&gt;local&lt;/code&gt;) will make each element of the array an alias to the corresponding scalar referenced on the right-hand side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4684b159123c6d2eb2be5f3fb5fb6b32cbd2c836" translate="yes" xml:space="preserve">
          <source>Each element's type can be scalar, array, hash, or class.</source>
          <target state="translated">El tipo de cada elemento puede ser escalar,matriz,hachís o clase.</target>
        </trans-unit>
        <trans-unit id="4a18db593068986b02fcc2822d10b93bd6ae4e04" translate="yes" xml:space="preserve">
          <source>Each engine is supposed to provide access to a constant structure of the following format:</source>
          <target state="translated">Cada motor se supone que proporciona acceso a una estructura constante del siguiente formato:</target>
        </trans-unit>
        <trans-unit id="df21f7171545bb80d42912cbb46608328ace6052" translate="yes" xml:space="preserve">
          <source>Each field in a picture line starts with either &quot;@&quot; (at) or &quot;^&quot; (caret), indicating what we'll call, respectively, a &quot;regular&quot; or &quot;special&quot; field. The choice of pad characters determines whether a field is textual or numeric. The tilde operators are not part of a field. Let's look at the various possibilities in detail.</source>
          <target state="translated">Cada campo de una línea de imagen comienza con &quot;@&quot; (at)o &quot;^&quot; (caret),indicando lo que llamaremos,respectivamente,un campo &quot;regular&quot; o &quot;especial&quot;.La elección de los caracteres de la almohadilla determina si un campo es textual o numérico.Los operadores de la tilde no forman parte de un campo.Veamos las distintas posibilidades en detalle.</target>
        </trans-unit>
        <trans-unit id="e86751063b4744e62f491d3c6500569d32c72d11" translate="yes" xml:space="preserve">
          <source>Each filehandle in Perl counts the number of lines that have been read from it. (Depending on the value of &lt;code&gt;$/&lt;/code&gt; , Perl's idea of what constitutes a line may not match yours.) When a line is read from a filehandle (via &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), or when &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; is called on it, &lt;code&gt;$.&lt;/code&gt; becomes an alias to the line counter for that filehandle.</source>
          <target state="translated">Cada identificador de archivo en Perl cuenta el n&amp;uacute;mero de l&amp;iacute;neas que se leyeron. (Dependiendo del valor de &lt;code&gt;$/&lt;/code&gt; , la idea de Perl de lo que constituye una l&amp;iacute;nea no coincide con la suya.) Cuando se lee una l&amp;iacute;nea desde un gestor de archivo (a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; ), o cuando &lt;code&gt;&lt;a href=&quot;functions/tell&quot;&gt;tell()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek()&lt;/a&gt;&lt;/code&gt; es lo llam&amp;oacute;, &lt;code&gt;$.&lt;/code&gt; se convierte en un alias del contador de l&amp;iacute;neas para ese identificador de archivo.</target>
        </trans-unit>
        <trans-unit id="8e57c60a3cb6708806cfdda0d69fc8cd46dd15f5" translate="yes" xml:space="preserve">
          <source>Each filehandle in Perl counts the number of lines that have been read from it. (Depending on the value of &lt;code&gt;$/&lt;/code&gt;, Perl's idea of what constitutes a line may not match yours.) When a line is read from a filehandle (via &lt;code&gt;readline()&lt;/code&gt; or &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;), or when &lt;code&gt;tell()&lt;/code&gt; or &lt;code&gt;seek()&lt;/code&gt; is called on it, &lt;code&gt;$.&lt;/code&gt; becomes an alias to the line counter for that filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a9624b1b717a0ce3347c2a7723ee1a1d25abab" translate="yes" xml:space="preserve">
          <source>Each handle can be an &lt;code&gt;IO::Handle&lt;/code&gt; object, an integer or an array reference where the first element is an &lt;code&gt;IO::Handle&lt;/code&gt; or an integer.</source>
          <target state="translated">Cada identificador puede ser un objeto &lt;code&gt;IO::Handle&lt;/code&gt; , un entero o una referencia de matriz donde el primer elemento es un &lt;code&gt;IO::Handle&lt;/code&gt; o un entero.</target>
        </trans-unit>
        <trans-unit id="c1d7462289e4cec1a7aa1fe4c855d903202ec597" translate="yes" xml:space="preserve">
          <source>Each hash &lt;code&gt;%{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contains breakpoints and actions keyed by line number. Individual entries (as opposed to the whole hash) are settable. Perl only cares about Boolean true here, although the values used by</source>
          <target state="translated">Cada hash &lt;code&gt;%{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contiene puntos de interrupci&amp;oacute;n y acciones codificadas por n&amp;uacute;mero de l&amp;iacute;nea. Las entradas individuales (a diferencia del hash completo) se pueden configurar. Perl solo se preocupa por Boolean true aqu&amp;iacute;, aunque los valores utilizados por</target>
        </trans-unit>
        <trans-unit id="62cc45eed91752b51404de9ea925a035fb43cbad" translate="yes" xml:space="preserve">
          <source>Each id must be unique within the document.</source>
          <target state="translated">Cada identificación debe ser única dentro del documento.</target>
        </trans-unit>
        <trans-unit id="667975ad4758db6be064d162ec07e954e503457b" translate="yes" xml:space="preserve">
          <source>Each individual compressed data stream is read until the logical end-of-file is reached. Then &lt;code&gt;nextStream&lt;/code&gt; is called. This will skip to the start of the next compressed data stream and clear the end-of-file flag.</source>
          <target state="translated">Cada flujo de datos comprimidos individual se lee hasta que se alcanza el final l&amp;oacute;gico del archivo. Entonces se llama a &lt;code&gt;nextStream&lt;/code&gt; . Esto saltar&amp;aacute; al inicio del siguiente flujo de datos comprimidos y borrar&amp;aacute; la marca de fin de archivo.</target>
        </trans-unit>
        <trans-unit id="18f2cec26478e04f9b7de7d10fcbddee95e58d2c" translate="yes" xml:space="preserve">
          <source>Each initializer is a pair of values:</source>
          <target state="translated">Cada inicializador es un par de valores:</target>
        </trans-unit>
        <trans-unit id="16164820a467e235638c757ccfe00052f4c79b5f" translate="yes" xml:space="preserve">
          <source>Each is a reference to an array of hostnames (in order of preference), which should be used for the given protocol</source>
          <target state="translated">Cada uno de ellos es una referencia a una serie de nombres de host (en orden de preferencia),que deben utilizarse para el protocolo en cuestión</target>
        </trans-unit>
        <trans-unit id="d29b86c40a3e654b348fa005424d750255213988" translate="yes" xml:space="preserve">
          <source>Each is an instance of a class with the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0eab90b97db650ebd8f6bc0b1085529dd6f2a05" translate="yes" xml:space="preserve">
          <source>Each key is the property name in its longest, most descriptive form. The values are what &lt;a href=&quot;#charprop%28%29&quot;&gt;&quot;charprop()&quot;&lt;/a&gt; would return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c5e455da6b08e4d8e8bc9f42db356fdab7233a" translate="yes" xml:space="preserve">
          <source>Each key is the property name in its longest, most descriptive form. The values are what &lt;a href=&quot;#charprop()&quot;&gt;charprop()&lt;/a&gt; would return.</source>
          <target state="translated">Cada clave es el nombre de la propiedad en su forma m&amp;aacute;s larga y descriptiva. Los valores son los que &lt;a href=&quot;#charprop()&quot;&gt;devolver&amp;iacute;a charprop ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47492265b46ae806bb067e9b524f132422627a4f" translate="yes" xml:space="preserve">
          <source>Each letter may optionally be followed by a number indicating the repeat count. A numeric repeat count may optionally be enclosed in brackets, as in &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . The repeat count gobbles that many values from the LIST when used with all format types other than &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , and &lt;code&gt;P&lt;/code&gt; , where it means something else, described below. Supplying a &lt;code&gt;*&lt;/code&gt; for the repeat count instead of a number means to use however many items are left, except for:</source>
          <target state="translated">Opcionalmente, cada letra puede ir seguida de un n&amp;uacute;mero que indique el n&amp;uacute;mero de repeticiones. Opcionalmente, se puede incluir un recuento de repetici&amp;oacute;n num&amp;eacute;rico entre corchetes, como en el &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . Los engulle contador de repetici&amp;oacute;n que muchos de los valores de la lista cuando se utiliza con todos los tipos de formato que no sea &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; y &lt;code&gt;P&lt;/code&gt; , donde significa algo m&amp;aacute;s, que se describe a continuaci&amp;oacute;n. Suministrando un &lt;code&gt;*&lt;/code&gt; para el recuento de repeticiones en lugar de un n&amp;uacute;mero significa utilizar la cantidad de elementos que queden, excepto:</target>
        </trans-unit>
        <trans-unit id="f1b93edbbeb731023c3dcd7b867f87661f785306" translate="yes" xml:space="preserve">
          <source>Each letter may optionally be followed by a number indicating the repeat count. A numeric repeat count may optionally be enclosed in brackets, as in &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . The repeat count gobbles that many values from the LIST when used with all format types other than &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; , and &lt;code&gt;P&lt;/code&gt; , where it means something else, described below. Supplying a &lt;code&gt;*&lt;/code&gt; for the repeat count instead of a number means to use however many items are left, except for:</source>
          <target state="translated">Opcionalmente, cada letra puede ir seguida de un n&amp;uacute;mero que indique el n&amp;uacute;mero de repeticiones. Opcionalmente, se puede incluir un recuento de repetici&amp;oacute;n num&amp;eacute;rico entre corchetes, como en el &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;(&quot;C[80]&quot;, @arr)&lt;/code&gt; . Los engulle contador de repetici&amp;oacute;n que muchos de los valores de la lista cuando se utiliza con todos los tipos de formato que no sea &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;Z&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;H&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;X&lt;/code&gt; y &lt;code&gt;P&lt;/code&gt; , donde significa algo m&amp;aacute;s, que se describe a continuaci&amp;oacute;n. Suministrando un &lt;code&gt;*&lt;/code&gt; para el recuento de repeticiones en lugar de un n&amp;uacute;mero significa utilizar la cantidad de elementos que queden, excepto:</target>
        </trans-unit>
        <trans-unit id="0ed7a060f431ab2cc494847effa3cd5278eb7c4f" translate="yes" xml:space="preserve">
          <source>Each letter may optionally be followed by a number indicating the repeat count. A numeric repeat count may optionally be enclosed in brackets, as in &lt;code&gt;pack(&quot;C[80]&quot;, @arr)&lt;/code&gt;. The repeat count gobbles that many values from the LIST when used with all format types other than &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;H&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, and &lt;code&gt;P&lt;/code&gt;, where it means something else, described below. Supplying a &lt;code&gt;*&lt;/code&gt; for the repeat count instead of a number means to use however many items are left, except for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca2b686ea513abcdcd81b004dc80b72da247c37" translate="yes" xml:space="preserve">
          <source>Each locale key is a reference to a hash that has the form above, and gives the casing rules for that particular locale, which take precedence over the locale-independent ones when in that locale.</source>
          <target state="translated">Cada clave de localización es una referencia a un hash que tiene la forma anterior,y da las reglas de la carcasa para esa localidad en particular,que tienen prioridad sobre las independientes de la localidad cuando están en esa localidad.</target>
        </trans-unit>
        <trans-unit id="b81c66f6a67c62b4046a77844c9acd84b539087f" translate="yes" xml:space="preserve">
          <source>Each method returns the old value of the &lt;code&gt;IO::Handle&lt;/code&gt; attribute. The methods each take an optional EXPR, which, if supplied, specifies the new value for the &lt;code&gt;IO::Handle&lt;/code&gt; attribute in question. If not supplied, most methods do nothing to the current value--except for &lt;code&gt;autoflush()&lt;/code&gt; , which will assume a 1 for you, just to be different.</source>
          <target state="translated">Cada m&amp;eacute;todo devuelve el valor anterior del atributo &lt;code&gt;IO::Handle&lt;/code&gt; . Cada uno de los m&amp;eacute;todos toma un EXPR opcional, que, si se proporciona, especifica el nuevo valor para el atributo &lt;code&gt;IO::Handle&lt;/code&gt; en cuesti&amp;oacute;n. Si no se proporciona, la mayor&amp;iacute;a de los m&amp;eacute;todos no &lt;code&gt;autoflush()&lt;/code&gt; el valor actual, excepto autoflush () , que asumir&amp;aacute; un 1 para usted, solo para ser diferente.</target>
        </trans-unit>
        <trans-unit id="549fa064c8357d58112301aba532e091511a4996" translate="yes" xml:space="preserve">
          <source>Each method returns the old value of the &lt;code&gt;IO::Handle&lt;/code&gt; attribute. The methods each take an optional EXPR, which, if supplied, specifies the new value for the &lt;code&gt;IO::Handle&lt;/code&gt; attribute in question. If not supplied, most methods do nothing to the current value--except for &lt;code&gt;autoflush()&lt;/code&gt;, which will assume a 1 for you, just to be different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a408a79f13c6ec4a0cd81e57c787564393f289b" translate="yes" xml:space="preserve">
          <source>Each name-type pair declares one element of the struct. Each element name will be defined as an accessor method unless a method by that name is explicitly defined; in the latter case, a warning is issued if the warning flag (&lt;b&gt;-w&lt;/b&gt;) is set.</source>
          <target state="translated">Cada par nombre-tipo declara un elemento de la estructura. Cada nombre de elemento se definir&amp;aacute; como un m&amp;eacute;todo de acceso a menos que se defina expl&amp;iacute;citamente un m&amp;eacute;todo con ese nombre; en el &amp;uacute;ltimo caso, se emite una advertencia si se establece el indicador de advertencia ( &lt;b&gt;-w&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="bea2fa8177204a00acbe330d65cd373309740d46" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;$section_spec&lt;/code&gt; arguments should be a section specification as described in &lt;a href=&quot;#SECTION-SPECIFICATIONS&quot;&gt;SECTION SPECIFICATIONS&lt;/a&gt;. The section specifications are parsed by this method and the resulting regular expressions are stored in the invoking object.</source>
          <target state="translated">Cada uno de los argumentos &lt;code&gt;$section_spec&lt;/code&gt; debe ser una especificaci&amp;oacute;n de secci&amp;oacute;n como se describe en &lt;a href=&quot;#SECTION-SPECIFICATIONS&quot;&gt;ESPECIFICACIONES DE LA SECCI&amp;Oacute;N&lt;/a&gt; . Este m&amp;eacute;todo analiza las especificaciones de la secci&amp;oacute;n y las expresiones regulares resultantes se almacenan en el objeto que invoca.</target>
        </trans-unit>
        <trans-unit id="9af6792ba1f44d7cb824f7440960f3ef5c01b6ba" translate="yes" xml:space="preserve">
          <source>Each of the POSIX classes matches exactly the same as their ASCII-range counterparts.</source>
          <target state="translated">Cada una de las clases POSIX coincide exactamente con sus homólogos del rango ASCII.</target>
        </trans-unit>
        <trans-unit id="be167c32ebe292b1abf425a82a9d67c142fdc9a5" translate="yes" xml:space="preserve">
          <source>Each of the argument lists above comes out of the &lt;code&gt;normalize_f&lt;/code&gt; function looking exactly the same, like this:</source>
          <target state="translated">Cada una de las listas de argumentos anteriores sale de la funci&amp;oacute;n &lt;code&gt;normalize_f&lt;/code&gt; con un aspecto exactamente igual, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="93679dc7d627c4c7a6a3897712645c4450ba1379" translate="yes" xml:space="preserve">
          <source>Each of the commands that produce listings of modules (&lt;code&gt;r&lt;/code&gt; , &lt;code&gt;autobundle&lt;/code&gt; , &lt;code&gt;u&lt;/code&gt; ) also return a list of the IDs of all modules within the list.</source>
          <target state="translated">Cada uno de los comandos que producen listados de m&amp;oacute;dulos ( &lt;code&gt;r&lt;/code&gt; , &lt;code&gt;autobundle&lt;/code&gt; , &lt;code&gt;u&lt;/code&gt; ) tambi&amp;eacute;n devuelve una lista de los ID de todos los m&amp;oacute;dulos dentro de la lista.</target>
        </trans-unit>
        <trans-unit id="36a145ce6b55d2eacd4e152e8b778cb0812f1b4c" translate="yes" xml:space="preserve">
          <source>Each of the elementary pieces of regular expressions which were described before (such as &lt;code&gt;ab&lt;/code&gt; or &lt;code&gt;\Z&lt;/code&gt; ) could match at most one substring at the given position of the input string. However, in a typical regular expression these elementary pieces are combined into more complicated patterns using combining operators &lt;code&gt;ST&lt;/code&gt; , &lt;code&gt;S|T&lt;/code&gt; , &lt;code&gt;S*&lt;/code&gt; etc. (in these examples &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; are regular subexpressions).</source>
          <target state="translated">Cada una de las piezas elementales de expresiones regulares que se describieron antes (como &lt;code&gt;ab&lt;/code&gt; o &lt;code&gt;\Z&lt;/code&gt; ) podr&amp;iacute;a coincidir como m&amp;aacute;ximo con una subcadena en la posici&amp;oacute;n dada de la cadena de entrada. Sin embargo, en una expresi&amp;oacute;n regular t&amp;iacute;pica, estas piezas elementales se combinan en patrones m&amp;aacute;s complicados utilizando operadores de combinaci&amp;oacute;n &lt;code&gt;ST&lt;/code&gt; , &lt;code&gt;S|T&lt;/code&gt; , &lt;code&gt;S*&lt;/code&gt; etc. (en estos ejemplos, &lt;code&gt;S&lt;/code&gt; y &lt;code&gt;T&lt;/code&gt; son subexpresiones regulares).</target>
        </trans-unit>
        <trans-unit id="c1f94498db7cafa14ac711805deae194684f4e3e" translate="yes" xml:space="preserve">
          <source>Each of the elementary pieces of regular expressions which were described before (such as &lt;code&gt;ab&lt;/code&gt; or &lt;code&gt;\Z&lt;/code&gt;) could match at most one substring at the given position of the input string. However, in a typical regular expression these elementary pieces are combined into more complicated patterns using combining operators &lt;code&gt;ST&lt;/code&gt;, &lt;code&gt;S|T&lt;/code&gt;, &lt;code&gt;S*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf85de30bb2350d06139ae6bc58a79af96a26e97" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print a message of &quot;Syntax error.&quot; (followed by a newline) to &lt;code&gt;STDERR&lt;/code&gt; , immediately followed by just the &quot;SYNOPSIS&quot; section (also printed to &lt;code&gt;STDERR&lt;/code&gt; ) and will exit with a status of 2:</source>
          <target state="translated">Cada una de las siguientes invocaciones de &lt;code&gt;pod2usage()&lt;/code&gt; imprimir&amp;aacute; un mensaje de &quot;Error de sintaxis&quot;. (seguida de una nueva l&amp;iacute;nea) a &lt;code&gt;STDERR&lt;/code&gt; , seguida inmediatamente por la secci&amp;oacute;n &quot;SINOPSIS&quot; (tambi&amp;eacute;n impresa en &lt;code&gt;STDERR&lt;/code&gt; ) y saldr&amp;aacute; con un estado de 2:</target>
        </trans-unit>
        <trans-unit id="c471e82fa0389f6962922185f6c1c022a3af5d32" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print a message of &quot;Syntax error.&quot; (followed by a newline) to &lt;code&gt;STDERR&lt;/code&gt;, immediately followed by just the &quot;SYNOPSIS&quot; section (also printed to &lt;code&gt;STDERR&lt;/code&gt;) and will exit with a status of 2:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da247936c8bb95b82240dfbb57e8459e5c728eb2" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print just the &quot;SYNOPSIS&quot; section to &lt;code&gt;STDERR&lt;/code&gt; and will exit with a status of 2:</source>
          <target state="translated">Cada una de las siguientes invocaciones de &lt;code&gt;pod2usage()&lt;/code&gt; imprimir&amp;aacute; solo la secci&amp;oacute;n &quot;SINOPSIS&quot; en &lt;code&gt;STDERR&lt;/code&gt; y saldr&amp;aacute; con un estado de 2:</target>
        </trans-unit>
        <trans-unit id="c3bf15a510b108560bc55f9dc642118c67f04409" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print the &quot;SYNOPSIS&quot; section and any &quot;OPTIONS&quot; and/or &quot;ARGUMENTS&quot; sections to &lt;code&gt;STDOUT&lt;/code&gt; and will exit with a status of 1:</source>
          <target state="translated">Cada una de las siguientes invocaciones de &lt;code&gt;pod2usage()&lt;/code&gt; imprimir&amp;aacute; la secci&amp;oacute;n &quot;SINOPSIS&quot; y las secciones &quot;OPCIONES&quot; y / o &quot;ARGUMENTOS&quot; en &lt;code&gt;STDOUT&lt;/code&gt; y saldr&amp;aacute; con un estado de 1:</target>
        </trans-unit>
        <trans-unit id="8a8549150e98bb7d0199412efeddf54defc2c85f" translate="yes" xml:space="preserve">
          <source>Each of the following invocations of &lt;code&gt;pod2usage()&lt;/code&gt; will print the entire manual page to &lt;code&gt;STDOUT&lt;/code&gt; and will exit with a status of 1:</source>
          <target state="translated">Cada una de las siguientes invocaciones de &lt;code&gt;pod2usage()&lt;/code&gt; imprimir&amp;aacute; la p&amp;aacute;gina completa del manual en &lt;code&gt;STDOUT&lt;/code&gt; y saldr&amp;aacute; con un estado de 1:</target>
        </trans-unit>
        <trans-unit id="159291495d574283955b7dd83a0159a4cbe57ab7" translate="yes" xml:space="preserve">
          <source>Each of the following methods will return the total number of corresponding tests if called in scalar context. If called in list context, returns the descriptions of the parsers which contain the corresponding tests (see &lt;code&gt;add&lt;/code&gt; for an explanation of description.</source>
          <target state="translated">Cada uno de los siguientes m&amp;eacute;todos devolver&amp;aacute; el n&amp;uacute;mero total de pruebas correspondientes si se llama en contexto escalar. Si se llama en el contexto de la lista, devuelve las descripciones de los analizadores que contienen las pruebas correspondientes (consulte &lt;code&gt;add&lt;/code&gt; para obtener una explicaci&amp;oacute;n de la descripci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b4805d0a6e23a882a6f379f5e1aaffac33d67fcd" translate="yes" xml:space="preserve">
          <source>Each of the functions will now be discussed in turn.</source>
          <target state="translated">Cada una de las funciones se discutirá ahora por turnos.</target>
        </trans-unit>
        <trans-unit id="cf8ee854b23795d139b708dbd25340dc64f25e5b" translate="yes" xml:space="preserve">
          <source>Each of the functions will return</source>
          <target state="translated">Cada una de las funciones volverá</target>
        </trans-unit>
        <trans-unit id="67d949b14cef9bc96632c4a26c1317dd5c052479" translate="yes" xml:space="preserve">
          <source>Each of the integer pack codes &lt;code&gt;sSlLqQ&lt;/code&gt; results in a fixed number of bytes, no matter where you execute your program. This may be useful for some applications, but it does not provide for a portable way to pass data structures between Perl and C programs (bound to happen when you call XS extensions or the Perl function &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt;), or when you read or write binary files. What you'll need in this case are template codes that depend on what your local C compiler compiles when you code &lt;code&gt;short&lt;/code&gt; or &lt;code&gt;unsigned long&lt;/code&gt; , for instance. These codes and their corresponding byte lengths are shown in the table below. Since the C standard leaves much leeway with respect to the relative sizes of these data types, actual values may vary, and that's why the values are given as expressions in C and Perl. (If you'd like to use values from &lt;code&gt;%Config&lt;/code&gt; in your program you have to import it with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; .)</source>
          <target state="translated">Cada uno de los c&amp;oacute;digos de paquete entero &lt;code&gt;sSlLqQ&lt;/code&gt; da como resultado un n&amp;uacute;mero fijo de bytes, sin importar d&amp;oacute;nde ejecute su programa. Esto puede ser &amp;uacute;til para algunas aplicaciones, pero no proporciona una forma port&amp;aacute;til de pasar estructuras de datos entre programas en Perl y C (es probable que suceda cuando llama a las extensiones XS o la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; de Perl ), o cuando lee o escribe archivos binarios. . Lo que necesitar&amp;aacute; en este caso son c&amp;oacute;digos de plantilla que dependen de lo que compila su compilador C local cuando codifica en forma &lt;code&gt;short&lt;/code&gt; o &lt;code&gt;unsigned long&lt;/code&gt; , por ejemplo. Estos c&amp;oacute;digos y sus correspondientes longitudes de bytes se muestran en la siguiente tabla. Dado que el est&amp;aacute;ndar C deja mucho margen de maniobra con respecto a los tama&amp;ntilde;os relativos de estos tipos de datos, los valores reales pueden variar, y es por eso que los valores se dan como expresiones en C y Perl. (Si desea usar valores de &lt;code&gt;%Config&lt;/code&gt; en su programa, debe importarlo con &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="6060e81492ddf46249708e305af675d2cd8e4300" translate="yes" xml:space="preserve">
          <source>Each of the integer pack codes &lt;code&gt;sSlLqQ&lt;/code&gt; results in a fixed number of bytes, no matter where you execute your program. This may be useful for some applications, but it does not provide for a portable way to pass data structures between Perl and C programs (bound to happen when you call XS extensions or the Perl function &lt;code&gt;syscall&lt;/code&gt;), or when you read or write binary files. What you'll need in this case are template codes that depend on what your local C compiler compiles when you code &lt;code&gt;short&lt;/code&gt; or &lt;code&gt;unsigned long&lt;/code&gt;, for instance. These codes and their corresponding byte lengths are shown in the table below. Since the C standard leaves much leeway with respect to the relative sizes of these data types, actual values may vary, and that's why the values are given as expressions in C and Perl. (If you'd like to use values from &lt;code&gt;%Config&lt;/code&gt; in your program you have to import it with &lt;code&gt;use Config&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d0d0049982558d7e176e2f3ab3ea596bc6e428" translate="yes" xml:space="preserve">
          <source>Each of the methods below (except config(), accuracy() and precision()) accepts three additional parameters. These arguments &lt;code&gt;$A&lt;/code&gt; , &lt;code&gt;$P&lt;/code&gt; and &lt;code&gt;$R&lt;/code&gt; are &lt;code&gt;accuracy&lt;/code&gt; , &lt;code&gt;precision&lt;/code&gt; and &lt;code&gt;round_mode&lt;/code&gt; . Please see the section about &lt;a href=&quot;#ACCURACY-and-PRECISION&quot;&gt;ACCURACY and PRECISION&lt;/a&gt; for more information.</source>
          <target state="translated">Cada uno de los m&amp;eacute;todos siguientes (excepto config (), precision () y precision ()) acepta tres par&amp;aacute;metros adicionales. Estos argumentos &lt;code&gt;$A&lt;/code&gt; , &lt;code&gt;$P&lt;/code&gt; y &lt;code&gt;$R&lt;/code&gt; son &lt;code&gt;accuracy&lt;/code&gt; , &lt;code&gt;precision&lt;/code&gt; y &lt;code&gt;round_mode&lt;/code&gt; . Consulte la secci&amp;oacute;n sobre &lt;a href=&quot;#ACCURACY-and-PRECISION&quot;&gt;PRECISI&amp;Oacute;N y PRECISI&amp;Oacute;N&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2d2b46938dbf24928125c2dd236a1a486381e417" translate="yes" xml:space="preserve">
          <source>Each of the methods below (except config(), accuracy() and precision()) accepts three additional parameters. These arguments &lt;code&gt;$A&lt;/code&gt;, &lt;code&gt;$P&lt;/code&gt; and &lt;code&gt;$R&lt;/code&gt; are &lt;code&gt;accuracy&lt;/code&gt;, &lt;code&gt;precision&lt;/code&gt; and &lt;code&gt;round_mode&lt;/code&gt;. Please see the section about &lt;a href=&quot;#ACCURACY-and-PRECISION&quot;&gt;&quot;ACCURACY and PRECISION&quot;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bb55af40d1c4ccf668c4ee509cae7b3650aeb0" translate="yes" xml:space="preserve">
          <source>Each of the methods works identically, and is used to install (or uninstall) a single DBM Filter. The only difference between them is the place that the filter is installed.</source>
          <target state="translated">Cada uno de los métodos funciona de manera idéntica,y se utiliza para instalar (o desinstalar)un único Filtro DBM.La única diferencia entre ellos es el lugar donde se instala el filtro.</target>
        </trans-unit>
        <trans-unit id="d70d3afe0fc2fcaf924f4e6c71f92047845119e3" translate="yes" xml:space="preserve">
          <source>Each of the targets is created only once (but see &lt;a href=&quot;#Scratchpads-and-recursion&quot;&gt;&quot;Scratchpads and recursion&quot;&lt;/a&gt; below), and when an opcode needs to put an integer, a double, or a string on stack, it just sets the corresponding parts of its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb52f34c0e7c886d38c077a6693f8fac31c72b2" translate="yes" xml:space="preserve">
          <source>Each of the targets is created only once (but see &lt;a href=&quot;#Scratchpads-and-recursion&quot;&gt;Scratchpads and recursion&lt;/a&gt; below), and when an opcode needs to put an integer, a double, or a string on stack, it just sets the corresponding parts of its</source>
          <target state="translated">Cada uno de los objetivos se crea solo una vez (pero consulte &lt;a href=&quot;#Scratchpads-and-recursion&quot;&gt;Scratchpads y recursividad a&lt;/a&gt; continuaci&amp;oacute;n), y cuando un c&amp;oacute;digo de operaci&amp;oacute;n necesita poner un n&amp;uacute;mero entero, un doble o una cadena en la pila, simplemente establece las partes correspondientes de su</target>
        </trans-unit>
        <trans-unit id="61645526a5f8cc5b5b38c365e573e3b9ce2a363a" translate="yes" xml:space="preserve">
          <source>Each of these areas will be discussed in the following sections.</source>
          <target state="translated">Cada una de estas áreas se examinará en las siguientes secciones.</target>
        </trans-unit>
        <trans-unit id="4a7e0927366cb3008e3cb582f1225e023afb76ec" translate="yes" xml:space="preserve">
          <source>Each of these functions are called without arguments and return the absolute path of the current working directory.</source>
          <target state="translated">Cada una de estas funciones se llama sin argumentos y devuelve la ruta absoluta del directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="fb6c26bfd690fb609fa0a362b968489c94f785d7" translate="yes" xml:space="preserve">
          <source>Each of these input objects are described in further detail in the sections which follow.</source>
          <target state="translated">Cada uno de estos objetos de entrada se describe con más detalle en las secciones que siguen.</target>
        </trans-unit>
        <trans-unit id="cd0ac943df3c5c0919c257e9e2ba53e934e28e43" translate="yes" xml:space="preserve">
          <source>Each of these methods may modify the first input argument, except</source>
          <target state="translated">Cada uno de estos métodos puede modificar el primer argumento de entrada,excepto</target>
        </trans-unit>
        <trans-unit id="94636e821462a702e9dcf821156451ce10166f58" translate="yes" xml:space="preserve">
          <source>Each of these methods may modify the first input argument.</source>
          <target state="translated">Cada uno de estos métodos puede modificar el primer argumento de entrada.</target>
        </trans-unit>
        <trans-unit id="1fd6321d309f67bf764c8af9cff581fae0812fa5" translate="yes" xml:space="preserve">
          <source>Each of these nodes represents an op, a fundamental operation inside the Perl core. The code which implements each operation can be found in the</source>
          <target state="translated">Cada uno de estos nodos representa una operación,una operación fundamental dentro del núcleo de Perl.El código que implementa cada operación se puede encontrar en el</target>
        </trans-unit>
        <trans-unit id="eb5de442d3b4d44516edecf88d3338777e703e96" translate="yes" xml:space="preserve">
          <source>Each of these objects may be replaced by calling one of these parser methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d6b2a3cedc47a8c8496247740303b046f066c7" translate="yes" xml:space="preserve">
          <source>Each of these options is optional; you can include some, all, or none of them.</source>
          <target state="translated">Cada una de estas opciones es opcional;puede incluir algunas,todas o ninguna.</target>
        </trans-unit>
        <trans-unit id="b15a1940399791f7b94602b4451362ab540da911" translate="yes" xml:space="preserve">
          <source>Each of these routines accepts a file specification in either VMS or Unix syntax, and returns the converted file specification, or &lt;code&gt;undef&lt;/code&gt; if an error occurs. The conversions are, for the most part, simply string manipulations; the routines do not check the details of syntax (e.g. that only legal characters are used). There is one exception: when running under VMS, conversions from VMS syntax use the $PARSE service to expand specifications, so illegal syntax, or a relative directory specification which extends above the tope of the current directory path (e.g [---.foo] when in dev:[dir.sub]) will cause errors. In general, any legal file specification will be converted properly, but garbage input tends to produce garbage output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b7bd343bf185137324ab08afba721e66b470a2" translate="yes" xml:space="preserve">
          <source>Each of these routines is prototyped as taking a single scalar argument, so you can use them as unary operators in complex expressions (as long as you don't use the &lt;code&gt;&amp;amp;&lt;/code&gt; form of subroutine call, which bypasses prototype checking).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fde8ca981b648a0a7df0eccad95608e9bb268d" translate="yes" xml:space="preserve">
          <source>Each op is preceded by two pointers: one points to the next op in the slab, and the other points to the slab that owns it. The next-op pointer is needed so that Perl can iterate over a slab and free all its ops. (Op structures are of different sizes, so the slab's ops can't merely be treated as a dense array.) The slab pointer is needed for accessing a reference count on the slab: when the last op on a slab is freed, the slab itself is freed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f0b67ca5c809a794efbf846b5f11a39a783c34" translate="yes" xml:space="preserve">
          <source>Each operand is considered in a modified scalar context, the modification being that array and hash variables are passed by reference to the operator, which implicitly dereferences them. Both elements of each pair are the same:</source>
          <target state="translated">Cada operando se considera en un contexto escalar modificado,siendo la modificación que las variables de matriz y hash se pasan por referencia al operador,que implícitamente las deriva.Los dos elementos de cada par son los mismos:</target>
        </trans-unit>
        <trans-unit id="76254c26642feac52117b7e65ad2b643499a9d47" translate="yes" xml:space="preserve">
          <source>Each operator has both a terse name (its opname) and a more verbose or recognisable descriptive name. The opdesc function can be used to return a list of descriptions for a list of operators.</source>
          <target state="translated">Cada operador tiene un nombre conciso (su nombre de usuario)y un nombre descriptivo más verborreico o reconocible.La función opdesc puede utilizarse para devolver una lista de descripciones para una lista de operadores.</target>
        </trans-unit>
        <trans-unit id="0ffccbf8d7d785427858064bfe414c9a343b8478" translate="yes" xml:space="preserve">
          <source>Each option specifier consists of two parts: the name specification and the argument specification.</source>
          <target state="translated">Cada especificador de opciones consta de dos partes:la especificación del nombre y la especificación del argumento.</target>
        </trans-unit>
        <trans-unit id="49dbe9df44df46422e8ed79c89a972f7e0a049b6" translate="yes" xml:space="preserve">
          <source>Each package contains a special array called &lt;code&gt;@ISA&lt;/code&gt; . The &lt;code&gt;@ISA&lt;/code&gt; array contains a list of that class's parent classes, if any. This array is examined when Perl does method resolution, which we will cover later.</source>
          <target state="translated">Cada paquete contiene una matriz especial llamada &lt;code&gt;@ISA&lt;/code&gt; . La matriz &lt;code&gt;@ISA&lt;/code&gt; contiene una lista de las clases principales de esa clase, si las hay. Esta matriz se examina cuando Perl realiza la resoluci&amp;oacute;n de m&amp;eacute;todos, lo que cubriremos m&amp;aacute;s adelante.</target>
        </trans-unit>
        <trans-unit id="ddf57d8082b4349ec2c54b6a8bdc282825375550" translate="yes" xml:space="preserve">
          <source>Each package contains a special array called &lt;code&gt;@ISA&lt;/code&gt; which contains a list of that class's parent classes, if any. This array is simply a list of scalars, each of which is a string that corresponds to a package name. The array is examined when Perl does method resolution, which is covered in &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9236fa90d77c1443c1fcc30f0eb2e90c48b3b452" translate="yes" xml:space="preserve">
          <source>Each package contains a special array called &lt;code&gt;@ISA&lt;/code&gt;. The &lt;code&gt;@ISA&lt;/code&gt; array contains a list of that class's parent classes, if any. This array is examined when Perl does method resolution, which we will cover later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd56746947dceb1b1ebf83666e64df3d893f0573" translate="yes" xml:space="preserve">
          <source>Each pair is an array reference with two elements - namely the</source>
          <target state="translated">Cada par es una referencia de matriz con dos elementos,a saber,el</target>
        </trans-unit>
        <trans-unit id="79339b4554cd8ab3b93700df12bacff7c6d9a530" translate="yes" xml:space="preserve">
          <source>Each pathname that is a directory that matches the pattern has a slash appended.</source>
          <target state="translated">Cada ruta que es un directorio que coincide con el patrón tiene una barra adjunta.</target>
        </trans-unit>
        <trans-unit id="20b56d27482026f6b453dfe18f7f652ebd744ed0" translate="yes" xml:space="preserve">
          <source>Each plugin should register itself by providing the following structure</source>
          <target state="translated">Cada plugin debe registrarse a sí mismo proporcionando la siguiente estructura</target>
        </trans-unit>
        <trans-unit id="4bc675eeb53212d68aff2215974b513fa9d0ff3e" translate="yes" xml:space="preserve">
          <source>Each programmer will, of course, have his or her own preferences in regards to formatting, but there are some general guidelines that will make your programs easier to read, understand, and maintain.</source>
          <target state="translated">Cada programador tendrá,por supuesto,sus propias preferencias en cuanto al formato,pero hay algunas pautas generales que harán que sus programas sean más fáciles de leer,entender y mantener.</target>
        </trans-unit>
        <trans-unit id="e2d7e5e3cbcd85e0f15e433073f3c09c16649807" translate="yes" xml:space="preserve">
          <source>Each pseudo-process maintains its own virtual environment. Modifications to %ENV affect the virtual environment, and are only visible within that pseudo-process, and in any processes (or pseudo-processes) launched from it.</source>
          <target state="translated">Cada pseudo-proceso mantiene su propio entorno virtual.Las modificaciones del %ENV afectan al entorno virtual,y sólo son visibles dentro de ese pseudo-proceso,y en cualquier proceso (o pseudo-proceso)lanzado desde él.</target>
        </trans-unit>
        <trans-unit id="25a97b930031adadf111787667688ded94505539" translate="yes" xml:space="preserve">
          <source>Each pseudo-process maintains its own virtual idea of the current directory. Modifications to the current directory using chdir() are only visible within that pseudo-process, and in any processes (or pseudo-processes) launched from it. All file and directory accesses from the pseudo-process will correctly map the virtual working directory to the real working directory appropriately.</source>
          <target state="translated">Cada pseudo-proceso mantiene su propia idea virtual del directorio actual.Las modificaciones del directorio actual usando chdir()sólo son visibles dentro de ese pseudo-proceso,y en cualquier proceso (o pseudo-proceso)lanzado desde él.Todos los accesos a archivos y directorios desde el pseudo-proceso mapearán correctamente el directorio de trabajo virtual al directorio de trabajo real de manera apropiada.</target>
        </trans-unit>
        <trans-unit id="8f4f1268e7fb63f76b0f62897f0f8014b138b792" translate="yes" xml:space="preserve">
          <source>Each result bit is based on the least-significant bit of the corresponding input character, i.e., on &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate bits 0 and 1, as do characters &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</source>
          <target state="translated">Cada bit de resultado se basa en el bit menos significativo del car&amp;aacute;cter de entrada correspondiente, es decir, en &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt; . En particular, los caracteres &lt;code&gt;&quot;0&quot;&lt;/code&gt; y &lt;code&gt;&quot;1&quot;&lt;/code&gt; generan los bits 0 y 1, al igual que los caracteres &lt;code&gt;&quot;\000&quot;&lt;/code&gt; y &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abf39ff7c44d3c8c17f0be2056a001c031f6f08e" translate="yes" xml:space="preserve">
          <source>Each result bit is based on the least-significant bit of the corresponding input character, i.e., on &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate bits 0 and 1, as do characters &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</source>
          <target state="translated">Cada bit de resultado se basa en el bit menos significativo del car&amp;aacute;cter de entrada correspondiente, es decir, en &lt;code&gt;&lt;a href=&quot;ord&quot;&gt;ord($char)%2&lt;/a&gt;&lt;/code&gt; . En particular, los caracteres &lt;code&gt;&quot;0&quot;&lt;/code&gt; y &lt;code&gt;&quot;1&quot;&lt;/code&gt; generan los bits 0 y 1, al igual que los caracteres &lt;code&gt;&quot;\000&quot;&lt;/code&gt; y &lt;code&gt;&quot;\001&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1993b5736422a8ea772061042ca6c62dead2e8c" translate="yes" xml:space="preserve">
          <source>Each result bit is based on the least-significant bit of the corresponding input character, i.e., on &lt;code&gt;ord($char)%2&lt;/code&gt;. In particular, characters &lt;code&gt;&quot;0&quot;&lt;/code&gt; and &lt;code&gt;&quot;1&quot;&lt;/code&gt; generate bits 0 and 1, as do characters &lt;code&gt;&quot;\000&quot;&lt;/code&gt; and &lt;code&gt;&quot;\001&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1801d81c7323468b4de78bc480016b6092b96d8e" translate="yes" xml:space="preserve">
          <source>Each result fetched is a result object of a different type. There are common methods to each result object and different types may have methods unique to their type. Sometimes a type method may be overridden in a subclass, but its use is guaranteed to be identical.</source>
          <target state="translated">Cada resultado obtenido es un objeto de un tipo diferente.Hay métodos comunes para cada objeto resultante y los diferentes tipos pueden tener métodos únicos para su tipo.A veces un método de tipo puede ser anulado en una subclase,pero se garantiza que su uso es idéntico.</target>
        </trans-unit>
        <trans-unit id="4e19bf2bd96e365232fc6a017a9d4e2f9f8f058b" translate="yes" xml:space="preserve">
          <source>Each result returned is a &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass, referred to as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca0f4c2c0d0f6d5b588e090e9018c1d20041904" translate="yes" xml:space="preserve">
          <source>Each result returned is a &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass, referred to as</source>
          <target state="translated">Cada resultado devuelto es una subclase &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; , denominada</target>
        </trans-unit>
        <trans-unit id="ce5b6f7b029d0c88c7f3bdd0a0914e98b5dca329" translate="yes" xml:space="preserve">
          <source>Each result returned is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. See that module and related classes for more information on how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a1f92895a8d5d3bca2a476a0ec322b95e7589a" translate="yes" xml:space="preserve">
          <source>Each result returned is a subclass of &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. See that module and related classes for more information on how to use them.</source>
          <target state="translated">Cada resultado devuelto es una subclase de &lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Consulte ese m&amp;oacute;dulo y las clases relacionadas para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo usarlos.</target>
        </trans-unit>
        <trans-unit id="8f5ef808a290d77bcb78c1a52baf58c7827e311b" translate="yes" xml:space="preserve">
          <source>Each scalar &lt;code&gt;${&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contains &lt;code&gt;&quot;_&amp;lt;$filename&quot;&lt;/code&gt; . This is also the case for evaluated strings that contain subroutines, or which are currently being executed. The $filename for &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed strings looks like &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</source>
          <target state="translated">Cada escalar &lt;code&gt;${&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contiene &lt;code&gt;&quot;_&amp;lt;$filename&quot;&lt;/code&gt; . Este tambi&amp;eacute;n es el caso de las cadenas evaluadas que contienen subrutinas o que se est&amp;aacute;n ejecutando actualmente. El nombre de archivo $ para las cadenas &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uadas se parece a &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; 34)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccc94bfc366f53a70874613dffa08986828d80a8" translate="yes" xml:space="preserve">
          <source>Each scalar &lt;code&gt;${&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; contains &lt;code&gt;&quot;_&amp;lt;$filename&quot;&lt;/code&gt;. This is also the case for evaluated strings that contain subroutines, or which are currently being executed. The $filename for &lt;code&gt;eval&lt;/code&gt;ed strings looks like &lt;code&gt;(eval 34)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b759249474717644d66332dcc04eba32c6b818f" translate="yes" xml:space="preserve">
          <source>Each semaphore has a counter attached to it. By default, semaphores are created with the counter set to one, &lt;code&gt;down()&lt;/code&gt; decrements the counter by one, and &lt;code&gt;up()&lt;/code&gt; increments by one. However, we can override any or all of these defaults simply by passing in different values:</source>
          <target state="translated">Cada sem&amp;aacute;foro tiene un contador adjunto. De forma predeterminada, los sem&amp;aacute;foros se crean con el contador establecido en uno, &lt;code&gt;down()&lt;/code&gt; reduce el contador en uno y &lt;code&gt;up()&lt;/code&gt; incrementa en uno. Sin embargo, podemos anular cualquiera o todos estos valores predeterminados simplemente pasando diferentes valores:</target>
        </trans-unit>
        <trans-unit id="9e3598640cb6381c253bcf070a1e62dc7e9d0823" translate="yes" xml:space="preserve">
          <source>Each step is of the form &lt;code&gt;n &amp;lt;x&amp;gt; &amp;lt;y&amp;gt;&lt;/code&gt;, with &lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt; the part of the string matched and &lt;code&gt;&amp;lt;y&amp;gt;&lt;/code&gt; the part not yet matched. The &lt;code&gt;|  1:  STAR&lt;/code&gt; says that Perl is at line number 1 in the compilation list above. See &lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;Debugging Regular Expressions in perldebguts&lt;/a&gt; for much more detail.</source>
          <target state="translated">Cada paso tiene la forma &lt;code&gt;n &amp;lt;x&amp;gt; &amp;lt;y&amp;gt;&lt;/code&gt; , con &lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt; la parte de la cadena que coincide y &lt;code&gt;&amp;lt;y&amp;gt;&lt;/code&gt; la parte que a&amp;uacute;n no coincide. El &lt;code&gt;| 1: STAR&lt;/code&gt; dice que Perl est&amp;aacute; en la l&amp;iacute;nea n&amp;uacute;mero 1 en la lista de compilaci&amp;oacute;n anterior. Consulte &lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;Depuraci&amp;oacute;n de expresiones regulares en perldebguts&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="621b92ce1167d60ce7eabc3bf97a2ce373df3b42" translate="yes" xml:space="preserve">
          <source>Each step is of the form &lt;code&gt;n &amp;lt;x&amp;gt; &amp;lt;y&amp;gt;&lt;/code&gt;, with &lt;code&gt;&amp;lt;x&amp;gt;&lt;/code&gt; the part of the string matched and &lt;code&gt;&amp;lt;y&amp;gt;&lt;/code&gt; the part not yet matched. The &lt;code&gt;| 1: STAR&lt;/code&gt; says that Perl is at line number 1 in the compilation list above. See &lt;a href=&quot;perldebguts#Debugging-Regular-Expressions&quot;&gt;&quot;Debugging Regular Expressions&quot; in perldebguts&lt;/a&gt; for much more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f223fa7c50954c6826a1fdb18aaf28328cfda343" translate="yes" xml:space="preserve">
          <source>Each test can be given a little descriptive name as the second argument to &lt;code&gt;ok()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdc8ff98493a9f7ade9d6296926319855358f97" translate="yes" xml:space="preserve">
          <source>Each thread (except the main thread) is started using the C locale. The main thread is started like all other Perl programs; see &lt;a href=&quot;perllocale#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot; in perllocale&lt;/a&gt;. You can switch locales in any thread as often as you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3defe21495aad5ab5041830fd4fe29198a67142" translate="yes" xml:space="preserve">
          <source>Each time &lt;code&gt;$finder-&amp;gt;next&lt;/code&gt; is called, the iterator returns one of two possible values:</source>
          <target state="translated">Cada vez que se llama a &lt;code&gt;$finder-&amp;gt;next&lt;/code&gt; , el iterador devuelve uno de dos valores posibles:</target>
        </trans-unit>
        <trans-unit id="54bbe29b947a5618329ec98194ec80f8aabe46b6" translate="yes" xml:space="preserve">
          <source>Each type of section can appear an arbitrary number of times and does not have to appear at all. For example, a typemap may commonly lack &lt;code&gt;INPUT&lt;/code&gt; and &lt;code&gt;OUTPUT&lt;/code&gt; sections if all it needs to do is associate additional C types with core XS types like T_PTROBJ. Lines that start with a hash &lt;code&gt;#&lt;/code&gt; are considered comments and ignored in the &lt;code&gt;TYPEMAP&lt;/code&gt; section, but are considered significant in &lt;code&gt;INPUT&lt;/code&gt; and &lt;code&gt;OUTPUT&lt;/code&gt; . Blank lines are generally ignored.</source>
          <target state="translated">Cada tipo de secci&amp;oacute;n puede aparecer un n&amp;uacute;mero arbitrario de veces y no tiene que aparecer en absoluto. Por ejemplo, un mapa de tipos com&amp;uacute;nmente puede carecer de secciones &lt;code&gt;INPUT&lt;/code&gt; y &lt;code&gt;OUTPUT&lt;/code&gt; si todo lo que necesita hacer es asociar tipos C adicionales con tipos XS centrales como T_PTROBJ. Las l&amp;iacute;neas que comienzan con un hash &lt;code&gt;#&lt;/code&gt; se consideran comentarios y se ignoran en la secci&amp;oacute;n &lt;code&gt;TYPEMAP&lt;/code&gt; , pero se consideran significativas en &lt;code&gt;INPUT&lt;/code&gt; y &lt;code&gt;OUTPUT&lt;/code&gt; . Las l&amp;iacute;neas en blanco generalmente se ignoran.</target>
        </trans-unit>
        <trans-unit id="b8ab41b525aa7b7c38e4e3da5cf8193e961a308c" translate="yes" xml:space="preserve">
          <source>Each type of section can appear an arbitrary number of times and does not have to appear at all. For example, a typemap may commonly lack &lt;code&gt;INPUT&lt;/code&gt; and &lt;code&gt;OUTPUT&lt;/code&gt; sections if all it needs to do is associate additional C types with core XS types like T_PTROBJ. Lines that start with a hash &lt;code&gt;#&lt;/code&gt; are considered comments and ignored in the &lt;code&gt;TYPEMAP&lt;/code&gt; section, but are considered significant in &lt;code&gt;INPUT&lt;/code&gt; and &lt;code&gt;OUTPUT&lt;/code&gt;. Blank lines are generally ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99826defe1aa3e0e7dfa632ce9b50c12211fd46" translate="yes" xml:space="preserve">
          <source>Each typedef has specific routines that manipulate the various data types.</source>
          <target state="translated">Cada tipedef tiene rutinas específicas que manipulan los diversos tipos de datos.</target>
        </trans-unit>
        <trans-unit id="a786e808038f24779f10721b5785e1d471731d02" translate="yes" xml:space="preserve">
          <source>Each value in the results list will be a hash reference containing the following fields:</source>
          <target state="translated">Cada valor de la lista de resultados será una referencia hash que contiene los siguientes campos:</target>
        </trans-unit>
        <trans-unit id="d6fa3b1f2df46de4d0da0473d7f7df5be8fdd538" translate="yes" xml:space="preserve">
          <source>Each version of Perl comes with the documentation that was current at the time of release. This poses a problem for content such as book lists. There are probably very nice books published after this list was included in your Perl release, and you can check the latest released version at &lt;a href=&quot;http://perldoc.perl.org/perlbook.html&quot;&gt;http://perldoc.perl.org/perlbook.html&lt;/a&gt; .</source>
          <target state="translated">Cada versi&amp;oacute;n de Perl viene con la documentaci&amp;oacute;n que estaba actualizada en el momento del lanzamiento. Esto plantea un problema para contenido como listas de libros. Probablemente haya libros muy buenos publicados despu&amp;eacute;s de que esta lista fuera incluida en su versi&amp;oacute;n de Perl, y puede consultar la &amp;uacute;ltima versi&amp;oacute;n publicada en &lt;a href=&quot;http://perldoc.perl.org/perlbook.html&quot;&gt;http://perldoc.perl.org/perlbook.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a017204ca793ea63195213655418d18b5e46cf36" translate="yes" xml:space="preserve">
          <source>Earlier Mac OS X releases (10.2 &quot;Jaguar&quot; and older) did not include a completely thread-safe libc, so threading is not fully supported. Also, earlier releases included a buggy libdb, so some of the DB_File tests are known to fail on those releases.</source>
          <target state="translated">Los primeros lanzamientos de Mac OS X (10.2 &quot;Jaguar&quot; y anteriores)no incluían una libra completamente segura para los hilos,por lo que los hilos no son totalmente compatibles.Además,las versiones anteriores incluían una libdb con errores,por lo que se sabe que algunas de las pruebas de DB_File fallan en esas versiones.</target>
        </trans-unit>
        <trans-unit id="a252186ae05a758597f2268019d7fe33e7216333" translate="yes" xml:space="preserve">
          <source>Earlier releases caveats</source>
          <target state="translated">Las primeras advertencias de los lanzamientos</target>
        </trans-unit>
        <trans-unit id="8144bf937e246b0c3995f39e74e8340a0ff57aa1" translate="yes" xml:space="preserve">
          <source>Earlier than Perl 5.10, you have a bit of work to do. You want to avoid compiling a regular expression every time you want to match it. In this example, perl must recompile the regular expression for every iteration of the &lt;code&gt;foreach&lt;/code&gt; loop since it has no way to know what &lt;code&gt;$pattern&lt;/code&gt; will be:</source>
          <target state="translated">Antes de Perl 5.10, tiene un poco de trabajo por hacer. Desea evitar compilar una expresi&amp;oacute;n regular cada vez que quiera hacer coincidirla. En este ejemplo, perl debe recompilar la expresi&amp;oacute;n regular para cada iteraci&amp;oacute;n del bucle &lt;code&gt;foreach&lt;/code&gt; , ya que no tiene forma de saber cu&amp;aacute;l ser&amp;aacute; &lt;code&gt;$pattern&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2412eca1a81df7ff0f1d8fd57bf151a2e60cb6ee" translate="yes" xml:space="preserve">
          <source>Earlier versions of Perl accepted almost all the 6.1 names. These were most extensively documented in the v5.14 version of this pod: &lt;a href=&quot;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&quot;&gt;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&lt;/a&gt;.</source>
          <target state="translated">Las versiones anteriores de Perl aceptaban casi todos los nombres 6.1. Estos se documentaron m&amp;aacute;s extensamente en la versi&amp;oacute;n v5.14 de este pod: &lt;a href=&quot;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&quot;&gt;http://perldoc.perl.org/5.14.0/charnames.html#ALIASES&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="041f750894a2130f024fa1d40c0e0cb8140d53b7" translate="yes" xml:space="preserve">
          <source>Earlier versions of Storable would immediately croak if they encountered a file with a higher internal version number than the reading Storable knew about. Internal version numbers are increased each time new data types (such as restricted hashes) are added to the vocabulary of the file format. This meant that a newer Storable module had no way of writing a file readable by an older Storable, even if the writer didn't store newer data types.</source>
          <target state="translated">Las primeras versiones de Storable se morían inmediatamente si se encontraban con un archivo con un número de versión interna más alto del que conocía Storable.Los números de versión internos se incrementan cada vez que se añaden nuevos tipos de datos (como los hashes restringidos)al vocabulario del formato de archivo.Esto significaba que un módulo Storable más nuevo no tenía forma de escribir un archivo legible por un Storable más antiguo,incluso si el escritor no almacenaba tipos de datos más nuevos.</target>
        </trans-unit>
        <trans-unit id="e4b297dbcd2a6bb824d7c2a7ee2008800dedb8e3" translate="yes" xml:space="preserve">
          <source>Earlier, we mentioned that the &lt;code&gt;File&lt;/code&gt; class's &lt;code&gt;last_mod_time&lt;/code&gt; accessor could return a &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; object. This is a perfect example of composition. We could go even further, and make the &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; accessors return objects as well. The &lt;code&gt;File&lt;/code&gt; class would then be &lt;b&gt;composed&lt;/b&gt; of several other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641edf650debd12f3350ba77247f6ae399c9cef3" translate="yes" xml:space="preserve">
          <source>Earlier, we mentioned that the &lt;code&gt;File&lt;/code&gt; class's &lt;code&gt;last_mod_time&lt;/code&gt; accessor could return a &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; object. This is a perfect example of composition. We could go even further, and make the &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; accessors return objects as well. The &lt;code&gt;File&lt;/code&gt; class would then be &lt;b&gt;composed&lt;/b&gt; of several other objects.</source>
          <target state="translated">Anteriormente, mencionamos que el &lt;code&gt;last_mod_time&lt;/code&gt; la clase &lt;code&gt;File&lt;/code&gt; podr&amp;iacute;a devolver un objeto &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; . Este es un ejemplo perfecto de composici&amp;oacute;n. Podr&amp;iacute;amos ir a&amp;uacute;n m&amp;aacute;s lejos y hacer que la &lt;code&gt;path&lt;/code&gt; y los accesores de &lt;code&gt;content&lt;/code&gt; devuelvan objetos. La clase &lt;code&gt;File&lt;/code&gt; estar&amp;iacute;a &lt;b&gt;compuesta&lt;/b&gt; por varios otros objetos.&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0f33a9394c2fcd538084772b52d2341a61de3e00" translate="yes" xml:space="preserve">
          <source>Early Perl versions worked on some EBCDIC machines, but the last known version that ran on EBCDIC was v5.8.7, until v5.22, when the Perl core again works on z/OS. Theoretically, it could work on OS/400 or Siemens' BS2000 (or their successors), but this is untested. In v5.22 and 5.24, not all the modules found on CPAN but shipped with core Perl work on z/OS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2d95ddabd105e29656829184c35d2859c555dc" translate="yes" xml:space="preserve">
          <source>Early Perl versions worked on some EBCDIC machines, but the last known version that ran on EBCDIC was v5.8.7, until v5.22, when the Perl core again works on z/OS. Theoretically, it could work on OS/400 or Siemens' BS2000 (or their successors), but this is untested. In v5.22, not all the modules found on CPAN but shipped with core Perl work on z/OS.</source>
          <target state="translated">Las primeras versiones de Perl funcionaban en algunas máquinas de EBCDIC,pero la última versión conocida que funcionaba en EBCDIC era la v5.8.7,hasta la v5.22,cuando el núcleo de Perl vuelve a funcionar en z/OS.Teóricamente,podría funcionar en OS/400 o en el BS2000 de Siemens (o sus sucesores),pero esto no está probado.En la v5.22,no todos los módulos encontrados en el CPAN pero enviados con el núcleo de Perl funcionan en z/OS.</target>
        </trans-unit>
        <trans-unit id="59b164194e7edb2e85034e9b78794d560a716b37" translate="yes" xml:space="preserve">
          <source>Ease testing test modules built with Test::Builder</source>
          <target state="translated">Facilitar la prueba de los módulos de prueba construidos con Test::Builder</target>
        </trans-unit>
        <trans-unit id="dae7ef5eb7ee790d1fea0c60a9c1de322881c27f" translate="yes" xml:space="preserve">
          <source>Easier to test new testing tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a188f6f02161d17a281a3ef192ea2346304b188" translate="yes" xml:space="preserve">
          <source>Easily interact with CPAN from the command line</source>
          <target state="translated">Interactuar fácilmente con el CPAN desde la línea de mando</target>
        </trans-unit>
        <trans-unit id="45fc6c80b5f40c599a9996e4565f6c3c0441f578" translate="yes" xml:space="preserve">
          <source>Eclipse</source>
          <target state="translated">Eclipse</target>
        </trans-unit>
        <trans-unit id="995f14f2d2d8a63a7a9da7579e9e95a2acf52319" translate="yes" xml:space="preserve">
          <source>Ed Avis</source>
          <target state="translated">Ed Avis</target>
        </trans-unit>
        <trans-unit id="9b2f1a6097a83d57a9f13c69653ee867428c4309" translate="yes" xml:space="preserve">
          <source>Ed Avis &amp;lt;eda@linux01.wcl.local&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00837140532ce93fe6f2a0b0f08779867c4ee055" translate="yes" xml:space="preserve">
          <source>Ed J &amp;lt;mohawk2@users.noreply.github.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528c45b93e145146f93473cbaa4675f9b54b16c1" translate="yes" xml:space="preserve">
          <source>Edgar &quot;Trizor&quot; Bering &amp;lt;trizor@gmail.com&amp;gt;</source>
          <target state="translated">Edgar &quot;Trizor&quot; Bering &amp;lt;trizor@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1f7a7e23b64ce5747c4a63c4739d2a868d6ca53c" translate="yes" xml:space="preserve">
          <source>Edit the GNUmakefile, makefile.mk (or Makefile, if you're using nmake) and change the values of INST_DRV and INST_TOP. You can also enable various build flags. These are explained in the makefiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76b3763dae70623eb55885995406de6279fdb6e" translate="yes" xml:space="preserve">
          <source>Edit the Makefile.PL file so that the corresponding line looks like this:</source>
          <target state="translated">Edita el archivo Makefile.PL para que la línea correspondiente se vea así:</target>
        </trans-unit>
        <trans-unit id="f7940347fff54108cd46081728a5cf85408a717b" translate="yes" xml:space="preserve">
          <source>Edit the files generated. You don't have to if you have no time AND no intention to give it to someone else. But it is a good idea to edit the pod and to add more tests.</source>
          <target state="translated">Edita los archivos generados.No tienes que hacerlo si no tienes tiempo y no tienes la intención de dárselo a alguien más.Pero es una buena idea editar la vaina y añadir más pruebas.</target>
        </trans-unit>
        <trans-unit id="954ea018e0a987091c4440d55ba64f48e0cccfe8" translate="yes" xml:space="preserve">
          <source>Edit the makefile.mk (or Makefile, if you're using nmake) and change the values of INST_DRV and INST_TOP. You can also enable various build flags. These are explained in the makefiles.</source>
          <target state="translated">Edita el makefile.mk (o Makefile,si usas nmake)y cambia los valores de INST_DRV e INST_TOP.También puedes habilitar varias banderas de construcción.Estas se explican en los makefiles.</target>
        </trans-unit>
        <trans-unit id="b93bb818c85552f3fcd19e172c258ef9c6aad22d" translate="yes" xml:space="preserve">
          <source>Editor Support for Debugging</source>
          <target state="translated">Apoyo del editor para la depuración</target>
        </trans-unit>
        <trans-unit id="68575b9eb0c3bb98d30a72178c5ff21f9fae81f0" translate="yes" xml:space="preserve">
          <source>Editor to use.</source>
          <target state="translated">Editor para usar.</target>
        </trans-unit>
        <trans-unit id="77cd7c3d29d911531fb7afe572b99c8c5ba4e8b7" translate="yes" xml:space="preserve">
          <source>Editorial adjustments by Gurusamy Sarathy &amp;lt;gsar@ActiveState.com&amp;gt;</source>
          <target state="translated">Ajustes editoriales de Gurusamy Sarathy &amp;lt;gsar@ActiveState.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e5b26fe0f2ccbc86d51353217407910ecc40ac72" translate="yes" xml:space="preserve">
          <source>Edward Zborowski &amp;lt;ed@rubensteintech.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73be54c86084c8c273a09c1c9821e5a9131296dd" translate="yes" xml:space="preserve">
          <source>Effect:</source>
          <target state="translated">Effect:</target>
        </trans-unit>
        <trans-unit id="8117456b097c6d57fb7d1f1dab282a3702937b2f" translate="yes" xml:space="preserve">
          <source>Efficient removal of characters from the beginning of the string buffer. &lt;code&gt;SvPOK(sv)&lt;/code&gt;, or at least &lt;code&gt;SvPOKp(sv)&lt;/code&gt;, must be true and &lt;code&gt;ptr&lt;/code&gt; must be a pointer to somewhere inside the string buffer. &lt;code&gt;ptr&lt;/code&gt; becomes the first character of the adjusted string. Uses the &lt;code&gt;OOK&lt;/code&gt; hack. On return, only &lt;code&gt;SvPOK(sv)&lt;/code&gt; and &lt;code&gt;SvPOKp(sv)&lt;/code&gt; among the &lt;code&gt;OK&lt;/code&gt; flags will be true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7ac9002bbe557a0e89e8f9ac76410e740b68c3" translate="yes" xml:space="preserve">
          <source>Efficient removal of characters from the beginning of the string buffer. SvPOK(sv), or at least SvPOKp(sv), must be true and the &lt;code&gt;ptr&lt;/code&gt; must be a pointer to somewhere inside the string buffer. The &lt;code&gt;ptr&lt;/code&gt; becomes the first character of the adjusted string. Uses the &quot;OOK hack&quot;. On return, only SvPOK(sv) and SvPOKp(sv) among the OK flags will be true.</source>
          <target state="translated">Eliminaci&amp;oacute;n eficiente de caracteres desde el principio del b&amp;uacute;fer de cadenas. SvPOK (sv), o al menos SvPOKp (sv), debe ser verdadero y &lt;code&gt;ptr&lt;/code&gt; debe ser un puntero a alg&amp;uacute;n lugar dentro del b&amp;uacute;fer de cadena. El &lt;code&gt;ptr&lt;/code&gt; se convierte en el primer car&amp;aacute;cter de la cadena ajustada. Utiliza el &quot;truco OOK&quot;. Al regresar, solo SvPOK (sv) y SvPOKp (sv) entre los indicadores OK ser&amp;aacute;n verdaderos.</target>
        </trans-unit>
        <trans-unit id="f18b25f084ce81b950168aedca18f94cb1425062" translate="yes" xml:space="preserve">
          <source>Efficiently compute time from local and GMT time</source>
          <target state="translated">Calcular eficientemente el tiempo de la hora local y la hora GMT</target>
        </trans-unit>
        <trans-unit id="654f6a3bdd1d9e4bdcf155781a2de9b4ed80c132" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;IO::String&lt;/code&gt; or &lt;code&gt;perlio&lt;/code&gt; support is needed to support writing stringified archives. Currently, &lt;code&gt;perlio&lt;/code&gt; is the preferred method, if available.</source>
          <target state="translated">Se necesita soporte para &lt;code&gt;IO::String&lt;/code&gt; o &lt;code&gt;perlio&lt;/code&gt; para admitir la escritura de archivos en cadena. Actualmente, &lt;code&gt;perlio&lt;/code&gt; es el m&amp;eacute;todo preferido, si est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="85dba161f5ca6a960a7dc8fa1039724a8c09cad4" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;\g&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (starting in Perl 5.10.0), or &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (old-style) where</source>
          <target state="translated">O &lt;code&gt;\g&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (comenzando en Perl 5.10.0), o &lt;code&gt;\&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; (estilo antiguo) donde</target>
        </trans-unit>
        <trans-unit id="52f049aa56476852e6a153929348eb18e7bf1459" translate="yes" xml:space="preserve">
          <source>Either a named or anonymous pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb02a27773229541ab59b1944bd46b1d5a6ebed2" translate="yes" xml:space="preserve">
          <source>Either a regular &lt;b&gt;assignment&lt;/b&gt; or a compound &lt;b&gt;operator&lt;/b&gt; composed of an ordinary assignment and some other operator, that changes the value of a variable in place; that is, relative to its old value. For example, &lt;code&gt;$a += 2&lt;/code&gt; adds &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;$a&lt;/code&gt; .</source>
          <target state="translated">Ya sea una &lt;b&gt;asignaci&amp;oacute;n&lt;/b&gt; regular o un &lt;b&gt;operador&lt;/b&gt; compuesto compuesto por una asignaci&amp;oacute;n ordinaria y alg&amp;uacute;n otro operador, que cambia el valor de una variable en su lugar; es decir, en relaci&amp;oacute;n con su antiguo valor. Por ejemplo, &lt;code&gt;$a += 2&lt;/code&gt; suma &lt;code&gt;2&lt;/code&gt; a &lt;code&gt;$a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0dd3a0e7d7fd04d60cdb8e08fb04cc78c683756e" translate="yes" xml:space="preserve">
          <source>Either a regular &lt;b&gt;assignment&lt;/b&gt; or a compound &lt;b&gt;operator&lt;/b&gt; composed of an ordinary assignment and some other operator, that changes the value of a variable in place; that is, relative to its old value. For example, &lt;code&gt;$a += 2&lt;/code&gt; adds &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;$a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281cd0fa078fd4c1ba948d728426cec878f64c16" translate="yes" xml:space="preserve">
          <source>Either assimilate new technologies, or build bridges to them.</source>
          <target state="translated">O bien asimilar las nuevas tecnologías,o bien construir puentes hacia ellas.</target>
        </trans-unit>
        <trans-unit id="616b8deb9c86ed3074fc60088a26151e3856d891" translate="yes" xml:space="preserve">
          <source>Either form above will work. This will return a list of attributes defined on the object. This list is returned in the attribute definition order, parent class attributes are listed before subclass attributes. Duplicate attributes will be removed before the list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2577d609c330867bbdb6a4c63c0df0f3f5ae7cc8" translate="yes" xml:space="preserve">
          <source>Either have an argumentless =over, or have its argument a strictly positive number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b1d548fa9375ac8cee4b6bb3288cae52feda67" translate="yes" xml:space="preserve">
          <source>Either not implemented or a no-op. (Android)</source>
          <target state="translated">O no se aplica o no se opera.(Androide)</target>
        </trans-unit>
        <trans-unit id="9fd8e33d6202aef3ccb0a1588e2309a6eeaf7193" translate="yes" xml:space="preserve">
          <source>Either of &lt;code&gt;LocalService&lt;/code&gt; or &lt;code&gt;PeerService&lt;/code&gt; (or their &lt;code&gt;...Port&lt;/code&gt; synonyms) can be either a service name, a decimal number, or a string containing both a service name and number, in a form such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6aadb20634080f518a8887a688da9b1fee48d93" translate="yes" xml:space="preserve">
          <source>Either of the above forms of &quot;layer&quot; specifications can be made the default for a lexical scope with the &lt;code&gt;use open ...&lt;/code&gt; pragma. See &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47f17b2cb7b7674bb2cbd89473a3cd6f362bf48" translate="yes" xml:space="preserve">
          <source>Either of the following will work instead:</source>
          <target state="translated">Cualquiera de los siguientes funcionará en su lugar:</target>
        </trans-unit>
        <trans-unit id="e5a6a14049fff21a602c284699a2c9fbe3ca6693" translate="yes" xml:space="preserve">
          <source>Either single-quote your strings, or (preferably) use forward slashes. Since all DOS and Windows versions since something like MS-DOS 2.0 or so have treated &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt; the same in a path, you might as well use the one that doesn't clash with Perl--or the POSIX shell, ANSI C and C++, awk, Tcl, Java, or Python, just to mention a few. POSIX paths are more portable, too.</source>
          <target state="translated">O use comillas simples en sus cadenas o (preferiblemente) use barras diagonales. Dado que todas las versiones de DOS y Windows desde algo como MS-DOS 2.0 m&amp;aacute;s o menos han tratado &lt;code&gt;/&lt;/code&gt; y &lt;code&gt;\&lt;/code&gt; lo mismo en una ruta, tambi&amp;eacute;n podr&amp;iacute;a usar la que no choca con Perl, o el shell POSIX, ANSI C y C ++, awk, Tcl, Java o Python, solo por mencionar algunos. Las rutas POSIX tambi&amp;eacute;n son m&amp;aacute;s port&amp;aacute;tiles.</target>
        </trans-unit>
        <trans-unit id="a48425d47cea1024da1aa0b5eb56b9a2e8f4b87c" translate="yes" xml:space="preserve">
          <source>Either stringify the structure yourself (no fun), or else get the MLDBM (which uses Data::Dumper) module from CPAN and layer it on top of either DB_File or GDBM_File. You might also try DBM::Deep, but it can be a bit slow.</source>
          <target state="translated">O bien,o bien,stringifica la estructura usted mismo (no es divertido),o bien,obtiene el módulo MLDBM (que utiliza Data::Dumper)de CPAN y lo coloca en la parte superior de DB_File o GDBM_File.También puedes probar DBM::Deep,pero puede ser un poco lento.</target>
        </trans-unit>
        <trans-unit id="f91179ba5041e3cd11279b2a09e8c8dafe42d600" translate="yes" xml:space="preserve">
          <source>Either the 5.006001 or the 5.6.1 format is acceptable.</source>
          <target state="translated">El formato 5.006001 o el 5.6.1 es aceptable.</target>
        </trans-unit>
        <trans-unit id="f3046bc2658fc9703b653ff4f645f1c7f4b09d3a" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; flag will warn you when you use an array slice with a single index.</source>
          <target state="translated">O el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; o el indicador &lt;b&gt;-w&lt;/b&gt; le advertir&amp;aacute;n cuando use un segmento de matriz con un solo &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="175fe2f08cb303f8f8870d3f7cd0357b5f36d7a6" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;use warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; flag will warn you when you use an array slice with a single index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906b6fd14fb2f43afa53be4e9384438767144648" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;warnings::warn&lt;/code&gt; or &lt;code&gt;warnings::warnif&lt;/code&gt; function should be used to actually display the warnings message. This is because they can make use of the feature that allows warnings to be escalated into fatal errors. So in this case</source>
          <target state="translated">Se debe utilizar la funci&amp;oacute;n &lt;code&gt;warnings::warn&lt;/code&gt; o &lt;code&gt;warnings::warnif&lt;/code&gt; para mostrar el mensaje de advertencia. Esto se debe a que pueden hacer uso de la funci&amp;oacute;n que permite escalar las advertencias a errores fatales. Entonces en este caso</target>
        </trans-unit>
        <trans-unit id="0780376e7962816fa4ff7b6a652f65ef6eadb7db" translate="yes" xml:space="preserve">
          <source>Either use parentheses or the high-precedence variant of the operator.</source>
          <target state="translated">O bien utiliza paréntesis o la variante de alta precedencia del operador.</target>
        </trans-unit>
        <trans-unit id="ac2efacdb85d4049866934d48a775a119bbac29d" translate="yes" xml:space="preserve">
          <source>Either way, the implementation isn't going to generate results larger than the size of the integer type Perl was built with (32 bits or 64 bits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6479b4a431808cf309ed8137f781bb957df27d9" translate="yes" xml:space="preserve">
          <source>Either you don't have more than one line in the string you're looking at (probably), or else you aren't using the correct modifier(s) on your pattern (possibly).</source>
          <target state="translated">O bien no tienes más de una línea en la cadena que estás mirando (probablemente),o bien no estás usando el(los)modificador(es)correcto(s)en tu patrón (posiblemente).</target>
        </trans-unit>
        <trans-unit id="e153f909edaedd24892df1d401944b8821af0128" translate="yes" xml:space="preserve">
          <source>Elapsed Real Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45775ed8dae80c63b3497b4ea826a44ca2dea3f" translate="yes" xml:space="preserve">
          <source>Elapsed returns a &lt;a href=&quot;../../benchmark&quot;&gt;Benchmark&lt;/a&gt; object that represents the running time of the aggregated tests. In order for &lt;code&gt;elapsed&lt;/code&gt; to be valid you must call &lt;code&gt;start&lt;/code&gt; before running the tests and &lt;code&gt;stop&lt;/code&gt; immediately afterwards.</source>
          <target state="translated">Transcurrido devuelve un objeto &lt;a href=&quot;../../benchmark&quot;&gt;Benchmark&lt;/a&gt; que representa el tiempo de ejecuci&amp;oacute;n de las pruebas agregadas. Para que &lt;code&gt;elapsed&lt;/code&gt; sea ​​v&amp;aacute;lido, debe llamar al &lt;code&gt;start&lt;/code&gt; antes de ejecutar las pruebas y &lt;code&gt;stop&lt;/code&gt; inmediatamente despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="2fb6b6b80655efc89d39c9e3dbc4f534ad641e2d" translate="yes" xml:space="preserve">
          <source>Elapsed returns a &lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt; object that represents the running time of the aggregated tests. In order for &lt;code&gt;elapsed&lt;/code&gt; to be valid you must call &lt;code&gt;start&lt;/code&gt; before running the tests and &lt;code&gt;stop&lt;/code&gt; immediately afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685684a16f4001786549b1ab800e18b9d9c7dce4" translate="yes" xml:space="preserve">
          <source>Electronic mail address of the perl5 administrator.</source>
          <target state="translated">Dirección de correo electrónico del administrador del perl5.</target>
        </trans-unit>
        <trans-unit id="0206d29187ee24de18ffe8c7060208c783959fc1" translate="yes" xml:space="preserve">
          <source>Electronic mail address of the person who ran Configure. This can be used by units that require the user's e-mail, like</source>
          <target state="translated">Dirección de correo electrónico de la persona que ejecutó Configurar.Esto puede ser usado por unidades que requieren el correo electrónico del usuario,como</target>
        </trans-unit>
        <trans-unit id="fb92ce1ec6eee388978bf1476ef4da0f49ddc2f4" translate="yes" xml:space="preserve">
          <source>Element Types and Accessor Methods</source>
          <target state="translated">Tipos de elementos y métodos de acceso</target>
        </trans-unit>
        <trans-unit id="56be9d95047d3837a8e260ecf6fab5aa5091179f" translate="yes" xml:space="preserve">
          <source>Eliminate the macros in the output to the MMS/MMK file.</source>
          <target state="translated">Elimina las macros en la salida del archivo MMS/MMK.</target>
        </trans-unit>
        <trans-unit id="0043730cfa58902fc1eb2bab5c9cf7b854c601fd" translate="yes" xml:space="preserve">
          <source>Eliminates any information in the type-ahead buffer on a read from the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372fe5af53dfb10b96df623d9727deb1110a3dd2" translate="yes" xml:space="preserve">
          <source>Email any corrections or questions to me.</source>
          <target state="translated">Envíame por correo electrónico cualquier corrección o pregunta.</target>
        </trans-unit>
        <trans-unit id="2f6c017bc97bb2714dd0b54f8c31090aba3e0c32" translate="yes" xml:space="preserve">
          <source>Email::Sender::Transport::SMTP</source>
          <target state="translated">Email::Sender::Transport::SMTP</target>
        </trans-unit>
        <trans-unit id="f4fe0960af2e7da0a8e6abd0220f7fb9ccfc0f82" translate="yes" xml:space="preserve">
          <source>Email::Sender::Transport::Sendmail</source>
          <target state="translated">Email::Sender::Transport::Sendmail</target>
        </trans-unit>
        <trans-unit id="a5bcdc422fa0c0f86b08b10ed2c448b54076951e" translate="yes" xml:space="preserve">
          <source>Embedded Code Execution Frequency</source>
          <target state="translated">Frecuencia de ejecución del código embebido</target>
        </trans-unit>
        <trans-unit id="1c0d431f261d9feabca2f4bf0f5d2be5226959da" translate="yes" xml:space="preserve">
          <source>Embedded Ctrl-As (octal 001) in the input will be mapped to spaces on output, due to an internal implementation detail.</source>
          <target state="translated">El Ctrl-As embebido (octal 001)en la entrada será mapeado a los espacios en la salida,debido a un detalle de implementación interna.</target>
        </trans-unit>
        <trans-unit id="b65de96935df088746b85b44766bded2aa4a92cf" translate="yes" xml:space="preserve">
          <source>Embedded modifiers can also turn off any modifiers already present by using,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036d707633278129886b9180244ca67da739555e" translate="yes" xml:space="preserve">
          <source>Embedded modifiers can also turn off any modifiers already present by using, e.g., &lt;code&gt;(?-i)&lt;/code&gt;. Modifiers can also be combined into a single expression, e.g., &lt;code&gt;(?s-i)&lt;/code&gt; turns on single line mode and turns off case insensitivity.</source>
          <target state="translated">Los modificadores incrustados tambi&amp;eacute;n pueden desactivar cualquier modificador ya presente usando, por ejemplo, &lt;code&gt;(?-i)&lt;/code&gt; . Los modificadores tambi&amp;eacute;n se pueden combinar en una sola expresi&amp;oacute;n, por ejemplo, &lt;code&gt;(?s-i)&lt;/code&gt; activa el modo de l&amp;iacute;nea &amp;uacute;nica y desactiva la insensibilidad a may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="609e053d4c0081ee95d3a87942874703d9f5ab55" translate="yes" xml:space="preserve">
          <source>Embedded modifiers can have two important advantages over the usual modifiers. Embedded modifiers allow a custom set of modifiers for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8b1388248a7771ad7a19db052c3e57cdc37002" translate="yes" xml:space="preserve">
          <source>Embedded modifiers can have two important advantages over the usual modifiers. Embedded modifiers allow a custom set of modifiers to</source>
          <target state="translated">Los modificadores incorporados pueden tener dos ventajas importantes sobre los modificadores habituales.Los modificadores incorporados permiten un conjunto personalizado de modificadores para</target>
        </trans-unit>
        <trans-unit id="77fff13bcd07ad216d2d3e4a9dc81f2e17688911" translate="yes" xml:space="preserve">
          <source>Embedded modifiers may also be added to a non-capturing grouping. &lt;code&gt;(?i-m:regexp)&lt;/code&gt; is a non-capturing grouping that matches &lt;code&gt;regexp&lt;/code&gt; case insensitively and turns off multi-line mode.</source>
          <target state="translated">Tambi&amp;eacute;n se pueden agregar modificadores incrustados a una agrupaci&amp;oacute;n que no captura. &lt;code&gt;(?i-m:regexp)&lt;/code&gt; es una agrupaci&amp;oacute;n sin captura que coincide con las may&amp;uacute;sculas y min&amp;uacute;sculas de &lt;code&gt;regexp&lt;/code&gt; sin distinci&amp;oacute;n y desactiva el modo multil&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="b92d8665944f4979bd50de8585ed3b0fd45dfa5f" translate="yes" xml:space="preserve">
          <source>Embedding Functions</source>
          <target state="translated">Funciones de incrustación</target>
        </trans-unit>
        <trans-unit id="dfab320700daa38157038d3e70e9093fcfa26c1f" translate="yes" xml:space="preserve">
          <source>Embedding Perl inside a 64-bit application.</source>
          <target state="translated">Incrustando Perl dentro de una aplicación de 64 bits.</target>
        </trans-unit>
        <trans-unit id="0694b8bb0407da0c117f25cc81dd5d48908ff82d" translate="yes" xml:space="preserve">
          <source>Embedding Perl under Win32</source>
          <target state="translated">Incrustar Perl bajo Win32</target>
        </trans-unit>
        <trans-unit id="9cbcae97b606ebda37a4c9c0051aab393c7f7d13" translate="yes" xml:space="preserve">
          <source>Embedding Pods in Perl Modules</source>
          <target state="translated">Incrustar las vainas en los módulos de Perl</target>
        </trans-unit>
        <trans-unit id="3332088412158a65b80fc73f2172f27d8031dce4" translate="yes" xml:space="preserve">
          <source>Embedding comments and modifiers in a regular expression</source>
          <target state="translated">Incorporación de comentarios y modificadores en una expresión regular</target>
        </trans-unit>
        <trans-unit id="2f84d71eabfb2db471c3906b955c997d8f2ea42c" translate="yes" xml:space="preserve">
          <source>Emboldened by this, you dive into the second phrase that your software needs to output: &quot;Your query matched 10 files in 4 directories.&quot;. You notice that if you want to treat phrases as indivisible, as the gettext manual wisely advises, you need four cases now, instead of two, to cover the permutations of singular and plural on the two items, $dir_count and $file_count. So you try this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7beea65f566b123cc3fc19969be422b43965af" translate="yes" xml:space="preserve">
          <source>Emit the popular wake-on-lan magic udp packet to wake up a local device. See also &lt;a href=&quot;Net::Wake&quot;&gt;Net::Wake&lt;/a&gt;, but this has the mac address as 1st arg. &lt;code&gt;$host&lt;/code&gt; should be the local gateway. Without it will broadcast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1ebe53d6ccd7815c61ce7589f6b78c18dd612d" translate="yes" xml:space="preserve">
          <source>Emits a warning, usually by printing it to &lt;code&gt;STDERR&lt;/code&gt;. &lt;code&gt;warn&lt;/code&gt; interprets its operand LIST in the same way as &lt;code&gt;die&lt;/code&gt;, but is slightly different in what it defaults to when LIST is empty or makes an empty string. If it is empty and &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt; already contains an exception value then that value is used after appending &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt;. If it is empty and &lt;code&gt;$@&lt;/code&gt; is also empty then the string &lt;code&gt;&quot;Warning: Something's wrong&quot;&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d5d024243158295b0b17ef00bb9b23203d9360" translate="yes" xml:space="preserve">
          <source>EmojiSources.txt</source>
          <target state="translated">EmojiSources.txt</target>
        </trans-unit>
        <trans-unit id="182fa8e51f2878e5ebff39e46c9563939a1274d1" translate="yes" xml:space="preserve">
          <source>Empty (?) without any modifiers in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ea7a43c3020a563e25bd1eedc14c28db07661d" translate="yes" xml:space="preserve">
          <source>Empty \%c in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482c748a5823d75ff12d9a6680ae909964eacc76" translate="yes" xml:space="preserve">
          <source>Empty \%c{}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45054945a8770b05f8103d2a4a0bb1b804cbf85" translate="yes" xml:space="preserve">
          <source>Empty \%c{} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbe29d0eda029ba0d774099d16a176aaf760777" translate="yes" xml:space="preserve">
          <source>Empty parts of the file/buffer will have NULL (0x00) bytes written to them.</source>
          <target state="translated">Las partes vacías del archivo/bufete tendrán NULL (0x00)bytes escritos en ellas.</target>
        </trans-unit>
        <trans-unit id="bd4ef1b6c1ef24f987c292a748ebade1052ce4dc" translate="yes" xml:space="preserve">
          <source>Empty strings as well as other illegal numbers results in 'NaN'.</source>
          <target state="translated">Las cuerdas vacías así como otros números ilegales resultan en 'NaN'.</target>
        </trans-unit>
        <trans-unit id="b78fcf2b7184ff747f91ac2d4e85304d73a66a8f" translate="yes" xml:space="preserve">
          <source>Emptying a file of existing contents, either automatically when opening a file for writing or explicitly via the &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Vaciar un archivo de contenido existente, ya sea autom&amp;aacute;ticamente al abrir un archivo para escritura o expl&amp;iacute;citamente a trav&amp;eacute;s de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f60475c9fb8f070699dc0b6997447641f41933fa" translate="yes" xml:space="preserve">
          <source>Emptying a file of existing contents, either automatically when opening a file for writing or explicitly via the &lt;code&gt;truncate&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3810839f51735c2952e4638769a72e1f188779e" translate="yes" xml:space="preserve">
          <source>Emulate low-level math with BigInt code</source>
          <target state="translated">Emular las matemáticas de bajo nivel con el código de BigInt</target>
        </trans-unit>
        <trans-unit id="eaff5ce9fb66a8294a29b4afda7fa93b8fb7b74b" translate="yes" xml:space="preserve">
          <source>Emulated using multiple interpreters. See &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;. (Win32)</source>
          <target state="translated">Emulado utilizando m&amp;uacute;ltiples int&amp;eacute;rpretes. Ver &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; . (Win32)</target>
        </trans-unit>
        <trans-unit id="a7b07a2e86e21bbe02318bb5339e9e3819d02d9c" translate="yes" xml:space="preserve">
          <source>Emulated using synchronization functions such that it can be interrupted by &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt;, and limited to a maximum of 4294967 seconds, approximately 49 days. (Win32)</source>
          <target state="translated">Emulado usando funciones de sincronizaci&amp;oacute;n de modo que pueda ser interrumpido por &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; , y limitado a un m&amp;aacute;ximo de 4294967 segundos, aproximadamente 49 d&amp;iacute;as. (Win32)</target>
        </trans-unit>
        <trans-unit id="2fab2548b326a0aed3bd44319bab854e6c0cf455" translate="yes" xml:space="preserve">
          <source>Emulated using timers that must be explicitly polled whenever Perl wants to dispatch &quot;safe signals&quot; and therefore cannot interrupt blocking system calls. (Win32)</source>
          <target state="translated">Emulada con temporizadores que deben ser explícitamente encuestados cada vez que Perl quiera enviar &quot;señales seguras&quot; y por lo tanto no puede interrumpir el bloqueo de las llamadas al sistema.(Win32)</target>
        </trans-unit>
        <trans-unit id="9b1e45abf8f6f88976507fbf984db8d99aa517be" translate="yes" xml:space="preserve">
          <source>Emulates Unix &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; (which considers &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; to indicate an error) by mapping the &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;SS$_ABORT&lt;/code&gt; (&lt;code&gt;44&lt;/code&gt; ). This behavior may be overridden with the pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'exit'&lt;/code&gt; . As with the CRTL's &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; function, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; is also mapped to an exit status of &lt;code&gt;SS$_NORMAL&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt; ); this mapping cannot be overridden. Any other argument to &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; is used directly as Perl's exit status. On VMS, unless the future POSIX_EXIT mode is enabled, the exit code should always be a valid VMS exit code and not a generic number. When the POSIX_EXIT mode is enabled, a generic number will be encoded in a method compatible with the C library _POSIX_EXIT macro so that it can be decoded by other programs, particularly ones written in C, like the GNV package. (VMS)</source>
          <target state="translated">Emula &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; Unix (que considera que la &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; indica un error) al mapear el &lt;code&gt;1&lt;/code&gt; a &lt;code&gt;SS$_ABORT&lt;/code&gt; ( &lt;code&gt;44&lt;/code&gt; ). Este comportamiento puede anularse con el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'exit'&lt;/code&gt; . Al igual que con la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;SS$_NORMAL&lt;/code&gt; , la &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; tambi&amp;eacute;n se asigna a un estado de salida de SS $ _NORMAL ( &lt;code&gt;1&lt;/code&gt; ); esta asignaci&amp;oacute;n no se puede anular. Cualquier otro argumento para &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; se utiliza directamente como estado de salida de Perl. En VMS, a menos que se habilite el modo POSIX_EXIT futuro, el c&amp;oacute;digo de salida siempre debe ser un c&amp;oacute;digo de salida VMS v&amp;aacute;lido y no un n&amp;uacute;mero gen&amp;eacute;rico. Cuando se habilita el modo POSIX_EXIT, se codificar&amp;aacute; un n&amp;uacute;mero gen&amp;eacute;rico en un m&amp;eacute;todo compatible con la macro _POSIX_EXIT de la biblioteca C para que pueda ser decodificado por otros programas, particularmente los escritos en C, como el paquete GNV. (VMS)</target>
        </trans-unit>
        <trans-unit id="2c857b36dcd15d79dca987f0a21532d5543740f0" translate="yes" xml:space="preserve">
          <source>Emulation is provided for &lt;code&gt;runtests&lt;/code&gt; and &lt;code&gt;execute_tests&lt;/code&gt; but the pluggable 'Straps' interface that previous versions of &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; supported is not reproduced here. Straps is now available as a stand alone module: &lt;a href=&quot;Test::Harness::Straps&quot;&gt;Test::Harness::Straps&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8694061aed01e45167cf3a5722aa921d3e6ee71" translate="yes" xml:space="preserve">
          <source>Emulation is provided for &lt;code&gt;runtests&lt;/code&gt; and &lt;code&gt;execute_tests&lt;/code&gt; but the pluggable 'Straps' interface that previous versions of &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; supported is not reproduced here. Straps is now available as a stand alone module: &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::Straps&quot;&gt;Test::Harness::Straps&lt;/a&gt;.</source>
          <target state="translated">Se proporciona emulaci&amp;oacute;n para &lt;code&gt;runtests&lt;/code&gt; y &lt;code&gt;execute_tests&lt;/code&gt; , pero la interfaz conectable 'Straps' que las versiones anteriores de &lt;a href=&quot;harness&quot;&gt;Test :: Harness &lt;/a&gt;admit&amp;iacute;an no se reproduce aqu&amp;iacute;. Correas ahora est&amp;aacute; disponible como un m&amp;oacute;dulo independiente: &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::Straps&quot;&gt;Prueba :: Arn&amp;eacute;s :: Correas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c3201c23058080f5cca7ba534770368c083d322" translate="yes" xml:space="preserve">
          <source>Enable DUMP and all execute options. Equivalent to:</source>
          <target state="translated">Activar DUMP y todas las opciones de ejecución.Equivalente a:</target>
        </trans-unit>
        <trans-unit id="3519927c57abd6568424c455930c1e3320ae7f4f" translate="yes" xml:space="preserve">
          <source>Enable DUMP and all non-extra execute options. Equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3687b13f8be99eb4a1bd7121c185ac6fb0233a5d" translate="yes" xml:space="preserve">
          <source>Enable Verbose mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb7295d3b950c4331c9fe377d6496cd34ea08ee" translate="yes" xml:space="preserve">
          <source>Enable all options at once except OFFSETS, OFFSETSDBG and BUFFERS. (To get every single option without exception, use both ALL and EXTRA.)</source>
          <target state="translated">Habilitar todas las opciones a la vez excepto OFFSETS,OFFSETSDBG y BUFFERS.(Para obtener todas las opciones sin excepción,use TODAS y EXTRA.)</target>
        </trans-unit>
        <trans-unit id="605ee0c2cc03659c524ca183e1ce55b5400e895c" translate="yes" xml:space="preserve">
          <source>Enable all options at once except OFFSETS, OFFSETSDBG, BUFFERS, WILDCARD, and DUMP_PRE_OPTIMIZE. (To get every single option without exception, use both ALL and EXTRA, or starting in 5.30 on a &lt;code&gt;-DDEBUGGING&lt;/code&gt;-enabled perl interpreter, use the &lt;b&gt;-Drv&lt;/b&gt; command-line switches.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c54f50dbe8b1d2b9d4279a847b1af1e242ac5db" translate="yes" xml:space="preserve">
          <source>Enable caching of timings for the null loop. The time taken for COUNT rounds of the null loop will be calculated only once for each different COUNT used.</source>
          <target state="translated">Habilitar el almacenamiento de tiempos para el bucle nulo.El tiempo de las rondas de conteo del bucle nulo se calculará sólo una vez por cada conteo diferente utilizado.</target>
        </trans-unit>
        <trans-unit id="af34a92294247e0324cf9cb4ab7591c0157d3cc4" translate="yes" xml:space="preserve">
          <source>Enable debugging of offsets information. This emits copious amounts of trace information and doesn't mesh well with other debug options.</source>
          <target state="translated">Habilitar la depuración de la información de compensación.Esto emite cantidades copiosas de información de rastreo y no encaja bien con otras opciones de depuración.</target>
        </trans-unit>
        <trans-unit id="b22eafe66ff9363c232181834545b3e27fc24dda" translate="yes" xml:space="preserve">
          <source>Enable debugging of start-point optimisations.</source>
          <target state="translated">Habilitar la depuración de las optimizaciones del punto de partida.</target>
        </trans-unit>
        <trans-unit id="b1ed4094a3f33fb70b77d3ab5d3985c70cad2408" translate="yes" xml:space="preserve">
          <source>Enable debugging of states in the engine.</source>
          <target state="translated">Habilitar la depuración de los estados en el motor.</target>
        </trans-unit>
        <trans-unit id="6cc2f783a9f51a88860f66f38bb6654412ccd3b7" translate="yes" xml:space="preserve">
          <source>Enable debugging of the \G modifier.</source>
          <target state="translated">Habilite la depuración del modificador \G.</target>
        </trans-unit>
        <trans-unit id="8b1fc985774fbcf866da54c3c69b513cb35f440c" translate="yes" xml:space="preserve">
          <source>Enable debugging of the recursion stack in the engine. Enabling or disabling this option automatically does the same for debugging states as well. This output from this can be quite large.</source>
          <target state="translated">Habilitar la depuración de la pila de recursividad en el motor.Habilitar o deshabilitar esta opción hace lo mismo automáticamente para los estados de depuración también.Esta salida de esto puede ser bastante grande.</target>
        </trans-unit>
        <trans-unit id="ed7bfb6f5b63e62332ddfc6bbbaf1f7a2a0d576b" translate="yes" xml:space="preserve">
          <source>Enable debugging output.</source>
          <target state="translated">Activar salida de depuración.</target>
        </trans-unit>
        <trans-unit id="139048524bc56f6e0f7692e0183c038f5bfd94d8" translate="yes" xml:space="preserve">
          <source>Enable debugging the capture group storage during match. Warning, this can potentially produce extremely large output.</source>
          <target state="translated">Habilitar la depuración del almacenamiento del grupo de captura durante el partido.Advertencia,esto puede producir potencialmente una salida extremadamente grande.</target>
        </trans-unit>
        <trans-unit id="d009cb1e8dd02879690564369c53161c26ba761e" translate="yes" xml:space="preserve">
          <source>Enable enhanced TRIE debugging. Enhances both TRIEE and TRIEC.</source>
          <target state="translated">Habilitar la depuración TRIE mejorada.Mejora tanto TRIEE como TRIEC.</target>
        </trans-unit>
        <trans-unit id="ef5eb4e7b2447bf19044b39ea2e195cd6618fd76" translate="yes" xml:space="preserve">
          <source>Enable enhanced optimisation debugging and start-point optimisations. Probably not useful except when debugging the regexp engine itself.</source>
          <target state="translated">Habilitar la depuración de optimización mejorada y las optimizaciones del punto de partida.Probablemente no sea útil excepto cuando se depura el propio motor regexp.</target>
        </trans-unit>
        <trans-unit id="07e248f2e2b8869e02ee4bbd9a3b445fa1e02104" translate="yes" xml:space="preserve">
          <source>Enable new features</source>
          <target state="translated">Habilitar nuevas características</target>
        </trans-unit>
        <trans-unit id="82441ac52d9ab4a30896d0bdffedf2a9be220d10" translate="yes" xml:space="preserve">
          <source>Enable recognition of &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations. Default is true.</source>
          <target state="translated">Habilite el reconocimiento de declaraciones &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; e &lt;code&gt;INOUT_LIST&lt;/code&gt; . El valor predeterminado es verdadero.</target>
        </trans-unit>
        <trans-unit id="fdedc1b60d005db3c310868a2b39cafdd59a5eb1" translate="yes" xml:space="preserve">
          <source>Enable recognition of &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations. Default is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04f3ebaeb9867e3812b1e018ab387d5924f7ef6" translate="yes" xml:space="preserve">
          <source>Enable recognition of ANSI-like descriptions of function signature. Default is true.</source>
          <target state="translated">Permitir el reconocimiento de descripciones de la firma de la función similares a las del ANSI.Por defecto es cierto.</target>
        </trans-unit>
        <trans-unit id="8fa85b7034e330ca755a5c73c63b76397e087c71" translate="yes" xml:space="preserve">
          <source>Enable simple signal handling</source>
          <target state="translated">Permitir un manejo sencillo de la señal</target>
        </trans-unit>
        <trans-unit id="3c3a9e686f47a71d2d2bd49c91054de061662284" translate="yes" xml:space="preserve">
          <source>Enable the breakpoint so it will stop the execution of the program.</source>
          <target state="translated">Habilitar el punto de ruptura para que detenga la ejecución del programa.</target>
        </trans-unit>
        <trans-unit id="4a2a1634a6a3ef06d28edb649a7e0d6a7bf8554f" translate="yes" xml:space="preserve">
          <source>Enable the dumping of the compiled pattern before the optimization phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd4f88c7522d41d4cd111539c1b1db699d331e1" translate="yes" xml:space="preserve">
          <source>Enable the options enabled by &quot;All&quot;, plus STATE, TRIEC, and TRIEM.</source>
          <target state="translated">Habilitar las opciones habilitadas por &quot;Todos&quot;,además de ESTADO,TRIEC y TRIEM.</target>
        </trans-unit>
        <trans-unit id="6607ef3ad5faa3d582896ad07ab9785dae90ca8e" translate="yes" xml:space="preserve">
          <source>Enable this option if you wish all spawned processes to be killed if the initially spawned process (the parent) is killed or dies without waiting for child processes.</source>
          <target state="translated">Habilite esta opción si desea que se maten todos los procesos engendrados si el proceso engendrado inicialmente (el padre)se mata o muere sin esperar a los procesos hijos.</target>
        </trans-unit>
        <trans-unit id="b7b7c90b9b4e4815dd4d9b7ad285d70eda8ebb7d" translate="yes" xml:space="preserve">
          <source>Enable/disable UTF-8 (or UTF-EBCDIC) in source code</source>
          <target state="translated">Activar/desactivar UTF-8 (o UTF-EBCDIC)en el código fuente</target>
        </trans-unit>
        <trans-unit id="80acee2f67ff4da70c6002b5a0e094b4d2f31c43" translate="yes" xml:space="preserve">
          <source>Enables all warnings regardless of &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt; . See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Permite todas las advertencias, independientemente de &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings&lt;/code&gt; o &lt;code&gt;$^W&lt;/code&gt; . Ver &lt;a href=&quot;warnings&quot;&gt;advertencias&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b9030574fd9ae227a9d9bdb446332c94bd2ab62" translate="yes" xml:space="preserve">
          <source>Enables all warnings regardless of &lt;code&gt;no warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt;. See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1089d1ea88536805f57559da91fba3d7a2761ecb" translate="yes" xml:space="preserve">
          <source>Enables certain optimizations. The only optimization that is currently affected is the use of</source>
          <target state="translated">Permite ciertas optimizaciones.La única optimización que se ve afectada actualmente es el uso de</target>
        </trans-unit>
        <trans-unit id="c2846984fdcc8df09665bcc109bb5474af315f7d" translate="yes" xml:space="preserve">
          <source>Enables or disable debugging by setting the &lt;code&gt;$Benchmark::Debug&lt;/code&gt; flag:</source>
          <target state="translated">Habilita o deshabilita la depuraci&amp;oacute;n configurando el indicador &lt;code&gt;$Benchmark::Debug&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9d480a633ce9bb7aa941c3d98a4cbb4d5ac2bf6a" translate="yes" xml:space="preserve">
          <source>Enables output related to the optimisation phase of compilation.</source>
          <target state="translated">Permite la salida relacionada con la fase de optimización de la compilación.</target>
        </trans-unit>
        <trans-unit id="8017ccdfaea2ad3f4aa3c94d96674940233700a6" translate="yes" xml:space="preserve">
          <source>Enables use of the prompt specified by pmt=usr-prmpt on input from the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55c00ee236233e66b2d47bad2c1ced81c03c99b" translate="yes" xml:space="preserve">
          <source>Enabling &lt;code&gt;bundling_values&lt;/code&gt; will disable the other two styles of bundling.</source>
          <target state="translated">Habilitar &lt;code&gt;bundling_values&lt;/code&gt; deshabilitar&amp;aacute; los otros dos estilos de agrupaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b18f32d5490f57e3f4e0f875c588a069b00f5590" translate="yes" xml:space="preserve">
          <source>Enabling the &lt;code&gt;utf8&lt;/code&gt; pragma has the following effect:</source>
          <target state="translated">Habilitar &lt;code&gt;utf8&lt;/code&gt; pragma tiene el siguiente efecto:</target>
        </trans-unit>
        <trans-unit id="7fe2071dd005ed63dfae111e383f15806253aa16" translate="yes" xml:space="preserve">
          <source>Enabling this option will allow single-character options to be bundled. To distinguish bundles from long option names, long options</source>
          <target state="translated">Al activar esta opción se podrán agrupar opciones de un solo carácter.Para distinguir los paquetes de los nombres de opciones largas,las opciones largas</target>
        </trans-unit>
        <trans-unit id="867d7c3018e88764391a8a8cad25d71d6020f155" translate="yes" xml:space="preserve">
          <source>Encapsulation</source>
          <target state="translated">Encapsulation</target>
        </trans-unit>
        <trans-unit id="2059232562a427f990749c23a8c8ebdde1b9014d" translate="yes" xml:space="preserve">
          <source>Encapsulation is important for several reasons. First, it allows you to separate the public API from the private implementation. This means you can change that implementation without breaking the API.</source>
          <target state="translated">La encapsulación es importante por varias razones.En primer lugar,permite separar la API pública de la implementación privada.Esto significa que puedes cambiar esa implementación sin romper la API.</target>
        </trans-unit>
        <trans-unit id="782e817cf07d938d62f7f0517e130f19ec6b4cf1" translate="yes" xml:space="preserve">
          <source>Encode</source>
          <target state="translated">Encode</target>
        </trans-unit>
        <trans-unit id="e276943b90499b3ae3cf8000afe6554906eb7f6a" translate="yes" xml:space="preserve">
          <source>Encode - character encodings in Perl</source>
          <target state="translated">Codificar-codificación de caracteres en Perl</target>
        </trans-unit>
        <trans-unit id="3c5a64c26d9e551da565d681ba9a9c2bc735a49c" translate="yes" xml:space="preserve">
          <source>Encode Implementation Base Class</source>
          <target state="translated">Codificar la clase base de implementación</target>
        </trans-unit>
        <trans-unit id="39e91613c24a80edc94f024f6bfb3382d7e896d8" translate="yes" xml:space="preserve">
          <source>Encode a scalar, hash reference or array reference as YAML.</source>
          <target state="translated">Codifica un escalar,una referencia hash o una referencia de matriz como YAML.</target>
        </trans-unit>
        <trans-unit id="a78fa70f2287f5b23c037b4b8025fba5e083909c" translate="yes" xml:space="preserve">
          <source>Encode aliases &lt;code&gt;GB2312&lt;/code&gt; to &lt;code&gt;euc-cn&lt;/code&gt; in full agreement with IANA registration. &lt;code&gt;cp936&lt;/code&gt; is supported separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bb3342b0d46392bfdbf9d685c504c20ab444c4" translate="yes" xml:space="preserve">
          <source>Encode aliases &lt;code&gt;KS_C_5601-1987&lt;/code&gt; to &lt;code&gt;cp949&lt;/code&gt; to reflect this common misusage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b3896738d8cf6b15e5278f1369de611febee2e" translate="yes" xml:space="preserve">
          <source>Encode and decode according to the base64 scheme for &quot;URL applications&quot; [1]. This is a variant of the base64 encoding which does not use padding, does not break the string into multiple lines and use the characters &quot;-&quot; and &quot;_&quot; instead of &quot;+&quot; and &quot;/&quot; to avoid using reserved URL characters.</source>
          <target state="translated">Codificar y decodificar según el esquema base64 para &quot;aplicaciones URL&quot; [1].Se trata de una variante de la codificación base64 que no utiliza relleno,no rompe la cadena en múltiples líneas y utiliza los caracteres &quot;-&quot; y &quot;_&quot; en lugar de &quot;+&quot; y &quot;/&quot; para evitar el uso de caracteres reservados para el URL.</target>
        </trans-unit>
        <trans-unit id="3d01d8346257820c445f334ba81d16daa9f20915" translate="yes" xml:space="preserve">
          <source>Encode consists of a collection of modules whose details are too extensive to fit in one document. This one itself explains the top-level APIs and general topics at a glance. For other topics and more details, see the documentation for these modules:</source>
          <target state="translated">La codificación consiste en una colección de módulos cuyos detalles son demasiado extensos para caber en un solo documento.Éste a su vez explica las API de alto nivel y los temas generales de un vistazo.Para otros temas y más detalles,véase la documentación de estos módulos:</target>
        </trans-unit>
        <trans-unit id="90f9c590e83b0f216769d26a64108ee3d5af71e4" translate="yes" xml:space="preserve">
          <source>Encode converts from the beginning to \x7E, leaving \xe3 in the buffer because it is invalid (partial character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5888dafc03b9c4595a9ef704f5d312540bc3c184" translate="yes" xml:space="preserve">
          <source>Encode data by calling the encode_base64() function. The first argument is the byte string to encode. The second argument is the line-ending sequence to use. It is optional and defaults to &quot;\n&quot;. The returned encoded string is broken into lines of no more than 76 characters each and it will end with $eol unless it is empty. Pass an empty string as second argument if you do not want the encoded string to be broken into lines.</source>
          <target state="translated">Codifica los datos llamando a la función encode_base64().El primer argumento es la cadena de bytes a codificar.El segundo argumento es la secuencia de fin de línea a utilizar.Es opcional y por defecto es &quot;\n&quot;.La cadena codificada devuelta se divide en líneas de no más de 76 caracteres cada una y terminará con $eol a menos que esté vacía.Pase una cadena vacía como segundo argumento si no quiere que la cadena codificada se rompa en líneas.</target>
        </trans-unit>
        <trans-unit id="41b574dce061d3c694f8cd7218cbb982019874dd" translate="yes" xml:space="preserve">
          <source>Encode method takes a scalar string as its input and uses &lt;a href=&quot;encode#UTF-8-vs.-utf8-vs.-UTF8&quot;&gt;strict UTF-8&lt;/a&gt; encoder for encoding it to UTF-8 bytes. Then a sequence of UTF-8 bytes is encoded into MIME encoded-words (&lt;code&gt;MIME-Header&lt;/code&gt; and &lt;code&gt;MIME-B&lt;/code&gt; use a Base64 variant while &lt;code&gt;MIME-Q&lt;/code&gt; uses a Quoted-Printable variant) where each MIME encoded-word is limited to 75 characters. MIME encoded-words are separated by &lt;code&gt;CRLF SPACE&lt;/code&gt; and joined to one output string. Output string is suitable for unstructured field body of the email header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1878d2d011ae54a82ea1609093ac6e764e131f0" translate="yes" xml:space="preserve">
          <source>Encode separately supports &lt;code&gt;Big5&lt;/code&gt; and &lt;code&gt;cp950&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f5b904d93724daaede7a0f5d5a6e265bb69f88" translate="yes" xml:space="preserve">
          <source>Encode separately supports &lt;code&gt;Shift_JIS&lt;/code&gt; and &lt;code&gt;cp932&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceff1e1e1923f02a7939b507f33300e3a696eaa2" translate="yes" xml:space="preserve">
          <source>Encode up to 1.86 internally used &quot;local $_&quot; to implement this older form. But consider the code below;</source>
          <target state="translated">Codifica hasta 1.86 &quot;local $_&quot; usado internamente para implementar esta forma antigua.Pero considera el código que se muestra a continuación;</target>
        </trans-unit>
        <trans-unit id="dec95d5717280ac4e0be7dcb9e6fc7bc4a47ecee" translate="yes" xml:space="preserve">
          <source>Encode uses the Unicode Character Map (UCM) format for source character mappings. This format is used by IBM's ICU package and was adopted by Nick Ing-Simmons for use with the Encode module. Since UCM is more flexible than Tcl's Encoding Map and far more user-friendly, this is the recommended format for Encode now.</source>
          <target state="translated">Encode utiliza el formato de Mapa de Carácter Unicode (UCM)para los mapas de caracteres de origen.Este formato es usado por el paquete ICU de IBM y fue adoptado por Nick Ing-Simmons para su uso con el módulo Encode.Dado que UCM es más flexible que el Encoding Map de Tcl y mucho más fácil de usar,este es el formato recomendado para Encode ahora.</target>
        </trans-unit>
        <trans-unit id="5d2cad9401edfbef92e75be01cb40c4e9ecc4cf6" translate="yes" xml:space="preserve">
          <source>Encode::Alias</source>
          <target state="translated">Encode::Alias</target>
        </trans-unit>
        <trans-unit id="552324ae1eb023be362415291b1291f3f52556a7" translate="yes" xml:space="preserve">
          <source>Encode::Alias - alias definitions to encodings</source>
          <target state="translated">Codificar::Alias-definiciones de alias a codificaciones</target>
        </trans-unit>
        <trans-unit id="cc91ef6d8b4186209599d785324e380db05af545" translate="yes" xml:space="preserve">
          <source>Encode::Byte</source>
          <target state="translated">Encode::Byte</target>
        </trans-unit>
        <trans-unit id="d4b97f8bcca673137fe3a8c4311fa29b1376a129" translate="yes" xml:space="preserve">
          <source>Encode::Byte - Single Byte Encodings</source>
          <target state="translated">Codificar::Byte-Codificaciones de un solo byte</target>
        </trans-unit>
        <trans-unit id="930606b772f93c8896784219cc491d7a0cee7e76" translate="yes" xml:space="preserve">
          <source>Encode::Byte -- Extended ASCII</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f240792605e5eac4a6580e33ee29dcc7a428c2" translate="yes" xml:space="preserve">
          <source>Encode::Byte implements most single-byte encodings except for Symbols and EBCDIC. The following encodings are based on single-byte encodings implemented as extended ASCII. Most of them map \x80-\xff (upper half) to non-ASCII characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da29f26c3e55351d546a404e8b09b53f82affc8" translate="yes" xml:space="preserve">
          <source>Encode::CJKConstants</source>
          <target state="translated">Encode::CJKConstants</target>
        </trans-unit>
        <trans-unit id="97376755cadc9b08ac2bdcffa80b5c4759e6f7df" translate="yes" xml:space="preserve">
          <source>Encode::CJKConstants.pm -- Internally used by Encode::??::ISO_2022_*</source>
          <target state="translated">Codifica::CJKConstantes.pm --Internamente usado por Codifica::??::ISO_2022_*</target>
        </trans-unit>
        <trans-unit id="44fea5bddc6721fb4b956554b9d88900826d60c7" translate="yes" xml:space="preserve">
          <source>Encode::CN</source>
          <target state="translated">Encode::CN</target>
        </trans-unit>
        <trans-unit id="40f3392265131b672490757c292c084a525d4184" translate="yes" xml:space="preserve">
          <source>Encode::CN - China-based Chinese Encodings</source>
          <target state="translated">Codificar::CN-Codificaciones chinas con base en China</target>
        </trans-unit>
        <trans-unit id="56aaed97f5a41017265e5458630887666002ff6b" translate="yes" xml:space="preserve">
          <source>Encode::CN -- Continental China</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207660f321fc12762f2e79b28e35fbb26736a3e7" translate="yes" xml:space="preserve">
          <source>Encode::CN::HZ</source>
          <target state="translated">Encode::CN::HZ</target>
        </trans-unit>
        <trans-unit id="622d7b0a21ca0c1a08d6dda20da0057e0358570c" translate="yes" xml:space="preserve">
          <source>Encode::CN::HZ -- internally used by Encode::CN</source>
          <target state="translated">Codificar::CN::HZ --internamente usado por Codificar::CN</target>
        </trans-unit>
        <trans-unit id="b24bb381f68ba02b49c4c2cd2767f183910da09e" translate="yes" xml:space="preserve">
          <source>Encode::Config</source>
          <target state="translated">Encode::Config</target>
        </trans-unit>
        <trans-unit id="0b7c024127a98fc8be2586eade5f76bc22701aab" translate="yes" xml:space="preserve">
          <source>Encode::Config -- internally used by Encode</source>
          <target state="translated">Encode::Config --internamente usado por Encode</target>
        </trans-unit>
        <trans-unit id="2a8ba6ae9bd0735a827d283930aa3dc28cd2cae3" translate="yes" xml:space="preserve">
          <source>Encode::EBCDIC</source>
          <target state="translated">Encode::EBCDIC</target>
        </trans-unit>
        <trans-unit id="3b31a7154f7c03e9be274aacce1e4dc5a66d5ec6" translate="yes" xml:space="preserve">
          <source>Encode::EBCDIC - EBCDIC Encodings</source>
          <target state="translated">Codificar::EBCDIC-Codificaciones EBCDIC</target>
        </trans-unit>
        <trans-unit id="a0fb1479e2e68a75a05e36aff16d787758a1778e" translate="yes" xml:space="preserve">
          <source>Encode::Encoder</source>
          <target state="translated">Encode::Encoder</target>
        </trans-unit>
        <trans-unit id="3bfd37620385e094ff5d1811f8a5aaf8e5a7a125" translate="yes" xml:space="preserve">
          <source>Encode::Encoder -- Object Oriented Encoder</source>
          <target state="translated">Codificar::Codificador --Codificador Orientado a Objetos</target>
        </trans-unit>
        <trans-unit id="4551a7e4c9181d379ae1288237c1ebecccd59bb8" translate="yes" xml:space="preserve">
          <source>Encode::Encoding</source>
          <target state="translated">Encode::Encoding</target>
        </trans-unit>
        <trans-unit id="932dfcdaef25e880e85283d712d29f239746970b" translate="yes" xml:space="preserve">
          <source>Encode::Encoding - Encode Implementation Base Class</source>
          <target state="translated">Codificar::Codificación-Codificar Clase Base de Implementación</target>
        </trans-unit>
        <trans-unit id="77662ad703615bf25ca69905bb6db23d72296bb9" translate="yes" xml:space="preserve">
          <source>Encode::GSM0338</source>
          <target state="translated">Encode::GSM0338</target>
        </trans-unit>
        <trans-unit id="ede01420f58b4c2565b3da82244d84c95da5b4af" translate="yes" xml:space="preserve">
          <source>Encode::GSM0338 -- ESTI GSM 03.38 Encoding</source>
          <target state="translated">Codificación::GSM0338 --ESTI GSM 03.38 Codificación</target>
        </trans-unit>
        <trans-unit id="e93ed447e10d95864f0386c026ec121cd47c60ab" translate="yes" xml:space="preserve">
          <source>Encode::Guess</source>
          <target state="translated">Encode::Guess</target>
        </trans-unit>
        <trans-unit id="8b1b151431a67a55222cbbcf0270cd834cbd2d46" translate="yes" xml:space="preserve">
          <source>Encode::Guess -- Guesses encoding from data</source>
          <target state="translated">Codificar::Adivina...Adivina la codificación a partir de los datos</target>
        </trans-unit>
        <trans-unit id="f460e270f104cac10b54ab28764ae1739d32a63f" translate="yes" xml:space="preserve">
          <source>Encode::Guess does not work on EBCDIC platforms.</source>
          <target state="translated">Codificar::Supongo que no funciona en las plataformas EBCDIC.</target>
        </trans-unit>
        <trans-unit id="8030a57667933f97cc9c39195dbf244e622a18a0" translate="yes" xml:space="preserve">
          <source>Encode::Guess enables you to guess in what encoding a given data is encoded, or at least tries to.</source>
          <target state="translated">Codificar::Adivinar te permite adivinar en qué está codificado un dato dado,o al menos lo intenta.</target>
        </trans-unit>
        <trans-unit id="4c76dcf9e721cd63d6b7c64ae9ac390cd36bca44" translate="yes" xml:space="preserve">
          <source>Encode::Guess-&amp;gt;add_suspects</source>
          <target state="translated">Encode::Guess-&amp;gt;add_suspects</target>
        </trans-unit>
        <trans-unit id="e5a679cb789609bd6b4f6bc29c3c93aa2af2b209" translate="yes" xml:space="preserve">
          <source>Encode::Guess-&amp;gt;guess($data)</source>
          <target state="translated">Encode::Guess-&amp;gt;guess($data)</target>
        </trans-unit>
        <trans-unit id="91b94bb51243fdcafbdb22a3d3b975f9b8695d1d" translate="yes" xml:space="preserve">
          <source>Encode::Guess-&amp;gt;set_suspects</source>
          <target state="translated">Encode::Guess-&amp;gt;set_suspects</target>
        </trans-unit>
        <trans-unit id="a0735b72517ca9ff3c7f14337ef1ad3eeea0e3f0" translate="yes" xml:space="preserve">
          <source>Encode::HanExtra -- More Chinese via CPAN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9eb31f93d16c6f8ad3ca48a91dab8c5071fe46" translate="yes" xml:space="preserve">
          <source>Encode::JIS2K -- JIS X 0213 encodings via CPAN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37ee0e2e550bc3634d116c838f3ba94375b8c47" translate="yes" xml:space="preserve">
          <source>Encode::JP</source>
          <target state="translated">Encode::JP</target>
        </trans-unit>
        <trans-unit id="341afac777ffb0b1e52b3a6aa26c1fcd31687ea1" translate="yes" xml:space="preserve">
          <source>Encode::JP - Japanese Encodings</source>
          <target state="translated">Codificar::JP-Codificaciones japonesas</target>
        </trans-unit>
        <trans-unit id="4d2ce26abda0dd0d175937050c97398037e5cc87" translate="yes" xml:space="preserve">
          <source>Encode::JP -- Japan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6a27be2a727bdf7e4a113a80bef5ed7da8c32a" translate="yes" xml:space="preserve">
          <source>Encode::JP::H2Z</source>
          <target state="translated">Encode::JP::H2Z</target>
        </trans-unit>
        <trans-unit id="61c842d29f655e9a02cc88f2dfe176c79b0a7ccb" translate="yes" xml:space="preserve">
          <source>Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*</source>
          <target state="translated">Codificar::JP::H2Z --internamente usado por Codificar::JP::2022_JP*</target>
        </trans-unit>
        <trans-unit id="57d3b7cea6d80534a4eab96981ae8b12e91a572d" translate="yes" xml:space="preserve">
          <source>Encode::JP::JIS7</source>
          <target state="translated">Encode::JP::JIS7</target>
        </trans-unit>
        <trans-unit id="728d78512ef0e5fd10db6af9228f9f55491f142e" translate="yes" xml:space="preserve">
          <source>Encode::JP::JIS7 -- internally used by Encode::JP</source>
          <target state="translated">Codificar::JP::JIS7 --internamente usado por Codificar::JP</target>
        </trans-unit>
        <trans-unit id="9292d6d6d6c3d612ab88b4d0a9b44cce420ff5ea" translate="yes" xml:space="preserve">
          <source>Encode::KR</source>
          <target state="translated">Encode::KR</target>
        </trans-unit>
        <trans-unit id="32eef4f01d06c098fb548d1006c901f52a812e7e" translate="yes" xml:space="preserve">
          <source>Encode::KR - Korean Encodings</source>
          <target state="translated">Codificar::KR-Codificaciones coreanas</target>
        </trans-unit>
        <trans-unit id="1af58b45e5ddb5840265bad145aa164eaffbeea7" translate="yes" xml:space="preserve">
          <source>Encode::KR -- Korea</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adea371ce7b9ff3c3566f35ac1420ac2e2ede009" translate="yes" xml:space="preserve">
          <source>Encode::KR::2022_KR</source>
          <target state="translated">Encode::KR::2022_KR</target>
        </trans-unit>
        <trans-unit id="3976fa623737771006bbaafdf23430529728651d" translate="yes" xml:space="preserve">
          <source>Encode::KR::2022_KR -- internally used by Encode::KR</source>
          <target state="translated">Codificar::KR::2022_KR --internamente usado por Codificar::KR</target>
        </trans-unit>
        <trans-unit id="e9d431857fb2daca858cf0e24708414e6076d14b" translate="yes" xml:space="preserve">
          <source>Encode::MIME::Header</source>
          <target state="translated">Encode::MIME::Header</target>
        </trans-unit>
        <trans-unit id="f2030bc40a6a13ab85bce58de044a451e0f2022a" translate="yes" xml:space="preserve">
          <source>Encode::MIME::Header -- MIME 'B' and 'Q' header encoding</source>
          <target state="translated">Codificar::MIME::Cabecera --MIME 'B' y 'Q' codificación de cabecera</target>
        </trans-unit>
        <trans-unit id="8d4bde122083dca41ec16dc22bc309e1ca8f4388" translate="yes" xml:space="preserve">
          <source>Encode::MIME::Header -- MIME encoding for an unstructured email header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660e24530b4b214dbcf404910cce6c40e5661246" translate="yes" xml:space="preserve">
          <source>Encode::MIME::NAME -- internally used by Encode</source>
          <target state="translated">Codificar::MIME::NOMBRE --internamente usado por Encode</target>
        </trans-unit>
        <trans-unit id="5f4e8291cc2cc181fac6cfb29c5aaebe19ffe8d7" translate="yes" xml:space="preserve">
          <source>Encode::MIME::Name</source>
          <target state="translated">Encode::MIME::Name</target>
        </trans-unit>
        <trans-unit id="28fab0785bc684a2a52d97e53a66b49d5527d9be" translate="yes" xml:space="preserve">
          <source>Encode::PerlIO</source>
          <target state="translated">Encode::PerlIO</target>
        </trans-unit>
        <trans-unit id="41a3b8bb23e3f7b5138303897788011e915cffdf" translate="yes" xml:space="preserve">
          <source>Encode::PerlIO -- a detailed document on Encode and PerlIO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd20dbfc849a216b8ec8f0aae8d9f22755869e7" translate="yes" xml:space="preserve">
          <source>Encode::Supported</source>
          <target state="translated">Encode::Supported</target>
        </trans-unit>
        <trans-unit id="eb0c5a3a273c3a4c4ad776ddaca0c86b8236ef3c" translate="yes" xml:space="preserve">
          <source>Encode::Supported -- Encodings supported by Encode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617dc5e07f69ab0016776f02fcae4aa5417d4cf3" translate="yes" xml:space="preserve">
          <source>Encode::Symbol</source>
          <target state="translated">Encode::Symbol</target>
        </trans-unit>
        <trans-unit id="305d6a4ecfbcb83575125920205199ebfad9ecbc" translate="yes" xml:space="preserve">
          <source>Encode::Symbol - Symbol Encodings</source>
          <target state="translated">Codificar::Símbolo-Codificación de símbolos</target>
        </trans-unit>
        <trans-unit id="246710749ac240e0889edf0116d38bdff86ae7a9" translate="yes" xml:space="preserve">
          <source>Encode::Symbols</source>
          <target state="translated">Encode::Symbols</target>
        </trans-unit>
        <trans-unit id="7353083e24fd78826faff9ec9dd3ca1f0abfeb68" translate="yes" xml:space="preserve">
          <source>Encode::TW</source>
          <target state="translated">Encode::TW</target>
        </trans-unit>
        <trans-unit id="169a69c17f2e47c33a2090f250bc6f54465bac9c" translate="yes" xml:space="preserve">
          <source>Encode::TW - Taiwan-based Chinese Encodings</source>
          <target state="translated">Codificar::TW-Codificaciones chinas con base en Taiwán</target>
        </trans-unit>
        <trans-unit id="0a45467a524b47a94315245ccf968b728241554a" translate="yes" xml:space="preserve">
          <source>Encode::TW -- Taiwan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f419db0e193bdb95ad1bf1d32e4308acad0add9f" translate="yes" xml:space="preserve">
          <source>Encode::Unicode</source>
          <target state="translated">Encode::Unicode</target>
        </trans-unit>
        <trans-unit id="2ba2c8325c871771b84294002113cdbbccea72d4" translate="yes" xml:space="preserve">
          <source>Encode::Unicode -- Various Unicode Transformation Formats</source>
          <target state="translated">Codificar::Unicode --Varios formatos de transformación de Unicode</target>
        </trans-unit>
        <trans-unit id="510f299bed8b57aaad0840b1977677d5faf52278" translate="yes" xml:space="preserve">
          <source>Encode::Unicode -- other Unicode encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e91aa87151df83dcd6a084acf2bef4fbe28cca" translate="yes" xml:space="preserve">
          <source>Encode::Unicode::UTF7</source>
          <target state="translated">Encode::Unicode::UTF7</target>
        </trans-unit>
        <trans-unit id="46189c892fa791248c9e1697ba2bd11d7d60c2a5" translate="yes" xml:space="preserve">
          <source>Encode::Unicode::UTF7 -- UTF-7 encoding</source>
          <target state="translated">Codificar::Unicode::UTF7 --codificación UTF-7</target>
        </trans-unit>
        <trans-unit id="89d34727747f027f9d8e6303c1a70b2655a0c0fe" translate="yes" xml:space="preserve">
          <source>Encode::decode(&quot;Guess&quot; ...)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca2ce49b12c2ee816a410523ba091dc693a60d6" translate="yes" xml:space="preserve">
          <source>Encodes a scalar, hash reference or array reference as YAMLish.</source>
          <target state="translated">Codifica un escalar,una referencia de hash o una referencia de matriz como YAMLish.</target>
        </trans-unit>
        <trans-unit id="225ac8da293afbab880950db9793bf5ef9a811e8" translate="yes" xml:space="preserve">
          <source>Encodes the invocand as a byte string in the given format as specified in IEEE 754-2008. Note that the encoded value is the nearest possible representation of the value. This value might not be exactly the same as the value in the invocand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c840f47e19e39ed11ebf36e763d836813b7799" translate="yes" xml:space="preserve">
          <source>Encodes the scalar value</source>
          <target state="translated">Codifica el valor escalar</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="8febd2fa21d6fa8e1d3dfe269d8ca87dc204d2c3" translate="yes" xml:space="preserve">
          <source>Encoding Classification (by Anton Tagunov and Dan Kogai)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33835dcaa05ba53de2779ac501c0b636ae0c061" translate="yes" xml:space="preserve">
          <source>Encoding Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e649a0b553388aa0aefbd82d8b0f0d1a27873465" translate="yes" xml:space="preserve">
          <source>Encoding and decoding of base64 strings</source>
          <target state="translated">Codificación y decodificación de las cadenas de base64</target>
        </trans-unit>
        <trans-unit id="6b77915998634f10773a65ebf127633caa0903b3" translate="yes" xml:space="preserve">
          <source>Encoding and decoding of quoted-printable strings</source>
          <target state="translated">La codificación y descodificación de las cuerdas imprimibles de las citas</target>
        </trans-unit>
        <trans-unit id="a998510992fa4d69263beacea1ddcc7415077441" translate="yes" xml:space="preserve">
          <source>Encoding handling assumes that PerlIO is available and does not work properly if it isn't. The &lt;code&gt;utf8&lt;/code&gt; option is therefore not supported unless Perl is built with PerlIO support.</source>
          <target state="translated">El manejo de codificaci&amp;oacute;n asume que PerlIO est&amp;aacute; disponible y no funciona correctamente si no lo est&amp;aacute;. Por lo &lt;code&gt;utf8&lt;/code&gt; opci&amp;oacute;n utf8 no es compatible a menos que Perl est&amp;eacute; construido con soporte PerlIO.</target>
        </trans-unit>
        <trans-unit id="04cfa3e7800a4d240dc7f677c9407b294c248bcf" translate="yes" xml:space="preserve">
          <source>Encoding layer</source>
          <target state="translated">Capa de codificación</target>
        </trans-unit>
        <trans-unit id="b9782d5b4b9e78ce07208ac3d1921ad180cd2fcb" translate="yes" xml:space="preserve">
          <source>Encoding names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680e8d978db89c29bc9f5396c102c8ec2731a094" translate="yes" xml:space="preserve">
          <source>Encoding names are case insensitive. White space in names is ignored. In addition, an encoding may have aliases. Each encoding has one &quot;canonical&quot; name. The &quot;canonical&quot; name is chosen from the names of the encoding by picking the first in the following sequence (with a few exceptions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cbaf646f7cdfb7eb0fbb21f815c71c722e02c1" translate="yes" xml:space="preserve">
          <source>Encoding via PerlIO</source>
          <target state="translated">Codificación a través de PerlIO</target>
        </trans-unit>
        <trans-unit id="46fade9210aeab4b837cd79bdf4256d2a5f65faf" translate="yes" xml:space="preserve">
          <source>Encoding vs. Charset -- terminology</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e06c1fc55b2907153074d333e66853227f2028" translate="yes" xml:space="preserve">
          <source>Encodings are categorized and implemented in several different modules but you don't have to &lt;code&gt;use Encode::XX&lt;/code&gt; to make them available for most cases. Encode.pm will automatically load those modules on demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc5b05d5a707cb27dff01159bcf1a3ca6a46e7c" translate="yes" xml:space="preserve">
          <source>Encodings supported by Encode</source>
          <target state="translated">Codificaciones soportadas por Encode</target>
        </trans-unit>
        <trans-unit id="f136f667340e5f4c44804d0073e50a60db219512" translate="yes" xml:space="preserve">
          <source>Encrypted communication channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4ae224ac38c50705eb255694dceb50337fe4c9" translate="yes" xml:space="preserve">
          <source>End of File. Sometimes used metaphorically as the terminating string of a &lt;b&gt;here document&lt;/b&gt;.</source>
          <target state="translated">Fin del documento. A veces se usa metaf&amp;oacute;ricamente como la cadena final de un &lt;b&gt;documento aqu&amp;iacute;&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e61fae84390da1a34c4b2fbd657622d5073292c7" translate="yes" xml:space="preserve">
          <source>End of file.</source>
          <target state="translated">Fin del archivo.</target>
        </trans-unit>
        <trans-unit id="d1e4562e3c175d8468bb1a01a7952bd0d3b259e1" translate="yes" xml:space="preserve">
          <source>End the sending of data to the remote server. This is done by ensuring that the data already sent ends with CRLF then sending '.CRLF' to end the transmission. Once this data has been sent &lt;code&gt;dataend&lt;/code&gt; calls &lt;code&gt;response&lt;/code&gt; and returns true if &lt;code&gt;response&lt;/code&gt; returns CMD_OK.</source>
          <target state="translated">Finalice el env&amp;iacute;o de datos al servidor remoto. Esto se hace asegur&amp;aacute;ndose de que los datos ya enviados terminen con CRLF y luego env&amp;iacute;en '.CRLF' para finalizar la transmisi&amp;oacute;n. Una vez que se han enviado estos datos, el &lt;code&gt;dataend&lt;/code&gt; llama a &lt;code&gt;response&lt;/code&gt; y devuelve verdadero si la &lt;code&gt;response&lt;/code&gt; devuelve CMD_OK.</target>
        </trans-unit>
        <trans-unit id="5b395d065aa5966c6da16e4b8c501ca68c3ecd37" translate="yes" xml:space="preserve">
          <source>End-tokens from Pod::Simple::PullParser</source>
          <target state="translated">Tocadiscos de la vaina::Simple::PullParser</target>
        </trans-unit>
        <trans-unit id="8676dbbd19637e0c1604c4bcd69f9208a03cfa1a" translate="yes" xml:space="preserve">
          <source>End.U</source>
          <target state="translated">End.U</target>
        </trans-unit>
        <trans-unit id="d1787011d64eb206cd1d2b206a7e53314fc2df0d" translate="yes" xml:space="preserve">
          <source>Ends a try block. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;&quot;Exception Handling&quot; in perlguts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d04612cae76dda50e81f179859b4b712ba14ff" translate="yes" xml:space="preserve">
          <source>Ends a try block. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">Finaliza un bloque de prueba. Consulte &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Manejo de excepciones en perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ea2083617805ed93273c46ed0c4792fa3da7a0b" translate="yes" xml:space="preserve">
          <source>Enforce type integrity if required</source>
          <target state="translated">Hacer cumplir la integridad del tipo si es necesario</target>
        </trans-unit>
        <trans-unit id="286ca1647ce3f25ee107c4a9d50837ecd6b2a964" translate="yes" xml:space="preserve">
          <source>Enforcing redispatch</source>
          <target state="translated">Hacer cumplir la reexpedición</target>
        </trans-unit>
        <trans-unit id="a1681854c9f0debb40072c691fd6f403e3a9401c" translate="yes" xml:space="preserve">
          <source>Enginsite</source>
          <target state="translated">Enginsite</target>
        </trans-unit>
        <trans-unit id="649df08a448ee3fa90f3746baaf6b0907df42c91" translate="yes" xml:space="preserve">
          <source>English</source>
          <target state="translated">English</target>
        </trans-unit>
        <trans-unit id="256aa1d5dab6cf2100434b619aada1a930ae7c7d" translate="yes" xml:space="preserve">
          <source>English ('en') is</source>
          <target state="translated">El inglés ('en')es</target>
        </trans-unit>
        <trans-unit id="7aa949020d6b22aac250e3885290aa830dd72a15" translate="yes" xml:space="preserve">
          <source>English - use nice English (or awk) names for ugly punctuation variables</source>
          <target state="translated">Inglés-usa nombres ingleses bonitos (o torpes)para las variables de puntuación feas</target>
        </trans-unit>
        <trans-unit id="34afa6db1cf569bd02a3ffe4f7e6036f1798a631" translate="yes" xml:space="preserve">
          <source>English.pm</source>
          <target state="translated">English.pm</target>
        </trans-unit>
        <trans-unit id="99343727bceed607c32f483621540aee48471580" translate="yes" xml:space="preserve">
          <source>Enough of the definition talk! Let's have a few examples.</source>
          <target state="translated">¡Basta de hablar de definiciones! Demos algunos ejemplos.</target>
        </trans-unit>
        <trans-unit id="d899ea5401439c93a0c8f86febf8bb8f4f088e5d" translate="yes" xml:space="preserve">
          <source>Ensure that colons marking targets are preceded by space, in order to distinguish the target delimiter from a colon appearing as part of a filespec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8988a13726c59d935ea79d755d1455be0fc83772" translate="yes" xml:space="preserve">
          <source>Ensure that you know what \b really does: it's the boundary between a word character, \w, and something that isn't a word character. That thing that isn't a word character might be \W, but it can also be the start or end of the string.</source>
          <target state="translated">Asegúrate de que sabes lo que realmente hace:es el límite entre una palabra de carácter,y algo que no es una palabra de carácter.Esa cosa que no es un personaje de la palabra puede ser &quot;W&quot;,pero también puede ser el comienzo o el final de la cadena.</target>
        </trans-unit>
        <trans-unit id="8680a11001e2d2163c0b3f5d95efb035f3fa7b03" translate="yes" xml:space="preserve">
          <source>Ensure you're following the latest advice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21287dbbbfc03a6ee27ae105b87e32fa291261eb" translate="yes" xml:space="preserve">
          <source>Ensure your module works under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; and &lt;code&gt;-w&lt;/code&gt;</source>
          <target state="translated">Aseg&amp;uacute;rese de que su m&amp;oacute;dulo funcione bajo &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; y &lt;code&gt;-w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee84d37b57aec0c02ba775d818a3471f6da99fba" translate="yes" xml:space="preserve">
          <source>Ensure your module works under &lt;code&gt;use strict&lt;/code&gt; and &lt;code&gt;-w&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3137a5d79c4479978038346bf282e1d45e0aa011" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;MoveFileEx&lt;/code&gt; won't return until the operation has finished and been flushed to disk. This is not supported under Windows 95. Only affects file renames to another file system, forcing a buffer flush at the end of the copy operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f974b332a5fa28c86d4229cace8185f73744894" translate="yes" xml:space="preserve">
          <source>Ensures that sv is a SVt_PV and that its SvCUR is 0, and that it is properly null terminated. Equivalent to sv_setpvs(&quot;&quot;), but more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1279af9b58018ff33488efc0656bb62fda8db44f" translate="yes" xml:space="preserve">
          <source>Enter interactive mode by running</source>
          <target state="translated">Entra en el modo interactivo ejecutando</target>
        </trans-unit>
        <trans-unit id="74eb99da3b9ba3df5f4be61ae4522068a9b27d10" translate="yes" xml:space="preserve">
          <source>Entire arrays (and slices of arrays and hashes) are denoted by '@', which works much as the word &quot;these&quot; or &quot;those&quot; does in English, in that it indicates multiple values are expected.</source>
          <target state="translated">Las matrices enteras (y los trozos de matrices y hashes)se denotan con &quot;@&quot;,que funciona de forma muy parecida a la palabra &quot;estos&quot; o &quot;aquellos&quot; en inglés,en el sentido de que indica que se esperan múltiples valores.</target>
        </trans-unit>
        <trans-unit id="d245bbc8252b0b71ede0a2f949fc5b29d829fd5d" translate="yes" xml:space="preserve">
          <source>Entire hashes are denoted by '%':</source>
          <target state="translated">Los hashes enteros se denotan con un &quot;%&quot;:</target>
        </trans-unit>
        <trans-unit id="4f918189cf78ab84f6519ba2dcb57f2ae316f72b" translate="yes" xml:space="preserve">
          <source>Entries cannot be plain object files, as many Win32 compilers will not handle object files in the place of libraries.</source>
          <target state="translated">Las entradas no pueden ser archivos de objetos simples,ya que muchos compiladores de Win32 no manejan archivos de objetos en lugar de bibliotecas.</target>
        </trans-unit>
        <trans-unit id="673fba8e1fb3916663891e031f77ca1343408944" translate="yes" xml:space="preserve">
          <source>Entries in &lt;code&gt;$potential_libs&lt;/code&gt; beginning with a colon and followed by alphanumeric characters are treated as flags. Unknown flags will be ignored.</source>
          <target state="translated">Las entradas en &lt;code&gt;$potential_libs&lt;/code&gt; comienzan con dos puntos y seguidas de caracteres alfanum&amp;eacute;ricos se tratan como banderas. Se ignorar&amp;aacute;n las banderas desconocidas.</target>
        </trans-unit>
        <trans-unit id="a95d99085680ef5c64c2fe5754604ba2f596d896" translate="yes" xml:space="preserve">
          <source>Entries such as:</source>
          <target state="translated">Entradas como:</target>
        </trans-unit>
        <trans-unit id="8d07f7a288d3779719c1509961105704b61f4cef" translate="yes" xml:space="preserve">
          <source>Entry in the INPUT section of a typemap</source>
          <target state="translated">La entrada en la sección INPUT de un mapa tipográfico</target>
        </trans-unit>
        <trans-unit id="237fc607826e845da2eb03390fed5a45c866b715" translate="yes" xml:space="preserve">
          <source>Entry in the OUTPUT section of a typemap</source>
          <target state="translated">La entrada en la sección SALIDA de un mapa tipográfico</target>
        </trans-unit>
        <trans-unit id="81a846de6d38920893fe50bf678fb10abc3847e2" translate="yes" xml:space="preserve">
          <source>Entry in the TYPEMAP section of a typemap</source>
          <target state="translated">La entrada en la sección TYPEMAP de un mapa tipográfico</target>
        </trans-unit>
        <trans-unit id="f211ac2a755354cfc7e79a205b52eb23e2f010b1" translate="yes" xml:space="preserve">
          <source>Entware-ng comes with a precompiled 5.24.1 (June 2017) that allowes building shared XS code. Note that this installation does &lt;b&gt;not&lt;/b&gt; use a site_perl folder. The available &lt;code&gt;cpan&lt;/code&gt; works. If all required development packages are installed too, also for XS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2562690818adae41c773c584b6f6c09ebb4d39c" translate="yes" xml:space="preserve">
          <source>Env</source>
          <target state="translated">Env</target>
        </trans-unit>
        <trans-unit id="fbbe5fa808eea7f4c74b5ba16db47dab460bc3b9" translate="yes" xml:space="preserve">
          <source>Env - perl module that imports environment variables as scalars or arrays</source>
          <target state="translated">Env-módulo de perl que importa variables de entorno como escalares o matrices</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">Variables del entorno</target>
        </trans-unit>
        <trans-unit id="e19f8816c6f7ccbb7d40a44b81def1ffb731d4e0" translate="yes" xml:space="preserve">
          <source>Environment for Compiling perl on Solaris</source>
          <target state="translated">Entorno para la compilación de perlas en Solaris</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e160747cc9ac3da385ca9f9c1cb6f2e6810dff" translate="yes" xml:space="preserve">
          <source>Environment variables that the program cares about, normally presented as a list using &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; , and &lt;code&gt;=back&lt;/code&gt; . For example:</source>
          <target state="translated">Las variables de entorno que le interesan al programa, normalmente presentadas como una lista usando &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; y &lt;code&gt;=back&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="047031c84702987a532453c9aba009b3c909ceb6" translate="yes" xml:space="preserve">
          <source>Environment variables that the program cares about, normally presented as a list using &lt;code&gt;=over&lt;/code&gt;, &lt;code&gt;=item&lt;/code&gt;, and &lt;code&gt;=back&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ed6121898e672a267f0f15674f039aebf49694" translate="yes" xml:space="preserve">
          <source>Environment variables to be set during the command</source>
          <target state="translated">Las variables de entorno que se establecerán durante el comando</target>
        </trans-unit>
        <trans-unit id="ec3aedc215415465ba248c2b745d070af96045ef" translate="yes" xml:space="preserve">
          <source>Eof</source>
          <target state="translated">Eof</target>
        </trans-unit>
        <trans-unit id="7264243f4aeaaab7fbb98bd7afd5e953b5900f7b" translate="yes" xml:space="preserve">
          <source>Equality Operators</source>
          <target state="translated">Operadores de igualdad</target>
        </trans-unit>
        <trans-unit id="f6a4eb155ac0505cd34f3102780f106892d4662a" translate="yes" xml:space="preserve">
          <source>Equivalence between Decimal and Dotted-Decimal Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfd756767e68de5473421aba90c9077344def28" translate="yes" xml:space="preserve">
          <source>Equivalent examples:</source>
          <target state="translated">Ejemplos equivalentes:</target>
        </trans-unit>
        <trans-unit id="c61e2265d123d76133484971263eb3576ac59dd9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;$octets = encode(&quot;utf8&quot;, $string)&lt;/code&gt; . The characters in $string are encoded in Perl's internal format, and the result is returned as a sequence of octets. Because all possible characters in Perl have a (loose, not strict) UTF-8 representation, this function cannot fail.</source>
          <target state="translated">Equivalente a &lt;code&gt;$octets = encode(&quot;utf8&quot;, $string)&lt;/code&gt; . Los caracteres en $ string est&amp;aacute;n codificados en el formato interno de Perl y el resultado se devuelve como una secuencia de octetos. Debido a que todos los caracteres posibles en Perl tienen una representaci&amp;oacute;n UTF-8 (suelta, no estricta), esta funci&amp;oacute;n no puede fallar.</target>
        </trans-unit>
        <trans-unit id="2e78d6f894c7d9e2878d9273592738107eb000e0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;$octets = encode(&quot;utf8&quot;, $string)&lt;/code&gt;. The characters in $string are encoded in Perl's internal format, and the result is returned as a sequence of octets. Because all possible characters in Perl have a (loose, not strict) utf8 representation, this function cannot fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a263a53c5879a617814d231b90b810689cbeec78" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;$string = decode(&quot;utf8&quot;, $octets [, CHECK])&lt;/code&gt; . The sequence of octets represented by $octets is decoded from UTF-8 into a sequence of logical characters. Because not all sequences of octets are valid UTF-8, it is quite possible for this function to fail. For CHECK, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Handling Malformed Data&lt;/a&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;$string = decode(&quot;utf8&quot;, $octets [, CHECK])&lt;/code&gt; . La secuencia de octetos representada por $ octetos se decodifica de UTF-8 en una secuencia de caracteres l&amp;oacute;gicos. Debido a que no todas las secuencias de octetos son UTF-8 v&amp;aacute;lidas, es muy posible que esta funci&amp;oacute;n falle. Para COMPROBAR, consulte &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Manejo de datos con formato incorrecto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98fe51deeaa55823d52414f5281c460f4be56e6e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;$string = decode(&quot;utf8&quot;, $octets [, CHECK])&lt;/code&gt;. The sequence of octets represented by $octets is decoded from (loose, not strict) utf8 into a sequence of logical characters. Because not all sequences of octets are valid not strict utf8, it is quite possible for this function to fail. For CHECK, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;&quot;Handling Malformed Data&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032e60eb7c99d19d4d7f40467e50e02c1b3b3e31" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;(x) - 1&lt;/code&gt; , but more precise for small argument values [C99].</source>
          <target state="translated">Equivalente a &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;(x) - 1&lt;/code&gt; , pero m&amp;aacute;s preciso para valores de argumento peque&amp;ntilde;os [C99].</target>
        </trans-unit>
        <trans-unit id="48506d548803ae745c6c6681b3b6b358f76d6d1f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;(1 + x)&lt;/code&gt; , but more stable results for small argument values [C99].</source>
          <target state="translated">Equivalente a &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;(1 + x)&lt;/code&gt; , pero resultados m&amp;aacute;s estables para valores de argumento peque&amp;ntilde;os [C99].</target>
        </trans-unit>
        <trans-unit id="22c30bad53a9801aa2549ef28438b22b8be2db3e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , except that &lt;code&gt;$\&lt;/code&gt; (the output record separator) is not appended. The FORMAT and the LIST are actually parsed as a single list. The first argument of the list will be interpreted as the &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; format. This means that &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; will use &lt;code&gt;$_[0]&lt;/code&gt; as the format. See &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;sprintf&lt;/a&gt; for an explanation of the format argument. If &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; for &lt;code&gt;LC_NUMERIC&lt;/code&gt; Look for this throught pod is in effect and POSIX::setlocale() has been called, the character used for the decimal separator in formatted floating-point numbers is affected by the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale setting. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , excepto que &lt;code&gt;$\&lt;/code&gt; (el separador de registros de salida) no se agrega. El FORMATO y la LISTA se analizan realmente como una lista &amp;uacute;nica. El primer argumento de la lista se interpretar&amp;aacute; como formato &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; . Esto significa que &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; usar&amp;aacute; &lt;code&gt;$_[0]&lt;/code&gt; como formato. Consulte &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;sprintf&lt;/a&gt; para obtener una explicaci&amp;oacute;n del argumento de formato. Si &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; para &lt;code&gt;LC_NUMERIC&lt;/code&gt; Look for this throught pod est&amp;aacute; en efecto y se ha llamado a POSIX :: setlocale (), el car&amp;aacute;cter usado para el separador decimal en n&amp;uacute;meros de coma flotante formateados se ve afectado por el &lt;code&gt;LC_NUMERIC&lt;/code&gt; regional LC_NUMERIC . Ver &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; y &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="200de086c8cd5535e67b47001e5f819da8109f8f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;(x * x + y * y)&lt;/code&gt; except more stable on very large or very small arguments [C99].</source>
          <target state="translated">Equivalente a &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;(x * x + y * y)&lt;/code&gt; excepto que es m&amp;aacute;s estable en argumentos muy grandes o muy peque&amp;ntilde;os [C99].</target>
        </trans-unit>
        <trans-unit id="0f1d23c2683b2580eee5762a2646e2cfdbd51243" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , except that &lt;code&gt;$\&lt;/code&gt; (the output record separator) is not appended. The FORMAT and the LIST are actually parsed as a single list. The first argument of the list will be interpreted as the &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; format. This means that &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; will use &lt;code&gt;$_[0]&lt;/code&gt; as the format. See &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;sprintf&lt;/a&gt; for an explanation of the format argument. If &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; for &lt;code&gt;LC_NUMERIC&lt;/code&gt; Look for this throught pod is in effect and POSIX::setlocale() has been called, the character used for the decimal separator in formatted floating-point numbers is affected by the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale setting. See &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; FILEHANDLE &lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;(FORMAT, LIST)&lt;/code&gt; , excepto que &lt;code&gt;$\&lt;/code&gt; (el separador de registros de salida) no se agrega. El FORMATO y la LISTA se analizan realmente como una lista &amp;uacute;nica. El primer argumento de la lista se interpretar&amp;aacute; como formato &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; . Esto significa que &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf(@_)&lt;/a&gt;&lt;/code&gt; usar&amp;aacute; &lt;code&gt;$_[0]&lt;/code&gt; como formato. Consulte &lt;a href=&quot;#sprintf-FORMAT%2c-LIST&quot;&gt;sprintf&lt;/a&gt; para obtener una explicaci&amp;oacute;n del argumento de formato. Si &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; para &lt;code&gt;LC_NUMERIC&lt;/code&gt; Look for this throught pod est&amp;aacute; en efecto y se ha llamado a POSIX :: setlocale (), el car&amp;aacute;cter usado para el separador decimal en n&amp;uacute;meros de coma flotante formateados se ve afectado por el &lt;code&gt;LC_NUMERIC&lt;/code&gt; regional LC_NUMERIC . Ver &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt; y &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="756e8875e122c06649638568056dc5b432d11a8e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;exp(x) - 1&lt;/code&gt;, but more precise for small argument values [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c725f59de42f50ead6905d172ab4b7ba28d808a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;log(1 + x)&lt;/code&gt;, but more stable results for small argument values [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3145a78dd9afcf2f738531a37fc2117722087949" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;print FILEHANDLE sprintf(FORMAT, LIST)&lt;/code&gt;, except that &lt;a href=&quot;perlvar#%24%5C&quot;&gt;&lt;code&gt;$\&lt;/code&gt;&lt;/a&gt; (the output record separator) is not appended. The FORMAT and the LIST are actually parsed as a single list. The first argument of the list will be interpreted as the &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt; format. This means that &lt;code&gt;printf(@_)&lt;/code&gt; will use &lt;code&gt;$_[0]&lt;/code&gt; as the format. See &lt;a href=&quot;#sprintf-FORMAT%2C-LIST&quot;&gt;sprintf&lt;/a&gt; for an explanation of the format argument. If &lt;code&gt;use locale&lt;/code&gt; (including &lt;code&gt;use locale ':not_characters'&lt;/code&gt;) is in effect and &lt;a href=&quot;posix#setlocale&quot;&gt;&lt;code&gt;POSIX::setlocale&lt;/code&gt;&lt;/a&gt; has been called, the character used for the decimal separator in formatted floating-point numbers is affected by the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale setting. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; and &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b67359eada935d408cfee6f1b32b93eb73c3ef" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sqrt(x * x + y * y)&lt;/code&gt; except more stable on very large or very small arguments [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b647b2f27ee1659c31db9d984b63f0b9e63a18" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;sv_setsv(sv, &amp;amp;PL_sv_undef)&lt;/code&gt;, but more efficient. Doesn't handle set magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4e0dc744110e721ecf88197993cbcc2b45d001" translate="yes" xml:space="preserve">
          <source>Equivalent to Perl code &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $gv&lt;/code&gt; .</source>
          <target state="translated">Equivalente al c&amp;oacute;digo Perl &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $gv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ac49f4bdd12fc964afb5f8290211f9aa65a79c7" translate="yes" xml:space="preserve">
          <source>Equivalent to Perl code &lt;code&gt;local $gv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876fc7d247587a71d98917cb3c3453fd65fea359" translate="yes" xml:space="preserve">
          <source>Equivalent to running mktemp() with $dir/$prefixXXXXXXXX (using unix file convention as an example)</source>
          <target state="translated">Equivalente a ejecutar mktemp()con $dir/$prefixXXXXXXXX (usando la convención de archivos unix como ejemplo)</target>
        </trans-unit>
        <trans-unit id="4dba35bcd4ac839e52783da10b5058566f3e3b91" translate="yes" xml:space="preserve">
          <source>Equivalent to specifying a DIR of &quot;File::Spec-&amp;gt;tmpdir&quot;, writing the file into the same temporary directory as would be used if no template was specified at all.</source>
          <target state="translated">Equivalente a especificar un DIR de &quot;File :: Spec-&amp;gt; tmpdir&quot;, escribir el archivo en el mismo directorio temporal que se usar&amp;iacute;a si no se especificara ninguna plantilla.</target>
        </trans-unit>
        <trans-unit id="bb3d71a18fde90428e21cf7d4198ea242cfa57c5" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;#-C-%5Bnumber%2Flist%5D&quot;&gt;-C&lt;/a&gt; command-line switch. Note that this is not a boolean variable. Setting this to &lt;code&gt;&quot;1&quot;&lt;/code&gt; is not the right way to &quot;enable Unicode&quot; (whatever that would mean). You can use &lt;code&gt;&quot;0&quot;&lt;/code&gt; to &quot;disable Unicode&quot;, though (or alternatively unset PERL_UNICODE in your shell before starting Perl). See the description of the &lt;a href=&quot;#-C-%5Bnumber%2Flist%5D&quot;&gt;-C&lt;/a&gt; switch for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a667e4f94596d8444896d0c578ec8dad154ae9ae" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;b&gt;-C&lt;/b&gt; command-line switch. Note that this is not a boolean variable. Setting this to &lt;code&gt;&quot;1&quot;&lt;/code&gt; is not the right way to &quot;enable Unicode&quot; (whatever that would mean). You can use &lt;code&gt;&quot;0&quot;&lt;/code&gt; to &quot;disable Unicode&quot;, though (or alternatively unset PERL_UNICODE in your shell before starting Perl). See the description of the &lt;b&gt;-C&lt;/b&gt; switch for more information.</source>
          <target state="translated">Equivalente al &lt;b&gt;modificador&lt;/b&gt; de l&amp;iacute;nea de comandos &lt;b&gt;-C&lt;/b&gt; . Tenga en cuenta que esta no es una variable booleana. Establecer esto en &lt;code&gt;&quot;1&quot;&lt;/code&gt; no es la forma correcta de &quot;habilitar Unicode&quot; (lo que sea que eso signifique). Sin embargo, puede usar &lt;code&gt;&quot;0&quot;&lt;/code&gt; para &quot;deshabilitar Unicode&quot; (o, alternativamente, desarmar PERL_UNICODE en su shell antes de iniciar Perl). Consulte la descripci&amp;oacute;n del conmutador &lt;b&gt;-C&lt;/b&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">Equivalente a:</target>
        </trans-unit>
        <trans-unit id="7cc25c4fa96172ec73030c6c0f3dc9c51687c491" translate="yes" xml:space="preserve">
          <source>Equivalents of</source>
          <target state="translated">Los equivalentes de</target>
        </trans-unit>
        <trans-unit id="7ebcf33d0a14ddb91ad477ae52a7af6de25e76c9" translate="yes" xml:space="preserve">
          <source>Er, that's it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256add701298dc7a17e42cc9eb936d630438581" translate="yes" xml:space="preserve">
          <source>Erases one character. Defined by</source>
          <target state="translated">Borra un personaje.Definido por</target>
        </trans-unit>
        <trans-unit id="7c24401b7c6f89af67334e697241400ad5298e5f" translate="yes" xml:space="preserve">
          <source>Erases the current input. Defined by</source>
          <target state="translated">Borra la entrada actual.Definido por</target>
        </trans-unit>
        <trans-unit id="2bfde103fe0a2fc7c857d2e77fed8dacf0bc3d48" translate="yes" xml:space="preserve">
          <source>Eric L. Brine,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b196c5d2b8bc0f57dd78e558fed28f0a83be47" translate="yes" xml:space="preserve">
          <source>Eric Wilhelm &amp;lt;ewilhelm@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3053d2e8a81cd1d9716eddc9ced731b4c51383d" translate="yes" xml:space="preserve">
          <source>Eric Wilhelm @ &amp;lt;ewilhelm at cpan dot org&amp;gt;</source>
          <target state="translated">Eric Wilhelm @ &amp;lt;ewilhelm en cpan dot org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d8bf3fea74cb51ac9ebccafa9b5bfc9e28b1c902" translate="yes" xml:space="preserve">
          <source>Errno</source>
          <target state="translated">Errno</target>
        </trans-unit>
        <trans-unit id="76cf9c662cbb85bc782a4c519361391afd6f8281" translate="yes" xml:space="preserve">
          <source>Errno - System errno constants</source>
          <target state="translated">Errno-Sistema de constantes de errno</target>
        </trans-unit>
        <trans-unit id="27356fe30834096ffaeafbce7b977e0f80915dea" translate="yes" xml:space="preserve">
          <source>Erroneous numbering of =item numbers; they need to ascend consecutively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="6cc16f28f695995f841e32ad9be43613256395fe" translate="yes" xml:space="preserve">
          <source>Error Checking</source>
          <target state="translated">Comprobación de errores</target>
        </trans-unit>
        <trans-unit id="ecbd14ea4e6e17d8a2dc17467fb021874d4a82c9" translate="yes" xml:space="preserve">
          <source>Error Variables</source>
          <target state="translated">Variables de error</target>
        </trans-unit>
        <trans-unit id="cfb1de7f5665b658bcddfda7619c881aef88520a" translate="yes" xml:space="preserve">
          <source>Error checking is, as usual, left as an exercise for the reader.</source>
          <target state="translated">La comprobación de errores se deja,como siempre,como un ejercicio para el lector.</target>
        </trans-unit>
        <trans-unit id="da4e40dd69c1ef29292868ee52af685e14566b19" translate="yes" xml:space="preserve">
          <source>Error checking, as always, has been left as an exercise for the reader.</source>
          <target state="translated">La comprobación de errores,como siempre,se ha dejado como un ejercicio para el lector.</target>
        </trans-unit>
        <trans-unit id="deb19663fe1130ad1a6752c882ecbce1fa91037d" translate="yes" xml:space="preserve">
          <source>Error converting file specification %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1fae3d7127b124ae1e94579e5dd51376530e7b" translate="yes" xml:space="preserve">
          <source>Error handling and messages</source>
          <target state="translated">Manejo de errores y mensajes</target>
        </trans-unit>
        <trans-unit id="34660817ebc668307d6b9b58b072f03bc4a8634d" translate="yes" xml:space="preserve">
          <source>Error handling is still a work in progress. If the program encounters a problem reading a zip file it is likely to terminate with an unhelpful error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb7b0a0be7d85a55ee74f50c125415c68cb8808" translate="yes" xml:space="preserve">
          <source>Error information specific to the current operating system. At the moment, this differs from &lt;code&gt;$!&lt;/code&gt; under only VMS, OS/2, and Win32 (and for MacPerl). On all other platforms, &lt;code&gt;$^E&lt;/code&gt; is always just the same as &lt;code&gt;$!&lt;/code&gt; .</source>
          <target state="translated">Informaci&amp;oacute;n de error espec&amp;iacute;fica del sistema operativo actual. Por el momento, esto difiere de &lt;code&gt;$!&lt;/code&gt; solo bajo VMS, OS / 2 y Win32 (y para MacPerl). En todas las dem&amp;aacute;s plataformas, &lt;code&gt;$^E&lt;/code&gt; siempre es lo mismo que &lt;code&gt;$!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f630bce8e4480d279f4c43b7f93e39940eec25e0" translate="yes" xml:space="preserve">
          <source>Error information specific to the current operating system. At the moment, this differs from &lt;code&gt;&lt;a href=&quot;#%24%21&quot;&gt;&quot;$!&quot;&lt;/a&gt;&lt;/code&gt; under only VMS, OS/2, and Win32 (and for MacPerl). On all other platforms, &lt;code&gt;$^E&lt;/code&gt; is always just the same as &lt;code&gt;$!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915cf7d6fb5fed9ebc1249138f0ba313553fae0a" translate="yes" xml:space="preserve">
          <source>Error message &quot;No error definitions found&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36186555ca5a85354d834f18239bd5446de015bb" translate="yes" xml:space="preserve">
          <source>Error message text from the last failed DynaLoader function. Note that, similar to errno in unix, a successful function call does not reset this message.</source>
          <target state="translated">Texto del mensaje de error de la última función fallida del DynaLoader.Tenga en cuenta que,al igual que en el caso de errno in unix,una llamada a la función con éxito no restablece este mensaje.</target>
        </trans-unit>
        <trans-unit id="50134ffbfcda43f0c3168aa2876061d57b69c6ae" translate="yes" xml:space="preserve">
          <source>Error results (warning and fatal) contain:</source>
          <target state="translated">Los resultados de los errores (de advertencia y fatales)contienen:</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="e722317f0272c736783202d0439c1a84302bd3c9" translate="yes" xml:space="preserve">
          <source>Errors in rendering (non-existent function-name, non-existent coderef) are written to the STDOUT, or wherever you've set it via walk_output().</source>
          <target state="translated">Los errores en el renderizado (nombre de función inexistente,coderef inexistente)se escriben en el STDOUT,o dondequiera que lo hayas establecido a través de walk_output().</target>
        </trans-unit>
        <trans-unit id="da8460251cea0573bc6a64a9a743976f334f7752" translate="yes" xml:space="preserve">
          <source>Errors set by Winsock functions are now put directly into &lt;code&gt;$^E&lt;/code&gt;, and the relevant &lt;code&gt;WSAE*&lt;/code&gt; error codes are now exported from the &lt;a href=&quot;errno&quot;&gt;Errno&lt;/a&gt; and &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; modules for testing this against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0934c88916cf6f7537fb99e4833669f3818f9855" translate="yes" xml:space="preserve">
          <source>Errors using the various *style* calls, and bad args to walk_output(), result in die(). Use an eval if you wish to catch these errors and continue processing.</source>
          <target state="translated">Los errores usando las varias llamadas de *estilo*,y los arcos malos para walk_output(),resultan en die().Utiliza una evaluación si deseas detectar estos errores y continuar el proceso.</target>
        </trans-unit>
        <trans-unit id="2a3a3e693d223668963c1734745a9c3d61b5507c" translate="yes" xml:space="preserve">
          <source>Eryq (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b714d8f396c877eacf7d3ad661cfe313a3efe9" translate="yes" xml:space="preserve">
          <source>Escape backslashes (&lt;code&gt;\&lt;/code&gt;) in prototype strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa094bf265d4ea86b5f894d7a380cedfb2baed9e" translate="yes" xml:space="preserve">
          <source>Escape sequences</source>
          <target state="translated">Secuencias de escape</target>
        </trans-unit>
        <trans-unit id="a95db9b35f0577a2b6c8dd20cb8afa6149f7b7b9" translate="yes" xml:space="preserve">
          <source>Escapes a given code source name (typically a file name but can also be a command that was read from) so that double-quotes and backslashes are escaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa6da9272c9b7871ca718b60455b77d2d266044" translate="yes" xml:space="preserve">
          <source>Escapes all &lt;code&gt;$&lt;/code&gt; so they are not interpreted as make variables.</source>
          <target state="translated">Escapa de todos los &lt;code&gt;$&lt;/code&gt; para que no se interpreten como variables de creaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d630054693cd8886f832682006b6bb07e97c811d" translate="yes" xml:space="preserve">
          <source>Escapes at most the first &quot;count&quot; chars of pv and puts the results into dsv such that the size of the escaped string will not exceed &quot;max&quot; chars and will not contain any incomplete escape sequences. The number of bytes escaped will be returned in the STRLEN *escaped parameter if it is not null. When the dsv parameter is null no escaping actually occurs, but the number of bytes that would be escaped were it not null will be calculated.</source>
          <target state="translated">Escapa como máximo los primeros caracteres de &quot;conteo&quot; de pv y pone los resultados en dsv de tal manera que el tamaño de la cadena escapada no exceda el &quot;máximo&quot; de caracteres y no contenga ninguna secuencia de escape incompleta.El número de bytes escapados será devuelto en el parámetro STRLEN *escapado si no es nulo.Cuando el parámetro dsv es nulo no se produce realmente ningún escape,pero se calculará el número de bytes que se escaparían si no fuera nulo.</target>
        </trans-unit>
        <trans-unit id="e9331784f47985d4023ae09824ecf12ebdf39d50" translate="yes" xml:space="preserve">
          <source>Escapes at most the first &lt;code&gt;count&lt;/code&gt; chars of &lt;code&gt;pv&lt;/code&gt; and puts the results into &lt;code&gt;dsv&lt;/code&gt; such that the size of the escaped string will not exceed &lt;code&gt;max&lt;/code&gt; chars and will not contain any incomplete escape sequences. The number of bytes escaped will be returned in the &lt;code&gt;STRLEN *escaped&lt;/code&gt; parameter if it is not null. When the &lt;code&gt;dsv&lt;/code&gt; parameter is null no escaping actually occurs, but the number of bytes that would be escaped were it not null will be calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73daf05e61c2f4ceabfe0f8dc9e8bd0fe087922" translate="yes" xml:space="preserve">
          <source>Escapes stray &lt;code&gt;$&lt;/code&gt; so they are not interpreted as make variables.</source>
          <target state="translated">Escapa de &lt;code&gt;$&lt;/code&gt; por lo que no se interpretan como variables de fabricaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="92b417d4a5ce0ac686aeee5640af004624297a4e" translate="yes" xml:space="preserve">
          <source>Especially &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt;.</source>
          <target state="translated">Especialmente &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51e6f8fb1216de07279b7184fe32486c4afcbbd5" translate="yes" xml:space="preserve">
          <source>Especially &lt;a href=&quot;bigrat&quot;&gt;bigrat&lt;/a&gt; as in &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; .</source>
          <target state="translated">Especialmente m&amp;aacute;s &lt;a href=&quot;bigrat&quot;&gt;grande&lt;/a&gt; como en &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcd99d9147aed607626e5d2c3fbf27fa8eaba872" translate="yes" xml:space="preserve">
          <source>Especially &lt;a href=&quot;bigrat&quot;&gt;bigrat&lt;/a&gt; as in &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; and &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt; as in &lt;code&gt;perl -Mbignum -le 'print sqrt(2)'&lt;/code&gt; .</source>
          <target state="translated">Especialmente m&amp;aacute;s &lt;a href=&quot;bigrat&quot;&gt;grande&lt;/a&gt; como en &lt;code&gt;perl -Mbigrat -le 'print 1/3+1/4'&lt;/code&gt; &lt;code&gt;perl -Mbignum -le 'print sqrt(2)'&lt;/code&gt; ' y &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt; como en perl -Mbignum -le 'print sqrt (2)' .</target>
        </trans-unit>
        <trans-unit id="5485ef59e2abd6d9fec5641c427b8c1a89ee861e" translate="yes" xml:space="preserve">
          <source>Essentially this is the same as the &lt;code&gt;__LINE__&lt;/code&gt; macro, but the &lt;code&gt;line_num(+3)&lt;/code&gt; idiom is arguably nicer.</source>
          <target state="translated">Esencialmente, esto es lo mismo que la macro &lt;code&gt;__LINE__&lt;/code&gt; , pero el &lt;code&gt;line_num(+3)&lt;/code&gt; es posiblemente m&amp;aacute;s agradable.</target>
        </trans-unit>
        <trans-unit id="0c6dff48b0f039b109420e87e1e42abbab8710f8" translate="yes" xml:space="preserve">
          <source>Establish an ISA relationship with base classes at compile time</source>
          <target state="translated">Establecer una relación de la ISA con las clases base en el momento de la compilación</target>
        </trans-unit>
        <trans-unit id="576347ec826f38428d8c8a6f8ec4acb2bceab911" translate="yes" xml:space="preserve">
          <source>Europe</source>
          <target state="translated">Europe</target>
        </trans-unit>
        <trans-unit id="aa9b05a82a74755dccc358002821ca69d31c5e54" translate="yes" xml:space="preserve">
          <source>European Computer Manufacturers Association &lt;a href=&quot;http://www.ecma.ch&quot;&gt;http://www.ecma.ch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0309a3b568036fa350070f80c5e87dff1124fc90" translate="yes" xml:space="preserve">
          <source>Eval the codeblock, return success or failure, and the error message. This code protects $@ and $!, they will be restored by the end of the run. This code also temporarily blocks $SIG{DIE} handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57720a74163f29f2034ea0831d9223b2072fcf53" translate="yes" xml:space="preserve">
          <source>Eval-group in insecure regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de6a23b74739863fdcb66dba07f712f221ab630" translate="yes" xml:space="preserve">
          <source>Eval-group not allowed at runtime, use re 'eval' in regex m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fc4317afc6d18f75173c8034624de946965f7e" translate="yes" xml:space="preserve">
          <source>Eval-group not allowed, use re 'eval' in regex m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15622021802352824cd00f0a03614ec0fdf9d50b" translate="yes" xml:space="preserve">
          <source>Evaluates EXPR and exits immediately with that value. Example:</source>
          <target state="translated">Evalúa el EXPR y sale inmediatamente con ese valor.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="c44b93a0add3946a941d2db7675bb524bcd7719a" translate="yes" xml:space="preserve">
          <source>Evaluates its expression in list context and dumps out the result in a pretty-printed fashion. Nested data structures are printed out recursively, unlike the real &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; function in Perl. When dumping hashes, you'll probably prefer 'x \%h' rather than 'x %h'. See &lt;a href=&quot;dumpvalue&quot;&gt;Dumpvalue&lt;/a&gt; if you'd like to do this yourself.</source>
          <target state="translated">Eval&amp;uacute;a su expresi&amp;oacute;n en el contexto de la lista y descarga el resultado de una manera bastante impresa. Las estructuras de datos anidadas se imprimen de forma recursiva, a diferencia de la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; real en Perl. Al volcar hashes, probablemente prefieras 'x \% h' en lugar de 'x% h'. Consulte &lt;a href=&quot;dumpvalue&quot;&gt;Dumpvalue&lt;/a&gt; si desea hacerlo usted mismo.</target>
        </trans-unit>
        <trans-unit id="a5bd312d1ed9e2d998f61c992d1949d05f3189c8" translate="yes" xml:space="preserve">
          <source>Evaluates its expression in list context and dumps out the result in a pretty-printed fashion. Nested data structures are printed out recursively, unlike the real &lt;code&gt;print&lt;/code&gt; function in Perl. When dumping hashes, you'll probably prefer 'x \%h' rather than 'x %h'. See &lt;a href=&quot;dumpvalue&quot;&gt;Dumpvalue&lt;/a&gt; if you'd like to do this yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac54d42c3ebf7c1eb1985e5c37def23568be458" translate="yes" xml:space="preserve">
          <source>Evaluates the BLOCK or EXPR for each element of LIST (locally setting &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to each element) and composes a list of the results of each such evaluation. Each element of LIST may produce zero, one, or more elements in the generated list, so the number of elements in the generated list may differ from that in LIST. In scalar context, returns the total number of elements so generated. In list context, returns the generated list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6b463c629f711f381a6e44374ee5717c9b5851" translate="yes" xml:space="preserve">
          <source>Evaluates the BLOCK or EXPR for each element of LIST (locally setting &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to each element) and returns the list value consisting of those elements for which the expression evaluated to true. In scalar context, returns the number of times the expression was true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee27e1be9e7d28580a29bfa24323cac2b1efa9" translate="yes" xml:space="preserve">
          <source>Evaluates the BLOCK or EXPR for each element of LIST (locally setting &lt;code&gt;$_&lt;/code&gt; to each element) and returns the list value composed of the results of each such evaluation. In scalar context, returns the total number of elements so generated. Evaluates BLOCK or EXPR in list context, so each element of LIST may produce zero, one, or more elements in the returned value.</source>
          <target state="translated">Eval&amp;uacute;a BLOQUEO o EXPR para cada elemento de LISTA (estableciendo localmente &lt;code&gt;$_&lt;/code&gt; para cada elemento) y devuelve el valor de lista compuesto por los resultados de cada una de esas evaluaciones. En contexto escalar, devuelve el n&amp;uacute;mero total de elementos as&amp;iacute; generados. Eval&amp;uacute;a BLOCK o EXPR en el contexto de lista, por lo que cada elemento de LIST puede producir cero, uno o m&amp;aacute;s elementos en el valor devuelto.</target>
        </trans-unit>
        <trans-unit id="e159565a978e2dbd25deef6d431807eb47abbd14" translate="yes" xml:space="preserve">
          <source>Evaluates the BLOCK or EXPR for each element of LIST (locally setting &lt;code&gt;$_&lt;/code&gt; to each element) and returns the list value consisting of those elements for which the expression evaluated to true. In scalar context, returns the number of times the expression was true.</source>
          <target state="translated">Eval&amp;uacute;a BLOCK o EXPR para cada elemento de LIST (estableciendo localmente &lt;code&gt;$_&lt;/code&gt; para cada elemento) y devuelve el valor de lista que consta de aquellos elementos para los que la expresi&amp;oacute;n se evalu&amp;oacute; como verdadera. En contexto escalar, devuelve el n&amp;uacute;mero de veces que la expresi&amp;oacute;n fue verdadera.</target>
        </trans-unit>
        <trans-unit id="cf5a5afbdf639c60540cb29b1afb8482a4c27513" translate="yes" xml:space="preserve">
          <source>Evaluates the hash in scalar context and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb27bcd152d36bb6aa40c050f7aa6bc064a148c" translate="yes" xml:space="preserve">
          <source>Evaluates the hash in scalar context and returns the result. Handles magic when the hash is tied.</source>
          <target state="translated">Evalúa el hachís en un contexto escalar y devuelve el resultado.Maneja la magia cuando el hachís está atado.</target>
        </trans-unit>
        <trans-unit id="4e9ac4c1ee356b0a19d18eecf82ac765b9101304" translate="yes" xml:space="preserve">
          <source>Evaluates the passed SV. Result handling is done the same as for &lt;code&gt;call_sv()&lt;/code&gt; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808c33dddbb9e00ae9c3a4845059fe43368d7b0a" translate="yes" xml:space="preserve">
          <source>Evaluates to 0xFFFD, the code point of the Unicode REPLACEMENT CHARACTER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c62a6c57ccf104ad2d41815aed270108351d20" translate="yes" xml:space="preserve">
          <source>Evaluates to 1 if the byte &lt;code&gt;c&lt;/code&gt; represents the same character when encoded in UTF-8 as when not; otherwise evaluates to 0. UTF-8 invariant characters can be copied as-is when converting to/from UTF-8, saving time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100562c78d7cbca55f4722b4014576ae868df4e3" translate="yes" xml:space="preserve">
          <source>Evaluates to 1 if the representation of code point &lt;code&gt;cp&lt;/code&gt; is the same whether or not it is encoded in UTF-8; otherwise evaluates to 0. UTF-8 invariant characters can be copied as-is when converting to/from UTF-8, saving time. &lt;code&gt;cp&lt;/code&gt; is Unicode if above 255; otherwise is platform-native.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb14ed1a5da1a7d197c5bfa2c110468f119a341" translate="yes" xml:space="preserve">
          <source>Evaluates to TRUE if the plain locale pragma without a parameter (&lt;code&gt;use locale&lt;/code&gt;) is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f226763df7ae244c2d5731a8cec87c6ad68b9c" translate="yes" xml:space="preserve">
          <source>Evaluates to TRUE if, when compiling a perl program (including an &lt;code&gt;eval&lt;/code&gt;) if the plain locale pragma without a parameter (&lt;code&gt;use locale&lt;/code&gt;) is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f195a4b1422deea528999a2aea4d2e3abe0a2cb0" translate="yes" xml:space="preserve">
          <source>Evaluates to TRUE if, when executing a perl program (including an &lt;code&gt;eval&lt;/code&gt;) if the plain locale pragma without a parameter (&lt;code&gt;use locale&lt;/code&gt;) is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7efdaaae8c2d5acf037415de9e55f35d46853a" translate="yes" xml:space="preserve">
          <source>Evaluates to a list of the words extracted out of</source>
          <target state="translated">Evalúa a una lista de las palabras extraídas de</target>
        </trans-unit>
        <trans-unit id="d65f4596e5b21853db6815029e47b4d12178eb0e" translate="yes" xml:space="preserve">
          <source>Evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are well-formed UTF-8 that represents one of the Unicode non-character code points; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ba361513dd4325cee403415d7567ac05c0deb6" translate="yes" xml:space="preserve">
          <source>Evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are well-formed UTF-8 that represents one of the Unicode surrogate code points; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b4e5bdfedcccceafa909bcd677f735ead45367" translate="yes" xml:space="preserve">
          <source>Evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are well-formed UTF-8 that represents some Unicode code point completely acceptable for open interchange between all applications; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation. Any bytes remaining before &lt;code&gt;e&lt;/code&gt;, but beyond the ones needed to form the first code point in &lt;code&gt;s&lt;/code&gt;, are not examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394362d7a28197545d54a3464886ae1b442e8f27" translate="yes" xml:space="preserve">
          <source>Evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are well-formed UTF-8 that represents some Unicode non-surrogate code point; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation. Any bytes remaining before &lt;code&gt;e&lt;/code&gt;, but beyond the ones needed to form the first code point in &lt;code&gt;s&lt;/code&gt;, are not examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5579ca82ad3ea408feb922437fb3356d093b24" translate="yes" xml:space="preserve">
          <source>Evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are well-formed UTF-8, as extended by Perl, that represents some code point, subject to the restrictions given by &lt;code&gt;flags&lt;/code&gt;; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation. Any bytes remaining before &lt;code&gt;e&lt;/code&gt;, but beyond the ones needed to form the first code point in &lt;code&gt;s&lt;/code&gt;, are not examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70279dc7ca9469f018e588c174a215d906087c5" translate="yes" xml:space="preserve">
          <source>Evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are well-formed UTF-8, as extended by Perl, that represents some code point; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation. Any bytes remaining before &lt;code&gt;e&lt;/code&gt;, but beyond the ones needed to form the first code point in &lt;code&gt;s&lt;/code&gt;, are not examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f4958a116f001f9e79787b5473e92c45467956" translate="yes" xml:space="preserve">
          <source>Evaluating a Perl statement from your C program</source>
          <target state="translated">Evaluando una declaración de Perl de su programa C</target>
        </trans-unit>
        <trans-unit id="fdfaa902629988731ecf820e3310a76ecb105be5" translate="yes" xml:space="preserve">
          <source>Evaluating perl code (e.g. via &quot;eval&quot; or &quot;do 'file'&quot;) causes the code to be compiled into an internal format and then, provided there was no error in the compilation, executed. The internal format is based on many distinct</source>
          <target state="translated">La evaluación del código perl (por ejemplo,a través de &quot;eval&quot; o &quot;do 'file'&quot;)hace que el código se compile en un formato interno y luego,siempre que no haya habido ningún error en la compilación,se ejecute.El formato interno se basa en muchos</target>
        </trans-unit>
        <trans-unit id="e1f930d87a7c101ffac9391f41733ff5b3321f0a" translate="yes" xml:space="preserve">
          <source>Even &lt;code&gt;$x += 5&lt;/code&gt; or &lt;code&gt;$x++&lt;/code&gt; are not guaranteed to be atomic.</source>
          <target state="translated">Incluso &lt;code&gt;$x += 5&lt;/code&gt; o &lt;code&gt;$x++&lt;/code&gt; no se garantiza que sean at&amp;oacute;micos.</target>
        </trans-unit>
        <trans-unit id="459a068431296abdc9a0ee020cbb72e87da92588" translate="yes" xml:space="preserve">
          <source>Even after they stabilize, some tests may fail.</source>
          <target state="translated">Incluso después de que se estabilicen,algunas pruebas pueden fallar.</target>
        </trans-unit>
        <trans-unit id="1dd817d2a76ad639afa2f373c6b0e32abc7df4b3" translate="yes" xml:space="preserve">
          <source>Even if a certain letter is tailored, its equivalent would not always tailored as well as it. For example, even though W is tailored, fullwidth W (&lt;code&gt;U+FF37&lt;/code&gt;), W with acute (&lt;code&gt;U+1E82&lt;/code&gt;), etc. are not tailored. The result may depend on whether source strings are normalized or not, and whether decomposed or composed. Thus &lt;code&gt;(normalization =&amp;gt; undef)&lt;/code&gt; is less preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014c0223d524d2f9046bd74912b924b926ef1dba" translate="yes" xml:space="preserve">
          <source>Even if a module is thread-safe, it doesn't mean that the module is optimized to work well with threads. A module could possibly be rewritten to utilize the new features in threaded Perl to increase performance in a threaded environment.</source>
          <target state="translated">Incluso si un módulo es seguro para los hilos,no significa que el módulo esté optimizado para trabajar bien con los hilos.Un módulo podría ser reescrito para utilizar las nuevas características de los hilos de Perl para aumentar el rendimiento en un entorno de hilos.</target>
        </trans-unit>
        <trans-unit id="ea9410fd8b85c13558ab2ec195f440b39ef94e1e" translate="yes" xml:space="preserve">
          <source>Even if a prototype is available at compile time, the body of the subroutine is not (it hasn't been &lt;code&gt;AUTOLOAD&lt;/code&gt; ed yet). perl needs to examine both the &lt;code&gt;()&lt;/code&gt; prototype and the body of a subroutine at compile time to detect that it can safely replace calls to that subroutine with the constant value.</source>
          <target state="translated">Incluso si hay un prototipo disponible en el momento de la compilaci&amp;oacute;n, el cuerpo de la subrutina no lo est&amp;aacute; (a&amp;uacute;n no se ha realizado &lt;code&gt;AUTOLOAD&lt;/code&gt; ). perl necesita examinar tanto el prototipo &lt;code&gt;()&lt;/code&gt; como el cuerpo de una subrutina en tiempo de compilaci&amp;oacute;n para detectar que puede reemplazar de manera segura las llamadas a esa subrutina con el valor constante.</target>
        </trans-unit>
        <trans-unit id="732edb0c232306cf9f713f481702d02637baa9d1" translate="yes" xml:space="preserve">
          <source>Even if a prototype is available at compile time, the body of the subroutine is not (it hasn't been &lt;code&gt;AUTOLOAD&lt;/code&gt;ed yet). perl needs to examine both the &lt;code&gt;()&lt;/code&gt; prototype and the body of a subroutine at compile time to detect that it can safely replace calls to that subroutine with the constant value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9d9a1a7409534a2957addc0cb2ac7a35e101e4" translate="yes" xml:space="preserve">
          <source>Even if no</source>
          <target state="translated">Incluso si no</target>
        </trans-unit>
        <trans-unit id="9a52563c6b228851d7bd722e9df68900d397ecd2" translate="yes" xml:space="preserve">
          <source>Even if there are no groupings in a regexp, it is still possible to find out what exactly matched in a string. If you use them, Perl will set &lt;code&gt;$`&lt;/code&gt; to the part of the string before the match, will set &lt;code&gt;$&amp;amp;&lt;/code&gt; to the part of the string that matched, and will set &lt;code&gt;$'&lt;/code&gt; to the part of the string after the match. An example:</source>
          <target state="translated">Incluso si no hay agrupaciones en una expresi&amp;oacute;n regular, todav&amp;iacute;a es posible averiguar qu&amp;eacute; coincide exactamente en una cadena. Si los usa, Perl establecer&amp;aacute; &lt;code&gt;$`&lt;/code&gt; en la parte de la cadena antes de la coincidencia, establecer&amp;aacute; &lt;code&gt;$&amp;amp;&lt;/code&gt; en la parte de la cadena que coincidi&amp;oacute; y establecer&amp;aacute; &lt;code&gt;$'&lt;/code&gt; en la parte de la cadena despu&amp;eacute;s de la coincidencia. Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="d0239289e914ec51bf43e7158f9d72ad004bea40" translate="yes" xml:space="preserve">
          <source>Even if you aren't in doubt, consider the mental welfare of the person who has to maintain the code after you, and who will probably put parentheses in the wrong place.</source>
          <target state="translated">Incluso si no tienes dudas,considera el bienestar mental de la persona que tiene que mantener el código después de ti,y que probablemente pondrá los paréntesis en el lugar equivocado.</target>
        </trans-unit>
        <trans-unit id="2698b39349f79453a318cb744bc9cc6aed1c6f70" translate="yes" xml:space="preserve">
          <source>Even if you don't currently make use of the API interface, it is still worth reading it.</source>
          <target state="translated">Aunque no uses la interfaz de la API,vale la pena leerla.</target>
        </trans-unit>
        <trans-unit id="7c8671eab5d7a940c940da36a9cbcdd6d20bec94" translate="yes" xml:space="preserve">
          <source>Even if you don't want to modify an array, this mechanism is useful for passing multiple arrays in a single LIST, because normally the LIST mechanism will merge all the array values so that you can't extract out the individual arrays. For more on typeglobs, see &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;&quot;Typeglobs and Filehandles&quot; in perldata&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11193f6fb31e4425ba4f294d83acb0ef83b5308c" translate="yes" xml:space="preserve">
          <source>Even if you don't want to modify an array, this mechanism is useful for passing multiple arrays in a single LIST, because normally the LIST mechanism will merge all the array values so that you can't extract out the individual arrays. For more on typeglobs, see &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs and Filehandles in perldata&lt;/a&gt;.</source>
          <target state="translated">Incluso si no desea modificar una matriz, este mecanismo es &amp;uacute;til para pasar varias matrices en una sola LISTA, porque normalmente el mecanismo LIST fusionar&amp;aacute; todos los valores de la matriz para que no pueda extraer las matrices individuales. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre typeglobs, consulte &lt;a href=&quot;perldata#Typeglobs-and-Filehandles&quot;&gt;Typeglobs y Filehandles en perldata&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="704c6dd5d66c1d05562f24b58fe540e4c1622bbc" translate="yes" xml:space="preserve">
          <source>Even in a pattern that is interpolated and compiled at run-time, literal code blocks will be compiled once, at perl compile time; the following prints &quot;ABCD&quot;:</source>
          <target state="translated">Incluso en un patrón que se interpola y se compila en tiempo de ejecución,los bloques de código literal se compilarán una vez,en tiempo de compilación de perl;el siguiente imprime &quot;ABCD&quot;:</target>
        </trans-unit>
        <trans-unit id="f9a57fec05cf4b4012f5962aa352266b10461d68" translate="yes" xml:space="preserve">
          <source>Even more drastic example of a process-scope change is &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot()&lt;/a&gt;&lt;/code&gt;: the root directory of all the threads changes, and no thread can undo it (as opposed to &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Un ejemplo a&amp;uacute;n m&amp;aacute;s dr&amp;aacute;stico de un cambio de alcance de proceso es &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot()&lt;/a&gt;&lt;/code&gt; : el directorio ra&amp;iacute;z de todos los subprocesos cambia, y ning&amp;uacute;n subproceso puede deshacerlo (a diferencia de &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d47488f3c7fd4b4fcceda28125544a987450d2a0" translate="yes" xml:space="preserve">
          <source>Even more drastic example of a process-scope change is &lt;code&gt;chroot()&lt;/code&gt;: the root directory of all the threads changes, and no thread can undo it (as opposed to &lt;code&gt;chdir()&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba46823e424c4e147c0d6ca9c73a6300bf0908c" translate="yes" xml:space="preserve">
          <source>Even numbered minor versions (5.14, 5.16, 5.18) are production versions, and odd numbered minor versions (5.15, 5.17, 5.19) are development versions. Unless you want to try out an experimental feature, you probably never want to install a development version of Perl.</source>
          <target state="translated">Las versiones menores numeradas pares (5.14,5.16,5.18)son versiones de producción,y las versiones menores numeradas impares (5.15,5.17,5.19)son versiones de desarrollo.A menos que quiera probar una característica experimental,probablemente nunca quiera instalar una versión de desarrollo de Perl.</target>
        </trans-unit>
        <trans-unit id="985c32669ab9bb43127ab9478cdf373b1b43c14e" translate="yes" xml:space="preserve">
          <source>Even the fallback for &lt;code&gt;decode&lt;/code&gt; must return octets, which are then decoded with the character encoding that &lt;code&gt;decode&lt;/code&gt; accepts. So for example if you wish to decode octets as UTF-8, and use ISO-8859-15 as a fallback for bytes that are not valid UTF-8, you could write</source>
          <target state="translated">Incluso el respaldo para la &lt;code&gt;decode&lt;/code&gt; debe devolver octetos, que luego se decodifican con la codificaci&amp;oacute;n de caracteres que acepta la &lt;code&gt;decode&lt;/code&gt; . Entonces, por ejemplo, si desea decodificar octetos como UTF-8 y usar ISO-8859-15 como respaldo para bytes que no son UTF-8 v&amp;aacute;lidos, puede escribir</target>
        </trans-unit>
        <trans-unit id="899cce7279e173a144c83044ba4c75852234efbb" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;dog&lt;/code&gt; is the first alternative in the second regex, &lt;code&gt;cat&lt;/code&gt; is able to match earlier in the string.</source>
          <target state="translated">Aunque &lt;code&gt;dog&lt;/code&gt; es la primera alternativa en la segunda expresi&amp;oacute;n regular, &lt;code&gt;cat&lt;/code&gt; puede coincidir antes en la cadena.</target>
        </trans-unit>
        <trans-unit id="491ac4fd5a527c06bb95d6b29c3d2ceec9e2c0d4" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;dog&lt;/code&gt; is the first alternative in the second regexp, &lt;code&gt;cat&lt;/code&gt; is able to match earlier in the string.</source>
          <target state="translated">Aunque &lt;code&gt;dog&lt;/code&gt; es la primera alternativa en la segunda expresi&amp;oacute;n regular, &lt;code&gt;cat&lt;/code&gt; puede coincidir antes en la cadena.</target>
        </trans-unit>
        <trans-unit id="9e410bea532f43017a3bc057208bf28febe91829" translate="yes" xml:space="preserve">
          <source>Even though HP-UX 10.20 and 11.00 are not actively maintained by HP anymore, updates for the HP ANSI C compiler are still available from time to time, and it might be advisable to see if updates are applicable. At the moment of writing, the latests available patches for 11.00 that should be applied are PHSS_35098, PHSS_35175, PHSS_35100, PHSS_33036, and PHSS_33902). If you have a SUM account, you can use it to search for updates/patches. Enter &quot;ANSI&quot; as keyword.</source>
          <target state="translated">Aunque HP-UX 10.20 y 11.00 ya no es mantenido activamente por HP,las actualizaciones para el compilador HP ANSI C siguen estando disponibles de vez en cuando,y podría ser aconsejable ver si las actualizaciones son aplicables.En el momento de escribir este artículo,los últimos parches disponibles para las 11.00 que deberían aplicarse son PHSS_35098,PHSS_35175,PHSS_35100,PHSS_33036,y PHSS_33902).Si tienes una cuenta SUM,puedes usarla para buscar actualizaciones/parches.Introduzca &quot;ANSI&quot; como palabra clave.</target>
        </trans-unit>
        <trans-unit id="66ef75af64ac05e5f42a2e25f67b5dd40dad7f74" translate="yes" xml:space="preserve">
          <source>Even though VOS allows the slash character to appear in object names, because the VOS port of Perl interprets it as a pathname delimiting character, VOS files, directories, or links whose names contain a slash character cannot be processed. Such files must be renamed before they can be processed by Perl.</source>
          <target state="translated">Aunque el VOS permite que el carácter de barra aparezca en los nombres de los objetos,debido a que el puerto VOS de Perl lo interpreta como un carácter de delimitación de ruta,los archivos VOS,directorios o enlaces cuyos nombres contienen un carácter de barra no pueden ser procesados.Tales archivos deben ser renombrados antes de que puedan ser procesados por Perl.</target>
        </trans-unit>
        <trans-unit id="cdd82719baf99cfe9734df3eaad725f4efdb196d" translate="yes" xml:space="preserve">
          <source>Even though a reference may be declared as a constant, the reference may point to data which may be changed, as this code shows.</source>
          <target state="translated">Aunque una referencia puede ser declarada como una constante,la referencia puede apuntar a datos que pueden ser cambiados,como muestra este código.</target>
        </trans-unit>
        <trans-unit id="6c1ced7503a24a96a968e8abe517680e11868256" translate="yes" xml:space="preserve">
          <source>Even though it doesn't do much, it is still preferable to writing your own classes from scratch.</source>
          <target state="translated">Aunque no hace mucho,sigue siendo preferible a escribir tus propias clases desde cero.</target>
        </trans-unit>
        <trans-unit id="5d86d002ba38ad23c3e6f35071476718335949c5" translate="yes" xml:space="preserve">
          <source>Even though it looks as though they're the same method calls (uid), they aren't, because a &lt;code&gt;File::stat&lt;/code&gt; object is different from a &lt;code&gt;User::pwent&lt;/code&gt; object.</source>
          <target state="translated">Aunque parece que son las mismas llamadas a m&amp;eacute;todos (uid), no lo son, porque un objeto &lt;code&gt;File::stat&lt;/code&gt; es diferente de un objeto &lt;code&gt;User::pwent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dc6e1961fe501af8f7b8e43fd427c0320c933fd" translate="yes" xml:space="preserve">
          <source>Even though some of this section may not be understandable to you on first reading, we think it's important enough to highlight some of the gotchas before delving further, so here goes:</source>
          <target state="translated">Aunque parte de esta sección puede no ser comprensible para usted en la primera lectura,creemos que es lo suficientemente importante como para resaltar algunos de los &quot;gotas&quot; antes de profundizar más,así que aquí va:</target>
        </trans-unit>
        <trans-unit id="a15d3a1eac0736a5f4619bbd0fabeec7d4b2fc07" translate="yes" xml:space="preserve">
          <source>Even though these two matches might be thought of as complements, until v5.20 they were so only on Unicode code points.</source>
          <target state="translated">Aunque estos dos partidos podrían ser considerados como complementos,hasta la v5.20 sólo lo eran en puntos de código Unicode.</target>
        </trans-unit>
        <trans-unit id="763ed71064b10dfe0eadc8f471bf100bdbc4763d" translate="yes" xml:space="preserve">
          <source>Even though with normal text files a &quot;\n&quot; will do the trick, there is still no unified scheme for terminating a line that is portable between Unix, DOS/Win, and Macintosh, except to terminate</source>
          <target state="translated">Aunque con los archivos de texto normales una &quot;\n&quot; hará el truco,todavía no hay un esquema unificado para terminar una línea que es portátil entre Unix,DOS/Win,y Macintosh,excepto para terminar</target>
        </trans-unit>
        <trans-unit id="4630d8c85d1750185c25d65fe850b66a19d12625" translate="yes" xml:space="preserve">
          <source>Even though you started with a completely empty hash, after that call to &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; you've created the structure you needed to check for &lt;code&gt;key3&lt;/code&gt; :</source>
          <target state="translated">A pesar de que comenz&amp;oacute; con un hash completamente vac&amp;iacute;o, despu&amp;eacute;s de que &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; esa llamada , ha creado la estructura que necesitaba para verificar &lt;code&gt;key3&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="65c079978ec4f4cfbd582b4959b8aaf4fe2b2dbe" translate="yes" xml:space="preserve">
          <source>Even though you started with a completely empty hash, after that call to &lt;code&gt;exists&lt;/code&gt; you've created the structure you needed to check for &lt;code&gt;key3&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c088010f5560d49366ca00a6983df9e83535cb" translate="yes" xml:space="preserve">
          <source>Even when on a single platform (if you can call Unix a single platform), remember not to count on the existence or the contents of particular system-specific files or directories, like</source>
          <target state="translated">Incluso cuando esté en una sola plataforma (si puede llamar a Unix una sola plataforma),recuerde no contar con la existencia o el contenido de archivos o directorios específicos del sistema,como</target>
        </trans-unit>
        <trans-unit id="1602f4d9817a3dceaa33d17e6c176137283825a5" translate="yes" xml:space="preserve">
          <source>Even with all this work, regexp matching happens remarkably fast. To speed things up, Perl compiles the regexp into a compact sequence of opcodes that can often fit inside a processor cache. When the code is executed, these opcodes can then run at full throttle and search very quickly.</source>
          <target state="translated">Incluso con todo este trabajo,el emparejamiento de regexp ocurre notablemente rápido.Para acelerar las cosas,Perl compila la regexp en una secuencia compacta de opcodes que a menudo puede caber dentro de la caché de un procesador.Cuando el código se ejecuta,estos opcodes pueden entonces funcionar a toda velocidad y buscar muy rápidamente.</target>
        </trans-unit>
        <trans-unit id="35946850beee8b541477d17361e646c61666892c" translate="yes" xml:space="preserve">
          <source>Even with the latest version of Perl, it is known that certain constructs with threads may result in warning messages concerning leaked scalars or unreferenced scalars. However, such warnings are harmless, and may safely be ignored.</source>
          <target state="translated">Incluso con la última versión de Perl,se sabe que ciertas construcciones con hilos pueden dar lugar a mensajes de advertencia sobre escalares filtrados o escalares no referenciados.Sin embargo,tales advertencias son inofensivas,y pueden ser ignoradas con seguridad.</target>
        </trans-unit>
        <trans-unit id="878e531bfbade13b1bab65a888ae7d4bdc1140e8" translate="yes" xml:space="preserve">
          <source>Event Log</source>
          <target state="translated">Registro de eventos</target>
        </trans-unit>
        <trans-unit id="d3032d704e23194c50435cf4a6371b080589c4eb" translate="yes" xml:space="preserve">
          <source>Event driven.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1394956111c7856f6f7f78713d6c0aa968cc8b" translate="yes" xml:space="preserve">
          <source>Event for TAP version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb79b9266fc643c28f6d3ecc5b6b3731a8786707" translate="yes" xml:space="preserve">
          <source>Event for a simple failed assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd541c73c6d801e12ef6ab2a2ef6eeb8678fe31" translate="yes" xml:space="preserve">
          <source>Event for a simple passing assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbb1e51381ea5f156ee24e974d0e8c3d15bb5e6" translate="yes" xml:space="preserve">
          <source>Event for subtest types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa125b31576ec16d1e191efd5ca768b2aa4efa32" translate="yes" xml:space="preserve">
          <source>Event package name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="3cece53956ddc248529397d0c65ecaab5ebb07b6" translate="yes" xml:space="preserve">
          <source>Events live under this namespace. It is considered acceptable for third party distributions to add new event types in this namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50edb0cf580f75f4a0fea837a24e96eb1cff3aca" translate="yes" xml:space="preserve">
          <source>Events use this facet when they need to set the plan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b8ce2e1404f72b01628a7fbd8afce9a0ca4416" translate="yes" xml:space="preserve">
          <source>Events within a buffered subtest may or may not be sent to the formatter as they happen. If a formatter fails to specify then the default is to &lt;b&gt;NOT SEND&lt;/b&gt; the events as they are generated, instead the formatter can pull them from the &lt;code&gt;subevents&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4538af23a815bef65c32e32809e639186875a9f" translate="yes" xml:space="preserve">
          <source>Eventually, with better documentation and possible some cleanup, this could be part of &lt;code&gt;ExtUtils::Typemaps&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d002601ef62e11979d8b7c94cd10d54da0d3a8e1" translate="yes" xml:space="preserve">
          <source>Ever wanted to know what a regex looked like? You'll need perl compiled with the DEBUGGING flag for this one:</source>
          <target state="translated">¿Alguna vez quisiste saber cómo era un Rex? Necesitarás a Perl compilado con la bandera de DEBUGGING para este:</target>
        </trans-unit>
        <trans-unit id="d845fa7f9ca71d8879b9cc1aee98930cd966bdbd" translate="yes" xml:space="preserve">
          <source>Every CPAN module has a bug tracker set up in RT, &lt;a href=&quot;http://rt.cpan.org&quot;&gt;http://rt.cpan.org&lt;/a&gt;. You can submit bugs to RT either through its web interface or by email. To email a bug report, send it to bug-&amp;lt;distribution-name&amp;gt;@rt.cpan.org . For example, if you wanted to report a bug in &lt;a href=&quot;Business::ISBN&quot;&gt;Business::ISBN&lt;/a&gt;, you could send a message to bug-Business-ISBN@rt.cpan.org .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc9126b1847307a5366bc653e3a3467f58a3dfa" translate="yes" xml:space="preserve">
          <source>Every CPAN module has a bug tracker set up in RT, &lt;a href=&quot;http://rt.cpan.org&quot;&gt;http://rt.cpan.org&lt;/a&gt;. You can submit bugs to RT either through its web interface or by email. To email a bug report, send it to bug-&amp;lt;distribution-name&amp;gt;@rt.cpan.org . For example, if you wanted to report a bug in &lt;a href=&quot;http://search.cpan.org/perldoc/Business::ISBN&quot;&gt;Business::ISBN&lt;/a&gt;, you could send a message to bug-Business-ISBN@rt.cpan.org .</source>
          <target state="translated">Cada m&amp;oacute;dulo CPAN tiene un rastreador de errores configurado en RT, &lt;a href=&quot;http://rt.cpan.org&quot;&gt;http://rt.cpan.org&lt;/a&gt; . Puede enviar errores a RT a trav&amp;eacute;s de su interfaz web o por correo electr&amp;oacute;nico. Para enviar un informe de error por correo electr&amp;oacute;nico, env&amp;iacute;elo a bug- &amp;lt;distribution-name&amp;gt; @ rt.cpan.org. Por ejemplo, si desea informar un error en &lt;a href=&quot;http://search.cpan.org/perldoc/Business::ISBN&quot;&gt;Business :: ISBN&lt;/a&gt; , puede enviar un mensaje a bug-Business-ISBN@rt.cpan.org.</target>
        </trans-unit>
        <trans-unit id="b8dc7000ca1bb13ca17faed27406eccbd7bcf88b" translate="yes" xml:space="preserve">
          <source>Every Makefile.PL is run by perl in a separate process. Likewise we run 'make' and 'make install' in separate processes. If you have any parameters (e.g. PREFIX, UNINST or the like) you want to pass to the calls, please specify them here.</source>
          <target state="translated">Cada Makefile.PL es dirigido por perl en un proceso separado.De la misma manera,ejecutamos &quot;make&quot; y &quot;make install&quot; en procesos separados.Si tiene algún parámetro (por ejemplo,PREFIX,UNINST o similar)que quiera pasar a las llamadas,por favor especifíquelo aquí.</target>
        </trans-unit>
        <trans-unit id="5243f64d154762b9f500ff300bf1242e41c19e00" translate="yes" xml:space="preserve">
          <source>Every Unicode character is assigned a general category, which is the &quot;most usual categorization of a character&quot; (from &lt;a href=&quot;http://www.unicode.org/reports/tr44&quot;&gt;http://www.unicode.org/reports/tr44&lt;/a&gt;).</source>
          <target state="translated">A cada car&amp;aacute;cter Unicode se le asigna una categor&amp;iacute;a general, que es la &quot;categorizaci&amp;oacute;n m&amp;aacute;s habitual de un car&amp;aacute;cter&quot; (de &lt;a href=&quot;http://www.unicode.org/reports/tr44&quot;&gt;http://www.unicode.org/reports/tr44&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="44bc5eca50d1bb33525106b332f679e0c37967c9" translate="yes" xml:space="preserve">
          <source>Every Unicode character is assigned a general category, which is the &quot;most usual categorization of a character&quot; (from &lt;a href=&quot;https://www.unicode.org/reports/tr44&quot;&gt;https://www.unicode.org/reports/tr44&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe5013abe724619f4b95c9d05a2b40a50dbbb59" translate="yes" xml:space="preserve">
          <source>Every YAML document represents a single hash reference. The valid keys in this hash are as follows:</source>
          <target state="translated">Cada documento de YAML representa una única referencia hash.Las claves válidas en este hash son las siguientes:</target>
        </trans-unit>
        <trans-unit id="302f7ff33fa3b90fdd2132b2697fb84f8705e874" translate="yes" xml:space="preserve">
          <source>Every YAML file may contain arbitrary documents according to the YAML specification, and every document is treated as an entity that can specify the treatment of a single distribution.</source>
          <target state="translated">Cada archivo YAML puede contener documentos arbitrarios de acuerdo con la especificación YAML,y cada documento se trata como una entidad que puede especificar el tratamiento de una única distribución.</target>
        </trans-unit>
        <trans-unit id="08580b590313edf277a406f46fd0c846e6d3947e" translate="yes" xml:space="preserve">
          <source>Every case has a specific application and one or more exceptions, and there is no replacement for running a few tests and finding out which method works best for your particular environment, this is why writing optimal code is not an exact science, and why we love using Perl so much - TMTOWTDI.</source>
          <target state="translated">Cada caso tiene una aplicación específica y una o más excepciones,y no hay sustituto para ejecutar unas cuantas pruebas y averiguar qué método funciona mejor para su entorno particular,por eso escribir un código óptimo no es una ciencia exacta,y por eso nos gusta tanto usar Perl-TMTOWTDI.</target>
        </trans-unit>
        <trans-unit id="5d3966578fbc31ddc5c9c823b10c9d09c4de1eb0" translate="yes" xml:space="preserve">
          <source>Every code point can be represented by more than one possible syntactically valid UTF-8 sequence. Early on, both Unicode and Perl considered any of these to be valid, but now, all sequences longer than the shortest possible one are considered to be malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e844c7ea0f1cedd3ae0259a6817d00e2a02c10f0" translate="yes" xml:space="preserve">
          <source>Every developer publishing modules on CPAN needs a CPAN ID. Visit &lt;code&gt;&lt;a href=&quot;http://pause.perl.org/&quot;&gt;http://pause.perl.org/&lt;/a&gt;&lt;/code&gt;, select &quot;Request PAUSE Account&quot;, and wait for your request to be approved by the PAUSE administrators.</source>
          <target state="translated">Cada desarrollador que publica m&amp;oacute;dulos en CPAN necesita una ID de CPAN. Visite &lt;code&gt;&lt;a href=&quot;http://pause.perl.org/&quot;&gt;http://pause.perl.org/&lt;/a&gt;&lt;/code&gt; , seleccione &quot;Solicitar cuenta de PAUSA&quot; y espere a que los administradores de PAUSA aprueben su solicitud.</target>
        </trans-unit>
        <trans-unit id="e4befbeaf4f0b8eb62e07538a8708d75b3c87445" translate="yes" xml:space="preserve">
          <source>Every element in an arrayref directly below a 'par' key is eligible to be run in parallel, while vavalues directly below a 'seq' key must be run in sequence.</source>
          <target state="translated">Cada elemento de un arrayref directamente debajo de una clave &quot;par&quot; puede ejecutarse en paralelo,mientras que los vavalores directamente debajo de una clave &quot;seq&quot; deben ejecutarse en secuencia.</target>
        </trans-unit>
        <trans-unit id="e1c563b6d35c0f4b5118e9474a1d4ce3c52e7bcc" translate="yes" xml:space="preserve">
          <source>Every element node in the parse tree is represented by an arrayref of the form: &lt;code&gt;[ &lt;i&gt;elementname&lt;/i&gt;, \%attributes, &lt;i&gt;...subnodes...&lt;/i&gt; ]&lt;/code&gt;. See the example tree dump in the Synopsis, above.</source>
          <target state="translated">Cada nodo de elemento en el &amp;aacute;rbol de an&amp;aacute;lisis est&amp;aacute; representado por una referencia de matriz de la forma: &lt;code&gt;[ &lt;i&gt;elementname&lt;/i&gt;, \%attributes, &lt;i&gt;...subnodes...&lt;/i&gt; ]&lt;/code&gt; . Vea el ejemplo de volcado de &amp;aacute;rbol en la sinopsis, arriba.</target>
        </trans-unit>
        <trans-unit id="6134bc0f6fbba39ed1a9d9da08c6587b9ff61665" translate="yes" xml:space="preserve">
          <source>Every line here (apart from the braces, of course) contains a macro. The first line sets up the function declaration as Perl expects for PP code; line 3 sets up variable declarations for the argument stack and the target, the return value of the operation. Finally, it tries to see if the addition operation is overloaded; if so, the appropriate subroutine is called.</source>
          <target state="translated">Cada línea aquí (aparte de los frenos,por supuesto)contiene una macro.La primera línea establece la declaración de la función como Perl espera para el código PP;la línea 3 establece las declaraciones de las variables para la pila de argumentos y el objetivo,el valor de retorno de la operación.Finalmente,intenta ver si la operación de adición está sobrecargada;si es así,se llama a la subrutina apropiada.</target>
        </trans-unit>
        <trans-unit id="9871a7eb268ef840aca89ae1947284ed4718351a" translate="yes" xml:space="preserve">
          <source>Every line here (apart from the braces, of course) contains a macro. The first line sets up the function declaration as Perl expects for PP code; line 3 sets up variable declarations for the argument stack and the target, the return value of the operation. Line 4 tries to see if the addition operation is overloaded; if so, the appropriate subroutine is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16573fbf6c4df85710f7971d1598380405b3cf7c" translate="yes" xml:space="preserve">
          <source>Every single tool in the chain from this, to &lt;code&gt;ok&lt;/code&gt;, to anything &lt;code&gt;ok&lt;/code&gt; calls needs to increment the &lt;code&gt;$Level&lt;/code&gt; variable. When an error occurs Test::Builder will do a trace to the stack frame determined by &lt;code&gt;$Level&lt;/code&gt;, and report that file+line as the one where the error occurred. If you or any other tool you use forgets to set &lt;code&gt;$Level&lt;/code&gt; then errors will be reported to the wrong place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07a9740c8c1d7a3f895cbb42b5e873e7ccb12fd" translate="yes" xml:space="preserve">
          <source>Every source stream is associated with only one file.</source>
          <target state="translated">Cada flujo fuente está asociado a un solo archivo.</target>
        </trans-unit>
        <trans-unit id="5b61ca48fb706399cd7458bb7c44f76e50b97e70" translate="yes" xml:space="preserve">
          <source>Every text node in the tree is represented by a simple (non-ref) string scalar. So you can test &lt;code&gt;&lt;a href=&quot;../../functions/ref&quot;&gt;ref($node)&lt;/a&gt;&lt;/code&gt; to see whether you have an element node or just a text node.</source>
          <target state="translated">Cada nodo de texto en el &amp;aacute;rbol est&amp;aacute; representado por un escalar de cadena simple (no ref). Por lo tanto, puede probar &lt;code&gt;&lt;a href=&quot;../../functions/ref&quot;&gt;ref($node)&lt;/a&gt;&lt;/code&gt; para ver si tiene un nodo de elemento o solo un nodo de texto.</target>
        </trans-unit>
        <trans-unit id="4b4dd92417b29f82a4df6cf833806102b2032c12" translate="yes" xml:space="preserve">
          <source>Every text node in the tree is represented by a simple (non-ref) string scalar. So you can test &lt;code&gt;ref($node)&lt;/code&gt; to see whether you have an element node or just a text node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f280cfdb5544f17d8056c7b9960291300e70ff8a" translate="yes" xml:space="preserve">
          <source>Every variable type has its own namespace, as do several non-variable identifiers. This means that you can, without fear of conflict, use the same name for a scalar variable, an array, or a hash--or, for that matter, for a filehandle, a directory handle, a subroutine name, a format name, or a label. This means that $foo and @foo are two different variables. It also means that &lt;code&gt;$foo[1]&lt;/code&gt; is a part of @foo, not a part of $foo. This may seem a bit weird, but that's okay, because it is weird.</source>
          <target state="translated">Cada tipo de variable tiene su propio espacio de nombres, al igual que varios identificadores no variables. Esto significa que puede, sin temor a conflictos, usar el mismo nombre para una variable escalar, una matriz o un hash, o, para el caso, para un identificador de archivo, un identificador de directorio, un nombre de subrutina, un nombre de formato, o una etiqueta. Esto significa que $ foo y @foo son dos variables diferentes. Tambi&amp;eacute;n significa que &lt;code&gt;$foo[1]&lt;/code&gt; es parte de @foo, no de $ foo. Esto puede parecer un poco extra&amp;ntilde;o, pero est&amp;aacute; bien, porque es extra&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="c6b180367788582d4ac065b82e10c88a1c69b113" translate="yes" xml:space="preserve">
          <source>Every version of perl has some number of features present but considered &quot;experimental.&quot; For much of the life of Perl 5, this was only a designation found in the documentation. Starting in Perl v5.10.0, and more aggressively in v5.18.0, experimental features were placed behind pragmata used to enable the feature and disable associated warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a304f3d76dc1d9d113e9e43b3de43a63253440" translate="yes" xml:space="preserve">
          <source>Everyone needs compound data structures, and in Perl the way you get them is with references. There are four important rules for managing references: Two for making references and two for using them. Once you know these rules you can do most of the important things you need to do with references.</source>
          <target state="translated">Todo el mundo necesita estructuras de datos compuestas,y en Perl la forma de conseguirlas es con referencias.Hay cuatro reglas importantes para manejar las referencias:Dos para hacer referencias y dos para usarlas.Una vez que conoces estas reglas puedes hacer la mayoría de las cosas importantes que necesitas hacer con las referencias.</target>
        </trans-unit>
        <trans-unit id="d9f3a853f21ee670feb2d57d64386bb213e70924" translate="yes" xml:space="preserve">
          <source>Everything is exported by default</source>
          <target state="translated">Todo se exporta por defecto</target>
        </trans-unit>
        <trans-unit id="821563e027b1aef4013748dd378d74e1f89659aa" translate="yes" xml:space="preserve">
          <source>Everything that comes with the official</source>
          <target state="translated">Todo lo que viene con el oficial</target>
        </trans-unit>
        <trans-unit id="f760e16023bf894abde8086e9d7f6c930e923eae" translate="yes" xml:space="preserve">
          <source>Evolution</source>
          <target state="translated">Evolution</target>
        </trans-unit>
        <trans-unit id="be9e0b5a60df791db5db8c0c5ce8e708153692fd" translate="yes" xml:space="preserve">
          <source>Exact name value matching means you have to specify case, hyphens, underscores, and spaces precisely in the name you want. Loose matching follows the Unicode rules &lt;a href=&quot;https://www.unicode.org/reports/tr44/tr44-24.html#UAX44-LM2&quot;&gt;https://www.unicode.org/reports/tr44/tr44-24.html#UAX44-LM2&lt;/a&gt;, where these are mostly irrelevant. Except for a few outlier character names, these are the same rules as are already used for any other &lt;code&gt;\p{...}&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b6ebbed9d8b46f1eee90eb921f0ea47e548b03" translate="yes" xml:space="preserve">
          <source>Exact version of acceptance unclear, but no later than Perl 5.18.</source>
          <target state="translated">La versión exacta de la aceptación no está clara,pero no más tarde de Perl 5.18.</target>
        </trans-unit>
        <trans-unit id="e38657e86225451957dba5ba0d3e55c8be9b8de9" translate="yes" xml:space="preserve">
          <source>Exactly equivalent to &lt;code&gt;Perl_croak(aTHX_ &quot;%s&quot;, PL_no_modify)&lt;/code&gt; , but generates terser object code than using &lt;code&gt;Perl_croak&lt;/code&gt; . Less code used on exception code paths reduces CPU cache pressure.</source>
          <target state="translated">Exactamente equivalente a &lt;code&gt;Perl_croak(aTHX_ &quot;%s&quot;, PL_no_modify)&lt;/code&gt; , pero genera un c&amp;oacute;digo de objeto m&amp;aacute;s terso que usar &lt;code&gt;Perl_croak&lt;/code&gt; . Menos c&amp;oacute;digo utilizado en rutas de c&amp;oacute;digo de excepci&amp;oacute;n reduce la presi&amp;oacute;n de la memoria cach&amp;eacute; de la CPU.</target>
        </trans-unit>
        <trans-unit id="1def74e4170191cc1ecc96e344d4615200db8d79" translate="yes" xml:space="preserve">
          <source>Exactly equivalent to &lt;code&gt;Perl_croak(aTHX_ &quot;%s&quot;, PL_no_modify)&lt;/code&gt;, but generates terser object code than using &lt;code&gt;Perl_croak&lt;/code&gt;. Less code used on exception code paths reduces CPU cache pressure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6053d16ee562b64ba170e6e47fc5857d6aeb0497" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;&quot;gv_fetchmeth_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd790b9a98470795c376e22181e112aefbda6acd" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;&quot;gv_fetchmeth_pvn&quot;&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8b76dc891dae007ee34c3cafc01118a9a75f9f" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="108d410dddfe12b3ba82a3d3c5aded251e31ceaa" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt; , pero toma la cadena de nombre en forma de SV en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="70cd839834c4360be38cc8d256d0d20412f0b989" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;&quot;gv_fetchmeth_pvn_autoload&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11580dd84621e2b64c36cda28026ace99fe93821" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;&quot;gv_fetchmeth_pvn_autoload&quot;&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752e1ac766f2cea599a309e02440f40a97bb8d75" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="a2b3eb60980e277cbebb6619993b224a080d7c7e" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt; , pero toma la cadena de nombre en forma de SV en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="0d559e98d13b3a163a9ac6d26cc159b061a846ce" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;&quot;pad_add_name_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241177ff9d4a9c2896853e85618eb16dd97a70c1" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;&quot;pad_add_name_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca8fa3e370c992adee4f86a24ca37067ce4aaf2" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;&quot;pad_add_name_pvn&quot;&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fed67a8755ba4f29f90415a63203b5925d94458" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="08b5afa04635fafa6b86d20073dca412668556d2" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="2ec05cc4ebe9d68aa94cb00389e8f5276b127226" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#pad_add_name_pvn&quot;&gt;pad_add_name_pvn&lt;/a&gt; , pero toma la cadena de nombre en forma de SV en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="721fb60df3440b2db377705e79d6aa33255046e5" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;&quot;pad_findmy_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858cd1e7a5bd641a77589913581d976a28b686b2" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;&quot;pad_findmy_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c2f18b7b484bc1bcc0d307015d1cb3e5fc9527" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;&quot;pad_findmy_pvn&quot;&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc43c20a7b147a5aa429b8bfb5b2198f1bee606" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="1f5dc14f0356699ed601763f5b30ea66b583f929" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="381384c344ba8cf1c452502a4a84edc8e962e04a" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#pad_findmy_pvn&quot;&gt;pad_findmy_pvn&lt;/a&gt; , pero toma la cadena de nombre en forma de SV en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="18d3309cb57d37bd7fd350ad135bb897c6c3caec" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pv&quot;&gt;&quot;sv_derived_from_pv&quot;&lt;/a&gt;, but doesn't take a &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e2d16336a0ca2ee4b68d73a469a9a7d8cd8bf4" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pv&quot;&gt;sv_derived_from_pv&lt;/a&gt;, but doesn't take a &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#sv_derived_from_pv&quot;&gt;sv_derived_from_pv&lt;/a&gt; , pero no toma un par&amp;aacute;metro de &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b2c74334223dd3188d999503340448a8a7e5fef" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;&quot;sv_derived_from_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba2fef806c19d8e36b1b9aa042130a5d1188a1f" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;&quot;sv_derived_from_pvn&quot;&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair. This is the advised form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca422a64172952765c1b42b368f2ea1d836ab7e" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;sv_derived_from_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;sv_derived_from_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="89c565bb719c5d7bd5d0a569932a9c743f646c23" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;sv_derived_from_pvn&lt;/a&gt;, but takes the name string in the form of an SV instead of a string/length pair.</source>
          <target state="translated">Exactamente como &lt;a href=&quot;#sv_derived_from_pvn&quot;&gt;sv_derived_from_pvn&lt;/a&gt; , pero toma la cadena de nombre en forma de SV en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="f536be833f98474874e14c0022645d10cd4c4708" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;code&gt;XopENTRY(XopENTRY(Perl_custom_op_xop(aTHX_ o), which)&lt;/code&gt; but more efficient. The</source>
          <target state="translated">Exactamente como &lt;code&gt;XopENTRY(XopENTRY(Perl_custom_op_xop(aTHX_ o), which)&lt;/code&gt; pero m&amp;aacute;s eficiente.</target>
        </trans-unit>
        <trans-unit id="ed85a2d94251cb3b70317fcac3c7aa7dfac953f8" translate="yes" xml:space="preserve">
          <source>Exactly like &lt;code&gt;XopENTRY(XopENTRY(Perl_custom_op_xop(aTHX_ o), which)&lt;/code&gt; but more efficient. The &lt;code&gt;which&lt;/code&gt; parameter is identical to &lt;a href=&quot;#XopENTRY&quot;&gt;&quot;XopENTRY&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cb14ad58a1b4462086f211195165ae13adba9c" translate="yes" xml:space="preserve">
          <source>Exactly like C:</source>
          <target state="translated">Exactamente como la C:</target>
        </trans-unit>
        <trans-unit id="7525b0bc0e061494669779471f34623f62998790" translate="yes" xml:space="preserve">
          <source>Exactly what the</source>
          <target state="translated">Exactamente lo que el</target>
        </trans-unit>
        <trans-unit id="738aaf2dccc78981e8b455dca2a194bd2ca3770c" translate="yes" xml:space="preserve">
          <source>Exactly what were the failed locale settings varies. In the above the settings were that the LC_ALL was &quot;En_US&quot; and the LANG had no value. This error means that Perl detected that you and/or your operating system supplier and/or system administrator have set up the so-called locale system but Perl could not use those settings. This was not dead serious, fortunately: there is a &quot;default locale&quot; called &quot;C&quot; that Perl can and will use, and the script will be run. Before you really fix the problem, however, you will get the same error message each time you run Perl. How to really fix the problem can be found in &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; section &lt;b&gt;LOCALE PROBLEMS&lt;/b&gt;.</source>
          <target state="translated">Exactamente cu&amp;aacute;l fue la configuraci&amp;oacute;n regional fallida var&amp;iacute;a. En lo anterior, la configuraci&amp;oacute;n era que LC_ALL era &quot;En_US&quot; y LANG no ten&amp;iacute;a ning&amp;uacute;n valor. Este error significa que Perl detect&amp;oacute; que usted y / o su proveedor de sistema operativo y / o administrador del sistema han configurado el llamado sistema local, pero Perl no pudo usar esa configuraci&amp;oacute;n. Afortunadamente, esto no era muy serio: hay una &quot;configuraci&amp;oacute;n regional predeterminada&quot; llamada &quot;C&quot; que Perl puede utilizar y utilizar&amp;aacute;, y se ejecutar&amp;aacute; el script. Sin embargo, antes de solucionar realmente el problema, aparecer&amp;aacute; el mismo mensaje de error cada vez que ejecute Perl. C&amp;oacute;mo solucionar realmente el problema puede encontrarse en &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; secci&amp;oacute;n &lt;b&gt;LOCALE PROBLEMAS&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="d8b6b2bbc7b58a995a5244483a44038c0c9b80cc" translate="yes" xml:space="preserve">
          <source>Examine signals that are blocked and pending. This uses &lt;code&gt;POSIX::SigSet&lt;/code&gt; objects for the &lt;code&gt;sigset&lt;/code&gt; argument. Consult your system's &lt;code&gt;sigpending&lt;/code&gt; manpage for details.</source>
          <target state="translated">Examine las se&amp;ntilde;ales que est&amp;aacute;n bloqueadas y pendientes. Esto usa objetos &lt;code&gt;POSIX::SigSet&lt;/code&gt; para el argumento &lt;code&gt;sigset&lt;/code&gt; . Consulte la p&amp;aacute;gina de &lt;code&gt;sigpending&lt;/code&gt; pendiente de su sistema para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="9cc359cbd82e941e0ce6d56fc00bde6962483e78" translate="yes" xml:space="preserve">
          <source>Examines an op, which is expected to identify a subroutine at runtime, and attempts to determine at compile time which subroutine it identifies. This is normally used during Perl compilation to determine whether a prototype can be applied to a function call.</source>
          <target state="translated">Examina una operación,que se espera que identifique una subrutina en tiempo de ejecución,e intenta determinar en tiempo de compilación qué subrutina identifica.Normalmente se utiliza durante la compilación de Perl para determinar si un prototipo puede aplicarse a una llamada de función.</target>
        </trans-unit>
        <trans-unit id="2816ec163840831fe4101935d11468555274d9b0" translate="yes" xml:space="preserve">
          <source>Examines an op, which is expected to identify a subroutine at runtime, and attempts to determine at compile time which subroutine it identifies. This is normally used during Perl compilation to determine whether a prototype can be applied to a function call. &lt;code&gt;cvop&lt;/code&gt; is the op being considered, normally an &lt;code&gt;rv2cv&lt;/code&gt; op. A pointer to the identified subroutine is returned, if it could be determined statically, and a null pointer is returned if it was not possible to determine statically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce88b50818f0436a7682c61cd164aaafa21bdd4b" translate="yes" xml:space="preserve">
          <source>Examines the value of EXPR, expecting it to be a reference, and returns a string giving information about the reference and the type of referent. If EXPR is not specified, &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21009b11f09e3868b5cd364062bd16a01cd87baf" translate="yes" xml:space="preserve">
          <source>Examining internal data structures with the &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; functions</source>
          <target state="translated">Examinar las estructuras de datos internas con las funciones de &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f9b5ae7207832dd1764b8c81e77154d27039133" translate="yes" xml:space="preserve">
          <source>Examining internal data structures with the &lt;code&gt;dump&lt;/code&gt; functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9d648412ff129c07a7aa241744818aaa63c13b" translate="yes" xml:space="preserve">
          <source>Examining internal data structures with the dump functions</source>
          <target state="translated">Examinar las estructuras de datos internos con las funciones de volcado</target>
        </trans-unit>
        <trans-unit id="f25587ebeed31098679dd0a945296052447509f8" translate="yes" xml:space="preserve">
          <source>Examining the tree</source>
          <target state="translated">Examinando el árbol</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="3ee687a4836f2979219916954f4addd8522f2875" translate="yes" xml:space="preserve">
          <source>Example - a Hexadecimal Handle</source>
          <target state="translated">Ejemplo-un mango hexadecimal</target>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">Ejemplo 1</target>
        </trans-unit>
        <trans-unit id="d64751054e2d27b855282a556af039128d434ede" translate="yes" xml:space="preserve">
          <source>Example 1: A simple filter.</source>
          <target state="translated">Ejemplo 1:Un filtro simple.</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">Ejemplo 2</target>
        </trans-unit>
        <trans-unit id="c9ff53c2379b7cde740f23e7a5efd8af7e83e70f" translate="yes" xml:space="preserve">
          <source>Example 2: Using the context</source>
          <target state="translated">Ejemplo 2:Usando el contexto</target>
        </trans-unit>
        <trans-unit id="fbf4dab701189a344fa5ab06d7b87c11a74e3da0" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fa8f292e6f2e8759c24edf270a2f53c96a1766" translate="yes" xml:space="preserve">
          <source>Example 3: Using the context within the filter</source>
          <target state="translated">Ejemplo 3:Usando el contexto dentro del filtro</target>
        </trans-unit>
        <trans-unit id="39e8f452734bc5ce3b169811da6ab1984a676dbf" translate="yes" xml:space="preserve">
          <source>Example 4: Using filter_del</source>
          <target state="translated">Ejemplo 4:Uso de filter_del</target>
        </trans-unit>
        <trans-unit id="82dd29f8b1cca5a0b9d8a8b5b47aff607b15559f" translate="yes" xml:space="preserve">
          <source>Example Distroprefs Files</source>
          <target state="translated">Ejemplo de archivos de Distroprefs</target>
        </trans-unit>
        <trans-unit id="1a2aefe8979aba9b8da50d2227d60de10fe393b6" translate="yes" xml:space="preserve">
          <source>Example corrected to show map of maps instead of list of maps (though descriptive text said 'map' even in v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1479866f8111c0730b394a4d0e54b9686736ec4" translate="yes" xml:space="preserve">
          <source>Example hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c67a372e04bf6d9b9e0054bc94bbe354f79d761" translate="yes" xml:space="preserve">
          <source>Example implementation might be:</source>
          <target state="translated">Un ejemplo de aplicación podría ser:</target>
        </trans-unit>
        <trans-unit id="65cdc590a56f144422e8ab9d8551b4654f6b8393" translate="yes" xml:space="preserve">
          <source>Example of use of &lt;code&gt;%m&lt;/code&gt; :</source>
          <target state="translated">Ejemplo de uso de &lt;code&gt;%m&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1e6115c04f6e10d5d5d6b87e30e1b6023acf08e4" translate="yes" xml:space="preserve">
          <source>Example of use of &lt;code&gt;%m&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec471d84b36457f0d9d75c03377c9e3cd5f3de93" translate="yes" xml:space="preserve">
          <source>Example of use:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="ea87c9b65b6478fdd7882c8529d632b267f39539" translate="yes" xml:space="preserve">
          <source>Example similar to MAN1PODS.</source>
          <target state="translated">Ejemplo similar a MAN1PODS.</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="6f46925524d1c01021e97594cd0f9813ff23d01d" translate="yes" xml:space="preserve">
          <source>Example wrapper function, using a custom stacktrace:</source>
          <target state="translated">Ejemplo de función de envoltura,usando un stacktrace personalizado:</target>
        </trans-unit>
        <trans-unit id="917f746ede8d074c95df4b99d59d955a898465de" translate="yes" xml:space="preserve">
          <source>Example, convert all JSON objects into the integer 5:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a0b26277d048bcac5dd947ecabce4cb52276c3" translate="yes" xml:space="preserve">
          <source>Example, decode JSON objects of the form &lt;code&gt;{ &quot;__widget__&quot; =&amp;gt; &amp;lt;id&amp;gt; }&lt;/code&gt; into the corresponding &lt;code&gt;$WIDGET{&amp;lt;id&amp;gt;}&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7278e6c050b8c04dedcbda9af1550657a42fb4fe" translate="yes" xml:space="preserve">
          <source>Example, decode UTF-32LE-encoded JSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdc025886948570c6fbbadab1e6327c7c909d59" translate="yes" xml:space="preserve">
          <source>Example, encode a Perl scalar as JSON value without enabled &lt;code&gt;allow_nonref&lt;/code&gt;, resulting in an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed5be0c52bbf20defd0c9e845ecf60ed4c32045" translate="yes" xml:space="preserve">
          <source>Example, output UTF-16BE-encoded JSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70eed4e935f1e0e0b91352974e074471d01f2095" translate="yes" xml:space="preserve">
          <source>Example, space_before and indent disabled, space_after enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78e4fad7b27510e9dff599bdcd34d99787fce83" translate="yes" xml:space="preserve">
          <source>Example, space_before enabled, space_after and indent disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21504e5520a63c06708e793261e7989f6e598670" translate="yes" xml:space="preserve">
          <source>Example.pm</source>
          <target state="translated">Example.pm</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="2f9aab2ce8a7f69580f3ffba5062983af60212df" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;0.16&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1b656e9d62a39986b515e970fb598d7c6a0a28" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d065a1b59988aa6c329900c3cada65931aeef53b" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Module-Build&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723a51aade7b3dfa260aa71d4fea09d109817345" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Module::Build version 0.16&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb81d7d81b9c7defbedc3997e69a4b739f84df6" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;module&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118e06607524b497bf1e00dd9542fcda25763c44" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;perl&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad6ecdc1416c4a99a21cafbb2b565e4a7ce52ac" translate="yes" xml:space="preserve">
          <source>Example: Altering Concise Renderings</source>
          <target state="translated">Ejemplo:Alteración de representaciones concisas</target>
        </trans-unit>
        <trans-unit id="e9234fbd94650af302f3c53c866ca9eab6d98b89" translate="yes" xml:space="preserve">
          <source>Example: At the command prompt Type &quot;nmake nwinstall&quot;. This will install NetWare Perl on the NetWare Server. Similarly, if you type &quot;nmake install&quot;, this will cause the binaries to be installed on the local machine. (Typically under the c:\perl folder)</source>
          <target state="translated">Ejemplo:En el símbolo del sistema escriba &quot;nmake nwinstall&quot;.Esto instalará NetWare Perl en el servidor NetWare.Del mismo modo,si escribe &quot;nmake install&quot;,esto hará que los binarios se instalen en la máquina local.(Normalmente en la carpeta c:\perl)</target>
        </trans-unit>
        <trans-unit id="24e5d3a101404316459c21180a1f55d046da675c" translate="yes" xml:space="preserve">
          <source>Example: Encode::ROT13</source>
          <target state="translated">Ejemplo:Codifica::ROT13</target>
        </trans-unit>
        <trans-unit id="d0830c89a9652382868513b8862db0a3cc84254e" translate="yes" xml:space="preserve">
          <source>Example: Parse some JSON arrays/objects in a given string and return them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0721ccbd9aaee85c90df176a3976ea110912494f" translate="yes" xml:space="preserve">
          <source>Example: The following code</source>
          <target state="translated">Ejemplo:El siguiente código</target>
        </trans-unit>
        <trans-unit id="57772da1cf0c7d363a78ec1c7ba403554cdf5105" translate="yes" xml:space="preserve">
          <source>Example: You can execute the following on the command prompt.</source>
          <target state="translated">Ejemplo:Puede ejecutar lo siguiente en la línea de comandos.</target>
        </trans-unit>
        <trans-unit id="f2749017763b820ec8a5aab014519f7d7e9831d5" translate="yes" xml:space="preserve">
          <source>Example: base64 transcoder</source>
          <target state="translated">Ejemplo:transcodificador base64</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="1d7dd2b19077ebadaa57d2f6ba2c64d87037ae05" translate="yes" xml:space="preserve">
          <source>Examples (assuming an ASCII platform)</source>
          <target state="translated">Ejemplos (suponiendo una plataforma ASCII)</target>
        </trans-unit>
        <trans-unit id="47370b8eea1efa5172e76cf237bd26e7f736ebd6" translate="yes" xml:space="preserve">
          <source>Examples for converting:</source>
          <target state="translated">Ejemplos de conversión:</target>
        </trans-unit>
        <trans-unit id="386c7abd2323831ffe2716ae79487fcd14a21d5e" translate="yes" xml:space="preserve">
          <source>Examples for rounding:</source>
          <target state="translated">Ejemplos de redondeo:</target>
        </trans-unit>
        <trans-unit id="49d15bdd087c216bc7ae6d4ea03d99c8cec52e40" translate="yes" xml:space="preserve">
          <source>Examples in documentation should be illustrative of the concept they're explaining. Sometimes, the best way to show how a language feature works is with a small program the reader can run without modification. More often, examples will consist of a snippet of code containing only the &quot;important&quot; bits. The definition of &quot;important&quot; varies from snippet to snippet. Sometimes it's important to declare &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , initialize all variables and fully catch every error condition. More often than not, though, those things obscure the lesson the example was intended to teach.</source>
          <target state="translated">Los ejemplos en la documentaci&amp;oacute;n deben ser ilustrativos del concepto que est&amp;aacute;n explicando. A veces, la mejor manera de mostrar c&amp;oacute;mo funciona una caracter&amp;iacute;stica de idioma es con un peque&amp;ntilde;o programa que el lector puede ejecutar sin modificaciones. M&amp;aacute;s a menudo, los ejemplos consistir&amp;aacute;n en un fragmento de c&amp;oacute;digo que contiene solo los bits &quot;importantes&quot;. La definici&amp;oacute;n de &quot;importante&quot; var&amp;iacute;a de un fragmento a otro. A veces es importante declarar el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , inicializar todas las variables y detectar completamente todas las condiciones de error. Sin embargo, la mayor&amp;iacute;a de las veces, esas cosas oscurecen la lecci&amp;oacute;n que el ejemplo estaba destinado a ense&amp;ntilde;ar.</target>
        </trans-unit>
        <trans-unit id="d11119ca6453ac0e54148249adca86e00f07f1e8" translate="yes" xml:space="preserve">
          <source>Examples in documentation should be illustrative of the concept they're explaining. Sometimes, the best way to show how a language feature works is with a small program the reader can run without modification. More often, examples will consist of a snippet of code containing only the &quot;important&quot; bits. The definition of &quot;important&quot; varies from snippet to snippet. Sometimes it's important to declare &lt;code&gt;use strict&lt;/code&gt; and &lt;code&gt;use warnings&lt;/code&gt;, initialize all variables and fully catch every error condition. More often than not, though, those things obscure the lesson the example was intended to teach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a591376177b86768f6394133fb691d5a829d17d6" translate="yes" xml:space="preserve">
          <source>Examples of invalid syntax:</source>
          <target state="translated">Ejemplos de sintaxis inválida:</target>
        </trans-unit>
        <trans-unit id="0d4621bd6639238b0ab788dd2cc321e39c7fc192" translate="yes" xml:space="preserve">
          <source>Examples of legal names are '$foo' for a scalar, '@foo' for an array, '%foo' for a hash, '&amp;amp;foo' or 'foo' for a subroutine and '*foo' for a glob (i.e. all symbol table entries associated with &quot;foo&quot;, including scalar, array, hash, sub and filehandle).</source>
          <target state="translated">Ejemplos de nombres legales son '$ foo' para un escalar, '@foo' para una matriz, '% foo' para un hash, '&amp;amp; foo' o 'foo' para una subrutina y '* foo' para un glob (es decir, todos entradas de la tabla de s&amp;iacute;mbolos asociadas con &quot;foo&quot;, incluidos escalar, matriz, hash, sub y filehandle).</target>
        </trans-unit>
        <trans-unit id="d7c5ae33ac348a4d6e7614da1b0d7da380e1b269" translate="yes" xml:space="preserve">
          <source>Examples of use</source>
          <target state="translated">Ejemplos de uso</target>
        </trans-unit>
        <trans-unit id="1a5dea85313337dc5454525e91430329e3b9eb0f" translate="yes" xml:space="preserve">
          <source>Examples of valid syntax (even though the attributes are unknown):</source>
          <target state="translated">Ejemplos de sintaxis válida (aunque se desconozcan los atributos):</target>
        </trans-unit>
        <trans-unit id="45b39bd436c5d9cd8f4ca9dd2c7eb59c66eb58b2" translate="yes" xml:space="preserve">
          <source>Examples section another documentation provided by John Heidemann &amp;lt;johnh@ISI.EDU&amp;gt;</source>
          <target state="translated">Secci&amp;oacute;n de ejemplos otra documentaci&amp;oacute;n proporcionada por John Heidemann &amp;lt;johnh@ISI.EDU&amp;gt;</target>
        </trans-unit>
        <trans-unit id="628a5608e1a43ca4bfb86500d847d49e2edd6c80" translate="yes" xml:space="preserve">
          <source>Examples where callbacks are necessary include</source>
          <target state="translated">Entre los ejemplos en los que es necesario devolver la llamada se incluyen</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="f98a53c84b8d27c6aba2afa49d1eb4984f22de98" translate="yes" xml:space="preserve">
          <source>Examples: &quot;[_1]&quot; and &quot;[,_1]&quot;, which are synonymous; and &quot;&lt;code&gt;[,ID-(,_4,-,_2,)]&lt;/code&gt; &quot;, which compiles as &lt;code&gt;&lt;a href=&quot;../functions/join&quot;&gt;join&lt;/a&gt; &quot;&quot;, &quot;ID-(&quot;, $_[4], &quot;-&quot;, $_[2], &quot;)&quot;&lt;/code&gt; .</source>
          <target state="translated">Ejemplos: &quot;[_1]&quot; y &quot;[, _1]&quot;, que son sin&amp;oacute;nimos; y &quot; &lt;code&gt;[,ID-(,_4,-,_2,)]&lt;/code&gt; &quot;, que se compila como &lt;code&gt;&lt;a href=&quot;../functions/join&quot;&gt;join&lt;/a&gt; &quot;&quot;, &quot;ID-(&quot;, $_[4], &quot;-&quot;, $_[2], &quot;)&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0be9a5482bf17e8c5fe99a02aec7a8cea84f74f4" translate="yes" xml:space="preserve">
          <source>Examples: &quot;[_1]&quot; and &quot;[,_1]&quot;, which are synonymous; and &quot;&lt;code&gt;[,ID-(,_4,-,_2,)]&lt;/code&gt;&quot;, which compiles as &lt;code&gt;join &quot;&quot;, &quot;ID-(&quot;, $_[4], &quot;-&quot;, $_[2], &quot;)&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4e742ff692e5060c86af7b99c37b81006ce99b" translate="yes" xml:space="preserve">
          <source>Except &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; , &lt;b&gt;Unicode::Normalize&lt;/b&gt; is required (see also &lt;b&gt;CAVEAT&lt;/b&gt;).</source>
          <target state="translated">Excepto &lt;code&gt;(normalization =&amp;gt; &lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;)&lt;/code&gt; , se requiere &lt;b&gt;Unicode :: Normalizar&lt;/b&gt; (ver tambi&amp;eacute;n &lt;b&gt;CAVEAT&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="750b06c4e20cd4bb5392f789eb453ec81bdf0ee9" translate="yes" xml:space="preserve">
          <source>Except &lt;code&gt;(normalization =&amp;gt; undef)&lt;/code&gt;, &lt;b&gt;Unicode::Normalize&lt;/b&gt; is required (see also &lt;b&gt;CAVEAT&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a44f67c097a553bfa410868c60dd16cabf490e" translate="yes" xml:space="preserve">
          <source>Except being faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7f15d16385003ab5d07150052df64664c66bff" translate="yes" xml:space="preserve">
          <source>Except for &lt;a href=&quot;#The-Basics&quot;&gt;&quot;The Basics&quot;&lt;/a&gt; section, this page assumes you are familiar with regular expression basics, like what is a &quot;pattern&quot;, what does it look like, and how it is basically used. For a reference on how they are used, plus various examples of the same, see discussions of &lt;code&gt;m//&lt;/code&gt;, &lt;code&gt;s///&lt;/code&gt;, &lt;code&gt;qr//&lt;/code&gt; and &lt;code&gt;&quot;??&quot;&lt;/code&gt; in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b1235f5e6dc422681dc01e8714586f7ad38364" translate="yes" xml:space="preserve">
          <source>Except for &lt;code&gt;FILTER_ONLY code =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; {...}&lt;/code&gt; , each of the component filters is called repeatedly, once for each component found in the source code.</source>
          <target state="translated">Excepto para el &lt;code&gt;FILTER_ONLY code =&amp;gt; &lt;a href=&quot;../functions/sub&quot;&gt;sub&lt;/a&gt; {...}&lt;/code&gt; , cada uno de los filtros de componentes se llama repetidamente, una vez por cada componente que se encuentra en el c&amp;oacute;digo fuente.</target>
        </trans-unit>
        <trans-unit id="4893191369665d6053617936c829c46737cadf4b" translate="yes" xml:space="preserve">
          <source>Except for &lt;code&gt;FILTER_ONLY code =&amp;gt; sub {...}&lt;/code&gt;, each of the component filters is called repeatedly, once for each component found in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a10e7180b4b8a76ea58d012850b5f1c4bcb634" translate="yes" xml:space="preserve">
          <source>Except importing the functions, 'autoload' is same as 'load'.</source>
          <target state="translated">Excepto la importación de las funciones,&quot;autocarga&quot; es lo mismo que &quot;carga&quot;.</target>
        </trans-unit>
        <trans-unit id="18f4bd6df6292a6b95734ee2a00973430550afe7" translate="yes" xml:space="preserve">
          <source>Except specifing the package and quoting module name, 'autoload_remote' is same as 'load_remote'.</source>
          <target state="translated">Excepto especificando el paquete y citando el nombre del módulo,&quot;autoload_remote&quot; es lo mismo que &quot;load_remote&quot;.</target>
        </trans-unit>
        <trans-unit id="16e04cb1bb937a46789e35dba24fd14a5feb954d" translate="yes" xml:space="preserve">
          <source>Except specifing the package and quoting module name, 'load_remote' is same as 'load'.</source>
          <target state="translated">Excepto especificando el paquete y citando el nombre del módulo,&quot;load_remote&quot; es lo mismo que &quot;load&quot;.</target>
        </trans-unit>
        <trans-unit id="f55cf6c06e02d10efcfcfb37efbd0c881f531275" translate="yes" xml:space="preserve">
          <source>Excepting those listed above, we're currently unable to guarantee that B::Deparse will produce a pragma at the correct point in the program. (Specifically, pragmas at the beginning of a block often appear right before the start of the block instead.) Since the effects of pragmas are often lexically scoped, this can mean that the pragma holds sway over a different portion of the program than in the input file.</source>
          <target state="translated">Exceptuando los mencionados anteriormente,actualmente no podemos garantizar que B::Deparse produzca un pragmatismo en el punto correcto del programa.(Específicamente,los pragmas al principio de un bloque a menudo aparecen justo antes del comienzo del bloque en su lugar).Dado que los efectos de los pragmas suelen tener un alcance léxico,esto puede significar que la pragma tiene influencia en una parte diferente del programa que en el archivo de entrada.</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">Manejo de excepciones</target>
        </trans-unit>
        <trans-unit id="826f288dbfc038dead10724f69465c1bfe17a68f" translate="yes" xml:space="preserve">
          <source>Exception Handling (simple) Macros</source>
          <target state="translated">Manejo de excepciones (simple)Macros</target>
        </trans-unit>
        <trans-unit id="c63dbeff42b8bdcfbb58c593ff1bf6b1c3d8a3ca" translate="yes" xml:space="preserve">
          <source>Exception class used by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a349dc2d7ddd050d57ee72af0506a4a2b31cc9" translate="yes" xml:space="preserve">
          <source>Exception event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa345b763368fc4f9065828d77e9729e19d258cc" translate="yes" xml:space="preserve">
          <source>Exception handing</source>
          <target state="translated">La entrega de la excepción</target>
        </trans-unit>
        <trans-unit id="3ab46cd93f74baf3da5f557d5f2997aae41ff3b1" translate="yes" xml:space="preserve">
          <source>Exceptions from &lt;code&gt;max_size&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; or other errors will result in a pseudo-HTTP status code of 599 and a reason of &quot;Internal Exception&quot;. The content field in the response will contain the text of the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d504b2a99c5e1f8d7e7350318f686e5cbee7a60e" translate="yes" xml:space="preserve">
          <source>Exceptions from autodying functions.</source>
          <target state="translated">Excepciones de las funciones de muerte automática.</target>
        </trans-unit>
        <trans-unit id="1242bf8dd433a51fa4c19b0e3a208b834c9fc265" translate="yes" xml:space="preserve">
          <source>Exceptions from autodying system().</source>
          <target state="translated">Excepciones del sistema de muerte automática.</target>
        </trans-unit>
        <trans-unit id="48741c44a476b90391e45eac22eeaa9b0d399fee" translate="yes" xml:space="preserve">
          <source>Exceptions produced by the &lt;code&gt;autodie&lt;/code&gt; pragma are members of the &lt;a href=&quot;autodie/exception&quot;&gt;autodie::exception&lt;/a&gt; class. The preferred way to work with these exceptions under Perl 5.10 is as follows:</source>
          <target state="translated">Las excepciones producidas por &lt;code&gt;autodie&lt;/code&gt; pragma son miembros de la clase &lt;a href=&quot;autodie/exception&quot;&gt;autodie :: exception&lt;/a&gt; . La forma preferida de trabajar con estas excepciones en Perl 5.10 es la siguiente:</target>
        </trans-unit>
        <trans-unit id="53d59c8491a17793e5a74a9328b1458c0ce10dc9" translate="yes" xml:space="preserve">
          <source>Exceptions produced by the &lt;code&gt;autodie&lt;/code&gt; pragma are members of the &lt;a href=&quot;autodie::exception&quot;&gt;autodie::exception&lt;/a&gt; class. The preferred way to work with these exceptions under Perl 5.10 is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5986414d0fc4bb9c4ee5d8198af90a5eb243568c" translate="yes" xml:space="preserve">
          <source>Exceptions, error return codes, exit statuses, and errno settings. Typically used for function or module documentation; program documentation uses DIAGNOSTICS instead. The general rule of thumb is that errors printed to &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;STDERR&lt;/code&gt; and intended for the end user are documented in DIAGNOSTICS while errors passed internal to the calling program and intended for other programmers are documented in ERRORS. When documenting a function that sets errno, a full list of the possible errno values should be given here.</source>
          <target state="translated">Excepciones, c&amp;oacute;digos de retorno de error, estados de salida y configuraci&amp;oacute;n de errno. Normalmente se utiliza para la documentaci&amp;oacute;n de funciones o m&amp;oacute;dulos; La documentaci&amp;oacute;n del programa utiliza DIAGN&amp;Oacute;STICO en su lugar. La regla general es que los errores impresos en &lt;code&gt;STDOUT&lt;/code&gt; o &lt;code&gt;STDERR&lt;/code&gt; y destinados al usuario final se documentan en DIAGN&amp;Oacute;STICO, mientras que los errores pasados ​​internamente al programa de llamada y destinados a otros programadores se documentan en ERRORES. Al documentar una funci&amp;oacute;n que establece errno, aqu&amp;iacute; se debe proporcionar una lista completa de los posibles valores de errno.</target>
        </trans-unit>
        <trans-unit id="3e8ef9fa750a38a235f6f5db2c10f6d27bcf66b2" translate="yes" xml:space="preserve">
          <source>Excessive pride, the sort of thing for which Zeus zaps you. Also the quality that makes you write (and maintain) programs that other people won&amp;rsquo;t want to say bad things about. Hence, the third great virtue of a programmer. See also &lt;b&gt;laziness&lt;/b&gt; and &lt;b&gt;impatience&lt;/b&gt;.</source>
          <target state="translated">Orgullo excesivo, el tipo de cosas por las que Zeus te golpea. Tambi&amp;eacute;n la calidad que te hace escribir (y mantener) programas de los que otras personas no querr&amp;aacute;n decir cosas malas. De ah&amp;iacute; la tercera gran virtud de un programador. V&amp;eacute;ase tambi&amp;eacute;n &lt;b&gt;pereza&lt;/b&gt; e &lt;b&gt;impaciencia&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="a5d912f09e4af174aa651a0745dc7cd68fcf8fd2" translate="yes" xml:space="preserve">
          <source>Excessively long &amp;lt;&amp;gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff53c1a7c6e7525075531f3d6b8357745fac262" translate="yes" xml:space="preserve">
          <source>Exchanging signed integers between different platforms works only when all platforms store them in the same format. Most platforms store signed integers in two's-complement notation, so usually this is not an issue.</source>
          <target state="translated">El intercambio de números enteros firmados entre diferentes plataformas funciona sólo cuando todas las plataformas los almacenan en el mismo formato.La mayoría de las plataformas almacenan los números enteros firmados en notación de dos-complementos,así que normalmente esto no es un problema.</target>
        </trans-unit>
        <trans-unit id="6d598c708e755dc53aa35c070da1bc37864ef85e" translate="yes" xml:space="preserve">
          <source>Exclude the given routine and its descendants from the profile.</source>
          <target state="translated">Excluir la rutina dada y sus descendientes del perfil.</target>
        </trans-unit>
        <trans-unit id="712815e07d58e914b686a30fadb75309ce36dd4f" translate="yes" xml:space="preserve">
          <source>Excommunicated</source>
          <target state="translated">Excommunicated</target>
        </trans-unit>
        <trans-unit id="ce52f407fe57f7ce5f94a6ed1047c07eafabc89f" translate="yes" xml:space="preserve">
          <source>Executables for Perl utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8a72f8f7694a401a32218abd4406ae1d283fcc" translate="yes" xml:space="preserve">
          <source>Executables for gzip, zip, and VMStar:</source>
          <target state="translated">Ejecutables para gzip,zip y VMStar:</target>
        </trans-unit>
        <trans-unit id="58de6b665842567beab85d292c3b5870de1c65ae" translate="yes" xml:space="preserve">
          <source>Execute a regexp. The arguments are</source>
          <target state="translated">Ejecutar un regexp.Los argumentos son</target>
        </trans-unit>
        <trans-unit id="bac595ee7bf88de92060cce1abba1b3d844e6519" translate="yes" xml:space="preserve">
          <source>Execute command as a Perl statement. A trailing semicolon will be supplied. If the Perl statement would otherwise be confused for a Perl debugger, use a leading semicolon, too.</source>
          <target state="translated">Ejecutar el comando como una declaración Perl.Se suministrará un punto y coma de seguimiento.Si la declaración Perl se confunde con un depurador Perl,use también un punto y coma inicial.</target>
        </trans-unit>
        <trans-unit id="ec1ff77553768eb52e9d8af54796c7b0bfee25e2" translate="yes" xml:space="preserve">
          <source>Execute related options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45a9d6764cd8a4584e5070807ab16a657d631e8" translate="yes" xml:space="preserve">
          <source>Execute the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c456233f2824914a52bfceba7c1ea3f220aec8f" translate="yes" xml:space="preserve">
          <source>Execute the given C code and print its results. &lt;b&gt;WARNING&lt;/b&gt;: Perl makes heavy use of macros, and</source>
          <target state="translated">Ejecute el c&amp;oacute;digo C dado e imprima sus resultados. &lt;b&gt;ADVERTENCIA&lt;/b&gt; : Perl hace un uso intensivo de macros y</target>
        </trans-unit>
        <trans-unit id="9ac88dd7c0b19c435fb63cfe3bac19cbfc350e4d" translate="yes" xml:space="preserve">
          <source>Execute the provided install script from shell or via its icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061e9bcfa95dc9f2f39332fda78eedc474b39569" translate="yes" xml:space="preserve">
          <source>Execute this statement for a hint about where to find CORE:</source>
          <target state="translated">Ejecute esta declaración para obtener una pista sobre dónde encontrar el núcleo:</target>
        </trans-unit>
        <trans-unit id="a79b5094cc2990d328a2ac30ea62e13817dec0a0" translate="yes" xml:space="preserve">
          <source>Executes a &lt;code&gt;GET&lt;/code&gt; request for the URL and saves the response body to the file name provided. The URL must have unsafe characters escaped and international domain names encoded. If the file already exists, the request will include an &lt;code&gt;If-Modified-Since&lt;/code&gt; header with the modification timestamp of the file. You may specify a different &lt;code&gt;If-Modified-Since&lt;/code&gt; header yourself in the &lt;code&gt;$options-&amp;gt;{headers}&lt;/code&gt; hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aff22989bc6aeac5d6cd7864aab55a4f7fed20" translate="yes" xml:space="preserve">
          <source>Executes an HTTP request of the given method type ('GET', 'HEAD', 'POST', 'PUT', etc.) on the given URL. The URL must have unsafe characters escaped and international domain names encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574f52d839fd11f8f8f4c4d0ddacf0528556159a" translate="yes" xml:space="preserve">
          <source>Executing a postponed regular expression 50 times without consuming any input string will result in a fatal error. The maximum depth is compiled into perl, so changing it requires a custom build.</source>
          <target state="translated">Ejecutar una expresión regular aplazada 50 veces sin consumir ninguna cadena de entrada dará como resultado un error fatal.La profundidad máxima está compilada en perl,así que cambiarla requiere una construcción personalizada.</target>
        </trans-unit>
        <trans-unit id="92a60b45df076860f644e5d058a8c446b0d5be54" translate="yes" xml:space="preserve">
          <source>Executing a postponed regular expression too many times without consuming any input string will also result in a fatal error. The depth at which that happens is compiled into perl, so it can be changed with a custom build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d525b71568c2d982f46feb96b332bedcdc6e4a0" translate="yes" xml:space="preserve">
          <source>Execution</source>
          <target state="translated">Execution</target>
        </trans-unit>
        <trans-unit id="13709dfa0128b531e84d0b60f2a2419c6bf04dbf" translate="yes" xml:space="preserve">
          <source>Execution of END blocks</source>
          <target state="translated">Ejecución de los bloques END</target>
        </trans-unit>
        <trans-unit id="675e718a6b33ba2b7929f770db612d9a80f9b87e" translate="yes" xml:space="preserve">
          <source>Execution of a regex generally involves two phases, the first being finding the start point in the string where we should match from, and the second being running the regop interpreter.</source>
          <target state="translated">La ejecución de un regex generalmente implica dos fases,la primera es encontrar el punto de inicio en la cuerda desde donde debemos coincidir,y la segunda es ejecutar el intérprete de regop.</target>
        </trans-unit>
        <trans-unit id="119f08e3cf8da3d7fe34ab1131df979eb14179b1" translate="yes" xml:space="preserve">
          <source>Execution of any &lt;code&gt;CHECK&lt;/code&gt; blocks.</source>
          <target state="translated">Ejecuci&amp;oacute;n de cualquier bloque &lt;code&gt;CHECK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0603019ab35ef11320acde0ed06d6533404cfee9" translate="yes" xml:space="preserve">
          <source>Execution of any &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="translated">Ejecuci&amp;oacute;n de cualquier bloque &lt;code&gt;END&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4f82800233d6c7223698c2e187aa3ccc7d2dc01" translate="yes" xml:space="preserve">
          <source>Execution of the interpreter itself used to be recursive, but thanks to the efforts of Dave Mitchell in the 5.9.x development track, that has changed: now an internal stack is maintained on the heap and the routine is fully iterative. This can make it tricky as the code is quite conservative about what state it stores, with the result that two consecutive lines in the code can actually be running in totally different contexts due to the simulated recursion.</source>
          <target state="translated">La ejecución del intérprete en sí solía ser recursiva,pero gracias a los esfuerzos de Dave Mitchell en la pista de desarrollo del 5.9.x,eso ha cambiado:ahora se mantiene una pila interna en el montón y la rutina es totalmente iterativa.Esto puede ser complicado ya que el código es bastante conservador sobre el estado que almacena,con el resultado de que dos líneas consecutivas en el código pueden estar ejecutándose en contextos totalmente diferentes debido a la recursividad simulada.</target>
        </trans-unit>
        <trans-unit id="4e9f10726faddb4d512801b20f95c6f56436cea8" translate="yes" xml:space="preserve">
          <source>Exercises the C function of the same name in scalar context. Returns the same SV that the C function returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc06ef2194671cce285095b6f928f8f2f608822" translate="yes" xml:space="preserve">
          <source>Exercises the C function of the same name. Returns nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248b9fcc2702356b63c40509208ebb73f559ce07" translate="yes" xml:space="preserve">
          <source>Exhaustive information on the topic of references can be found in &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;, &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;, &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; and &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt;.</source>
          <target state="translated">Se puede encontrar informaci&amp;oacute;n exhaustiva sobre el tema de las referencias en &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt; , &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; , &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; y &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76b5089ada110a0136449f09bf11c2275168e2c5" translate="yes" xml:space="preserve">
          <source>Existing 32 bit apps are properly known as LP32, i.e. Longs and Pointers are 32 bit. 64-bit apps are more properly known as LP64. The discriminating feature of a LP64 bit app is its ability to utilise a 64-bit address space. It is perfectly possible to have a LP32 bit app that supports both 64-bit integers (long long) and largefiles (&amp;gt; 2GB), and this is the default for perl-5.6.0.</source>
          <target state="translated">Las aplicaciones de 32 bits existentes se conocen correctamente como LP32, es decir, Longs y Pointers son de 32 bits. Las aplicaciones de 64 bits se conocen mejor como LP64. La caracter&amp;iacute;stica de discriminaci&amp;oacute;n de una aplicaci&amp;oacute;n LP64 bit es su capacidad para utilizar un espacio de direcciones de 64 bits. Es perfectamente posible tener una aplicaci&amp;oacute;n LP32 bit que admita enteros de 64 bits (long long) y largefiles (&amp;gt; 2GB), y este es el valor predeterminado para perl-5.6.0.</target>
        </trans-unit>
        <trans-unit id="3ce132dcaab82a474dd839ab951c3eef1631d645" translate="yes" xml:space="preserve">
          <source>Existing syntax and semantics should only be marked for destruction in very limited circumstances. If they are believed to be very rarely used, stand in the way of actual improvement to the Perl language or perl interpreter, and if affected code can be easily updated to continue working, they may be considered for removal. When in doubt, caution dictates that we will favor backward compatibility. When a feature is deprecated, a statement of reasoning describing the decision process will be posted, and a link to it will be provided in the relevant perldelta documents.</source>
          <target state="translated">La sintaxis y la semántica existentes sólo deben marcarse para su destrucción en circunstancias muy limitadas.Si se cree que se utilizan muy raramente,obstaculizan la mejora real del idioma o del intérprete de perl,y si el código afectado puede actualizarse fácilmente para seguir funcionando,puede considerarse su eliminación.En caso de duda,la precaución dicta que favoreceremos la compatibilidad retroactiva.Cuando una característica es desaprobada,se publicará una declaración de razonamiento que describa el proceso de decisión,y se proporcionará un enlace a ella en los documentos perldelta pertinentes.</target>
        </trans-unit>
        <trans-unit id="6d9d19533b0fbf724f69a3d7a99a413b54990645" translate="yes" xml:space="preserve">
          <source>Exit Code</source>
          <target state="translated">Código de salida</target>
        </trans-unit>
        <trans-unit id="45d746a8ea75007a4818f4a9a13d84ba46bc8da2" translate="yes" xml:space="preserve">
          <source>Exiting eval via %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc760fc51ed4d60f1f58db324e3b3ab5637ff7f6" translate="yes" xml:space="preserve">
          <source>Exiting format via %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6b6283c09f2fd4cd4d37232a60ec674d66805a" translate="yes" xml:space="preserve">
          <source>Exiting pseudo-block via %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a99dd93f7907c63d9f314a53349298ea450b60" translate="yes" xml:space="preserve">
          <source>Exiting subroutine via %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedf12ff192cfbfe7957d4a6c26105640adbff0b" translate="yes" xml:space="preserve">
          <source>Exiting substitution via %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71626cd31b069ac3980d7ed6a6abb80f71225a3" translate="yes" xml:space="preserve">
          <source>Exits</source>
          <target state="translated">Exits</target>
        </trans-unit>
        <trans-unit id="bc031d65eaef8ccada69a0c994a430a53a41354d" translate="yes" xml:space="preserve">
          <source>Exotic Templates</source>
          <target state="translated">Plantillas exóticas</target>
        </trans-unit>
        <trans-unit id="2c6c990ee216fb59d7ad72ee8d28ebcceeb5a21e" translate="yes" xml:space="preserve">
          <source>Expand and unexpand tabs like unix expand(1) and unexpand(1)</source>
          <target state="translated">Las pestañas expandidas y no expandidas como unix expanden(1)y no expanden(1)</target>
        </trans-unit>
        <trans-unit id="2b116400884e9dbc3a5bf5fe94b7d6faa8b0dd38" translate="yes" xml:space="preserve">
          <source>Expand conventional syntax constructions into equivalent ones that expose their internal operation.</source>
          <target state="translated">Expandir las construcciones sintácticas convencionales en equivalentes que expongan su funcionamiento interno.</target>
        </trans-unit>
        <trans-unit id="a24145087edc62ad61c2e0e0ed9777002b6b1d94" translate="yes" xml:space="preserve">
          <source>Expand double-quoted strings into the corresponding combinations of concatenation, uc, ucfirst, lc, lcfirst, quotemeta, and join. For instance, print</source>
          <target state="translated">Expandir las cadenas de doble cita en las correspondientes combinaciones de concatenación,uc,ucfirst,lc,lcfirst,quotemeta,y unir.Por ejemplo,imprimir</target>
        </trans-unit>
        <trans-unit id="a3cec9741cec0dca8594001a6d2ea842476ee2ac" translate="yes" xml:space="preserve">
          <source>Expand patterns that start with '~' to user name home directories.</source>
          <target state="translated">Expandir los patrones que empiezan con '~' a los directorios de usuarios.</target>
        </trans-unit>
        <trans-unit id="6b6e1cee8dd20e696133457bd5f5a86ddd470c1e" translate="yes" xml:space="preserve">
          <source>Expanding on these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc5537d5aa41a3bee835484d8a71db89d04af82" translate="yes" xml:space="preserve">
          <source>Expands MM[KS]/Make macros in a text string, using the contents of identically named elements of &lt;code&gt;%$self&lt;/code&gt; , and returns the result as a file specification in Unix syntax.</source>
          <target state="translated">Expande MM [KS] / Make macros en una cadena de texto, utilizando el contenido de elementos con nombres id&amp;eacute;nticos de &lt;code&gt;%$self&lt;/code&gt; , y devuelve el resultado como una especificaci&amp;oacute;n de archivo en sintaxis Unix.</target>
        </trans-unit>
        <trans-unit id="bb3eba70260caae42d2a56d669b04a37e9fa0e09" translate="yes" xml:space="preserve">
          <source>Expands MM[KS]/Make macros in a text string, using the contents of identically named elements of &lt;code&gt;%$self&lt;/code&gt;, and returns the result as a file specification in Unix syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5783f703e4997395da1ed4bfbdfa29354401cb" translate="yes" xml:space="preserve">
          <source>Expands a message, intended for the user, to include an indication of the current location in the code, if the message does not already appear to be complete.</source>
          <target state="translated">Expande un mensaje,destinado al usuario,para incluir una indicación de la ubicación actual en el código,si el mensaje no parece ya completo.</target>
        </trans-unit>
        <trans-unit id="acbbc593d8399af8ae3b5c591c83e4cbee77c103" translate="yes" xml:space="preserve">
          <source>Expands the character buffer in the SV so that it has room for the indicated number of bytes (remember to reserve space for an extra trailing &lt;code&gt;NUL&lt;/code&gt; character). Calls &lt;code&gt;sv_grow&lt;/code&gt; to perform the expansion if necessary. Returns a pointer to the character buffer. SV must be of type &amp;gt;= &lt;code&gt;SVt_PV&lt;/code&gt;. One alternative is to call &lt;code&gt;sv_grow&lt;/code&gt; if you are not sure of the type of SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adde8be1848474c5303345a29bcef52bb4a7e17d" translate="yes" xml:space="preserve">
          <source>Expands the character buffer in the SV so that it has room for the indicated number of bytes (remember to reserve space for an extra trailing &lt;code&gt;NUL&lt;/code&gt; character). Calls &lt;code&gt;sv_grow&lt;/code&gt; to perform the expansion if necessary. Returns a pointer to the character buffer. SV must be of type &amp;gt;= SVt_PV. One alternative is to call &lt;code&gt;sv_grow&lt;/code&gt; if you are not sure of the type of SV.</source>
          <target state="translated">Expande el b&amp;uacute;fer de caracteres en el SV para que tenga espacio para el n&amp;uacute;mero indicado de bytes (recuerde reservar espacio para un car&amp;aacute;cter &lt;code&gt;NUL&lt;/code&gt; final adicional ). Llama a &lt;code&gt;sv_grow&lt;/code&gt; para realizar la expansi&amp;oacute;n si es necesario. Devuelve un puntero al b&amp;uacute;fer de caracteres. SV debe ser de tipo&amp;gt; = SVt_PV. Una alternativa es llamar a &lt;code&gt;sv_grow&lt;/code&gt; si no est&amp;aacute; seguro del tipo de SV.</target>
        </trans-unit>
        <trans-unit id="e07f45c58aaef41c3cc48eff8856e3deb378b3c7" translate="yes" xml:space="preserve">
          <source>Expands the character buffer in the SV. If necessary, uses &lt;code&gt;sv_unref&lt;/code&gt; and upgrades the SV to &lt;code&gt;SVt_PV&lt;/code&gt; . Returns a pointer to the character buffer. Use the &lt;code&gt;SvGROW&lt;/code&gt; wrapper instead.</source>
          <target state="translated">Expande el b&amp;uacute;fer de caracteres en el SV. Si es necesario, usa &lt;code&gt;sv_unref&lt;/code&gt; y actualiza el SV a &lt;code&gt;SVt_PV&lt;/code&gt; . Devuelve un puntero al b&amp;uacute;fer de caracteres. En su lugar, utilice el contenedor &lt;code&gt;SvGROW&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdfec9c6e27c21de38d0ad42245bca4c56a0db95" translate="yes" xml:space="preserve">
          <source>Expands the character buffer in the SV. If necessary, uses &lt;code&gt;sv_unref&lt;/code&gt; and upgrades the SV to &lt;code&gt;SVt_PV&lt;/code&gt;. Returns a pointer to the character buffer. Use the &lt;code&gt;SvGROW&lt;/code&gt; wrapper instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b55719b11400ab3946110ac0b6da5f10e36cb7" translate="yes" xml:space="preserve">
          <source>Expands_On_NFC</source>
          <target state="translated">Expands_On_NFC</target>
        </trans-unit>
        <trans-unit id="6067c08bd93995f39d3f36483e3f4ef3039e3007" translate="yes" xml:space="preserve">
          <source>Expands_On_NFD</source>
          <target state="translated">Expands_On_NFD</target>
        </trans-unit>
        <trans-unit id="5df7d510e0afb51aa87d43b92bcf880d99423548" translate="yes" xml:space="preserve">
          <source>Expands_On_NFKC</source>
          <target state="translated">Expands_On_NFKC</target>
        </trans-unit>
        <trans-unit id="cc2ac673ebfc4ca4115add5e1d8491f6e16313e9" translate="yes" xml:space="preserve">
          <source>Expands_On_NFKD</source>
          <target state="translated">Expands_On_NFKD</target>
        </trans-unit>
        <trans-unit id="60ad5e3c5be34af787f1a5a9f57ebcde8c336258" translate="yes" xml:space="preserve">
          <source>Expected '=item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf0de321b4edfe39f598e66ba458f32fd64da99" translate="yes" xml:space="preserve">
          <source>Expected '=item *'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777c7b4c3fe35b49213cdaeefc6c1268989f5da0" translate="yes" xml:space="preserve">
          <source>Expecting a single value is not quite the same as knowing that there will be one. If someone modified</source>
          <target state="translated">Esperar un solo valor no es lo mismo que saber que habrá uno.Si alguien modificó</target>
        </trans-unit>
        <trans-unit id="64185a4c949e7204414cf46ff03bc3f1606cbf77" translate="yes" xml:space="preserve">
          <source>Expecting close bracket in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65287be72b978ac388e5b50adfdc25bcb62b5804" translate="yes" xml:space="preserve">
          <source>Expecting interpolated extended charclass in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf72e88f58634dcb4936f677084e0a00acfdd002" translate="yes" xml:space="preserve">
          <source>Expects an anonymous hash of name =&amp;gt; value pairs. Same rules apply for names as in &lt;code&gt;new&lt;/code&gt; . If no argument is supplied, will return the &quot;seen&quot; list of name =&amp;gt; value pairs, in a list context. Otherwise, returns the object itself.</source>
          <target state="translated">Espera un hash an&amp;oacute;nimo de pares nombre =&amp;gt; valor. Se aplican las mismas reglas a los nombres que a los &lt;code&gt;new&lt;/code&gt; . Si no se proporciona ning&amp;uacute;n argumento, devolver&amp;aacute; la lista &quot;vista&quot; de pares nombre =&amp;gt; valor, en un contexto de lista. De lo contrario, devuelve el objeto en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="4d7959ebdbd1eb9b37094b35dddbe6785e49b443" translate="yes" xml:space="preserve">
          <source>Expects an anonymous hash of name =&amp;gt; value pairs. Same rules apply for names as in &lt;code&gt;new&lt;/code&gt;. If no argument is supplied, will return the &quot;seen&quot; list of name =&amp;gt; value pairs, in a list context. Otherwise, returns the object itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc66b53e07eb3ff24ec3024a45e5d4fb318685f8" translate="yes" xml:space="preserve">
          <source>Experimental %s on scalar is now forbidden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b17e379ead5f797c5aa37eb9dc9a107df81896" translate="yes" xml:space="preserve">
          <source>Experimental Details on given and when</source>
          <target state="translated">Los detalles experimentales sobre el dado y cuando</target>
        </trans-unit>
        <trans-unit id="f6f74c01abe74837a83d80a82742b5139aa6cefe" translate="yes" xml:space="preserve">
          <source>Experimental Support for Sun Studio Compilers for Linux OS</source>
          <target state="translated">Soporte experimental para los compiladores de Sun Studio para el sistema operativo Linux</target>
        </trans-unit>
        <trans-unit id="7e049d90ac73798a976f271b4843fd29805765d5" translate="yes" xml:space="preserve">
          <source>Experimental aliasing via reference not enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e15651ca047ada36f7efb9c2f8e000cd639262b" translate="yes" xml:space="preserve">
          <source>Experimental features made easy</source>
          <target state="translated">Las características experimentales se han hecho fáciles</target>
        </trans-unit>
        <trans-unit id="ed2ea169fad6a1c0c998398ba26a1941a42d9f93" translate="yes" xml:space="preserve">
          <source>Experimental features must be experimental in two stable releases before being marked non-experimental. Experimental features will only have their experimental status revoked when they no longer have any design-changing bugs open against them and when they have remained unchanged in behavior for the entire length of a development cycle. In other words, a feature present in v5.20.0 may be marked no longer experimental in v5.22.0 if and only if its behavior is unchanged throughout all of v5.21.</source>
          <target state="translated">Las características experimentales deben ser experimentales en dos liberaciones estables antes de ser marcadas como no experimentales.Las características experimentales sólo tendrán su estatus experimental revocado cuando ya no tengan abiertos contra ellos ningún fallo que cambie el diseño y cuando hayan permanecido sin cambios en su comportamiento durante toda la duración de un ciclo de desarrollo.En otras palabras,una característica presente en la v5.20.0 puede ser marcada como no experimental en la v5.22.0 si y sólo si su comportamiento no cambia a lo largo de toda la v5.21.</target>
        </trans-unit>
        <trans-unit id="812cee3839ce593c6e7f8fb81f34a218fc92295b" translate="yes" xml:space="preserve">
          <source>Experimental implementation to deal with optional_features from META.yml. Still needs coordination with installer software and currently works only for META.yml declaring &lt;code&gt;dynamic_config=0&lt;/code&gt; . Use with caution.</source>
          <target state="translated">Implementaci&amp;oacute;n experimental para lidiar con optional_features de META.yml. Todav&amp;iacute;a necesita coordinaci&amp;oacute;n con el software de instalaci&amp;oacute;n y actualmente funciona solo para META.yml declarando &lt;code&gt;dynamic_config=0&lt;/code&gt; . &amp;Uacute;selo con precauci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="134ab6b7ca3f00324871d474fd88846598632c3d" translate="yes" xml:space="preserve">
          <source>Experimental subroutine signatures not enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a2e6bb257f27dcbf131f0e4c5090288b803bfa" translate="yes" xml:space="preserve">
          <source>Experimental support for using Intel C++ Compiler has been added. Edit win32/Makefile and pick the correct CCTYPE for the Visual C that Intel C was installed into. Also uncomment __ICC to enable Intel C on Visual C support. To set up the build enviroment, from the Start Menu run IA-32 Visual Studio 20__ mode or Intel 64 Visual Studio 20__ mode as appropriate. Then run nmake as usually in that prompt box.</source>
          <target state="translated">Se ha añadido soporte experimental para el uso del Compilador Intel C++.Edita win32/Makefile y elige el CCTYPE correcto para el Visual C en el que se instaló Intel C.También descomente __ICC para habilitar Intel C en la compatibilidad con Visual C.Para configurar el entorno de compilación,desde el menú de inicio ejecute el modo IA-32 Visual Studio 20__o el modo Intel 64 Visual Studio 20__según corresponda.A continuación,ejecute nmake como de costumbre en ese cuadro de diálogo.</target>
        </trans-unit>
        <trans-unit id="910b0326198fc0d6a945d746fbbbc76ed369e62f" translate="yes" xml:space="preserve">
          <source>Experimental support for using Intel C++ Compiler has been added. Edit win32/Makefile and pick the correct CCTYPE for the Visual C that Intel C was installed into. Also uncomment __ICC to enable Intel C on Visual C support. To set up the build environment, from the Start Menu run IA-32 Visual Studio 20__ mode or Intel 64 Visual Studio 20__ mode as appropriate. Then run nmake as usually in that prompt box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512d10cc80bbcc4b910ab34f44eacc0c8a8cab5b" translate="yes" xml:space="preserve">
          <source>Explain how to make a valid fh without going through open()(i.e. apply a layer). For example if the file is not opened through perl, but we want to get back a fh, like it was opened by Perl.</source>
          <target state="translated">Explica cómo hacer una fh válida sin pasar por open()(es decir,aplicar una capa).Por ejemplo,si el archivo no se abre a través de perl,pero queremos recuperar una fh,como si fuera abierta por Perl.</target>
        </trans-unit>
        <trans-unit id="c3c57a0034753db204133ffc1a0baecdf062f580" translate="yes" xml:space="preserve">
          <source>Explanation of the error, or the error itself (such as an exception). In perl exceptions may be blessed objects, so this field may contain a blessed object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7eb7e15c45c52322c743748d0912cc8c1637a0" translate="yes" xml:space="preserve">
          <source>Explicit blessing to '' (assuming package main)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae3abeefc2986f2eb842d3cd9632c0a0316ad1f" translate="yes" xml:space="preserve">
          <source>Explicit context</source>
          <target state="translated">Contexto explícito</target>
        </trans-unit>
        <trans-unit id="04ff6c95ad88a6e349a482b76bfc08416f18ea96" translate="yes" xml:space="preserve">
          <source>Explicitly forces no carriage control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d335bbeeb032574984b5eec4fdf9e2563d5abb" translate="yes" xml:space="preserve">
          <source>Explicitly using the &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;SAVETMPS&lt;/code&gt; --&lt;code&gt;FREETMPS&lt;/code&gt; /&lt;code&gt;LEAVE&lt;/code&gt; pairing</source>
          <target state="translated">Expl&amp;iacute;citamente el uso de la &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;SAVETMPS&lt;/code&gt; - &lt;code&gt;FREETMPS&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt; emparejamiento</target>
        </trans-unit>
        <trans-unit id="6e87a66444e923290e00f1a8b43474c974953b7a" translate="yes" xml:space="preserve">
          <source>Explicitly using the &lt;code&gt;ENTER&lt;/code&gt;/&lt;code&gt;SAVETMPS&lt;/code&gt;--&lt;code&gt;FREETMPS&lt;/code&gt;/&lt;code&gt;LEAVE&lt;/code&gt; pairing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="f3e4fadb9e370a1e2c0c622c01fc8c77daf93a2c" translate="yes" xml:space="preserve">
          <source>Export</source>
          <target state="translated">Export</target>
        </trans-unit>
        <trans-unit id="b04b1d43c804b579fc2179b2b3b449ae1560ae80" translate="yes" xml:space="preserve">
          <source>Export tags defined</source>
          <target state="translated">Las etiquetas de exportación definidas</target>
        </trans-unit>
        <trans-unit id="a10fabb79509133b618928fd32456dad097bd96f" translate="yes" xml:space="preserve">
          <source>Exportable Functions</source>
          <target state="translated">Funciones exportables</target>
        </trans-unit>
        <trans-unit id="087b5b3729015829a7b8d0086f8e5125870ab2b2" translate="yes" xml:space="preserve">
          <source>Exportable Methods</source>
          <target state="translated">Métodos exportables</target>
        </trans-unit>
        <trans-unit id="3fb8ab7d4fdb770897f754d6218d2ea74b86ecf3" translate="yes" xml:space="preserve">
          <source>Exportable constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fa04392e9fbe49aa17d919da35cd7332fea185" translate="yes" xml:space="preserve">
          <source>Exported utility variables</source>
          <target state="translated">Variables de utilidad exportadas</target>
        </trans-unit>
        <trans-unit id="0cd84bdcb23e59371516a9290d82778263ec9c7c" translate="yes" xml:space="preserve">
          <source>Exporter</source>
          <target state="translated">Exporter</target>
        </trans-unit>
        <trans-unit id="e3272220a019edf889f502d8e939100dd7ba6db5" translate="yes" xml:space="preserve">
          <source>Exporter - Implements default import method for modules</source>
          <target state="translated">Exportador-Implementa el método de importación por defecto para los módulos</target>
        </trans-unit>
        <trans-unit id="9677334ff1544480ffd2a9303280ab252a694823" translate="yes" xml:space="preserve">
          <source>Exporter guts</source>
          <target state="translated">Las tripas del exportador</target>
        </trans-unit>
        <trans-unit id="733f73993629cd5a5a17865554f4f49f3a533105" translate="yes" xml:space="preserve">
          <source>Exporter has a special method, 'export_to_level' which is used in situations where you can't directly call Exporter's import method. The export_to_level method looks like:</source>
          <target state="translated">El exportador tiene un método especial,'export_to_level',que se utiliza en situaciones en las que no se puede llamar directamente al método de importación del exportador.El método export_to_level tiene el siguiente aspecto:</target>
        </trans-unit>
        <trans-unit id="e3e659931fe986137a62058f2b4abcef03d65202" translate="yes" xml:space="preserve">
          <source>Exporter.pm</source>
          <target state="translated">Exporter.pm</target>
        </trans-unit>
        <trans-unit id="dc76f5ce6b0b38a5f000b46176cc35b9cb43b24a" translate="yes" xml:space="preserve">
          <source>Exporter::Heavy</source>
          <target state="translated">Exporter::Heavy</target>
        </trans-unit>
        <trans-unit id="1d1140249dd08a40f776c20b9ddd54b5796c4a08" translate="yes" xml:space="preserve">
          <source>Exporter::Heavy - Exporter guts</source>
          <target state="translated">Exportador::Pesado-Exportador de tripas</target>
        </trans-unit>
        <trans-unit id="5212c627287d01ea51f61b228d900e6e7aa1a003" translate="yes" xml:space="preserve">
          <source>Exporting Without Inheriting from Exporter</source>
          <target state="translated">Exportar sin heredar del exportador</target>
        </trans-unit>
        <trans-unit id="b76a470ae357815e917068bbc5728a8478edaac1" translate="yes" xml:space="preserve">
          <source>Exporting Without Using Exporter's import Method</source>
          <target state="translated">Exportación sin utilizar el método de importación del exportador</target>
        </trans-unit>
        <trans-unit id="1b7c31e16f36f853e2c6c57c0f5c8d014a8558d8" translate="yes" xml:space="preserve">
          <source>Exporting variables is not a good idea. They can change under the hood, provoking horrible effects at-a-distance that are too hard to track and to fix. Trust me: they are not worth it.</source>
          <target state="translated">Exportar variables no es una buena idea.Pueden cambiar bajo el capó,provocando efectos horribles a distancia que son demasiado difíciles de rastrear y arreglar.Créeme:no valen la pena.</target>
        </trans-unit>
        <trans-unit id="071e64c7e24a9d0c7e9058c9548f279b0db62c55" translate="yes" xml:space="preserve">
          <source>Exporting your new function</source>
          <target state="translated">Exportar su nueva función</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="78a2a7642c638f47b6ed7502eab44ca9b2bee2ca" translate="yes" xml:space="preserve">
          <source>Exports all the test functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf2ed8b53d5a014c877f2053b8b2d2b823e37e6" translate="yes" xml:space="preserve">
          <source>Exports in this section are not commonly needed. These all have the 'test2_' prefix to help ensure they stand out. You should look at the &lt;a href=&quot;#MAIN-API-EXPORTS&quot;&gt;&quot;MAIN API EXPORTS&quot;&lt;/a&gt; section before looking here. This section is one where &quot;Great power comes with great responsibility&quot;. It is possible to break things badly if you are not careful with these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a78d15b2b917cc03293d31b108e05ce4d52026f" translate="yes" xml:space="preserve">
          <source>Exports pollute the namespace of the module user. If you must export try to use &lt;code&gt;@EXPORT_OK&lt;/code&gt; in preference to &lt;code&gt;@EXPORT&lt;/code&gt; and avoid short or common symbol names to reduce the risk of name clashes.</source>
          <target state="translated">Las exportaciones contaminan el espacio de nombres del usuario del m&amp;oacute;dulo. Si debe exportar, intente utilizar &lt;code&gt;@EXPORT_OK&lt;/code&gt; en lugar de &lt;code&gt;@EXPORT&lt;/code&gt; y evite los nombres de s&amp;iacute;mbolos cortos o comunes para reducir el riesgo de conflictos de nombres.</target>
        </trans-unit>
        <trans-unit id="19680f4d8bc35c089321258ed1726974e515bb01" translate="yes" xml:space="preserve">
          <source>Exports pollute the namespace of the module user. If you must export try to use @EXPORT_OK in preference to @EXPORT and avoid short or common names to reduce the risk of name clashes.</source>
          <target state="translated">Las exportaciones contaminan el espacio de nombres del usuario del módulo.Si debe exportar,intente usar @EXPORT_OK en lugar de @EXPORT y evite los nombres cortos o comunes para reducir el riesgo de conflictos de nombres.</target>
        </trans-unit>
        <trans-unit id="991118c2b6b3c16c0bc4bf38a36f6ec2aa05622c" translate="yes" xml:space="preserve">
          <source>Expose the individual bytes of characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67fdeebc6a730537832b31cf1e590434ac7ad11" translate="yes" xml:space="preserve">
          <source>Exposes the POSIX function getcwd(3) or re-implements it if it's not available.</source>
          <target state="translated">Expone la función POSIX getcwd(3)o la reimplementa si no está disponible.</target>
        </trans-unit>
        <trans-unit id="30e13c3f2f4b6a85ea0443e9079e6877bde86d9e" translate="yes" xml:space="preserve">
          <source>Expressing the command as a list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848bbebe9b69edd539cf121a71439bdfe81b397c" translate="yes" xml:space="preserve">
          <source>Expressions like this are useful in conditionals:</source>
          <target state="translated">Expresiones como esta son útiles en los condicionales:</target>
        </trans-unit>
        <trans-unit id="130f8cc58ed68e3a1fe427428482f60dc97e9301" translate="yes" xml:space="preserve">
          <source>Ext/Ension</source>
          <target state="translated">Ext/Ension</target>
        </trans-unit>
        <trans-unit id="ae4a822ac4b76bc07804416206c3daa608046771" translate="yes" xml:space="preserve">
          <source>ExtUtils</source>
          <target state="translated">ExtUtils</target>
        </trans-unit>
        <trans-unit id="8adb87135c238343780172ae48188681cf370acf" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder</source>
          <target state="translated">ExtUtils::CBuilder</target>
        </trans-unit>
        <trans-unit id="0dd29c2a17cfd9dc6e5beb4505e91940187682bf" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder - Compile and link C code for Perl modules</source>
          <target state="translated">ExtUtils::CBuilder-Compila y enlaza el código C para los módulos Perl</target>
        </trans-unit>
        <trans-unit id="de9e9dbbe64dfc1f06076f5b598c40c5b97a4f07" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder is maintained as part of the Perl 5 core. Please submit any bug reports via the</source>
          <target state="translated">El constructor se mantiene como parte del núcleo de Perl 5.Por favor,envíe cualquier informe de errores a través del</target>
        </trans-unit>
        <trans-unit id="6d9aae08362d79c65318eda6627f0ab746bbee95" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder::Platform::Windows</source>
          <target state="translated">ExtUtils::CBuilder::Platform::Windows</target>
        </trans-unit>
        <trans-unit id="ec8f2943e4d10ff3dad921becf4700a9c605fc5f" translate="yes" xml:space="preserve">
          <source>ExtUtils::CBuilder::Platform::Windows - Builder class for Windows platforms</source>
          <target state="translated">Ext ExtUtils::CBuilder::Plataforma::Windows-Clase de constructor para plataformas Windows</target>
        </trans-unit>
        <trans-unit id="0f5f8c4e317cb9e14dbc99f8c4725e7101d063e0" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command</source>
          <target state="translated">ExtUtils::Command</target>
        </trans-unit>
        <trans-unit id="13685feaf020782447b9941746d4b335bddf0883" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command - utilities to replace common UNIX commands in Makefiles etc.</source>
          <target state="translated">ExtUtils::Command-utilidades para reemplazar los comandos comunes de UNIX en Makefiles etc.</target>
        </trans-unit>
        <trans-unit id="1e0e65de42d77495693723755508f19700283291" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command::MM</source>
          <target state="translated">ExtUtils::Command::MM</target>
        </trans-unit>
        <trans-unit id="57baedd89a659e1e0ecff540830bcf69ebde4c0c" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command::MM - Commands for the MM's to use in Makefiles</source>
          <target state="translated">ExtUtils::Command::MM-Comandos para los MM's para usar en Makefiles</target>
        </trans-unit>
        <trans-unit id="e8520d9305bb1b6b30673860c2a9fc7e0bb43af7" translate="yes" xml:space="preserve">
          <source>ExtUtils::Command::MM encapsulates code which would otherwise have to be done with large &quot;one&quot; liners.</source>
          <target state="translated">El comando MM encapsula el código que de otra manera tendría que ser hecho con grandes líneas de &quot;uno&quot;.</target>
        </trans-unit>
        <trans-unit id="01aca525aa3b0d3504eab62f629ea7ae316a1df9" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant</source>
          <target state="translated">ExtUtils::Constant</target>
        </trans-unit>
        <trans-unit id="eb53ab587c5df3bac6d41d873980d0a80f5c155a" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant - generate XS code to import C header constants</source>
          <target state="translated">Ext ExtUtils::Constante-generar código XS para importar las constantes de la cabecera C</target>
        </trans-unit>
        <trans-unit id="2bfb67938397e6eb325051359a5d323e79a220d8" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant facilitates generating C and XS wrapper code to allow perl modules to AUTOLOAD constants defined in C library header files. It is principally used by the &lt;code&gt;h2xs&lt;/code&gt; utility, on which this code is based. It doesn't contain the routines to scan header files to extract these constants.</source>
          <target state="translated">ExtUtils :: Constant facilita la generaci&amp;oacute;n de c&amp;oacute;digo contenedor C y XS para permitir que los m&amp;oacute;dulos perl utilicen las constantes AUTOLOAD definidas en los archivos de encabezado de la biblioteca C. Es utilizado principalmente por la utilidad &lt;code&gt;h2xs&lt;/code&gt; , en la que se basa este c&amp;oacute;digo. No contiene las rutinas para escanear archivos de encabezado para extraer estas constantes.</target>
        </trans-unit>
        <trans-unit id="66069119c4474ce5db2c00c2fc5c7ebe74e509d3" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base</source>
          <target state="translated">ExtUtils::Constant::Base</target>
        </trans-unit>
        <trans-unit id="a5a92bf27fd8a70fb8d0d04675721591091d31a8" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base - base class for ExtUtils::Constant objects</source>
          <target state="translated">Extintas::Constante::Clase base-base para Extintas::Objetos constantes</target>
        </trans-unit>
        <trans-unit id="37d28c0e096d851a074af795694f3e4ed605e4fe" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base exports no subroutines. The following methods are available</source>
          <target state="translated">Ext Ext Ext.::Constante::La base no exporta ninguna subrutina.Los siguientes métodos están disponibles</target>
        </trans-unit>
        <trans-unit id="cc85f41228edcbb25fda849b24e857773037224e" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Base provides a base implementation of methods to generate C code to give fast constant value lookup by named string. Currently it's mostly used ExtUtils::Constant::XS, which generates the lookup code for the constant() subroutine found in many XS modules.</source>
          <target state="translated">ExtUtils::Constante::Base proporciona una implementación base de métodos para generar código C para dar una rápida búsqueda de valor constante por una cadena de nombre.Actualmente se usa principalmente ExtUtils::Constant::XS,que genera el código de búsqueda para la subrutina constant()que se encuentra en muchos módulos XS.</target>
        </trans-unit>
        <trans-unit id="01123cf69ee0503631a353722ce7083ea5078bc4" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Utils</source>
          <target state="translated">ExtUtils::Constant::Utils</target>
        </trans-unit>
        <trans-unit id="eb7021c674be1dbbac0f5d2f00a2ee805361885c" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant</source>
          <target state="translated">ExtUtils::Constante::Utils-funciones de ayuda para ExtUtils::Constante</target>
        </trans-unit>
        <trans-unit id="88fa01ca987de7b887a3c79f4e501e05801215f9" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::Utils packages up utility subroutines used by ExtUtils::Constant, ExtUtils::Constant::Base and derived classes. All its functions are explicitly exportable.</source>
          <target state="translated">ExtUtils::Constante::Utils empaqueta las subrutinas de utilidad usadas por ExtUtils::Constante,ExtUtils::Constante::Clases base y derivadas.Todas sus funciones son explícitamente exportables.</target>
        </trans-unit>
        <trans-unit id="691e427f212f20f1a4e97a292f83b191a9330664" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::XS</source>
          <target state="translated">ExtUtils::Constant::XS</target>
        </trans-unit>
        <trans-unit id="7b304383401bf8b504f1c4575e883635046c55a8" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::XS - generate C code for XS modules' constants.</source>
          <target state="translated">Ext Ext ExtUtils::Constante::XS-generar código C para las constantes de los módulos XS.</target>
        </trans-unit>
        <trans-unit id="a134fe12059f0bb9cd89ef6f92c5ae2e9810c57e" translate="yes" xml:space="preserve">
          <source>ExtUtils::Constant::XS overrides ExtUtils::Constant::Base to generate C code for XS modules' constants.</source>
          <target state="translated">ExtUtils::Constante::XS anula ExtUtils::Constante::Base para generar código C para las constantes de los módulos XS.</target>
        </trans-unit>
        <trans-unit id="5fb8ee5bc96080dc35b8c113dc4ab7e19f1f7f22" translate="yes" xml:space="preserve">
          <source>ExtUtils::Embed</source>
          <target state="translated">ExtUtils::Embed</target>
        </trans-unit>
        <trans-unit id="939f083947624f21f9b736c75a4f6438e18f6655" translate="yes" xml:space="preserve">
          <source>ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications</source>
          <target state="translated">ExtUtils::Embed-Utilidades para incrustar Perl en aplicaciones C/C++</target>
        </trans-unit>
        <trans-unit id="66d1280ba3865302835b81bea028e8fe495e808d" translate="yes" xml:space="preserve">
          <source>ExtUtils::Install</source>
          <target state="translated">ExtUtils::Install</target>
        </trans-unit>
        <trans-unit id="e1917ee01b8bd661c56eb9ac792b975c3df2f5a1" translate="yes" xml:space="preserve">
          <source>ExtUtils::Install - install files from here to there</source>
          <target state="translated">Ext Ext ExtUtils::Instalar-instalar archivos de aquí a allá</target>
        </trans-unit>
        <trans-unit id="b703bea959a592e6e8e04477edfce4ad8bd309c6" translate="yes" xml:space="preserve">
          <source>ExtUtils::Installed</source>
          <target state="translated">ExtUtils::Installed</target>
        </trans-unit>
        <trans-unit id="3984de1657750a05991b5ea96245f59313691aaf" translate="yes" xml:space="preserve">
          <source>ExtUtils::Installed - Inventory management of installed modules</source>
          <target state="translated">ExtUtils::Instalado-Gestión de inventario de los módulos instalados</target>
        </trans-unit>
        <trans-unit id="b02212efafd95acf708fbde6c1ea9a18a4ebc3b3" translate="yes" xml:space="preserve">
          <source>ExtUtils::Installed provides a standard way to find out what core and module files have been installed. It uses the information stored in .packlist files created during installation to provide this information. In addition it provides facilities to classify the installed files and to extract directory information from the .packlist files.</source>
          <target state="translated">ExtUtils::Installed proporciona una forma estándar de averiguar qué archivos de núcleo y módulo se han instalado.Utiliza la información almacenada en los archivos .packlist creados durante la instalación para proporcionar esta información.Además,proporciona facilidades para clasificar los archivos instalados y para extraer información de directorio de los archivos .packlist.</target>
        </trans-unit>
        <trans-unit id="42c25bbd2df5e46fa299efe94a0a5ec1d56bc561" translate="yes" xml:space="preserve">
          <source>ExtUtils::Liblist</source>
          <target state="translated">ExtUtils::Liblist</target>
        </trans-unit>
        <trans-unit id="1c444f69f6d944829dae0bfb3cb19187e41f4b3d" translate="yes" xml:space="preserve">
          <source>ExtUtils::Liblist - determine libraries to use and how to use them</source>
          <target state="translated">ExtUtils::Liblist-determinar las bibliotecas a usar y cómo usarlas</target>
        </trans-unit>
        <trans-unit id="d6d8f29d2d6c812d8608b7eecff6b50d5b23bb32" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM</source>
          <target state="translated">ExtUtils::MM</target>
        </trans-unit>
        <trans-unit id="d9944867a30cc09571228059a446b44834907174" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass</source>
          <target state="translated">ExtUtils::MM-OS adjusted ExtUtils::MakeMaker subclass</target>
        </trans-unit>
        <trans-unit id="8e1a56d427b6cdce97fbab94a739a6369e0e5125" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM is a subclass of &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt; which automatically chooses the appropriate OS specific subclass for you (ie. &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt;, etc...).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5ed850a839f5d75d47dcc96cd13b3666aca25d" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM is a subclass of ExtUtils::MakeMaker which automatically chooses the appropriate OS specific subclass for you (ie. ExtUils::MM_Unix, etc...).</source>
          <target state="translated">ExtUtils::MM es una subclase de ExtUtils::MakeMaker que automáticamente elige la subclase específica del sistema operativo apropiado para ti (ej.ExtUils::MM_Unix,etc...).</target>
        </trans-unit>
        <trans-unit id="f20ad18d2cdfe05b996f3064f2baa9077e90198e" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_AIX</source>
          <target state="translated">ExtUtils::MM_AIX</target>
        </trans-unit>
        <trans-unit id="e2c65ab01c23a32d98e8b4e3a0d77782b9a1b0c7" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_AIX-AIX subclase específica de ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="82f6a9462d97b2eeba15d489f4c29f1201ca8139" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any</source>
          <target state="translated">ExtUtils::MM_Any</target>
        </trans-unit>
        <trans-unit id="28e6e24f25939bb77bd8b0e8b5c1b5591ab0a63a" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any - Platform-agnostic MM methods</source>
          <target state="translated">ExtUtils::MM_Any-Métodos de MM agnósticos de plataforma</target>
        </trans-unit>
        <trans-unit id="f1beb9206779be8013b3e4a60d1eb3c845414417" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any is a subclass of &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;. The methods noted here override File::Spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4017c7fd6c6b1a7382d3693845441ec57607400" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any is a subclass of File::Spec. The methods noted here override File::Spec.</source>
          <target state="translated">Ext ExtUtils::MM_Any es una subclase de File::Spec.Los métodos que se mencionan aquí anulan el Archivo::Spec.</target>
        </trans-unit>
        <trans-unit id="a07e79b177dfcc3d173d4e96906fb19054e96233" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Any is a superclass for the ExtUtils::MM_* set of modules. It contains methods which are either inherently cross-platform or are written in a cross-platform manner.</source>
          <target state="translated">ExtUtils::MM_Any es una superclase para el conjunto de módulos de ExtUtils::MM_*.Contiene métodos que son inherentemente multiplataforma o están escritos de manera multiplataforma.</target>
        </trans-unit>
        <trans-unit id="01e79daa480a30aec67c1c77b38113a2fa75acb1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_BeOS</source>
          <target state="translated">ExtUtils::MM_BeOS</target>
        </trans-unit>
        <trans-unit id="ff7047e18f778da31bd8596ebbae3ca3c16815a1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_BeOS - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_BeOS-métodos para anular el comportamiento de UN*X en ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="32f54e4d1cdff9fa869169ffbe48a1f8a6442f8d" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Cygwin</source>
          <target state="translated">ExtUtils::MM_Cygwin</target>
        </trans-unit>
        <trans-unit id="26a23a31e9ae337b30e976cee9bfe04ee8714af5" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Cygwin - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_Cygwin-métodos para anular el comportamiento de UN*X en ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="83b34173b4084fe7b0f1b8e7080f5e44721c1652" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_DOS</source>
          <target state="translated">ExtUtils::MM_DOS</target>
        </trans-unit>
        <trans-unit id="ce09d2a78829bfe3f6e4a91c1fda8bf736e91cd1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_DOS-DOS subclase específica de ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="95c4b06cdebc87ea8f0b490c31911c2d3a160085" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Darwin</source>
          <target state="translated">ExtUtils::MM_Darwin</target>
        </trans-unit>
        <trans-unit id="ce3594f7f3d66367be8d04f9a60ed3e5b23e61ae" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Darwin - special behaviors for OS X</source>
          <target state="translated">ExtUtils::MM_Darwin-comportamientos especiales para OS X</target>
        </trans-unit>
        <trans-unit id="a35d39f1996d06db96e0eb3bc7581c9d1bb37583" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_MacOS</source>
          <target state="translated">ExtUtils::MM_MacOS</target>
        </trans-unit>
        <trans-unit id="a75ee91bd51d22344f5f01dea69463550d1b77f8" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic</source>
          <target state="translated">ExtUtils::MM_MacOS-una vez producido Makefiles para MacOS Classic</target>
        </trans-unit>
        <trans-unit id="05b1c57f6a3a8d6a042ca608dff6a349761c8182" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_NW5</source>
          <target state="translated">ExtUtils::MM_NW5</target>
        </trans-unit>
        <trans-unit id="c8c1829d86b2c857e5650f081f857c1eaf86f3e8" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_NW5 - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_NW5-métodos para anular el comportamiento de UN*X en ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="e0950761db3807deb0218887807e7b7bff1a358b" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_OS2</source>
          <target state="translated">ExtUtils::MM_OS2</target>
        </trans-unit>
        <trans-unit id="9c18e1ac0450cd34c6460b2c5c7a1220fbf998b2" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_OS2 - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_OS2-métodos para anular el comportamiento de UN*X en ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="9754f9a33576ee28f994ec3ff4f6032e292d0ec1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_QNX</source>
          <target state="translated">ExtUtils::MM_QNX</target>
        </trans-unit>
        <trans-unit id="5c959f779c55270f8bb8da4da99da8c51701f934" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_QNX-QNX subclase específica de ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="d9cffc939c33c81ae491e577ff7a0f67f32115db" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_UWIN</source>
          <target state="translated">ExtUtils::MM_UWIN</target>
        </trans-unit>
        <trans-unit id="392dbc1b30426cf86e8bbd0156b4353d7aae576c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_UWIN-U/WIN subclase específica de ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="6b69e4024267a17dfff2456177fce03e32e171de" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="c828df98d7850f84de0cbb81d4e4596caa76f94a" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_Unix-métodos usados por ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="2f00201cd4f3a6fbb76802bb39ac7a005b8f24e3" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Unix. This is a temporary solution.</source>
          <target state="translated">Ext Ext Ext.::MM_Unix.Esta es una solución temporal.</target>
        </trans-unit>
        <trans-unit id="5bbe314072fa79cbbe64e27d3c034cb7ecbc2df1" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VMS</source>
          <target state="translated">ExtUtils::MM_VMS</target>
        </trans-unit>
        <trans-unit id="c328e4aa3661448cfc600baf641ce3b368446553" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VMS - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_VMS-métodos para anular el comportamiento de UN*X en ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="cbf6a31d4b30a3697a77d880951a740af6fe002e" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VOS</source>
          <target state="translated">ExtUtils::MM_VOS</target>
        </trans-unit>
        <trans-unit id="248c1927adaa54c68b53917bcd12ca60bc242150" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_VOS-VOS subclase específica de ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="01b2b6f5d2a1e4c4ed0f2cb32046a9a5d606a04c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win32</source>
          <target state="translated">ExtUtils::MM_Win32</target>
        </trans-unit>
        <trans-unit id="31634682156707a3a92d7105825df2529eb4f747" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win32 - methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MM_Win32-métodos para anular el comportamiento de UN*X en ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="dd4f189a6328e4d51489c48940b1b07f49808b7b" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win95</source>
          <target state="translated">ExtUtils::MM_Win95</target>
        </trans-unit>
        <trans-unit id="ef84388c3c22f4aa37ab1ec6dcdd24ddaa801da4" translate="yes" xml:space="preserve">
          <source>ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X</source>
          <target state="translated">ExtUtils::MM_Win95-método para personalizar MakeMaker para Win9X</target>
        </trans-unit>
        <trans-unit id="2eeeaab10b029e1825f471249451e612175f476c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY</source>
          <target state="translated">ExtUtils::MY</target>
        </trans-unit>
        <trans-unit id="a29677c3a7812ab9e27275d7d315711580baa3c5" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY - ExtUtils::MakeMaker subclass for customization</source>
          <target state="translated">Ext ExtUtils::MY-ExtUtils::Subclase de MakeMaker para la personalización</target>
        </trans-unit>
        <trans-unit id="8c6225988b72e5033c42e6301547dce425e25ee5" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY is a subclass of &lt;a href=&quot;ExtUtils::MM&quot;&gt;ExtUtils::MM&lt;/a&gt;. Its provided in your Makefile.PL for you to add and override MakeMaker functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077ce2e66cf34d26fc93548b5aa4b0a365551ad3" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY is a subclass of ExtUtils::MM. Its provided in your Makefile.PL for you to add and override MakeMaker functionality.</source>
          <target state="translated">Ext ExtUtils::MY es una subclase de ExtUtils::MM.Se proporciona en tu Makefile.PL para que añadas y anules la funcionalidad de MakeMaker.</target>
        </trans-unit>
        <trans-unit id="a8d99fc9d222321dd1dd6e7c9d39239d74c92fb3" translate="yes" xml:space="preserve">
          <source>ExtUtils::MY might turn out to be a temporary solution, but MY won't go away.</source>
          <target state="translated">Ext Ext Extutils::MY puede resultar una solución temporal,pero MY no desaparecerá.</target>
        </trans-unit>
        <trans-unit id="6da8b7232afb53dfdcd9b1c4dde891781d5ce223" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker</target>
        </trans-unit>
        <trans-unit id="b8052cbade448d159716f320bb8b7066c1c35927" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker (EUMM) is object oriented. Each directory below the current directory that contains a Makefile.PL is treated as a separate object. This makes it possible to write an unlimited number of Makefiles with a single invocation of WriteMakefile().</source>
          <target state="translated">Ext ExtUtils::MakeMaker (EUMM)está orientado a los objetos.Cada directorio debajo del directorio actual que contiene un Makefile.PL es tratado como un objeto separado.Esto hace posible escribir un número ilimitado de Makefiles con una sola invocación de WriteMakefile().</target>
        </trans-unit>
        <trans-unit id="6ea38d2404e8bb2fe915619afea85f24fef8c2cc" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker - Create a module Makefile</source>
          <target state="translated">ExtUtils::MakeMaker-Crear un módulo Makefile</target>
        </trans-unit>
        <trans-unit id="e6df2289ed559a450ea26d00c0d0e4cee5508740" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker subclass for customization</source>
          <target state="translated">Ext ExtUtils::Subclase de MakeMaker para la personalización</target>
        </trans-unit>
        <trans-unit id="c60c158c602a516f81a6ae9bca65b474a071fe74" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Config</source>
          <target state="translated">ExtUtils::MakeMaker::Config</target>
        </trans-unit>
        <trans-unit id="d3014ef697f5ada430bc56427a7b9caae4e6e02c" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Config - Wrapper around Config.pm</source>
          <target state="translated">ExtUtils::MakeMaker::Config-Wrapper around Config.pm</target>
        </trans-unit>
        <trans-unit id="9ccd57b3ecc86c99f88666a4cbfa65fcc3d9511f" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::FAQ</source>
          <target state="translated">ExtUtils::MakeMaker::FAQ</target>
        </trans-unit>
        <trans-unit id="30461ff8ef34cae5ca5dc88e0a98e8273138112a" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker::FAQ-Preguntas frecuentes sobre MakeMaker</target>
        </trans-unit>
        <trans-unit id="51e7eb76f593803326b81c0b7eddf02ecc2dca1f" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Locale</source>
          <target state="translated">ExtUtils::MakeMaker::Locale</target>
        </trans-unit>
        <trans-unit id="95b89cbe7015202586c4481ef682b645c3e89ac2" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Locale - bundled Encode::Locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91ea2c313a203d7ca441511bcd463e56db95e2e" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Tutorial</source>
          <target state="translated">ExtUtils::MakeMaker::Tutorial</target>
        </trans-unit>
        <trans-unit id="a40c04994e7a37e13af27331a991a5aa646c9b73" translate="yes" xml:space="preserve">
          <source>ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker::Tutorial-Escribir un módulo con MakeMaker</target>
        </trans-unit>
        <trans-unit id="b357eaa10f6891f76e970ffb5f2bf93f495e4a17" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest</source>
          <target state="translated">ExtUtils::Manifest</target>
        </trans-unit>
        <trans-unit id="c2882ccdd5737a1b3d2f4dc3d31014e58dd46653" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest - Utilities to write and check a MANIFEST file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3226afa87ddca4ba7171d22b9f2b78d098b58f76" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest - utilities to write and check a MANIFEST file</source>
          <target state="translated">Ext Extutils::Manifiesto-utilidades para escribir y comprobar un archivo MANIFIESTO</target>
        </trans-unit>
        <trans-unit id="5668766f97bcd05c6bdb7c965133d9727537b625" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest exports no functions by default. The following are exported on request</source>
          <target state="translated">Ext ExtUtils::El manifiesto no exporta ninguna función por defecto.Las siguientes se exportan a petición</target>
        </trans-unit>
        <trans-unit id="bdbe036be435e29a3c3c98d79b72ee067d6d642d" translate="yes" xml:space="preserve">
          <source>ExtUtils::Manifest exports no functions by default. The following are exported on request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d683dc5b10b650f60d4d9d340eeb5154c9725c7" translate="yes" xml:space="preserve">
          <source>ExtUtils::Miniperl</source>
          <target state="translated">ExtUtils::Miniperl</target>
        </trans-unit>
        <trans-unit id="a62bb061ae9acdfb750b378b1f62a97de2f7165a" translate="yes" xml:space="preserve">
          <source>ExtUtils::Miniperl - write the C code for miniperlmain.c and perlmain.c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc3f091d177ebdf88e70a7d90d1a0e96a9ebda2" translate="yes" xml:space="preserve">
          <source>ExtUtils::Miniperl - write the C code for perlmain.c</source>
          <target state="translated">Ext Ext Ext::Miniperl-escribe el código C para perlmain.c</target>
        </trans-unit>
        <trans-unit id="1c32c7f84e8dc881e25db6f6d50706131d6d8758" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mkbootstrap</source>
          <target state="translated">ExtUtils::Mkbootstrap</target>
        </trans-unit>
        <trans-unit id="bbfa5e60d2823fa64c959ef9034364b18eddc3e9" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader</source>
          <target state="translated">ExtUtils::Mkbootstrap-hacer un archivo bootstrap para ser usado por DynaLoader</target>
        </trans-unit>
        <trans-unit id="6719b923f8e283bd552384bd5af81cadfef85883" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mksymlists</source>
          <target state="translated">ExtUtils::Mksymlists</target>
        </trans-unit>
        <trans-unit id="15ab523f4d3c60af2d551125aa18471a39d07e7c" translate="yes" xml:space="preserve">
          <source>ExtUtils::Mksymlists - write linker options files for dynamic extension</source>
          <target state="translated">ExtUtils::Mksymlists-escribir archivos de opciones de enlace para la extensión dinámica</target>
        </trans-unit>
        <trans-unit id="dac17ac78f3539cbb386b1e56ee2b529662e80e5" translate="yes" xml:space="preserve">
          <source>ExtUtils::Packlist</source>
          <target state="translated">ExtUtils::Packlist</target>
        </trans-unit>
        <trans-unit id="2fd0b32af3911843b6577751529d4515df509939" translate="yes" xml:space="preserve">
          <source>ExtUtils::Packlist - manage .packlist files</source>
          <target state="translated">Ext ExtUtils::Packlist-gestionar los archivos .packlist</target>
        </trans-unit>
        <trans-unit id="b6cb6e0433e264b8d9ae4674f7b9ee20c7cc9a0e" translate="yes" xml:space="preserve">
          <source>ExtUtils::Packlist provides a standard way to manage .packlist files. Functions are provided to read and write .packlist files. The original .packlist format is a simple list of absolute pathnames, one per line. In addition, this package supports an extended format, where as well as a filename each line may contain a list of attributes in the form of a space separated list of key=value pairs. This is used by the installperl script to differentiate between files and links, for example.</source>
          <target state="translated">La lista de paquetes proporciona una forma estándar de gestionar los archivos de la lista de paquetes.Se proporcionan funciones para leer y escribir archivos .packlist.El formato original de .packlist es una simple lista de rutas absolutas,una por línea.Además,este paquete soporta un formato extendido,donde además de un nombre de archivo cada línea puede contener una lista de atributos en forma de una lista separada por espacios de pares clave=valor.Esto es usado por el script installperl para diferenciar entre archivos y enlaces,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="c27f6826e3e72b1481e238cd590b927b9a8c7674" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS</source>
          <target state="translated">ExtUtils::ParseXS</target>
        </trans-unit>
        <trans-unit id="a0bc42ea6560aea10d0d6a20cba29d9f0d9456c6" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS - converts Perl XS code into C code</source>
          <target state="translated">Ext ExtUtils::ParseXS-convierte el código XS de Perl en código C</target>
        </trans-unit>
        <trans-unit id="03159689beb1e83556a0d792cc8509ee6422dca5" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS::Constants</source>
          <target state="translated">ExtUtils::ParseXS::Constants</target>
        </trans-unit>
        <trans-unit id="cf5795919350a424f2fdddb099257f73945e1a05" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS::Constants - Initialization values for some globals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34afc1a15abc59a30f0d297ced64f7e5d7089b18" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS::Eval</source>
          <target state="translated">ExtUtils::ParseXS::Eval</target>
        </trans-unit>
        <trans-unit id="b114f3881b5796ad889d6328dec9b5e233d60f40" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS::Eval - Clean package to evaluate code in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd75ce4683a9aa22ba6c700ca353d47d601b2384" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS::Utilities</source>
          <target state="translated">ExtUtils::ParseXS::Utilities</target>
        </trans-unit>
        <trans-unit id="92bd9c932412ce4f8422b75c6801374ed24acdf2" translate="yes" xml:space="preserve">
          <source>ExtUtils::ParseXS::Utilities - Subroutines used with ExtUtils::ParseXS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244cbf4be92c60aff1ddbf35e6ab53db17abecdd" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps</source>
          <target state="translated">ExtUtils::Typemaps</target>
        </trans-unit>
        <trans-unit id="d3f0982ef48a7ff5c4bec28af01b2fc9c1b9e324" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps - Read/Write/Modify Perl/XS typemap files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f91cda6d284fa20124d5451bc24b51143532bb" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::Cmd</source>
          <target state="translated">ExtUtils::Typemaps::Cmd</target>
        </trans-unit>
        <trans-unit id="795fa4eef7e8ecb9427bfc09a6b1dcc43d73ee93" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::Cmd - Quick commands for handling typemaps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9969ccb534d5e151d4ccb9e73ab988320ed4b6" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::InputMap</source>
          <target state="translated">ExtUtils::Typemaps::InputMap</target>
        </trans-unit>
        <trans-unit id="c325c829d365d7d7a6812090290f7b83b3596b1c" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::InputMap - Entry in the INPUT section of a typemap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237c9b6dbebb9b4ed396f0dce6a67fb3af72515a" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::OutputMap</source>
          <target state="translated">ExtUtils::Typemaps::OutputMap</target>
        </trans-unit>
        <trans-unit id="661bb31eef11ca983e8d0917113f95b3a60d7add" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::OutputMap - Entry in the OUTPUT section of a typemap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6feaee53a536421bc2b64881bb22fc287b99e2b4" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::Type</source>
          <target state="translated">ExtUtils::Typemaps::Type</target>
        </trans-unit>
        <trans-unit id="42aba54068b70ea208aa1cd601ae498fb974dba4" translate="yes" xml:space="preserve">
          <source>ExtUtils::Typemaps::Type - Entry in the TYPEMAP section of a typemap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973e953fd629b20b4ca87588491035c2a7556141" translate="yes" xml:space="preserve">
          <source>ExtUtils::XSSymSet</source>
          <target state="translated">ExtUtils::XSSymSet</target>
        </trans-unit>
        <trans-unit id="f716c096c97d144856a93624d2a5d5bd094c5cae" translate="yes" xml:space="preserve">
          <source>ExtUtils::XSSymSet - keep sets of symbol names palatable to the VMS linker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01cb2601da9ca9e6f049c24d0b16efdb7998074" translate="yes" xml:space="preserve">
          <source>ExtUtils::testlib</source>
          <target state="translated">ExtUtils::testlib</target>
        </trans-unit>
        <trans-unit id="c819a99ea2471502c8a0521252e569cacdf6e150" translate="yes" xml:space="preserve">
          <source>ExtUtils::testlib - add blib/* directories to @INC</source>
          <target state="translated">ExtUtils::testlib-añadir directorios blib/*a @INC</target>
        </trans-unit>
        <trans-unit id="1a8525beca2f4f9e103dd4931ef378f407141d6e" translate="yes" xml:space="preserve">
          <source>Extend File Glob to Allow Input and Output Files</source>
          <target state="translated">Extender el File Glob para permitir la entrada y salida de archivos</target>
        </trans-unit>
        <trans-unit id="82d26601ba012fb977fae11b9393fa91fb289790" translate="yes" xml:space="preserve">
          <source>Extend your pattern's legibility by permitting whitespace and comments. Details in &lt;a href=&quot;#%2Fx-and-%2Fxx&quot;&gt;&quot;/x and /xx&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab77626f5cddcb8bbb657382d4af81d5cdf9048" translate="yes" xml:space="preserve">
          <source>Extend your pattern's legibility by permitting whitespace and comments. Details in &lt;a href=&quot;#%2fx&quot;&gt;/x&lt;/a&gt;</source>
          <target state="translated">Ampl&amp;iacute;e la legibilidad de su patr&amp;oacute;n permitiendo espacios en blanco y comentarios. Detalles en &lt;a href=&quot;#%2fx&quot;&gt;/ x&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d44d230ea6fe0935f3b1482cff787c6266b3d3b" translate="yes" xml:space="preserve">
          <source>Extended &lt;code&gt;expect&lt;/code&gt; . This is a hash reference with four allowed keys, &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; , &lt;code&gt;reuse&lt;/code&gt; , and &lt;code&gt;talk&lt;/code&gt; .</source>
          <target state="translated">Extended &lt;code&gt;expect&lt;/code&gt; . Esta es una referencia de hash con cuatro claves permitidas, &lt;code&gt;mode&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; , &lt;code&gt;reuse&lt;/code&gt; y &lt;code&gt;talk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efc98640815d67fe8a62500e0c5368b07039dddc" translate="yes" xml:space="preserve">
          <source>Extended Bracketed Character Classes</source>
          <target state="translated">Clases de caracteres extendidos entre corchetes</target>
        </trans-unit>
        <trans-unit id="08ad66702e505f4acfeb7ef02a28aef2a444692f" translate="yes" xml:space="preserve">
          <source>Extended Grapheme Clusters (Logical characters)</source>
          <target state="translated">Cúmulos de grafemas extendidos (caracteres lógicos)</target>
        </trans-unit>
        <trans-unit id="b408f65a0dc6251545ba8a1cae00a09cef180586" translate="yes" xml:space="preserve">
          <source>Extended Patterns</source>
          <target state="translated">Patrones extendidos</target>
        </trans-unit>
        <trans-unit id="5acbb8b9cc41fceabb939a9490161468292c9ddc" translate="yes" xml:space="preserve">
          <source>Extended Unix Character. See ISO-2022.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57638586a902beff6d532df64e0c7307238ec6d1" translate="yes" xml:space="preserve">
          <source>Extended description and discussion of the program or functions, or the body of the documentation for man pages that document something else. If particularly long, it's a good idea to break this up into subsections &lt;code&gt;=head2&lt;/code&gt; directives like:</source>
          <target state="translated">Descripci&amp;oacute;n ampliada y discusi&amp;oacute;n del programa o funciones, o el cuerpo de la documentaci&amp;oacute;n para p&amp;aacute;ginas de manual que documentan algo m&amp;aacute;s. Si es particularmente largo, es una buena idea &lt;code&gt;=head2&lt;/code&gt; en subsecciones = directivas head2 como:</target>
        </trans-unit>
        <trans-unit id="e1eee637af0775263c15116e6a9a092f2dd1ed43" translate="yes" xml:space="preserve">
          <source>Extended integer, Perl style. This can be either an optional leading plus or minus sign, followed by a sequence of digits, or an octal string (a zero, optionally followed by '0', '1', .. '7'), or a hexadecimal string (&lt;code&gt;0x&lt;/code&gt; followed by '0' .. '9', 'a' .. 'f', case insensitive), or a binary string (&lt;code&gt;0b&lt;/code&gt; followed by a series of '0' and '1').</source>
          <target state="translated">Entero extendido, estilo Perl. Puede ser un signo m&amp;aacute;s o menos inicial opcional, seguido de una secuencia de d&amp;iacute;gitos, o una cadena octal (un cero, seguido opcionalmente por '0', '1', .. '7') o una cadena hexadecimal ( &lt;code&gt;0x&lt;/code&gt; seguido de '0' .. '9', 'a' .. 'f', no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas), o una cadena binaria ( &lt;code&gt;0b&lt;/code&gt; seguida de una serie de '0' y '1').</target>
        </trans-unit>
        <trans-unit id="7f8a27621bd1b83106ef3b26b5852eb1064f0fc5" translate="yes" xml:space="preserve">
          <source>Extended processing of command line options</source>
          <target state="translated">Procesamiento ampliado de las opciones de la línea de mando</target>
        </trans-unit>
        <trans-unit id="5db438e4dc97c2c680eb06228229b5484c1bdab3" translate="yes" xml:space="preserve">
          <source>Extending and Embedding Test::More</source>
          <target state="translated">Prueba de extensión e incrustación::Más</target>
        </trans-unit>
        <trans-unit id="8093cc064296db81eb0f5514264d7ee6d955b145" translate="yes" xml:space="preserve">
          <source>Extending it to csh patterns is left as an exercise to the reader.</source>
          <target state="translated">Extenderlo a los patrones de csh se deja como un ejercicio para el lector.</target>
        </trans-unit>
        <trans-unit id="4e50bd25f128e6a96c634dc99854b32ea96ab716" translate="yes" xml:space="preserve">
          <source>Extending your Extension</source>
          <target state="translated">Extendiendo su extensión</target>
        </trans-unit>
        <trans-unit id="4f8331dd312ba43f266e8a83a2d73cbbbec52b3f" translate="yes" xml:space="preserve">
          <source>Extension Layers</source>
          <target state="translated">Capas de extensión</target>
        </trans-unit>
        <trans-unit id="7e80c98508d4f62822b0432554091a536a41d48e" translate="yes" xml:space="preserve">
          <source>Extension Modules</source>
          <target state="translated">Módulos de extensión</target>
        </trans-unit>
        <trans-unit id="bd951e4e9e05b88a206b50063022ae727663d6c9" translate="yes" xml:space="preserve">
          <source>Extension based on</source>
          <target state="translated">Extensión basada en</target>
        </trans-unit>
        <trans-unit id="c6f2131d44d90eead55c47a30930686fccd53dcc" translate="yes" xml:space="preserve">
          <source>Extension based on .h and .c files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67518e197246f71238efe738515b0409050e6007" translate="yes" xml:space="preserve">
          <source>Extension based on _.h_ and _.c_ files</source>
          <target state="translated">Extensión basada en los archivos _.h_y _.c_.</target>
        </trans-unit>
        <trans-unit id="4711cbf045a57cbff83b6f9f271bd795fbb6b53d" translate="yes" xml:space="preserve">
          <source>Extension methods</source>
          <target state="translated">Métodos de extensión</target>
        </trans-unit>
        <trans-unit id="cce4d271f69e77a8f0acdb625f0076753f28069c" translate="yes" xml:space="preserve">
          <source>Extension modules are written in C (or a mix of Perl and C). They are usually dynamically loaded into Perl if and when you need them, but may also be linked in statically. Supported extension modules include Socket, Fcntl, and POSIX.</source>
          <target state="translated">Los módulos de extensión están escritos en C (o una mezcla de Perl y C).Por lo general se cargan dinámicamente en Perl si y cuando se necesitan,pero también se pueden enlazar de forma estática.Los módulos de extensión soportados incluyen Socket,Fcntl,y POSIX.</target>
        </trans-unit>
        <trans-unit id="60ffce38ec556078960f77c6601f9f4334d9b141" translate="yes" xml:space="preserve">
          <source>Extension modules can also hook into the Perl parser to define new kinds of compound statements. These are introduced by a keyword which the extension recognizes, and the syntax following the keyword is defined entirely by the extension. If you are an implementor, see &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot; in perlapi&lt;/a&gt; for the mechanism. If you are using such a module, see the module's documentation for details of the syntax that it defines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c486c72e2c41ab9d29ece60988b5356674e74f" translate="yes" xml:space="preserve">
          <source>Extension modules can also hook into the Perl parser to define new kinds of compound statements. These are introduced by a keyword which the extension recognizes, and the syntax following the keyword is defined entirely by the extension. If you are an implementor, see &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin in perlapi&lt;/a&gt; for the mechanism. If you are using such a module, see the module's documentation for details of the syntax that it defines.</source>
          <target state="translated">Los m&amp;oacute;dulos de extensi&amp;oacute;n tambi&amp;eacute;n pueden conectarse al analizador de Perl para definir nuevos tipos de declaraciones compuestas. Estos se introducen mediante una palabra clave que la extensi&amp;oacute;n reconoce, y la sintaxis que sigue a la palabra clave est&amp;aacute; definida completamente por la extensi&amp;oacute;n. Si es un implementador, consulte &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin en perlapi&lt;/a&gt; para conocer el mecanismo. Si est&amp;aacute; utilizando un m&amp;oacute;dulo de este tipo, consulte la documentaci&amp;oacute;n del m&amp;oacute;dulo para obtener detalles sobre la sintaxis que define.</target>
        </trans-unit>
        <trans-unit id="b6efb310f19bf6564f19089c880a0a0d87286db9" translate="yes" xml:space="preserve">
          <source>Extension modules can also hook into the Perl parser to define new kinds of keyword-headed expression. These may look like functions, but may also look completely different. The syntax following the keyword is defined entirely by the extension. If you are an implementor, see &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot; in perlapi&lt;/a&gt; for the mechanism. If you are using such a module, see the module's documentation for details of the syntax that it defines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17db2bf16378aa10db2e67a8c2600f3a25122fec" translate="yes" xml:space="preserve">
          <source>Extension modules can also hook into the Perl parser to define new kinds of keyword-headed expression. These may look like functions, but may also look completely different. The syntax following the keyword is defined entirely by the extension. If you are an implementor, see &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin in perlapi&lt;/a&gt; for the mechanism. If you are using such a module, see the module's documentation for details of the syntax that it defines.</source>
          <target state="translated">Los m&amp;oacute;dulos de extensi&amp;oacute;n tambi&amp;eacute;n pueden conectarse al analizador de Perl para definir nuevos tipos de expresi&amp;oacute;n encabezada por palabras clave. Estos pueden parecer funciones, pero tambi&amp;eacute;n pueden verse completamente diferentes. La sintaxis que sigue a la palabra clave est&amp;aacute; definida completamente por la extensi&amp;oacute;n. Si es un implementador, consulte &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin en perlapi&lt;/a&gt; para conocer el mecanismo. Si est&amp;aacute; utilizando un m&amp;oacute;dulo de este tipo, consulte la documentaci&amp;oacute;n del m&amp;oacute;dulo para obtener detalles sobre la sintaxis que define.</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="6e975483dac372a5ca9dfd4b8e5e57b37a1180dd" translate="yes" xml:space="preserve">
          <source>Extensions and XS are, in theory, buildable by anyone using free tools. In practice, many don't, as users of the Acorn platform are used to binary distributions. MakeMaker does run, but no available make currently copes with MakeMaker's makefiles; even if and when this should be fixed, the lack of a Unix-like shell will cause problems with makefile rules, especially lines of the form &lt;code&gt;cd
sdbm &amp;amp;&amp;amp; make all&lt;/code&gt; , and anything using quoting.</source>
          <target state="translated">Las extensiones y XS son, en teor&amp;iacute;a, construibles por cualquiera que use herramientas gratuitas. En la pr&amp;aacute;ctica, muchos no lo hacen, ya que los usuarios de la plataforma Acorn est&amp;aacute;n acostumbrados a distribuciones binarias. MakeMaker se ejecuta, pero ning&amp;uacute;n make disponible actualmente hace frente a los archivos MAKE de MakeMaker; incluso si esto se debe arreglar, la falta de un shell similar a Unix causar&amp;aacute; problemas con las reglas de los &lt;code&gt;cd sdbm &amp;amp;&amp;amp; make all&lt;/code&gt; MAKE, especialmente las l&amp;iacute;neas de la forma cd sdbm &amp;amp;&amp;amp; make all , y cualquier cosa que use comillas.</target>
        </trans-unit>
        <trans-unit id="23912b80f63053ec1a446ffda41e3d5c9d541b79" translate="yes" xml:space="preserve">
          <source>Extensions and XS are, in theory, buildable by anyone using free tools. In practice, many don't, as users of the Acorn platform are used to binary distributions. MakeMaker does run, but no available make currently copes with MakeMaker's makefiles; even if and when this should be fixed, the lack of a Unix-like shell will cause problems with makefile rules, especially lines of the form &lt;code&gt;cd sdbm &amp;amp;&amp;amp; make all&lt;/code&gt;, and anything using quoting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8be19ac765682f953ef7dfbb23fec79e7869c76" translate="yes" xml:space="preserve">
          <source>Extensions may be built either using the contents of the perl source directory tree or from the installed perl library. The recommended way is to build extensions after you have run 'make install' on perl itself. You can do that in any directory on your hard disk that is not below the perl source tree. The support for extensions below the ext directory of the perl distribution is only good for the standard extensions that come with perl.</source>
          <target state="translated">Las extensiones pueden construirse utilizando el contenido del árbol de directorios de fuentes de perl o de la biblioteca de perl instalada.La forma recomendada es construir las extensiones después de haber ejecutado 'make install' en el propio perl.Puedes hacerlo en cualquier directorio de tu disco duro que no esté por debajo del árbol de directorios de perl.El soporte para extensiones por debajo del directorio ext de la distribución de perl sólo es bueno para las extensiones estándar que vienen con perl.</target>
        </trans-unit>
        <trans-unit id="fd1105050ae42d352634f9a22fd2cfbe7c3340ac" translate="yes" xml:space="preserve">
          <source>Extensions.U</source>
          <target state="translated">Extensions.U</target>
        </trans-unit>
        <trans-unit id="8e77bd8de5230e7d94a54f34b54e4ee866ebaf07" translate="yes" xml:space="preserve">
          <source>External Subroutines (XS)</source>
          <target state="translated">Subrutinas externas (XS)</target>
        </trans-unit>
        <trans-unit id="fe58f6fb5713c9d9970ba20c8c7e99ac12d8ebd1" translate="yes" xml:space="preserve">
          <source>External scripts may be called by their basename. Perl will try the same extensions as when processing &lt;b&gt;-S&lt;/b&gt; command-line switch.</source>
          <target state="translated">Los scripts externos se pueden llamar por su nombre de base. Perl probar&amp;aacute; las mismas extensiones que cuando procesa el cambio de l&amp;iacute;nea de comandos &lt;b&gt;-S&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ac98225101654b1670f972aaf6165f07d86a4dc2" translate="yes" xml:space="preserve">
          <source>External scripts starting with &lt;code&gt;#!&lt;/code&gt; or &lt;code&gt;extproc &lt;/code&gt; will be executed directly, without calling the shell, by calling the program specified on the rest of the first line.</source>
          <target state="translated">Scripts externos que comienzan con &lt;code&gt;#!&lt;/code&gt; o &lt;code&gt;extproc &lt;/code&gt; se ejecutar&amp;aacute; directamente, sin llamar al shell, llamando al programa especificado en el resto de la primera l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="26bf182753057236397eb723fd4891db5f117a3e" translate="yes" xml:space="preserve">
          <source>External subroutines (XSUBs) that maintain their own global state may not work correctly. Such XSUBs will either need to maintain locks to protect simultaneous access to global data from different pseudo-processes, or maintain all their state on the Perl symbol table, which is copied naturally when fork() is called. A callback mechanism that provides extensions an opportunity to clone their state will be provided in the near future.</source>
          <target state="translated">Las subrutinas externas (XSUB)que mantienen su propio estado global pueden no funcionar correctamente.Tales XSUBs necesitarán mantener bloqueos para proteger el acceso simultáneo a los datos globales de diferentes pseudo-procesos,o mantener todo su estado en la tabla de símbolos de Perl,que se copia naturalmente cuando se llama a fork().En un futuro próximo se proporcionará un mecanismo de devolución de llamada que proporcionará a las extensiones la oportunidad de clonar su estado.</target>
        </trans-unit>
        <trans-unit id="fc2399f06f4a8800f1e9f8c63e75b404573137c6" translate="yes" xml:space="preserve">
          <source>Extname</source>
          <target state="translated">Extname</target>
        </trans-unit>
        <trans-unit id="38bd9c2b38d963363075f657df2649a5a865d34f" translate="yes" xml:space="preserve">
          <source>Extra RECNO Methods</source>
          <target state="translated">Métodos extra de RECNO</target>
        </trans-unit>
        <trans-unit id="080170d5c582217b07d6b630ccf123361bce391b" translate="yes" xml:space="preserve">
          <source>Extra arguments given to &lt;code&gt;subtest&lt;/code&gt; are passed to the callback. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f428c72b95856a35d58cb6523d1d9bf0d7e2e713" translate="yes" xml:space="preserve">
          <source>Extra debugging of how tries execute.</source>
          <target state="translated">Depuración extra de cómo se ejecutan los intentos.</target>
        </trans-unit>
        <trans-unit id="642e34f2d2485598d6a1289983f49ac33667a504" translate="yes" xml:space="preserve">
          <source>Extra debugging options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0f7f868e14cfcf2986def25df2bc4196200327" translate="yes" xml:space="preserve">
          <source>Extra layers can be inserted to process the data as it flows through. This was the driving need for including the scheme in perl 5.7.0+ - we needed a mechanism to allow data to be translated between perl's internal encoding (conceptually at least Unicode as UTF-8), and the &quot;native&quot; format used by the system. This is provided by the &quot;:encoding(xxxx)&quot; layer which typically sits above the buffering layer.</source>
          <target state="translated">Se pueden insertar capas adicionales para procesar los datos a medida que fluyen.Esta fue la necesidad impulsora para incluir el esquema en perl 5.7.0+-necesitábamos un mecanismo que permitiera traducir los datos entre la codificación interna de perl (conceptualmente al menos Unicode como UTF-8),y el formato &quot;nativo&quot; utilizado por el sistema.Esto es proporcionado por la capa &quot;:codificación(xxxx)&quot;,que normalmente se encuentra por encima de la capa de búfer.</target>
        </trans-unit>
        <trans-unit id="678bd1bdccc15e114b793e04d18d631885eca63c" translate="yes" xml:space="preserve">
          <source>Extract delimited text sequences from strings.</source>
          <target state="translated">Extraer secuencias de texto delimitadas de las cadenas.</target>
        </trans-unit>
        <trans-unit id="7254948dbbd318f1e97d0a1eeb40a1eb2d41c79b" translate="yes" xml:space="preserve">
          <source>Extract it like this</source>
          <target state="translated">Extráelo así</target>
        </trans-unit>
        <trans-unit id="05a2f0e61aa11822c7799b10cf19bd9f231551af" translate="yes" xml:space="preserve">
          <source>Extract it to a spaceless path but not into the perl build source. Don't extract it into the same directory as celib. Make a copy of the &quot;wince-arm-pocket-wce300&quot; folder and rename the copy to &quot;wince-arm-pocket-wce400&quot;. This is a hack so we can build a CE 4.0 binary by linking in CE 3.0 ARM asm; the linker doesn't care. Windows Mobile/WinCE are backwards compatible with machine code like Desktop Windows.</source>
          <target state="translated">Extráelo a un camino sin espacio pero no a la fuente de construcción de perlas.No lo extraigas en el mismo directorio que el celibato.Haz una copia de la carpeta &quot;wince-arm-pocket-wce300&quot; y renombra la copia a &quot;wince-arm-pocket-wce400&quot;.Esto es un hack para que podamos construir un binario CE 4.0 enlazándolo en CE 3.0 ARM asm;al enlazador no le importa.Windows Mobile/WinCE son compatibles con el código de máquina,como el Windows de escritorio.</target>
        </trans-unit>
        <trans-unit id="7749ca362c5039000e30519eec908556e69a793e" translate="yes" xml:space="preserve">
          <source>Extract it to a spaceless path but not into the perl build source. I call this directory &quot;celib-palm-3.0&quot; but in the GitHub snapshot it will be called &quot;celib-master&quot;. Make a copy of the &quot;wince-arm-pocket-wce300-release&quot; folder and rename the copy to &quot;wince-arm-pocket-wce400&quot;. This is a hack so we can build a CE 4.0 binary by linking in CE 3.0 ARM asm; the linker doesn't care. Windows Mobile/WinCE are backwards compatible with machine code like Desktop Windows.</source>
          <target state="translated">Extráelo a un camino sin espacio pero no a la fuente de construcción de perlas.Llamo a este directorio &quot;celib-palm-3.0&quot; pero en la instantánea de GitHub se llamará &quot;celib-master&quot;.Haz una copia de la carpeta &quot;wince-arm-pocket-wce300-release&quot; y renombra la copia a &quot;wince-arm-pocket-wce400&quot;.Este es un hack para que podamos construir un binario CE 4.0 enlazándolo en CE 3.0 ARM asm;al enlazador no le importa.Windows Mobile/WinCE son compatibles con el código de máquina,como el Windows de escritorio.</target>
        </trans-unit>
        <trans-unit id="6a5aa60c177bb5d75235a8c111f9e4b6cea8ac1c" translate="yes" xml:space="preserve">
          <source>Extract selected sections of POD from input</source>
          <target state="translated">Extraer secciones seleccionadas de POD de la entrada</target>
        </trans-unit>
        <trans-unit id="48348ed6315b959bdb6c19c5f46693033fe9a289" translate="yes" xml:space="preserve">
          <source>Extract this object, optionally to an alternative name.</source>
          <target state="translated">Extraer este objeto,opcionalmente a un nombre alternativo.</target>
        </trans-unit>
        <trans-unit id="700d36da6316894ea4553b7a4764bc2e9b2ffb63" translate="yes" xml:space="preserve">
          <source>Extracted from core distribution for publishing on the CPAN by S&amp;eacute;bastien Aperghis-Tramoni &amp;lt;sebastien (at) aperghis.net&amp;gt;.</source>
          <target state="translated">Extra&amp;iacute;do de la distribuci&amp;oacute;n principal para su publicaci&amp;oacute;n en el CPAN por S&amp;eacute;bastien Aperghis-Tramoni &amp;lt;sebastien (at) aperghis.net&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="8d01377458bb164941cbab45b0257bce76f2aaf1" translate="yes" xml:space="preserve">
          <source>Extracting Version Numbers from Perl Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33342b226b64c6cbc40d180e3ba186ad44a5f06f" translate="yes" xml:space="preserve">
          <source>Extracting matches</source>
          <target state="translated">Extracción de cerillas</target>
        </trans-unit>
        <trans-unit id="16e9f64b08e09da9325dc889d58611a8376664da" translate="yes" xml:space="preserve">
          <source>Extracts a substring out of EXPR and returns it. First character is at offset zero. If OFFSET is negative, starts that far back from the end of the string. If LENGTH is omitted, returns everything through the end of the string. If LENGTH is negative, leaves that many characters off the end of the string.</source>
          <target state="translated">Extrae una subcadena de la EXPR y la devuelve.El primer carácter está en el offset cero.Si el OFFSET es negativo,comienza tan atrás del final de la cadena.Si LENGTH se omite,devuelve todo hasta el final de la cadena.Si LENGTH es negativo,deja ese número de caracteres al final de la cadena.</target>
        </trans-unit>
        <trans-unit id="7e02013b2bc8b8b15efdd928d9932b054c7620a2" translate="yes" xml:space="preserve">
          <source>Extracts the contents of the tar file. The first argument can either be the name of the tar file to create or a reference to an open file handle (e.g. a GLOB reference). All relative paths in the tar file will be created underneath the current working directory.</source>
          <target state="translated">Extrae el contenido del archivo de alquitrán.El primer argumento puede ser el nombre del archivo tar a crear o una referencia a un manejador de archivo abierto (por ejemplo,una referencia GLOB).Todas las rutas relativas del archivo tar se crearán bajo el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="885f6e090c877a36591aaa902dd00c6dd7b9efec" translate="yes" xml:space="preserve">
          <source>Extras.U</source>
          <target state="translated">Extras.U</target>
        </trans-unit>
        <trans-unit id="f680827447f98b26a0af418fbc0405801d7796f6" translate="yes" xml:space="preserve">
          <source>Extremely high code points were never specified in any standard, and require an extension to UTF-8 to express, which Perl does. It is likely that programs written in something other than Perl would not be able to read files that contain these; nor would Perl understand files written by something that uses a different extension. For these reasons, there is a separate set of flags that can warn and/or disallow these extremely high code points, even if other above-Unicode ones are accepted. They are the &lt;code&gt;UNICODE_WARN_PERL_EXTENDED&lt;/code&gt; and &lt;code&gt;UNICODE_DISALLOW_PERL_EXTENDED&lt;/code&gt; flags. For more information see &lt;a href=&quot;#UTF8_GOT_PERL_EXTENDED&quot;&gt;&quot;&lt;code&gt;UTF8_GOT_PERL_EXTENDED&lt;/code&gt;&quot;&lt;/a&gt;. Of course &lt;code&gt;UNICODE_DISALLOW_SUPER&lt;/code&gt; will treat all above-Unicode code points, including these, as malformations. (Note that the Unicode standard considers anything above 0x10FFFF to be illegal, but there are standards predating it that allow up to 0x7FFF_FFFF (2**31 -1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a686562152550b10f6394ec5f13fc276de5710" translate="yes" xml:space="preserve">
          <source>Extremely high code points were never specified in any standard, and require an extension to UTF-8 to express, which Perl does. It is likely that programs written in something other than Perl would not be able to read files that contain these; nor would Perl understand files written by something that uses a different extension. For these reasons, there is a separate set of flags that can warn and/or disallow these extremely high code points, even if other above-Unicode ones are accepted. They are the &lt;code&gt;UTF8_WARN_PERL_EXTENDED&lt;/code&gt; and &lt;code&gt;UTF8_DISALLOW_PERL_EXTENDED&lt;/code&gt; flags. For more information see &lt;a href=&quot;#UTF8_GOT_PERL_EXTENDED&quot;&gt;&quot;&lt;code&gt;UTF8_GOT_PERL_EXTENDED&lt;/code&gt;&quot;&lt;/a&gt;. Of course &lt;code&gt;UTF8_DISALLOW_SUPER&lt;/code&gt; will treat all above-Unicode code points, including these, as malformations. (Note that the Unicode standard considers anything above 0x10FFFF to be illegal, but there are standards predating it that allow up to 0x7FFF_FFFF (2**31 -1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f25b6a320c5687fd271f37b1ee97e7d69228f2" translate="yes" xml:space="preserve">
          <source>Extremely similar to open2(), open3() spawns the given $cmd and connects CHLD_OUT for reading from the child, CHLD_IN for writing to the child, and CHLD_ERR for errors. If CHLD_ERR is false, or the same file descriptor as CHLD_OUT, then STDOUT and STDERR of the child are on the same filehandle (this means that an autovivified lexical cannot be used for the STDERR filehandle, see SYNOPSIS). The CHLD_IN will have autoflush turned on.</source>
          <target state="translated">Extremadamente similar a open2(),open3()genera el $cmd dado y conecta CHLD_OUT para leer del niño,CHLD_IN para escribir al niño,y CHLD_ERR para los errores.Si CHLD_ERR es falso,o el mismo descriptor de archivo que CHLD_OUT,entonces STDOUT y STDERR del niño están en el mismo filehandle (esto significa que un léxico autovivificado no puede ser usado para el filehandle STDERR,ver SINOPSIS).El CHLD_IN tendrá activada la descarga automática.</target>
        </trans-unit>
        <trans-unit id="92eb55a6ceeed67d784ed90769a2d53fa3c77acb" translate="yes" xml:space="preserve">
          <source>Extremely similar to open2(), open3() spawns the given command and connects $chld_out for reading from the child, $chld_in for writing to the child, and $chld_err for errors. If $chld_err is false, or the same file descriptor as $chld_out, then STDOUT and STDERR of the child are on the same filehandle. This means that an autovivified lexical cannot be used for the STDERR filehandle, but gensym from &lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt; can be used to vivify a new glob reference, see &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt;. The $chld_in will have autoflush turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2122187dffca50e0b79b010ea05ebfa6a4d1181" translate="yes" xml:space="preserve">
          <source>Extshortname</source>
          <target state="translated">Extshortname</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="ade1d38216915151ba7db0ce62f3199d7bf8e743" translate="yes" xml:space="preserve">
          <source>F:/bin</source>
          <target state="translated">F:/bin</target>
        </trans-unit>
        <trans-unit id="16a6231368962f338e8f37dfc91ca30753938154" translate="yes" xml:space="preserve">
          <source>FACET FIELDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="3f8b9d0d8f1563ce34d8f76abc9faf53ac55bb32" translate="yes" xml:space="preserve">
          <source>FAQs, tricks and tips for &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65569c995a4785c8ee0ddac72f9a5d5496ad6056" translate="yes" xml:space="preserve">
          <source>FAQs, tricks and tips for &lt;code&gt;ExtUtils::MakeMaker&lt;/code&gt; .</source>
          <target state="translated">Preguntas frecuentes, trucos y consejos para &lt;code&gt;ExtUtils::MakeMaker&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dec5a3344b6b1da0ebe322bd0a2dfc8eb4528955" translate="yes" xml:space="preserve">
          <source>FATAL errors will cause the program to halt (&lt;code&gt;croak&lt;/code&gt; ), since the problem is so severe that it would be dangerous to continue. (This can always be trapped with &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, but it's not a good idea. Under the circumstances, dying is the best thing to do).</source>
          <target state="translated">Los errores FATAL har&amp;aacute;n que el programa se detenga ( &lt;code&gt;croak&lt;/code&gt; ), ya que el problema es tan grave que ser&amp;iacute;a peligroso continuar. (Esto siempre puede quedar atrapado con &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , pero no es una buena idea. Dadas las circunstancias, morir es lo mejor que se puede hacer).</target>
        </trans-unit>
        <trans-unit id="6b6f2d1eafcc9e88114df946d6ac19bc0f376a0c" translate="yes" xml:space="preserve">
          <source>FATAL errors will cause the program to halt (&lt;code&gt;croak&lt;/code&gt;), since the problem is so severe that it would be dangerous to continue. (This can always be trapped with &lt;code&gt;eval&lt;/code&gt;, but it's not a good idea. Under the circumstances, dying is the best thing to do).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69754788a4c6beb4ec0ff140aa5c158dca3bfa2a" translate="yes" xml:space="preserve">
          <source>FB_CROAK</source>
          <target state="translated">FB_CROAK</target>
        </trans-unit>
        <trans-unit id="b626cf33b4a041c5ce4d521b41bf3a7b58bd485d" translate="yes" xml:space="preserve">
          <source>FB_DEFAULT</source>
          <target state="translated">FB_DEFAULT</target>
        </trans-unit>
        <trans-unit id="757934dd26eb29cb3152a5f387ec3d2edb168405" translate="yes" xml:space="preserve">
          <source>FB_PERLQQ FB_HTMLCREF FB_XMLCREF</source>
          <target state="translated">FB_PERLQQ FB_HTMLCREF FB_XMLCREF</target>
        </trans-unit>
        <trans-unit id="0a74cbd8c5cb0982de1a9bcfa6850e000455346d" translate="yes" xml:space="preserve">
          <source>FB_QUIET</source>
          <target state="translated">FB_QUIET</target>
        </trans-unit>
        <trans-unit id="0dd7f31fe0e5f67c669f4440fb273121e4c806e4" translate="yes" xml:space="preserve">
          <source>FB_WARN</source>
          <target state="translated">FB_WARN</target>
        </trans-unit>
        <trans-unit id="8e8b3f3bb48e9f1566f046dd9abec5d58654f4a5" translate="yes" xml:space="preserve">
          <source>FCNTL</source>
          <target state="translated">FCNTL</target>
        </trans-unit>
        <trans-unit id="47dadeeeb2bc9f5421eaa6bbbe50810a393d4c66" translate="yes" xml:space="preserve">
          <source>FEATURE BUNDLES</source>
          <target state="translated">PAQUETES DE CARACTERÍSTICAS</target>
        </trans-unit>
        <trans-unit id="ec8e87c2f7d4da8aaca114d6270ea98cb522428f" translate="yes" xml:space="preserve">
          <source>FEATURES = less-&amp;gt;of()</source>
          <target state="translated">CARACTER&amp;Iacute;STICAS = menos-&amp;gt; de ()</target>
        </trans-unit>
        <trans-unit id="489edc9160737f1f5321c8439e0d90f85d95108c" translate="yes" xml:space="preserve">
          <source>FEEDBACK</source>
          <target state="translated">FEEDBACK</target>
        </trans-unit>
        <trans-unit id="a721f50a7a690a4a15e9a37c997197a6892fe7c1" translate="yes" xml:space="preserve">
          <source>FETCH</source>
          <target state="translated">FETCH</target>
        </trans-unit>
        <trans-unit id="a36834b47beb7b8fa9cc177881caffbc9273b059" translate="yes" xml:space="preserve">
          <source>FETCH this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b96ae35c4cdaf0d5015e044df05ffbf062155e" translate="yes" xml:space="preserve">
          <source>FETCH this, index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0417b5bc981c089adeff175d8d240c193a1c5f" translate="yes" xml:space="preserve">
          <source>FETCH this, key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c895bf1dc50f257bb516434bac2edbda6ee48875" translate="yes" xml:space="preserve">
          <source>FETCHSIZE and STORESIZE are used to provide &lt;code&gt;$#array&lt;/code&gt; and equivalent &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; access.</source>
          <target state="translated">FETCHSIZE y STORESIZE se utilizan para proporcionar &lt;code&gt;$#array&lt;/code&gt; y acceso &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; equivalente (@array) .</target>
        </trans-unit>
        <trans-unit id="9a55d444e2f42ff3332a7b20892e03b42c0dde45" translate="yes" xml:space="preserve">
          <source>FETCHSIZE and STORESIZE are used to provide &lt;code&gt;$#array&lt;/code&gt; and equivalent &lt;code&gt;scalar(@array)&lt;/code&gt; access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655cf3f775d1131bb1cd13d50dcc9384058c7e74" translate="yes" xml:space="preserve">
          <source>FETCHSIZE returned a negative value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdae04b785f3e9a65f525eb253a77d31047f28b" translate="yes" xml:space="preserve">
          <source>FETCHSIZE this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845bc45b1b1e5326c244df2ee7648f3ddd776170" translate="yes" xml:space="preserve">
          <source>FETCH_</source>
          <target state="translated">FETCH_</target>
        </trans-unit>
        <trans-unit id="05cf9a52ee9997400d322323b2f4f5f087799c04" translate="yes" xml:space="preserve">
          <source>FIELDS</source>
          <target state="translated">FIELDS</target>
        </trans-unit>
        <trans-unit id="07c257b16606b468b4287bbfd069963fcb6c04a5" translate="yes" xml:space="preserve">
          <source>FIFO</source>
          <target state="translated">FIFO</target>
        </trans-unit>
        <trans-unit id="3f799155fde6a8df0e53471e8ebc22e51aee5205" translate="yes" xml:space="preserve">
          <source>FIFO (named pipe).</source>
          <target state="translated">FIFO (nombre de la pipa).</target>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="188699dbc4f938b6c1d493b9b4e73beaae160b4d" translate="yes" xml:space="preserve">
          <source>FILE may contain Unicode characters outside the system codepage. Once the file has been created you can use Win32::GetANSIPathName() to get a name that can be passed to system calls and external programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1037b28078b931a2bcf7381d1504e913f7749ea4" translate="yes" xml:space="preserve">
          <source>FILEGV</source>
          <target state="translated">FILEGV</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
