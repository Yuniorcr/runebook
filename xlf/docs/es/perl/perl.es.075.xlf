<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="9a459f25776e773a64e295d1cb084a05b171699e" translate="yes" xml:space="preserve">
          <source>any function in the DLL, just the act of loading this DLL will reset your flags. What is worse, the same compiler was used to compile some HOOK DLLs. Given that HOOK dlls are executed in the context of</source>
          <target state="translated">cualquier función en el DLL,sólo el hecho de cargar este DLL reiniciará sus banderas.Lo que es peor,el mismo compilador se usó para compilar algunas DLL de HOOK.Dado que las dlls de HOOK se ejecutan en el contexto de</target>
        </trans-unit>
        <trans-unit id="e19bd065bb47fc295eafe4767c2de6b337ea119e" translate="yes" xml:space="preserve">
          <source>any leading &lt;code&gt;=&lt;/code&gt; prefix).</source>
          <target state="translated">cualquier inicial &lt;code&gt;=&lt;/code&gt; prefijo).</target>
        </trans-unit>
        <trans-unit id="8b084990d915b056c34e7529bc336db861040427" translate="yes" xml:space="preserve">
          <source>any of the loaded</source>
          <target state="translated">cualquiera de los cargados</target>
        </trans-unit>
        <trans-unit id="78e16822f2fffca52176d34705897fa841dd6f90" translate="yes" xml:space="preserve">
          <source>any one</source>
          <target state="translated">cualquiera</target>
        </trans-unit>
        <trans-unit id="f637daefbefeda9e4ed60d0501fba49913559846" translate="yes" xml:space="preserve">
          <source>any optional parameters that need to be sent to the filter. See the encode filter for an example of a module that uses parameters.</source>
          <target state="translated">cualquier parámetro opcional que necesite ser enviado al filtro.Véase el filtro de codificación para un ejemplo de un módulo que utiliza parámetros.</target>
        </trans-unit>
        <trans-unit id="42323bfecca119f546c25856e4f9be955460919c" translate="yes" xml:space="preserve">
          <source>any previous content in &lt;code&gt;$tar&lt;/code&gt; !</source>
          <target state="translated">cualquier contenido anterior en &lt;code&gt;$tar&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="3afb922a587bb71f0547be9515aa4d3cd4d7545c" translate="yes" xml:space="preserve">
          <source>any previous content in &lt;code&gt;$tar&lt;/code&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9eb4e932e9bcc3bc1ece409a17107d5c50fed04" translate="yes" xml:space="preserve">
          <source>any starting with &lt;code&gt;(&lt;/code&gt;</source>
          <target state="translated">cualquiera que comience con &lt;code&gt;(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6a65efb0501666a4c913ea32a973da114f0ead8" translate="yes" xml:space="preserve">
          <source>any subroutine called from within that block</source>
          <target state="translated">cualquier subrutina llamada desde dentro de ese bloque</target>
        </trans-unit>
        <trans-unit id="d75735d4f2964b91ad9a3f126838a4950222c638" translate="yes" xml:space="preserve">
          <source>any_dup</source>
          <target state="translated">any_dup</target>
        </trans-unit>
        <trans-unit id="035563ded8fdfc83ecef543e5bd6ec441f8b116a" translate="yes" xml:space="preserve">
          <source>anyinflate $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">anyinflate $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="8867c88b56e0bfb82cffaf15a66bc8d107d6754a" translate="yes" xml:space="preserve">
          <source>anything</source>
          <target state="translated">anything</target>
        </trans-unit>
        <trans-unit id="da86b2350d7133a0b9455e2c4cae962d691712b0" translate="yes" xml:space="preserve">
          <source>anything at all</source>
          <target state="translated">cualquier cosa</target>
        </trans-unit>
        <trans-unit id="bd4f0e49dee0e1f5509e5161f80bbbbf9009690f" translate="yes" xml:space="preserve">
          <source>anything by default (because you don't want to surprise your users... badly)</source>
          <target state="translated">cualquier cosa por defecto (porque no quieres sorprender a tus usuarios...mal)</target>
        </trans-unit>
        <trans-unit id="3c305d671dd1d39b0b5796b00915162f7f25d581" translate="yes" xml:space="preserve">
          <source>anything else</source>
          <target state="translated">cualquier otra cosa</target>
        </trans-unit>
        <trans-unit id="cad4d6d244c26510fb5dde9917efd285d64788e5" translate="yes" xml:space="preserve">
          <source>anything you don't need to (because less is more)</source>
          <target state="translated">cualquier cosa que no necesites (porque menos es más)</target>
        </trans-unit>
        <trans-unit id="faa4dad3e5b02731169057ea528c1d5f84a048de" translate="yes" xml:space="preserve">
          <source>anyuncompress $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">anyuncompress $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="66623d62c46dc1f443a91e7a202ce54689d760e0" translate="yes" xml:space="preserve">
          <source>anyway.</source>
          <target state="translated">anyway.</target>
        </trans-unit>
        <trans-unit id="112c2a063a0f6f3f9ba00da0de16624f951645e8" translate="yes" xml:space="preserve">
          <source>anywhere</source>
          <target state="translated">anywhere</target>
        </trans-unit>
        <trans-unit id="62eb0db178518a8376b23676c2639eb2732c0be8" translate="yes" xml:space="preserve">
          <source>apache</source>
          <target state="translated">apache</target>
        </trans-unit>
        <trans-unit id="1799678e58e199319930363fb4349a7bda81809f" translate="yes" xml:space="preserve">
          <source>apop ( [ USER [, PASS ]] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55438ea85d41dfeeb55bbf581de97d7421de7539" translate="yes" xml:space="preserve">
          <source>appe ( FILE )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e21d9b9cba5dad74e5e372580bff4069832094" translate="yes" xml:space="preserve">
          <source>appear as parameters to the Perl function. With the exception of &lt;code&gt;OUT&lt;/code&gt; -parameters, these parameters are converted to the corresponding C type, then pointers to these data are given as arguments to the C function. It is expected that the C function will write through these pointers.</source>
          <target state="translated">aparecen como par&amp;aacute;metros de la funci&amp;oacute;n Perl. Con la excepci&amp;oacute;n de los par&amp;aacute;metros &lt;code&gt;OUT&lt;/code&gt; , estos par&amp;aacute;metros se convierten al tipo C correspondiente, luego los punteros a estos datos se dan como argumentos a la funci&amp;oacute;n C. Se espera que la funci&amp;oacute;n C escriba a trav&amp;eacute;s de estos punteros.</target>
        </trans-unit>
        <trans-unit id="cce733e2e52d6811d59f9e92bcd7453e9f7358f6" translate="yes" xml:space="preserve">
          <source>appear as parameters to the Perl function. With the exception of &lt;code&gt;OUT&lt;/code&gt;-parameters, these parameters are converted to the corresponding C type, then pointers to these data are given as arguments to the C function. It is expected that the C function will write through these pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d201fd82f39662031e729d27fec76771838d92" translate="yes" xml:space="preserve">
          <source>appear in a package's &lt;code&gt;@ISA&lt;/code&gt; variable.</source>
          <target state="translated">aparecen en la variable &lt;code&gt;@ISA&lt;/code&gt; de un paquete .</target>
        </trans-unit>
        <trans-unit id="ef5924a72dac5871eee278d0ded5dbd03cc1c19b" translate="yes" xml:space="preserve">
          <source>appear within the tagged text.</source>
          <target state="translated">aparecen dentro del texto etiquetado.</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="b088a1c828c8057744dd034bb109abe70bca297e" translate="yes" xml:space="preserve">
          <source>append ( LOCAL_FILE [, REMOTE_FILE ] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c344e204efc94ce51191da11f8da619348e0f5" translate="yes" xml:space="preserve">
          <source>append_utf8_from_native_byte</source>
          <target state="translated">append_utf8_from_native_byte</target>
        </trans-unit>
        <trans-unit id="d2005cc206ccbfdedf2be43a200cb050c538bdb5" translate="yes" xml:space="preserve">
          <source>application</source>
          <target state="translated">application</target>
        </trans-unit>
        <trans-unit id="8989d4047c8e0af6470e1a43e2fe5c667bbe4c9e" translate="yes" xml:space="preserve">
          <source>application to watch the OutputDebugString() output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="2506d0416452ba5f112bf6a2e2c408e20bd43027" translate="yes" xml:space="preserve">
          <source>apply_switch</source>
          <target state="translated">apply_switch</target>
        </trans-unit>
        <trans-unit id="3802a68da20f566d7fb269f15c34508be3676bf9" translate="yes" xml:space="preserve">
          <source>approximately</source>
          <target state="translated">approximately</target>
        </trans-unit>
        <trans-unit id="23d8e0156062165ca3736e9f1e364d414e1d82d5" translate="yes" xml:space="preserve">
          <source>ar</source>
          <target state="translated">ar</target>
        </trans-unit>
        <trans-unit id="cc11ed913f2110bdc6eb71426a4cc5c12f656f9b" translate="yes" xml:space="preserve">
          <source>arch and version subdirs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8aca17f8dc62636fe56d26d991498181502da89" translate="yes" xml:space="preserve">
          <source>arch_check</source>
          <target state="translated">arch_check</target>
        </trans-unit>
        <trans-unit id="dd3193bba56c9212c61123bcc85fbecc046c671e" translate="yes" xml:space="preserve">
          <source>arch_check (override)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f380cbcd9a79a4eadf3e8b625bfe9df4ee115aec" translate="yes" xml:space="preserve">
          <source>architecture</source>
          <target state="translated">architecture</target>
        </trans-unit>
        <trans-unit id="a07f43054e7ab8b8f32e28994504a2df3069bad6" translate="yes" xml:space="preserve">
          <source>archive if the crypt() function is not defined in the standard C library. It is up to the Makefile to use this.</source>
          <target state="translated">si la función crypt()no está definida en la biblioteca estándar de C.Depende del Makefile usar esto.</target>
        </trans-unit>
        <trans-unit id="aec82fb60d740fa3b0993aec0e9c124d53bbc3a4" translate="yes" xml:space="preserve">
          <source>archive member</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e69b8fc70a5737cecc8b69d72e0d8f7c8a1ae3a" translate="yes" xml:space="preserve">
          <source>archive member name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1c532116fdc684b527b5d921d28bf41b305310" translate="yes" xml:space="preserve">
          <source>archive members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ad6ee2f5499bff96b61a63b2efa0ea3981a7e" translate="yes" xml:space="preserve">
          <source>archlib.U</source>
          <target state="translated">archlib.U</target>
        </trans-unit>
        <trans-unit id="72b2a70ac7a2415a83e5898d42c24867ef6c76fb" translate="yes" xml:space="preserve">
          <source>archname.U</source>
          <target state="translated">archname.U</target>
        </trans-unit>
        <trans-unit id="d5067cf69455114e2110970315849096fa94f0fd" translate="yes" xml:space="preserve">
          <source>archname/</source>
          <target state="translated">archname/</target>
        </trans-unit>
        <trans-unit id="5f9e5802bbabc71f9275fccf122f5a52b8599f12" translate="yes" xml:space="preserve">
          <source>are</source>
          <target state="translated">are</target>
        </trans-unit>
        <trans-unit id="8dc07e958ba7e04dfd2e47ec804fc360ac6b560f" translate="yes" xml:space="preserve">
          <source>are 1, 224, 256, 384, 512, 512224, or 512256. It's also possible to use common string representations of the algorithm (e.g. &quot;sha256&quot;, &quot;SHA-384&quot;). If the argument is missing, SHA-1 will be used by default.</source>
          <target state="translated">son 1,224,256,384,512,512224,o 512256.También es posible utilizar representaciones de cadenas comunes del algoritmo (por ejemplo,&quot;sha256&quot;,&quot;SHA-384&quot;).Si falta el argumento,se usará SHA-1 por defecto.</target>
        </trans-unit>
        <trans-unit id="636601f419388a6153a945c6b4c7740fff9805ee" translate="yes" xml:space="preserve">
          <source>are IANA-registered &lt;code&gt;charset&lt;/code&gt;s. See [RFC 2781] for details. Jungshik Shin reports that UTF-16 with a BOM is well accepted by MS IE 5/6 and NS 4/6. Beware however that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e8825648e40951cf73eb803bb3033952b8d48a" translate="yes" xml:space="preserve">
          <source>are a collection of character code sets from the International Organization for Standardization (ISO), each of which adds characters to the ASCII set that are typically found in various languages, many of which are based on the Roman, or Latin, alphabet. Most are for European languages, but there are also ones for Arabic, Greek, Hebrew, and Thai. There are good references on the web about all these.</source>
          <target state="translated">son una colección de conjuntos de códigos de caracteres de la Organización Internacional de Normalización (ISO),cada uno de los cuales añade caracteres al conjunto ASCII que se encuentran típicamente en varios idiomas,muchos de los cuales se basan en el alfabeto romano o latino.La mayoría son para los idiomas europeos,pero también los hay para el árabe,el griego,el hebreo y el tailandés.Hay buenas referencias en la web sobre todos ellos.</target>
        </trans-unit>
        <trans-unit id="de4fe4ffac933dfb4f0c5094e64bc601a7611806" translate="yes" xml:space="preserve">
          <source>are all equal.</source>
          <target state="translated">son todos iguales.</target>
        </trans-unit>
        <trans-unit id="40cd33871ba50f9d26f25a0b0967a938c3c33a02" translate="yes" xml:space="preserve">
          <source>are allowed.</source>
          <target state="translated">están permitidas.</target>
        </trans-unit>
        <trans-unit id="3e1131dc785866fbebf7ccb8d1293f801f197a2a" translate="yes" xml:space="preserve">
          <source>are also always exempt from such warnings.</source>
          <target state="translated">también están siempre exentos de tales advertencias.</target>
        </trans-unit>
        <trans-unit id="5fcbd6f84c4cae433390a20653865fe7ad335515" translate="yes" xml:space="preserve">
          <source>are also defined. Thus, &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; is in</source>
          <target state="translated">tambi&amp;eacute;n est&amp;aacute;n definidos. As&amp;iacute;, la &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; est&amp;aacute; en</target>
        </trans-unit>
        <trans-unit id="6ae709307e670bf5e63517c3569658dffb47078b" translate="yes" xml:space="preserve">
          <source>are automatically added to every regular expression till the end of the lexical scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770b01f5221d280697bb0ba87d0e2d9db74e1a94" translate="yes" xml:space="preserve">
          <source>are comic references to the egg-eating habits of the little-endian Lilliputians and the big-endian Blefuscudians from the classic Jonathan Swift satire,</source>
          <target state="translated">son referencias cómicas a los hábitos de comer huevos de los liliputienses de poca monta y los blefuscudianos de gran monta de la sátira clásica de Jonathan Swift,</target>
        </trans-unit>
        <trans-unit id="11b947ce1fea4f347faeb86b5b573b53f785e4b2" translate="yes" xml:space="preserve">
          <source>are complex patterns. Until the &lt;code&gt;(*PRUNE)&lt;/code&gt; verb is reached,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daac3dfff48cc466d9ca23db01b2c0a1076fa335" translate="yes" xml:space="preserve">
          <source>are converted to all uppercase for look-up. Other than that, both of them follow &lt;a href=&quot;#LOOSE-MATCHES&quot;&gt;loose&lt;/a&gt; rules if &lt;code&gt;:loose&lt;/code&gt; is also specified; strict otherwise.</source>
          <target state="translated">se convierten en may&amp;uacute;sculas para realizar b&amp;uacute;squedas. Aparte de eso, ambos siguen reglas &lt;a href=&quot;#LOOSE-MATCHES&quot;&gt;vagas&lt;/a&gt; si &lt;code&gt;:loose&lt;/code&gt; tambi&amp;eacute;n se especifica lo suelto ; estricto de lo contrario.</target>
        </trans-unit>
        <trans-unit id="3ef4b9fd15129bb4ba23b3e2d5f6b2f50984d837" translate="yes" xml:space="preserve">
          <source>are deleted. (Note that this is slightly more flexible than the behavior of some &lt;b&gt;tr&lt;/b&gt; programs, which delete anything they find in the</source>
          <target state="translated">se eliminan. (Tenga en cuenta que esto es un poco m&amp;aacute;s flexible que el comportamiento de algunos programas &lt;b&gt;tr&lt;/b&gt; , que eliminan todo lo que encuentran en el</target>
        </trans-unit>
        <trans-unit id="e553ec1da64a1470d4a07b9f0ea75b9f2786fbbc" translate="yes" xml:space="preserve">
          <source>are designed to test things that run thousands of times slower if a particular optimisation is broken (for example, the utf8 length cache on long utf8 strings). Add a test that will take a fraction of a second normally, and minutes otherwise, causing the test file to time out on failure.</source>
          <target state="translated">están diseñados para probar cosas que funcionan miles de veces más lentamente si se rompe una optimización particular (por ejemplo,el caché de longitud utf8 en las cuerdas largas de utf8).Añade una prueba que tomará una fracción de segundo normalmente,y minutos en caso contrario,haciendo que el archivo de prueba se agote al fallar.</target>
        </trans-unit>
        <trans-unit id="7e73ed4d4def3b0046261b7c95b17ebd584def24" translate="yes" xml:space="preserve">
          <source>are either deleted from the target string if &lt;code&gt;/d&lt;/code&gt; is specified; or replaced by the final character in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d19bbed1db5eb79730973a9f9a4bc06ef968d56" translate="yes" xml:space="preserve">
          <source>are exempt from warnings (because they care about truth rather than definedness). Operators such as &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; , and &lt;code&gt;.=&lt;/code&gt; , that operate on undefined variables such as:</source>
          <target state="translated">est&amp;aacute;n exentos de advertencias (porque les importa la verdad m&amp;aacute;s que la definici&amp;oacute;n). Operadores como &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; y &lt;code&gt;.=&lt;/code&gt; , Que operan en variables indefinidas como:</target>
        </trans-unit>
        <trans-unit id="97f63e7ae336dfa4123620ffa25d37b43de233fe" translate="yes" xml:space="preserve">
          <source>are exempt from warnings (because they care about truth rather than definedness). Operators such as &lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, and &lt;code&gt;.=&lt;/code&gt;, that operate on undefined variables such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5057aa4e52a95f389308d1244df9e17bc251d60c" translate="yes" xml:space="preserve">
          <source>are generated. If there are</source>
          <target state="translated">se generan.Si hay</target>
        </trans-unit>
        <trans-unit id="12a000f6ee5e215e7e0046022ea40ecb006f16ef" translate="yes" xml:space="preserve">
          <source>are hexadecimal digits, matches the character whose native ordinal is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e300e92d55897673ef91e24c657fab7d7f2f47" translate="yes" xml:space="preserve">
          <source>are hexadecimal digits, matches the character whose ordinal is</source>
          <target state="translated">son dígitos hexadecimales,coincide con el carácter cuyo ordinal es</target>
        </trans-unit>
        <trans-unit id="0396f8fab0fd4ee1179eee3502c230f019ae22d2" translate="yes" xml:space="preserve">
          <source>are in effect, &lt;code&gt;postprocess&lt;/code&gt; is a no-op.</source>
          <target state="translated">est&amp;aacute;n en efecto, el &lt;code&gt;postprocess&lt;/code&gt; es una operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="570405f9be4be3ed167dfbbb5eecc3ddbaa2bed9" translate="yes" xml:space="preserve">
          <source>are in effect, &lt;code&gt;preprocess&lt;/code&gt; is a no-op.</source>
          <target state="translated">est&amp;aacute;n en efecto, el &lt;code&gt;preprocess&lt;/code&gt; es una operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fedda21f963002d22ee355f74566c5941f369717" translate="yes" xml:space="preserve">
          <source>are latitudes: zero at the North Pole, northward positive, southward negative. &lt;b&gt;NOTE&lt;/b&gt;: this formula thinks in mathematics, not geographically: the</source>
          <target state="translated">son latitudes: cero en el Polo Norte, positivo hacia el norte, negativo hacia el sur. &lt;b&gt;NOTA&lt;/b&gt; : esta f&amp;oacute;rmula piensa en matem&amp;aacute;ticas, no geogr&amp;aacute;ficamente: el</target>
        </trans-unit>
        <trans-unit id="ade037758549b480d28d475043ed26d68ea7200e" translate="yes" xml:space="preserve">
          <source>are limited to non-negative integral values less than a preset limit defined when perl is built. This is usually 32766 on the most common platforms. The actual limit can be seen in the error message generated by code such as this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a431c3157083cfaa848431ab6951d8e26a4c0c12" translate="yes" xml:space="preserve">
          <source>are longitudes: zero at the Greenwhich meridian, eastward positive, westward negative -- and the</source>
          <target state="translated">son longitudes:cero en el meridiano de Greenwhich,positivo hacia el este,negativo hacia el oeste...y el</target>
        </trans-unit>
        <trans-unit id="609716f862354a27aae0296acc60afdae2c70a58" translate="yes" xml:space="preserve">
          <source>are not always present. The</source>
          <target state="translated">no siempre están presentes.El</target>
        </trans-unit>
        <trans-unit id="46c8feb754cc537b05ea38e46f4716d3389f6083" translate="yes" xml:space="preserve">
          <source>are not checked for taintedness. This requires extra carefulness unless you want external data to affect your control flow. Unless you carefully limit what these symbolic values are, people are able to call functions &lt;b&gt;outside&lt;/b&gt; your Perl code, such as POSIX::system, in which case they are able to run arbitrary external code.</source>
          <target state="translated">no se comprueban por contaminaci&amp;oacute;n. Esto requiere un cuidado adicional a menos que desee que los datos externos afecten su flujo de control. A menos que limite cuidadosamente cu&amp;aacute;les son estos valores simb&amp;oacute;licos, las personas pueden llamar a funciones &lt;b&gt;fuera de&lt;/b&gt; su c&amp;oacute;digo Perl, como POSIX :: system, en cuyo caso pueden ejecutar c&amp;oacute;digo externo arbitrario.</target>
        </trans-unit>
        <trans-unit id="5ccd41f08ede872f51066757b8c4ae13668882ad" translate="yes" xml:space="preserve">
          <source>are not equivalent;</source>
          <target state="translated">no son equivalentes;</target>
        </trans-unit>
        <trans-unit id="3dbd91a738da0c945eed880dcd55854536701ae2" translate="yes" xml:space="preserve">
          <source>are not implemented.</source>
          <target state="translated">no se implementan.</target>
        </trans-unit>
        <trans-unit id="d2b97aebc4deb474b3edf462a85d2011cb2609d5" translate="yes" xml:space="preserve">
          <source>are not present by default in compressed data streams. They must have been added explicitly when the data stream was created by calling &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; with &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; .</source>
          <target state="translated">no est&amp;aacute;n presentes de forma predeterminada en los flujos de datos comprimidos. Deben haberse agregado expl&amp;iacute;citamente cuando se cre&amp;oacute; el flujo de datos llamando a &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; con &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb66588bb9e8219965c9e8e3652212ab6d91d5f9" translate="yes" xml:space="preserve">
          <source>are not present by default in compressed data streams. They must have been added explicitly when the data stream was created by calling &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; with &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40db504d084e6e3300a4b8d81479b259b9880a4a" translate="yes" xml:space="preserve">
          <source>are not set.</source>
          <target state="translated">no están establecidos.</target>
        </trans-unit>
        <trans-unit id="1d74281d1301f35973cccef918ad9c2a8a370111" translate="yes" xml:space="preserve">
          <source>are numbers from 0 to 5 giving the intensity of red, green, and blue. &lt;code&gt;on_&lt;/code&gt; variants of all of these colors are also provided. These colors may be ignored completely on non-256-color terminals or may be misinterpreted and produce random behavior. Additional attributes such as blink, italic, or bold may not work with the 256-color palette.</source>
          <target state="translated">son n&amp;uacute;meros del 0 al 5 que dan la intensidad de rojo, verde y azul. Tambi&amp;eacute;n se proporcionan variantes &lt;code&gt;on_&lt;/code&gt; de todos estos colores. Estos colores pueden ignorarse por completo en terminales que no son de 256 colores o pueden malinterpretarse y producir un comportamiento aleatorio. Es posible que los atributos adicionales como parpadeo, cursiva o negrita no funcionen con la paleta de 256 colores.</target>
        </trans-unit>
        <trans-unit id="d2c7c9a6f736994e6c2a0a531d7cba7ff69a9a00" translate="yes" xml:space="preserve">
          <source>are numbers from 0 to 5 giving the intensity of red, green, and blue. The grey and RGB colors are also available as &lt;code&gt;ansi16&lt;/code&gt; through &lt;code&gt;ansi255&lt;/code&gt; if you want simple names for all 256 colors. &lt;code&gt;on_&lt;/code&gt; variants of all of these colors are also provided. These colors may be ignored completely on non-256-color terminals or may be misinterpreted and produce random behavior. Additional attributes such as blink, italic, or bold may not work with the 256-color palette.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee047ace3155120c0c998a4fbef3fd51e859a9c4" translate="yes" xml:space="preserve">
          <source>are provided with &lt;code&gt;-MCross&lt;/code&gt; so to enable cross- compile.</source>
          <target state="translated">se proporcionan con &lt;code&gt;-MCross&lt;/code&gt; para permitir la compilaci&amp;oacute;n cruzada.</target>
        </trans-unit>
        <trans-unit id="c8a812a79d5485356c9599734e6c7857321c8eef" translate="yes" xml:space="preserve">
          <source>are registered with IANA as preferred MIME names and may be used over the Internet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbf84bcdae10459f4be5e4c43dfcd186671107d" translate="yes" xml:space="preserve">
          <source>are regular expressions, in the context of a larger regular expression, that function independently of the larger regular expression. That is, they consume as much or as little of the string as they wish without regard for the ability of the larger regexp to match. Independent subexpressions are represented by &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt;. We can illustrate their behavior by first considering an ordinary regexp:</source>
          <target state="translated">son expresiones regulares, en el contexto de una expresi&amp;oacute;n regular m&amp;aacute;s grande, que funcionan independientemente de la expresi&amp;oacute;n regular m&amp;aacute;s grande. Es decir, consumen tanto o tan poco de la cadena como deseen sin tener en cuenta la capacidad de la expresi&amp;oacute;n regular m&amp;aacute;s grande para coincidir. Las subexpresiones independientes est&amp;aacute;n representadas por &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt; . Podemos ilustrar su comportamiento considerando primero una expresi&amp;oacute;n regular ordinaria:</target>
        </trans-unit>
        <trans-unit id="bf6b8a83833152c05402e374a039993996c3a5f4" translate="yes" xml:space="preserve">
          <source>are relocated relative to the directory containing the perl binary, and a logical cleanup of the path is then made around the join point (removing</source>
          <target state="translated">se reubican en relación con el directorio que contiene el binario de perl,y se hace una limpieza lógica del camino alrededor del punto de unión (eliminando</target>
        </trans-unit>
        <trans-unit id="c22d2121cf1ad3c9fdf597eb6ea7a9ec831c3008" translate="yes" xml:space="preserve">
          <source>are similar to these:</source>
          <target state="translated">son similares a estos:</target>
        </trans-unit>
        <trans-unit id="5daee755ffcc3e1b323374ccd7080b09b7b8a3b2" translate="yes" xml:space="preserve">
          <source>are simply the file names of the test scripts to run.</source>
          <target state="translated">son simplemente los nombres de los archivos de los guiones de prueba a ejecutar.</target>
        </trans-unit>
        <trans-unit id="6e4996c18d9f0a898ac21d0f2e3859496ded49d7" translate="yes" xml:space="preserve">
          <source>are single quotes (&lt;code&gt;tr'&lt;i&gt;SEARCHLIST&lt;/i&gt;'&lt;i&gt;REPLACEMENTLIST&lt;/i&gt;'&lt;/code&gt;), the only interpolation is removal of &lt;code&gt;\&lt;/code&gt; from pairs of &lt;code&gt;\\&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a838d9cdd9a1dd5272e9fd20337bdc1878418242" translate="yes" xml:space="preserve">
          <source>are special. &quot;null&quot; fails for all character so when you set fallback mode to PERLQQ, HTMLCREF or XMLCREF, ALL CHARACTERS will fall back to character references. Ditto for &quot;ascii-ctrl&quot; except for control characters. For fallback modes, see &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097a56ab5012c31b2588a7fcf5955a17a3d173fe" translate="yes" xml:space="preserve">
          <source>are specified in the same way as command line options:</source>
          <target state="translated">se especifican de la misma manera que las opciones de la línea de comandos:</target>
        </trans-unit>
        <trans-unit id="78aee12896fca1df627811f8bc479814fea0b083" translate="yes" xml:space="preserve">
          <source>are subjected to double quote interpolation. That means that if you want to use variables, you must use an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">est&amp;aacute;n sujetos a interpolaci&amp;oacute;n de comillas dobles. Eso significa que si desea usar variables, debe usar una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d8ce495ebadd54a3aea5534a54d3ed1890116603" translate="yes" xml:space="preserve">
          <source>are subjected to double quote interpolation. That means that if you want to use variables, you must use an &lt;code&gt;eval()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1660aa40e15fa486c99c667a79b0b660d94e44d8" translate="yes" xml:space="preserve">
          <source>are supported by a data structure called the</source>
          <target state="translated">se apoyan en una estructura de datos llamada</target>
        </trans-unit>
        <trans-unit id="b0525539dbfb2e75b20f33ebd3a32d8383ed15e2" translate="yes" xml:space="preserve">
          <source>are text editors for OS X that have a Perl sensitivity mode ( &lt;a href=&quot;http://www.barebones.com/&quot;&gt;http://www.barebones.com/&lt;/a&gt; ).</source>
          <target state="translated">son editores de texto para OS X que tienen un modo de sensibilidad Perl ( &lt;a href=&quot;http://www.barebones.com/&quot;&gt;http://www.barebones.com/&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f5de845a40e63e6edb669bb61faa6f919437589" translate="yes" xml:space="preserve">
          <source>are the list-type ops to concatenate.</source>
          <target state="translated">son las operaciones de tipo lista para concatenar.</target>
        </trans-unit>
        <trans-unit id="7df1a21211f78189703a86e3cbb836a7e63fe998" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+D800..U+DBFF&lt;/code&gt; and the</source>
          <target state="translated">son el rango &lt;code&gt;U+D800..U+DBFF&lt;/code&gt; y el</target>
        </trans-unit>
        <trans-unit id="e10ada24dcf0e25f997bb273775bbfb50fbba99d" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; . The surrogate encoding is</source>
          <target state="translated">son el rango &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; . La codificaci&amp;oacute;n sustituta es</target>
        </trans-unit>
        <trans-unit id="c989bfbe77103d980620a3c854a885a1e8a7d19d" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt;. The surrogate encoding is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb58a3423afb25ba8d716d2723dadfbadf6664c" translate="yes" xml:space="preserve">
          <source>are totally valid encodings but not registered at IANA. The names under which they are listed here are probably the most widely-known names for these encodings and are recommended names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02d00372e009301b6f76aac94b40c9dd1c62278" translate="yes" xml:space="preserve">
          <source>are treated as infinite loops.</source>
          <target state="translated">son tratados como bucles infinitos.</target>
        </trans-unit>
        <trans-unit id="b69d4058e49518cf15c9514191d73871d3c11840" translate="yes" xml:space="preserve">
          <source>are two hex digits) doesn't go further than 255. (Starting in Perl 5.14, if you're an octal fan, you can also use &lt;code&gt;\o{oct}&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceaee791c3214e301c067af0fb90e4e9184e870" translate="yes" xml:space="preserve">
          <source>are used in absolutely incompatible manner. Parameters to these functions could be described &lt;b&gt;xsubpp&lt;/b&gt; like this:</source>
          <target state="translated">se utilizan de manera absolutamente incompatible. Los par&amp;aacute;metros de estas funciones podr&amp;iacute;an describirse &lt;b&gt;xsubpp&lt;/b&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="225abc0f937024b5e6707bd1f4cf5fc01203b6c7" translate="yes" xml:space="preserve">
          <source>are used to allow the calling code to think that there is only one such encoding. This is almost always referred to as &lt;code&gt;utf8&lt;/code&gt; , but it means the EBCDIC version as well. Again, comments in the code may well be wrong even if the code itself is right. For example, the concept of UTF-8 &lt;code&gt;invariant
characters&lt;/code&gt; differs between ASCII and EBCDIC. On ASCII platforms, only characters that do not have the high-order bit set (i.e. whose ordinals are strict ASCII, 0 - 127) are invariant, and the documentation and comments in the code may assume that, often referring to something like, say, &lt;code&gt;hibit&lt;/code&gt; . The situation differs and is not so simple on EBCDIC machines, but as long as the code itself uses the &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; macro appropriately, it works, even if the comments are wrong.</source>
          <target state="translated">se utilizan para permitir que el c&amp;oacute;digo de llamada piense que solo existe una codificaci&amp;oacute;n de este tipo. Esto casi siempre se conoce como &lt;code&gt;utf8&lt;/code&gt; , pero tambi&amp;eacute;n significa la versi&amp;oacute;n EBCDIC. Una vez m&amp;aacute;s, los comentarios en el c&amp;oacute;digo pueden estar equivocados incluso si el c&amp;oacute;digo en s&amp;iacute; es correcto. Por ejemplo, el concepto de &lt;code&gt;invariant characters&lt;/code&gt; UTF-8 difiere entre ASCII y EBCDIC. En las plataformas ASCII, solo los caracteres que no tienen el conjunto de bits de orden superior (es decir, cuyos ordinales son ASCII estricto, 0-127) son invariantes, y la documentaci&amp;oacute;n y los comentarios en el c&amp;oacute;digo pueden asumir que, a menudo se refiere a algo como, digamos , &lt;code&gt;hibit&lt;/code&gt; . La situaci&amp;oacute;n es diferente y no es tan simple en las m&amp;aacute;quinas EBCDIC, pero siempre que el c&amp;oacute;digo en s&amp;iacute; use &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; macro adecuadamente, funciona, incluso si los comentarios son incorrectos.</target>
        </trans-unit>
        <trans-unit id="e7f4df1405160e9c5b49e4d9bd56cbd0f69b35f7" translate="yes" xml:space="preserve">
          <source>are used to allow the calling code to think that there is only one such encoding. This is almost always referred to as &lt;code&gt;utf8&lt;/code&gt;, but it means the EBCDIC version as well. Again, comments in the code may well be wrong even if the code itself is right. For example, the concept of UTF-8 &lt;code&gt;invariant characters&lt;/code&gt; differs between ASCII and EBCDIC. On ASCII platforms, only characters that do not have the high-order bit set (i.e. whose ordinals are strict ASCII, 0 - 127) are invariant, and the documentation and comments in the code may assume that, often referring to something like, say, &lt;code&gt;hibit&lt;/code&gt;. The situation differs and is not so simple on EBCDIC machines, but as long as the code itself uses the &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; macro appropriately, it works, even if the comments are wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e6f047bd2af282863f2c0acfd2b4831e04019f" translate="yes" xml:space="preserve">
          <source>are used to refer to the relative positioning of the stack layers.</source>
          <target state="translated">se utilizan para referirse a la posición relativa de las capas de la pila.</target>
        </trans-unit>
        <trans-unit id="79c5c14521f2fdbf7474b004cb4f21e3735f3d69" translate="yes" xml:space="preserve">
          <source>are usually from the standards &lt;b&gt;ISO 3166&lt;/b&gt; and &lt;b&gt;ISO 639&lt;/b&gt;, the two-letter abbreviations for the countries and the languages of the world, respectively. The</source>
          <target state="translated">son generalmente de las normas &lt;b&gt;ISO 3166&lt;/b&gt; e &lt;b&gt;ISO 639&lt;/b&gt; , las abreviaturas de dos letras para los pa&amp;iacute;ses y los idiomas del mundo, respectivamente. los</target>
        </trans-unit>
        <trans-unit id="e6b83e0d18c05db2e099977bc4d92896d38a2907" translate="yes" xml:space="preserve">
          <source>are what is fed to &lt;code&gt;ok(...)&lt;/code&gt; if this test isn't skipped.</source>
          <target state="translated">son lo que se alimenta a &lt;code&gt;ok(...)&lt;/code&gt; si no se omite esta prueba.</target>
        </trans-unit>
        <trans-unit id="624cd1f425ffb0afe6e743d09639a61c5ac6e5af" translate="yes" xml:space="preserve">
          <source>aren't</source>
          <target state="translated">aren't</target>
        </trans-unit>
        <trans-unit id="04d6e2b300911995efa37b6707fdc02975a3021c" translate="yes" xml:space="preserve">
          <source>arg</source>
          <target state="translated">arg</target>
        </trans-unit>
        <trans-unit id="e044db5cacc7c1e1ded3c45fa7472331fe5e6246" translate="yes" xml:space="preserve">
          <source>arg1</source>
          <target state="translated">arg1</target>
        </trans-unit>
        <trans-unit id="b38facf4a8f9f6e8fc7192d1cbc326386647f4c1" translate="yes" xml:space="preserve">
          <source>arg2</source>
          <target state="translated">arg2</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="0f3802314d747bbc5016897875185c3a9fae57bf" translate="yes" xml:space="preserve">
          <source>argument</source>
          <target state="translated">argument</target>
        </trans-unit>
        <trans-unit id="d8d433b9ebc59257b2702d1e5069f881de7eb837" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::joinable&lt;/code&gt; ), returns a list of all non-joined, non-detached</source>
          <target state="translated">argumento (usando &lt;code&gt;threads::joinable&lt;/code&gt; ), devuelve una lista de todos los no unidos, no separados</target>
        </trans-unit>
        <trans-unit id="3aa1722ee6a3fbb43a386edfe0a4443a9379b6cc" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::joinable&lt;/code&gt;), returns a list of all non-joined, non-detached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fa8514a906cf4d46ad0af7f07708ece0b99d60" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::running&lt;/code&gt; ), returns a list of all non-joined, non-detached</source>
          <target state="translated">argumento (usando &lt;code&gt;threads::running&lt;/code&gt; ), devuelve una lista de todos los no unidos, no separados</target>
        </trans-unit>
        <trans-unit id="97ba3baaeabaca14baa3cc7d89714aa165f51fdf" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::running&lt;/code&gt;), returns a list of all non-joined, non-detached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3aa5b01cae682ed2f47655046c91faa406d82a7" translate="yes" xml:space="preserve">
          <source>argument is in the customary binary format used for Perl strings.</source>
          <target state="translated">El argumento está en el formato binario habitual utilizado para las cadenas de Perl.</target>
        </trans-unit>
        <trans-unit id="5bc5346716c03ee04dad8fb513609b63a372ea19" translate="yes" xml:space="preserve">
          <source>argument is optional; in some cases, it is mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd393b012062093f38db6d2b39b7ceda6271e2a9" translate="yes" xml:space="preserve">
          <source>argument specifies that &lt;code&gt;autosplit&lt;/code&gt; is to check the modification time of the module against that of the &lt;code&gt;autosplit.ix&lt;/code&gt; file, and only split the module if it is newer. $modtime defaults to 1.</source>
          <target state="translated">El argumento especifica que &lt;code&gt;autosplit&lt;/code&gt; es para comparar el tiempo de modificaci&amp;oacute;n del m&amp;oacute;dulo con el del archivo &lt;code&gt;autosplit.ix&lt;/code&gt; , y solo dividir el m&amp;oacute;dulo si es m&amp;aacute;s nuevo. $ modtime tiene el valor predeterminado 1.</target>
        </trans-unit>
        <trans-unit id="1a29b569d43822c3afa1f10f2e311200106908b4" translate="yes" xml:space="preserve">
          <source>argument tells &lt;code&gt;Encode&lt;/code&gt; what to do when encountering malformed data. Without</source>
          <target state="translated">El argumento le dice a &lt;code&gt;Encode&lt;/code&gt; qu&amp;eacute; hacer cuando encuentra datos con formato incorrecto. Sin</target>
        </trans-unit>
        <trans-unit id="f8d9ac9f93a7c2347999f2cbea28206b99e65b72" translate="yes" xml:space="preserve">
          <source>argument to &lt;code&gt;when&lt;/code&gt; does is hard to describe precisely, but in general, it tries to guess what you want done. Sometimes it is interpreted as &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt;, and sometimes it is not. It also behaves differently when lexically enclosed by a &lt;code&gt;given&lt;/code&gt; block than it does when dynamically enclosed by a &lt;code&gt;foreach&lt;/code&gt; loop. The rules are far too difficult to understand to be described here. See &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;&quot;Experimental Details on given and when&quot;&lt;/a&gt; later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e918e513d7e7933ffcc3b08aa036254e58b7109" translate="yes" xml:space="preserve">
          <source>argument to &lt;code&gt;when&lt;/code&gt; does is hard to describe precisely, but in general, it tries to guess what you want done. Sometimes it is interpreted as &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt;, and sometimes it is not. It also behaves differently when lexically enclosed by a &lt;code&gt;given&lt;/code&gt; block than it does when dynamically enclosed by a &lt;code&gt;foreach&lt;/code&gt; loop. The rules are far too difficult to understand to be described here. See &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;Experimental Details on given and when&lt;/a&gt; later on.</source>
          <target state="translated">El argumento de &lt;code&gt;when&lt;/code&gt; hace es dif&amp;iacute;cil de describir con precisi&amp;oacute;n, pero en general, intenta adivinar lo que quieres que se haga. A veces se interpreta como &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt; y, a veces, no. Tambi&amp;eacute;n se comporta de manera diferente cuando est&amp;aacute; encerrado l&amp;eacute;xicamente en un bloque &lt;code&gt;given&lt;/code&gt; que cuando est&amp;aacute; encerrado din&amp;aacute;micamente en un bucle &lt;code&gt;foreach&lt;/code&gt; . Las reglas son demasiado dif&amp;iacute;ciles de entender para describirlas aqu&amp;iacute;. Consulte los &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;Detalles experimentales en dado y cu&amp;aacute;ndo&lt;/a&gt; m&amp;aacute;s adelante.</target>
        </trans-unit>
        <trans-unit id="e08f7198b54296915eb6e0097b8ceca98cfafe50" translate="yes" xml:space="preserve">
          <source>argument to one of the following values:</source>
          <target state="translated">a uno de los siguientes valores:</target>
        </trans-unit>
        <trans-unit id="3abba5546715d0ff24cfa816d8610e27353a5e14" translate="yes" xml:space="preserve">
          <source>argument will be true if there is a layer below and that layer was expecting UTF-8.</source>
          <target state="translated">El argumento será cierto si hay una capa debajo y esa capa esperaba UTF-8.</target>
        </trans-unit>
        <trans-unit id="77d4f1467ed49524381be69d50a3bb40b010d3c6" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; will cause only the thread to exit. With a</source>
          <target state="translated">argumento, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; har&amp;aacute; que solo salga el hilo. Con un</target>
        </trans-unit>
        <trans-unit id="5e1a5dc31772bb5680208573714d0df8690531e4" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; will terminate the application.</source>
          <target state="translated">argumento, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; terminar&amp;aacute; la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c353caecf10c950bccccbbae0f2e6c9aa6877d67" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;exit()&lt;/code&gt; will cause only the thread to exit. With a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb3d37fc015710e9f6fb48fd8cf1fbae8638195" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;exit()&lt;/code&gt; will terminate the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff32fbb8900b87449ed727fccd847391fb13379" translate="yes" xml:space="preserve">
          <source>argument. For example, &lt;a href=&quot;Encode::Unicode&quot;&gt;Encode::Unicode&lt;/a&gt; ignores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b4277f19e0685458402bdc5d7577a60a68c705" translate="yes" xml:space="preserve">
          <source>argument. For example, &lt;a href=&quot;encode/unicode&quot;&gt;Encode::Unicode&lt;/a&gt; ignores</source>
          <target state="translated">argumento. Por ejemplo, &lt;a href=&quot;encode/unicode&quot;&gt;Encode :: Unicode&lt;/a&gt; ignora</target>
        </trans-unit>
        <trans-unit id="d4da21b9484bced14bdff9911f748d00022f7cf3" translate="yes" xml:space="preserve">
          <source>argument. Use &lt;b&gt;-Ilib&lt;/b&gt;, for instance. &lt;b&gt;-I lib&lt;/b&gt; won't work.</source>
          <target state="translated">argumento. Utilice &lt;b&gt;-Ilib&lt;/b&gt; , por ejemplo. &lt;b&gt;-I lib&lt;/b&gt; no funcionar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="9077da4d0275ca769922dd3ab43da95b6ef7b997" translate="yes" xml:space="preserve">
          <source>arguments are allowed, provided that</source>
          <target state="translated">se permiten los argumentos,siempre que</target>
        </trans-unit>
        <trans-unit id="168293336923dcdfadd4e17664f5fabfcd3ee1d2" translate="yes" xml:space="preserve">
          <source>arguments can be ignored in most cases)</source>
          <target state="translated">los argumentos pueden ser ignorados en la mayoría de los casos)</target>
        </trans-unit>
        <trans-unit id="a144cfdf650067c37a4a69dac8b434fbb91f984b" translate="yes" xml:space="preserve">
          <source>arguments have been parsed (so you can not change the way arguments are processed, sorry), typically with the &lt;code&gt;-P&lt;i&gt;plugin&lt;/i&gt;&lt;/code&gt; switch, eg:</source>
          <target state="translated">Los argumentos se han analizado (por lo que no puede cambiar la forma en que se procesan los argumentos, lo siento), normalmente con el modificador &lt;code&gt;-P&lt;i&gt;plugin&lt;/i&gt;&lt;/code&gt; , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="93520313719be4cf49f3e938fc38e935e34348fd" translate="yes" xml:space="preserve">
          <source>argv[1]</source>
          <target state="translated">argv[1]</target>
        </trans-unit>
        <trans-unit id="083082af3264d59ab17f2c00e32def6a2f7aa65a" translate="yes" xml:space="preserve">
          <source>arithmetic shift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71136eef26be831306f95a5bb63a84e27f7eef99" translate="yes" xml:space="preserve">
          <source>arithmetical operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405928ee9a480fc2a8eade49b14a897e6af33c76" translate="yes" xml:space="preserve">
          <source>around</source>
          <target state="translated">around</target>
        </trans-unit>
        <trans-unit id="d95e887f901f26e63014aa2cdccb63b7fb5f1815" translate="yes" xml:space="preserve">
          <source>around the subroutine call.</source>
          <target state="translated">alrededor de la llamada de la subrutina.</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="ee52cfe001be3ed7048ad4373bb96e5fa2a3b08b" translate="yes" xml:space="preserve">
          <source>array and hash recursion limits are checked separately against the same recursion depth, a frozen structure with a large sequence of nested arrays within many nested hashes may exhaust the processor stack without triggering Storable's recursion protection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5ef87e4b652f27fd8991387223f83d56f88257" translate="yes" xml:space="preserve">
          <source>array context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c598025171195fc4a712080717583430cb5462" translate="yes" xml:space="preserve">
          <source>array elements and key-value pairs with commas. This can be annoying if you write JSON texts manually and want to be able to quickly append elements, so this extension accepts comma at the end of such items not just between them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6996ca24f94a68ce49953711998dbd6942136600" translate="yes" xml:space="preserve">
          <source>array ref</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a52a0b3e02bac0d6784f4d079552610c345b5af" translate="yes" xml:space="preserve">
          <source>array ref is used to create a &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;&quot;iterator_factory_class&quot;&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276700d738a08a17c36c325a79d878275e1e62b7" translate="yes" xml:space="preserve">
          <source>array ref is used to create a &lt;a href=&quot;parser/source&quot;&gt;TAP::Parser::Source&lt;/a&gt; that is passed to the &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt; which in turn figures out how to handle the source and creates a &amp;lt;TAP::Parser::Iterator&amp;gt; for it. The iterator is used by the parser to read in the TAP stream.</source>
          <target state="translated">array ref se usa para crear un &lt;a href=&quot;parser/source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt; que se pasa a &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt; que a su vez descubre c&amp;oacute;mo manejar el c&amp;oacute;digo fuente y crea un &amp;lt;TAP :: Parser :: Iterator&amp;gt; para &amp;eacute;l. El analizador usa el iterador para leer en el flujo TAP.</target>
        </trans-unit>
        <trans-unit id="9b611f002dfdbbc7f417d7a701d0c0982f8295cb" translate="yes" xml:space="preserve">
          <source>array references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f086a94a5c6545b992f6b27781fc7f73cd0f34a" translate="yes" xml:space="preserve">
          <source>arrays of arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a3c7add3ea98d8bc57a46927c400f9ef4f5814" translate="yes" xml:space="preserve">
          <source>arrays of hashes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47741cf980400a87afe9c94390f9126efceba961" translate="yes" xml:space="preserve">
          <source>article ( [ MSGID|MSGNUM ], [FH] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f007d443bf9be1cbb02a5647bc3ffc2ea4a7b0be" translate="yes" xml:space="preserve">
          <source>article about Maketext. It explains many important concepts underlying Locale::Maketext's design, and some insight into why Maketext is better than the plain old approach of having message catalogs that are just databases of sprintf formats.</source>
          <target state="translated">artículo sobre Maketext.Explica muchos conceptos importantes que subyacen al diseño de Locale::Maketext,y algunas ideas de por qué Maketext es mejor que el simple y viejo enfoque de tener catálogos de mensajes que son sólo bases de datos de formatos sprintf.</target>
        </trans-unit>
        <trans-unit id="c39354a2afa38bb8867edb6c280fc4691cf93e48" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; .</source>
          <target state="translated">art&amp;iacute;culo de la colecci&amp;oacute;n &quot;Mucho m&amp;aacute;s de lo que nunca quiso saber&quot; en &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="770bc2c07a08614cf46186cc798c253673fb1442" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; . To capture a command's STDERR and STDOUT together:</source>
          <target state="translated">art&amp;iacute;culo de la colecci&amp;oacute;n &quot;Mucho m&amp;aacute;s de lo que nunca quiso saber&quot; en &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; . Para capturar STDERR y STDOUT de un comando juntos:</target>
        </trans-unit>
        <trans-unit id="d63a2a6a0595f68a45646a780e4852db4b72a660" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; for more about this approach.</source>
          <target state="translated">art&amp;iacute;culo de la colecci&amp;oacute;n &quot;Mucho m&amp;aacute;s de lo que nunca quiso saber&quot; en &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre este enfoque.</target>
        </trans-unit>
        <trans-unit id="0791a67844c8f4efbe5e99ac3105cf46b29ab17a" translate="yes" xml:space="preserve">
          <source>article in the &quot;Far More Than You Ever Wanted To Know&quot; collection in &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt;, courtesy of Tom Phoenix, talks more about this. John von Neumann said, &quot;Anyone who attempts to generate random numbers by deterministic means is, of course, living in a state of sin.&quot;</source>
          <target state="translated">El art&amp;iacute;culo de la colecci&amp;oacute;n &quot;Mucho m&amp;aacute;s de lo que nunca quiso saber&quot; en &lt;a href=&quot;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&quot;&gt;http://www.cpan.org/misc/olddoc/FMTEYEWTK.tgz&lt;/a&gt; , cortes&amp;iacute;a de Tom Phoenix, habla m&amp;aacute;s sobre esto. John von Neumann dijo: &quot;Cualquiera que intente generar n&amp;uacute;meros aleatorios por medios deterministas, por supuesto, vive en un estado de pecado&quot;.</target>
        </trans-unit>
        <trans-unit id="7de2a03beba8be3648bd55b5be4d022975548521" translate="yes" xml:space="preserve">
          <source>articlefh ( [ MSGID|MSGNUM ] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee853884bf8a2aa22c0c7ac39a07600efacbe3c2" translate="yes" xml:space="preserve">
          <source>artistic</source>
          <target state="translated">artistic</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="a65837ad13e0fdf78d35e16e571d952b5ff6f7e1" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;load&lt;/code&gt; will use &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; to determine the package.</source>
          <target state="translated">como &lt;code&gt;load&lt;/code&gt; utilizar&amp;aacute; el &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller&lt;/a&gt;&lt;/code&gt; para determinar el paquete.</target>
        </trans-unit>
        <trans-unit id="35bac7fe78f98bd7d83aaba5da7fad3ba2f57d8c" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;load&lt;/code&gt; will use &lt;code&gt;caller&lt;/code&gt; to determine the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70146c42ef768a95ce2127751f1aff9401a3be9b" translate="yes" xml:space="preserve">
          <source>as UTF-8. This takes into account if the call to the XS function is being made from within the scope of &lt;a href=&quot;bytes&quot;&gt;&lt;code&gt;use bytes&lt;/code&gt;&lt;/a&gt;. If so, the underlying bytes that comprise the UTF-8 string are to be exposed, rather than the character they represent. But this pragma should only really be used for debugging and perhaps low-level testing at the byte level. Hence most XS code need not concern itself with this, but various areas of the perl core do need to support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d62e679336367634a72a952dc99d5052db36db" translate="yes" xml:space="preserve">
          <source>as UTF-8. This takes into account if the call to the XS function is being made from within the scope of &lt;a href=&quot;bytes&quot;&gt;use bytes &lt;/a&gt;. If so, the underlying bytes that comprise the UTF-8 string are to be exposed, rather than the character they represent. But this pragma should only really be used for debugging and perhaps low-level testing at the byte level. Hence most XS code need not concern itself with this, but various areas of the perl core do need to support it.</source>
          <target state="translated">como UTF-8. Esto tiene en cuenta si la llamada a la funci&amp;oacute;n XS se realiza dentro del alcance de los &lt;a href=&quot;bytes&quot;&gt;bytes&lt;/a&gt; de uso . Si es as&amp;iacute;, se expondr&amp;aacute;n los bytes subyacentes que componen la cadena UTF-8, en lugar del car&amp;aacute;cter que representan. Pero este pragma solo deber&amp;iacute;a usarse realmente para depurar y tal vez para pruebas de bajo nivel a nivel de bytes. Por lo tanto, la mayor parte del c&amp;oacute;digo XS no necesita preocuparse por esto, pero varias &amp;aacute;reas del n&amp;uacute;cleo de perl necesitan soportarlo.</target>
        </trans-unit>
        <trans-unit id="15cb6bc32b06c78e373977af44ccb471b3a1d4af" translate="yes" xml:space="preserve">
          <source>as a binary string of approximately 44 bytes which holds a set or zero or more operators.</source>
          <target state="translated">como una cadena binaria de aproximadamente 44 bytes que contiene un conjunto o cero o más operadores.</target>
        </trans-unit>
        <trans-unit id="49535962cebbc0ea94c6df25ea434365bc702259" translate="yes" xml:space="preserve">
          <source>as a hash itself, the only problem one has to circumvent is how to access this</source>
          <target state="translated">como un hachís en sí mismo,el único problema que uno tiene que sortear es cómo acceder a este</target>
        </trans-unit>
        <trans-unit id="b3d154f01d41c1bc9eb1e234a00980811a7203a7" translate="yes" xml:space="preserve">
          <source>as a logical stream of bits, where each ASCII '0' or '1' character represents a 0 or 1 bit, respectively. All other characters are ignored. This provides a convenient way to calculate the digest values of partial-byte data by using files, rather than having to write separate programs employing the</source>
          <target state="translated">como una corriente lógica de bits,donde cada carácter ASCII &quot;0&quot; o &quot;1&quot; representa un 0 o 1 bit,respectivamente.Todos los demás caracteres son ignorados.Esto proporciona una forma conveniente de calcular los valores de resumen de los datos de bytes parciales mediante el uso de archivos,en lugar de tener que escribir programas separados empleando el</target>
        </trans-unit>
        <trans-unit id="0484899da16ac25f9334dc3c0f326506de8f3b2a" translate="yes" xml:space="preserve">
          <source>as a module hierarchy name etc.</source>
          <target state="translated">como un nombre de la jerarquía del módulo,etc.</target>
        </trans-unit>
        <trans-unit id="2595e4d12822845ad19e585d97389ce1ab042a19" translate="yes" xml:space="preserve">
          <source>as a module hierarchy name, etc.</source>
          <target state="translated">como un nombre de la jerarquía del módulo,etc.</target>
        </trans-unit>
        <trans-unit id="7489e1fa251bf45372d6ac9fae76ff03bb4fc00a" translate="yes" xml:space="preserve">
          <source>as a naive</source>
          <target state="translated">como un ingenuo</target>
        </trans-unit>
        <trans-unit id="74d1f75f898cb43e0472a9e5e56f2df27dec3699" translate="yes" xml:space="preserve">
          <source>as a regular expression.</source>
          <target state="translated">como una expresión regular.</target>
        </trans-unit>
        <trans-unit id="73ad2cf416dcc1436eb98bf0ea9e81a9ab178ed0" translate="yes" xml:space="preserve">
          <source>as a shell, thus I picked up &lt;code&gt;sh.exe&lt;/code&gt; . This assures almost 100% compatibility with the scripts coming from *nix. As an added benefit this works as well under DOS if you use DOS-enabled port of pdksh (see &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;).</source>
          <target state="translated">como un caparaz&amp;oacute;n, as&amp;iacute; que recog&amp;iacute; &lt;code&gt;sh.exe&lt;/code&gt; . Esto asegura casi el 100% de compatibilidad con los scripts provenientes de * nix. Como beneficio adicional, esto tambi&amp;eacute;n funciona bajo DOS si usa el puerto de pdksh habilitado para DOS (consulte &lt;a href=&quot;#Prerequisites&quot;&gt;Requisitos previos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d53a1395e63eb46d9815bfd1a4ea2256702937d5" translate="yes" xml:space="preserve">
          <source>as a shell, thus I picked up &lt;code&gt;sh.exe&lt;/code&gt;. This assures almost 100% compatibility with the scripts coming from *nix. As an added benefit this works as well under DOS if you use DOS-enabled port of pdksh (see &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82888b2ea2ac983fcbffdc2a662722f9eb637ac9" translate="yes" xml:space="preserve">
          <source>as a simple macro call to the system's &lt;code&gt;signbit()&lt;/code&gt;. Users should just always call &lt;code&gt;Perl_signbit()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219042fce9a9511b0a48448658f92bc608f91fc4" translate="yes" xml:space="preserve">
          <source>as a temporary development aid while securing legacy code: for real production code and for new secure code written from scratch, always use the real &lt;a href=&quot;#-T&quot;&gt;&quot;-T&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc448ca1e6145126fcde1afbfc84e38e6144b79" translate="yes" xml:space="preserve">
          <source>as a temporary development aid while securing legacy code: for real production code and for new secure code written from scratch, always use the real &lt;b&gt;-T&lt;/b&gt;.</source>
          <target state="translated">como una ayuda de desarrollo temporal mientras se asegura el c&amp;oacute;digo heredado: para el c&amp;oacute;digo de producci&amp;oacute;n real y para el nuevo c&amp;oacute;digo seguro escrito desde cero, utilice siempre el &lt;b&gt;-T&lt;/b&gt; real .</target>
        </trans-unit>
        <trans-unit id="5a74d8f36fb474bb27b3f38f8cd94ae3c7f71fa4" translate="yes" xml:space="preserve">
          <source>as above would make for rather long-winded and repetitive code -- even if you wisely rewrote this to have quantification (as we call adding a number expression to a noun phrase) be a function called like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfc9d5f69a8d6cbd4bb590ee3975431bc4e65a3" translate="yes" xml:space="preserve">
          <source>as after matching the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab073688be2687e53685015f7b0f7521b1bb83a" translate="yes" xml:space="preserve">
          <source>as after matching the A but failing on the B the &lt;code&gt;(*THEN)&lt;/code&gt; verb will backtrack and try C; but the &lt;code&gt;(*PRUNE)&lt;/code&gt; verb will simply fail.</source>
          <target state="translated">como despu&amp;eacute;s de igualar la A pero fallar en la B, el verbo &lt;code&gt;(*THEN)&lt;/code&gt; retroceder&amp;aacute; e intentar&amp;aacute; C; pero el verbo &lt;code&gt;(*PRUNE)&lt;/code&gt; simplemente fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="9753eb43e6b71481134609a83fe7c9d127007ad0" translate="yes" xml:space="preserve">
          <source>as an additional linker argument.</source>
          <target state="translated">como un argumento adicional de enlace.</target>
        </trans-unit>
        <trans-unit id="819da9a9443370e84fe6f05fc53d70984c447739" translate="yes" xml:space="preserve">
          <source>as an argument, and returns text to insert into the string instead of the &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; escape.</source>
          <target state="translated">como argumento y devuelve texto para insertar en la cadena en lugar del escape &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1e4232743f22df2b484ab094b5e1490c15a9dc6" translate="yes" xml:space="preserve">
          <source>as an array reference (as in the original Tie::Cycle example at the start of this section).</source>
          <target state="translated">como una referencia de arreglo (como en el ejemplo original de Tie::Cycle al comienzo de esta sección).</target>
        </trans-unit>
        <trans-unit id="1fedb298f571e978a357461bbaffb88fd67e6d25" translate="yes" xml:space="preserve">
          <source>as an input to makefile.pl above. Here</source>
          <target state="translated">como una entrada para makefile.pl arriba.Aquí</target>
        </trans-unit>
        <trans-unit id="22c9de0caa5ee810970ed637faf33df068656b95" translate="yes" xml:space="preserve">
          <source>as an instance method will reset the object to the initial state associated with</source>
          <target state="translated">como un método de instancia restablecerá el objeto al estado inicial asociado con</target>
        </trans-unit>
        <trans-unit id="fec541f105313d0d35c30d128259bc532a7d9fe9" translate="yes" xml:space="preserve">
          <source>as are these</source>
          <target state="translated">como lo son estos</target>
        </trans-unit>
        <trans-unit id="3f566ada162944f7b5c8044e94db8ddd5ca7b693" translate="yes" xml:space="preserve">
          <source>as being identical to calling &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode($fh)&lt;/a&gt;&lt;/code&gt; - the stream is made suitable for passing binary data, i.e. each byte is passed as-is. The stream will still be buffered.</source>
          <target state="translated">como id&amp;eacute;ntico a llamar a &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode($fh)&lt;/a&gt;&lt;/code&gt; - el flujo se hace adecuado para pasar datos binarios, es decir, cada byte se pasa tal cual. La transmisi&amp;oacute;n seguir&amp;aacute; almacenada en b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="6161f340af63b0e200a55319e681127e8508a6df" translate="yes" xml:space="preserve">
          <source>as being identical to calling &lt;code&gt;binmode($fh)&lt;/code&gt; - the stream is made suitable for passing binary data, i.e. each byte is passed as-is. The stream will still be buffered (but this was not always true before Perl 5.14).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe36dc0e525faa7dfe808ab76ec97f002c503815" translate="yes" xml:space="preserve">
          <source>as characters in Perl's internal format. For example, to convert ISO-8859-1 data into Microsoft's CP1250 encoding:</source>
          <target state="translated">como personajes en el formato interno de Perl.Por ejemplo,para convertir los datos ISO-8859-1 en la codificación CP1250 de Microsoft:</target>
        </trans-unit>
        <trans-unit id="76512b54297f6cf3e5e9b678d4980ac295e114bd" translate="yes" xml:space="preserve">
          <source>as close as fsetpos() can get it -- for some record-structured files, it's not possible to return to the exact byte offset in the file). Because the file must be reopened, this function cannot be used on temporary-delete files. &lt;code&gt;binmode&lt;/code&gt; returns true if successful, and &lt;code&gt;undef&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ad92a7cc1dc82c3b06fb1e695eb96d880a2a5a" translate="yes" xml:space="preserve">
          <source>as defined by ANSI C are</source>
          <target state="translated">como se define en el ANSI C son</target>
        </trans-unit>
        <trans-unit id="0db0e3d07dd3b225f470aaeae03a367dc468530e" translate="yes" xml:space="preserve">
          <source>as described &lt;a href=&quot;#The-Generic-Object&quot;&gt;further down&lt;/a&gt;.</source>
          <target state="translated">como se describe &lt;a href=&quot;#The-Generic-Object&quot;&gt;m&amp;aacute;s abajo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8f8adcdf42c0a2a9a24916f1ba32a8d72714fa5" translate="yes" xml:space="preserve">
          <source>as expected. Without the specification of &lt;code&gt;&quot;&lt;/code&gt; as an embedded quoter:</source>
          <target state="translated">como se esperaba. Sin la especificaci&amp;oacute;n de &lt;code&gt;&quot;&lt;/code&gt; como cotizador incorporado:</target>
        </trans-unit>
        <trans-unit id="50b0ba5762dbe68ffeef1f2372b2155aab4b196b" translate="yes" xml:space="preserve">
          <source>as far as &lt;code&gt;CODE:&lt;/code&gt; section or &lt;code&gt;PPCODE:&lt;/code&gt; section</source>
          <target state="translated">hasta &lt;code&gt;CODE:&lt;/code&gt; section o &lt;code&gt;PPCODE:&lt;/code&gt; section</target>
        </trans-unit>
        <trans-unit id="4baf8ad65f591cd293a9207d4c3e6ef80259ae5f" translate="yes" xml:space="preserve">
          <source>as far as you can in real-time.</source>
          <target state="translated">tan lejos como puedas en tiempo real.</target>
        </trans-unit>
        <trans-unit id="3f657c5685f4dbb2d51dff03864121342570902a" translate="yes" xml:space="preserve">
          <source>as follows). The name of suspects can either be canonical names or aliases.</source>
          <target state="translated">como sigue).Los nombres de los sospechosos pueden ser nombres canónicos o alias.</target>
        </trans-unit>
        <trans-unit id="44b2b85ecf80cc5b480b0158de904c01eefa0d24" translate="yes" xml:space="preserve">
          <source>as follows:</source>
          <target state="translated">de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="ff4a3f206de020088e59ed005bda8b3029a132f8" translate="yes" xml:space="preserve">
          <source>as is</source>
          <target state="translated">como es</target>
        </trans-unit>
        <trans-unit id="7be0a48e6cca430c773cf99a10b3b59e7934ed11" translate="yes" xml:space="preserve">
          <source>as it feels like a bit of an ugly hack in its current form.</source>
          <target state="translated">ya que se siente como un pequeño y feo hackeo en su forma actual.</target>
        </trans-unit>
        <trans-unit id="878a917630b24304536b1a8522e60b14130b110d" translate="yes" xml:space="preserve">
          <source>as needed.</source>
          <target state="translated">según sea necesario.</target>
        </trans-unit>
        <trans-unit id="04c1652cedd98a02fd9b6c484913e570da0de636" translate="yes" xml:space="preserve">
          <source>as of version 2.x, these classes all work like their IO::Handle counterparts, so we have comparable functionality to IO::String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51e507fa59a767444dbf1b962a404eb04a8e4aa" translate="yes" xml:space="preserve">
          <source>as part of the 'distdir' target (and thus the 'dist' target). This is intended to seamlessly and rapidly populate CPAN with module meta-data. If you wish to shut this feature off, set the &lt;code&gt;NO_META&lt;/code&gt;&lt;code&gt;WriteMakefile()&lt;/code&gt; flag to true.</source>
          <target state="translated">como parte del objetivo 'distdir' (y por tanto, el objetivo 'dist'). Esto est&amp;aacute; destinado a poblar CPAN de manera r&amp;aacute;pida y sin problemas con metadatos del m&amp;oacute;dulo. Si desea desactivar esta funci&amp;oacute;n, establezca el &lt;code&gt;NO_META&lt;/code&gt; &lt;code&gt;WriteMakefile()&lt;/code&gt; en verdadero.</target>
        </trans-unit>
        <trans-unit id="1b4102fd0036fbd6a5a356f9ed338ac369433f6c" translate="yes" xml:space="preserve">
          <source>as passed in cannot be inferred from</source>
          <target state="translated">tal como fue transmitida no puede ser inferida de</target>
        </trans-unit>
        <trans-unit id="6bfafaa825614e0de2c48caf94ccc39c5813c5c8" translate="yes" xml:space="preserve">
          <source>as returned by &lt;a href=&quot;#charblock%28%29&quot;&gt;&quot;charblock()&quot;&lt;/a&gt; and &lt;a href=&quot;#charscript%28%29&quot;&gt;&quot;charscript()&quot;&lt;/a&gt; or as the values of the hash returned by &lt;a href=&quot;#charblocks%28%29&quot;&gt;&quot;charblocks()&quot;&lt;/a&gt; and &lt;a href=&quot;#charscripts%28%29&quot;&gt;&quot;charscripts()&quot;&lt;/a&gt; by using &lt;code&gt;charinrange()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2383664a361c0b34599be3f0ddacd7781220e2a" translate="yes" xml:space="preserve">
          <source>as returned by &lt;a href=&quot;#charblock()&quot;&gt;charblock()&lt;/a&gt; and &lt;a href=&quot;#charscript()&quot;&gt;charscript()&lt;/a&gt; or as the values of the hash returned by &lt;a href=&quot;#charblocks()&quot;&gt;charblocks()&lt;/a&gt; and &lt;a href=&quot;#charscripts()&quot;&gt;charscripts()&lt;/a&gt; by using &lt;code&gt;charinrange()&lt;/code&gt; :</source>
          <target state="translated">como lo devuelve &lt;a href=&quot;#charblock()&quot;&gt;charblock ()&lt;/a&gt; y &lt;a href=&quot;#charscript()&quot;&gt;charscript ()&lt;/a&gt; o como los valores del hash devuelto por &lt;a href=&quot;#charblocks()&quot;&gt;charblocks ()&lt;/a&gt; y &lt;a href=&quot;#charscripts()&quot;&gt;charscripts ()&lt;/a&gt; usando &lt;code&gt;charinrange()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c83d44be22c0359c7a8a15302b7f5e83e6b94790" translate="yes" xml:space="preserve">
          <source>as shown below.</source>
          <target state="translated">como se muestra a continuación.</target>
        </trans-unit>
        <trans-unit id="6daf9fe089003e9cf65e42ff59a1d2773ab32262" translate="yes" xml:space="preserve">
          <source>as the first argument</source>
          <target state="translated">como primer argumento</target>
        </trans-unit>
        <trans-unit id="9407051a9602683282da2f9d01eb30e33b699982" translate="yes" xml:space="preserve">
          <source>as the first character following a &lt;code&gt;&quot;|&quot;&lt;/code&gt; indicating alternation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876bafcdbcd9c80a2d0e2065aacf3d301f41ca7b" translate="yes" xml:space="preserve">
          <source>as the first character following a quantifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31752488710cedb7490f87bbefd7d754b6bf2c00" translate="yes" xml:space="preserve">
          <source>as the first character in a parenthesized grouping like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb92fe3e5232a0e7b3e34da6f4c5b70c782eec8" translate="yes" xml:space="preserve">
          <source>as the first character in a pattern, or following &lt;code&gt;&quot;^&quot;&lt;/code&gt; indicating to anchor the match to the beginning of a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec18f4b29d19edda6a94614141eeda193afce50" translate="yes" xml:space="preserve">
          <source>as the first line in &lt;code&gt;*.cmd&lt;/code&gt; file (&lt;a href=&quot;#-S&quot;&gt;&quot;-S&quot;&lt;/a&gt; due to a bug in cmd.exe's `extproc' handling).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb44b7e0e1eb593d77c64f859e0a77259727455" translate="yes" xml:space="preserve">
          <source>as the first line in &lt;code&gt;*.cmd&lt;/code&gt; file (&lt;b&gt;-S&lt;/b&gt; due to a bug in cmd.exe's `extproc' handling).</source>
          <target state="translated">como la primera l&amp;iacute;nea en el archivo &lt;code&gt;*.cmd&lt;/code&gt; ( &lt;b&gt;-S&lt;/b&gt; debido a un error en el manejo de 'extproc' de cmd.exe).</target>
        </trans-unit>
        <trans-unit id="9afe0920031a79f7bd9f3454807b104ed19d1232" translate="yes" xml:space="preserve">
          <source>as the first line in &lt;code&gt;*.cmd&lt;/code&gt; file (&lt;code&gt;-S&lt;/code&gt; due to a bug in cmd.exe's &quot;extproc&quot; handling). For DOS one should first invent a corresponding batch file and codify it in &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; (see the</source>
          <target state="translated">como la primera l&amp;iacute;nea en el archivo &lt;code&gt;*.cmd&lt;/code&gt; ( &lt;code&gt;-S&lt;/code&gt; debido a un error en el manejo &quot;extproc&quot; de cmd.exe). Para DOS, primero se debe inventar un archivo por lotes correspondiente y codificarlo en &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; (ver el</target>
        </trans-unit>
        <trans-unit id="aa88a9399009fa8389588f0aaf2da6151a41febb" translate="yes" xml:space="preserve">
          <source>as the first line instead. Or you can combine some of the above tricks:</source>
          <target state="translated">como la primera línea en su lugar.O puedes combinar algunos de los trucos anteriores:</target>
        </trans-unit>
        <trans-unit id="0d88bf94a93a4b61f0fa92dfc15bfef6b4012493" translate="yes" xml:space="preserve">
          <source>as the first line of the handler (see &lt;a href=&quot;../perlvar#%24%5eS&quot;&gt;$^S in perlvar&lt;/a&gt;). Because this promotes strange action at a distance, this counterintuitive behavior may be fixed in a future release.</source>
          <target state="translated">como la primera l&amp;iacute;nea del controlador (ver &lt;a href=&quot;../perlvar#%24%5eS&quot;&gt;$ ^ S en perlvar&lt;/a&gt; ). Debido a que esto promueve una acci&amp;oacute;n extra&amp;ntilde;a a distancia, este comportamiento contrario a la intuici&amp;oacute;n puede corregirse en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="fff15c63127de3a3ff7f6050294a22c662f8a08c" translate="yes" xml:space="preserve">
          <source>as the first line of the handler (see &lt;a href=&quot;perlvar#%24%5ES&quot;&gt;&quot;$^S&quot; in perlvar&lt;/a&gt;). Because this promotes strange action at a distance, this counterintuitive behavior may be fixed in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17abd9184d2928495e286f5f11862b4c9a8071d0" translate="yes" xml:space="preserve">
          <source>as the first line of the handler (see &lt;a href=&quot;perlvar#%24%5eS&quot;&gt;$^S in perlvar&lt;/a&gt;). Because this promotes strange action at a distance, this counterintuitive behavior may be fixed in a future release.</source>
          <target state="translated">como la primera l&amp;iacute;nea del controlador (ver &lt;a href=&quot;perlvar#%24%5eS&quot;&gt;$ ^ S en perlvar&lt;/a&gt; ). Debido a que esto promueve una acci&amp;oacute;n extra&amp;ntilde;a a distancia, este comportamiento contrario a la intuici&amp;oacute;n puede corregirse en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="bf7d822469082c4bfc650c2ae1a9bcefcadfb22e" translate="yes" xml:space="preserve">
          <source>as the key. In most cases, this contains only a few keys, but if Perl was invoked via the C &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec[lv]e()&lt;/a&gt;&lt;/code&gt; function, as is the case for some embedded Perl applications or when running under a shell such as GNV bash, the &lt;code&gt;environ&lt;/code&gt; array may have been populated by the calling program.</source>
          <target state="translated">como la clave. En la mayor&amp;iacute;a de los casos, contiene solo unas pocas claves, pero si se invoc&amp;oacute; a Perl a trav&amp;eacute;s de la funci&amp;oacute;n C &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec[lv]e()&lt;/a&gt;&lt;/code&gt; , como es el caso de algunas aplicaciones de Perl incrustadas o cuando se ejecuta en un shell como GNV bash, el &lt;code&gt;environ&lt;/code&gt; La matriz puede haber sido poblada por el programa de llamada.</target>
        </trans-unit>
        <trans-unit id="97749d136001e0ac0fff651b01f4546d71a8a4e7" translate="yes" xml:space="preserve">
          <source>as the key. In most cases, this contains only a few keys, but if Perl was invoked via the C &lt;code&gt;exec[lv]e()&lt;/code&gt; function, as is the case for some embedded Perl applications or when running under a shell such as GNV bash, the &lt;code&gt;environ&lt;/code&gt; array may have been populated by the calling program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d01b7b2a5e71d9e7c928d505a1b934e42c98d8d" translate="yes" xml:space="preserve">
          <source>as the logical name. The normal search order of access modes is used.</source>
          <target state="translated">como el nombre lógico.Se utiliza el orden normal de búsqueda de los modos de acceso.</target>
        </trans-unit>
        <trans-unit id="24bb2a3db47e83fda820245153deab8162cb8ccb" translate="yes" xml:space="preserve">
          <source>as the name of the symbol. When reading an element of &lt;code&gt;%ENV&lt;/code&gt; , the local symbol table is scanned first, followed by the global symbol table.. The characters following &lt;code&gt;CLISYM_&lt;/code&gt; are significant when an element of &lt;code&gt;%ENV&lt;/code&gt; is set or deleted: if the complete string is &lt;code&gt;CLISYM_LOCAL&lt;/code&gt; , the change is made in the local symbol table; otherwise the global symbol table is changed.</source>
          <target state="translated">como el nombre del s&amp;iacute;mbolo. Al leer un elemento de &lt;code&gt;%ENV&lt;/code&gt; , primero se escanea la tabla de s&amp;iacute;mbolos local, seguida de la tabla de s&amp;iacute;mbolos global. Los caracteres que siguen a &lt;code&gt;CLISYM_&lt;/code&gt; son significativos cuando se establece o elimina un elemento de &lt;code&gt;%ENV&lt;/code&gt; : si la cadena completa es &lt;code&gt;CLISYM_LOCAL&lt;/code&gt; , el cambio se realiza en la tabla de s&amp;iacute;mbolos local; de lo contrario, se cambia la tabla de s&amp;iacute;mbolos globales.</target>
        </trans-unit>
        <trans-unit id="4a2e5b87c98feecb2abf855fc73ff54a461f6270" translate="yes" xml:space="preserve">
          <source>as the name of the symbol. When reading an element of &lt;code&gt;%ENV&lt;/code&gt;, the local symbol table is scanned first, followed by the global symbol table.. The characters following &lt;code&gt;CLISYM_&lt;/code&gt; are significant when an element of &lt;code&gt;%ENV&lt;/code&gt; is set or deleted: if the complete string is &lt;code&gt;CLISYM_LOCAL&lt;/code&gt;, the change is made in the local symbol table; otherwise the global symbol table is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43689b10d7e82ce746d34de5bbe78235ef4476bd" translate="yes" xml:space="preserve">
          <source>as though the argument to &lt;code&gt;given&lt;/code&gt; were an element of the hash &lt;code&gt;%foo&lt;/code&gt; , interpreting the braces as hash-element syntax.</source>
          <target state="translated">como si el argumento a &lt;code&gt;given&lt;/code&gt; fuera un elemento del hash &lt;code&gt;%foo&lt;/code&gt; , interpretando las llaves como sintaxis del elemento hash.</target>
        </trans-unit>
        <trans-unit id="11a80ce09776b66373e6105adffc34d0f706cedb" translate="yes" xml:space="preserve">
          <source>as though the argument to &lt;code&gt;given&lt;/code&gt; were an element of the hash &lt;code&gt;%foo&lt;/code&gt;, interpreting the braces as hash-element syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa9ebca57db525b108992870f6a6a0744343a91" translate="yes" xml:space="preserve">
          <source>as though you stored the same variable reference each time, you actually did not! This is a subtle distinction that can produce more efficient code at the risk of misleading all but the most experienced of programmers. So I usually advise against teaching it to beginners. In fact, except for passing arguments to functions, I seldom like to see the gimme-a-reference operator (backslash) used much at all in code. Instead, I advise beginners that they (and most of the rest of us) should try to use the much more easily understood constructors &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; instead of relying upon lexical (or dynamic) scoping and hidden reference-counting to do the right thing behind the scenes.</source>
          <target state="translated">como si almacenara la misma referencia de variable cada vez, &amp;iexcl;en realidad no lo hizo! Esta es una distinci&amp;oacute;n sutil que puede producir c&amp;oacute;digo m&amp;aacute;s eficiente con el riesgo de enga&amp;ntilde;ar a todos menos a los programadores m&amp;aacute;s experimentados. As&amp;iacute; que normalmente desaconsejo ense&amp;ntilde;arlo a principiantes. De hecho, a excepci&amp;oacute;n de pasar argumentos a las funciones, rara vez me gusta ver que el operador gimme-a-reference (barra invertida) se use mucho en el c&amp;oacute;digo. En cambio, aconsejo a los principiantes que ellos (y la mayor&amp;iacute;a del resto de nosotros) deber&amp;iacute;an intentar usar los constructores &lt;code&gt;[]&lt;/code&gt; y &lt;code&gt;{}&lt;/code&gt; mucho m&amp;aacute;s f&amp;aacute;ciles de entender en lugar de confiar en el alcance l&amp;eacute;xico (o din&amp;aacute;mico) y el recuento de referencias ocultas para hacer lo correcto cosa detr&amp;aacute;s de escena.</target>
        </trans-unit>
        <trans-unit id="1b721d8a6c65b8f505bf083f7362443eee48e0d5" translate="yes" xml:space="preserve">
          <source>as used in</source>
          <target state="translated">como se usa en</target>
        </trans-unit>
        <trans-unit id="73b20ad0fd8d8906b930c36d48ac0a852e8a70ab" translate="yes" xml:space="preserve">
          <source>as usual</source>
          <target state="translated">como de costumbre</target>
        </trans-unit>
        <trans-unit id="44bbbac4257f66442d2eb3ff68d4b9dd4661140f" translate="yes" xml:space="preserve">
          <source>as we know that if the final quote does not match, backtracking will not help. See the independent subexpression &lt;a href=&quot;#%28%3F%3Epattern%29&quot;&gt;&quot;&lt;code&gt;(?&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt;&quot;&lt;/a&gt; for more details; possessive quantifiers are just syntactic sugar for that construct. For instance the above example could also be written as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa196bf1305f9de2ff08f52aee250714a733647" translate="yes" xml:space="preserve">
          <source>as we know that if the final quote does not match, backtracking will not help. See the independent subexpression &lt;a href=&quot;#(%3f%3epattern)&quot;&gt;(?&amp;gt;pattern)&lt;/a&gt; for more details; possessive quantifiers are just syntactic sugar for that construct. For instance the above example could also be written as follows:</source>
          <target state="translated">ya que sabemos que si la cotizaci&amp;oacute;n final no coincide, retroceder no ayudar&amp;aacute;. Consulte la subexpresi&amp;oacute;n independiente &lt;a href=&quot;#(%3f%3epattern)&quot;&gt;(?&amp;gt; Patr&amp;oacute;n)&lt;/a&gt; para obtener m&amp;aacute;s detalles; los cuantificadores posesivos son solo az&amp;uacute;car sint&amp;aacute;ctico para esa construcci&amp;oacute;n. Por ejemplo, el ejemplo anterior tambi&amp;eacute;n podr&amp;iacute;a escribirse de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="983291ad5e53a2455ef9e77e2de94ef019d4ba61" translate="yes" xml:space="preserve">
          <source>as well (I use one from pdksh). The path</source>
          <target state="translated">también (uso uno de pdksh).El camino</target>
        </trans-unit>
        <trans-unit id="ffcbb6274e566044113aaf2e534009b9310ede89" translate="yes" xml:space="preserve">
          <source>as well.</source>
          <target state="translated">también.</target>
        </trans-unit>
        <trans-unit id="0b2d56ecd63cccc527289487cbff82b5288f062d" translate="yes" xml:space="preserve">
          <source>as well. Here's a sample entry from that table:</source>
          <target state="translated">también.Aquí hay una entrada de muestra de esa tabla:</target>
        </trans-unit>
        <trans-unit id="163b9e6ac2b85e0d1d3b25a5f039388d7483329f" translate="yes" xml:space="preserve">
          <source>as well. Options are not necessary for the program to work, hence the name 'option', but are used to modify its default behaviour. For example, a program could do its job quietly, but with a suitable option it could provide verbose information about what it did.</source>
          <target state="translated">también.Las opciones no son necesarias para que el programa funcione,de ahí el nombre de &quot;opción&quot;,pero se utilizan para modificar su comportamiento por defecto.Por ejemplo,un programa podría hacer su trabajo en silencio,pero con una opción adecuada podría proporcionar información verborreica sobre lo que hizo.</target>
        </trans-unit>
        <trans-unit id="d09a858ce6260c8d7abc7cb8de62a0dcf62e09bc" translate="yes" xml:space="preserve">
          <source>as, say, an informal verbal description of the solution, or maybe of the problem itself. Isomorphism is, all things considered, a good thing -- it's what problem-solving (and solution-implementing) should look like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef0ed9c31886aeeaa457a7d910b34a3053cddad" translate="yes" xml:space="preserve">
          <source>as_array_ref</source>
          <target state="translated">as_array_ref</target>
        </trans-unit>
        <trans-unit id="e0f6619c3a0d789145899e0d26503b93025880f2" translate="yes" xml:space="preserve">
          <source>as_bin()</source>
          <target state="translated">as_bin()</target>
        </trans-unit>
        <trans-unit id="40bdfd6d624e1b42c7cc51b1e448916ea2d92b71" translate="yes" xml:space="preserve">
          <source>as_bytes()</source>
          <target state="translated">as_bytes()</target>
        </trans-unit>
        <trans-unit id="edc387c660a2b1d84db9f995c1394b0c8f7a00e2" translate="yes" xml:space="preserve">
          <source>as_embedded_typemap</source>
          <target state="translated">as_embedded_typemap</target>
        </trans-unit>
        <trans-unit id="6293714a50a40120f58b4889cff9a65fc732965e" translate="yes" xml:space="preserve">
          <source>as_float()</source>
          <target state="translated">as_float()</target>
        </trans-unit>
        <trans-unit id="c3bc5083cb007923550a1a79fad46180e4d878d7" translate="yes" xml:space="preserve">
          <source>as_hex()</source>
          <target state="translated">as_hex()</target>
        </trans-unit>
        <trans-unit id="bc3cc61bddf0ceabd9f1560cabae0f1be60cc55a" translate="yes" xml:space="preserve">
          <source>as_int()</source>
          <target state="translated">as_int()</target>
        </trans-unit>
        <trans-unit id="003d7a49b767183e39c1b831d4ce7263b750ea27" translate="yes" xml:space="preserve">
          <source>as_int()/as_number()</source>
          <target state="translated">as_int()/as_number()</target>
        </trans-unit>
        <trans-unit id="b901ccf25d95c87562bcdfb5d854356765564f55" translate="yes" xml:space="preserve">
          <source>as_number()</source>
          <target state="translated">as_number()</target>
        </trans-unit>
        <trans-unit id="1200fa194bbc6cba8352b08f67c5ac42078a226e" translate="yes" xml:space="preserve">
          <source>as_oct()</source>
          <target state="translated">as_oct()</target>
        </trans-unit>
        <trans-unit id="2dc8b10c6044c7ab41c6f916b29864155fdf6c87" translate="yes" xml:space="preserve">
          <source>as_string</source>
          <target state="translated">as_string</target>
        </trans-unit>
        <trans-unit id="79edeb962f22e5ee518d39d18e4506c6a2b5ec69" translate="yes" xml:space="preserve">
          <source>as_string_hash</source>
          <target state="translated">as_string_hash</target>
        </trans-unit>
        <trans-unit id="2e17f160551d1e72c91cdeef2d49ac65c0a67ed8" translate="yes" xml:space="preserve">
          <source>as_struct</source>
          <target state="translated">as_struct</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="2c5c18b2494af0fdcd4a7646d2bde2acf847922a" translate="yes" xml:space="preserve">
          <source>ascii ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bc42c101bb8f021d4d389de2f96e84e8de1f7a" translate="yes" xml:space="preserve">
          <source>ascii-ctrl</source>
          <target state="translated">ascii-ctrl</target>
        </trans-unit>
        <trans-unit id="37116f0d227d355bdd165be4b2525441b7ee7e2d" translate="yes" xml:space="preserve">
          <source>asin_real</source>
          <target state="translated">asin_real</target>
        </trans-unit>
        <trans-unit id="ce10f51d7f39f9fc7631435563d91f1e2dd622f5" translate="yes" xml:space="preserve">
          <source>ask DB not to stop in these packages</source>
          <target state="translated">pedir a DB que no se detenga en estos paquetes</target>
        </trans-unit>
        <trans-unit id="dee174cbea8bd461e964d43d9629142d0f5e9d72" translate="yes" xml:space="preserve">
          <source>assemble_meta</source>
          <target state="translated">assemble_meta</target>
        </trans-unit>
        <trans-unit id="968a55475a44bc5482314bb7ff3d7a7b37523d7b" translate="yes" xml:space="preserve">
          <source>assert =&amp;gt; {...}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60544f107576aa75a3a16e2a4d455e8086f18203" translate="yes" xml:space="preserve">
          <source>assertion</source>
          <target state="translated">assertion</target>
        </trans-unit>
        <trans-unit id="18b112e36da8d8376cd2fe7f89592c89b4aefda7" translate="yes" xml:space="preserve">
          <source>assertion botched: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1487b0062ddd019485245d3093b4a8ca191dae6" translate="yes" xml:space="preserve">
          <source>assign arg_hashref, VALUE...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1318e069379ae6cb3a70ee42a96546f428da471f" translate="yes" xml:space="preserve">
          <source>assign_func_args()</source>
          <target state="translated">assign_func_args()</target>
        </trans-unit>
        <trans-unit id="c4407719eccaafa9bde053b1db60d6c0d61f7672" translate="yes" xml:space="preserve">
          <source>assigned</source>
          <target state="translated">assigned</target>
        </trans-unit>
        <trans-unit id="f26b63d628c9b5679c54e6f8f5ee244932da2d7d" translate="yes" xml:space="preserve">
          <source>assignment</source>
          <target state="translated">assignment</target>
        </trans-unit>
        <trans-unit id="3ef74078d06ba61e79bd2aa5816e90a3035fcea9" translate="yes" xml:space="preserve">
          <source>assignment operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18237e23354148ad3de3fd278a74bf877d784ef2" translate="yes" xml:space="preserve">
          <source>assignment-variants of operators are present in the script, they may be generated by the optimizer. For example,</source>
          <target state="translated">Las variantes de asignación de los operadores están presentes en el guión,pueden ser generadas por el optimizador.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="19f88cb673e51233787f63a133933b396397ecad" translate="yes" xml:space="preserve">
          <source>assigns the entire list value to array @foo, but</source>
          <target state="translated">asigna todo el valor de la lista a la matriz @foo,pero</target>
        </trans-unit>
        <trans-unit id="bac4a6a253f6704e2643e1787606b1818276ab16" translate="yes" xml:space="preserve">
          <source>assigns the value of variable $bar to the scalar variable $foo. Note that the value of an actual array in scalar context is the length of the array; the following assigns the value 3 to $foo:</source>
          <target state="translated">asigna el valor de la variable $bar a la variable escalar $foo.Observe que el valor de una matriz real en el contexto escalar es la longitud de la matriz;lo siguiente asigna el valor 3 a $foo:</target>
        </trans-unit>
        <trans-unit id="a2c480bb0d3fb166118fff165602dfb3d8755b71" translate="yes" xml:space="preserve">
          <source>associated with a particular file.</source>
          <target state="translated">asociado con un archivo en particular.</target>
        </trans-unit>
        <trans-unit id="d03fe2e108278a21db78ad03f95614754c65b243" translate="yes" xml:space="preserve">
          <source>associations</source>
          <target state="translated">associations</target>
        </trans-unit>
        <trans-unit id="c86461f009279cf7d8a8df8f4a2bee27c0ebd359" translate="yes" xml:space="preserve">
          <source>associative array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab9b6ea2f82fe54324a745a0be4d6d10a9fd0e5" translate="yes" xml:space="preserve">
          <source>associativity</source>
          <target state="translated">associativity</target>
        </trans-unit>
        <trans-unit id="ae321c05bada36b13f653e5d63881d2980254f64" translate="yes" xml:space="preserve">
          <source>assumes that either the layer has popped itself, or the layer is super special and needs to be retained for other reasons. In most cases it should return</source>
          <target state="translated">asume que o bien la capa se ha reventado a sí misma,o bien la capa es súper especial y necesita ser retenida por otras razones.En la mayoría de los casos debería volver</target>
        </trans-unit>
        <trans-unit id="617755c776549d8f4f3362cdb6a17b675ef13281" translate="yes" xml:space="preserve">
          <source>assuming you have mounted that CD on /cdrom.</source>
          <target state="translated">asumiendo que has montado ese CD en el /cdrom.</target>
        </trans-unit>
        <trans-unit id="c359d69f3f08bb920f2c3b51133205533462093e" translate="yes" xml:space="preserve">
          <source>asy</source>
          <target state="translated">asy</target>
        </trans-unit>
        <trans-unit id="0882a2912a64e563c60a0dab0177a420839995db" translate="yes" xml:space="preserve">
          <source>async BLOCK;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d752f2c5e9504352a8b5051da82d8c592e4d092" translate="yes" xml:space="preserve">
          <source>asynchronous</source>
          <target state="translated">asynchronous</target>
        </trans-unit>
        <trans-unit id="3602b9270e66ab97788614f8a3fd98920bdaf5c7" translate="yes" xml:space="preserve">
          <source>at &lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&lt;/a&gt;.</source>
          <target state="translated">en &lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Conceptual/64bitPorting/index.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="412f08a017337a56b4152e7bc3cd13375ff3254f" translate="yes" xml:space="preserve">
          <source>at &lt;a href=&quot;http://perltraining.com.au/tips/2008-08-20.html&quot;&gt;http://perltraining.com.au/tips/2008-08-20.html&lt;/a&gt;</source>
          <target state="translated">en &lt;a href=&quot;http://perltraining.com.au/tips/2008-08-20.html&quot;&gt;http://perltraining.com.au/tips/2008-08-20.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03c141a669d4789a3576e1e16161a6d944f70e9f" translate="yes" xml:space="preserve">
          <source>at &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/64bitPorting/transition/transition.html&quot;&gt;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/64bitPorting/transition/transition.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763fd237e6f3831141eb71f2fa9c664c2d5dde22" translate="yes" xml:space="preserve">
          <source>at a given position</source>
          <target state="translated">en una posición determinada</target>
        </trans-unit>
        <trans-unit id="9a37607749afe8d9567c08deb31e518558e6f3b5" translate="yes" xml:space="preserve">
          <source>at any one time.</source>
          <target state="translated">en un momento dado.</target>
        </trans-unit>
        <trans-unit id="850ad5d4afbea97738fa95acd1da7e607bd530cc" translate="yes" xml:space="preserve">
          <source>at compile time</source>
          <target state="translated">en el momento de la compilación</target>
        </trans-unit>
        <trans-unit id="b4e380389a774a586c5fa16ad6f747ccd0f5dd49" translate="yes" xml:space="preserve">
          <source>at least</source>
          <target state="translated">al menos</target>
        </trans-unit>
        <trans-unit id="9564a8b2dea482cb502ddc133f411fb7baa8cd10" translate="yes" xml:space="preserve">
          <source>at make time, so you should make perl to follow this along.</source>
          <target state="translated">a tiempo,así que deberías hacer que Perl siguiera con esto.</target>
        </trans-unit>
        <trans-unit id="fbb06e3442915398475cc3a04245a5bbaff4859c" translate="yes" xml:space="preserve">
          <source>at most</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f22c8244d7198bc5973a52b7e608dea1b695bc" translate="yes" xml:space="preserve">
          <source>at run time</source>
          <target state="translated">en tiempo de ejecución</target>
        </trans-unit>
        <trans-unit id="e490f3a80d5cc3f15d3885d16099e39047e2c3bc" translate="yes" xml:space="preserve">
          <source>at startup (in a BEGIN block). This is a hook that allows the sysadmin to customize how Perl behaves. It can for instance be used to add entries to the @INC array to make Perl find modules in non-standard locations.</source>
          <target state="translated">en el arranque (en un bloque BEGIN).Este es un gancho que permite al administrador del sistema personalizar el comportamiento de Perl.Por ejemplo,puede usarse para añadir entradas a la matriz @INC para hacer que Perl encuentre módulos en ubicaciones no estándar.</target>
        </trans-unit>
        <trans-unit id="15d1d5e3a86f87da2663eae7907bc2307a399554" translate="yes" xml:space="preserve">
          <source>at startup.</source>
          <target state="translated">en el arranque.</target>
        </trans-unit>
        <trans-unit id="fdc8cfe05d049efd8ba3e7434e7eaf619158eb0f" translate="yes" xml:space="preserve">
          <source>at the C level</source>
          <target state="translated">en el nivel C</target>
        </trans-unit>
        <trans-unit id="c1388282fa974c0f59a57d7833efecdf9f582735" translate="yes" xml:space="preserve">
          <source>at the end</source>
          <target state="translated">al final</target>
        </trans-unit>
        <trans-unit id="9217e9b0a48bcfc528a9d49dbdf842dbf2a6a760" translate="yes" xml:space="preserve">
          <source>at the end. The &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;SAVETMPS&lt;/code&gt; pair creates a boundary for any temporaries we create. This means that the temporaries we get rid of will be limited to those which were created after these calls.</source>
          <target state="translated">al final. El par &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;SAVETMPS&lt;/code&gt; crea un l&amp;iacute;mite para los temporales que creamos. Esto significa que los temporales de los que nos deshagamos se limitar&amp;aacute;n a los que se crearon despu&amp;eacute;s de estas llamadas.</target>
        </trans-unit>
        <trans-unit id="2c2abfb06e2552e16d1caee4efd7dc6a9a792926" translate="yes" xml:space="preserve">
          <source>at the end. The &lt;code&gt;ENTER&lt;/code&gt;/&lt;code&gt;SAVETMPS&lt;/code&gt; pair creates a boundary for any temporaries we create. This means that the temporaries we get rid of will be limited to those which were created after these calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcfd128d2ba54e6c9380293b323b1260cdc3701" translate="yes" xml:space="preserve">
          <source>at the same level of nesting</source>
          <target state="translated">en el mismo nivel de anidación</target>
        </trans-unit>
        <trans-unit id="8e1733375a8dd981de1735fa2875f132e477b6da" translate="yes" xml:space="preserve">
          <source>at the start (or near the start) of your program. (Note that this</source>
          <target state="translated">al comienzo (o cerca del comienzo)de su programa.(Tenga en cuenta que este</target>
        </trans-unit>
        <trans-unit id="37f302ce8124164c6fcfe7d012fcfb1e33675294" translate="yes" xml:space="preserve">
          <source>at the start of the function, and</source>
          <target state="translated">al comienzo de la función,y</target>
        </trans-unit>
        <trans-unit id="9b151ca84837e5f88e85ae049f9b552e13c6fe0d" translate="yes" xml:space="preserve">
          <source>at the top of your code.</source>
          <target state="translated">en la parte superior de su código.</target>
        </trans-unit>
        <trans-unit id="89c4f7ac43cc28c22dbb5ebc96fabde7dae0b382" translate="yes" xml:space="preserve">
          <source>at the top of your program, where &lt;b&gt;-mysw&lt;/b&gt; are any command line switches you want to pass to Perl. You can now invoke the program directly, by saying &lt;code&gt;perl program&lt;/code&gt; , or as a DCL procedure, by saying &lt;code&gt;@program&lt;/code&gt; (or implicitly via</source>
          <target state="translated">en la parte superior de su programa, donde &lt;b&gt;-mysw&lt;/b&gt; son los modificadores de l&amp;iacute;nea de comandos que desea pasar a Perl. Ahora puede invocar el programa directamente, diciendo &lt;code&gt;perl program&lt;/code&gt; , o como un procedimiento DCL, diciendo &lt;code&gt;@program&lt;/code&gt; (o impl&amp;iacute;citamente a trav&amp;eacute;s de</target>
        </trans-unit>
        <trans-unit id="010076c360aa51a67431ee949d9678e570e14d81" translate="yes" xml:space="preserve">
          <source>at the top of your program, where &lt;b&gt;-mysw&lt;/b&gt; are any command line switches you want to pass to Perl. You can now invoke the program directly, by saying &lt;code&gt;perl program&lt;/code&gt;, or as a DCL procedure, by saying &lt;code&gt;@program&lt;/code&gt; (or implicitly via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e70d57f73905d45b6f79912c7b2b82874d2e8a5" translate="yes" xml:space="preserve">
          <source>at the top of your program. This aliases all the short names to the long names in the current package. Some even have medium names, generally borrowed from &lt;b&gt;awk&lt;/b&gt;. For more info, please see &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;.</source>
          <target state="translated">en la parte superior de su programa. Esto alias todos los nombres cortos a los nombres largos en el paquete actual. Algunos incluso tienen nombres medianos, generalmente tomados de &lt;b&gt;awk&lt;/b&gt; . Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;english&quot;&gt;Ingl&amp;eacute;s&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c4d67f365ec49b947ee79badac65584b0444347" translate="yes" xml:space="preserve">
          <source>at the top of your script, Math::BigFloat and Math::BigInt will be loaded and any constant number will be converted to an object (Math::BigFloat for floats like 3.1415 and Math::BigInt for integers like 1234).</source>
          <target state="translated">en la parte superior de tu guión,Math::BigFloat y Math::BigInt serán cargados y cualquier número constante será convertido en un objeto (Math::BigFloat para flotadores como 3.1415 y Math::BigInt para números enteros como 1234).</target>
        </trans-unit>
        <trans-unit id="c90414cee16b2af97b8d5180cc885c0f62d6800c" translate="yes" xml:space="preserve">
          <source>at which point %greetings has the contents:</source>
          <target state="translated">en cuyo momento %saludos tiene el contenido:</target>
        </trans-unit>
        <trans-unit id="3bb758cfc583548bd5a6d49b0a553b6fe91a0689" translate="yes" xml:space="preserve">
          <source>at your peril</source>
          <target state="translated">bajo su propio riesgo</target>
        </trans-unit>
        <trans-unit id="b1a7357ef61ecd1781b4633dc3e33a383686041c" translate="yes" xml:space="preserve">
          <source>atan2</source>
          <target state="translated">atan2</target>
        </trans-unit>
        <trans-unit id="fc337a53ff380e9cc91c7f4ada35b7c83e1170cd" translate="yes" xml:space="preserve">
          <source>atan2 Y,X</source>
          <target state="translated">atan2 Y,X</target>
        </trans-unit>
        <trans-unit id="e226f7ca13e8e842c24e08f6089be3e8e4a7dbda" translate="yes" xml:space="preserve">
          <source>atfork_lock</source>
          <target state="translated">atfork_lock</target>
        </trans-unit>
        <trans-unit id="7dedf46132af7daae669d99e34058a9d69562014" translate="yes" xml:space="preserve">
          <source>atfork_unlock</source>
          <target state="translated">atfork_unlock</target>
        </trans-unit>
        <trans-unit id="f7243228637fb0b2ed90f7f5c750564b9733bc3b" translate="yes" xml:space="preserve">
          <source>atmark</source>
          <target state="translated">atmark</target>
        </trans-unit>
        <trans-unit id="5604a15f93274b4be18e2e5703972fcae8d4191f" translate="yes" xml:space="preserve">
          <source>atolf.U</source>
          <target state="translated">atolf.U</target>
        </trans-unit>
        <trans-unit id="20378f82e37925c4f68137e0b5f0ceba9d2f7e7d" translate="yes" xml:space="preserve">
          <source>atoll.U</source>
          <target state="translated">atoll.U</target>
        </trans-unit>
        <trans-unit id="c6f57180e462a4f1e9de24fbe811cfb2c24a0cf9" translate="yes" xml:space="preserve">
          <source>atom</source>
          <target state="translated">atom</target>
        </trans-unit>
        <trans-unit id="7e56d75872e5c121dfdfb6a14a9691cd17d30089" translate="yes" xml:space="preserve">
          <source>atomic operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4db99fa19aece67f97821a83c30ca20f360728" translate="yes" xml:space="preserve">
          <source>attach ( [FLAG] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e96175f76342acf17b6320df16c52fb6bb0caad" translate="yes" xml:space="preserve">
          <source>attrLetsToBits</source>
          <target state="translated">attrLetsToBits</target>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="translated">attribute</target>
        </trans-unit>
        <trans-unit id="e23a34b8f5b2f31817cabbac17ddfd0c73c0f578" translate="yes" xml:space="preserve">
          <source>attribute and a &lt;a href=&quot;to&quot;&gt;to&lt;/a&gt; attribute. For example, this Pod source:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36eb16110eb8a88635119857df79b6c64c120d6b" translate="yes" xml:space="preserve">
          <source>attribute contains the raw, original, unescaped content of the &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; formatting code. In addition to the examples above, take notice of the following event structure produced by the following &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; formatting code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c2be758a3cc76c4623d17431c991d982269863" translate="yes" xml:space="preserve">
          <source>attribute depends on what the raw content of the &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; is, so that is why the event structure is the same &quot;for the most part&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa7447496328d92dc17c3d0fc8649f8ad7d1856" translate="yes" xml:space="preserve">
          <source>attribute for this start-token object to</source>
          <target state="translated">atributo para este objeto de inicio a</target>
        </trans-unit>
        <trans-unit id="33337ed515c0adfa6a07049f9d97abb273869d7a" translate="yes" xml:space="preserve">
          <source>attribute for this start-token object, or undef.</source>
          <target state="translated">para este objeto de inicio,o undef.</target>
        </trans-unit>
        <trans-unit id="635b70015e7c05f3ddf797a8016ddd2b877116b9" translate="yes" xml:space="preserve">
          <source>attribute has the value &quot;4&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2d8bd4a863914c6fe78c4af3b83e46cf21742e" translate="yes" xml:space="preserve">
          <source>attribute instead of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a27fffadd78aff8aea90f322d0e3c182ebe8fc6" translate="yes" xml:space="preserve">
          <source>attribute is always present, and always has the value &quot;preserve&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de5ab6e74bf90046665d795fb6fd86c7fc33389" translate="yes" xml:space="preserve">
          <source>attribute is whatever value is after the &quot;=over&quot; directive, as in &quot;=over 8&quot;. If no such value is specified in the directive, then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc11438dd7a3a71579ff2fbd4cbd865389001ea" translate="yes" xml:space="preserve">
          <source>attribute where any surrounding whitespace is condensed into a single ' '. For example, given L&amp;lt; link&amp;gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd5029c0ee8c537ceb3bcafc356535c41535530" translate="yes" xml:space="preserve">
          <source>attribute will be the line number of the first Pod directive in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d033607bbf34f83e3630b1dd80582d806a15726d" translate="yes" xml:space="preserve">
          <source>attribute will be the line number of the first line of this verbatim block. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b5548d2ec00f76ce8edd8361665d4a2eee529f" translate="yes" xml:space="preserve">
          <source>attribute will be the line number of the start of the paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b20fba0fab9ba18103ec2bd1356db9bef98d4f" translate="yes" xml:space="preserve">
          <source>attribute will not be meaningful; under current implementations, it will probably be the line number of the last line in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120352409cf88bde6a5d6d735c82d284a63f2f2f" translate="yes" xml:space="preserve">
          <source>attribute,</source>
          <target state="translated">attribute,</target>
        </trans-unit>
        <trans-unit id="d3b2de5fec7ca4555161fd1b778fee83a6e6a5b7" translate="yes" xml:space="preserve">
          <source>attribute, and there will be no &lt;code&gt;content-implicit=&quot;yes&quot;&lt;/code&gt; attribute (whose presence means that the Pod parser had to infer what text should appear as the link text -- as opposed to cases where that attribute is absent, which means that the Pod parser did</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d08262e5d32be186d16ff80c527ee8f0047168" translate="yes" xml:space="preserve">
          <source>attribute, or both. The &lt;code&gt;type=&quot;pod&quot;&lt;/code&gt; attribute is always specified for this type of L code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8109399516cf822497cfea4844218e9687c1dde1" translate="yes" xml:space="preserve">
          <source>attribute, whereas this Pod source:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532e0b673f29b33974de4e5cfb765377c850dfdb" translate="yes" xml:space="preserve">
          <source>attribute. For example, this Pod source:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f67a250d8254339cc572b200990d99fe1baf29" translate="yes" xml:space="preserve">
          <source>attributes</source>
          <target state="translated">attributes</target>
        </trans-unit>
        <trans-unit id="247d5e69b38550a7d0b09aea424ed5dab3a67bad" translate="yes" xml:space="preserve">
          <source>attributes - get/set subroutine or variable attributes</source>
          <target state="translated">atributos-get/set subrutina o atributos variables</target>
        </trans-unit>
        <trans-unit id="accd886bc0d434d8e4eb3d97214b963815364bb7" translate="yes" xml:space="preserve">
          <source>attributes are as with the other over-* events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ad7c39fecdf32064de2e39ae851da53a46bc0b" translate="yes" xml:space="preserve">
          <source>attributes of &quot;item-number&quot; elements in a given &quot;over-number&quot; area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6a96d02eaab4e91ebed96db44f05d3adbda240" translate="yes" xml:space="preserve">
          <source>attributes), and an error message might be issued to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c96eab257b4cf4e5e658df68be3609a71585745" translate="yes" xml:space="preserve">
          <source>attrname</source>
          <target state="translated">attrname</target>
        </trans-unit>
        <trans-unit id="609ae5d56623717e5f042c6463571bf7716a83b4" translate="yes" xml:space="preserve">
          <source>auth ( SASL )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da389447cc56fe63760b8bfd30bef22a857ad05a" translate="yes" xml:space="preserve">
          <source>auth ( USERNAME, PASSWORD )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e865e1c1b3297ce69dcf97f5261cfbf03fa105" translate="yes" xml:space="preserve">
          <source>authinfo ( USER, PASS )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e2db9ebc7cdc40e2963dd1da8e03b1d661a4ac" translate="yes" xml:space="preserve">
          <source>authinfo_simple ( USER, PASS )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64cd8e32f5ac7553c150bd05d6f2252bb73f68d" translate="yes" xml:space="preserve">
          <source>author</source>
          <target state="translated">author</target>
        </trans-unit>
        <trans-unit id="6c1a67bf1e74785e2b7674a2f30a0cf297f56720" translate="yes" xml:space="preserve">
          <source>author_id, owner_id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c35d48339ebb4e1e77c1d6c3dffa846d1b19b66" translate="yes" xml:space="preserve">
          <source>authorize ( [AUTH [, RESP]])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e3fd0f012c27834ea5ef3cf1dfef96e9190b40" translate="yes" xml:space="preserve">
          <source>authors</source>
          <target state="translated">authors</target>
        </trans-unit>
        <trans-unit id="480abf89fe2d1830b23e7098edc6d51d774d0c2a" translate="yes" xml:space="preserve">
          <source>authors/id/TOMC/scripts/nshist.gz</source>
          <target state="translated">authors/id/TOMC/scripts/nshist.gz</target>
        </trans-unit>
        <trans-unit id="c33fcb6996455fe1e1fa0a761ee443d59c481aa3" translate="yes" xml:space="preserve">
          <source>auto/</source>
          <target state="translated">auto/</target>
        </trans-unit>
        <trans-unit id="379a77c54f6ae1790a2244a0d2c048af4e634475" translate="yes" xml:space="preserve">
          <source>auto/$module/$module.bs</source>
          <target state="translated">auto/$module/$module.bs</target>
        </trans-unit>
        <trans-unit id="220e6841a8a7621c4a89ea7b80f1f146f73eaf9b" translate="yes" xml:space="preserve">
          <source>auto/DBD/Oracle/Oracle.a</source>
          <target state="translated">auto/DBD/Oracle/Oracle.a</target>
        </trans-unit>
        <trans-unit id="51ebf6d6fd8909a977306dd245925df9ee90fd5f" translate="yes" xml:space="preserve">
          <source>auto/Foo/*.mo</source>
          <target state="translated">auto/Foo/*.mo</target>
        </trans-unit>
        <trans-unit id="e694098f1cf7520142821fcc984e3d661c44f43f" translate="yes" xml:space="preserve">
          <source>auto/Foo/*.po</source>
          <target state="translated">auto/Foo/*.po</target>
        </trans-unit>
        <trans-unit id="3c5e43613cff090be4fc50d8ae5dd6d77a6b436a" translate="yes" xml:space="preserve">
          <source>auto/Socket/Socket.a</source>
          <target state="translated">auto/Socket/Socket.a</target>
        </trans-unit>
        <trans-unit id="2be06c1e85af3aeda93bd94fc5f8c8f0ca1a6fcf" translate="yes" xml:space="preserve">
          <source>auto/Socket/Socket.so</source>
          <target state="translated">auto/Socket/Socket.so</target>
        </trans-unit>
        <trans-unit id="0159b1c4926c7d3e58575705e2b2446e2f089413" translate="yes" xml:space="preserve">
          <source>auto/funcname.al</source>
          <target state="translated">auto/funcname.al</target>
        </trans-unit>
        <trans-unit id="61fff2e1a22690e6d5947e853162ef541dc4e471" translate="yes" xml:space="preserve">
          <source>auto_abbrev</source>
          <target state="translated">auto_abbrev</target>
        </trans-unit>
        <trans-unit id="2afbae650d151ea0265adb3f3c3d215c4897c2f6" translate="yes" xml:space="preserve">
          <source>auto_commit</source>
          <target state="translated">auto_commit</target>
        </trans-unit>
        <trans-unit id="402c024f88b71207c57d4f97b705333a6f774f23" translate="yes" xml:space="preserve">
          <source>auto_help (default:disabled)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e471b91c6b9278c4206cdf40a0c4bd988e44fa" translate="yes" xml:space="preserve">
          <source>auto_version (default:disabled)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29dbf9fbbc1982eb3494d98a1ba20678ee1cd75a" translate="yes" xml:space="preserve">
          <source>autobundle</source>
          <target state="translated">autobundle</target>
        </trans-unit>
        <trans-unit id="d7fdb81095b8f0d754d3385c78ee0178778a27e1" translate="yes" xml:space="preserve">
          <source>autochomp</source>
          <target state="translated">autochomp</target>
        </trans-unit>
        <trans-unit id="a577d5867e3da0a70fe888d4e799c74e3bb3acee" translate="yes" xml:space="preserve">
          <source>autodie</source>
          <target state="translated">autodie</target>
        </trans-unit>
        <trans-unit id="3d06c1fb0d41b3bcd406473263f2d39a8385f847" translate="yes" xml:space="preserve">
          <source>autodie - Replace functions with ones that succeed or die with lexical scope</source>
          <target state="translated">autodie-Reemplazar las funciones con las que tienen éxito o mueren con alcance léxico</target>
        </trans-unit>
        <trans-unit id="a11d8629a6714617f42a511f4ed6cd917d35963b" translate="yes" xml:space="preserve">
          <source>autodie and string eval</source>
          <target state="translated">autodie y string eval</target>
        </trans-unit>
        <trans-unit id="dc0d67b14cb1a5d70192f36381979b2f933bf9e3" translate="yes" xml:space="preserve">
          <source>autodie::Scope::Guard</source>
          <target state="translated">autodie::Scope::Guard</target>
        </trans-unit>
        <trans-unit id="c111b8358fe6c36d7e3a144ae44091f187d31532" translate="yes" xml:space="preserve">
          <source>autodie::Scope::Guard - Wrapper class for calling subs at end of scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22f61d277dedcb9888724212ede885048f0106e" translate="yes" xml:space="preserve">
          <source>autodie::Scope::GuardStack</source>
          <target state="translated">autodie::Scope::GuardStack</target>
        </trans-unit>
        <trans-unit id="014cb28009b96ff9c04108e0c47c7a66680b1e80" translate="yes" xml:space="preserve">
          <source>autodie::Scope::GuardStack - Hook stack for managing scopes via %^H</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8095a3005474796d1569dd550928d5b1089df68" translate="yes" xml:space="preserve">
          <source>autodie::Util</source>
          <target state="translated">autodie::Util</target>
        </trans-unit>
        <trans-unit id="92da7bd8499bb8812f4a6d9227502313585550d0" translate="yes" xml:space="preserve">
          <source>autodie::Util - Internal Utility subroutines for autodie and Fatal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a1d00617abf34e5c8765165fc1ca159f49c23e" translate="yes" xml:space="preserve">
          <source>autodie::exception</source>
          <target state="translated">autodie::exception</target>
        </trans-unit>
        <trans-unit id="f12923cae5ec41be8c4851646d2770147ec3da87" translate="yes" xml:space="preserve">
          <source>autodie::exception - Exceptions from autodying functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d35bf27341634100e35a0c8ca835be04f2fed3" translate="yes" xml:space="preserve">
          <source>autodie::exception::system</source>
          <target state="translated">autodie::exception::system</target>
        </trans-unit>
        <trans-unit id="4840ea88280488a903534f4a0c898c6024d8a774" translate="yes" xml:space="preserve">
          <source>autodie::exception::system - Exceptions from autodying system().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e24167ca9afa6c7f2b5a925033e7618b5d44476" translate="yes" xml:space="preserve">
          <source>autodie::hints</source>
          <target state="translated">autodie::hints</target>
        </trans-unit>
        <trans-unit id="ec9975be99761c25ec7219a6a4cc33b4e8e51342" translate="yes" xml:space="preserve">
          <source>autodie::hints - Provide hints about user subroutines to autodie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aea00cb8279f90b1ef25b7437493aee07c83547" translate="yes" xml:space="preserve">
          <source>autodie::skip</source>
          <target state="translated">autodie::skip</target>
        </trans-unit>
        <trans-unit id="846768212cb683ca0ccba14874187744a3f4877e" translate="yes" xml:space="preserve">
          <source>autodie::skip - Skip a package when throwing autodie exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7554acb29f084d6cb46fbc0e7508ae57a54cbdfc" translate="yes" xml:space="preserve">
          <source>autoexec.bat</source>
          <target state="translated">autoexec.bat</target>
        </trans-unit>
        <trans-unit id="b2858151dc8dfe7daca5d572d920ca322993a122" translate="yes" xml:space="preserve">
          <source>autoflush</source>
          <target state="translated">autoflush</target>
        </trans-unit>
        <trans-unit id="668672fa7b7fd5fb3d195b4a6baca1536dd33f27" translate="yes" xml:space="preserve">
          <source>autogeneration</source>
          <target state="translated">autogeneration</target>
        </trans-unit>
        <trans-unit id="e50d5312673c20578fdc133952a68f0db7e850f2" translate="yes" xml:space="preserve">
          <source>autoincrement</source>
          <target state="translated">autoincrement</target>
        </trans-unit>
        <trans-unit id="4f25d09afc26355e099f60888cb6afb436cd27bf" translate="yes" xml:space="preserve">
          <source>autoload</source>
          <target state="translated">autoload</target>
        </trans-unit>
        <trans-unit id="05012112e2ffc3c215bad8795054b22b58e0e1a6" translate="yes" xml:space="preserve">
          <source>autoload PACKAGE, VERSION, AUTOLOADER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9af19367e37b3fd7b0448b5a6cf2432cce858e" translate="yes" xml:space="preserve">
          <source>autoload_remote</source>
          <target state="translated">autoload_remote</target>
        </trans-unit>
        <trans-unit id="64e3d9c664534c5dc480d648743bea7d2acbe343" translate="yes" xml:space="preserve">
          <source>automatically assigns distinct sequential IDs to things for which no ID was supplied by the caller. A default value expression may also refer to parameters earlier in the signature, making the default for one parameter vary according to the earlier parameters. For example,</source>
          <target state="translated">asigna automáticamente distintas identificaciones secuenciales a las cosas para las que no se suministró ninguna identificación por parte de la persona que llama.Una expresión de valor por defecto también puede referirse a parámetros anteriores en la firma,haciendo que el valor por defecto de un parámetro varíe según los parámetros anteriores.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="6b7d64e164b77abd5a26b00692b29b74ebe0531e" translate="yes" xml:space="preserve">
          <source>automatically searches to find the earliest stable version for which the test case passes. Run &lt;code&gt;Porting/bisect.pl --help&lt;/code&gt; for the full documentation, including how to set the &lt;code&gt;Configure&lt;/code&gt; and build time options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57017ac4b77af63d6b742fe5c253a70fa799e907" translate="yes" xml:space="preserve">
          <source>autosplit</source>
          <target state="translated">autosplit</target>
        </trans-unit>
        <trans-unit id="76fc9ebd6695f30477da08fb8142ffeedfeb7837" translate="yes" xml:space="preserve">
          <source>autosplit.ix</source>
          <target state="translated">autosplit.ix</target>
        </trans-unit>
        <trans-unit id="a5d5b1a8b0a28fc771323790020196c5accafa43" translate="yes" xml:space="preserve">
          <source>autouse</source>
          <target state="translated">autouse</target>
        </trans-unit>
        <trans-unit id="442893c8365aac3e6f7baa2c6d61b464ed2881a4" translate="yes" xml:space="preserve">
          <source>autouse - postpone load of modules until a function is used</source>
          <target state="translated">autouso-posponer la carga de los módulos hasta que se utilice una función</target>
        </trans-unit>
        <trans-unit id="5d4dfc227465e494c0c115736952236fb57eead0" translate="yes" xml:space="preserve">
          <source>autovivification</source>
          <target state="translated">autovivification</target>
        </trans-unit>
        <trans-unit id="5c4337373ca318929efba1f1977eed88f111a055" translate="yes" xml:space="preserve">
          <source>aux_list(cv)</source>
          <target state="translated">aux_list(cv)</target>
        </trans-unit>
        <trans-unit id="dd1180454c203de060904d192ac433fa587b6a84" translate="yes" xml:space="preserve">
          <source>auxiliary/GraphemeBreakTest.html</source>
          <target state="translated">auxiliary/GraphemeBreakTest.html</target>
        </trans-unit>
        <trans-unit id="a63105fc1df24429a2b75699b2ca788863d0a84f" translate="yes" xml:space="preserve">
          <source>auxiliary/LineBreakTest.html</source>
          <target state="translated">auxiliary/LineBreakTest.html</target>
        </trans-unit>
        <trans-unit id="e8249568a2c6df401c77089426c797a70a610f82" translate="yes" xml:space="preserve">
          <source>auxiliary/SentenceBreakTest.html</source>
          <target state="translated">auxiliary/SentenceBreakTest.html</target>
        </trans-unit>
        <trans-unit id="a679f7ff1afe202cb29dd1069cb2ddd9d2ac3913" translate="yes" xml:space="preserve">
          <source>auxiliary/WordBreakTest.html</source>
          <target state="translated">auxiliary/WordBreakTest.html</target>
        </trans-unit>
        <trans-unit id="7d4a1ec6821afa3e290c645e7f8553cda905013e" translate="yes" xml:space="preserve">
          <source>av.c</source>
          <target state="translated">av.c</target>
        </trans-unit>
        <trans-unit id="d52131125e175ad369ff2ead93d060398ec44bd0" translate="yes" xml:space="preserve">
          <source>av_arylen_p</source>
          <target state="translated">av_arylen_p</target>
        </trans-unit>
        <trans-unit id="7fa2741f7a8e3e39c280147cc62e4f272dc30365" translate="yes" xml:space="preserve">
          <source>av_clear</source>
          <target state="translated">av_clear</target>
        </trans-unit>
        <trans-unit id="91ebee21b0f25534f0b8be977b1952e47feba575" translate="yes" xml:space="preserve">
          <source>av_create_and_push</source>
          <target state="translated">av_create_and_push</target>
        </trans-unit>
        <trans-unit id="b9a9f5f7fb30c245f071d3558efeee9878de90a8" translate="yes" xml:space="preserve">
          <source>av_create_and_unshift_one</source>
          <target state="translated">av_create_and_unshift_one</target>
        </trans-unit>
        <trans-unit id="f6c772a926129049a482f5e5eef4c0cef92a6df6" translate="yes" xml:space="preserve">
          <source>av_delete</source>
          <target state="translated">av_delete</target>
        </trans-unit>
        <trans-unit id="e0584133cb5a99f3ff703f123f1add680d923205" translate="yes" xml:space="preserve">
          <source>av_exists</source>
          <target state="translated">av_exists</target>
        </trans-unit>
        <trans-unit id="8cf315bfc28e4183097603e398dd606fb75a92e9" translate="yes" xml:space="preserve">
          <source>av_extend</source>
          <target state="translated">av_extend</target>
        </trans-unit>
        <trans-unit id="969538e0cc4f2f8bb79fff826bf4ba6204f3b9dd" translate="yes" xml:space="preserve">
          <source>av_extend_guts</source>
          <target state="translated">av_extend_guts</target>
        </trans-unit>
        <trans-unit id="4dbf9ad55ba810e631a283196ca048461ab7a775" translate="yes" xml:space="preserve">
          <source>av_fetch</source>
          <target state="translated">av_fetch</target>
        </trans-unit>
        <trans-unit id="63f7efd66eb3e9cacf0aa524cdb984668dcfe333" translate="yes" xml:space="preserve">
          <source>av_fill</source>
          <target state="translated">av_fill</target>
        </trans-unit>
        <trans-unit id="9808d394bec6fa760f60a4a47552a2370986ac9f" translate="yes" xml:space="preserve">
          <source>av_iter_p</source>
          <target state="translated">av_iter_p</target>
        </trans-unit>
        <trans-unit id="4111003113ddea377a1489ef31ff8e6afa039d3c" translate="yes" xml:space="preserve">
          <source>av_len</source>
          <target state="translated">av_len</target>
        </trans-unit>
        <trans-unit id="26ce24376c0af018931b9119a9cce5adf11f62ea" translate="yes" xml:space="preserve">
          <source>av_make</source>
          <target state="translated">av_make</target>
        </trans-unit>
        <trans-unit id="25c316683bf8917039852f251e39ae37bf398585" translate="yes" xml:space="preserve">
          <source>av_nonelem</source>
          <target state="translated">av_nonelem</target>
        </trans-unit>
        <trans-unit id="8722570d82a9920bffbbe0567144037d4ec2f9d8" translate="yes" xml:space="preserve">
          <source>av_pop</source>
          <target state="translated">av_pop</target>
        </trans-unit>
        <trans-unit id="730c41c52a3553ffdb53a9e7fff18ca7913135a3" translate="yes" xml:space="preserve">
          <source>av_push</source>
          <target state="translated">av_push</target>
        </trans-unit>
        <trans-unit id="2846461d400536cd450d6312e4d9cbf65d4b03e6" translate="yes" xml:space="preserve">
          <source>av_reify</source>
          <target state="translated">av_reify</target>
        </trans-unit>
        <trans-unit id="e59b0439f03a55c2dc789113a756420b7049e68d" translate="yes" xml:space="preserve">
          <source>av_reify called on tied array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56413731c6443156c657c5ae1d4340cc43ca1a06" translate="yes" xml:space="preserve">
          <source>av_shift</source>
          <target state="translated">av_shift</target>
        </trans-unit>
        <trans-unit id="27ae04d947c907457183f29701206cc62ef9995b" translate="yes" xml:space="preserve">
          <source>av_store</source>
          <target state="translated">av_store</target>
        </trans-unit>
        <trans-unit id="2d64aa2c54986ec3e7999adee68aa2b6b7163139" translate="yes" xml:space="preserve">
          <source>av_tindex</source>
          <target state="translated">av_tindex</target>
        </trans-unit>
        <trans-unit id="3b213e0d90972281e7460bf469452b71ae88764f" translate="yes" xml:space="preserve">
          <source>av_top_index</source>
          <target state="translated">av_top_index</target>
        </trans-unit>
        <trans-unit id="33660ab02957b829adfb6323d75865fff942b1c5" translate="yes" xml:space="preserve">
          <source>av_undef</source>
          <target state="translated">av_undef</target>
        </trans-unit>
        <trans-unit id="a016ac9d25a267e84346d117bb2283bba27198e1" translate="yes" xml:space="preserve">
          <source>av_unshift</source>
          <target state="translated">av_unshift</target>
        </trans-unit>
        <trans-unit id="bf2d347acf0d2210411dbd48fd0188278826a510" translate="yes" xml:space="preserve">
          <source>available when the &lt;code&gt;seq&lt;/code&gt; method is used along with the R_CURSOR flag.</source>
          <target state="translated">disponible cuando se utiliza el m&amp;eacute;todo &lt;code&gt;seq&lt;/code&gt; junto con el indicador R_CURSOR.</target>
        </trans-unit>
        <trans-unit id="5b2f5ffc6516e12ddb85b8802e4260a6688c946b" translate="yes" xml:space="preserve">
          <source>available. After the first argument, &lt;code&gt;skip(...)&lt;/code&gt; works exactly the same way as &lt;code&gt;ok(...)&lt;/code&gt; does.</source>
          <target state="translated">disponible. Despu&amp;eacute;s del primer argumento, &lt;code&gt;skip(...)&lt;/code&gt; funciona exactamente de la misma manera que &lt;code&gt;ok(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de42df957f23daa4c8157074e0625209abd6488c" translate="yes" xml:space="preserve">
          <source>avoids such a degradation.</source>
          <target state="translated">evita tal degradación.</target>
        </trans-unit>
        <trans-unit id="c027a379a046e31dfb0f6b178d42c47ae4aba491" translate="yes" xml:space="preserve">
          <source>awk</source>
          <target state="translated">awk</target>
        </trans-unit>
        <trans-unit id="e418c6a55a4fb786dadd646e1573be4fd2df9653" translate="yes" xml:space="preserve">
          <source>awk.exe</source>
          <target state="translated">awk.exe</target>
        </trans-unit>
        <trans-unit id="2a2e1206b4222b0d7cc8c8a1d8b302ee70cfe817" translate="yes" xml:space="preserve">
          <source>ax</source>
          <target state="translated">ax</target>
        </trans-unit>
        <trans-unit id="6431b8949d26ab22586e5fea24d5e1fcf2e09540" translate="yes" xml:space="preserve">
          <source>axes. Mathematicians call</source>
          <target state="translated">hachas.Los matemáticos llaman</target>
        </trans-unit>
        <trans-unit id="69036a2af9bfb0d5daf1763137608136cb2401bd" translate="yes" xml:space="preserve">
          <source>axis, and therefore</source>
          <target state="translated">y por lo tanto</target>
        </trans-unit>
        <trans-unit id="e8e340942e36c5463f6d6ae678f806cf14a11886" translate="yes" xml:space="preserve">
          <source>axis. There is a notation for this using the exponential form, which is:</source>
          <target state="translated">eje.Hay una notación para esto usando la forma exponencial,que es:</target>
        </trans-unit>
        <trans-unit id="85f73bad0a71d5e81d44f69fff24051a84f9e8cb" translate="yes" xml:space="preserve">
          <source>azimuthal</source>
          <target state="translated">azimuthal</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="ee6b9af78e9cb7153a0b28a0742ca016f08ad71e" translate="yes" xml:space="preserve">
          <source>b [file]:[line] [condition]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecb059c093cdc1dc92b2bc475757c7bd89bdf41" translate="yes" xml:space="preserve">
          <source>b [line] [condition]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6f45e7b385d86d257b1bc01dfc782704515b7a" translate="yes" xml:space="preserve">
          <source>b compile subname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee7e3509d80477e6df0cb068049e37cacb4b1e0" translate="yes" xml:space="preserve">
          <source>b load filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e45e5debaaf05d7e21f8517c89076892bf016f" translate="yes" xml:space="preserve">
          <source>b postpone subname [condition]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4a44721f42a033859f77ab894662cf40bbb0ae" translate="yes" xml:space="preserve">
          <source>b subname [condition]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddfc6e1d7666d90904c5e3b0ac5d66177c016ab" translate="yes" xml:space="preserve">
          <source>b)</source>
          <target state="translated">b)</target>
        </trans-unit>
        <trans-unit id="be0f342011df36195c2bdef07802b43a541d7d4c" translate="yes" xml:space="preserve">
          <source>b) How do I verify that an email address targets a valid recipient?</source>
          <target state="translated">b)¿Cómo puedo verificar que una dirección de correo electrónico se dirige a un destinatario válido?</target>
        </trans-unit>
        <trans-unit id="99d2d8800a736d7dfa39e0baf946a6c21c96cb07" translate="yes" xml:space="preserve">
          <source>babs()</source>
          <target state="translated">babs()</target>
        </trans-unit>
        <trans-unit id="051ab161b3f3d1c554e991fe37a1c08598100515" translate="yes" xml:space="preserve">
          <source>backermann()</source>
          <target state="translated">backermann()</target>
        </trans-unit>
        <trans-unit id="e24941468d7edb7b4b97099853ae8f500000e6d5" translate="yes" xml:space="preserve">
          <source>backlink</source>
          <target state="translated">backlink</target>
        </trans-unit>
        <trans-unit id="3652c1c0d07ea36c0f41d5a5bd1906547467aa7c" translate="yes" xml:space="preserve">
          <source>backreference</source>
          <target state="translated">backreference</target>
        </trans-unit>
        <trans-unit id="84eb39aaf0e1b7cca7c174974634139b97dd390f" translate="yes" xml:space="preserve">
          <source>backreferences</source>
          <target state="translated">backreferences</target>
        </trans-unit>
        <trans-unit id="7509930d058130604f3243eff8e57a63497eff72" translate="yes" xml:space="preserve">
          <source>backticks</source>
          <target state="translated">backticks</target>
        </trans-unit>
        <trans-unit id="d6666df3cfe0a87d82053354efeb1ef3f1df123d" translate="yes" xml:space="preserve">
          <source>backtracking</source>
          <target state="translated">backtracking</target>
        </trans-unit>
        <trans-unit id="57a1bc6fe9d759dc23556c9a5fb2238494baf0a8" translate="yes" xml:space="preserve">
          <source>backward compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d90f6ed95de8b2f849cb8fba9cb0695ea047bb" translate="yes" xml:space="preserve">
          <source>backwards</source>
          <target state="translated">backwards</target>
        </trans-unit>
        <trans-unit id="782bc23d1c84370a515e713f6f4bed332d243305" translate="yes" xml:space="preserve">
          <source>bacmp()</source>
          <target state="translated">bacmp()</target>
        </trans-unit>
        <trans-unit id="023e7452be147f47fab20b687cbf88f849f3973e" translate="yes" xml:space="preserve">
          <source>bacmp()/bcmp()</source>
          <target state="translated">bacmp()/bcmp()</target>
        </trans-unit>
        <trans-unit id="a30e4fdfae25e2407e88209d32fa3206cbd57707" translate="yes" xml:space="preserve">
          <source>bad for IBM's programs, but the same compiler was used for DLLs which are used with general-purpose applications. When these DLLs are used, the state of floating-point flags in the application is not predictable.</source>
          <target state="translated">malo para los programas de IBM,pero el mismo compilador se usó para las DLL que se usan con aplicaciones de propósito general.Cuando se utilizan estas DLL,el estado de las banderas de punto flotante en la aplicación no es predecible.</target>
        </trans-unit>
        <trans-unit id="7f9cb3f34cd025e1205c4645d1e6aca0d8597e5b" translate="yes" xml:space="preserve">
          <source>badd()</source>
          <target state="translated">badd()</target>
        </trans-unit>
        <trans-unit id="bcea895e1a3b428cb9ae8f8bb6a77c80b6d1735c" translate="yes" xml:space="preserve">
          <source>badd()/bmul()/bsub()/bdiv()/bdec()/binc()</source>
          <target state="translated">badd()/bmul()/bsub()/bdiv()/bdec()/binc()</target>
        </trans-unit>
        <trans-unit id="28776fc2f596476304f65e05ae24e174fbc20745" translate="yes" xml:space="preserve">
          <source>bailey@newman.upenn.edu</source>
          <target state="translated">bailey@newman.upenn.edu</target>
        </trans-unit>
        <trans-unit id="d5f9d5e53a7c7d23a33fb2e87ff767a4dee06322" translate="yes" xml:space="preserve">
          <source>bailout methods</source>
          <target state="translated">métodos de rescate</target>
        </trans-unit>
        <trans-unit id="9e70978d8dfbac0d3ca9324bca230eea2b943e47" translate="yes" xml:space="preserve">
          <source>band()</source>
          <target state="translated">band()</target>
        </trans-unit>
        <trans-unit id="48eb22d8e4ba1a46c166c176e4d110720e1ea85a" translate="yes" xml:space="preserve">
          <source>banner ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cdb7020ff920e5aa642c3d4066950dd1f01f4d" translate="yes" xml:space="preserve">
          <source>bar</source>
          <target state="translated">bar</target>
        </trans-unit>
        <trans-unit id="961b1cd40787e3f47e9dd503958e048866722a96" translate="yes" xml:space="preserve">
          <source>bar.dll</source>
          <target state="translated">bar.dll</target>
        </trans-unit>
        <trans-unit id="e474af74a0c30c226d54cc12d642a5c13df423f2" translate="yes" xml:space="preserve">
          <source>bareStringify</source>
          <target state="translated">bareStringify</target>
        </trans-unit>
        <trans-unit id="0727d0a9104ddffed608ae2a79fd31f918ad3dde" translate="yes" xml:space="preserve">
          <source>bareword</source>
          <target state="translated">bareword</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="82364d6e500f9e7c6d2e135ddc4ef3ae5df9c250" translate="yes" xml:space="preserve">
          <source>base - Establish an ISA relationship with base classes at compile time</source>
          <target state="translated">base-Establecer una relación de la ISA con las clases base en el momento de la compilación</target>
        </trans-unit>
        <trans-unit id="d5b858bb629f56a1b3bf07eec9afeff8cb2176cd" translate="yes" xml:space="preserve">
          <source>base character</source>
          <target state="translated">el personaje base</target>
        </trans-unit>
        <trans-unit id="94f0cf029e34b46f8956546c3ca831b45b7757bb" translate="yes" xml:space="preserve">
          <source>base class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb170bf0a7f9325c8aa7a0a138128b8ec5471d88" translate="yes" xml:space="preserve">
          <source>base.pm was unable to require the base package, because it was not found in your path.</source>
          <target state="translated">base.pm no pudo requerir el paquete de la base,porque no se encontró en su camino.</target>
        </trans-unit>
        <trans-unit id="8095e159699116466e36cbafd09e1d845f29f2b9" translate="yes" xml:space="preserve">
          <source>base64</source>
          <target state="translated">base64</target>
        </trans-unit>
        <trans-unit id="e9e99739293e7367ccad4549a440bbf99651181f" translate="yes" xml:space="preserve">
          <source>basename(1)</source>
          <target state="translated">basename(1)</target>
        </trans-unit>
        <trans-unit id="9a441af68f4177c8bcff94839c442392a522bb71" translate="yes" xml:space="preserve">
          <source>baserev.U</source>
          <target state="translated">baserev.U</target>
        </trans-unit>
        <trans-unit id="c8a16b493c487d9f0d43546b842106bf2ffa7152" translate="yes" xml:space="preserve">
          <source>bash</source>
          <target state="translated">bash</target>
        </trans-unit>
        <trans-unit id="1da8eaa4a0d77769d77e901c7a8bd51a90b2108b" translate="yes" xml:space="preserve">
          <source>bash.btm</source>
          <target state="translated">bash.btm</target>
        </trans-unit>
        <trans-unit id="d7113141808e2d9571e4d8981caf323c56b50b9c" translate="yes" xml:space="preserve">
          <source>bash.exe</source>
          <target state="translated">bash.exe</target>
        </trans-unit>
        <trans-unit id="e25ac03f477736cf429678bb164c6ba39a46224c" translate="yes" xml:space="preserve">
          <source>basic block profiling</source>
          <target state="translated">perfil de bloque básico</target>
        </trans-unit>
        <trans-unit id="bb86a2ae262d9c015cbc4346cbdae479e321322e" translate="yes" xml:space="preserve">
          <source>basic blocks</source>
          <target state="translated">bloques básicos</target>
        </trans-unit>
        <trans-unit id="ce252839c8120fb5bca1f5ab1ecf317e2b8c1ad2" translate="yes" xml:space="preserve">
          <source>basic-block counting</source>
          <target state="translated">recuento de bloques básicos</target>
        </trans-unit>
        <trans-unit id="c09a78352f016692dcd8dd798d66441c80a78605" translate="yes" xml:space="preserve">
          <source>basic_text</source>
          <target state="translated">basic_text</target>
        </trans-unit>
        <trans-unit id="20dfaec48307e3cf13210a9ec0c330efc261304c" translate="yes" xml:space="preserve">
          <source>basically means this: look in the lexicon for $lang (which may inherit from any number of other lexicons), and find the function that we happen to associate with the string &quot;You have [quant,_1,piece] of new mail&quot; (which is, and should be, a functioning &quot;shorthand&quot; for this function in the native locale -- English in this case). If you find such a function, call it with $lang as its first parameter (as if it were a method), and then a copy of scalar(@messages) as its second, and then return that value. If that function was found, but was in string shorthand instead of being a fully specified function, parse it and make it into a function before calling it the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78ae04842f1950e62670dd82c3cf7ad1b73b83e" translate="yes" xml:space="preserve">
          <source>batan()</source>
          <target state="translated">batan()</target>
        </trans-unit>
        <trans-unit id="6dbadea73d392ffaeb4be2ca32f3c9398f6e1e4f" translate="yes" xml:space="preserve">
          <source>batan2()</source>
          <target state="translated">batan2()</target>
        </trans-unit>
        <trans-unit id="504ee22084024022630f49c8572bc2a333f11490" translate="yes" xml:space="preserve">
          <source>batch_mode_page_object_init</source>
          <target state="translated">batch_mode_page_object_init</target>
        </trans-unit>
        <trans-unit id="75736a80f50247c7c9141706465352089a086efa" translate="yes" xml:space="preserve">
          <source>baz&quot;, and, going the other way, the optional parsing of groups of words joined by NBSP's as if each group were in a S&amp;lt;...&amp;gt; code, so that formatters may use the representation that maps best to what the output format demands.</source>
          <target state="translated">baz &quot;, y, yendo en sentido contrario, el an&amp;aacute;lisis opcional de grupos de palabras unidos por NBSP como si cada grupo estuviera en un c&amp;oacute;digo S &amp;lt;...&amp;gt;, para que los formateadores puedan usar la representaci&amp;oacute;n que mejor se corresponda con el formato de salida. demandas.</target>
        </trans-unit>
        <trans-unit id="541a5c612e022e7f06af776324ec7f5dbef7f667" translate="yes" xml:space="preserve">
          <source>bcc ( ADDRESS [, ADDRESS [...]] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a83e99befe035db29117627cce4ee77338bd35" translate="yes" xml:space="preserve">
          <source>bceil()</source>
          <target state="translated">bceil()</target>
        </trans-unit>
        <trans-unit id="b6356d193cf6cf6c6164f0a61510cd2ff7bff517" translate="yes" xml:space="preserve">
          <source>bcmp()</source>
          <target state="translated">bcmp()</target>
        </trans-unit>
        <trans-unit id="71dfbd8ffe00a83c45102653482b2f06269a2017" translate="yes" xml:space="preserve">
          <source>bcos()</source>
          <target state="translated">bcos()</target>
        </trans-unit>
        <trans-unit id="a1ec6c7cd47b7ce21fb70948a7fe12d8f2de5652" translate="yes" xml:space="preserve">
          <source>bdat ( DATA )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43134b84c77c603d44bc9cb7a34ee28d61dda9b" translate="yes" xml:space="preserve">
          <source>bdatlast ( DATA )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbb8d63710387f33e47eeed58434edbf43436e9" translate="yes" xml:space="preserve">
          <source>bdec()</source>
          <target state="translated">bdec()</target>
        </trans-unit>
        <trans-unit id="ebdf243fd741fd942cda9ff4274731be01ae03c1" translate="yes" xml:space="preserve">
          <source>bdfac()</source>
          <target state="translated">bdfac()</target>
        </trans-unit>
        <trans-unit id="baa52f89b3e557bf1b35ea846ac5228309ee68c4" translate="yes" xml:space="preserve">
          <source>bdigitsum()</source>
          <target state="translated">bdigitsum()</target>
        </trans-unit>
        <trans-unit id="8267458ce43cf249a67491d1d8861cd3d92a0e9d" translate="yes" xml:space="preserve">
          <source>bdiv()</source>
          <target state="translated">bdiv()</target>
        </trans-unit>
        <trans-unit id="0e538c18c393c21f3d8f35fb560355f4920bacf0" translate="yes" xml:space="preserve">
          <source>bdstr()</source>
          <target state="translated">bdstr()</target>
        </trans-unit>
        <trans-unit id="986b1bc1eb8de89643c50722910f99001c232865" translate="yes" xml:space="preserve">
          <source>be</source>
          <target state="translated">be</target>
        </trans-unit>
        <trans-unit id="36048f5f57efa9c9c207392cd7127b119b057243" translate="yes" xml:space="preserve">
          <source>be a bareword. The importation can be made conditional by using the &lt;a href=&quot;../if&quot;&gt;if&lt;/a&gt; module.</source>
          <target state="translated">s&amp;eacute; una palabra desnuda. La importaci&amp;oacute;n se puede condicionar mediante el m&amp;oacute;dulo &lt;a href=&quot;../if&quot;&gt;if&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e70616934e98e6243ad338b17e6d1d1a80ef47cd" translate="yes" xml:space="preserve">
          <source>be a bareword. The importation can be made conditional by using the &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; module.</source>
          <target state="translated">s&amp;eacute; una palabra desnuda. La importaci&amp;oacute;n se puede condicionar mediante el m&amp;oacute;dulo &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6174cfdb1b6f1f01bc8c27356965cea1660ff655" translate="yes" xml:space="preserve">
          <source>be a string of octal digits: &lt;code&gt;0644&lt;/code&gt; is okay, but &lt;code&gt;&quot;0644&quot;&lt;/code&gt; is not. Returns the number of files successfully changed. See also &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt; if all you have is a string.</source>
          <target state="translated">ser una cadena de d&amp;iacute;gitos octales: &lt;code&gt;0644&lt;/code&gt; est&amp;aacute; bien, pero &lt;code&gt;&quot;0644&quot;&lt;/code&gt; no. Devuelve el n&amp;uacute;mero de archivos modificados correctamente. Consulte tambi&amp;eacute;n &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt; si todo lo que tiene es una cadena.</target>
        </trans-unit>
        <trans-unit id="cd4eacb457b1014a65c358074fe11c5634af92b0" translate="yes" xml:space="preserve">
          <source>be a string of octal digits: &lt;code&gt;0644&lt;/code&gt; is okay, but &lt;code&gt;&quot;0644&quot;&lt;/code&gt; is not. Returns the number of files successfully changed. See also &lt;a href=&quot;#oct-EXPR&quot;&gt;&lt;code&gt;oct&lt;/code&gt;&lt;/a&gt; if all you have is a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956f149445457ad325f5a84a0c7c25a363bcc21c" translate="yes" xml:space="preserve">
          <source>be a string of octal digits: &lt;code&gt;0644&lt;/code&gt; is okay, but &lt;code&gt;&quot;0644&quot;&lt;/code&gt; is not. Returns the number of files successfully changed. See also &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt; if all you have is a string.</source>
          <target state="translated">ser una cadena de d&amp;iacute;gitos octales: &lt;code&gt;0644&lt;/code&gt; est&amp;aacute; bien, pero &lt;code&gt;&quot;0644&quot;&lt;/code&gt; no. Devuelve el n&amp;uacute;mero de archivos modificados correctamente. Consulte tambi&amp;eacute;n &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt; si todo lo que tiene es una cadena.</target>
        </trans-unit>
        <trans-unit id="2f14746af9c291f92399b053f1e619f9de693adc" translate="yes" xml:space="preserve">
          <source>be a valid Perl package name and it</source>
          <target state="translated">ser un nombre de paquete Perl válido y</target>
        </trans-unit>
        <trans-unit id="8bab9adc00fd7e4a64089f6b0ae5c963c3f36a5a" translate="yes" xml:space="preserve">
          <source>be able to tolerate layers compiled against an old version of the headers.</source>
          <target state="translated">ser capaz de tolerar capas compiladas contra una versión antigua de los encabezados.</target>
        </trans-unit>
        <trans-unit id="14982941f96f6d84c8cd50b24f899b4c1845a614" translate="yes" xml:space="preserve">
          <source>be able to write:</source>
          <target state="translated">ser capaz de escribir:</target>
        </trans-unit>
        <trans-unit id="34c1cc772dd68663334c7cc5a51270a9c162743c" translate="yes" xml:space="preserve">
          <source>be addressed by adding a</source>
          <target state="translated">se abordará añadiendo un</target>
        </trans-unit>
        <trans-unit id="8800830eb2a63e7e498e064d670f9a27a029e1f7" translate="yes" xml:space="preserve">
          <source>be applied, even though strings like &lt;code&gt;&quot;01&quot;&lt;/code&gt; would normally look like a number to Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28396307a68e2c8ee56bd6b269f6e59ccaf41b7a" translate="yes" xml:space="preserve">
          <source>be assigned back to &lt;code&gt;$(&lt;/code&gt; without being forced numeric, such as by adding zero. Note that this is different to the effective gid (&lt;code&gt;$)&lt;/code&gt; ) which does take a list.</source>
          <target state="translated">ser asignado de nuevo a &lt;code&gt;$(&lt;/code&gt; sin ser num&amp;eacute;rico forzado, como por ejemplo agregando cero. Tenga en cuenta que esto es diferente al gid efectivo ( &lt;code&gt;$)&lt;/code&gt; ) que toma una lista.</target>
        </trans-unit>
        <trans-unit id="0d9df9cfcca5cdea95acaf69cb6098179f7a4b09" translate="yes" xml:space="preserve">
          <source>be assigned back to &lt;code&gt;$(&lt;/code&gt; without being forced numeric, such as by adding zero. Note that this is different to the effective gid (&lt;code&gt;$)&lt;/code&gt;) which does take a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93202847d0c4f58d96ed2de441c5bae895f03f9f" translate="yes" xml:space="preserve">
          <source>be be treated as nested tags within the tagged text (even if they would match the start tag pattern).</source>
          <target state="translated">se tratarán como etiquetas anidadas dentro del texto marcado (incluso si coinciden con el patrón de la etiqueta de inicio).</target>
        </trans-unit>
        <trans-unit id="3e275fd29837765cf3bc71fd6ce6d4f40b0be22d" translate="yes" xml:space="preserve">
          <source>be called exactly once, typically in a BOOT: section. If you are maintaining multiple interpreters, it should be called once in each interpreter instance, except for interpreters cloned from existing ones. (But see &lt;a href=&quot;#MY_CXT_CLONE&quot;&gt;&quot;MY_CXT_CLONE&quot;&lt;/a&gt; below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cd6e63a2e61c9b680434df73ca1618e7d52128" translate="yes" xml:space="preserve">
          <source>be called exactly once, typically in a BOOT: section. If you are maintaining multiple interpreters, it should be called once in each interpreter instance, except for interpreters cloned from existing ones. (But see &lt;a href=&quot;#MY_CXT_CLONE&quot;&gt;MY_CXT_CLONE&lt;/a&gt; below.)</source>
          <target state="translated">ser llamado exactamente una vez, normalmente en una secci&amp;oacute;n BOOT :. Si mantiene varios int&amp;eacute;rpretes, debe llamarse una vez en cada instancia de int&amp;eacute;rprete, excepto para los int&amp;eacute;rpretes clonados de los existentes. (Pero vea &lt;a href=&quot;#MY_CXT_CLONE&quot;&gt;MY_CXT_CLONE a&lt;/a&gt; continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="9d2edd7898262b515a39df03229b24d227d1c626" translate="yes" xml:space="preserve">
          <source>be called explicitly.</source>
          <target state="translated">ser llamado explícitamente.</target>
        </trans-unit>
        <trans-unit id="438a35efe202395aa4bfcea78aeb25f89d7ddb6d" translate="yes" xml:space="preserve">
          <source>be closed by calling &lt;code&gt;PerlIO_close()&lt;/code&gt; on the returned PerlIO *.</source>
          <target state="translated">cerrarse llamando a &lt;code&gt;PerlIO_close()&lt;/code&gt; en el PerlIO * devuelto.</target>
        </trans-unit>
        <trans-unit id="9934090830c2424ca6cc4ecf9b012220e6cb8ade" translate="yes" xml:space="preserve">
          <source>be closed until both the tied variable is untied and all copies of the saved object are destroyed.</source>
          <target state="translated">se cerrará hasta que se desate la variable atada y se destruyan todas las copias del objeto guardado.</target>
        </trans-unit>
        <trans-unit id="c3e7ca4e78e0952264ac139095f7bf1f632db6fe" translate="yes" xml:space="preserve">
          <source>be consistent with each other (implementation may only use one or the other or may require both).</source>
          <target state="translated">ser coherentes entre sí (la aplicación sólo puede utilizar una u otra o puede requerir ambas).</target>
        </trans-unit>
        <trans-unit id="bdfc850e994531d0f620111ecf403220532f49bb" translate="yes" xml:space="preserve">
          <source>be declared</source>
          <target state="translated">ser declarada</target>
        </trans-unit>
        <trans-unit id="4bc6d0c7f9935408fb2bc64464a3d82819a4723d" translate="yes" xml:space="preserve">
          <source>be expanded as specified by the &lt;b&gt;-expand_seq&lt;/b&gt; option; Any such recursive expansion needs to be handled by the specified callback routine.]</source>
          <target state="translated">expandirse seg&amp;uacute;n lo especificado por la opci&amp;oacute;n &lt;b&gt;-expand_seq&lt;/b&gt; ; Cualquier expansi&amp;oacute;n recursiva de este tipo debe ser manejada por la rutina de devoluci&amp;oacute;n de llamada especificada.]</target>
        </trans-unit>
        <trans-unit id="fb00294fdc4c477751afeb60eec17519d313dd85" translate="yes" xml:space="preserve">
          <source>be faster in certain circumstances for large files, and may result in less physical memory use when multiple processes are reading the same file.</source>
          <target state="translated">ser más rápido en determinadas circunstancias para los archivos de gran tamaño,y puede dar lugar a un menor uso de la memoria física cuando varios procesos están leyendo el mismo archivo.</target>
        </trans-unit>
        <trans-unit id="89547cfa26f8957d4689489ae8e6da3bfe190445" translate="yes" xml:space="preserve">
          <source>be globrefs).</source>
          <target state="translated">ser globrefs).</target>
        </trans-unit>
        <trans-unit id="aed67ceeb07b3aad12dfc70fda375fa903262c1b" translate="yes" xml:space="preserve">
          <source>be globrefs. Objects of &lt;code&gt;NamedFile&lt;/code&gt; should behave like a file opened for reading and also support the &lt;code&gt;name()&lt;/code&gt; method. This class juncture works with exception of the &lt;code&gt;Name_hash&lt;/code&gt; implementation, where object initialization fails because of the incompatibility of object bodies.</source>
          <target state="translated">ser globrefs. Los objetos de &lt;code&gt;NamedFile&lt;/code&gt; deber&amp;iacute;an comportarse como un archivo abierto para lectura y tambi&amp;eacute;n admitir el m&amp;eacute;todo &lt;code&gt;name()&lt;/code&gt; . Esta coyuntura de clases funciona con la excepci&amp;oacute;n de la implementaci&amp;oacute;n &lt;code&gt;Name_hash&lt;/code&gt; , donde la inicializaci&amp;oacute;n del objeto falla debido a la incompatibilidad de los cuerpos del objeto.</target>
        </trans-unit>
        <trans-unit id="96a908fc7385d1425e0ba694653b67ebf458eb65" translate="yes" xml:space="preserve">
          <source>be in effect.)</source>
          <target state="translated">estar en vigor).</target>
        </trans-unit>
        <trans-unit id="93fdaed10217b38690a5394ba6f117f7442dc2d0" translate="yes" xml:space="preserve">
          <source>be interpreted as simply &quot;codepoint</source>
          <target state="translated">ser interpretado como simplemente &quot;punto de código</target>
        </trans-unit>
        <trans-unit id="3b8bb41a2a75cf63cb4e4b8dd89b36e596750288" translate="yes" xml:space="preserve">
          <source>be introduced with &lt;code&gt;--&lt;/code&gt; and bundles with &lt;code&gt;-&lt;/code&gt; .</source>
          <target state="translated">presentarse con &lt;code&gt;--&lt;/code&gt; y paquetes con &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb60746a5d3bb1528e0214db460749edff43d872" translate="yes" xml:space="preserve">
          <source>be introduced with &lt;code&gt;--&lt;/code&gt; and bundles with &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a1854f29dd88d78bf67b5c84417d21fb1c6102" translate="yes" xml:space="preserve">
          <source>be invoked.</source>
          <target state="translated">ser invocado.</target>
        </trans-unit>
        <trans-unit id="7ffefc4005f2d8b9f6232ebeb883bef6adb2c998" translate="yes" xml:space="preserve">
          <source>be likely that code (possibly in Perl, as with Lingua::EN::Inflect, for English nouns) has already been written for the language in question, whether simple or complex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b400f46c67266a74a7941beb8d8f3aa492d507c" translate="yes" xml:space="preserve">
          <source>be made read-only (by the caller), or at least should be treated as such.</source>
          <target state="translated">se haga de sólo lectura (por la persona que llama),o al menos debe ser tratada como tal.</target>
        </trans-unit>
        <trans-unit id="2dfe41932637990aabde1fd9ab5b36a0129cdcb1" translate="yes" xml:space="preserve">
          <source>be of the format integer-dot-digit-digit, i.e. &lt;code&gt;25.57&lt;/code&gt;, optionally followed by underscore-digit-digit, i.e. &lt;code&gt;25.57_04&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22754b5f05d41004d65864397d8f7961e944c9f1" translate="yes" xml:space="preserve">
          <source>be only ASCII characters, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aca838b806998e1c3a7660775bb22707c53a139" translate="yes" xml:space="preserve">
          <source>be open any more when the program is reincarnated, with possible resulting confusion by Perl.</source>
          <target state="translated">se abrirá más cuando el programa se reencarne,con la posible confusión resultante por parte de Perl.</target>
        </trans-unit>
        <trans-unit id="4942a835a218847da1bc9474d15e7f7fecee9472" translate="yes" xml:space="preserve">
          <source>be parsed as two paragraphs in italics (with the I code starting in one paragraph and starting in another.) Instead, the first paragraph should generate a warning, but that aside, the above code must parse as if it were:</source>
          <target state="translated">ser analizado como dos párrafos en cursiva (con el código I empezando en un párrafo y empezando en otro.)En su lugar,el primer párrafo debe generar una advertencia,pero que aparte,el código anterior debe analizarse como si lo fuera:</target>
        </trans-unit>
        <trans-unit id="cac76875da8caea6da506441e4a3013ef795de69" translate="yes" xml:space="preserve">
          <source>be preceded with a blank line; &lt;code&gt;__END__&lt;/code&gt; is</source>
          <target state="translated">ir precedido de una l&amp;iacute;nea en blanco; &lt;code&gt;__END__&lt;/code&gt; es</target>
        </trans-unit>
        <trans-unit id="56f17a9fa2003de9ef3c254fb72eb38377857e77" translate="yes" xml:space="preserve">
          <source>be present during testing.</source>
          <target state="translated">estar presente durante las pruebas.</target>
        </trans-unit>
        <trans-unit id="5889addd1ea93bd05efcb1682728a15053a4b875" translate="yes" xml:space="preserve">
          <source>be provided by the end-user of &lt;code&gt;autodie&lt;/code&gt;, they are ideally written into the module itself, or into a helper module or sub-class of &lt;code&gt;autodie&lt;/code&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6789e5ce6bb8c48ccfee0a53b55ecb18497192" translate="yes" xml:space="preserve">
          <source>be provided.</source>
          <target state="translated">...se provea.</target>
        </trans-unit>
        <trans-unit id="8e7ed5c5b2648d3fb47f0ce1afb127706a1279f2" translate="yes" xml:space="preserve">
          <source>be restored.</source>
          <target state="translated">ser restaurado.</target>
        </trans-unit>
        <trans-unit id="c9bf9ad1188aa77634cd3b8aff0b84c5c12ad44c" translate="yes" xml:space="preserve">
          <source>be stopped by debugger, although &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;s and INIT blocks will, and compile-time statements can be traced with the &lt;code&gt;AutoTrace&lt;/code&gt; option set in &lt;code&gt;PERLDB_OPTS&lt;/code&gt; ). From your own Perl code, however, you can transfer control back to the debugger using the following statement, which is harmless if the debugger is not running:</source>
          <target state="translated">ser detenido por el depurador, aunque los bloques &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; sy INIT lo har&amp;aacute;n, y las declaraciones en tiempo de compilaci&amp;oacute;n se pueden rastrear con la opci&amp;oacute;n &lt;code&gt;AutoTrace&lt;/code&gt; establecida en &lt;code&gt;PERLDB_OPTS&lt;/code&gt; ). Sin embargo, desde su propio c&amp;oacute;digo de Perl, puede transferir el control al depurador utilizando la siguiente declaraci&amp;oacute;n, que es inofensiva si el depurador no se est&amp;aacute; ejecutando:</target>
        </trans-unit>
        <trans-unit id="b332da483597b431d4ebaf91c49d1c6eadbd8328" translate="yes" xml:space="preserve">
          <source>be stopped by debugger, although &lt;code&gt;require&lt;/code&gt;s and INIT blocks will, and compile-time statements can be traced with the &lt;code&gt;AutoTrace&lt;/code&gt; option set in &lt;code&gt;PERLDB_OPTS&lt;/code&gt;). From your own Perl code, however, you can transfer control back to the debugger using the following statement, which is harmless if the debugger is not running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400bf125e188b6776f7244947b865d3a2497a3b3" translate="yes" xml:space="preserve">
          <source>be stored as a single data paragraph (consisting of &quot;&amp;lt;img src='wirth_spokesmodeling_book.png'&amp;gt;\n\n&amp;lt;hr&amp;gt;\n&quot;).</source>
          <target state="translated">almacenarse como un solo p&amp;aacute;rrafo de datos (que consta de &quot;&amp;lt;img src = 'wirth_spokesmodeling_book.png'&amp;gt; \ n \ n &amp;lt;hr&amp;gt; \ n&quot;).</target>
        </trans-unit>
        <trans-unit id="16137519316b812afb2da09aa91b112ba92bff67" translate="yes" xml:space="preserve">
          <source>be stored as two data paragraphs (one consisting of &quot;&amp;lt;img src='wirth_spokesmodeling_book.png'&amp;gt;\n&quot; and another consisting of &quot;&amp;lt;hr&amp;gt;\n&quot;), but</source>
          <target state="translated">almacenarse como dos p&amp;aacute;rrafos de datos (uno que consta de &quot;&amp;lt;img src = 'wirth_spokesmodeling_book.png'&amp;gt; \ n&quot; y otro que consta de &quot;&amp;lt;hr&amp;gt; \ n&quot;), pero</target>
        </trans-unit>
        <trans-unit id="619ff8abea4d5f3ccd22e0c825463c6f2e928d79" translate="yes" xml:space="preserve">
          <source>be sure to invoke &lt;code&gt;$self-&amp;gt;SUPER::initialize()&lt;/code&gt; .</source>
          <target state="translated">aseg&amp;uacute;rese de invocar &lt;code&gt;$self-&amp;gt;SUPER::initialize()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3127d5be257498591fa1b1e632079190d24627c" translate="yes" xml:space="preserve">
          <source>be sure to invoke the &lt;b&gt;initialize()&lt;/b&gt; method of the newly blessed object.</source>
          <target state="translated">aseg&amp;uacute;rese de invocar el m&amp;eacute;todo &lt;b&gt;initialize ()&lt;/b&gt; del objeto reci&amp;eacute;n bendecido.</target>
        </trans-unit>
        <trans-unit id="6bd6f3dc5720d53f6325adeb9c38189554e2d06f" translate="yes" xml:space="preserve">
          <source>be the desired effect within a diamond hierarchy, but in others (e.g. for destructors) it may be more appropriate to call each method only once during a sequence of redispatches.</source>
          <target state="translated">ser el efecto deseado dentro de una jerarquía de diamantes,pero en otros (por ejemplo,en el caso de los destructores)puede ser más apropiado llamar a cada método una sola vez durante una secuencia de reexpediciones.</target>
        </trans-unit>
        <trans-unit id="f32b0724100efc9f3b38df25932dbc397348687a" translate="yes" xml:space="preserve">
          <source>be thrown if</source>
          <target state="translated">ser lanzado si</target>
        </trans-unit>
        <trans-unit id="d996815a3551001f2437592e2dfe9cf2917da354" translate="yes" xml:space="preserve">
          <source>be treated as an error:</source>
          <target state="translated">se tratará como un error:</target>
        </trans-unit>
        <trans-unit id="5cfeeb86f388b90e9358708fb9a2cf2d92ff6a4c" translate="yes" xml:space="preserve">
          <source>be treated as an option, but passed to the program unharmed, in &lt;code&gt;@ARGV&lt;/code&gt; .</source>
          <target state="translated">se tratar&amp;aacute; como una opci&amp;oacute;n, pero se &lt;code&gt;@ARGV&lt;/code&gt; ileso al programa, en @ARGV .</target>
        </trans-unit>
        <trans-unit id="3b05bc4410ad4d361cd1bc4b1aa6a2048076769c" translate="yes" xml:space="preserve">
          <source>be treated as an option, but passed to the program unharmed, in &lt;code&gt;@ARGV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213ce7c8d8fef7b5daff184033ed3b8b66ff7b3a" translate="yes" xml:space="preserve">
          <source>be undone (but not &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; or other splicing,</source>
          <target state="translated">deshacerse (pero no &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; u otro empalme,</target>
        </trans-unit>
        <trans-unit id="8002f964e7f54fd6c9a88e0e37e9510ff919095b" translate="yes" xml:space="preserve">
          <source>be undone (but not &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; or other splicing,</source>
          <target state="translated">deshacerse (pero no &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt; @_&lt;/code&gt; u otro empalme,</target>
        </trans-unit>
        <trans-unit id="ab7c83905ae1d6a2e4d715e600c65628380b7d4b" translate="yes" xml:space="preserve">
          <source>be undone (but not &lt;code&gt;pop @_&lt;/code&gt; or other splicing,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bd5dc5ae122c31aab12373873620d67a1c4b2d" translate="yes" xml:space="preserve">
          <source>be used for method calls. You can't use it for regular subroutine calls or class methods:</source>
          <target state="translated">para las llamadas de método.No puedes usarlo para llamadas de subrutinas regulares o métodos de clase:</target>
        </trans-unit>
        <trans-unit id="4e471a2c455269486f9776c668e9c672d74418df" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; operator), but only if the additional &lt;code&gt;postderef_qq&lt;/code&gt; feature is enabled.</source>
          <target state="translated">se puede utilizar en la interpolaci&amp;oacute;n de cadenas (comillas dobles o el operador &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; ), pero solo si la funci&amp;oacute;n adicional &lt;code&gt;postderef_qq&lt;/code&gt; est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="37c19bda8dda58aa4daba4c9519e4dc020b7a3f4" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; operator), but only if the additional &lt;code&gt;postderef_qq&lt;/code&gt;&lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; is enabled.</source>
          <target state="translated">se utiliza en la interpolaci&amp;oacute;n de cadenas (comillas dobles o el &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq&lt;/a&gt;&lt;/code&gt; operador), pero s&amp;oacute;lo si el adicional &lt;code&gt;postderef_qq&lt;/code&gt; &lt;a href=&quot;feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="7d51185a9b3b31ade2b15536b4991747238d8a88" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;qq&lt;/code&gt; operator), but only if the &lt;code&gt;postderef_qq&lt;/code&gt; feature is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036092155ce8a9ff5d3badd8d0f0778afad82e9e" translate="yes" xml:space="preserve">
          <source>be used in interpolating strings (double quotes or the &lt;code&gt;qq&lt;/code&gt; operator), but only if the &lt;code&gt;postderef_qq&lt;/code&gt;&lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eccf910fdd37c2a3bcdbac9f3427f38c70da9c0" translate="yes" xml:space="preserve">
          <source>bearing</source>
          <target state="translated">bearing</target>
        </trans-unit>
        <trans-unit id="1407501dd659df6fb3cfafb420938ddd4792bbdd" translate="yes" xml:space="preserve">
          <source>because it can match zero copies of &lt;code&gt;'X'&lt;/code&gt; at the beginning of the string. If you definitely want to match at least one &lt;code&gt;'X'&lt;/code&gt; , use &lt;code&gt;X+&lt;/code&gt; , not &lt;code&gt;X*&lt;/code&gt; .</source>
          <target state="translated">porque puede coincidir con cero copias de &lt;code&gt;'X'&lt;/code&gt; al principio de la cadena. Si definitivamente desea hacer coincidir al menos una &lt;code&gt;'X'&lt;/code&gt; , use &lt;code&gt;X+&lt;/code&gt; , no &lt;code&gt;X*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8504f4a94208d96382c46286dd2940ff2c6906b" translate="yes" xml:space="preserve">
          <source>because it can match zero copies of &lt;code&gt;'X'&lt;/code&gt; at the beginning of the string. If you definitely want to match at least one &lt;code&gt;'X'&lt;/code&gt;, use &lt;code&gt;X+&lt;/code&gt;, not &lt;code&gt;X*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed626eff2ded4ff54496b1cd4f2b0a1c7d5ccbb9" translate="yes" xml:space="preserve">
          <source>because it is much faster - it reduces internal variables into the modulus whenever possible, so it operates on smaller numbers.</source>
          <target state="translated">porque es mucho más rápido-reduce las variables internas en el módulo siempre que es posible,por lo que opera con números más pequeños.</target>
        </trans-unit>
        <trans-unit id="c9ac39be8f080b55461591140c43654051426f56" translate="yes" xml:space="preserve">
          <source>because it was listed as a TODO test on the plan line. However, we are not aware of anyone actually using this feature and hard-coding test numbers is discouraged because it's very easy to add a test and break the test number sequence. This makes test suites very fragile. Instead, the following should be used:</source>
          <target state="translated">porque estaba listada como una prueba de TODO en la línea de plan.Sin embargo,no sabemos de nadie que utilice esta característica y se desaconseja la codificación de los números de prueba porque es muy fácil añadir una prueba y romper la secuencia de números de prueba.Esto hace que los conjuntos de pruebas sean muy frágiles.En su lugar,se debería utilizar lo siguiente:</target>
        </trans-unit>
        <trans-unit id="3716b55181b7d4ce5a8064066cc2010c3e1b6360" translate="yes" xml:space="preserve">
          <source>because of the strict regularization of Perl 5's grammar into unary and list operators. (The old open was a little of both.) You must put parentheses around the filehandle, or use the new &quot;or&quot; operator instead of &quot;||&quot;.</source>
          <target state="translated">debido a la estricta regularización de la gramática de Perl 5 en operadores de unario y lista.(El antiguo abierto era un poco de ambos.)Debes poner paréntesis alrededor del filehandle,o usar el nuevo operador &quot;o&quot; en lugar de &quot;||&quot;.</target>
        </trans-unit>
        <trans-unit id="71ee90a49bf1ab4bd322eb175c4eef72341f4bf3" translate="yes" xml:space="preserve">
          <source>because otherwise &lt;b&gt;xsubpp&lt;/b&gt; will believe that you made a duplicate definition of the function. Also, put a blank line before the #else/#endif so it will not be seen as part of the function body.</source>
          <target state="translated">porque de lo contrario &lt;b&gt;xsubpp&lt;/b&gt; creer&amp;aacute; que hizo una definici&amp;oacute;n duplicada de la funci&amp;oacute;n. Adem&amp;aacute;s, coloque una l&amp;iacute;nea en blanco antes de # else / # endif para que no se vea como parte del cuerpo de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c57dfba8d90c3ee87942986e029f65c0a62033af" translate="yes" xml:space="preserve">
          <source>because the &quot;less than&quot; operator is interpreted as a closing delimiter.</source>
          <target state="translated">porque el operador &quot;menos de&quot; se interpreta como un delimitador de cierre.</target>
        </trans-unit>
        <trans-unit id="91d068e640ed02bcfffdad4e89ae0a9db41b7044" translate="yes" xml:space="preserve">
          <source>because the embedded pairs of &lt;code&gt;'(..)'&lt;/code&gt; s and &lt;code&gt;'[..]'&lt;/code&gt; s are &quot;cross-nested&quot; and the embedded &lt;code&gt;'&amp;gt;'&lt;/code&gt; is unbalanced. (In a scalar context, this call would return an empty string. In a void context, &lt;code&gt;$text&lt;/code&gt; would be unchanged.)</source>
          <target state="translated">porque los pares incrustados de &lt;code&gt;'(..)'&lt;/code&gt; y &lt;code&gt;'[..]'&lt;/code&gt; est&amp;aacute;n &quot;anidados cruzados&quot; y el &lt;code&gt;'&amp;gt;'&lt;/code&gt; incrustado est&amp;aacute; desequilibrado. (En un contexto escalar, esta llamada devolver&amp;iacute;a una cadena vac&amp;iacute;a. En un contexto vac&amp;iacute;o, &lt;code&gt;$text&lt;/code&gt; cambiar&amp;iacute;a).</target>
        </trans-unit>
        <trans-unit id="2d05959105bc45a525dae5509143b16c5ce91fed" translate="yes" xml:space="preserve">
          <source>because the embedded pairs of &lt;code&gt;'(..)'&lt;/code&gt;s and &lt;code&gt;'[..]'&lt;/code&gt;s are &quot;cross-nested&quot; and the embedded &lt;code&gt;'&amp;gt;'&lt;/code&gt; is unbalanced. (In a scalar context, this call would return an empty string. In a void context, &lt;code&gt;$text&lt;/code&gt; would be unchanged.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331252ee302b6da2035026aca3ba4ae99c1a4ea1" translate="yes" xml:space="preserve">
          <source>because the latter will alternate between returning a filename and returning false.</source>
          <target state="translated">porque este último alternará entre devolver un nombre de archivo y devolver falso.</target>
        </trans-unit>
        <trans-unit id="f2ef9563189019bf8c9ac0f31b94f7d982047b5c" translate="yes" xml:space="preserve">
          <source>because the main point isn't whether the user typed &lt;b&gt;-v&lt;/b&gt; or not.</source>
          <target state="translated">porque el punto principal no es si el usuario escribi&amp;oacute; &lt;b&gt;-v&lt;/b&gt; o no.</target>
        </trans-unit>
        <trans-unit id="95dd904c935d8d74a8bd1af96d4e502e980aaabd" translate="yes" xml:space="preserve">
          <source>because the notion of &quot;compile-time&quot; is relative. Instead, you want:</source>
          <target state="translated">porque la noción de &quot;tiempo de compilación&quot; es relativa.En cambio,tú quieres:</target>
        </trans-unit>
        <trans-unit id="6a35b87feefdc6c196b1d4d33ac852a059f8f67f" translate="yes" xml:space="preserve">
          <source>because the second way hides the main point of the statement in a modifier. On the other hand</source>
          <target state="translated">porque la segunda forma oculta el punto principal de la declaración en un modificador.Por otro lado</target>
        </trans-unit>
        <trans-unit id="b15c6a463c6e853f47c1bd82bf87355ef292954f" translate="yes" xml:space="preserve">
          <source>because they test functionality which</source>
          <target state="translated">porque prueban la funcionalidad que</target>
        </trans-unit>
        <trans-unit id="a73476a17fae6e74c5ac465bb722d65dca737d30" translate="yes" xml:space="preserve">
          <source>because you don't have to start a process on every filename found (but it's not faster than using the &lt;b&gt;-delete&lt;/b&gt; switch available in newer versions of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89a78424c4f276725f3f2424f018f5fc3348fbb" translate="yes" xml:space="preserve">
          <source>because you don't have to start a process on every filename found. It does suffer from the bug of mishandling newlines in pathnames, which you can fix if you follow the example under &lt;b&gt;-0&lt;/b&gt;.</source>
          <target state="translated">porque no tiene que iniciar un proceso con cada nombre de archivo encontrado. Sufre el error de manejar mal las nuevas l&amp;iacute;neas en los nombres de ruta, que puede solucionar si sigue el ejemplo de &lt;b&gt;-0&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="a217c7a44aead49b3247ffc0322e6ace486aeba7" translate="yes" xml:space="preserve">
          <source>because you'll get just references listed, and perl will never automatically dereference things for you. Instead, you have to roll yourself a loop or two. This prints the whole structure, using the shell-style for() construct to loop across the outer set of subscripts.</source>
          <target state="translated">porque sólo tendrás referencias listadas,y Perl nunca te quitará automáticamente las referencias de las cosas.En su lugar,tienes que enrollarte un bucle o dos.Esto imprime toda la estructura,usando el estilo de construcción de shell for()para hacer un bucle a través del conjunto exterior de subíndices.</target>
        </trans-unit>
        <trans-unit id="d53e9fb5cd89e4ca476b10b3690128590c751e12" translate="yes" xml:space="preserve">
          <source>become cumbersome when you need to inflect more than a few dozen words; and other solutions (like using algorithms to model the inflections, storing only root forms and irregularities)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e58ac78738f8185ee5c7c2c3d83aca0198db529" translate="yes" xml:space="preserve">
          <source>becomes</source>
          <target state="translated">becomes</target>
        </trans-unit>
        <trans-unit id="e0d2345f9f72fcdda8f445997826d44505e55aef" translate="yes" xml:space="preserve">
          <source>been in use as an Internet language tag, and RFC 3066 stipulates that it never should be, since a shorter tag (&quot;ar&quot;) exists.</source>
          <target state="translated">se ha utilizado como etiqueta de lenguaje en Internet,y el RFC 3066 estipula que nunca debe serlo,ya que existe una etiqueta más corta (&quot;ar&quot;).</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="915c701ba2639a5081cecf4fc5bdf5de5ad69a85" translate="yes" xml:space="preserve">
          <source>before calling</source>
          <target state="translated">antes de llamar</target>
        </trans-unit>
        <trans-unit id="0cbf8d2dc3ebc2ee1d97d9f37a08ec8f737756c3" translate="yes" xml:space="preserve">
          <source>before running your wide record pipe program. A larger value may improve performance at the expense of the BYTLM UAF quota.</source>
          <target state="translated">antes de ejecutar su amplio programa de tubos de registro.Un valor mayor puede mejorar el rendimiento a expensas de la cuota de BYTLM UAF.</target>
        </trans-unit>
        <trans-unit id="0e5cdbaa0673f848d1b7128b629138e86739c8b2" translate="yes" xml:space="preserve">
          <source>before the &lt;code&gt;perl.h&lt;/code&gt;&lt;code&gt;#include&lt;/code&gt;. You can replace your &lt;code&gt;langinfo.h&lt;/code&gt;&lt;code&gt;#include&lt;/code&gt; with this one. (Doing it this way keeps out the symbols that plain &lt;code&gt;langinfo.h&lt;/code&gt; would try to import into the namespace for code that doesn't need it.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfe8489641883d87825274b161f0adcb018192e" translate="yes" xml:space="preserve">
          <source>before unpacking the archive.</source>
          <target state="translated">antes de desempaquetar el archivo.</target>
        </trans-unit>
        <trans-unit id="e00d3375a237dc6b36e090011f01e09a680f730b" translate="yes" xml:space="preserve">
          <source>begin with a colon, should not directly contain &quot;=head1&quot; ... &quot;=head4&quot; commands, nor &quot;=over&quot;, nor &quot;=back&quot;, nor &quot;=item&quot;. For example, this may be considered invalid:</source>
          <target state="translated">comienza con un colon,no debe contener directamente &quot;=cabeza1&quot;......ni &quot;=cabeza4&quot;,ni &quot;=sobre&quot;,ni &quot;=vuelta&quot;,ni &quot;=artículo&quot;.Por ejemplo,esto puede ser considerado inválido:</target>
        </trans-unit>
        <trans-unit id="35ee011e96122a1b4404f72436530569c798f3bc" translate="yes" xml:space="preserve">
          <source>begin with a colon, then &quot;text...&quot; will constitute a data paragraph. There is no way to use &quot;=for formatname text...&quot; to express &quot;text...&quot; as a verbatim paragraph.</source>
          <target state="translated">comienza con dos puntos,luego &quot;texto...&quot; constituirá un párrafo de datos.No hay forma de usar &quot;=para el formato de texto...&quot; para expresar &quot;texto...&quot; como un párrafo textual.</target>
        </trans-unit>
        <trans-unit id="a054a301f7e242f3320212ad3120381b20ffa4b5" translate="yes" xml:space="preserve">
          <source>begin with a colon, then non-command paragraphs are ordinary paragraphs or data paragraphs. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;&quot;About Data Paragraphs and &quot;=begin/=end&quot; Regions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01012d8e1a5ae715258cadbaf70262cad1cf8ef2" translate="yes" xml:space="preserve">
          <source>begin with a colon, then non-command paragraphs are ordinary paragraphs or data paragraphs. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;About Data Paragraphs and =begin/=end Regions&lt;/a&gt;.</source>
          <target state="translated">comienzan con dos puntos, luego los p&amp;aacute;rrafos que no son de comando son p&amp;aacute;rrafos ordinarios o p&amp;aacute;rrafos de datos. Esto se analiza en detalle en la secci&amp;oacute;n &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;Acerca de los p&amp;aacute;rrafos de datos y las regiones = comenzar / = finalizar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43e8c372c4b8551232015b4964270e14bc96c611" translate="yes" xml:space="preserve">
          <source>begin with a colon.</source>
          <target state="translated">comenzar con un colon.</target>
        </trans-unit>
        <trans-unit id="f96514769306205e5e54b126ee406aa18da22231" translate="yes" xml:space="preserve">
          <source>begin with a literal colon (&quot;:&quot;). In some sense, a data paragraph is not part of Pod at all (i.e., effectively it's &quot;out-of-band&quot;), since it's not subject to most kinds of Pod parsing; but it is specified here, since Pod parsers need to be able to call an event for it, or store it in some form in a parse tree, or at least just parse</source>
          <target state="translated">comienza con un colon literal (&quot;:&quot;).En cierto sentido,un párrafo de datos no forma parte del Pod en absoluto (es decir,efectivamente está &quot;fuera de banda&quot;),ya que no está sujeto a la mayoría de los tipos de análisis de Pod;pero se especifica aquí,ya que los analizadores de Pod deben ser capaces de llamar un evento para él,o almacenarlo de alguna forma en un árbol de análisis,o al menos sólo analizar</target>
        </trans-unit>
        <trans-unit id="1be9db5ec4d328a8c30fb304c0fe21d95b9feaf9" translate="yes" xml:space="preserve">
          <source>begin_av</source>
          <target state="translated">begin_av</target>
        </trans-unit>
        <trans-unit id="e2e281b54db81b16a35418fcd87978434eb58caf" translate="yes" xml:space="preserve">
          <source>begins with a colon,</source>
          <target state="translated">comienza con un colon,</target>
        </trans-unit>
        <trans-unit id="31a7e9902319755c10b8cad42a0fff59ce9d4052" translate="yes" xml:space="preserve">
          <source>behave like the bunzip2 program. It will only uncompress the first bunzip2 data stream in the file, as shown below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e34e04cce3092a3fbc1368e2721a7094461fac" translate="yes" xml:space="preserve">
          <source>behave like the gunzip program. It will only uncompress the first gzip data stream in the file, as shown below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c831dd4349f7440d63aa005aa956edcf6570200" translate="yes" xml:space="preserve">
          <source>behaves approximately like</source>
          <target state="translated">se comporta aproximadamente como</target>
        </trans-unit>
        <trans-unit id="49aa6a42431a52e8d5358eaf47e17fc9c0afb35d" translate="yes" xml:space="preserve">
          <source>behaves just like &lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt;, except that it implicitly enables all optional features (in the main compilation unit). See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878cb14881bc8cc40ffa36c11bd520865655b641" translate="yes" xml:space="preserve">
          <source>behaves just like &lt;b&gt;-e&lt;/b&gt;, except that it implicitly enables all optional features (in the main compilation unit). See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;.</source>
          <target state="translated">se comporta como &lt;b&gt;-e&lt;/b&gt; , excepto que habilita impl&amp;iacute;citamente todas las caracter&amp;iacute;sticas opcionales (en la unidad de compilaci&amp;oacute;n principal). Ver &lt;a href=&quot;feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29c4a5cf676b2e6b5aac47ac451d31e3961499c9" translate="yes" xml:space="preserve">
          <source>behavior for a thread after it has been created. With a</source>
          <target state="translated">comportamiento para un hilo después de que ha sido creado.Con un</target>
        </trans-unit>
        <trans-unit id="ab7103d633748a477ad2572ee63045defbe35f36" translate="yes" xml:space="preserve">
          <source>behavior, for some inputs.) In 5.7, the quicksort implementation was replaced with a stable mergesort algorithm whose worst-case behavior is O(NlogN). But benchmarks indicated that for some inputs, on some platforms, the original quicksort was faster. 5.8 has a sort pragma for limited control of the sort. Its rather blunt control of the underlying algorithm may not persist into future Perls, but the ability to characterize the input or output in implementation independent ways quite probably will. See &lt;a href=&quot;../sort&quot;&gt;the sort pragma&lt;/a&gt;.</source>
          <target state="translated">comportamiento, para algunas entradas). En 5.7, la implementaci&amp;oacute;n de ordenaci&amp;oacute;n r&amp;aacute;pida fue reemplazada por un algoritmo de ordenaci&amp;oacute;n por fusi&amp;oacute;n estable cuyo comportamiento en el peor de los casos es O (NlogN). Pero los puntos de referencia indicaron que para algunas entradas, en algunas plataformas, la clasificaci&amp;oacute;n r&amp;aacute;pida original era m&amp;aacute;s r&amp;aacute;pida. 5.8 tiene un pragma de g&amp;eacute;nero para un control limitado del g&amp;eacute;nero. Su control bastante directo del algoritmo subyacente puede no persistir en futuros Perls, pero la capacidad de caracterizar la entrada o la salida de manera independiente de la implementaci&amp;oacute;n probablemente lo har&amp;aacute;. Vea &lt;a href=&quot;../sort&quot;&gt;el pragma de clasificaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7662c3889bf0376550fc93aa4448d4df9574c86b" translate="yes" xml:space="preserve">
          <source>behavior, for some inputs.) In 5.7, the quicksort implementation was replaced with a stable mergesort algorithm whose worst-case behavior is O(NlogN). But benchmarks indicated that for some inputs, on some platforms, the original quicksort was faster. 5.8 has a sort pragma for limited control of the sort. Its rather blunt control of the underlying algorithm may not persist into future Perls, but the ability to characterize the input or output in implementation independent ways quite probably will. See &lt;a href=&quot;sort&quot;&gt;the sort pragma&lt;/a&gt;.</source>
          <target state="translated">comportamiento, para algunas entradas). En 5.7, la implementaci&amp;oacute;n de ordenaci&amp;oacute;n r&amp;aacute;pida fue reemplazada por un algoritmo de ordenaci&amp;oacute;n por fusi&amp;oacute;n estable cuyo comportamiento en el peor de los casos es O (NlogN). Pero los puntos de referencia indicaron que para algunas entradas, en algunas plataformas, la clasificaci&amp;oacute;n r&amp;aacute;pida original era m&amp;aacute;s r&amp;aacute;pida. 5.8 tiene un pragma de g&amp;eacute;nero para un control limitado del g&amp;eacute;nero. Su control bastante directo del algoritmo subyacente puede no persistir en futuros Perls, pero la capacidad de caracterizar la entrada o la salida de manera independiente de la implementaci&amp;oacute;n probablemente lo har&amp;aacute;. Vea &lt;a href=&quot;sort&quot;&gt;el pragma de clasificaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4d45707cf30bc986faddb8a61f21a6e9cdaf80e" translate="yes" xml:space="preserve">
          <source>behaviour is different from the outer public API. The logic is that the &quot;unchecked&quot; case is useful when the encoding is part of a stream which may be reporting errors (e.g. STDERR). In such cases, it is desirable to get everything through somehow without causing additional errors which obscure the original one. Also, the encoding is best placed to know what the correct replacement character is, so if that is the desired behaviour then letting low level code do it is the most efficient.</source>
          <target state="translated">El comportamiento es diferente al de la API pública exterior.La lógica es que el caso &quot;no comprobado&quot; es útil cuando la codificación forma parte de una corriente que puede estar informando de errores (por ejemplo,STDERR).En esos casos,es conveniente que todo se lleve a cabo de alguna manera sin causar errores adicionales que oscurezcan el original.Además,la codificación es la mejor manera de saber cuál es el carácter de reemplazo correcto,de modo que si ese es el comportamiento deseado,entonces dejar que el código de bajo nivel lo haga es lo más eficiente.</target>
        </trans-unit>
        <trans-unit id="d665cbacbfa3c977993d51ac9f39d4889ffea309" translate="yes" xml:space="preserve">
          <source>behaviour. One can start</source>
          <target state="translated">comportamiento.Uno puede empezar</target>
        </trans-unit>
        <trans-unit id="c4ad9e56b49ef76a7e8fcbc4f0e989ac69868fc0" translate="yes" xml:space="preserve">
          <source>behind its back; calling &lt;a href=&quot;#sync_locale&quot;&gt;sync_locale&lt;/a&gt; before calling this macro will update perl's records.)</source>
          <target state="translated">a sus espaldas; llamar a &lt;a href=&quot;#sync_locale&quot;&gt;sync_locale&lt;/a&gt; antes de llamar a esta macro actualizar&amp;aacute; los registros de perl).</target>
        </trans-unit>
        <trans-unit id="a55f3cbc5e20d676e8b6e31c3e6b1864eecba17a" translate="yes" xml:space="preserve">
          <source>being a subset of Unicode), while ASCII is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f8e0ff86be0a313b2007cbdd020a9b83a37fba" translate="yes" xml:space="preserve">
          <source>being data being sent to the server. Calls &lt;code&gt;debug_text&lt;/code&gt; before printing to STDERR.</source>
          <target state="translated">siendo datos enviados al servidor. Llama a &lt;code&gt;debug_text&lt;/code&gt; antes de imprimir en STDERR.</target>
        </trans-unit>
        <trans-unit id="70842494fd493a8f8803b71e1e93717e5ff8d7e2" translate="yes" xml:space="preserve">
          <source>being executed within the distribution file's working directory.</source>
          <target state="translated">ejecutándose dentro del directorio de trabajo del archivo de distribución.</target>
        </trans-unit>
        <trans-unit id="c6309e2149391dbe0d16560dc35ff7f7d071ea27" translate="yes" xml:space="preserve">
          <source>being more accurate than C</source>
          <target state="translated">siendo más precisa que la C</target>
        </trans-unit>
        <trans-unit id="ae7d864b083311cd426e7717f8e3a7be973f886e" translate="yes" xml:space="preserve">
          <source>being unfilled. In a threading situation,</source>
          <target state="translated">...que no está lleno.En una situación de enhebrado,</target>
        </trans-unit>
        <trans-unit id="d4300189fdbe1cb5fe64ef0a483b7086eb450712" translate="yes" xml:space="preserve">
          <source>belongs to (used in &lt;code&gt;\p{Blk=...}&lt;/code&gt; ). The &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; function can be used to get all the synonyms of the block name.</source>
          <target state="translated">pertenece a (usado en &lt;code&gt;\p{Blk=...}&lt;/code&gt; ). La funci&amp;oacute;n &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases ()&lt;/a&gt; se puede utilizar para obtener todos los sin&amp;oacute;nimos del nombre del bloque.</target>
        </trans-unit>
        <trans-unit id="13c61da538d4ab019c7b05230a8f76ece1cba556" translate="yes" xml:space="preserve">
          <source>belongs to (used in &lt;code&gt;\p{Blk=...}&lt;/code&gt;). The &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; function can be used to get all the synonyms of the block name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bdb1660a37a979308c6b38c35ed13226f4b481" translate="yes" xml:space="preserve">
          <source>belongs to. The &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; function can be used to get all the synonyms of the script name. Note that this is the older &quot;Script&quot; property value, and not the improved &quot;Script_Extensions&quot; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fdbc23a85b8e4584cd5c7c6fb3ac1138bda7bd" translate="yes" xml:space="preserve">
          <source>belongs to. The &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; function can be used to get all the synonyms of the script name.</source>
          <target state="translated">pertenece a. La funci&amp;oacute;n &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases ()&lt;/a&gt; se puede utilizar para obtener todos los sin&amp;oacute;nimos del nombre del script.</target>
        </trans-unit>
        <trans-unit id="489c7fc8339f7c44efa172c21d3dbf41ad08c7e4" translate="yes" xml:space="preserve">
          <source>below</source>
          <target state="translated">below</target>
        </trans-unit>
        <trans-unit id="21b17c5ba622c38ebd7690a2824aa2f55d5b8a0f" translate="yes" xml:space="preserve">
          <source>below). The containing directory can be specified in &lt;code&gt;CPAN.pm&lt;/code&gt; in the &lt;code&gt;prefs_dir&lt;/code&gt; config variable. Try &lt;code&gt;o conf init
prefs_dir&lt;/code&gt; in the CPAN shell to set and activate the distroprefs system.</source>
          <target state="translated">abajo). El directorio que lo contiene se puede especificar en &lt;code&gt;CPAN.pm&lt;/code&gt; en la variable de configuraci&amp;oacute;n &lt;code&gt;prefs_dir&lt;/code&gt; . Pruebe &lt;code&gt;o conf init prefs_dir&lt;/code&gt; en el shell de CPAN para configurar y activar el sistema distroprefs.</target>
        </trans-unit>
        <trans-unit id="6ee65b4d48e2ac02540ecb32d3b43d908326681d" translate="yes" xml:space="preserve">
          <source>bench.pl</source>
          <target state="translated">bench.pl</target>
        </trans-unit>
        <trans-unit id="664ac432b4954d19c059a37e90f2549775ecb9d7" translate="yes" xml:space="preserve">
          <source>beq()</source>
          <target state="translated">beq()</target>
        </trans-unit>
        <trans-unit id="c5f5e4d75252d9788ce20300d00023fa1ccd4d19" translate="yes" xml:space="preserve">
          <source>best</source>
          <target state="translated">best</target>
        </trans-unit>
        <trans-unit id="a2db5af4b95c649c7f23f26e2d00914f22ca9241" translate="yes" xml:space="preserve">
          <source>best effort</source>
          <target state="translated">mejor esfuerzo</target>
        </trans-unit>
        <trans-unit id="b8c1680ea7ea37db7233bc599faf01f592c8e529" translate="yes" xml:space="preserve">
          <source>bestr()</source>
          <target state="translated">bestr()</target>
        </trans-unit>
        <trans-unit id="709634051471385aada32356842983beeff4b065" translate="yes" xml:space="preserve">
          <source>between</source>
          <target state="translated">between</target>
        </trans-unit>
        <trans-unit id="857088f224d60f19170606b3f8e3e1d22d832425" translate="yes" xml:space="preserve">
          <source>between 0 and 255. These represent foreground and background colors, respectively, with the RGB values given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff6cf52c304b7ca8d264e3830a9bb468d96fb99" translate="yes" xml:space="preserve">
          <source>between configuring and making steps.)</source>
          <target state="translated">entre la configuración y la realización de los pasos).</target>
        </trans-unit>
        <trans-unit id="95b5da10cca6e837a526a6e638dc826063502032" translate="yes" xml:space="preserve">
          <source>bexp()</source>
          <target state="translated">bexp()</target>
        </trans-unit>
        <trans-unit id="d52f22fd878ee3706d7dd2feba05080b099127cc" translate="yes" xml:space="preserve">
          <source>bfac()</source>
          <target state="translated">bfac()</target>
        </trans-unit>
        <trans-unit id="f44d1f883a5070e98ee064df00c1a4df49e12190" translate="yes" xml:space="preserve">
          <source>bfib()</source>
          <target state="translated">bfib()</target>
        </trans-unit>
        <trans-unit id="7bbd3be39df70eda29db2e96251dc8a4c05ce7be" translate="yes" xml:space="preserve">
          <source>bfloor()</source>
          <target state="translated">bfloor()</target>
        </trans-unit>
        <trans-unit id="fae42f3e3aa55692f5e6f467a143b214b340ebc3" translate="yes" xml:space="preserve">
          <source>bfround ( +$scale )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa75af0a26160b4c5285118a8300d1ffd1b896f0" translate="yes" xml:space="preserve">
          <source>bfround ( -$scale )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2b06e277ed5dd89cbb607d4e3cf03f44272f5f" translate="yes" xml:space="preserve">
          <source>bfround ( 0 )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca23cd8cfb8590a5ac92910f20d66852f3bd4b84" translate="yes" xml:space="preserve">
          <source>bfround()</source>
          <target state="translated">bfround()</target>
        </trans-unit>
        <trans-unit id="dde1c58eeab957538292732d8b3578b0bbf195e1" translate="yes" xml:space="preserve">
          <source>bgcd()</source>
          <target state="translated">bgcd()</target>
        </trans-unit>
        <trans-unit id="2ddbbe441d748cbe42b9723164dbf9871d5c38df" translate="yes" xml:space="preserve">
          <source>bge()</source>
          <target state="translated">bge()</target>
        </trans-unit>
        <trans-unit id="8f2041749d677881debaab37d70b6c36707b39f5" translate="yes" xml:space="preserve">
          <source>bgt()</source>
          <target state="translated">bgt()</target>
        </trans-unit>
        <trans-unit id="e815c411019f3fe8a6e07303ec9c01ca20856c91" translate="yes" xml:space="preserve">
          <source>bidi_types()</source>
          <target state="translated">bidi_types()</target>
        </trans-unit>
        <trans-unit id="0eb26de54355ba1e1f99e33725a9d024cfd6b807" translate="yes" xml:space="preserve">
          <source>bidirectional type of</source>
          <target state="translated">tipo bidireccional de</target>
        </trans-unit>
        <trans-unit id="38e4f23119f7668c81c56c877acdc10f397299d2" translate="yes" xml:space="preserve">
          <source>big-endian</source>
          <target state="translated">big-endian</target>
        </trans-unit>
        <trans-unit id="5f9c9d32d71f1ef8b8014c350a5f8aec50c577ec" translate="yes" xml:space="preserve">
          <source>bigint</source>
          <target state="translated">bigint</target>
        </trans-unit>
        <trans-unit id="83123b65dc13ec2d11ceae1c1cec211e7cef1cb6" translate="yes" xml:space="preserve">
          <source>bigint - Transparent BigInteger support for Perl</source>
          <target state="translated">bigint-Soporte transparente de BigInteger para Perl</target>
        </trans-unit>
        <trans-unit id="dc0c0c0aa0c98c99641fd608b1168be57143c887" translate="yes" xml:space="preserve">
          <source>bigint recognizes some options that can be passed while loading it via use. The options can (currently) be either a single letter form, or the long form. The following options exist:</source>
          <target state="translated">bigint reconoce algunas opciones que se pueden pasar mientras se carga por medio del uso.Las opciones pueden (actualmente)ser una forma de una sola letra,o la forma larga.Existen las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="2c5ed18936a55186b9ba8eb22ac87953629628d3" translate="yes" xml:space="preserve">
          <source>bignum</source>
          <target state="translated">bignum</target>
        </trans-unit>
        <trans-unit id="ebef2dfbf356b1d6376d0a89d5a3dc3812dc7025" translate="yes" xml:space="preserve">
          <source>bignum - Transparent BigNumber support for Perl</source>
          <target state="translated">bignum-Soporte transparente de BigNumber para Perl</target>
        </trans-unit>
        <trans-unit id="cfc363199f35898d0c10e170520f53e8601bb52d" translate="yes" xml:space="preserve">
          <source>bignum recognizes some options that can be passed while loading it via use. The options can (currently) be either a single letter form, or the long form. The following options exist:</source>
          <target state="translated">bignum reconoce algunas opciones que se pueden pasar mientras se carga por medio del uso.Las opciones pueden (actualmente)ser una forma de una sola letra,o la forma larga.Existen las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="59cfee0f6bb73ee64a7b9dbb363c27ea0eb9f302" translate="yes" xml:space="preserve">
          <source>bigrat</source>
          <target state="translated">bigrat</target>
        </trans-unit>
        <trans-unit id="dbf25a54f2fd0d3932bef731375b0ba1d051ef77" translate="yes" xml:space="preserve">
          <source>bigrat - Transparent BigNumber/BigRational support for Perl</source>
          <target state="translated">bigrat-Apoyo transparente de BigNumber/BigRational a Perl</target>
        </trans-unit>
        <trans-unit id="9a5d56716d566997fa290054d161af96305aff9a" translate="yes" xml:space="preserve">
          <source>bin</source>
          <target state="translated">bin</target>
        </trans-unit>
        <trans-unit id="7e19d6f26f79bdfbe7853603c9a8d51e943da151" translate="yes" xml:space="preserve">
          <source>bin.U</source>
          <target state="translated">bin.U</target>
        </trans-unit>
        <trans-unit id="22367761f269c4573006aea78f1e40ab220e3614" translate="yes" xml:space="preserve">
          <source>bin/</source>
          <target state="translated">bin/</target>
        </trans-unit>
        <trans-unit id="7e57cfe843145135aee1f4d0d63ceb7842093712" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="translated">binary</target>
        </trans-unit>
        <trans-unit id="f7d496da369e602d60b03924e4f040c7d5dba6c5" translate="yes" xml:space="preserve">
          <source>binary ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ee949aa75285ff225c696a370f886f46b556fe" translate="yes" xml:space="preserve">
          <source>binary operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7932f025d5ca969d2e5249dfaee5d1123fb29da" translate="yes" xml:space="preserve">
          <source>binary representation. Leaving floating point numbers aside for the moment, the salient properties of any such representation are:</source>
          <target state="translated">representación binaria.Dejando de lado los números en coma flotante por el momento,las propiedades más destacadas de cualquier representación de este tipo son:</target>
        </trans-unit>
        <trans-unit id="988edf147febb2b4b364a6acf2ddf6d4e94e8f33" translate="yes" xml:space="preserve">
          <source>binary, setting the C pre-processor macro &lt;code&gt;PERL_SUB_DEPTH_WARN&lt;/code&gt; to the desired value.</source>
          <target state="translated">binario, configurando la macro del &lt;code&gt;PERL_SUB_DEPTH_WARN&lt;/code&gt; C PERL_SUB_DEPTH_WARN en el valor deseado.</target>
        </trans-unit>
        <trans-unit id="de2cc6807b3c1fe9f5060a6094b70de72fb1f441" translate="yes" xml:space="preserve">
          <source>binary, which affect its binary compatibility with extensions. &lt;code&gt;bincompat_options()&lt;/code&gt; and &lt;code&gt;non_bincompat_options()&lt;/code&gt; are shown together in the output of &lt;code&gt;perl -V&lt;/code&gt; as</source>
          <target state="translated">binary, que afectan su compatibilidad binaria con extensiones. &lt;code&gt;bincompat_options()&lt;/code&gt; y &lt;code&gt;non_bincompat_options()&lt;/code&gt; se muestran juntos en la salida de &lt;code&gt;perl -V&lt;/code&gt; como</target>
        </trans-unit>
        <trans-unit id="b636cf5b464cf1767119b4fe29df7c510211a548" translate="yes" xml:space="preserve">
          <source>binary, which do not affect binary compatibility with extensions.</source>
          <target state="translated">binario,que no afectan a la compatibilidad binaria con las extensiones.</target>
        </trans-unit>
        <trans-unit id="27b0abcf6d482c493480a28ab67814ecd71ae2f0" translate="yes" xml:space="preserve">
          <source>binary/&lt;code&gt;API&lt;/code&gt;</source>
          <target state="translated">binary/&lt;code&gt;API&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="363c3e51a7bf4d321b21be363e5368c645da7b66" translate="yes" xml:space="preserve">
          <source>binc()</source>
          <target state="translated">binc()</target>
        </trans-unit>
        <trans-unit id="ba42a913444427ae29604c87afb436d490ab0eee" translate="yes" xml:space="preserve">
          <source>bincompat_options()</source>
          <target state="translated">bincompat_options()</target>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="15cb6b206f5309c215554249b37ea718b7489464" translate="yes" xml:space="preserve">
          <source>bind SOCKET,NAME</source>
          <target state="translated">Bind SOCKET,NOMBRE</target>
        </trans-unit>
        <trans-unit id="3602debc77f793084d28f897c8db056aab9923a0" translate="yes" xml:space="preserve">
          <source>bind() on closed socket %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d578a0959805111db0ca77352b04e9eeb22448" translate="yes" xml:space="preserve">
          <source>bind_match</source>
          <target state="translated">bind_match</target>
        </trans-unit>
        <trans-unit id="bb7a39d5637f4bd8a114f03f1fa7e0b4aff29e08" translate="yes" xml:space="preserve">
          <source>binf()</source>
          <target state="translated">binf()</target>
        </trans-unit>
        <trans-unit id="b8caa416ad22dfd04289ea1a80760faf5b038881" translate="yes" xml:space="preserve">
          <source>binmode</source>
          <target state="translated">binmode</target>
        </trans-unit>
        <trans-unit id="5e65b13dafb6dd4c759cc9455fddbe5bd69a8e0f" translate="yes" xml:space="preserve">
          <source>binmode FILEHANDLE</source>
          <target state="translated">binmode FILEHANDLE</target>
        </trans-unit>
        <trans-unit id="baf4fab3113579642465b028f8be5d19dbe690da" translate="yes" xml:space="preserve">
          <source>binmode FILEHANDLE, LAYER</source>
          <target state="translated">binmode FILEHANDLE,LAYER</target>
        </trans-unit>
        <trans-unit id="f2a5994e1f71b5c1aff0822f4016cadaa9aebdf4" translate="yes" xml:space="preserve">
          <source>binmode( [LAYER] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab68bdc2486879246a68125daf732306cd8090f" translate="yes" xml:space="preserve">
          <source>binmode() is important not only for readline() and print() operations, but also when using read(), seek(), sysread(), syswrite() and tell() (see &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt; for more details). See the &lt;code&gt;$/&lt;/code&gt; and &lt;code&gt;$\&lt;/code&gt; variables in &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; for how to manually set your input and output line-termination sequences.</source>
          <target state="translated">binmode () es importante no solo para las operaciones readline () e print (), sino tambi&amp;eacute;n cuando se usa read (), seek (), sysread (), syswrite () y tell () (ver &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt; para m&amp;aacute;s detalles). Vea las variables &lt;code&gt;$/&lt;/code&gt; y &lt;code&gt;$\&lt;/code&gt; en &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; para saber c&amp;oacute;mo configurar manualmente sus secuencias de terminaci&amp;oacute;n de l&amp;iacute;nea de entrada y salida.</target>
        </trans-unit>
        <trans-unit id="c6cf70d51d1b9249c9bedbb5a665191357d92d38" translate="yes" xml:space="preserve">
          <source>binmode() is important not only for readline() and print() operations, but also when using read(), seek(), sysread(), syswrite() and tell() (see &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more details). See the &lt;code&gt;$/&lt;/code&gt; and &lt;code&gt;$\&lt;/code&gt; variables in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for how to manually set your input and output line-termination sequences.</source>
          <target state="translated">binmode () es importante no solo para las operaciones readline () e print (), sino tambi&amp;eacute;n cuando se usa read (), seek (), sysread (), syswrite () y tell () (ver &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; para m&amp;aacute;s detalles). Vea las variables &lt;code&gt;$/&lt;/code&gt; y &lt;code&gt;$\&lt;/code&gt; en &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; para saber c&amp;oacute;mo configurar manualmente sus secuencias de terminaci&amp;oacute;n de l&amp;iacute;nea de entrada y salida.</target>
        </trans-unit>
        <trans-unit id="60f702763d3ad5bf9903d9e678aa9e4af89e2238" translate="yes" xml:space="preserve">
          <source>binmode() on closed filehandle %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64304f0eaf264d4083a161af95cca3f4fc9956cd" translate="yes" xml:space="preserve">
          <source>binmode() operates similarly to open(): by default the specified layers are pushed on top of the existing stack.</source>
          <target state="translated">binmode()funciona de manera similar a open():por defecto las capas especificadas se empujan sobre la pila existente.</target>
        </trans-unit>
        <trans-unit id="250fb1b9cb55ba7726de39c65a4415cec8af2124" translate="yes" xml:space="preserve">
          <source>bint()</source>
          <target state="translated">bint()</target>
        </trans-unit>
        <trans-unit id="31c29ae0733c42de73bfb453a629bee7e9b6fec2" translate="yes" xml:space="preserve">
          <source>bior()</source>
          <target state="translated">bior()</target>
        </trans-unit>
        <trans-unit id="20f2d91e547cecad3b564ae99be53b45a6e670cc" translate="yes" xml:space="preserve">
          <source>bison on BS2000</source>
          <target state="translated">bisonte en BS2000</target>
        </trans-unit>
        <trans-unit id="026e996a3a5897970b058ffb093a163a1d763649" translate="yes" xml:space="preserve">
          <source>bit</source>
          <target state="translated">bit</target>
        </trans-unit>
        <trans-unit id="6e9475cbf618e2a540cd3ae4d7ab90c75f93bbeb" translate="yes" xml:space="preserve">
          <source>bit shift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f36fe2ba6ed4cff4356d9f8dea3adc00c78919" translate="yes" xml:space="preserve">
          <source>bit string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f019d80321d209bdb5e25621a435c0f92ac86cfd" translate="yes" xml:space="preserve">
          <source>bits that is computed from the data value by doing sums. For numeric unpack codes, no big feat is achieved:</source>
          <target state="translated">bits que se calcula a partir del valor de los datos haciendo sumas.Para los códigos numéricos de desempaque,no se logra ninguna gran hazaña:</target>
        </trans-unit>
        <trans-unit id="40a983b6b8280be6ababf17747af9e90f24d20e5" translate="yes" xml:space="preserve">
          <source>bits()</source>
          <target state="translated">bits()</target>
        </trans-unit>
        <trans-unit id="5bf1fd927dfb8679496a2e6cf00cbe50c1c87145" translate="yes" xml:space="preserve">
          <source>blah</source>
          <target state="translated">blah</target>
        </trans-unit>
        <trans-unit id="fcfd8b08b9dfc18492f53d1d51ef8d9ad41fbf87" translate="yes" xml:space="preserve">
          <source>blah.</source>
          <target state="translated">blah.</target>
        </trans-unit>
        <trans-unit id="c6198477997fe2771883ee25a1a71d0e4c7432b1" translate="yes" xml:space="preserve">
          <source>blah.exe</source>
          <target state="translated">blah.exe</target>
        </trans-unit>
        <trans-unit id="d48f3ab263e0a433c016223a2cc9e17538ed8009" translate="yes" xml:space="preserve">
          <source>blcm()</source>
          <target state="translated">blcm()</target>
        </trans-unit>
        <trans-unit id="c781287b99805ae6221518d95023fb40e89c637d" translate="yes" xml:space="preserve">
          <source>ble()</source>
          <target state="translated">ble()</target>
        </trans-unit>
        <trans-unit id="b5d874c5300674b3f1fdbeb29f0902746ff358b4" translate="yes" xml:space="preserve">
          <source>blead</source>
          <target state="translated">blead</target>
        </trans-unit>
        <trans-unit id="710f4beb6f3094fc46248a083fb427bcc0ad2e24" translate="yes" xml:space="preserve">
          <source>bless</source>
          <target state="translated">bless</target>
        </trans-unit>
        <trans-unit id="e4f59c387f62cb1edb42a1911954c50219be47d9" translate="yes" xml:space="preserve">
          <source>bless REF</source>
          <target state="translated">bendice a REF</target>
        </trans-unit>
        <trans-unit id="2e44205459ae344b338868e3b6b33bce58faf520" translate="yes" xml:space="preserve">
          <source>bless REF,CLASSNAME</source>
          <target state="translated">Bendito sea el árbitro,el nombre de la clase</target>
        </trans-unit>
        <trans-unit id="a49b3189e430e15827425d766ade8c8277059efb" translate="yes" xml:space="preserve">
          <source>bless, blessed, and ref</source>
          <target state="translated">bendito,bendito y árbitro</target>
        </trans-unit>
        <trans-unit id="f08a7a19e6f47e1125c9aee2336c6759c7798fe4" translate="yes" xml:space="preserve">
          <source>blessed</source>
          <target state="translated">blessed</target>
        </trans-unit>
        <trans-unit id="d4099c2cf9d57b9aa6b6e77ea9626851697cb3d9" translate="yes" xml:space="preserve">
          <source>blessed objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdb9aa0f32f7a30fb9e35578aff5c7297e84bc8" translate="yes" xml:space="preserve">
          <source>blessings</source>
          <target state="translated">blessings</target>
        </trans-unit>
        <trans-unit id="5948cd46ec4b37fb77f455070c85e3a53a5385e6" translate="yes" xml:space="preserve">
          <source>blib</source>
          <target state="translated">blib</target>
        </trans-unit>
        <trans-unit id="58725a4e858a2c6188cdb04784100e5472989d90" translate="yes" xml:space="preserve">
          <source>blib - Use MakeMaker's uninstalled version of a package</source>
          <target state="translated">blib-Usar la versión desinstalada de un paquete de MakeMaker</target>
        </trans-unit>
        <trans-unit id="a76058b40e0fac4a71812a9bc906c2fefb88858f" translate="yes" xml:space="preserve">
          <source>blibdirs_target</source>
          <target state="translated">blibdirs_target</target>
        </trans-unit>
        <trans-unit id="8da57d83e4710f0212054859934df64541f40cd0" translate="yes" xml:space="preserve">
          <source>blk</source>
          <target state="translated">blk</target>
        </trans-unit>
        <trans-unit id="0214b4b355d11ca8f2ce45a968c264651bdfbf83" translate="yes" xml:space="preserve">
          <source>block</source>
          <target state="translated">block</target>
        </trans-unit>
        <trans-unit id="ea5d1a0307254d54b411f8a86b15040e8cbfc1d0" translate="yes" xml:space="preserve">
          <source>block buffering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becaa99a9fe347b3fe23dad3399ecd24d24e190b" translate="yes" xml:space="preserve">
          <source>block_end</source>
          <target state="translated">block_end</target>
        </trans-unit>
        <trans-unit id="6e0db69ae9a110cb6559b4ef655ce755a7a4f145" translate="yes" xml:space="preserve">
          <source>block_gimme</source>
          <target state="translated">block_gimme</target>
        </trans-unit>
        <trans-unit id="97da064a01b65a84f70baff2ab2b7809d324186f" translate="yes" xml:space="preserve">
          <source>block_start</source>
          <target state="translated">block_start</target>
        </trans-unit>
        <trans-unit id="c898441623d0cc22ba93c724ee92159aa2b6b2da" translate="yes" xml:space="preserve">
          <source>blockhook_register</source>
          <target state="translated">blockhook_register</target>
        </trans-unit>
        <trans-unit id="ee446b079331cb4d066226bbfc81a241b9f5b572" translate="yes" xml:space="preserve">
          <source>blog()</source>
          <target state="translated">blog()</target>
        </trans-unit>
        <trans-unit id="a26effe1d3cc643c316da1033ce081d24a76b9b8" translate="yes" xml:space="preserve">
          <source>bls=INTEGER</source>
          <target state="translated">bls=INTEGER</target>
        </trans-unit>
        <trans-unit id="baf27f3dc38c3a93bf31c0a7a2de08fc0847febe" translate="yes" xml:space="preserve">
          <source>blsft()</source>
          <target state="translated">blsft()</target>
        </trans-unit>
        <trans-unit id="de78f4557b8f92abac734524c8092acd1ff00895" translate="yes" xml:space="preserve">
          <source>blsft()/brsft()</source>
          <target state="translated">blsft()/brsft()</target>
        </trans-unit>
        <trans-unit id="2fd0fd5e8785cded108a0b4c3987011a3f9a433d" translate="yes" xml:space="preserve">
          <source>blt()</source>
          <target state="translated">blt()</target>
        </trans-unit>
        <trans-unit id="d469821215ed8fdf1c01a8627ec36c65a0c24c61" translate="yes" xml:space="preserve">
          <source>blucas()</source>
          <target state="translated">blucas()</target>
        </trans-unit>
        <trans-unit id="6ad7da3d1b629d68c47436ccd4e4c6a0178702ac" translate="yes" xml:space="preserve">
          <source>blurt()</source>
          <target state="translated">blurt()</target>
        </trans-unit>
        <trans-unit id="2e264db45128e397f171695bf390adfeef3598d7" translate="yes" xml:space="preserve">
          <source>bmod()</source>
          <target state="translated">bmod()</target>
        </trans-unit>
        <trans-unit id="f86c0f154ec1ab4f7cd30137f9e8a89a6840eb8d" translate="yes" xml:space="preserve">
          <source>bmodinv()</source>
          <target state="translated">bmodinv()</target>
        </trans-unit>
        <trans-unit id="f5a284f7da3f4f73b7f14dfbaf90e3ce7dacf74f" translate="yes" xml:space="preserve">
          <source>bmodpow()</source>
          <target state="translated">bmodpow()</target>
        </trans-unit>
        <trans-unit id="d21319b5c7ceef0c5567dfd8d4c57a92446b6d7f" translate="yes" xml:space="preserve">
          <source>bmul()</source>
          <target state="translated">bmul()</target>
        </trans-unit>
        <trans-unit id="2e05368ab1d3b7d6116240a0313ea500b290658b" translate="yes" xml:space="preserve">
          <source>bmuladd()</source>
          <target state="translated">bmuladd()</target>
        </trans-unit>
        <trans-unit id="8a2a6d034355be7780085f14f8c5624812072e77" translate="yes" xml:space="preserve">
          <source>bnan()</source>
          <target state="translated">bnan()</target>
        </trans-unit>
        <trans-unit id="4bffed2ba79069b83e61d43558db9e0145189b86" translate="yes" xml:space="preserve">
          <source>bne()</source>
          <target state="translated">bne()</target>
        </trans-unit>
        <trans-unit id="acb2323220a9a7746a44255816d71f5351a4790a" translate="yes" xml:space="preserve">
          <source>bneg()</source>
          <target state="translated">bneg()</target>
        </trans-unit>
        <trans-unit id="33366fdd69ce84e94b98d8a229f85a41c634530c" translate="yes" xml:space="preserve">
          <source>bnok()</source>
          <target state="translated">bnok()</target>
        </trans-unit>
        <trans-unit id="c770c8e7173b85479c2dc8ac9f7dcbb9bc5fe2f3" translate="yes" xml:space="preserve">
          <source>bnorm()</source>
          <target state="translated">bnorm()</target>
        </trans-unit>
        <trans-unit id="32895dc66f25fd7dac0899bd9b4408dd1841faf8" translate="yes" xml:space="preserve">
          <source>bnorm() on a BigFloat object is now effectively a no-op, since the numbers are always stored in normalized form. On a string, it creates a BigFloat object.</source>
          <target state="translated">bnorm()en un objeto BigFloat es ahora efectivamente un no-op,ya que los números siempre se almacenan en forma normalizada.En una cadena,crea un objeto BigFloat.</target>
        </trans-unit>
        <trans-unit id="6b70c4805252a1f570e1c562fbc4bfa29477eff5" translate="yes" xml:space="preserve">
          <source>bnot()</source>
          <target state="translated">bnot()</target>
        </trans-unit>
        <trans-unit id="9cc5e5eaa9df15ad6ffcceb045fc439ba9eab576" translate="yes" xml:space="preserve">
          <source>bnstr()</source>
          <target state="translated">bnstr()</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">body</target>
        </trans-unit>
        <trans-unit id="07f7b599effa948213cb412138977cc6851f9893" translate="yes" xml:space="preserve">
          <source>body ( [ MSGID|MSGNUM ], [FH] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2dd66051b28e6f8b12d66a43475ba8fdeaaa1ce" translate="yes" xml:space="preserve">
          <source>bodyfh ( [ MSGID|MSGNUM ] )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e30168211d8a342d95644b4fce96a7ffe7889f" translate="yes" xml:space="preserve">
          <source>bone()</source>
          <target state="translated">bone()</target>
        </trans-unit>
        <trans-unit id="1aed26655fb288402a22a39e65ab37ea6faa2d19" translate="yes" xml:space="preserve">
          <source>book-keeping code to the generated code. During the execution of the code the basic block counters are then updated appropriately. The caveat is that the added extra code can skew the results: again, the profiling tools usually try to factor their own effects out of the results.</source>
          <target state="translated">código de contabilidad al código generado.Durante la ejecución del código,los contadores de bloque básicos se actualizan adecuadamente.La advertencia es que el código extra añadido puede sesgar los resultados:de nuevo,las herramientas de perfilado suelen intentar factorizar sus propios efectos en los resultados.</target>
        </trans-unit>
        <trans-unit id="cb16f9aff92a0c271f47676b6dc33d3ff149671b" translate="yes" xml:space="preserve">
          <source>boolSV</source>
          <target state="translated">boolSV</target>
        </trans-unit>
        <trans-unit id="15de74af85d07cd58ad10ef45f5cbb7c4ac1ac21" translate="yes" xml:space="preserve">
          <source>boolean_values</source>
          <target state="translated">boolean_values</target>
        </trans-unit>
        <trans-unit id="729e45dc00b922b49b39fefe181e1e856ed87ec4" translate="yes" xml:space="preserve">
          <source>boot_Module</source>
          <target state="translated">boot_Module</target>
        </trans-unit>
        <trans-unit id="ba663f22e3229112460a32e29c16274682d6bf7a" translate="yes" xml:space="preserve">
          <source>boot_ModuleName</source>
          <target state="translated">boot_ModuleName</target>
        </trans-unit>
        <trans-unit id="64c0e72dbf0f0628e440bc4de8d9b1e0c449a446" translate="yes" xml:space="preserve">
          <source>boot_core_PerlIO</source>
          <target state="translated">boot_core_PerlIO</target>
        </trans-unit>
        <trans-unit id="d12639f1803461ade20f59eabc548f63c620d600" translate="yes" xml:space="preserve">
          <source>boot_core_UNIVERSAL</source>
          <target state="translated">boot_core_UNIVERSAL</target>
        </trans-unit>
        <trans-unit id="452ef9046c45ab3336e7f180a67ce8abe7d63ed7" translate="yes" xml:space="preserve">
          <source>boot_core_mro</source>
          <target state="translated">boot_core_mro</target>
        </trans-unit>
        <trans-unit id="3c71cc99d2fc1c12a3d3e1b27e448ca612a89a1d" translate="yes" xml:space="preserve">
          <source>bootstrap</source>
          <target state="translated">bootstrap</target>
        </trans-unit>
        <trans-unit id="4b73f58647d46c351e92c5308bdff57c346a520b" translate="yes" xml:space="preserve">
          <source>bootstrap($module [...])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e42e955dc52bdd16eb64e40e8cbb6e2038cb5a4" translate="yes" xml:space="preserve">
          <source>bootstrap()</source>
          <target state="translated">bootstrap()</target>
        </trans-unit>
        <trans-unit id="7910fb624621794d30d4a0171b4ef16c06efef31" translate="yes" xml:space="preserve">
          <source>bootstraps the shared library and</source>
          <target state="translated">...se pone en marcha la biblioteca compartida y...</target>
        </trans-unit>
        <trans-unit id="05b1f356646c24bf1765f6f1b65aea3bde7247e1" translate="yes" xml:space="preserve">
          <source>boss</source>
          <target state="translated">boss</target>
        </trans-unit>
        <trans-unit id="fc39b18f287d8bbfaceae020f4a4eb32ac5c1e70" translate="yes" xml:space="preserve">
          <source>both</source>
          <target state="translated">both</target>
        </trans-unit>
        <trans-unit id="5d5c5a75e87987f4e30517320181d3167e2e90c2" translate="yes" xml:space="preserve">
          <source>both &lt;code&gt;/x&lt;/code&gt; and &lt;code&gt;/xx&lt;/code&gt; are turned off during matching &lt;code&gt;foo&lt;/code&gt;. And in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb0e3da05698e3415e8b8587366c2e5c9fe8869" translate="yes" xml:space="preserve">
          <source>both map to</source>
          <target state="translated">ambos se dirigen a</target>
        </trans-unit>
        <trans-unit id="654dc453fcad5d97496638c1771b5fea1e41eb18" translate="yes" xml:space="preserve">
          <source>both of which mean to enable locale awarness of all categories but &lt;code&gt;LC_CTYPE&lt;/code&gt; . Only one category argument may be specified in a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; if it is of the negated form.</source>
          <target state="translated">ambos significan habilitar el reconocimiento local de todas las categor&amp;iacute;as excepto &lt;code&gt;LC_CTYPE&lt;/code&gt; . Solo se puede especificar un argumento de categor&amp;iacute;a en una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; si tiene la forma negada.</target>
        </trans-unit>
        <trans-unit id="6ee6da7a89433b3846111e0827da206b1a6c3586" translate="yes" xml:space="preserve">
          <source>both of which mean to enable locale awarness of all categories but &lt;code&gt;LC_CTYPE&lt;/code&gt;. Only one category argument may be specified in a &lt;code&gt;use locale&lt;/code&gt; if it is of the negated form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b71091a1e00fc7f0377bb487f77f1ea5a597b77" translate="yes" xml:space="preserve">
          <source>both result in the proper type due to the way the overloaded math works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d491c7e7617951114de7ec765c4e99eb127ce3" translate="yes" xml:space="preserve">
          <source>both s and m modifiers (//sm): Treat string as a single long line, but detect multiple lines. &lt;code&gt;'.'&lt;/code&gt; matches any character, even &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; , however, are able to match at the start or end of</source>
          <target state="translated">modificadores s y m (// sm): trata la cadena como una sola l&amp;iacute;nea larga, pero detecta varias l&amp;iacute;neas. &lt;code&gt;'.'&lt;/code&gt; coincide con cualquier car&amp;aacute;cter, incluso &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . &lt;code&gt;^&lt;/code&gt; y &lt;code&gt;$&lt;/code&gt; , sin embargo, pueden coincidir al principio o al final de</target>
        </trans-unit>
        <trans-unit id="da125409d0b04b5363bed4f7c169c16908244cb2" translate="yes" xml:space="preserve">
          <source>both s and m modifiers (&lt;code&gt;/sm&lt;/code&gt;): Treat string as a single long line, but detect multiple lines. &lt;code&gt;'.'&lt;/code&gt; matches any character, even &lt;code&gt;&quot;\n&quot;&lt;/code&gt;. &lt;code&gt;'^'&lt;/code&gt; and &lt;code&gt;'$'&lt;/code&gt;, however, are able to match at the start or end of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d145e8b6add511128e3c21f5ad3c0317ad3aa0f5" translate="yes" xml:space="preserve">
          <source>both supply a list context to the right-hand side, while</source>
          <target state="translated">ambos proporcionan un contexto de lista a la derecha,mientras que</target>
        </trans-unit>
        <trans-unit id="ddb1e7c979a33eef473274634ab437e562e02159" translate="yes" xml:space="preserve">
          <source>bother</source>
          <target state="translated">bother</target>
        </trans-unit>
        <trans-unit id="f4072a98f3cc33db2397c1a6a2d723f3288e5a64" translate="yes" xml:space="preserve">
          <source>bpi()</source>
          <target state="translated">bpi()</target>
        </trans-unit>
        <trans-unit id="23998aef8c711bbb24e99222ca54b2d1029087d8" translate="yes" xml:space="preserve">
          <source>bpow()</source>
          <target state="translated">bpow()</target>
        </trans-unit>
        <trans-unit id="8a6b08579a9805d7dea44b94ea1dcb6609f11536" translate="yes" xml:space="preserve">
          <source>bracketed character classes, and are a convenient and descriptive way of listing a group of characters.</source>
          <target state="translated">clases de personajes entre corchetes,y son una forma conveniente y descriptiva de listar un grupo de personajes.</target>
        </trans-unit>
        <trans-unit id="837cc1c54b7aa66d67f7d308af69db6dc69fbbe4" translate="yes" xml:space="preserve">
          <source>brackets subscripts, so you can shrink the above down to</source>
          <target state="translated">entre paréntesis,así que puedes reducir lo anterior hasta</target>
        </trans-unit>
        <trans-unit id="f58c2f1ddf1f99fbc5e588ef92122fd5f4e64d88" translate="yes" xml:space="preserve">
          <source>branch, and your repository is up to date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="ae39aad32a94dadfcf3189dc5c2a3e59c0c744ea" translate="yes" xml:space="preserve">
          <source>break function_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5884029856e1077621c33f780a067f09de226f" translate="yes" xml:space="preserve">
          <source>break source.c:xxx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb43d711172bd27bbb3fc18fb773e33edc6b3165" translate="yes" xml:space="preserve">
          <source>breaking down the problem into smaller parts,</source>
          <target state="translated">dividiendo el problema en partes más pequeñas,</target>
        </trans-unit>
        <trans-unit id="ef6896ab2d5a3c6e8ba7ee46ba3e48c29057ad74" translate="yes" xml:space="preserve">
          <source>breakout</source>
          <target state="translated">breakout</target>
        </trans-unit>
        <trans-unit id="5c0a31c48cda57c40dc61b785110d76593834ffd" translate="yes" xml:space="preserve">
          <source>breakpoint</source>
          <target state="translated">breakpoint</target>
        </trans-unit>
        <trans-unit id="b33a5b3e6b7eb3b9f7f1a0e451dee877c2374873" translate="yes" xml:space="preserve">
          <source>breaks this paradigm;</source>
          <target state="translated">rompe este paradigma;</target>
        </trans-unit>
        <trans-unit id="58bcf671da7c6005da184d1a734e880e766af7f5" translate="yes" xml:space="preserve">
          <source>brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</source>
          <target state="translated">brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d66ce35469f9f5b7a50b1393b2943fdd723739c2" translate="yes" xml:space="preserve">
          <source>brian d foy, &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d0590ea80fc27ef2d48128cdc45e16256169d0" translate="yes" xml:space="preserve">
          <source>brian m. carlson &amp;lt;sandals@crustytoothpaste.net&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58ccb7871e0261dfe6de9e4f5274543ebbebeb8" translate="yes" xml:space="preserve">
          <source>broadcast</source>
          <target state="translated">broadcast</target>
        </trans-unit>
        <trans-unit id="96a69616cc78fb488e50bb7f07bd37667d493f80" translate="yes" xml:space="preserve">
          <source>broken.</source>
          <target state="translated">broken.</target>
        </trans-unit>
        <trans-unit id="0b12bb49ef8a21331b0526566fe4b80e5eaec019" translate="yes" xml:space="preserve">
          <source>broot()</source>
          <target state="translated">broot()</target>
        </trans-unit>
        <trans-unit id="1bb9049aef8480778900302b76f274d373fd9aaa" translate="yes" xml:space="preserve">
          <source>bround ( +$scale )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31feb56dfd8fcb4e7473c88c2003fc388b6520b7" translate="yes" xml:space="preserve">
          <source>bround ( -$scale ) and bround ( 0 )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13660c144d6e63ed7a875821a88f3b27a21b7786" translate="yes" xml:space="preserve">
          <source>bround()</source>
          <target state="translated">bround()</target>
        </trans-unit>
        <trans-unit id="6fa78ae26f483beb12891190edb2dc005e4cbe3b" translate="yes" xml:space="preserve">
          <source>bround()/round()/bfround()</source>
          <target state="translated">bround()/round()/bfround()</target>
        </trans-unit>
        <trans-unit id="9ca2d10d5ef0cae97ebe373154409473b2e7e075" translate="yes" xml:space="preserve">
          <source>brsft()</source>
          <target state="translated">brsft()</target>
        </trans-unit>
        <trans-unit id="48f3f89ac3fac5337b47faa8a2f93eb8b298844e" translate="yes" xml:space="preserve">
          <source>bsd</source>
          <target state="translated">bsd</target>
        </trans-unit>
        <trans-unit id="7f4d4889db6efc5f4473f596054724e46849358d" translate="yes" xml:space="preserve">
          <source>bsd_glob</source>
          <target state="translated">bsd_glob</target>
        </trans-unit>
        <trans-unit id="1dbd729f945c8998e112203241f2035b87c572b0" translate="yes" xml:space="preserve">
          <source>bsd_glob() returns a list of matching paths, possibly zero length. If an error occurred, &amp;amp;File::Glob::GLOB_ERROR will be non-zero and &lt;code&gt;$!&lt;/code&gt; will be set. &amp;amp;File::Glob::GLOB_ERROR is guaranteed to be zero if no error occurred, or one of the following values otherwise:</source>
          <target state="translated">bsd_glob () devuelve una lista de rutas coincidentes, posiblemente de longitud cero. Si ocurri&amp;oacute; un error, &amp;amp; File :: Glob :: GLOB_ERROR ser&amp;aacute; distinto de cero y &lt;code&gt;$!&lt;/code&gt; se establecer&amp;aacute;. Se garantiza que &amp;amp; File :: Glob :: GLOB_ERROR es cero si no se produce ning&amp;uacute;n error, o uno de los siguientes valores en caso contrario:</target>
        </trans-unit>
        <trans-unit id="60747fb94e0ee1e6a3033c0be43d87212b33a4f5" translate="yes" xml:space="preserve">
          <source>bsddev.zip</source>
          <target state="translated">bsddev.zip</target>
        </trans-unit>
        <trans-unit id="3a8d931b6b3b0c9a1cc280dd0b5c81f1da1ad556" translate="yes" xml:space="preserve">
          <source>bsgn()</source>
          <target state="translated">bsgn()</target>
        </trans-unit>
        <trans-unit id="12b8a881b5b383f3a144a3c69221d0f08e530a29" translate="yes" xml:space="preserve">
          <source>bsin()</source>
          <target state="translated">bsin()</target>
        </trans-unit>
        <trans-unit id="98e6344878aedd07915a448203ac11106893ceb4" translate="yes" xml:space="preserve">
          <source>bsqrt()</source>
          <target state="translated">bsqrt()</target>
        </trans-unit>
        <trans-unit id="1c2f15e3472a6bf8ee81043d6243485c54d30bbe" translate="yes" xml:space="preserve">
          <source>bsstr()</source>
          <target state="translated">bsstr()</target>
        </trans-unit>
        <trans-unit id="2bd0fed432a2912a0d25f620e2789f60d1a512a3" translate="yes" xml:space="preserve">
          <source>bstr()</source>
          <target state="translated">bstr()</target>
        </trans-unit>
        <trans-unit id="d0f6068194aa4e1d1262dafb62bcf499c7cc6deb" translate="yes" xml:space="preserve">
          <source>bstr()/bsstr()</source>
          <target state="translated">bstr()/bsstr()</target>
        </trans-unit>
        <trans-unit id="980e1fb430966cca3406c283871633ee8baa3018" translate="yes" xml:space="preserve">
          <source>bsub()</source>
          <target state="translated">bsub()</target>
        </trans-unit>
        <trans-unit id="3f36bff1518edbd010b34e425c692562b53fe0ad" translate="yes" xml:space="preserve">
          <source>btdiv()</source>
          <target state="translated">btdiv()</target>
        </trans-unit>
        <trans-unit id="d4fd519d057429d2d758445e9374839a00ca1b21" translate="yes" xml:space="preserve">
          <source>btmod()</source>
          <target state="translated">btmod()</target>
        </trans-unit>
        <trans-unit id="fe1b2b96400138c433e3bcd27a0351d10505d6a4" translate="yes" xml:space="preserve">
          <source>btree(3)</source>
          <target state="translated">btree(3)</target>
        </trans-unit>
        <trans-unit id="827b8276dd99a8a945b710d5e1f7ccb6d9c39b16" translate="yes" xml:space="preserve">
          <source>bucket</source>
          <target state="translated">bucket</target>
        </trans-unit>
        <trans-unit id="e53c2ea1fe4bd2b78bf4723c7c155a578e020a25" translate="yes" xml:space="preserve">
          <source>buffer</source>
          <target state="translated">buffer</target>
        </trans-unit>
        <trans-unit id="bdc28be892a4dde516e1a5280e9c0bfe5afdc72a" translate="yes" xml:space="preserve">
          <source>bugtracker</source>
          <target state="translated">bugtracker</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="39001d5c18f51088ca9e1057a5abbd818117d55a" translate="yes" xml:space="preserve">
          <source>build them, but you must link the XSUBs subroutines with the rest of Perl, creating a new executable. This situation is similar to Perl 4.</source>
          <target state="translated">construirlos,pero debes enlazar las subrutinas XSUB con el resto de Perl,creando un nuevo ejecutable.Esta situación es similar a la de Perl 4.</target>
        </trans-unit>
        <trans-unit id="bae58eaace8b2754bd7e021ee9fd629f49a70e0a" translate="yes" xml:space="preserve">
          <source>build_cache</source>
          <target state="translated">build_cache</target>
        </trans-unit>
        <trans-unit id="18bd034387c04d01dcb25b1dcf731365caa38d24" translate="yes" xml:space="preserve">
          <source>build_dir</source>
          <target state="translated">build_dir</target>
        </trans-unit>
        <trans-unit id="e64a2bbf05ec931c7e1cf57f9fa89ecf2f60a4ce" translate="yes" xml:space="preserve">
          <source>build_dir_reuse</source>
          <target state="translated">build_dir_reuse</target>
        </trans-unit>
        <trans-unit id="86d56dce4a9004aa00c2f6d659e3142638e7cd56" translate="yes" xml:space="preserve">
          <source>build_requires</source>
          <target state="translated">build_requires</target>
        </trans-unit>
        <trans-unit id="aefa500bb9b669c85109eeba4ef5252fdc5d8c36" translate="yes" xml:space="preserve">
          <source>build_requires_install_policy</source>
          <target state="translated">build_requires_install_policy</target>
        </trans-unit>
        <trans-unit id="f52318a05e518a5596012af2ed38de68ac26a468" translate="yes" xml:space="preserve">
          <source>builder</source>
          <target state="translated">builder</target>
        </trans-unit>
        <trans-unit id="9b72ae582cc1e1e343de827cc627cd49a4a6c7c4" translate="yes" xml:space="preserve">
          <source>building below the perl source directory. If you</source>
          <target state="translated">construyendo debajo del directorio de fuentes de Perl.Si usted</target>
        </trans-unit>
        <trans-unit id="947d8f664d143e01412e73e257100b32b9ed0ecf" translate="yes" xml:space="preserve">
          <source>building below the perl source, INST_LIB and INST_ARCHLIB default to ../../lib, and INST_SCRIPT is not defined.</source>
          <target state="translated">construyendo debajo de la fuente de perl,INST_LIB e INST_ARCHLIB por defecto a ../../lib,y INST_SCRIPT no está definido.</target>
        </trans-unit>
        <trans-unit id="f125862e397bf52c7831a13c2443aeda18c3ffb1" translate="yes" xml:space="preserve">
          <source>builds a PPD package that references a binary of the &lt;code&gt;Agent&lt;/code&gt; package, located in the &lt;code&gt;x86&lt;/code&gt; directory relative to the PPD itself.</source>
          <target state="translated">crea un paquete PPD que hace referencia a un binario del paquete &lt;code&gt;Agent&lt;/code&gt; , ubicado en el directorio &lt;code&gt;x86&lt;/code&gt; en relaci&amp;oacute;n con el PPD mismo.</target>
        </trans-unit>
        <trans-unit id="54c968766b16149a445212d3b145a5471982de2f" translate="yes" xml:space="preserve">
          <source>builds a Perl extension for use by Encode from either Unicode Character Mapping files (.ucm) or Tcl Encoding Files (.enc). Besides being used internally during the build process of the Encode module, you can use</source>
          <target state="translated">construye una extensión Perl para ser usada por Encode desde archivos de mapeo de caracteres Unicode (.ucm)o archivos de codificación Tcl (.enc).Además de ser usado internamente durante el proceso de construcción del módulo de Codificación,puedes usar</target>
        </trans-unit>
        <trans-unit id="02270db35bb6bd281f1f08fafc816eeb39611e44" translate="yes" xml:space="preserve">
          <source>builds a Perl extension from C header files. The extension will include functions which can be used to retrieve the value of any #define statement which was in the C header files.</source>
          <target state="translated">construye una extensión Perl a partir de archivos de encabezamiento C.La extensión incluirá funciones que pueden ser usadas para recuperar el valor de cualquier sentencia #define que estuviera en los archivos de encabezado C.</target>
        </trans-unit>
        <trans-unit id="353c847ec3d51fb75d760939a900605ca2ba1152" translate="yes" xml:space="preserve">
          <source>built</source>
          <target state="translated">built</target>
        </trans-unit>
        <trans-unit id="20338f4396d53223790aaa148f621aa479ece3c0" translate="yes" xml:space="preserve">
          <source>built-in</source>
          <target state="translated">built-in</target>
        </trans-unit>
        <trans-unit id="26af528c9f66aa4c3245f46b32caf847b44d0509" translate="yes" xml:space="preserve">
          <source>bulkdd@cpan.org</source>
          <target state="translated">bulkdd@cpan.org</target>
        </trans-unit>
        <trans-unit id="d59795de8a4d83834e525b589b2bb0c12e4542c1" translate="yes" xml:space="preserve">
          <source>bundle</source>
          <target state="translated">bundle</target>
        </trans-unit>
        <trans-unit id="35e8277cc95cf8aaf1e8e9ffcb5ea39e6502bbd0" translate="yes" xml:space="preserve">
          <source>bundles</source>
          <target state="translated">bundles</target>
        </trans-unit>
        <trans-unit id="a31ed492140d39480ecda647d79e466b5ce2218c" translate="yes" xml:space="preserve">
          <source>bundling (default: disabled)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e25bc919e32ad451aa8e6adc14844860a2a627" translate="yes" xml:space="preserve">
          <source>bundling_override (default: disabled)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bd27f135ae383d1ab339e2ddd56faabfe06a3c" translate="yes" xml:space="preserve">
          <source>bunzip2 $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">bunzip2 $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="ded851c3d8d9888e3e55d4afcffaa2a08724edd0" translate="yes" xml:space="preserve">
          <source>buparrow()</source>
          <target state="translated">buparrow()</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="cf72a790bf9220db925b72c5cbee1dd78ac17da1" translate="yes" xml:space="preserve">
          <source>but $var is referenced elsewhere and could be modified after the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; expression is evaluated. Either it is explicitly modified elsewhere (&lt;code&gt;$var = 3&lt;/code&gt; ) or it is passed to a subroutine or to an operator like &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;, which may or may not modify the variable.</source>
          <target state="translated">pero $ var se hace referencia en otro lugar y podr&amp;iacute;a ser modificado despu&amp;eacute;s de la &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; se eval&amp;uacute;a la expresi&amp;oacute;n. O se modifica expl&amp;iacute;citamente en otro lugar ( &lt;code&gt;$var = 3&lt;/code&gt; ) o se pasa a una subrutina oa un operador como &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; , que puede o no modificar la variable.</target>
        </trans-unit>
        <trans-unit id="d3309c6a5b5625d9bc8f85ff4b36ff98024811f1" translate="yes" xml:space="preserve">
          <source>but $var is referenced elsewhere and could be modified after the &lt;code&gt;sub&lt;/code&gt; expression is evaluated. Either it is explicitly modified elsewhere (&lt;code&gt;$var = 3&lt;/code&gt;) or it is passed to a subroutine or to an operator like &lt;code&gt;printf&lt;/code&gt; or &lt;code&gt;map&lt;/code&gt;, which may or may not modify the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db1b56b00418784571960c2c16e06bc81c8bff7" translate="yes" xml:space="preserve">
          <source>but I immediately went looking for some more concise way to basically denote the same phrase-function -- a way that would also serve to concisely denote</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b30c3e0c461e872d1934c8031a13c3d20f53a0" translate="yes" xml:space="preserve">
          <source>but a string consisting of two null bytes (the result of &lt;code&gt;&quot;\020\020&quot;
&amp;amp; &quot;\101\101&quot;&lt;/code&gt; ) is not a false value in Perl. You need:</source>
          <target state="translated">pero una cadena que consta de dos bytes nulos (el resultado de &lt;code&gt;&quot;\020\020&quot; &amp;amp; &quot;\101\101&quot;&lt;/code&gt; ) no es un valor falso en Perl. Necesitas:</target>
        </trans-unit>
        <trans-unit id="8bc24902f3dcba2a5f69700cadd91dc5b3abff7c" translate="yes" xml:space="preserve">
          <source>but a string consisting of two null bytes (the result of &lt;code&gt;&quot;\020\020&quot; &amp;amp; &quot;\101\101&quot;&lt;/code&gt;) is not a false value in Perl. You need:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5c833e6b8ad19de738251b4d0e198a912780cf" translate="yes" xml:space="preserve">
          <source>but avoids the need to know $cpt's package name.</source>
          <target state="translated">pero evita la necesidad de saber el nombre del paquete de $cpt.</target>
        </trans-unit>
        <trans-unit id="14589f2bfb988ba357d07d902945d6c51ace67f6" translate="yes" xml:space="preserve">
          <source>but calling any method that modifies the number directly will result in &lt;b&gt;both&lt;/b&gt; the original and the copy being destroyed:</source>
          <target state="translated">pero llamar a cualquier m&amp;eacute;todo que modifique el n&amp;uacute;mero directamente resultar&amp;aacute; en la destrucci&amp;oacute;n &lt;b&gt;tanto&lt;/b&gt; del original como de la copia:</target>
        </trans-unit>
        <trans-unit id="2a43af42a3edda8e818e0b4b4bad6b01d151755a" translate="yes" xml:space="preserve">
          <source>but doesn't spit out extra fields. It's also cheaper not to capture characters if you don't need to.</source>
          <target state="translated">pero no escupe campos extra.También es más barato no capturar personajes si no es necesario.</target>
        </trans-unit>
        <trans-unit id="1517c34ad4cc448c8f1a026222d0e9853c645be4" translate="yes" xml:space="preserve">
          <source>but doesn't spit out the delimiters themselves as extra fields (even though that's the behaviour of &lt;a href=&quot;perlfunc#split&quot;&gt;&quot;split&quot; in perlfunc&lt;/a&gt; when its pattern contains capturing groups). It's also cheaper not to capture characters if you don't need to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e2fea5090f6357ce9a5813f0a47f400272a36" translate="yes" xml:space="preserve">
          <source>but failing on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e6be4e78dba9fceaa351875dbb83140728ef88" translate="yes" xml:space="preserve">
          <source>but faster.</source>
          <target state="translated">pero más rápido.</target>
        </trans-unit>
        <trans-unit id="5db5323d8075957d671047bee13d624d6956eafd" translate="yes" xml:space="preserve">
          <source>but in actual fact, you got</source>
          <target state="translated">pero en realidad,tienes</target>
        </trans-unit>
        <trans-unit id="17fdf913fd722397c7d21c60f0b25c837b358a3c" translate="yes" xml:space="preserve">
          <source>but instead closer to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9923ef039c4b79c28905e398588d6eb79f30a4c3" translate="yes" xml:space="preserve">
          <source>but instead like this, bearing in mind that this is just a first stab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46b2388486d21f0ad260e041f0ddfc6e4c238c0" translate="yes" xml:space="preserve">
          <source>but instead you get:</source>
          <target state="translated">pero en vez de eso,tienes:</target>
        </trans-unit>
        <trans-unit id="5f0e7a4318bb45ba256d78b7d932a4b745bc31cf" translate="yes" xml:space="preserve">
          <source>but is more efficient. Returns the number of elements in the array following the completed &lt;a href=&quot;#push-ARRAY%2CLIST&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670c9eed4ef45780d6a27c66aa6737f774ca7361" translate="yes" xml:space="preserve">
          <source>but is more efficient. Returns the number of elements in the array following the completed &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">pero es m&amp;aacute;s eficiente. Devuelve el n&amp;uacute;mero de elementos de la matriz que siguen a la &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; completa .</target>
        </trans-unit>
        <trans-unit id="ea2b46c116a2c87653b1086423551aaba04ef434" translate="yes" xml:space="preserve">
          <source>but is more efficient. Returns the number of elements in the array following the completed &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">pero es m&amp;aacute;s eficiente. Devuelve el n&amp;uacute;mero de elementos de la matriz que siguen a la &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; completa .</target>
        </trans-unit>
        <trans-unit id="9d7f5ee2a89754fd0cb3b08ac980e8a4b203554b" translate="yes" xml:space="preserve">
          <source>but not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430a12560afed6b52405b428e0d46fec40e28bab" translate="yes" xml:space="preserve">
          <source>but not a mixture of both as in:</source>
          <target state="translated">pero no una mezcla de ambos como en:</target>
        </trans-unit>
        <trans-unit id="07b3726c790e16484102349cd362b2dc216a33e9" translate="yes" xml:space="preserve">
          <source>but rather as class methods:</source>
          <target state="translated">sino más bien como métodos de clase:</target>
        </trans-unit>
        <trans-unit id="9702a21ebfe300cef572f0598fe961666de341c4" translate="yes" xml:space="preserve">
          <source>but remember that there's a startup cost to pay in that case (see above &quot;libperl and Prebinding&quot;).</source>
          <target state="translated">pero recuerde que hay un costo de inicio a pagar en ese caso (ver arriba &quot;libperl y Prebinding&quot;).</target>
        </trans-unit>
        <trans-unit id="c6bc845a7a5bdc5bb3d298cf7a7d62fbdb84e0b7" translate="yes" xml:space="preserve">
          <source>but shorter. Parent directory specifications are stripped from the template itself. The &lt;code&gt;TMPDIR&lt;/code&gt; option is ignored if &lt;code&gt;DIR&lt;/code&gt; is set explicitly. Additionally, &lt;code&gt;TMPDIR&lt;/code&gt; is implied if neither a template nor a directory are supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb2133a2923255080591abe8aebb2b94ab97c8d" translate="yes" xml:space="preserve">
          <source>but shorter. Parent directory specifications are stripped from the template itself. The C</source>
          <target state="translated">pero más corto.Las especificaciones del directorio principal se eliminan de la plantilla.La C</target>
        </trans-unit>
        <trans-unit id="62ddbd66e01cf82298f15351b5c586e039d8e26c" translate="yes" xml:space="preserve">
          <source>but since you anticipate localizing this, you write:</source>
          <target state="translated">pero como anticipan la localización de esto,escriben:</target>
        </trans-unit>
        <trans-unit id="2033df8e9b543181e41e825d37dc00babfccc375" translate="yes" xml:space="preserve">
          <source>but that is completely accidental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4adbde7584db1a7c8b596705eb7136fbd8e99a5" translate="yes" xml:space="preserve">
          <source>but that makes no difference compared with the -Duse64bitint because of the &lt;code&gt;cc -64&lt;/code&gt; .</source>
          <target state="translated">pero eso no hace ninguna diferencia en comparaci&amp;oacute;n con el -Duse64bitint debido al &lt;code&gt;cc -64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79e9388bb002566e7c1bfafce14408283c05c831" translate="yes" xml:space="preserve">
          <source>but that makes no difference compared with the -Duse64bitint because of the &lt;code&gt;cc -64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d8d8f376b2cff8835a27af9acf7c580e3a9e81" translate="yes" xml:space="preserve">
          <source>but that may be just luck. Other AntiVirus software may have similar issues.</source>
          <target state="translated">pero eso puede ser sólo suerte.Otros programas antivirus pueden tener problemas similares.</target>
        </trans-unit>
        <trans-unit id="ed3d39f2ff5bb81326e9be2a017f7421168dc990" translate="yes" xml:space="preserve">
          <source>but that will be silently converted into &lt;code&gt;[3,-3pi/4]&lt;/code&gt;, since the modulus must be non-negative (it represents the distance to the origin in the complex plane).</source>
          <target state="translated">pero eso se convertir&amp;aacute; silenciosamente en &lt;code&gt;[3,-3pi/4]&lt;/code&gt; , ya que el m&amp;oacute;dulo debe ser no negativo (representa la distancia al origen en el plano complejo).</target>
        </trans-unit>
        <trans-unit id="b509dd9066df836513e27436a8d4e7ade7f0b728" translate="yes" xml:space="preserve">
          <source>but the comma is not</source>
          <target state="translated">pero la coma no es</target>
        </trans-unit>
        <trans-unit id="9384ff012c073541ee4cf2ad0804fa1a41e628ac" translate="yes" xml:space="preserve">
          <source>but the syntax of Perl doesn't allow this. You need a comma after the string. (Of course, you may consider it a bug that commas between all the constants aren't required, in which case you may feel free to insert commas unless you're using $Term::ANSIColor::AUTORESET or PUSHCOLOR/POPCOLOR.)</source>
          <target state="translated">pero la sintaxis de Perl no lo permite.Necesitas una coma después de la cadena.(Por supuesto,puedes considerar un error que las comas entre todas las constantes no sean necesarias,en cuyo caso puedes sentirte libre de insertar comas a menos que estés usando $Term::ANSIColor::AUTORESET o PUSHCOLOR/POPCOLOR.)</target>
        </trans-unit>
        <trans-unit id="f59fd7340224ad23961f9ec29fad42c961b15b81" translate="yes" xml:space="preserve">
          <source>but then $foo no longer contains a glob.</source>
          <target state="translated">pero entonces $foo ya no contiene un globo.</target>
        </trans-unit>
        <trans-unit id="aa473e44fe39ed7c06c8dfcc198deb8c0788e03b" translate="yes" xml:space="preserve">
          <source>but then cannot see that &quot;En_US&quot; listed by the above-mentioned commands. You may see things like &quot;en_US.ISO8859-1&quot;, but that isn't the same. In this case, try running under a locale that you can list and which somehow matches what you tried. The rules for matching locale names are a bit vague because standardization is weak in this area. See again the &lt;a href=&quot;#Finding-locales&quot;&gt;&quot;Finding locales&quot;&lt;/a&gt; about general rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e375615161c63e7fc29a1c88b265148575b94e3" translate="yes" xml:space="preserve">
          <source>but then cannot see that &quot;En_US&quot; listed by the above-mentioned commands. You may see things like &quot;en_US.ISO8859-1&quot;, but that isn't the same. In this case, try running under a locale that you can list and which somehow matches what you tried. The rules for matching locale names are a bit vague because standardization is weak in this area. See again the &lt;a href=&quot;#Finding-locales&quot;&gt;Finding locales&lt;/a&gt; about general rules.</source>
          <target state="translated">pero luego no puede ver que &quot;En_US&quot; aparece en los comandos mencionados anteriormente. Puede ver cosas como &quot;en_US.ISO8859-1&quot;, pero eso no es lo mismo. En este caso, intente ejecutar en una configuraci&amp;oacute;n regional que pueda enumerar y que de alguna manera coincida con lo que intent&amp;oacute;. Las reglas para hacer coincidir los nombres de las configuraciones regionales son un poco vagas porque la estandarizaci&amp;oacute;n es d&amp;eacute;bil en esta &amp;aacute;rea. Consulte de nuevo las &lt;a href=&quot;#Finding-locales&quot;&gt;localizaciones de b&amp;uacute;squeda&lt;/a&gt; sobre las reglas generales.</target>
        </trans-unit>
        <trans-unit id="3cac644780c84e33b8c8e17e1aa72c863bdc551c" translate="yes" xml:space="preserve">
          <source>but then modify it if the current Configure options warrant.</source>
          <target state="translated">pero luego modificarlo si las opciones de configuración actuales lo justifican.</target>
        </trans-unit>
        <trans-unit id="9bbd6063bd561229cf513f5487e005633f74b476" translate="yes" xml:space="preserve">
          <source>but these will fail:</source>
          <target state="translated">pero estos fracasarán:</target>
        </trans-unit>
        <trans-unit id="ca81437b80f2ad6457ea481a09d4317a77895103" translate="yes" xml:space="preserve">
          <source>but this can be altered by passing a second argument to &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; or &lt;code&gt;FILTER&lt;/code&gt; (just remember: there's</source>
          <target state="translated">pero esto se puede modificar pasando un segundo argumento para &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; o &lt;code&gt;FILTER&lt;/code&gt; (solo recuerde: hay</target>
        </trans-unit>
        <trans-unit id="bd8dcfd0c5e2bbf5748ea9ea0c6fdd9fe8c26e08" translate="yes" xml:space="preserve">
          <source>but this can be altered by passing a second argument to &lt;code&gt;use Filter::Simple&lt;/code&gt; or &lt;code&gt;FILTER&lt;/code&gt; (just remember: there's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e691b4ae28b1162e1f37e88fdb2e7fa3a57809e2" translate="yes" xml:space="preserve">
          <source>but this will not</source>
          <target state="translated">pero esto no</target>
        </trans-unit>
        <trans-unit id="50607a6413ca39fe7073dd9a3b641d9d68b5acf2" translate="yes" xml:space="preserve">
          <source>but translates into</source>
          <target state="translated">pero se traduce en</target>
        </trans-unit>
        <trans-unit id="d32b03d32cae9215bc5e3eedc3a4a9edf0f113a6" translate="yes" xml:space="preserve">
          <source>but under a French locale</source>
          <target state="translated">pero bajo un local francés</target>
        </trans-unit>
        <trans-unit id="9006db57193ae835a928e37c6463a7cbc01420e8" translate="yes" xml:space="preserve">
          <source>but which does not &lt;code&gt;chdir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bc126135ab3f34b2cc7b1c93207acc39efb18e" translate="yes" xml:space="preserve">
          <source>but with &lt;code&gt;extract_delimited&lt;/code&gt; it can be simplified to:</source>
          <target state="translated">pero con &lt;code&gt;extract_delimited&lt;/code&gt; se puede simplificar a:</target>
        </trans-unit>
        <trans-unit id="5a3caba3b95cb830b6cd3bb3694f24d055d2aa69" translate="yes" xml:space="preserve">
          <source>but you have to say</source>
          <target state="translated">pero tienes que decir</target>
        </trans-unit>
        <trans-unit id="790b666b737305903b34914bd264529abbf92746" translate="yes" xml:space="preserve">
          <source>but you should be aware that in this form, the &lt;code&gt;..&lt;/code&gt; operator creates a list of all integers in the range, which can take a lot of memory for large ranges. However, the problem does not occur when using &lt;code&gt;..&lt;/code&gt; within a &lt;code&gt;for&lt;/code&gt; loop, because in that case the range operator is optimized to</source>
          <target state="translated">pero debe tener en cuenta que en esta forma, el operador &lt;code&gt;..&lt;/code&gt; crea una lista de todos los n&amp;uacute;meros enteros en el rango, lo que puede requerir mucha memoria para rangos grandes. Sin embargo, el problema no ocurre cuando se usa &lt;code&gt;..&lt;/code&gt; dentro de un bucle &lt;code&gt;for&lt;/code&gt; , porque en ese caso el operador de rango est&amp;aacute; optimizado para</target>
        </trans-unit>
        <trans-unit id="920f4cbc6f3b3ccfd1fe8ce2d2eca6336d87c327" translate="yes" xml:space="preserve">
          <source>but your system might have more.</source>
          <target state="translated">pero tu sistema podría tener más.</target>
        </trans-unit>
        <trans-unit id="0a0df778ce40c92b4130fd3cc1bc732e0dcd8097" translate="yes" xml:space="preserve">
          <source>but your version of perl is compiled without perlio, and this form of open is not supported.</source>
          <target state="translated">pero su versión de perl se compila sin perlio,y esta forma de apertura no está soportada.</target>
        </trans-unit>
        <trans-unit id="f6cf3e61369618c4d062082f34a8e4eb6950efaa" translate="yes" xml:space="preserve">
          <source>but, because &lt;code&gt;&quot;*&quot;&lt;/code&gt; is higher precedence than named operators:</source>
          <target state="translated">pero, debido a que &lt;code&gt;&quot;*&quot;&lt;/code&gt; tiene mayor precedencia que los operadores con nombre:</target>
        </trans-unit>
        <trans-unit id="2e58b63df0271d9d91bb2fb25b1d674542ccb1b2" translate="yes" xml:space="preserve">
          <source>bxor()</source>
          <target state="translated">bxor()</target>
        </trans-unit>
        <trans-unit id="408158643ed564c72fa0921826f8294d71ccbf7c" translate="yes" xml:space="preserve">
          <source>by</source>
          <target state="translated">by</target>
        </trans-unit>
        <trans-unit id="b562123d16a87ef1dd2d50e459ddac28857a828c" translate="yes" xml:space="preserve">
          <source>by &lt;code&gt;BEGIN{ $/ = &quot;\0digits&quot;; }&lt;/code&gt; .</source>
          <target state="translated">por &lt;code&gt;BEGIN{ $/ = &quot;\0digits&quot;; }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="693c89736c2070fd31c626a46716305d2dcd07f7" translate="yes" xml:space="preserve">
          <source>by &lt;code&gt;BEGIN{ $/ = &quot;\0digits&quot;; }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7f03736d7aee983a0f27b66b3cd7bd23ae58bf" translate="yes" xml:space="preserve">
          <source>by Andreas Koenig &amp;lt;&lt;code&gt;k@anna.in-berlin.de&lt;/code&gt; &amp;gt; and Tim Bunce.</source>
          <target state="translated">por Andreas Koenig &amp;lt; &lt;code&gt;k@anna.in-berlin.de&lt;/code&gt; &amp;gt; y Tim Bunce.</target>
        </trans-unit>
        <trans-unit id="c23116b526d815e85bf1c020a76bc213b62b8265" translate="yes" xml:space="preserve">
          <source>by Andreas Koenig &amp;lt;&lt;code&gt;k@anna.in-berlin.de&lt;/code&gt;&amp;gt; and Tim Bunce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b9be2f90b4b5e0f72bcc70fc011d637b555279" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl (</source>
          <target state="translated">por Jeffrey Friedl (</target>
        </trans-unit>
        <trans-unit id="75c037b29723680ee8b90b4bf48df2df3306d348" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl (&lt;a href=&quot;http://oreilly.com/catalog/9780596528126/&quot;&gt;http://oreilly.com/catalog/9780596528126/&lt;/a&gt;) for a thorough grounding and reference on the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436a067660e3cebe3b245b230a1f3a59c11cb842" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl (&lt;a href=&quot;https://oreilly.com/catalog/9780596528126/&quot;&gt;http://oreilly.com/catalog/9780596528126/&lt;/a&gt;) for a thorough grounding and reference on the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d25fddceaf2bede4f0c1508fc9756858ff0f82" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl (published by O'Reilly, ISBN 1556592-257-3).</source>
          <target state="translated">por Jeffrey Friedl (publicado por O'Reilly,ISBN 1556592-257-3).</target>
        </trans-unit>
        <trans-unit id="01bcdce954a667cee1cea208aa989626d65f08eb" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl gives a wonderful discussion of this and other efficiency issues.</source>
          <target state="translated">de Jeffrey Friedl da una maravillosa discusión de este y otros temas de eficiencia.</target>
        </trans-unit>
        <trans-unit id="292b840af5da5995eb868afee859b139a4198e22" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl, published by O'Reilly and Associates.</source>
          <target state="translated">por Jeffrey Friedl,publicado por O'Reilly y Asociados.</target>
        </trans-unit>
        <trans-unit id="a030535d3a4b6473025f29bd648142b0bfd7bded" translate="yes" xml:space="preserve">
          <source>by Jeffrey Friedl. He explains how the regular expressions engine works and why some patterns are surprisingly inefficient. Once you understand how perl applies regular expressions, you can tune them for individual situations.</source>
          <target state="translated">por Jeffrey Friedl.Explica cómo funciona el motor de expresiones regulares y por qué algunos patrones son sorprendentemente ineficientes.Una vez que entiendes cómo Perl aplica las expresiones regulares,puedes afinarlas para situaciones individuales.</target>
        </trans-unit>
        <trans-unit id="0662c80629deb9e56e36b3c8498a287fee6d6d19" translate="yes" xml:space="preserve">
          <source>by Sean M. Burke and Jordan Lachler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3b42830418e798c60825381fd17fa38f07279b" translate="yes" xml:space="preserve">
          <source>by W. Richard Stevens (published by Prentice-Hall). Most books on networking address the subject from the perspective of a C programmer; translation to Perl is left as an exercise for the reader.</source>
          <target state="translated">por W.Richard Stevens (publicado por Prentice-Hall).La mayoría de los libros sobre redes de trabajo abordan el tema desde la perspectiva de un programador de C;la traducción a Perl se deja como un ejercicio para el lector.</target>
        </trans-unit>
        <trans-unit id="aa39ccc1df65d58c55c7ad4408539c603519c108" translate="yes" xml:space="preserve">
          <source>by Yves Orton, 2006.</source>
          <target state="translated">por Yves Orton,2006.</target>
        </trans-unit>
        <trans-unit id="3e3c60c9a79bc01108d963cab52a79402baacea3" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flag &lt;code&gt;-pg&lt;/code&gt; . Either edit</source>
          <target state="translated">compilando usando gcc con la bandera &lt;code&gt;-pg&lt;/code&gt; . Cualquiera editar</target>
        </trans-unit>
        <trans-unit id="19f7896cab4219f100a419456e0bdd3ba2ec060f" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flag &lt;code&gt;-pg&lt;/code&gt;. Either edit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d400126bc4b2b2a0be4cb6f504f4a728dab5e6" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flags &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt; . Either edit</source>
          <target state="translated">compilando usando gcc con las banderas &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt; . Cualquiera editar</target>
        </trans-unit>
        <trans-unit id="f8928b51e9787b60afbcaada877671cd348377c0" translate="yes" xml:space="preserve">
          <source>by compiling using gcc with the flags &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt;. Either edit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed704a971a09b89d0355af9ed7f590b8d16afef1" translate="yes" xml:space="preserve">
          <source>by default</source>
          <target state="translated">por defecto</target>
        </trans-unit>
        <trans-unit id="b995af8a25b522b801201b66c682fc8351af8011" translate="yes" xml:space="preserve">
          <source>by default the object is constructed as if &lt;code&gt;tempfile&lt;/code&gt; was called without options, but with the additional behaviour that the temporary file is removed by the object destructor if UNLINK is set to true (the default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e935cb2d694a730a179e0fab14594701e7b71b6" translate="yes" xml:space="preserve">
          <source>by default the object is constructed as if C</source>
          <target state="translated">por defecto el objeto se construye como si C</target>
        </trans-unit>
        <trans-unit id="76e18cd7b5438dfa50021afe47ddf6798a2380ea" translate="yes" xml:space="preserve">
          <source>by default, and this file is read by the &lt;code&gt;dprofpp&lt;/code&gt; program, which is already installed as part of the &lt;code&gt;Devel::DProf&lt;/code&gt; distribution. If you call &lt;code&gt;dprofpp&lt;/code&gt; with no options, it will read the</source>
          <target state="translated">de forma predeterminada, y este archivo es le&amp;iacute;do por el programa &lt;code&gt;dprofpp&lt;/code&gt; , que ya est&amp;aacute; instalado como parte de la distribuci&amp;oacute;n &lt;code&gt;Devel::DProf&lt;/code&gt; . Si llama a &lt;code&gt;dprofpp&lt;/code&gt; sin opciones, leer&amp;aacute; el</target>
        </trans-unit>
        <trans-unit id="ab0866dc7f2a672bc7b6be003ac55641a8c5066d" translate="yes" xml:space="preserve">
          <source>by default. Human readable reports can be generated from here by using the supplied &lt;code&gt;nytprofhtml&lt;/code&gt; (HTML output) and &lt;code&gt;nytprofcsv&lt;/code&gt; (CSV output) programs. We've used the Unix system &lt;code&gt;html2text&lt;/code&gt; utility to convert the</source>
          <target state="translated">por defecto. Los informes legibles por humanos se pueden generar desde aqu&amp;iacute; utilizando los programas &lt;code&gt;nytprofhtml&lt;/code&gt; (salida HTML) y &lt;code&gt;nytprofcsv&lt;/code&gt; (salida CSV) suministrados . Hemos utilizado la utilidad &lt;code&gt;html2text&lt;/code&gt; del sistema Unix para convertir el</target>
        </trans-unit>
        <trans-unit id="0869a111f636cdf936dab450ab2b6d19f6144956" translate="yes" xml:space="preserve">
          <source>by doing something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d6fc20656e3c76019aabc723d52e70642bd78d" translate="yes" xml:space="preserve">
          <source>by endianness</source>
          <target state="translated">por la tutela</target>
        </trans-unit>
        <trans-unit id="b98507aaeb9a1c77075f94408b252b18efe599de" translate="yes" xml:space="preserve">
          <source>by just using the name of the program).</source>
          <target state="translated">con sólo usar el nombre del programa).</target>
        </trans-unit>
        <trans-unit id="2c5bb516b1987dabf813c98e4515eda07d81aaa5" translate="yes" xml:space="preserve">
          <source>by name</source>
          <target state="translated">por nombre</target>
        </trans-unit>
        <trans-unit id="5e3f04f999831235b9b402a22b7e7de4ce80d90f" translate="yes" xml:space="preserve">
          <source>by size</source>
          <target state="translated">por tamaño</target>
        </trans-unit>
        <trans-unit id="d5d90792858f3b6ce0d3e628c5cd82bf536aa2e2" translate="yes" xml:space="preserve">
          <source>by the DynaLoader when the shared object is loaded. See BSLOADLIBS below.</source>
          <target state="translated">por el DynaLoader cuando el objeto compartido se carga.Ver BSLOADLIBS más abajo.</target>
        </trans-unit>
        <trans-unit id="ac25d943ca16593ccd5b638578371920d418f826" translate="yes" xml:space="preserve">
          <source>by the Perl interpreter itself.</source>
          <target state="translated">por el propio intérprete de Perl.</target>
        </trans-unit>
        <trans-unit id="c2a3a0641c2dba021dc10a286962de22e15df633" translate="yes" xml:space="preserve">
          <source>by the Perl interpreter itself. This attribute's default value is &lt;b&gt;TRUE&lt;/b&gt;. If you want to search only specific directories, set $self-&amp;gt;inc(0) before calling $inc-&amp;gt;survey or $inc-&amp;gt;find.</source>
          <target state="translated">por el propio int&amp;eacute;rprete de Perl. El valor predeterminado de este atributo es &lt;b&gt;VERDADERO&lt;/b&gt; . Si desea buscar solo directorios espec&amp;iacute;ficos, configure $ self-&amp;gt; inc (0) antes de llamar a $ inc-&amp;gt; survey o $ inc-&amp;gt; find.</target>
        </trans-unit>
        <trans-unit id="1899511ea754deb578535a8d92e9165fcbc88e82" translate="yes" xml:space="preserve">
          <source>by the ld command when the perl binary is linked with the extension library. See EXTRALIBS below.</source>
          <target state="translated">por el comando ld cuando el binario de perl se enlaza con la biblioteca de extensiones.Ver EXTRALIBS más abajo.</target>
        </trans-unit>
        <trans-unit id="b5f079545f5d4621415bdb75f7dcd595e58fae02" translate="yes" xml:space="preserve">
          <source>by the ld command when the shared object is built/linked. See LDLOADLIBS below.</source>
          <target state="translated">por el comando ID cuando el objeto compartido se construye/enlaza.Ver LDLOADLIBS más abajo.</target>
        </trans-unit>
        <trans-unit id="7b420b941a02cf1568114573e2381fb3ec4ef20a" translate="yes" xml:space="preserve">
          <source>by the main thread (thread ID = 0) of a script. Therefore, setting up signal handlers in threads for purposes other than &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;&quot;THREAD SIGNALLING&quot;&lt;/a&gt; as documented above will not accomplish what is intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb53580843b764dd08d059a4ffde7b32707736ab" translate="yes" xml:space="preserve">
          <source>by the main thread (thread ID = 0) of a script. Therefore, setting up signal handlers in threads for purposes other than &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING&lt;/a&gt; as documented above will not accomplish what is intended.</source>
          <target state="translated">por el hilo principal (ID de hilo = 0) de un script. Por lo tanto, la configuraci&amp;oacute;n de manejadores de se&amp;ntilde;ales en subprocesos para fines distintos a la &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;SE&amp;Ntilde;ALIZACI&amp;Oacute;N DE HILO,&lt;/a&gt; como se documenta anteriormente, no lograr&amp;aacute; lo que se pretende.</target>
        </trans-unit>
        <trans-unit id="08b3b402ddb7fb46a261bf00b77d547af5513e6c" translate="yes" xml:space="preserve">
          <source>by their very definition. It is of course possible to write a nearly instantaneous program, but it's not going to do very much, here's a very efficient one:</source>
          <target state="translated">por su propia definición.Por supuesto,es posible escribir un programa casi instantáneo,pero no va a hacer mucho,aquí hay uno muy eficiente:</target>
        </trans-unit>
        <trans-unit id="cd5f3427a5b91cc9194daa4a03c9e849e100f09d" translate="yes" xml:space="preserve">
          <source>by this:</source>
          <target state="translated">por esto:</target>
        </trans-unit>
        <trans-unit id="90078d2f7170e62d296450a6cf5226698468ce9b" translate="yes" xml:space="preserve">
          <source>by using calls like this one;</source>
          <target state="translated">usando llamadas como esta;</target>
        </trans-unit>
        <trans-unit id="cda65ed6f996204ff01e4d76e80bf0eb135783c9" translate="yes" xml:space="preserve">
          <source>by-category</source>
          <target state="translated">by-category</target>
        </trans-unit>
        <trans-unit id="52d31c8a6d5578bdb0ba6c7bacaa72d3064e7f98" translate="yes" xml:space="preserve">
          <source>by-module</source>
          <target state="translated">by-module</target>
        </trans-unit>
        <trans-unit id="8cf1783fa99f62ca581f6fe8f3cd66b0f9ab9fc3" translate="yes" xml:space="preserve">
          <source>byte</source>
          <target state="translated">byte</target>
        </trans-unit>
        <trans-unit id="721b9babe5628970cc09024b3a1a9b932d9e0924" translate="yes" xml:space="preserve">
          <source>byte order marks</source>
          <target state="translated">marcas de orden de bytes</target>
        </trans-unit>
        <trans-unit id="f0a787a9f181c667c66e67359a5c84c3f31a86d0" translate="yes" xml:space="preserve">
          <source>bytecode</source>
          <target state="translated">bytecode</target>
        </trans-unit>
        <trans-unit id="beb025390e6b44933a6bf16e1bc9c499925f957e" translate="yes" xml:space="preserve">
          <source>byteorder.U</source>
          <target state="translated">byteorder.U</target>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="translated">bytes</target>
        </trans-unit>
        <trans-unit id="704a9eedbf658e779eedc2c2e635afc1745b9587" translate="yes" xml:space="preserve">
          <source>bytes - Perl pragma to expose the individual bytes of characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305428c11e612a57e6dca43980d6a15186d3eedd" translate="yes" xml:space="preserve">
          <source>bytes - Perl pragma to force byte semantics rather than character semantics</source>
          <target state="translated">bytes-pragmatismo de Perl para forzar la semántica de los bytes en lugar de la semántica de los caracteres</target>
        </trans-unit>
        <trans-unit id="74e04eb86371917242f5f42e7825ff63f37fa8b7" translate="yes" xml:space="preserve">
          <source>bytes of data from</source>
          <target state="translated">bytes de datos de</target>
        </trans-unit>
        <trans-unit id="a6a3035438f8082d9bbe01b48538b14cd1cebf95" translate="yes" xml:space="preserve">
          <source>bytes of data into</source>
          <target state="translated">bytes de datos en</target>
        </trans-unit>
        <trans-unit id="d285f82774e0d86e76e8e37aedf166837530e229" translate="yes" xml:space="preserve">
          <source>bytes of the character. The UTF8 flag is turned off. Returns nothing.</source>
          <target state="translated">bytes del personaje.La bandera UTF8 está apagada.No devuelve nada.</target>
        </trans-unit>
        <trans-unit id="a8d7a1f72563dfcee3b9751f0008a7ef3b69a283" translate="yes" xml:space="preserve">
          <source>bytes::substr() does not work as an lvalue().</source>
          <target state="translated">bytes::substr()no funciona como un valor l().</target>
        </trans-unit>
        <trans-unit id="f937c564cb36928d98113040f718bc6dd5d3ca0b" translate="yes" xml:space="preserve">
          <source>bytes_cmp_utf8</source>
          <target state="translated">bytes_cmp_utf8</target>
        </trans-unit>
        <trans-unit id="03e7ed3ca3790aecfc45563afee0cb2ff5bd7a7f" translate="yes" xml:space="preserve">
          <source>bytes_from_utf8</source>
          <target state="translated">bytes_from_utf8</target>
        </trans-unit>
        <trans-unit id="5b3e650260dc94f6fb70b63ba8bfd7647d736688" translate="yes" xml:space="preserve">
          <source>bytes_read ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192879142f96e8cb16867dcd093a7b74a3469850" translate="yes" xml:space="preserve">
          <source>bytes_to_utf8</source>
          <target state="translated">bytes_to_utf8</target>
        </trans-unit>
        <trans-unit id="84e0021d4ef7f34f6245f64e5b4fd6ad47f36e1e" translate="yes" xml:space="preserve">
          <source>bzero()</source>
          <target state="translated">bzero()</target>
        </trans-unit>
        <trans-unit id="18966dcea477ed087e87037c4255cd180be7d19e" translate="yes" xml:space="preserve">
          <source>bzip2</source>
          <target state="translated">bzip2</target>
        </trans-unit>
        <trans-unit id="8dddd252e4acf3054b159272da897404d0ef9a10" translate="yes" xml:space="preserve">
          <source>bzip2 $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">bzip2 $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="fd1b715eedecae251e0ef96fd721ea1904207f3b" translate="yes" xml:space="preserve">
          <source>c [line|sub]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf518bb1d83f8f8b94f6a75e535c0324b999e9e" translate="yes" xml:space="preserve">
          <source>c2ph</source>
          <target state="translated">c2ph</target>
        </trans-unit>
        <trans-unit id="aab64cc4582b2a7ac50ea4d29f8baf504eb3ffd7" translate="yes" xml:space="preserve">
          <source>c2ph, pstruct - Dump C structures as generated from &lt;code&gt;cc -g -S&lt;/code&gt; stabs</source>
          <target state="translated">c2ph, pstruct - Dump C estructuras generadas a partir de &lt;code&gt;cc -g -S&lt;/code&gt; stabs</target>
        </trans-unit>
        <trans-unit id="16b4ae8ef0e46ee8dd3b2cbaefcb0f61f3bb0863" translate="yes" xml:space="preserve">
          <source>cBOOL</source>
          <target state="translated">cBOOL</target>
        </trans-unit>
        <trans-unit id="ed059a6df813b519fdb6d15158f569b8baa86ab5" translate="yes" xml:space="preserve">
          <source>c_o (o)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd027e134354087b398512762bc4fd137c292919" translate="yes" xml:space="preserve">
          <source>c_o (override)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="translated">cache</target>
        </trans-unit>
        <trans-unit id="4d2e4f51a884a410929c5ee17aaacc9fab869689" translate="yes" xml:space="preserve">
          <source>cache_metadata</source>
          <target state="translated">cache_metadata</target>
        </trans-unit>
        <trans-unit id="d85b8f213b4403a79accd9308a80dbb19a384193" translate="yes" xml:space="preserve">
          <source>cachedir</source>
          <target state="translated">cachedir</target>
        </trans-unit>
        <trans-unit id="3bd773e86fd5c86c7cdc6f0cd2327b9dc2862c38" translate="yes" xml:space="preserve">
          <source>cacheout EXPR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6318679b9ed5ee78a1c37484d918ff77ac07ef" translate="yes" xml:space="preserve">
          <source>cacheout MODE, EXPR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecce20b9ec4855087467bfaecc68195be1813592" translate="yes" xml:space="preserve">
          <source>caches, one for scalar values and one for list values. When your function is called in scalar context, its return value is cached in one hash, and when your function is called in list context, its value is cached in the other hash. You can control the caching behavior of both contexts independently with these options.</source>
          <target state="translated">caches,uno para valores escalares y otro para valores de lista.Cuando su función se llama en contexto escalar,su valor de retorno se almacena en un hash,y cuando su función se llama en contexto de lista,su valor se almacena en el otro hash.Puede controlar el comportamiento de almacenamiento en caché de ambos contextos de forma independiente con estas opciones.</target>
        </trans-unit>
        <trans-unit id="10bf64fff8ad28b9eceb40ae05ccd8d500f3edce" translate="yes" xml:space="preserve">
          <source>calcrpn VARIABLE { EXPRESSION }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6066fec73bb15293850c8fc3846983a936a7356a" translate="yes" xml:space="preserve">
          <source>calculated</source>
          <target state="translated">calculated</target>
        </trans-unit>
        <trans-unit id="0d68cbf5b8fc5792e2b012765c8d99152d921657" translate="yes" xml:space="preserve">
          <source>calculator indeed.</source>
          <target state="translated">calculadora de hecho.</target>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="translated">call</target>
        </trans-unit>
        <trans-unit id="d26793c374d42f2321b52b9ab8c04fd33c02f47c" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;iota&lt;/code&gt; in scalar context and cache the result, but the &lt;code&gt;SCALAR_CACHE =&amp;gt; 'MERGE'&lt;/code&gt; option says not to do that, but to use the cache list-context value instead. But it cannot return a list of seven elements in a scalar context. In this case &lt;code&gt;$i7&lt;/code&gt; will receive the &lt;b&gt;first element&lt;/b&gt; of the cached list value, namely 7.</source>
          <target state="translated">llamar a &lt;code&gt;iota&lt;/code&gt; en contexto escalar y almacenar en cach&amp;eacute; el resultado, pero la &lt;code&gt;SCALAR_CACHE =&amp;gt; 'MERGE'&lt;/code&gt; dice que no haga eso, sino que use el valor de contexto de lista de cach&amp;eacute; en su lugar. Pero no puede devolver una lista de siete elementos en un contexto escalar. En este caso, &lt;code&gt;$i7&lt;/code&gt; recibir&amp;aacute; el &lt;b&gt;primer elemento&lt;/b&gt; del valor de la lista en cach&amp;eacute;, a saber, 7.</target>
        </trans-unit>
        <trans-unit id="aea66ab9134e8035b60e502b44c9255902019bb8" translate="yes" xml:space="preserve">
          <source>call a method without void context. Use &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt; instead if you need to be able to disable autodying/Fatal behaviour for a small block of code.</source>
          <target state="translated">llamar a un m&amp;eacute;todo sin contexto vac&amp;iacute;o. Use &lt;a href=&quot;autodie&quot;&gt;autodie&lt;/a&gt; en su lugar si necesita poder deshabilitar el comportamiento autodie / fatal para un peque&amp;ntilde;o bloque de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="a35b8b477980036b6f41e918ae640a3c562367e0" translate="yes" xml:space="preserve">
          <source>call an overridden &lt;code&gt;isa&lt;/code&gt; method in any class. Instead, use &lt;code&gt;reftype&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt; for the first case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ee532dfc7a5c9512fdcf2b4ab1a03d4a1d1bd8" translate="yes" xml:space="preserve">
          <source>call an overridden &lt;code&gt;isa&lt;/code&gt; method in any class. Instead, use &lt;code&gt;reftype&lt;/code&gt; from &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt; for the first case:</source>
          <target state="translated">llamar a un m&amp;eacute;todo &lt;code&gt;isa&lt;/code&gt; anulado en cualquier clase. En su lugar, use &lt;code&gt;reftype&lt;/code&gt; de &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; para el primer caso:</target>
        </trans-unit>
        <trans-unit id="75de3cdc4f7d6eeec6a5710a33b9b4b76a965466" translate="yes" xml:space="preserve">
          <source>call by reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaf4cc023dc61b8a07f4a1a444503dad24b7c33" translate="yes" xml:space="preserve">
          <source>call by value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a301a28fa31b59f5762db2f0e4dae07ecf49b7f" translate="yes" xml:space="preserve">
          <source>call in call_Subtract reads:</source>
          <target state="translated">La llamada en call_Subtract se lee:</target>
        </trans-unit>
        <trans-unit id="09af65b77373b270115d65e0cc4152963620d518" translate="yes" xml:space="preserve">
          <source>call them indirectly:</source>
          <target state="translated">los llaman indirectamente:</target>
        </trans-unit>
        <trans-unit id="bea45b65dbd679ba81c088f23290abf3a9afb91e" translate="yes" xml:space="preserve">
          <source>call to &lt;code&gt;filter_read&lt;/code&gt; or &lt;code&gt;filter_read_exact&lt;/code&gt; .</source>
          <target state="translated">llamar a &lt;code&gt;filter_read&lt;/code&gt; o &lt;code&gt;filter_read_exact&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65e4aaaab79c0d55c17e54353edfbb0030f9345a" translate="yes" xml:space="preserve">
          <source>call to &lt;code&gt;filter_read&lt;/code&gt; or &lt;code&gt;filter_read_exact&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c949d2de33459ca2d9973d9bf5448c9e6bdb1f6" translate="yes" xml:space="preserve">
          <source>call-back unit so that long doubles can be formatted without loss of precision.</source>
          <target state="translated">unidad de llamada de vuelta para que los dobles largos puedan ser formateados sin pérdida de precisión.</target>
        </trans-unit>
        <trans-unit id="01eeb3a3ce36a45d2ed8b640d6a38cc855a0aea9" translate="yes" xml:space="preserve">
          <source>call.</source>
          <target state="translated">call.</target>
        </trans-unit>
        <trans-unit id="a0a7cf13bc05b8452a04f1e2d381330099f264f0" translate="yes" xml:space="preserve">
          <source>call. For example:</source>
          <target state="translated">llamada.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fa4e53e51ebd0d0df17edd40ee676dc6179cfe87" translate="yes" xml:space="preserve">
          <source>call_*</source>
          <target state="translated">call_*</target>
        </trans-unit>
        <trans-unit id="5558c19f08af12e8462cd902d73078dd2305080f" translate="yes" xml:space="preserve">
          <source>call_AddSubScalar</source>
          <target state="translated">call_AddSubScalar</target>
        </trans-unit>
        <trans-unit id="90ff1a8ade713598c1646d49e8bd8e0ab53cf48c" translate="yes" xml:space="preserve">
          <source>call_AddSubtract</source>
          <target state="translated">call_AddSubtract</target>
        </trans-unit>
        <trans-unit id="2854630a13713d11a8b6885e7f79056447c62688" translate="yes" xml:space="preserve">
          <source>call_LeftString</source>
          <target state="translated">call_LeftString</target>
        </trans-unit>
        <trans-unit id="18631234b2a7bd26d823fa54e3df7188c8e989c8" translate="yes" xml:space="preserve">
          <source>call_Subtract</source>
          <target state="translated">call_Subtract</target>
        </trans-unit>
        <trans-unit id="d4a0b92fad95fc628341a5a87ec98cabb9a02a7d" translate="yes" xml:space="preserve">
          <source>call_argv</source>
          <target state="translated">call_argv</target>
        </trans-unit>
        <trans-unit id="b86ca5a7c01a8263e69196692db525f9c3e43f10" translate="yes" xml:space="preserve">
          <source>call_atexit</source>
          <target state="translated">call_atexit</target>
        </trans-unit>
        <trans-unit id="d3dedbd48597465617b49ff3add69e35b2273df4" translate="yes" xml:space="preserve">
          <source>call_list</source>
          <target state="translated">call_list</target>
        </trans-unit>
        <trans-unit id="6f635f2379199699013477fde9934d1b25b2ed69" translate="yes" xml:space="preserve">
          <source>call_method</source>
          <target state="translated">call_method</target>
        </trans-unit>
        <trans-unit id="c9b67be4160b43f537f38ed300d8d7d67ad56af8" translate="yes" xml:space="preserve">
          <source>call_pv</source>
          <target state="translated">call_pv</target>
        </trans-unit>
        <trans-unit id="8cecf04d9c1fddec48927de0af20f7d816c7d167" translate="yes" xml:space="preserve">
          <source>call_sv</source>
          <target state="translated">call_sv</target>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="translated">callback</target>
        </trans-unit>
        <trans-unit id="4e8127df1a4b3dbfb5b327173cfb08b8676ac454" translate="yes" xml:space="preserve">
          <source>callbacks</source>
          <target state="translated">callbacks</target>
        </trans-unit>
        <trans-unit id="970eeb47b2d091dc3fee38f7ecd0e8ec3352f34f" translate="yes" xml:space="preserve">
          <source>called</source>
          <target state="translated">called</target>
        </trans-unit>
        <trans-unit id="5b73d33ca4d0ef4a3df6b67b837e769d4cb0af6e" translate="yes" xml:space="preserve">
          <source>called &lt;code&gt;$some_pack::secret_version&lt;/code&gt; or anything; it's just $secret_version, unqualified and unqualifiable.</source>
          <target state="translated">llamado &lt;code&gt;$some_pack::secret_version&lt;/code&gt; o cualquier cosa; es solo $ secret_version, no calificado y no calificado.</target>
        </trans-unit>
        <trans-unit id="1fb8b294c8dd06c5ddbfda59a1996397e5dff5ee" translate="yes" xml:space="preserve">
          <source>called for &lt;code&gt;=pod&lt;/code&gt; paragraphs.</source>
          <target state="translated">llamado para &lt;code&gt;=pod&lt;/code&gt; p&amp;aacute;rrafos de la vaina .</target>
        </trans-unit>
        <trans-unit id="4dca004e14e54a193da4bef6ddcce901570f9219" translate="yes" xml:space="preserve">
          <source>called immediately, and if Perl is using the system's &lt;code&gt;stdio&lt;/code&gt; library that library may restart the &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; without returning to Perl to give it a chance to call the %SIG handler. If this happens on your system the solution is to use the &lt;code&gt;:perlio&lt;/code&gt; layer to do IO--at least on those handles that you want to be able to break into with signals. (The &lt;code&gt;:perlio&lt;/code&gt; layer checks the signal flags and calls %SIG handlers before resuming IO operation.)</source>
          <target state="translated">llamado inmediatamente, y si Perl est&amp;aacute; usando la biblioteca &lt;code&gt;stdio&lt;/code&gt; del sistema, esa biblioteca puede reiniciar la &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; sin regresar a Perl para darle la oportunidad de llamar al controlador% SIG. Si esto sucede en su sistema, la soluci&amp;oacute;n es usar la capa &lt;code&gt;:perlio&lt;/code&gt; para hacer IO, al menos en aquellos identificadores en los que desea poder ingresar con se&amp;ntilde;ales. (La capa &lt;code&gt;:perlio&lt;/code&gt; comprueba los indicadores de se&amp;ntilde;al y llama a los controladores% SIG antes de reanudar la operaci&amp;oacute;n de E / S).</target>
        </trans-unit>
        <trans-unit id="567f34b564f06580ebd9b48b199dfcf6a3094212" translate="yes" xml:space="preserve">
          <source>called immediately, and if Perl is using the system's &lt;code&gt;stdio&lt;/code&gt; library that library may restart the &lt;code&gt;read&lt;/code&gt; without returning to Perl to give it a chance to call the %SIG handler. If this happens on your system the solution is to use the &lt;code&gt;:perlio&lt;/code&gt; layer to do IO--at least on those handles that you want to be able to break into with signals. (The &lt;code&gt;:perlio&lt;/code&gt; layer checks the signal flags and calls %SIG handlers before resuming IO operation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dc69de2a1e6087529f02b62fd2888c90d741d3" translate="yes" xml:space="preserve">
          <source>caller</source>
          <target state="translated">caller</target>
        </trans-unit>
        <trans-unit id="a5f0d61e9b1c1b14054070cd5efad882cc10c593" translate="yes" xml:space="preserve">
          <source>caller EXPR</source>
          <target state="translated">Llamada EXPR</target>
        </trans-unit>
        <trans-unit id="7aba60747c4150b59b47e08abdd47c33cc7a6995" translate="yes" xml:space="preserve">
          <source>caller's scope</source>
          <target state="translated">alcance de la llamada</target>
        </trans-unit>
        <trans-unit id="3ed7d1b856121d61369245edc58343a8a3706cee" translate="yes" xml:space="preserve">
          <source>caller_cx</source>
          <target state="translated">caller_cx</target>
        </trans-unit>
        <trans-unit id="d98fd2afc75d1c2e5e5747cc1f883a2419a27b8d" translate="yes" xml:space="preserve">
          <source>calling &lt;code&gt;CX_POP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31614a7ba28b398fab5be5b1f0abace81483c66" translate="yes" xml:space="preserve">
          <source>calling pod2usage, Pod::Usage will fail even on robust platforms. Don't do that. Or use &lt;a href=&quot;../findbin&quot;&gt;FindBin&lt;/a&gt; to locate the script:</source>
          <target state="translated">al llamar a pod2usage, Pod :: Usage fallar&amp;aacute; incluso en plataformas robustas. No hagas eso. O use &lt;a href=&quot;../findbin&quot;&gt;FindBin&lt;/a&gt; para ubicar el script:</target>
        </trans-unit>
        <trans-unit id="3748b809994db82e1012a20918e083abe4806a36" translate="yes" xml:space="preserve">
          <source>calling pod2usage, Pod::Usage will fail even on robust platforms. Don't do that. Or use &lt;a href=&quot;findbin&quot;&gt;FindBin&lt;/a&gt; to locate the script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6364ba311876adcb810e8ac5a5c3d73f55fa43" translate="yes" xml:space="preserve">
          <source>calloc</source>
          <target state="translated">calloc</target>
        </trans-unit>
        <trans-unit id="51b6cb253fc406fc1b9780eaa1fb645eb82e631d" translate="yes" xml:space="preserve">
          <source>calls</source>
          <target state="translated">calls</target>
        </trans-unit>
        <trans-unit id="4a782bf6f0127a0ab6a9b55b344eb864af06d6d9" translate="yes" xml:space="preserve">
          <source>calls &amp;amp;{&quot;${module}::bootstrap&quot;} to bootstrap the module (actually it uses the function reference returned by dl_install_xsub for speed)</source>
          <target state="translated">llama a &amp;amp; {&quot;$ {module} :: bootstrap&quot;} para arrancar el m&amp;oacute;dulo (en realidad, usa la referencia de funci&amp;oacute;n devuelta por dl_install_xsub para la velocidad)</target>
        </trans-unit>
        <trans-unit id="8068c49fd178ebbbb1181c7892ff798980347f20" translate="yes" xml:space="preserve">
          <source>calls (e.g., using &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; or back-ticks) made from threads use the environment variable settings from the</source>
          <target state="translated">Las llamadas (por ejemplo, usando &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; o back-ticks) hechas a partir de subprocesos usan la configuraci&amp;oacute;n de la variable de entorno de la</target>
        </trans-unit>
        <trans-unit id="e83aed67789fc3b96f90b751136395ce2ef41d6b" translate="yes" xml:space="preserve">
          <source>calls (e.g., using &lt;code&gt;system()&lt;/code&gt; or back-ticks) made from threads use the environment variable settings from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23927d0aa967922575276101593ab186ac76a894" translate="yes" xml:space="preserve">
          <source>calls dl_find_symbol() for &quot;boot_$module&quot;</source>
          <target state="translated">llama a dl_find_symbol()para &quot;boot_$module&quot;</target>
        </trans-unit>
        <trans-unit id="df5598c9096a42a3629f35c7aa2f39e91fa80505" translate="yes" xml:space="preserve">
          <source>calls dl_install_xsub() to install it as &quot;${module}::bootstrap&quot;</source>
          <target state="translated">llama a dl_install_xsub()para instalarlo como &quot;${module}::bootstrap&quot;</target>
        </trans-unit>
        <trans-unit id="eeddbfb4bab615284264705345a27ee10700ba4b" translate="yes" xml:space="preserve">
          <source>calls dl_load_file() to load the file</source>
          <target state="translated">llama a dl_load_file()para cargar el archivo</target>
        </trans-unit>
        <trans-unit id="60dd082e722533c84eb7e433f3fa4582d921f83b" translate="yes" xml:space="preserve">
          <source>calls dl_load_flags() to determine how to load the file.</source>
          <target state="translated">llama a dl_load_flags()para determinar cómo cargar el archivo.</target>
        </trans-unit>
        <trans-unit id="c1e90b552179a525781d61e90b26ebd803e604f3" translate="yes" xml:space="preserve">
          <source>calls dl_undef_symbols() and warns if any symbols are undefined</source>
          <target state="translated">llama a dl_undef_symbols()y advierte si algún símbolo está indefinido</target>
        </trans-unit>
        <trans-unit id="03b5ee56e23671d3878c7bc1765e42ba79aa3e0b" translate="yes" xml:space="preserve">
          <source>calls like the following</source>
          <target state="translated">llamadas como las siguientes</target>
        </trans-unit>
        <trans-unit id="f02e2d24dc9d64bcb7041c2fc782098c29ed69dd" translate="yes" xml:space="preserve">
          <source>calls made by that thread.</source>
          <target state="translated">llamadas hechas por ese hilo.</target>
        </trans-unit>
        <trans-unit id="2dcbf5bd7246d954454bd3f3804dead54471c5e2" translate="yes" xml:space="preserve">
          <source>calls the Perl subroutine specified by the C string stored in the &lt;code&gt;subname&lt;/code&gt; parameter. It also takes the usual &lt;code&gt;flags&lt;/code&gt; parameter. The final parameter, &lt;code&gt;argv&lt;/code&gt; , consists of a NULL-terminated list of C strings to be passed as parameters to the Perl subroutine. See</source>
          <target state="translated">llama a la subrutina Perl especificada por la cadena C almacenada en el par&amp;aacute;metro de &lt;code&gt;subname&lt;/code&gt; . Tambi&amp;eacute;n toma el par&amp;aacute;metro de &lt;code&gt;flags&lt;/code&gt; habitual . El par&amp;aacute;metro final, &lt;code&gt;argv&lt;/code&gt; , consiste en una lista terminada en NULL de cadenas C que se pasar&amp;aacute;n como par&amp;aacute;metros a la subrutina Perl. Ver</target>
        </trans-unit>
        <trans-unit id="733d70ba4dcf7a96d02346548b017098743dd710" translate="yes" xml:space="preserve">
          <source>calls the Perl subroutine specified by the C string stored in the &lt;code&gt;subname&lt;/code&gt; parameter. It also takes the usual &lt;code&gt;flags&lt;/code&gt; parameter. The final parameter, &lt;code&gt;argv&lt;/code&gt;, consists of a NULL-terminated list of C strings to be passed as parameters to the Perl subroutine. See &lt;a href=&quot;#Using-call_argv&quot;&gt;&quot;Using call_argv&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5b12037f7721d936298a1dbbb871e6381c2da1" translate="yes" xml:space="preserve">
          <source>camel_flea</source>
          <target state="translated">camel_flea</target>
        </trans-unit>
        <trans-unit id="7e9219a0599eae1d9601883f894b4fbe60870586" translate="yes" xml:space="preserve">
          <source>can</source>
          <target state="translated">can</target>
        </trans-unit>
        <trans-unit id="699d91f476fc57b066fa45249291eed227b9fc79" translate="yes" xml:space="preserve">
          <source>can also be &lt;code&gt;I&lt;/code&gt; which is the same as &lt;code&gt;C&lt;/code&gt; but is a special case for dotted uppercase I and dotless lowercase i:</source>
          <target state="translated">tambi&amp;eacute;n puede ser &lt;code&gt;I&lt;/code&gt; , que es lo mismo que &lt;code&gt;C&lt;/code&gt; , pero es un caso especial para la I may&amp;uacute;scula con puntos y la i min&amp;uacute;scula sin puntos:</target>
        </trans-unit>
        <trans-unit id="e4fb56cea3d4b5b887c8b15f28fd462013d373d9" translate="yes" xml:space="preserve">
          <source>can be &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt; to specify that the option is list or a hash valued. This is only needed when the destination for the option value is not otherwise specified. It should be omitted when not needed.</source>
          <target state="translated">puede ser &lt;code&gt;@&lt;/code&gt; o &lt;code&gt;%&lt;/code&gt; para especificar que la opci&amp;oacute;n es lista o un valor hash. Esto solo es necesario cuando el destino del valor de la opci&amp;oacute;n no se especifica de otro modo. Debe omitirse cuando no sea necesario.</target>
        </trans-unit>
        <trans-unit id="b6cda2d35a3885df30bda9a688568f274c6b3e94" translate="yes" xml:space="preserve">
          <source>can be any combination of &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'aa'&lt;/code&gt;, &lt;code&gt;'d'&lt;/code&gt;, &lt;code&gt;'i'&lt;/code&gt;, &lt;code&gt;'l'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, &lt;code&gt;'n'&lt;/code&gt;, &lt;code&gt;'p'&lt;/code&gt;, &lt;code&gt;'s'&lt;/code&gt;, &lt;code&gt;'u'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, and/or &lt;code&gt;'xx'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b476e0c0907463a17bc1306e027e47233cc399" translate="yes" xml:space="preserve">
          <source>can be any expression that evaluates to a name accepted by &lt;code&gt;\N{...}&lt;/code&gt; under the &lt;a href=&quot;#DESCRIPTION&quot;&gt;:full option&lt;/a&gt; to &lt;code&gt;charnames&lt;/code&gt; . In addition, any other options for the controlling &lt;code&gt;&quot;use charnames&quot;&lt;/code&gt; in the same scope apply, like &lt;code&gt;:loose&lt;/code&gt; or any &lt;a href=&quot;#DESCRIPTION&quot;&gt;script list, :short option&lt;/a&gt;, or &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;custom aliases&lt;/a&gt; you may have defined.</source>
          <target state="translated">puede ser cualquier expresi&amp;oacute;n que se eval&amp;uacute;e como un nombre aceptado por &lt;code&gt;\N{...}&lt;/code&gt; en la &lt;a href=&quot;#DESCRIPTION&quot;&gt;opci&amp;oacute;n: full&lt;/a&gt; para &lt;code&gt;charnames&lt;/code&gt; de caracteres . Adem&amp;aacute;s, se aplica cualquier otra opci&amp;oacute;n para controlar &lt;code&gt;&quot;use charnames&quot;&lt;/code&gt; en el mismo &amp;aacute;mbito, como &lt;code&gt;:loose&lt;/code&gt; o cualquier &lt;a href=&quot;#DESCRIPTION&quot;&gt;lista de secuencias de comandos &lt;/a&gt;,: opci&amp;oacute;n corta o &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;alias personalizados&lt;/a&gt; que haya definido.</target>
        </trans-unit>
        <trans-unit id="8207bfa2f86eef13b5e02a5d9219333c3795e5f4" translate="yes" xml:space="preserve">
          <source>can be any expression that evaluates to a name accepted by &lt;code&gt;\N{...}&lt;/code&gt; under the &lt;a href=&quot;#DESCRIPTION&quot;&gt;&lt;code&gt;:full&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;charnames&lt;/code&gt;. In addition, any other options for the controlling &lt;code&gt;&quot;use charnames&quot;&lt;/code&gt; in the same scope apply, like &lt;code&gt;:loose&lt;/code&gt; or any &lt;a href=&quot;#DESCRIPTION&quot;&gt;script list, &lt;code&gt;:short&lt;/code&gt; option&lt;/a&gt;, or &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;custom aliases&lt;/a&gt; you may have defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b34e29f857c70f78af80d100b29730e6cdc1149" translate="yes" xml:space="preserve">
          <source>can be any value which is valid as an assignment to an element of &lt;code&gt;%SIG&lt;/code&gt; . See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for examples of handler functions.</source>
          <target state="translated">puede ser cualquier valor v&amp;aacute;lido como asignaci&amp;oacute;n a un elemento de &lt;code&gt;%SIG&lt;/code&gt; . Consulte &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; para ver ejemplos de funciones de controlador.</target>
        </trans-unit>
        <trans-unit id="60cf43db09eb171fc68adc4b27dc80a73ec633fc" translate="yes" xml:space="preserve">
          <source>can be any value which is valid as an assignment to an element of &lt;code&gt;%SIG&lt;/code&gt;. See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for examples of handler functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461c0b19fe19c96b45408c038271b2fb35f66553" translate="yes" xml:space="preserve">
          <source>can be compressed with &lt;code&gt;/c:max&lt;/code&gt; (the bug only appears when there is a fixup in the last 6 bytes of a page (?); since the tiny executables are much smaller than a page, the bug will not hit). Do not compress &lt;code&gt;perl_.exe&lt;/code&gt; - it would not work under DOS.</source>
          <target state="translated">se puede comprimir con &lt;code&gt;/c:max&lt;/code&gt; (el error solo aparece cuando hay una correcci&amp;oacute;n en los &amp;uacute;ltimos 6 bytes de una p&amp;aacute;gina (?); dado que los peque&amp;ntilde;os ejecutables son mucho m&amp;aacute;s peque&amp;ntilde;os que una p&amp;aacute;gina, el error no se producir&amp;aacute;). No comprima &lt;code&gt;perl_.exe&lt;/code&gt; ; no funcionar&amp;iacute;a en DOS.</target>
        </trans-unit>
        <trans-unit id="446662c59650e49f63dcfb6d7d27d374899b2abe" translate="yes" xml:space="preserve">
          <source>can be constructed using &lt;code&gt;pod2latex&lt;/code&gt; .</source>
          <target state="translated">se puede construir usando &lt;code&gt;pod2latex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c098826fe346971c1bf153f18ba6624f6c2f2531" translate="yes" xml:space="preserve">
          <source>can be constructed using &lt;code&gt;pod2latex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce1fab0a60d1b9694716d9d022c1765f4978b16" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;&quot;Defining Aliases&quot;&lt;/a&gt;. For CHECK, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;&quot;Handling Malformed Data&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb09ee0719d48bbcaac94dec85ce8d07308135f2" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;&quot;Defining Aliases&quot;&lt;/a&gt;; for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794d8b0a9b686ba34ee696408ef6df66c3a413de" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;Defining Aliases&lt;/a&gt;. For CHECK, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Handling Malformed Data&lt;/a&gt;.</source>
          <target state="translated">puede ser un nombre can&amp;oacute;nico o un alias. Para codificar nombres y alias, consulte &lt;a href=&quot;#Defining-Aliases&quot;&gt;Definici&amp;oacute;n de alias&lt;/a&gt; . Para COMPROBAR, consulte &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Manejo de datos con formato incorrecto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8fd5395b7f9e578475974e9b86e078fb0ec61ac4" translate="yes" xml:space="preserve">
          <source>can be either a canonical name or an alias. For encoding names and aliases, see &lt;a href=&quot;#Defining-Aliases&quot;&gt;Defining Aliases&lt;/a&gt;; for</source>
          <target state="translated">puede ser un nombre can&amp;oacute;nico o un alias. Para codificar nombres y alias, consulte &lt;a href=&quot;#Defining-Aliases&quot;&gt;Definici&amp;oacute;n de alias&lt;/a&gt; ; para</target>
        </trans-unit>
        <trans-unit id="e77ae9195619436cf623136bc0de83a787a047da" translate="yes" xml:space="preserve">
          <source>can be misparsed by pre-5.10.0 Perls as a non-terminated search pattern.</source>
          <target state="translated">puede ser mal interpretado por los Perls anteriores a 5.10.0 como un patrón de búsqueda no terminado.</target>
        </trans-unit>
        <trans-unit id="102e5cd9960ccd33f4c8886eae28cc9c5d186cd5" translate="yes" xml:space="preserve">
          <source>can be represented by any of the strings &quot;Y&quot;, &quot;Yes&quot;, &quot;T&quot;, or &quot;True&quot;; and the General Category &quot;Punctuation&quot; by that string, or &quot;Punct&quot;, or simply &quot;P&quot;.</source>
          <target state="translated">puede ser representada por cualquiera de las cadenas &quot;Y&quot;,&quot;Sí&quot;,&quot;T&quot;,o &quot;Verdadero&quot;;y la Categoría General &quot;Puntuación&quot; por esa cadena,o &quot;Puntuación&quot;,o simplemente &quot;P&quot;.</target>
        </trans-unit>
        <trans-unit id="ab1e1922e94c24432c2394888ae6becca02bff46" translate="yes" xml:space="preserve">
          <source>can be rewritten as the much more efficient</source>
          <target state="translated">puede ser reescrito como el mucho más eficiente</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
