<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="fad8357eef2bb53d17336573edc650a4cf157cf3" translate="yes" xml:space="preserve">
          <source>James E. Keenan &amp;lt;jkeen@verizon.net&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cf1bbb2770fa0d885d542ddaca96bfea96011e" translate="yes" xml:space="preserve">
          <source>James Keenan, &amp;lt;jkeenan@cpan.org&amp;gt;</source>
          <target state="translated">James Keenan, &amp;lt;jkeenan@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2c916c2a6f4627fbe67be340b96ec2857597184a" translate="yes" xml:space="preserve">
          <source>James Raspass &amp;lt;jraspass@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e4cd2d086a80816fd0c59891fecee24ad1a4c4" translate="yes" xml:space="preserve">
          <source>Jamo_Short_Name</source>
          <target state="translated">Jamo_Short_Name</target>
        </trans-unit>
        <trans-unit id="dc05d77338b63072590a6f49b15e48ec83a7bd95" translate="yes" xml:space="preserve">
          <source>Jan Dubois &amp;lt;jand@activestate.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf29f6cad3232704b33e962ef5194fad3b6817b" translate="yes" xml:space="preserve">
          <source>Japan</source>
          <target state="translated">Japan</target>
        </trans-unit>
        <trans-unit id="6ce48d285e726d9be92e6bf68e171d9553e0896e" translate="yes" xml:space="preserve">
          <source>Japanese Encodings</source>
          <target state="translated">Codificaciones japonesas</target>
        </trans-unit>
        <trans-unit id="f0fae5d9347791c2b844b690a046bfe7552e453c" translate="yes" xml:space="preserve">
          <source>Japheth Cleaver added the bits to allow a forced install (-f).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6422bf1002562f4885ccb3e7c11949b9fc2f34" translate="yes" xml:space="preserve">
          <source>Japheth Cleaver added the bits to allow a forced install (&lt;code&gt;-f&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7b561acfebbb2aad1864ab89f7d4e5285c6e22" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi</source>
          <target state="translated">Jarkko Hietaniemi</target>
        </trans-unit>
        <trans-unit id="a9a4e186a4a793bc3fef06e8162fa8ae0f705095" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi &amp;lt;</source>
          <target state="translated">Jarkko Hietaniemi &amp;lt;</target>
        </trans-unit>
        <trans-unit id="13ce73395e162a5533c6ace927e40c80d2cab8fd" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;</source>
          <target state="translated">Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7adef0fede1e52584837e3b9fe09cbb854d77894" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; Bryan Logan &amp;lt;bryanlog@us.ibm.com&amp;gt; David Larson &amp;lt;larson1@us.ibm.com&amp;gt;</source>
          <target state="translated">Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; Bryan Logan &amp;lt;bryanlog@us.ibm.com&amp;gt; David Larson &amp;lt;larson1@us.ibm.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="276f92ff10492dd51e70f45871039bf3b88b6a4b" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi's original</source>
          <target state="translated">El original de Jarkko Hietaniemi</target>
        </trans-unit>
        <trans-unit id="04cfea13773f0ae1b7ac40ccd517f43dc7dcdad4" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi, &amp;lt;jhi@hut.fi&amp;gt;</source>
          <target state="translated">Jarkko Hietaniemi, &amp;lt;jhi@hut.fi&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c6f1f3b8aba1c1fb078ca69f70f0d3a32db2b05e" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi, &amp;lt;jhi@hut.fi&amp;gt;. Now maintained by Perl 5 porters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc2a5e3ff31736b8a57665e048886c573a122f3" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi, conversion into libnetcfg for inclusion into Perl 5.8.</source>
          <target state="translated">Jarkko Hietaniemi,conversión en libnetcfg para su inclusión en el Perl 5.8.</target>
        </trans-unit>
        <trans-unit id="692b885ac0ff146816113cee07c7dfe2ef0ba0a4" translate="yes" xml:space="preserve">
          <source>Jarkko Hietaniemi. Now maintained by perl5 porters.</source>
          <target state="translated">Jarkko Hietaniemi.Ahora mantenido por los porteadores de Perl5.</target>
        </trans-unit>
        <trans-unit id="f0bc884e41c8e0399ef072f3aad2d67eaa7fd5aa" translate="yes" xml:space="preserve">
          <source>JavaScript Traps</source>
          <target state="translated">JavaScript Trampas</target>
        </trans-unit>
        <trans-unit id="f2ef0f46c9cd103d2be6f2673d4379b347904df1" translate="yes" xml:space="preserve">
          <source>Jean Delvare provided the following table of different common terminal emulators and their support for the various attributes and others have helped me flesh it out:</source>
          <target state="translated">Jean Delvare proporcionó la siguiente tabla de diferentes emuladores de terminales comunes y su apoyo a los diversos atributos y otros me han ayudado a darle cuerpo:</target>
        </trans-unit>
        <trans-unit id="27f5b59f8afefe05a200ff5c9949b24e5ca9ea36" translate="yes" xml:space="preserve">
          <source>Jed</source>
          <target state="translated">Jed</target>
        </trans-unit>
        <trans-unit id="b63c65e75871d5c7820e4ea10cfd70f390f74d22" translate="yes" xml:space="preserve">
          <source>Jeff Okamoto &amp;lt;</source>
          <target state="translated">Jeff Okamoto &amp;lt;</target>
        </trans-unit>
        <trans-unit id="7ec7c5d4610b8dd06ad086eed7d40f5d2aaef1a6" translate="yes" xml:space="preserve">
          <source>Jeff Okamoto, Tim Bunce, Nick Gianniotis, Steve Kelem, Gurusamy Sarathy and Larry Wall.</source>
          <target state="translated">Jeff Okamoto,Tim Bunce,Nick Gianniotis,Steve Kelem,Gurusamy Sarathy y Larry Wall.</target>
        </trans-unit>
        <trans-unit id="2425ad3a84d8960ab9c2915a943fd7e28d7c0291" translate="yes" xml:space="preserve">
          <source>Jeremy Mates &amp;lt;jmates@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52232653f25fa8c0538602bfc7945ebf9d9b79a7" translate="yes" xml:space="preserve">
          <source>Jerry D. Hedden &amp;lt;jdhedden@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a656e0d05c4ded5764e8eee0b16063f85446f7" translate="yes" xml:space="preserve">
          <source>Jerry D. Hedden and Reini Urban provided greatly appreciated help to debug and polish &lt;code&gt;Sys::Syslog&lt;/code&gt; under Cygwin.</source>
          <target state="translated">Jerry D. Hedden y Reini Urban proporcionaron una ayuda muy apreciada para depurar y pulir &lt;code&gt;Sys::Syslog&lt;/code&gt; bajo Cygwin.</target>
        </trans-unit>
        <trans-unit id="1a3cecc43a5465fa758b4f88b43cd646e6623b8f" translate="yes" xml:space="preserve">
          <source>Jerry D. Hedden, &amp;lt;jdhedden AT cpan DOT org&amp;gt;</source>
          <target state="translated">Jerry D. Hedden, &amp;lt;jdhedden AT cpan DOT org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e5109d5f0b8672892d9cf43511b2568ff7ce2637" translate="yes" xml:space="preserve">
          <source>Jerry Gay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7ad312b85f19c8a09454b49798a0382227aa86" translate="yes" xml:space="preserve">
          <source>Jess Robinson &amp;lt;castaway@desert-island.me.uk&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f1b3fc35d7e705b8692294a866fb025bdc15b4" translate="yes" xml:space="preserve">
          <source>Jim Brandt suggest and provided the initial implementation for the up-to-date and Changes features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549b2243ef15345835dfd4eb22ac64d2df0ea3a8" translate="yes" xml:space="preserve">
          <source>Jim Keenan fixed up various issues with _download</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef645dbc725c293373ed9661992798b416e9b9b4" translate="yes" xml:space="preserve">
          <source>Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;, using the framework created by Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;, utilizando el marco creado por Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="c865a479b23a538482933eec4ec96a06755b572a" translate="yes" xml:space="preserve">
          <source>Johan Vromans &amp;lt;jvromans@squirrel.nl&amp;gt;</source>
          <target state="translated">Johan Vromans &amp;lt;jvromans@squirrel.nl&amp;gt;</target>
        </trans-unit>
        <trans-unit id="183447aad929b68cdb9a4bc6a0988222e172d912" translate="yes" xml:space="preserve">
          <source>Johan Vromans &amp;lt;jvromans@squirrel.nl&amp;gt; H. Merijn Brand &amp;lt;h.m.brand@xs4all.nl&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d401e67bf973d127449e78a2dab7a6e33bf82ed1" translate="yes" xml:space="preserve">
          <source>John Lightsey &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93554073e2a9ef40605d8eff344dac817dfa1a9" translate="yes" xml:space="preserve">
          <source>John Peacock &amp;lt;jpeacock@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfcbe7345fa5c91aff66147710f3cfd01971e09" translate="yes" xml:space="preserve">
          <source>Joins the separate strings of LIST into a single string with fields separated by the value of EXPR, and returns that new string. Example:</source>
          <target state="translated">Une las cadenas separadas de LIST en una sola cadena con campos separados por el valor de EXPR,y devuelve esa nueva cadena.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="8701a18a17d809f2f5e1d9461286d81392c749a1" translate="yes" xml:space="preserve">
          <source>Jon Orwant</source>
          <target state="translated">Jon Orwant</target>
        </trans-unit>
        <trans-unit id="9535723b8f84ea59122230a47649084f0880997b" translate="yes" xml:space="preserve">
          <source>Jon Orwant &amp;lt;</source>
          <target state="translated">Jon Orwant &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e683318ce5a68c3c49c2481778c7d3eb5187cf39" translate="yes" xml:space="preserve">
          <source>Jonas B. Nielsen &amp;lt;jonasbn@hoarfrost.local&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b947fc83a952d44b7572b1e1134cb1af54db24" translate="yes" xml:space="preserve">
          <source>Josh Jore &amp;lt;jjore@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc19f76e720fe5e2b005501ad08de9eb7175b61" translate="yes" xml:space="preserve">
          <source>Joshua Chamas's Tie::Cache module may be useful as an expiration manager. (If you try this, let me know how it works out.)</source>
          <target state="translated">El módulo de caché de Joshua Chamas puede ser útil como gestor de vencimientos.(Si intentas esto,hazme saber cómo funciona.)</target>
        </trans-unit>
        <trans-unit id="272f944afb073e466e447521f217853887659759" translate="yes" xml:space="preserve">
          <source>Joshua ben Jore &amp;lt;jjore@cpan.org&amp;gt;</source>
          <target state="translated">Joshua ben Jore &amp;lt;jjore@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f8f06875505d336c6444e4ca735af60cc7f95b69" translate="yes" xml:space="preserve">
          <source>Judicious JavaScript programmers should take note of the following:</source>
          <target state="translated">Los programadores juiciosos de JavaScript deben tomar nota de lo siguiente:</target>
        </trans-unit>
        <trans-unit id="829558e61eb4ee30d56d5ca3997b5726751317c0" translate="yes" xml:space="preserve">
          <source>Juerd Waalboer &amp;lt;#####@juerd.nl&amp;gt;</source>
          <target state="translated">Juerd Waalboer &amp;lt;##### @ juerd.nl&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d89d24d0ba5d206a7a244711764b4287f3aa5c8f" translate="yes" xml:space="preserve">
          <source>Juerd Waalboer &amp;lt;#####@juerd.nl&amp;gt;, with the help of many Perl Monks.</source>
          <target state="translated">Juerd Waalboer &amp;lt;##### @ juerd.nl&amp;gt;, con la ayuda de muchos Perl Monks.</target>
        </trans-unit>
        <trans-unit id="bd209361669e6039e2d46925b98964270ec9db84" translate="yes" xml:space="preserve">
          <source>July 26, 2005</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b31aa739648b445f7448224142630d141a4270e" translate="yes" xml:space="preserve">
          <source>June 12, 2007</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a23786af78acf626cd4573fa13a06ed0180b91" translate="yes" xml:space="preserve">
          <source>June 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d4e067e5679c035c82b3463849e985c82217de" translate="yes" xml:space="preserve">
          <source>June 2017, for Synology DSM 5.1.5022 and DSM 6.1-15101-4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4bec64b36dddd2d05eab7e4c0c50161f28ee85" translate="yes" xml:space="preserve">
          <source>Jungshik Shin's Hangul FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393e8d148b7c32a4801ca4b9adac481fc7a1b559" translate="yes" xml:space="preserve">
          <source>Junk on end of regexp in regex m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3e3f9c72e3b6a4486ec8a37b16219f4828a4df" translate="yes" xml:space="preserve">
          <source>Just a quick hint here for all those CGI programmers who can't figure out how on earth to get past that 'waiting for input' prompt, when running their CGI script from the command-line, try something like this:</source>
          <target state="translated">Una pista rápida para los programadores de CGI que no saben cómo pasar el aviso de &quot;esperando entrada&quot; cuando ejecutan su script CGI desde la línea de comandos,intenten algo así:</target>
        </trans-unit>
        <trans-unit id="33892714232f2855fd91a542cad5d54aa9bb7133" translate="yes" xml:space="preserve">
          <source>Just as P5P collectively maintains the codebase, we collectively maintain the documentation. Writing a particular bit of documentation doesn't give an author control of the future of that documentation. At the same time, just as source code changes should match the style of their surrounding blocks, so should documentation changes.</source>
          <target state="translated">Así como P5P mantiene colectivamente la base de código,nosotros mantenemos colectivamente la documentación.Escribir un pedazo particular de documentación no le da al autor el control del futuro de esa documentación.Al mismo tiempo,así como los cambios en el código fuente deben coincidir con el estilo de sus bloques circundantes,también los cambios en la documentación.</target>
        </trans-unit>
        <trans-unit id="0aaf4ef0c9b344d1374053d108e2052e07431e98" translate="yes" xml:space="preserve">
          <source>Just as PERL_IMPLICIT_CONTEXT provides a way to bundle up everything that the interpreter knows about itself and pass it around, so too are there plans to allow the interpreter to bundle up everything it knows about the environment it's running on. This is enabled with the PERL_IMPLICIT_SYS macro. Currently it only works with USE_ITHREADS on Windows.</source>
          <target state="translated">Así como el PERL_IMPLICIT_CONTEXT proporciona una manera de agrupar todo lo que el intérprete sabe sobre sí mismo y transmitirlo,también hay planes para permitir que el intérprete agrupe todo lo que sabe sobre el entorno en el que está funcionando.Esto se habilita con la macro PERL_IMPLICIT_SYS.Actualmente sólo funciona con USE_ITHREADS en Windows.</target>
        </trans-unit>
        <trans-unit id="62e8906be80151cd95246c62df9e4761d5bc2332" translate="yes" xml:space="preserve">
          <source>Just as above, but maps from characters (like &quot;\xE9&quot;, lowercase e-acute) to characters (like &quot;e&quot;).</source>
          <target state="translated">Igual que arriba,pero con mapas de caracteres (como &quot;\xE9&quot;,e-agudos en minúsculas)a caracteres (como &quot;e&quot;).</target>
        </trans-unit>
        <trans-unit id="f1702c1674bbdf9cb3b7adf0315e4e20270cbf30" translate="yes" xml:space="preserve">
          <source>Just as in all regular expressions, the pattern can be built up by including variables that are interpolated at regex compilation time. But its best to compile each sub-component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b1550eae10318438b9e4b01a4b0de0c550fc87" translate="yes" xml:space="preserve">
          <source>Just as in all regular expressions, the pattern can be built up by including variables that are interpolated at regex compilation time. Care must be taken to ensure that you are getting what you expect. For example:</source>
          <target state="translated">Al igual que en todas las expresiones regulares,el patrón se puede construir incluyendo variables que se interpolan en el momento de la compilación de regex.Hay que tener cuidado para asegurarse de que se obtiene lo que se espera.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fe8a855ccb8465e6e734bba6c85f798237a3ef83" translate="yes" xml:space="preserve">
          <source>Just as in the previous regexp, the first quantifier &lt;code&gt;.??&lt;/code&gt; can match earliest at position &lt;code&gt;'a'&lt;/code&gt; , so it does. The second quantifier is greedy, so it matches &lt;code&gt;mm&lt;/code&gt; , and the third matches the rest of the string.</source>
          <target state="translated">Al igual que en la expresi&amp;oacute;n regular anterior, el primer cuantificador &lt;code&gt;.??&lt;/code&gt; puede coincidir m&amp;aacute;s temprano en la posici&amp;oacute;n &lt;code&gt;'a'&lt;/code&gt; , por lo que lo hace. El segundo cuantificador es codicioso, por lo que coincide con &lt;code&gt;mm&lt;/code&gt; , y el tercero coincide con el resto de la cadena.</target>
        </trans-unit>
        <trans-unit id="b429e6fea7e7282b4255020ad5026d4f3fb6bfbd" translate="yes" xml:space="preserve">
          <source>Just as in the previous regexp, the first quantifier &lt;code&gt;.??&lt;/code&gt; can match earliest at position &lt;code&gt;'a'&lt;/code&gt;, so it does. The second quantifier is greedy, so it matches &lt;code&gt;mm&lt;/code&gt;, and the third matches the rest of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aa745852ee956f0149292237b30dcf7a75e890" translate="yes" xml:space="preserve">
          <source>Just as in the shell, a backslashed bareword following the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; means the same thing as a single-quoted string does:</source>
          <target state="translated">Al igual que en el shell, una palabra sin barra invertida que sigue a &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; significa lo mismo que una cadena entre comillas simples:</target>
        </trans-unit>
        <trans-unit id="faebd7db1f892818770103ce78accf7713eb730f" translate="yes" xml:space="preserve">
          <source>Just as numeric comparisons can be autogenerated from the method for &lt;code&gt;'&amp;lt;=&amp;gt;'&lt;/code&gt; , string comparisons can be autogenerated from that for &lt;code&gt;'cmp'&lt;/code&gt; :</source>
          <target state="translated">As&amp;iacute; como las comparaciones num&amp;eacute;ricas se pueden generar autom&amp;aacute;ticamente a partir del m&amp;eacute;todo para &lt;code&gt;'&amp;lt;=&amp;gt;'&lt;/code&gt; , las comparaciones de cadenas se pueden generar autom&amp;aacute;ticamente a partir de las de &lt;code&gt;'cmp'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2f4705ec7dd0e75b639ef6323350a11dcee5bb4b" translate="yes" xml:space="preserve">
          <source>Just as numeric comparisons can be autogenerated from the method for &lt;code&gt;'&amp;lt;=&amp;gt;'&lt;/code&gt;, string comparisons can be autogenerated from that for &lt;code&gt;'cmp'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df19f323bb6b48a43ad85680dc0529bf785f1c3" translate="yes" xml:space="preserve">
          <source>Just as with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt;, no shell escapes happen when you &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; a list. Further examples of this can be found in &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;Safe Pipe Opens in perlipc&lt;/a&gt;.</source>
          <target state="translated">Al igual que con &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; , no se producen escapes de shell cuando &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; una lista. Se pueden encontrar m&amp;aacute;s ejemplos de esto en &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;Safe Pipe Opens en perlipc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51995d8ca4bbd6f67f0a4012d50abbc2aa87fe84" translate="yes" xml:space="preserve">
          <source>Just as with &lt;code&gt;system()&lt;/code&gt;, no shell escapes happen when you &lt;code&gt;exec()&lt;/code&gt; a list. Further examples of this can be found in &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;&quot;Safe Pipe Opens&quot; in perlipc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e255de21718ad7422221bd6f42f8ec7acc85a6f3" translate="yes" xml:space="preserve">
          <source>Just as with any Perl subroutine, all of the arguments passed in &lt;code&gt;@_&lt;/code&gt; are aliases to the original argument. This includes the object itself. If you assign directly to &lt;code&gt;$_[0]&lt;/code&gt; you will change the contents of the variable that holds the reference to the object. We recommend that you don't do this unless you know exactly what you're doing.</source>
          <target state="translated">Al igual que con cualquier subrutina de Perl, todos los argumentos pasados ​​en &lt;code&gt;@_&lt;/code&gt; son alias del argumento original. Esto incluye el objeto en s&amp;iacute;. Si asigna directamente a &lt;code&gt;$_[0]&lt;/code&gt; , cambiar&amp;aacute; el contenido de la variable que contiene la referencia al objeto. Le recomendamos que no haga esto a menos que sepa exactamente lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="fccd05d91f9ee0d9fbbfbf38723d03e8a7c74f00" translate="yes" xml:space="preserve">
          <source>Just as with any signal, you can use &lt;code&gt;sigaction($rtsig, &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;, $oa)&lt;/code&gt; to retrieve the installed signal handler (or, rather, the signal action).</source>
          <target state="translated">Al igual que con cualquier se&amp;ntilde;al, puede usar &lt;code&gt;sigaction($rtsig, &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;, $oa)&lt;/code&gt; para recuperar el manejador de se&amp;ntilde;ales instalado (o, mejor dicho, la acci&amp;oacute;n de la se&amp;ntilde;al).</target>
        </trans-unit>
        <trans-unit id="1dd23c5eb258d91db69b09a02592a51973f21dd6" translate="yes" xml:space="preserve">
          <source>Just as with any signal, you can use &lt;code&gt;sigaction($rtsig, undef, $oa)&lt;/code&gt; to retrieve the installed signal handler (or, rather, the signal action).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc08a9e71893fc4c8e0aca93a96bf0beab842b5" translate="yes" xml:space="preserve">
          <source>Just because a lexical variable is lexically (also called statically) scoped to its enclosing block, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; FILE, this doesn't mean that within a function it works like a C static. It normally works more like a C auto, but with implicit garbage collection.</source>
          <target state="translated">El hecho de que una variable l&amp;eacute;xica tenga un alcance l&amp;eacute;xico (tambi&amp;eacute;n llamado est&amp;aacute;tico) en su bloque adjunto, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; FILE, no significa que dentro de una funci&amp;oacute;n funcione como una est&amp;aacute;tica en C. Normalmente funciona m&amp;aacute;s como un C autom&amp;aacute;tico, pero con recolecci&amp;oacute;n de basura impl&amp;iacute;cita.</target>
        </trans-unit>
        <trans-unit id="78056aba9593d70f12e87925bcfaacc1a8ab6644" translate="yes" xml:space="preserve">
          <source>Just because a lexical variable is lexically (also called statically) scoped to its enclosing block, &lt;code&gt;eval&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt; FILE, this doesn't mean that within a function it works like a C static. It normally works more like a C auto, but with implicit garbage collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c499a655f030c92a71b95e9b2689970ea91b8a" translate="yes" xml:space="preserve">
          <source>Just because you</source>
          <target state="translated">Sólo porque tú</target>
        </trans-unit>
        <trans-unit id="109e6f9598b8183bb06ce69968e5c56fc8392a6f" translate="yes" xml:space="preserve">
          <source>Just before HP took over Compaq, some systems were renamed. the link that contained the explanation is dead, so here's a short summary:</source>
          <target state="translated">Justo antes de que HP se hiciera cargo de Compaq,algunos sistemas fueron renombrados.El enlace que contenía la explicación está muerto,así que aquí hay un pequeño resumen:</target>
        </trans-unit>
        <trans-unit id="75a3cd456f36493a47889dab1eae3ee74e772ac3" translate="yes" xml:space="preserve">
          <source>Just before removing a directory (after having successfully removed everything it contained), &lt;code&gt;remove_tree&lt;/code&gt; attempted to set the permissions on the directory to ensure it could be removed and failed. Program execution continues, but the directory may possibly not be deleted.</source>
          <target state="translated">Justo antes de eliminar un directorio (despu&amp;eacute;s de haber eliminado con &amp;eacute;xito todo lo que conten&amp;iacute;a), &lt;code&gt;remove_tree&lt;/code&gt; intent&amp;oacute; establecer los permisos en el directorio para asegurarse de que pudiera eliminarse y fallar. La ejecuci&amp;oacute;n del programa contin&amp;uacute;a, pero es posible que el directorio no se elimine.</target>
        </trans-unit>
        <trans-unit id="9d4933b209ef20fa5fe691ade0680077d951e65e" translate="yes" xml:space="preserve">
          <source>Just do it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cff4cf2ef85b7a7babbfc6ed8ae94ad00cf8c95" translate="yes" xml:space="preserve">
          <source>Just don't forget that you have to put a semicolon on the end to finish the statement, as Perl doesn't know you're not going to try to do this:</source>
          <target state="translated">No olvides que tienes que poner un punto y coma al final para terminar la declaración,ya que Perl no sabe que no vas a tratar de hacer esto:</target>
        </trans-unit>
        <trans-unit id="328525052fa36f8cc3be7cbb9e20c8b29808d7e3" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#Decimal-Versions&quot;&gt;&quot;Decimal Versions&quot;&lt;/a&gt;, Dotted-Decimal Versions can be used as &lt;a href=&quot;#Alpha-Versions&quot;&gt;&quot;Alpha Versions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6d762627d70bbe10fa5260237267dabf212dd8" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;, but implicitly appends a newline at the end of the LIST instead of any value &lt;a href=&quot;perlvar#%24%5C&quot;&gt;&lt;code&gt;$\&lt;/code&gt;&lt;/a&gt; might have. To use FILEHANDLE without a LIST to print the contents of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to it, you must use a bareword filehandle like &lt;code&gt;FH&lt;/code&gt;, not an indirect one like &lt;code&gt;$fh&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfcdab4ac1e20695bdf62962cb38182d5e54e17" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;$^E&lt;/code&gt;, in a numeric context &lt;code&gt;fileLastError()&lt;/code&gt; returns the numeric error value while in a string context it returns a text description of the error [actually it returns a Perl scalar that contains both values so &lt;code&gt;$x= fileLastError()&lt;/code&gt; causes &lt;code&gt;$x&lt;/code&gt; to give different values in string vs. numeric contexts].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3dbf5e42e97a50f069394cda4a6442ac1d1765" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, but implicitly appends a newline. &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; is simply an abbreviation for &lt;code&gt;{ &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . To use FILEHANDLE without a LIST to print the contents of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; .</source>
          <target state="translated">Al igual que &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , pero impl&amp;iacute;citamente agrega una nueva l&amp;iacute;nea. &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; es simplemente una abreviatura de &lt;code&gt;{ &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . Para usar FILEHANDLE sin una LIST para imprimir el contenido de &lt;code&gt;$_&lt;/code&gt; , debe usar un filehandle real como &lt;code&gt;FH&lt;/code&gt; , no uno indirecto como &lt;code&gt;$fh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="602502b6c9a3a727e615412b86a9aecefaaebcdb" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, but implicitly appends a newline. &lt;code&gt;&lt;a href=&quot;say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; is simply an abbreviation for &lt;code&gt;{ &lt;a href=&quot;local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . To use FILEHANDLE without a LIST to print the contents of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; .</source>
          <target state="translated">Al igual que &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , pero impl&amp;iacute;citamente agrega una nueva l&amp;iacute;nea. &lt;code&gt;&lt;a href=&quot;say&quot;&gt;say&lt;/a&gt; LIST&lt;/code&gt; es simplemente una abreviatura de &lt;code&gt;{ &lt;a href=&quot;local&quot;&gt;local&lt;/a&gt; $\ = &quot;\n&quot;; &lt;a href=&quot;print&quot;&gt;print&lt;/a&gt; LIST }&lt;/code&gt; . Para usar FILEHANDLE sin una LIST para imprimir el contenido de &lt;code&gt;$_&lt;/code&gt; , debe usar un filehandle real como &lt;code&gt;FH&lt;/code&gt; , no uno indirecto como &lt;code&gt;$fh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="841a87198bd8d5b2b617ad09071d079bbef63265" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;SAVEFREESV&lt;/code&gt; , but mortalizes &lt;code&gt;sv&lt;/code&gt; at the end of the current scope instead of decrementing its reference count. This usually has the effect of keeping &lt;code&gt;sv&lt;/code&gt; alive until the statement that called the currently live scope has finished executing.</source>
          <target state="translated">Al igual que &lt;code&gt;SAVEFREESV&lt;/code&gt; , pero mortaliza &lt;code&gt;sv&lt;/code&gt; al final del alcance actual en lugar de disminuir su recuento de referencias. Por lo general, esto tiene el efecto de mantener vivo a &lt;code&gt;sv&lt;/code&gt; hasta que la instrucci&amp;oacute;n que llam&amp;oacute; al alcance activo actualmente haya terminado de ejecutarse.</target>
        </trans-unit>
        <trans-unit id="d8849097832f945b1a9937bcaa379e174bc86623" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;SAVEFREESV&lt;/code&gt;, but mortalizes &lt;code&gt;sv&lt;/code&gt; at the end of the current scope instead of decrementing its reference count. This usually has the effect of keeping &lt;code&gt;sv&lt;/code&gt; alive until the statement that called the currently live scope has finished executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bed5460b2b3b0cfc33630f1100fa2264399cf7" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;my $f; $f = sub { $f-&amp;gt;() }&lt;/code&gt;, this example leaks memory. The name &lt;code&gt;baz&lt;/code&gt; is a reference to the subroutine, and the subroutine uses the name &lt;code&gt;baz&lt;/code&gt;; they keep each other alive (see &lt;a href=&quot;perlref#Circular-References&quot;&gt;&quot;Circular References&quot; in perlref&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdee811de63331b1e390b9478886674b8221df6d" translate="yes" xml:space="preserve">
          <source>Just like alternation, quantifiers are also susceptible to backtracking. Here is a step-by-step analysis of the example</source>
          <target state="translated">Al igual que la alternancia,los cuantificadores también son susceptibles de retroceder.Aquí está un análisis paso a paso del ejemplo</target>
        </trans-unit>
        <trans-unit id="24cfeb3771fb43ef585a2f529448474ab41a12a3" translate="yes" xml:space="preserve">
          <source>Just like capa, but only uses a cache from the last time we asked the server, so as to avoid asking more than once.</source>
          <target state="translated">Como en capa,pero sólo usa un caché de la última vez que preguntamos al servidor,para evitar preguntar más de una vez.</target>
        </trans-unit>
        <trans-unit id="c07daab474d2a24a41bbf91648b44cb45c039da4" translate="yes" xml:space="preserve">
          <source>Just like have_compiler but for C++ instead of C.</source>
          <target state="translated">Al igual que have_compiler pero para C++en lugar de C.</target>
        </trans-unit>
        <trans-unit id="1ed1a130170978e2a4e7086c7c7306a25c8e7b33" translate="yes" xml:space="preserve">
          <source>Just like special scalars and arrays, there are also special hashes. The most well known of these is &lt;code&gt;%ENV&lt;/code&gt; which contains environment variables. Read all about it (and other special variables) in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;.</source>
          <target state="translated">Al igual que los escalares y matrices especiales, tambi&amp;eacute;n hay hash especiales. El m&amp;aacute;s conocido de ellos es &lt;code&gt;%ENV&lt;/code&gt; que contiene variables de entorno. Lea todo sobre esto (y otras variables especiales) en &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19b37fcf66fa778fbd1b5d5fc50d7060df9d05e7" translate="yes" xml:space="preserve">
          <source>Just like the &quot;strict&quot; pragma any of these categories can be combined</source>
          <target state="translated">Al igual que el pragmatismo &quot;estricto&quot;,cualquiera de estas categorías puede combinarse</target>
        </trans-unit>
        <trans-unit id="82e865fa7feb693e6080cbf3d25a874d28e9c584" translate="yes" xml:space="preserve">
          <source>Just pressing Enter will do the most recent operation again - it's a blessing when stepping through miles of source code.</source>
          <target state="translated">Con sólo pulsar Enter se hará la operación más reciente de nuevo-es una bendición cuando se atraviesa kilómetros de código fuente.</target>
        </trans-unit>
        <trans-unit id="fe244a50fe6aded057e3eae12f0a93027edb2381" translate="yes" xml:space="preserve">
          <source>Just say:</source>
          <target state="translated">Sólo dilo:</target>
        </trans-unit>
        <trans-unit id="d8c1011fd0f056428d5a8834a2c765887dde0f8b" translate="yes" xml:space="preserve">
          <source>Just set the integer value of the top stack entry to its negation.</source>
          <target state="translated">Sólo hay que poner el valor entero de la entrada de la pila superior en su negación.</target>
        </trans-unit>
        <trans-unit id="c7727ca967ac9b4f317d7c673ab3882351fa9d9d" translate="yes" xml:space="preserve">
          <source>Just simple slots for storing information about the line and the file the link was encountered in. Has to be filled in manually.</source>
          <target state="translated">Sólo unas simples ranuras para almacenar información sobre la línea y el archivo en el que se encontró el enlace.Tiene que ser rellenado manualmente.</target>
        </trans-unit>
        <trans-unit id="375852fdf41d2722bd019bb571f919722e750515" translate="yes" xml:space="preserve">
          <source>Just the Pod, the whole Pod, and nothing but the Pod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1d3328e0f08111bb8c2f1b7ffdbdee9651e208" translate="yes" xml:space="preserve">
          <source>Just to show that C programmers can write C in any programming language, if you prefer a more C-like solution, the following script makes the substitution have the same case, letter by letter, as the original. (It also happens to run about 240% slower than the Perlish solution runs.) If the substitution has more characters than the string being substituted, the case of the last character is used for the rest of the substitution.</source>
          <target state="translated">Para demostrar que los programadores de C pueden escribir C en cualquier lenguaje de programación,si prefieren una solución más parecida a C,el siguiente guión hace que la sustitución tenga el mismo caso,letra por letra,que el original.(También sucede que se ejecuta alrededor de un 240% más lento que la solución de Perlish).Si la sustitución tiene más caracteres que la cadena que se está sustituyendo,se utiliza el caso del último carácter para el resto de la sustitución.</target>
        </trans-unit>
        <trans-unit id="4a091e09bfa339a10150c33a9aaadd4282459277" translate="yes" xml:space="preserve">
          <source>Just what it says, you're missing that file. MakeMaker uses it to determine if perl has been rebuilt since the Makefile was made. It's a bit of a bug that it halts installation.</source>
          <target state="translated">Justo lo que dice,te falta ese archivo.MakeMaker lo usa para determinar si Perl ha sido reconstruido desde que se hizo el Makefile.Es un pequeño error que detenga la instalación.</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="66d19ca0f4158063f6e062dbc4b43cb2360ddc04" translate="yes" xml:space="preserve">
          <source>KEY/VALUE PAIR LIST FUNCTIONS</source>
          <target state="translated">FUNCIONES DE LA LISTA DE PARES DE TECLAS/VALORES</target>
        </trans-unit>
        <trans-unit id="ac97fd8044e211b8965191abd3e1372d4a6075d6" translate="yes" xml:space="preserve">
          <source>KEYS</source>
          <target state="translated">KEYS</target>
        </trans-unit>
        <trans-unit id="1294e49f760a91150a0bb4a9bd6180f089f5052a" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">KEYWORDS</target>
        </trans-unit>
        <trans-unit id="d873371555253b7c518cf82fe5be999156ffe1fc" translate="yes" xml:space="preserve">
          <source>KNOWN BUGS</source>
          <target state="translated">BUGS CONOCIDOS</target>
        </trans-unit>
        <trans-unit id="d7d37390d4b0162eaa199e8a40421a0fd151d9d4" translate="yes" xml:space="preserve">
          <source>KNOWN ISSUES</source>
          <target state="translated">TEMAS CONOCIDOS</target>
        </trans-unit>
        <trans-unit id="49f7d6b044c08905cf6f12f8a90c2d7d80dd7870" translate="yes" xml:space="preserve">
          <source>KNOWN PROBLEMS</source>
          <target state="translated">PROBLEMAS CONOCIDOS</target>
        </trans-unit>
        <trans-unit id="2e6715471399a1b1ebfdc7f8ec81f013da1993a0" translate="yes" xml:space="preserve">
          <source>KOI8 - De Facto Standard for the Cyrillic world</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bf874c052800335db296f8df012e4b563dd5c2" translate="yes" xml:space="preserve">
          <source>KS_C_5601-1987</source>
          <target state="translated">KS_C_5601-1987</target>
        </trans-unit>
        <trans-unit id="48303ff2b3e9c6f3ad91c4b4cea1dcbc0a240594" translate="yes" xml:space="preserve">
          <source>Kansas</source>
          <target state="translated">Kansas</target>
        </trans-unit>
        <trans-unit id="ff0775fcc23b465723521876b29263b74199fe74" translate="yes" xml:space="preserve">
          <source>Karen Etheridge</source>
          <target state="translated">Karen Etheridge</target>
        </trans-unit>
        <trans-unit id="3270844f69bfa9c56dba2d6c3b4cb338e5e7c9e1" translate="yes" xml:space="preserve">
          <source>Karen Etheridge &amp;lt;ether@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbc3244d892d46238fd249e292072bf980c75ba" translate="yes" xml:space="preserve">
          <source>Karl Williamson &lt;code&gt;khw@cpan.org&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6587b068c21cd74b421d84d8dd8d104ffb717b74" translate="yes" xml:space="preserve">
          <source>Kawai,Takanori provides a Japanese translation of a very old version of this manpage at &lt;a href=&quot;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&quot;&gt;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&lt;/a&gt;</source>
          <target state="translated">Kawai, Takanori proporciona una traducci&amp;oacute;n al japon&amp;eacute;s de una versi&amp;oacute;n muy antigua de esta p&amp;aacute;gina de manual en &lt;a href=&quot;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&quot;&gt;http://homepage3.nifty.com/hippo2000/perltips/CPAN.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f36b6bb1852c24392fb3ee9a2879da24eb0750d" translate="yes" xml:space="preserve">
          <source>Kazakhstan</source>
          <target state="translated">Kazakhstan</target>
        </trans-unit>
        <trans-unit id="dcff63b147198a52939742818ee2ef592a205e7e" translate="yes" xml:space="preserve">
          <source>Keep features/concepts as orthogonal as possible.</source>
          <target state="translated">Mantén los rasgos/conceptos tan ortogonales como sea posible.</target>
        </trans-unit>
        <trans-unit id="8e7b10c1d652b6b04a656b434f5b39616ccf1a50" translate="yes" xml:space="preserve">
          <source>Keep hacking until the tests pass.</source>
          <target state="translated">Sigue hackeando hasta que pasen las pruebas.</target>
        </trans-unit>
        <trans-unit id="af7d72158e7608d9c4b48305b5171ef45c75b0c8" translate="yes" xml:space="preserve">
          <source>Keep in mind that</source>
          <target state="translated">Tengan en cuenta que</target>
        </trans-unit>
        <trans-unit id="ed0120a6a4cb952cfa71da323a4afdbfcf12e27d" translate="yes" xml:space="preserve">
          <source>Keep in mind that even if you think your code is not locale-aware, it may call a C library function that is. Hopefully the man page for such a function will indicate that dependency, but the documentation is imperfect.</source>
          <target state="translated">Tenga en cuenta que aunque piense que su código no es local,puede llamar a una función de la biblioteca C que sí lo es.Con suerte,la página de manual de dicha función indicará esa dependencia,pero la documentación es imperfecta.</target>
        </trans-unit>
        <trans-unit id="6b2fabd086693247681cb8a1ee02495591d5c9f6" translate="yes" xml:space="preserve">
          <source>Keep in mind that even if you think your code is not locale-aware, it may call a library function that is. Hopefully the man page for such a function will indicate that dependency, but the documentation is imperfect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f6615f078bb4d01730cb8fac56589317fa9a58" translate="yes" xml:space="preserve">
          <source>Keep in mind that only the first several &quot;odd-numbered&quot; buckets are used, so the information on size of the &quot;odd-numbered&quot; buckets which are not used is probably meaningless.</source>
          <target state="translated">Hay que tener en cuenta que sólo se utilizan los primeros cubos &quot;numerados de forma impar&quot;,por lo que la información sobre el tamaño de los cubos &quot;numerados de forma impar&quot; que no se utilizan probablemente no tiene sentido.</target>
        </trans-unit>
        <trans-unit id="4ef95230ae4c52baacdb1c4884acabd7049d178c" translate="yes" xml:space="preserve">
          <source>Keep in mind that these compiler and linker settings will also be used when building CPAN modules. For XS modules to be compiled as a universal binary, any libraries it links to must also be universal binaries. The system libraries that Apple includes with the 10.4u SDK are all universal, but user-installed libraries may need to be re-installed as universal binaries.</source>
          <target state="translated">Tengan en cuenta que estos ajustes del compilador y del enlazador también se utilizarán al construir los módulos CPAN.Para que los módulos XS sean compilados como binario universal,cualquier biblioteca a la que se enlace debe ser también binaria universal.Las bibliotecas del sistema que Apple incluye con el SDK 10.4u son todas universales,pero las bibliotecas instaladas por el usuario pueden necesitar ser reinstaladas como binarios universales.</target>
        </trans-unit>
        <trans-unit id="9eeeda7b97916fa01cabcb38bff49279f0e6a0bb" translate="yes" xml:space="preserve">
          <source>Keep in mind that you can always supply</source>
          <target state="translated">Tenga en cuenta que siempre puede suministrar</target>
        </trans-unit>
        <trans-unit id="64a46910748217f86efd6627ba753bed01e58a81" translate="yes" xml:space="preserve">
          <source>Keep info about source lines on which a subroutine is defined.</source>
          <target state="translated">Mantén la información sobre las líneas de origen en las que se define una subrutina.</target>
        </trans-unit>
        <trans-unit id="f47e40b91fc5362642fcbe01770e5ce787e6ccdc" translate="yes" xml:space="preserve">
          <source>Keep it fast, simple, and useful.</source>
          <target state="translated">Que sea rápido,simple y útil.</target>
        </trans-unit>
        <trans-unit id="a180636219ad9f73429c85412c6186e17a5910d6" translate="yes" xml:space="preserve">
          <source>Keep it open and exciting to use/patch/advocate Perl everywhere.</source>
          <target state="translated">Mantenlo abierto y excitante para usar/parchar/abogar a Perl en todas partes.</target>
        </trans-unit>
        <trans-unit id="c51474355aad094e34cfbd22e2141d08f6d33f4f" translate="yes" xml:space="preserve">
          <source>Keep more files open than the system permits</source>
          <target state="translated">Mantener más archivos abiertos de lo que el sistema permite</target>
        </trans-unit>
        <trans-unit id="14b49f2a3e5ec0e1cdb997e3d03cb485633984fa" translate="yes" xml:space="preserve">
          <source>Keep sets of symbol names palatable to the VMS linker</source>
          <target state="translated">Mantén los nombres de los símbolos a gusto del enlazador del VMS...</target>
        </trans-unit>
        <trans-unit id="35e8f597cb9e9a9f82f4e1bd085531a453e9fc6c" translate="yes" xml:space="preserve">
          <source>Keep statics grouped into bins based on request sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a15ca125f2b3af86ad1584e6c4e2aafb908eae" translate="yes" xml:space="preserve">
          <source>Keep your documentation near the code it documents (&quot;inline&quot; documentation). Include POD for a given method right above that method's subroutine. This makes it easier to keep the documentation up to date, and avoids having to document each piece of code twice (once in POD and once in comments).</source>
          <target state="translated">Mantenga su documentación cerca del código que documenta (documentación &quot;en línea&quot;).Incluya el POD de un método dado justo encima de la subrutina de ese método.Esto hace más fácil mantener la documentación al día,y evita tener que documentar cada pedazo de código dos veces (una vez en POD y otra en comentarios).</target>
        </trans-unit>
        <trans-unit id="76d3b7f70d495b2b8a3270d608b55e23f648e0ce" translate="yes" xml:space="preserve">
          <source>Keeping track of the highest cached record. This would allow reads-in-a-row to skip the cache lookup faster (if reading from 1..N with empty cache at start, the last cached value will be always N-1).</source>
          <target state="translated">Manteniendo el registro más alto de la memoria caché.Esto permitiría que las lecturas en fila se salten la búsqueda de la caché más rápido (si se lee de 1..N con la caché vacía al principio,el último valor de la caché será siempre N-1).</target>
        </trans-unit>
        <trans-unit id="4c7c7465de1db7f41ca1d8bdef4219bff0d7c120" translate="yes" xml:space="preserve">
          <source>Ken Williams &amp;lt;ken@mathforum.org&amp;gt;</source>
          <target state="translated">Ken Williams &amp;lt;ken@mathforum.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ad60c49c47f2bac654c72d8e78538a479b9e1298" translate="yes" xml:space="preserve">
          <source>Ken Williams &amp;lt;kwilliams@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6eb55c5e49157861d18ebcd27f647197104aae7" translate="yes" xml:space="preserve">
          <source>Ken Williams wrote the original CPAN Meta Spec (also known as the &quot;META.yml spec&quot;) in 2003 and maintained it through several revisions with input from various members of the community. In 2005, Randy Sims redrafted it from HTML to POD for the version 1.2 release. Ken continued to maintain the spec through version 1.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd59a29e35516d1b9c3ad5018ade24ad931f61e" translate="yes" xml:space="preserve">
          <source>Ken Williams, &amp;lt;ken@mathforum.org&amp;gt;</source>
          <target state="translated">Ken Williams, &amp;lt;ken@mathforum.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0d1222a0218c97e36123b63438f7b4e4edcb6a3e" translate="yes" xml:space="preserve">
          <source>Ken Williams, kwilliams@cpan.org</source>
          <target state="translated">Ken Williams,kwilliams@cpan.org</target>
        </trans-unit>
        <trans-unit id="a1b34f9f925d8a7063c51b6911f446a276179b5f" translate="yes" xml:space="preserve">
          <source>Kenichi Ishigaki &amp;lt;ishigaki@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c191406f2405d085c884671d550970ada2c6b1" translate="yes" xml:space="preserve">
          <source>Kenichi Ishigaki, &amp;lt;ishigaki[at]cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0c77223410ec7a299fe0a1261f164a0c42279d" translate="yes" xml:space="preserve">
          <source>Kenneth Albanowski (&amp;lt;kjahds@kjahds.com&amp;gt;), subsequently</source>
          <target state="translated">Kenneth Albanowski (&amp;lt;kjahds@kjahds.com&amp;gt;), posteriormente</target>
        </trans-unit>
        <trans-unit id="653197d7093377e03793ff947a865bba7483d32a" translate="yes" xml:space="preserve">
          <source>Kent Fredric &amp;lt;kentfredric@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8469bfeb77eb9b1deeb56784d6fba56dcad80b56" translate="yes" xml:space="preserve">
          <source>Kent Fredric &amp;lt;kentnl@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ee2290090510397bed2e3bc84d4a991ae891b5" translate="yes" xml:space="preserve">
          <source>Kephra</source>
          <target state="translated">Kephra</target>
        </trans-unit>
        <trans-unit id="348f36b3e5bbe51567b4fb414536380d7187542b" translate="yes" xml:space="preserve">
          <source>Kernel threads are the next step in thread evolution. The OS knows about kernel threads, and makes allowances for them. The main difference between a kernel thread and a user-mode thread is blocking. With kernel threads, things that block a single thread don't block other threads. This is not the case with user-mode threads, where the kernel blocks at the process level and not the thread level.</source>
          <target state="translated">Los hilos del núcleo son el siguiente paso en la evolución de los hilos.El sistema operativo conoce los hilos del núcleo y los tiene en cuenta.La principal diferencia entre un hilo del núcleo y un hilo del modo de usuario es el bloqueo.Con los hilos del núcleo,las cosas que bloquean un solo hilo no bloquean otros hilos.Este no es el caso de los hilos en modo usuario,donde el núcleo se bloquea a nivel de proceso y no a nivel de hilo.</target>
        </trans-unit>
        <trans-unit id="259173b7d729d8dc6a66caf8b3aace35a75e8f99" translate="yes" xml:space="preserve">
          <source>Kevin Ryde</source>
          <target state="translated">Kevin Ryde</target>
        </trans-unit>
        <trans-unit id="ae72a3031e0506a2cc9019c8072a580c048ea952" translate="yes" xml:space="preserve">
          <source>Kevin Ryde &amp;lt;user42@zip.com.au&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a297e34f70da8957366c0d560c60295f4ab16d2a" translate="yes" xml:space="preserve">
          <source>Key feature milestones include:</source>
          <target state="translated">Los hitos principales incluyen:</target>
        </trans-unit>
        <trans-unit id="bc06e1d8824d5b7cbd20d018550616dba1eeb7a3" translate="yes" xml:space="preserve">
          <source>Key naming</source>
          <target state="translated">Nombre de la llave</target>
        </trans-unit>
        <trans-unit id="a3bc13a9d5bc9bf56b75f62ed64233e64f24fdcc" translate="yes" xml:space="preserve">
          <source>Key value pairs from the right hash are merged to the left hash. Key collisions are only allowed if their values are the same. This merge function will recurse into nested hash refs following the same merge rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c71372d5d9156fb958ad05c3a06f64214fe7926" translate="yes" xml:space="preserve">
          <source>Key/Value Hash Slices</source>
          <target state="translated">Rebanadas de hash de llave/valor</target>
        </trans-unit>
        <trans-unit id="0a8746998a05aa11ad9c2dab8f6c1868e6458dab" translate="yes" xml:space="preserve">
          <source>Key/value pairs are extra information about the module. Fields include:</source>
          <target state="translated">Los pares clave/valor son información adicional sobre el módulo.Los campos incluyen:</target>
        </trans-unit>
        <trans-unit id="6662c40bac78a8fe5e23219b77087fbe7647cb15" translate="yes" xml:space="preserve">
          <source>Keyboard</source>
          <target state="translated">Keyboard</target>
        </trans-unit>
        <trans-unit id="26057b24ccfdf1266160f8baf076207f8248b2c2" translate="yes" xml:space="preserve">
          <source>Keyed on perl version this contains ISO formatted versions of the release dates, as gleaned from &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;perlhist&lt;/a&gt;.</source>
          <target state="translated">Con clave en la versi&amp;oacute;n de perl, contiene versiones en formato ISO de las fechas de lanzamiento, como se obtuvo de &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;perlhist&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96d27593b7b7961c5ceaead578c38d771573f7f6" translate="yes" xml:space="preserve">
          <source>Keyed on perl version this contains ISO formatted versions of the release dates, as gleaned from &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlhist&quot;&gt;perlhist&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d923b20fce2535a3664621e531ef080ff7f9cd6a" translate="yes" xml:space="preserve">
          <source>Keys that are removed and used by run_subtest:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8db1e0c3088ee11dfc93f5419a78c6f0fd5645" translate="yes" xml:space="preserve">
          <source>Keywords related to Perl modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60139b7db3e9d2b51751c4b82ebfa525574e434a" translate="yes" xml:space="preserve">
          <source>Keywords related to classes and object-orientation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c704cf16aa5b97aad8158132dfa370f5b954af" translate="yes" xml:space="preserve">
          <source>Keywords related to scoping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a3090a3a955be7eca29e8ad0e959206c052266" translate="yes" xml:space="preserve">
          <source>Keywords related to the control flow of your Perl program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac519cac59842ef7ce692b39ea336e75df75601a" translate="yes" xml:space="preserve">
          <source>Killing the parent process</source>
          <target state="translated">Matar el proceso de los padres</target>
        </trans-unit>
        <trans-unit id="76e63bc788196f0fc365bdd0b40b720b363e2116" translate="yes" xml:space="preserve">
          <source>Kirrily &quot;Skud&quot; Robert &amp;lt;skud@cpan.org&amp;gt;</source>
          <target state="translated">Kirrily &quot;Skud&quot; Robert &amp;lt;skud@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="132f84c02455b94d400579a7b40a518ce274e293" translate="yes" xml:space="preserve">
          <source>Know what you're testing. Read the docs, and the source.</source>
          <target state="translated">Saber qué es lo que estás probando.Lee los documentos y la fuente.</target>
        </trans-unit>
        <trans-unit id="90303445974fa3fe293cc60d64eaeca6bb4d14c9" translate="yes" xml:space="preserve">
          <source>Known Problems</source>
          <target state="translated">Problemas conocidos</target>
        </trans-unit>
        <trans-unit id="eb6d28effd6acc1d20ab0115a46d456361c67007" translate="yes" xml:space="preserve">
          <source>Known Problems with Perl on Hurd</source>
          <target state="translated">Problemas conocidos con Perl on Hurd</target>
        </trans-unit>
        <trans-unit id="2e89de469fa00e2ab9c34571ade9b38ab1c2cab2" translate="yes" xml:space="preserve">
          <source>Known broken in version 0.07. Apparently works fine in 0.06 though. Patch has been submitted to fix the issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d461ba80b969b65622127de6110a76e9ec3b7a" translate="yes" xml:space="preserve">
          <source>Known broken in versions: 1.0.9 and older</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35d4f63dc3fe926a9db173d1f73bb17b3726246" translate="yes" xml:space="preserve">
          <source>Known problems</source>
          <target state="translated">Problemas conocidos</target>
        </trans-unit>
        <trans-unit id="773f5eaba0582fa827eb62a803e54c124b33061b" translate="yes" xml:space="preserve">
          <source>Known to be broken for 5.8.0 (but 5.6.1 and 5.7.2 can be used):</source>
          <target state="translated">Se sabe que está roto por 5.8.0 (pero se puede usar 5.6.1 y 5.7.2):</target>
        </trans-unit>
        <trans-unit id="140071254cfb3eb18c0425b733d34c90893547ed" translate="yes" xml:space="preserve">
          <source>Komodo</source>
          <target state="translated">Komodo</target>
        </trans-unit>
        <trans-unit id="cf8178f760b75a0d75931dde9fe9ac37025b060d" translate="yes" xml:space="preserve">
          <source>Korean Encodings</source>
          <target state="translated">Codificaciones coreanas</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="c142a9ba26a24e1b73db61760826e298c4c0ddcb" translate="yes" xml:space="preserve">
          <source>L [abw]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5009766b33ae437bdfad28ba25b247aa809447e" translate="yes" xml:space="preserve">
          <source>LANGUAGE CLASS HIERARCHIES</source>
          <target state="translated">JERARQUÍAS DE CLASES DE IDIOMAS</target>
        </trans-unit>
        <trans-unit id="306bdaf58d73ea39af3b1402b65b299e6a4795ee" translate="yes" xml:space="preserve">
          <source>LAST UPDATE</source>
          <target state="translated">ÚLTIMA ACTUALIZACIÓN</target>
        </trans-unit>
        <trans-unit id="aeec63655fed08c1f334fcc126280614a35bdd93" translate="yes" xml:space="preserve">
          <source>LATIN CAPITAL LETTER SHARP S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27af00b4882cabde6c2deac4be8c6e592a196d2a" translate="yes" xml:space="preserve">
          <source>LATIN SMALL LETTER LONG S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f956ece64434b3c753877daa6b0151c6f7f8ddbc" translate="yes" xml:space="preserve">
          <source>LATIN1_TO_NATIVE</source>
          <target state="translated">LATIN1_TO_NATIVE</target>
        </trans-unit>
        <trans-unit id="823feb18075201a2009bf899a2b4bee49397d8df" translate="yes" xml:space="preserve">
          <source>LC_TIME</source>
          <target state="translated">LC_TIME</target>
        </trans-unit>
        <trans-unit id="f7314006ff40a8dc21e31c8bdeffdcf14d801b8d" translate="yes" xml:space="preserve">
          <source>LD</source>
          <target state="translated">LD</target>
        </trans-unit>
        <trans-unit id="90ca2bc5ab4dabeeb219828932780cc0dfc4ed8f" translate="yes" xml:space="preserve">
          <source>LDDLFLAGS</source>
          <target state="translated">LDDLFLAGS</target>
        </trans-unit>
        <trans-unit id="931f97ed06ff46676353746b763aa77d0db02597" translate="yes" xml:space="preserve">
          <source>LDFROM</source>
          <target state="translated">LDFROM</target>
        </trans-unit>
        <trans-unit id="7c53807c1836659b4436f686a99f72b3f7ea4a20" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS and EXTRALIBS are always identical under Win32, and BSLOADLIBS and LD_RUN_PATH are always empty (this may change in future).</source>
          <target state="translated">Las LDLOADLIBS y EXTRALIBS son siempre idénticas bajo Win32,y las BSLOADLIBS y LD_RUN_PATH están siempre vacías (esto puede cambiar en el futuro).</target>
        </trans-unit>
        <trans-unit id="27d827eb4792696500b4c73ad4ddf3c959ae3870" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS and LD_RUN_PATH</source>
          <target state="translated">LDLOADLIBS y LD_RUN_PATH</target>
        </trans-unit>
        <trans-unit id="1635e0d5ca894812009c83cf6cdbe20b68728252" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS contains both the libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt; and the CRTLs, if any, specified in Config.pm. EXTRALIBS contains just those libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt; . BSLOADLIBS and LD_RUN_PATH are always empty.</source>
          <target state="translated">LDLOADLIBS contiene tanto las bibliotecas encontradas basadas en &lt;code&gt;$potential_libs&lt;/code&gt; possible_libs como las CRTL, si las hay, especificadas en Config.pm. EXTRALIBS contiene solo aquellas bibliotecas que se encuentran basadas en &lt;code&gt;$potential_libs&lt;/code&gt; possible_libs . BSLOADLIBS y LD_RUN_PATH siempre est&amp;aacute;n vac&amp;iacute;os.</target>
        </trans-unit>
        <trans-unit id="7f16bd8ecb3686b81b8608aa7cbe6a0280958ee3" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS contains both the libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt; and the CRTLs, if any, specified in Config.pm. EXTRALIBS contains just those libraries found based on &lt;code&gt;$potential_libs&lt;/code&gt;. BSLOADLIBS and LD_RUN_PATH are always empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256f68025172870d1f3c1210b89212eca54d2c93" translate="yes" xml:space="preserve">
          <source>LDLOADLIBS's default is changed to $Config{libs}.</source>
          <target state="translated">El valor por defecto de LDLOADLIBS se cambia a $Config{libs}.</target>
        </trans-unit>
        <trans-unit id="31a999d2e445df6d94c2d10d2f899c4b7a408247" translate="yes" xml:space="preserve">
          <source>LD_LIBRARY_PATH</source>
          <target state="translated">LD_LIBRARY_PATH</target>
        </trans-unit>
        <trans-unit id="a79d4f252799bf618ff38cdfc040adec85827f0f" translate="yes" xml:space="preserve">
          <source>LEAVE</source>
          <target state="translated">LEAVE</target>
        </trans-unit>
        <trans-unit id="9492fe99bfc78ed50462f6bcf892cde2a90aadb5" translate="yes" xml:space="preserve">
          <source>LEAVE_SRC</source>
          <target state="translated">LEAVE_SRC</target>
        </trans-unit>
        <trans-unit id="4d725158342230fd771b20f0bfaa69c6356a93a2" translate="yes" xml:space="preserve">
          <source>LEAVE_with_name</source>
          <target state="translated">LEAVE_with_name</target>
        </trans-unit>
        <trans-unit id="38a42fd39e3bbdd76ba2dba65bea762f7aea0428" translate="yes" xml:space="preserve">
          <source>LEGACY</source>
          <target state="translated">LEGACY</target>
        </trans-unit>
        <trans-unit id="93eefcbd1b5574d386a865e095b07bc538e3663b" translate="yes" xml:space="preserve">
          <source>LEGACY API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1a39d7d1db940985ed14aca646db0082b3b567" translate="yes" xml:space="preserve">
          <source>LEGACY SUPPORT METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bfcddc6a90029e35325994614f31d2dd6cb263" translate="yes" xml:space="preserve">
          <source>LEN</source>
          <target state="translated">LEN</target>
        </trans-unit>
        <trans-unit id="8753fd6c3b8da3cc6d317b80329ed3b40b2aa912" translate="yes" xml:space="preserve">
          <source>LETTERS</source>
          <target state="translated">LETTERS</target>
        </trans-unit>
        <trans-unit id="f481cc60f17adbd0734ec4396c3eec7ff4f97ae1" translate="yes" xml:space="preserve">
          <source>LEVEL</source>
          <target state="translated">LEVEL</target>
        </trans-unit>
        <trans-unit id="fb391320cf8346ac5c53b8c936b575054a4cdd50" translate="yes" xml:space="preserve">
          <source>LIB</source>
          <target state="translated">LIB</target>
        </trans-unit>
        <trans-unit id="8ebe6b4ea1f79cdf5a0cfe5997e4373110b1513a" translate="yes" xml:space="preserve">
          <source>LIB should only be set at &lt;code&gt;perl Makefile.PL&lt;/code&gt; time but is allowed as a MakeMaker argument. It has the effect of setting both INSTALLPRIVLIB and INSTALLSITELIB to that value regardless any explicit setting of those arguments (or of PREFIX). INSTALLARCHLIB and INSTALLSITEARCH are set to the corresponding architecture subdirectory.</source>
          <target state="translated">LIB solo debe establecerse en el momento de &lt;code&gt;perl Makefile.PL&lt;/code&gt; pero est&amp;aacute; permitido como argumento de MakeMaker. Tiene el efecto de establecer INSTALLPRIVLIB e INSTALLSITELIB en ese valor independientemente de cualquier configuraci&amp;oacute;n expl&amp;iacute;cita de esos argumentos (o de PREFIX). INSTALLARCHLIB e INSTALLSITEARCH se establecen en el subdirectorio de arquitectura correspondiente.</target>
        </trans-unit>
        <trans-unit id="8788c623d0db3031e8b87cadf67d1df4c5a2fb41" translate="yes" xml:space="preserve">
          <source>LIBPERL_A</source>
          <target state="translated">LIBPERL_A</target>
        </trans-unit>
        <trans-unit id="00484abc2f0a64aaebb7808382f0c80f8b800d94" translate="yes" xml:space="preserve">
          <source>LIBPTH, BASE_IMPORT, NLM_VERSION, MPKTOOL, TOOLPATH, BOOT_SYMBOL, NLM_SHORT_NAME, INCLUDE, PATH, MM_NW5_REVISION</source>
          <target state="translated">LIBPTH,BASE_IMPORT,NLM_VERSION,MPKTOOL,TOOLPATH,BOOT_SYMBOL,NLM_SHORT_NAME,INCLUDE,PATH,MM_NW5_REVISION</target>
        </trans-unit>
        <trans-unit id="ceb9c454e341a6406ce1dfc1e42b2e34632e5126" translate="yes" xml:space="preserve">
          <source>LIBS</source>
          <target state="translated">LIBS</target>
        </trans-unit>
        <trans-unit id="6e0ad2b047414107e8ce2f294fa40d216b5b68f9" translate="yes" xml:space="preserve">
          <source>LICENCE</source>
          <target state="translated">LICENCE</target>
        </trans-unit>
        <trans-unit id="0417c3cd20e5957970bf6e0315ba11993f41a4ef" translate="yes" xml:space="preserve">
          <source>LICENCE AND COPYRIGHT</source>
          <target state="translated">LICENCE ET DROIT D'AUTEUR</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">LICENSE</target>
        </trans-unit>
        <trans-unit id="4935e8e440452679bb6e8677598051c98309501a" translate="yes" xml:space="preserve">
          <source>LIFO</source>
          <target state="translated">LIFO</target>
        </trans-unit>
        <trans-unit id="00e15f5838907cd7e1d4b00639d57748e292cb00" translate="yes" xml:space="preserve">
          <source>LIGHTWEIGHT CALLBACKS</source>
          <target state="translated">DES RAPPELS LÉGERS</target>
        </trans-unit>
        <trans-unit id="6a872fa8c01524148478fdbe5a27dd0a23bde93f" translate="yes" xml:space="preserve">
          <source>LIKELY</source>
          <target state="translated">LIKELY</target>
        </trans-unit>
        <trans-unit id="929a3a64284b80f705b148843a13caea7da8d500" translate="yes" xml:space="preserve">
          <source>LIMITATIONS</source>
          <target state="translated">LIMITATIONS</target>
        </trans-unit>
        <trans-unit id="e0e14c87e0e2d089b660f73f34d498e64b436810" translate="yes" xml:space="preserve">
          <source>LIMITATIONS of *-x*</source>
          <target state="translated">LIMITES de *-x</target>
        </trans-unit>
        <trans-unit id="3850674ed5ef7e98d02bcb7884ce26a4ad1f0c16" translate="yes" xml:space="preserve">
          <source>LIMITATIONS of -x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582303292e0d9bb459bbce59d367e726e77b22ef" translate="yes" xml:space="preserve">
          <source>LIMITATIONS of &lt;b&gt;-x&lt;/b&gt;</source>
          <target state="translated">LIMITACIONES de &lt;b&gt;-x&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="83fa9b97f00ca753b1e5690c43dd3d3361c9665b" translate="yes" xml:space="preserve">
          <source>LIMITS</source>
          <target state="translated">LIMITS</target>
        </trans-unit>
        <trans-unit id="528a45acf62927f5e3020d13509848f28121f5ca" translate="yes" xml:space="preserve">
          <source>LINE</source>
          <target state="translated">LINE</target>
        </trans-unit>
        <trans-unit id="0d7f037733ef398e4fa6caee3e4a76955c742eba" translate="yes" xml:space="preserve">
          <source>LINES</source>
          <target state="translated">LINES</target>
        </trans-unit>
        <trans-unit id="245f22e09d9e6429d729e76e192f663a73a52190" translate="yes" xml:space="preserve">
          <source>LINES_LEFT</source>
          <target state="translated">LINES_LEFT</target>
        </trans-unit>
        <trans-unit id="5a777a56deb32bdeb14873f18eb176dd79982214" translate="yes" xml:space="preserve">
          <source>LINKLIST</source>
          <target state="translated">LINKLIST</target>
        </trans-unit>
        <trans-unit id="2868dce7325577845cbfb4e0cec3533ac2b747a5" translate="yes" xml:space="preserve">
          <source>LINKTYPE</source>
          <target state="translated">LINKTYPE</target>
        </trans-unit>
        <trans-unit id="735cf1665d0fd36f4865e4bc7439abe369572e04" translate="yes" xml:space="preserve">
          <source>LIST</source>
          <target state="translated">LIST</target>
        </trans-unit>
        <trans-unit id="ec269b52cf8883c42dea5c960c258385e031be48" translate="yes" xml:space="preserve">
          <source>LIST DATA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c717fe4bbb26a57f5091a39f5ae5c04c8ba67f80" translate="yes" xml:space="preserve">
          <source>LIST OF LANGUAGES</source>
          <target state="translated">LISTE DES LANGUES</target>
        </trans-unit>
        <trans-unit id="7de1e2b32d16e9fef7b2a9299320e7f3351fbed7" translate="yes" xml:space="preserve">
          <source>LIST OF UTILITIES</source>
          <target state="translated">LISTE DES SERVICES PUBLICS</target>
        </trans-unit>
        <trans-unit id="567a6688f397cbb26479212b5e88b04513465d6e" translate="yes" xml:space="preserve">
          <source>LIST-REDUCTION FUNCTIONS</source>
          <target state="translated">LES FONCTIONS DE RÉDUCTION DES LISTES</target>
        </trans-unit>
        <trans-unit id="143295635a11822b74bfc416ad32ab68ac277469" translate="yes" xml:space="preserve">
          <source>LISTENING FOR EVENTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79350be1daad6ac703bf5442efacc2b70bd2d6d8" translate="yes" xml:space="preserve">
          <source>LISTs do automatic interpolation of sublists. That is, when a LIST is evaluated, each element of the list is evaluated in list context, and the resulting list value is interpolated into LIST just as if each individual element were a member of LIST. Thus arrays and hashes lose their identity in a LIST--the list</source>
          <target state="translated">Les LIST font une interpolation automatique des sous-listes.C'est-à-dire que lorsqu'une LIST est évaluée,chaque élément de la liste est évalué dans le contexte de la liste,et la valeur de liste résultante est interpolée dans la LIST tout comme si chaque élément individuel était un membre de la LIST.Ainsi,les tableaux et les hachis perdent leur identité dans une LISTE-la liste</target>
        </trans-unit>
        <trans-unit id="755d87179ae52e75a5bb95a78c2b37c1c06b5cfe" translate="yes" xml:space="preserve">
          <source>LNM$FILE_DEV</source>
          <target state="translated">LNM$FILE_DEV</target>
        </trans-unit>
        <trans-unit id="6747cb39338593bcc94d449a6ee06b08744bc3ce" translate="yes" xml:space="preserve">
          <source>LOADING DRIVERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b95b1479e9e1e6747637c53ec6e7b5b14710300" translate="yes" xml:space="preserve">
          <source>LOCALE</source>
          <target state="translated">LOCALE</target>
        </trans-unit>
        <trans-unit id="ff495344ff0fb9c5d5d9ca658b1dad0e61447a28" translate="yes" xml:space="preserve">
          <source>LOCALE CATEGORIES</source>
          <target state="translated">CATÉGORIES DE LOCALITÉS</target>
        </trans-unit>
        <trans-unit id="169a463b713e3988d9c565945a1d24d03d787111" translate="yes" xml:space="preserve">
          <source>LOCALE PROBLEMS</source>
          <target state="translated">PROBLÈMES LOCAUX</target>
        </trans-unit>
        <trans-unit id="075620a74284e72caa558c43e5ac902b3bd47d6f" translate="yes" xml:space="preserve">
          <source>LOGDIR</source>
          <target state="translated">LOGDIR</target>
        </trans-unit>
        <trans-unit id="39f15a969419d44e933dbe07a4c0bebe3f003b8b" translate="yes" xml:space="preserve">
          <source>LOGGING</source>
          <target state="translated">LOGGING</target>
        </trans-unit>
        <trans-unit id="95b6b6c48c6cb1e24e041085cc38cb73e88d737e" translate="yes" xml:space="preserve">
          <source>LOOSE MATCHES</source>
          <target state="translated">MATCHS PERDUS</target>
        </trans-unit>
        <trans-unit id="7c472534c424a35d726eafe69cf1b120cf34c7c5" translate="yes" xml:space="preserve">
          <source>LPT1</source>
          <target state="translated">LPT1</target>
        </trans-unit>
        <trans-unit id="4d71de40d2ab4755f078c64dc10f3df863c7dc76" translate="yes" xml:space="preserve">
          <source>LPT2</source>
          <target state="translated">LPT2</target>
        </trans-unit>
        <trans-unit id="dd4d7e2da6df8d44c6d4b3d53b6a80f8f29324f4" translate="yes" xml:space="preserve">
          <source>LVRET</source>
          <target state="translated">LVRET</target>
        </trans-unit>
        <trans-unit id="18cd8d5a0349b94405db9dec7298507ccea49b05" translate="yes" xml:space="preserve">
          <source>LaTeX docs</source>
          <target state="translated">Documents LaTeX</target>
        </trans-unit>
        <trans-unit id="a1b829eae747d240a349da9f0a9a29b98303f5a9" translate="yes" xml:space="preserve">
          <source>Label not found for &quot;last %s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f82157ea2c43397258b632846b3564c599e77f" translate="yes" xml:space="preserve">
          <source>Label not found for &quot;next %s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a081b428c42101382e62175975723a17e6430c" translate="yes" xml:space="preserve">
          <source>Label not found for &quot;redo %s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f308ee988ef0e728f295587e6cbde4a2216497cd" translate="yes" xml:space="preserve">
          <source>Lancaster Concensus: &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/lancaster-consensus.md&quot;&gt;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/lancaster-consensus.md&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="f70518aa15c2b8187c80ac13806c15fba56111e6" translate="yes" xml:space="preserve">
          <source>Language Classes</source>
          <target state="translated">Cours de langues</target>
        </trans-unit>
        <trans-unit id="cfb711d350591217fd017e0b7ddd59e362322862" translate="yes" xml:space="preserve">
          <source>Language Extensions and Documentation Tools</source>
          <target state="translated">Extensions linguistiques et outils de documentation</target>
        </trans-unit>
        <trans-unit id="6bd54d34369f11dcd172dcc70f872fcab4fd9483" translate="yes" xml:space="preserve">
          <source>Language Handle Attributes and Internals</source>
          <target state="translated">Attributs et internes de la poignée de langue</target>
        </trans-unit>
        <trans-unit id="c91e4f4c0ce2f8eae1ea5e261c4add9fa7392039" translate="yes" xml:space="preserve">
          <source>Language Specs</source>
          <target state="translated">Spécifications linguistiques</target>
        </trans-unit>
        <trans-unit id="f9d8878de4ae46e5debd26f638420ea68be31544" translate="yes" xml:space="preserve">
          <source>Language classes are what YourProjClass-&amp;gt;get_handle will try to load. It will look for them by taking each language-tag (&lt;b&gt;skipping&lt;/b&gt; it if it doesn't look like a language-tag or locale-tag!), turning it to all lowercase, turning dashes to underscores, and appending it to YourProjClass . &quot;::&quot;. So this:</source>
          <target state="translated">Las clases de idiomas son lo que YourProjClass-&amp;gt; get_handle intentar&amp;aacute; cargar. Los buscar&amp;aacute; tomando cada etiqueta de idioma (&amp;iexcl; &lt;b&gt;salt&amp;aacute;ndola&lt;/b&gt; si no parece una etiqueta de idioma o una etiqueta de configuraci&amp;oacute;n regional!), Convirti&amp;eacute;ndola en min&amp;uacute;sculas, convirtiendo los guiones en guiones bajos y agreg&amp;aacute;ndola a YourProjClass. &quot;::&quot;. As&amp;iacute; que esto:</target>
        </trans-unit>
        <trans-unit id="747c3b7de1d3c3e77b9c7320590e8b1ede8c25e3" translate="yes" xml:space="preserve">
          <source>Language classes may derive from other language classes (although they should have &quot;use</source>
          <target state="translated">Les cours de langue peuvent dériver d'autres cours de langue (bien qu'ils doivent avoir un &quot;usage</target>
        </trans-unit>
        <trans-unit id="a1e10c58f87505ae028c597e6cc528cbbe1058b2" translate="yes" xml:space="preserve">
          <source>Language tags are a formalism, described in RFC 3066 (obsoleting 1766), for declaring what language form (language and possibly dialect) a given chunk of information is in.</source>
          <target state="translated">Les balises de langue sont un formalisme,décrit dans le RFC 3066 (obsolète 1766),pour déclarer sous quelle forme de langue (langue et éventuellement dialecte)se trouve un morceau d'information donné.</target>
        </trans-unit>
        <trans-unit id="97e909840ec23e6aa4c68a221630c55bfbbb900a" translate="yes" xml:space="preserve">
          <source>Language tags are not case-sensitive. en-US, en-us, En-Us, etc., are all the same tag, and denote the same language.</source>
          <target state="translated">Les balises de langue ne sont pas sensibles à la casse.en-US,en-us,En-Us,etc.sont toutes des balises identiques et désignent la même langue.</target>
        </trans-unit>
        <trans-unit id="2041c3756bf5afe1a1cc3301a6ebbbd4f47a0037" translate="yes" xml:space="preserve">
          <source>Language tags are not country codes. In fact, they are often distinct codes, as with language tag ja for Japanese, and ISO 3166 country code &lt;code&gt;.jp&lt;/code&gt; for Japan.</source>
          <target state="translated">Las etiquetas de idioma no son c&amp;oacute;digos de pa&amp;iacute;s. De hecho, a menudo son c&amp;oacute;digos distintos, como la etiqueta de idioma ja para japon&amp;eacute;s y el c&amp;oacute;digo de pa&amp;iacute;s ISO 3166 &lt;code&gt;.jp&lt;/code&gt; para Jap&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6108174a71e0210309b5a122717007cd6591f45e" translate="yes" xml:space="preserve">
          <source>Language tags are not for computer languages.</source>
          <target state="translated">Les balises de langue ne sont pas destinées aux langages informatiques.</target>
        </trans-unit>
        <trans-unit id="6368278c82dd6595f994cb8b61fde8b578ee7f10" translate="yes" xml:space="preserve">
          <source>Language tags are not locale IDs. A locale ID is written with a &quot;_&quot; instead of a &quot;-&quot;, (almost?) always matches &lt;code&gt;&lt;a href=&quot;../../functions/m&quot;&gt;m/^\w\w_\w\w\b/&lt;/a&gt;&lt;/code&gt;, and</source>
          <target state="translated">Las etiquetas de idioma no son ID de configuraci&amp;oacute;n regional. Un ID de configuraci&amp;oacute;n regional se escribe con &quot;_&quot; en lugar de &quot;-&quot;, (&amp;iquest;casi?) Siempre coincide con &lt;code&gt;&lt;a href=&quot;../../functions/m&quot;&gt;m/^\w\w_\w\w\b/&lt;/a&gt;&lt;/code&gt; , y</target>
        </trans-unit>
        <trans-unit id="c3a10dc31440ea548103f890434cb5dc0e0cf98f" translate="yes" xml:space="preserve">
          <source>Language tags are not locale IDs. A locale ID is written with a &quot;_&quot; instead of a &quot;-&quot;, (almost?) always matches &lt;code&gt;m/^\w\w_\w\w\b/&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edaa0c28ca3e32511fbcd5b5f49058ccc534792" translate="yes" xml:space="preserve">
          <source>Language-Specific</source>
          <target state="translated">Language-Specific</target>
        </trans-unit>
        <trans-unit id="21162f096b26204df6588bb5dc28d2f51868c501" translate="yes" xml:space="preserve">
          <source>Large File Support</source>
          <target state="translated">Soporte para archivos grandes</target>
        </trans-unit>
        <trans-unit id="cfd4c46c9150c3e9cafc48d2cf89b769398b7ba2" translate="yes" xml:space="preserve">
          <source>Large language group.</source>
          <target state="translated">Grand groupe linguistique.</target>
        </trans-unit>
        <trans-unit id="68cb5c276851e088e954a75127561094108d7ebb" translate="yes" xml:space="preserve">
          <source>Large numbers of other programmers will be using your code modules.</source>
          <target state="translated">Un grand nombre d'autres programmeurs utiliseront vos modules de code.</target>
        </trans-unit>
        <trans-unit id="aed9d519447abe0e1e87e2be7e3184966a86c56b" translate="yes" xml:space="preserve">
          <source>Larger increments or decrements are handy in those cases where a thread needs to check out or return a number of resources at once.</source>
          <target state="translated">Des augmentations ou des diminutions plus importantes sont pratiques dans les cas où un fil doit vérifier ou renvoyer un certain nombre de ressources à la fois.</target>
        </trans-unit>
        <trans-unit id="fd62837b713bdee00d46e7ce620e1a597b3acf56" translate="yes" xml:space="preserve">
          <source>Larry Wall</source>
          <target state="translated">Larry Wall</target>
        </trans-unit>
        <trans-unit id="d125a04b7cfbc6bf9a0d7e4500f4ff8af7def2b3" translate="yes" xml:space="preserve">
          <source>Larry Wall &amp;lt;larry@wall.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9800616a976bc743bc49de05b3ff6a81a8fed2bf" translate="yes" xml:space="preserve">
          <source>Larry Wall &amp;lt;larry@wall.org&amp;gt;, with the help of oodles of other folks.</source>
          <target state="translated">Larry Wall &amp;lt;larry@wall.org&amp;gt;, con la ayuda de montones de otras personas.</target>
        </trans-unit>
        <trans-unit id="50431f0b84e94e89d59726aa67764d4b5cb64130" translate="yes" xml:space="preserve">
          <source>Larry Wall and others</source>
          <target state="translated">Larry Wall et autres</target>
        </trans-unit>
        <trans-unit id="0fb4b4d75483396b0cb6c4053090cf1353b0f053" translate="yes" xml:space="preserve">
          <source>Larry Wall designed the elegant inherited bootstrap mechanism and implemented the first Perl 5 dynamic loader using it.</source>
          <target state="translated">Larry Wall a conçu l'élégant mécanisme de bootstrap hérité et a mis en œuvre le premier chargeur dynamique Perl 5 qui l'utilise.</target>
        </trans-unit>
        <trans-unit id="49cef125f502490a3eaa452e5063337afd4e5415" translate="yes" xml:space="preserve">
          <source>Larry Wall, Sean M. Burke</source>
          <target state="translated">Larry Wall,Sean M.Burke</target>
        </trans-unit>
        <trans-unit id="cad8518108cca44400e2368862a0f1a16bff95c7" translate="yes" xml:space="preserve">
          <source>Larry has his reasons for each of these things, but he doesn't claim that everyone else's mind works the same as his does.</source>
          <target state="translated">Larry a ses raisons pour chacune de ces choses,mais il ne prétend pas que l'esprit des autres fonctionne de la même façon que le sien.</target>
        </trans-unit>
        <trans-unit id="3e11f8268af6857ace69f95b629b0d80778d0d6d" translate="yes" xml:space="preserve">
          <source>Larry is allowed to change his mind about any matter at a later date, regardless of whether he previously invoked Rule 1.</source>
          <target state="translated">Larry est autorisé à changer d'avis sur toute question à une date ultérieure,qu'il ait ou non précédemment invoqué la règle 1.</target>
        </trans-unit>
        <trans-unit id="e3d699c187f5eebff127e90268deebe55f0277f7" translate="yes" xml:space="preserve">
          <source>Larry is always by definition right about how Perl should behave. This means he has final veto power on the core functionality.</source>
          <target state="translated">Larry a toujours par définition raison sur la façon dont Perl doit se comporter.Cela signifie qu'il dispose d'un droit de veto final sur les fonctionnalités de base.</target>
        </trans-unit>
        <trans-unit id="91247cb31b4e3f24a173a3ed4edb3fbe905e9dfa" translate="yes" xml:space="preserve">
          <source>Larry said &quot;Although the Perl Slogan is</source>
          <target state="translated">Larry a déclaré:&quot;Bien que le Slogan Perl soit</target>
        </trans-unit>
        <trans-unit id="8840809999231d8845f9dcc8eb994457fd02a531" translate="yes" xml:space="preserve">
          <source>Larry sees Perl development along the lines of the US government: there's the Legislature (the porters), the Executive branch (the -pumpking), and the Supreme Court (Larry). The legislature can discuss and submit patches to the executive branch all they like, but the executive branch is free to veto them. Rarely, the Supreme Court will side with the executive branch over the legislature, or the legislature over the executive branch. Mostly, however, the legislature and the executive branch are supposed to get along and work out their differences without impeachment or court cases.</source>
          <target state="translated">Larry voit le développement de Perl sur le modèle du gouvernement américain:il y a le législatif (les porteurs),l'exécutif (le pompage)et la Cour suprême (Larry).La législature peut discuter et soumettre des patchs au pouvoir exécutif autant qu'elle le souhaite,mais le pouvoir exécutif est libre d'y opposer son veto.Il est rare que la Cour suprême se range du côté du pouvoir exécutif plutôt que du pouvoir législatif,ou que le pouvoir législatif plutôt que le pouvoir exécutif.Mais la plupart du temps,le pouvoir législatif et le pouvoir exécutif sont censés s'entendre et régler leurs différends sans mise en accusation ni procès.</target>
        </trans-unit>
        <trans-unit id="ae001311ff213d6955f7360f41d0eb019566259e" translate="yes" xml:space="preserve">
          <source>Lars Dieckow &amp;lt;daxim@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c4e4485ad3dbbdb5b5dd2e9dedc2315a7311d5" translate="yes" xml:space="preserve">
          <source>Last Changed</source>
          <target state="translated">Derniers changements</target>
        </trans-unit>
        <trans-unit id="1210639f474f0d343df95007771fdc202b411de7" translate="yes" xml:space="preserve">
          <source>Last In, First Out. See also &lt;b&gt;FIFO&lt;/b&gt;. A LIFO is usually called a &lt;b&gt;stack&lt;/b&gt;.</source>
          <target state="translated">&amp;Uacute;ltimo en entrar primero en salir. Consulte tambi&amp;eacute;n &lt;b&gt;FIFO&lt;/b&gt; . Un LIFO generalmente se llama &lt;b&gt;pila&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="40830c73142a53064766f6ffa38ec5fccd97ec73" translate="yes" xml:space="preserve">
          <source>Last Updated: Fri, 29 Oct 1999 22:50:30 +0200</source>
          <target state="translated">Dernière mise à jour:Fri,29 Oct 1999 22:50:30 +0200</target>
        </trans-unit>
        <trans-unit id="f1e5fc7462efd81797093d9980b1aa8171197971" translate="yes" xml:space="preserve">
          <source>Last but not least, here are various tips for safer coding. See also &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt; for libc/stdio replacements one should use.</source>
          <target state="translated">Por &amp;uacute;ltimo, pero no menos importante, aqu&amp;iacute; hay varios consejos para una codificaci&amp;oacute;n m&amp;aacute;s segura. Vea tambi&amp;eacute;n &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt; para los reemplazos de libc / stdio que se deben usar.</target>
        </trans-unit>
        <trans-unit id="dceffa1b326ba5ef1523c69acacd202e09a06fa6" translate="yes" xml:space="preserve">
          <source>Last modified 2013-04-29.</source>
          <target state="translated">Dernière modification 2013-04-29.</target>
        </trans-unit>
        <trans-unit id="5c3f1c04106319751d7e999882c029924d60d858" translate="yes" xml:space="preserve">
          <source>Last revised 14-Feb-1996, for Perl 5.002.</source>
          <target state="translated">Dernière révision 14-fév-1996,pour Perl 5.002.</target>
        </trans-unit>
        <trans-unit id="c3eb2ac9f32e61251e1875ad9708ab6315be2573" translate="yes" xml:space="preserve">
          <source>Last revised 8-Oct-2010, for Perl 5.13.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c838bd278b91a142d60ea0e71aa5a59ad40e1552" translate="yes" xml:space="preserve">
          <source>Last update: 2008-10-29</source>
          <target state="translated">Dernière mise à jour:2008-10-29</target>
        </trans-unit>
        <trans-unit id="fc7ec2c58f8d11214b25d3966287144f54470cfe" translate="yes" xml:space="preserve">
          <source>Last update: Tue Apr 26 18:30:55 MDT 2011</source>
          <target state="translated">Dernière mise à jour:Tue Apr 26 18:30:55 MDT 2011</target>
        </trans-unit>
        <trans-unit id="fedbd273e34471c334909a9855d4fede2b18756d" translate="yes" xml:space="preserve">
          <source>Last updated for perl 5.23.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25a330cf94331e783b24031686ddd1e4f1da4ff" translate="yes" xml:space="preserve">
          <source>Last updated: 07 October 2014</source>
          <target state="translated">Dernière mise à jour:07 octobre 2014</target>
        </trans-unit>
        <trans-unit id="e1651fd9e16da0fb6683f8baa5303f215ef932af" translate="yes" xml:space="preserve">
          <source>Last updated: 2012-02-08</source>
          <target state="translated">Dernière mise à jour:2012-02-08</target>
        </trans-unit>
        <trans-unit id="f1b2c64ff3a41edcd2ecadfbbdf23ab6e9aa3f07" translate="yes" xml:space="preserve">
          <source>Last updated: 30 April 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152779e4c8b9d8d930bb573d8f364d8d186f33dd" translate="yes" xml:space="preserve">
          <source>Lastly, the</source>
          <target state="translated">Enfin,la</target>
        </trans-unit>
        <trans-unit id="4d407485e169287b1c2aa3f4a4b85bc45bed7a87" translate="yes" xml:space="preserve">
          <source>Lastly, there is a special method for working under &lt;b&gt;-T&lt;/b&gt; and setuid/gid scripts:</source>
          <target state="translated">Por &amp;uacute;ltimo, hay un m&amp;eacute;todo especial para trabajar con los scripts &lt;b&gt;-T&lt;/b&gt; y setuid / gid:</target>
        </trans-unit>
        <trans-unit id="202e6182477b0bfd7c1ee15e20cf42a59755cdd1" translate="yes" xml:space="preserve">
          <source>Laszlo Molnar,</source>
          <target state="translated">Laszlo Molnar,</target>
        </trans-unit>
        <trans-unit id="526c6b8794fab24bec118be16f23def6a69bab1c" translate="yes" xml:space="preserve">
          <source>Lately, ignoring or actively opposing compatibility with earlier versions of Perl has come into vogue. Sometimes, a change is proposed which wants to usurp syntax which previously had another meaning. Sometimes, a change wants to improve previously-crazy semantics.</source>
          <target state="translated">Últimamente,ignorar o oponerse activamente a la compatibilidad con versiones anteriores de Perl ha entrado en boga.A veces se propone un cambio que quiere usurpar la sintaxis que antes tenía otro significado.A veces,un cambio quiere mejorar la semántica loca anterior.</target>
        </trans-unit>
        <trans-unit id="36e7725e6d39280db73b49ece64538b8d66586a2" translate="yes" xml:space="preserve">
          <source>Later in the life of the object the methods may be queries with get() method and set() method (which accept multiple arguments).</source>
          <target state="translated">Más adelante en la vida del objeto los métodos pueden ser consultas con el método get()y el método set()(que aceptan múltiples argumentos).</target>
        </trans-unit>
        <trans-unit id="6e71bb4c4e3671df8bee4472c56c5267f4268f7f" translate="yes" xml:space="preserve">
          <source>Later invocations of coloralias() with the same ALIAS will override earlier aliases. There is no way to remove an alias.</source>
          <target state="translated">Invocaciones posteriores de coloralias()con el mismo ALIAS anularán los alias anteriores.No hay forma de eliminar un alias.</target>
        </trans-unit>
        <trans-unit id="c58245493d9e35fde84415d863d1963037986377" translate="yes" xml:space="preserve">
          <source>Later on, we'll pass this to Configure through -Dtargetenv</source>
          <target state="translated">Más tarde,pasaremos esto a Configurar a través de -Dtargetenv</target>
        </trans-unit>
        <trans-unit id="f8e3805b10e4c4f4b08c327d5a5b182642f7a406" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; on CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads&quot;&gt;http://search.cpan.org/search?module=threads&lt;/a&gt;</source>
          <target state="translated">&amp;Uacute;ltima versi&amp;oacute;n de &lt;a href=&quot;threads&quot;&gt;hilos&lt;/a&gt; en CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads&quot;&gt;http://search.cpan.org/search?module=threads&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab352e5ac1e025a34124fd8091aaf11aba38a34e" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; on CPAN: &lt;a href=&quot;https://metacpan.org/pod/threads&quot;&gt;https://metacpan.org/pod/threads&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dfbb7924a9e791a0e250e51336f5378e1751eb" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt; on CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads%3A%3Ashared&quot;&gt;http://search.cpan.org/search?module=threads%3A%3Ashared&lt;/a&gt;</source>
          <target state="translated">&amp;Uacute;ltima versi&amp;oacute;n de &lt;a href=&quot;threads/shared&quot;&gt;subprocesos :: compartida&lt;/a&gt; en CPAN: &lt;a href=&quot;http://search.cpan.org/search?module=threads%3A%3Ashared&quot;&gt;http://search.cpan.org/search?module=threads%3A%3Ashared&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9dd3a57a43ed9b942b39841e2da67e396eb27a54" translate="yes" xml:space="preserve">
          <source>Latest version of &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt; on CPAN: &lt;a href=&quot;https://metacpan.org/pod/threads::shared&quot;&gt;https://metacpan.org/pod/threads::shared&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e8cec14c4a568ca92f36bd23fabb426a1d8b2d" translate="yes" xml:space="preserve">
          <source>Latin 1 (ISO 8859-1)</source>
          <target state="translated">Latín 1 (ISO 8859-1)</target>
        </trans-unit>
        <trans-unit id="c5f5bb3b350774d7cda57104c55fb6c82b7ae7d9" translate="yes" xml:space="preserve">
          <source>Latvia</source>
          <target state="translated">Latvia</target>
        </trans-unit>
        <trans-unit id="35bde1b1448a3634844f710f6f0c19bb97cc5c1e" translate="yes" xml:space="preserve">
          <source>Laundering and Detecting Tainted Data</source>
          <target state="translated">Lavado y detección de datos contaminados</target>
        </trans-unit>
        <trans-unit id="467f628abddb4dcd106efd4dcaeb617681eb8f7d" translate="yes" xml:space="preserve">
          <source>Layer allows buffer snooping.</source>
          <target state="translated">La capa permite el espionaje del buffer.</target>
        </trans-unit>
        <trans-unit id="cb8d6c688037b3d7cd03ae365bbe000a64676df9" translate="yes" xml:space="preserve">
          <source>Layer can translate between &quot;\n&quot; and CRLF line ends.</source>
          <target state="translated">La capa puede traducirse entre &quot;\n&quot; y los extremos de la línea CRLF.</target>
        </trans-unit>
        <trans-unit id="b12b05c07cab44e1c8dc0e859b671ac3d7cccd05" translate="yes" xml:space="preserve">
          <source>Layer is line buffered. Write data should be passed to next layer down whenever a &quot;\n&quot; is seen. Any data beyond the &quot;\n&quot; should then be processed.</source>
          <target state="translated">La capa está protegida por una línea.Los datos de escritura deben ser pasados a la siguiente capa cada vez que se vea una &quot;\n&quot;.Cualquier dato más allá de la &quot;\n&quot; debe ser procesado.</target>
        </trans-unit>
        <trans-unit id="63a50a8c52a6d0d048f4fa59a33a9d88e95e80ac" translate="yes" xml:space="preserve">
          <source>Layer is performing Win32-like &quot;\n&quot; mapped to CR,LF for output and CR,LF mapped to &quot;\n&quot; for input. Normally the provided &quot;crlf&quot; layer is the only layer that need bother about this. &lt;code&gt;PerlIO_binmode()&lt;/code&gt; will mess with this flag rather than add/remove layers if the &lt;code&gt;PERLIO_K_CANCRLF&lt;/code&gt; bit is set for the layers class.</source>
          <target state="translated">La capa tiene un rendimiento similar a Win32 &quot;\ n&quot; mapeado a CR, LF para salida y CR, LF mapeado a &quot;\ n&quot; para entrada. Normalmente, la capa &quot;crlf&quot; proporcionada es la &amp;uacute;nica capa que necesita preocuparse por esto. &lt;code&gt;PerlIO_binmode()&lt;/code&gt; esta bandera en lugar de agregar / eliminar capas si el bit &lt;code&gt;PERLIO_K_CANCRLF&lt;/code&gt; est&amp;aacute; configurado para la clase de capas.</target>
        </trans-unit>
        <trans-unit id="eb03ef93aa3ad216c22ac53a17958f564d0c42cd" translate="yes" xml:space="preserve">
          <source>Layer is unbuffered - i.e. write to next layer down should occur for each write to this layer.</source>
          <target state="translated">La capa no está protegida,es decir,la escritura en la siguiente capa debería ocurrir por cada escritura en esta capa.</target>
        </trans-unit>
        <trans-unit id="9f3401294ca5c3ec99fdd44fd405f62db10c762f" translate="yes" xml:space="preserve">
          <source>Layer which calls &lt;code&gt;fread&lt;/code&gt; , &lt;code&gt;fwrite&lt;/code&gt; and &lt;code&gt;fseek&lt;/code&gt; /&lt;code&gt;ftell&lt;/code&gt; etc. Note that as this is &quot;real&quot; stdio it will ignore any layers beneath it and go straight to the operating system via the C library as usual.</source>
          <target state="translated">Capa que llama a &lt;code&gt;fread&lt;/code&gt; , &lt;code&gt;fwrite&lt;/code&gt; y &lt;code&gt;fseek&lt;/code&gt; / &lt;code&gt;ftell&lt;/code&gt; , etc. Tenga en cuenta que, como se trata de un stdio &quot;real&quot;, ignorar&amp;aacute; las capas que se encuentran debajo e ir&amp;aacute; directamente al sistema operativo a trav&amp;eacute;s de la biblioteca C como de costumbre.</target>
        </trans-unit>
        <trans-unit id="433c9dfe2472dbf21d6a258158fca98f65d2907f" translate="yes" xml:space="preserve">
          <source>Layer which calls &lt;code&gt;fread&lt;/code&gt;, &lt;code&gt;fwrite&lt;/code&gt; and &lt;code&gt;fseek&lt;/code&gt;/&lt;code&gt;ftell&lt;/code&gt; etc. Note that as this is &quot;real&quot; stdio it will ignore any layers beneath it and go straight to the operating system via the C library as usual. This layer implements both low level IO and buffering, but is rarely used on modern architectures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f055f18aeadcf43179462eaf15e54d98e16c8b02" translate="yes" xml:space="preserve">
          <source>Layers</source>
          <target state="translated">Layers</target>
        </trans-unit>
        <trans-unit id="1657b47a449f7c4cf8948737db9fde6acf3a60e8" translate="yes" xml:space="preserve">
          <source>Layers are specified with a leading colon by convention. You can specify a stack of multiple layers as a space-separated string. See &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; for more information on the available layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff9f300fa7d1bbc3f849481cc645ec702a3625b" translate="yes" xml:space="preserve">
          <source>Layers can be made available by extension modules. When an unknown layer is encountered the PerlIO code will perform the equivalent of :</source>
          <target state="translated">Las capas se pueden poner a disposición por medio de módulos de extensión.Cuando se encuentra una capa desconocida,el código PerlIO realizará el equivalente a :</target>
        </trans-unit>
        <trans-unit id="0e3178f7991d7264f18bf3f06ccf8bf03e08f4f6" translate="yes" xml:space="preserve">
          <source>Layers in action.</source>
          <target state="translated">Capas en acción.</target>
        </trans-unit>
        <trans-unit id="90a85751546d30690f93cf14e09e26b8d8de391b" translate="yes" xml:space="preserve">
          <source>Layers it makes sense to include in the PERLIO environment variable are briefly summarized below. For more details see &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;.</source>
          <target state="translated">Las capas que tiene sentido incluir en la variable de entorno PERLIO se resumen brevemente a continuaci&amp;oacute;n. Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69114be10292080f3d4afeef56cf245603257cc6" translate="yes" xml:space="preserve">
          <source>Layers vs Disciplines</source>
          <target state="translated">Capas vs Disciplinas</target>
        </trans-unit>
        <trans-unit id="a41c1d3ed9255c2fe23288b7c102a2dc110d982d" translate="yes" xml:space="preserve">
          <source>Lazy people and beginners may now stop reading the manual.</source>
          <target state="translated">Los perezosos y los principiantes pueden dejar de leer el manual.</target>
        </trans-unit>
        <trans-unit id="b9f359f1580c6817c9a64d72d3882cfe9dcbaef9" translate="yes" xml:space="preserve">
          <source>Le Sergent, T. and B. Berthomieu. &quot;Incremental MultiThreaded Garbage Collection on Virtually Shared Memory Architectures&quot; in Memory Management: Proc. of the International Workshop IWMM 92, St. Malo, France, September 1992, Yves Bekkers and Jacques Cohen, eds. Springer, 1992, ISBN 3540-55940-X (real-life thread applications).</source>
          <target state="translated">Le Sergent,T.y B.Berthomieu.&quot;Recolección de basura multihilo incremental en arquitecturas de memoria virtualmente compartidas&quot; en Gestión de la Memoria:Proc.del Taller Internacional IWMM 92,St.Malo,Francia,septiembre de 1992,Yves Bekkers y Jacques Cohen,eds.Springer,1992,ISBN 3540-55940-X (real life thread applications).</target>
        </trans-unit>
        <trans-unit id="bd162d2f93cdcba4f68be85d18fd26ee09a12efb" translate="yes" xml:space="preserve">
          <source>Leading and trailing colons can be used together if you need positional parameter values without the names. Note that in the case below, the &lt;code&gt;PERL_API&lt;/code&gt; params are returned in alphabetical order.</source>
          <target state="translated">Los dos puntos iniciales y finales se pueden usar juntos si necesita valores de par&amp;aacute;metros posicionales sin los nombres. Tenga en cuenta que en el caso siguiente, los &lt;code&gt;PERL_API&lt;/code&gt; se devuelven en orden alfab&amp;eacute;tico.</target>
        </trans-unit>
        <trans-unit id="21aea14ed2f508e6237030730dc68ea8c248a0f7" translate="yes" xml:space="preserve">
          <source>Leading and trailing whitespace is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de4e5c4a9c26aff3dbb9f05745a468eb0274d0" translate="yes" xml:space="preserve">
          <source>Leading and trailing zeros are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46907cff7c02a850b549a727a75b341cfa614b27" translate="yes" xml:space="preserve">
          <source>Leading white space is ignored without warning, as too are any trailing non-digits, such as a decimal point (&lt;a href=&quot;#oct-EXPR&quot;&gt;&lt;code&gt;oct&lt;/code&gt;&lt;/a&gt; only handles non-negative integers, not negative integers or floating point).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19eb901d0541a10b461432e6635be906ecd8d19" translate="yes" xml:space="preserve">
          <source>Leading white space is ignored without warning, as too are any trailing non-digits, such as a decimal point (&lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; only handles non-negative integers, not negative integers or floating point).</source>
          <target state="translated">Los espacios en blanco iniciales se ignoran sin previo aviso, al igual que los n&amp;uacute;meros finales que no sean d&amp;iacute;gitos, como un punto decimal ( &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; solo maneja enteros no negativos, no enteros negativos o coma flotante).</target>
        </trans-unit>
        <trans-unit id="fb2634197a046f8fbd1bb749b3d21bb890485f5f" translate="yes" xml:space="preserve">
          <source>Leading white space is ignored without warning, as too are any trailing non-digits, such as a decimal point (&lt;code&gt;&lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; only handles non-negative integers, not negative integers or floating point).</source>
          <target state="translated">Los espacios en blanco iniciales se ignoran sin previo aviso, al igual que los n&amp;uacute;meros finales que no sean d&amp;iacute;gitos, como un punto decimal ( &lt;code&gt;&lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; solo maneja enteros no negativos, no enteros negativos o coma flotante).</target>
        </trans-unit>
        <trans-unit id="ba3f4ebacb603a1ffae736f19b872df26ac931b0" translate="yes" xml:space="preserve">
          <source>Learn Perl and rewrite it. Seriously, there's no simple converter. Things that are awkward to do in the shell are easy to do in Perl, and this very awkwardness is what would make a shell-&amp;gt;perl converter nigh-on impossible to write. By rewriting it, you'll think about what you're really trying to do, and hopefully will escape the shell's pipeline datastream paradigm, which while convenient for some matters, causes many inefficiencies.</source>
          <target state="translated">Aprenda Perl y vuelva a escribirlo. En serio, no hay un convertidor simple. Las cosas que son inc&amp;oacute;modas de hacer en el shell son f&amp;aacute;ciles de hacer en Perl, y esta misma incomodidad es lo que har&amp;iacute;a que un convertidor shell-&amp;gt; perl casi fuera imposible de escribir. Al reescribirlo, pensar&amp;aacute; en lo que realmente est&amp;aacute; tratando de hacer y, con suerte, podr&amp;aacute; escapar del paradigma de flujo de datos de la tuber&amp;iacute;a del shell, que si bien es conveniente para algunos asuntos, causa muchas ineficiencias.</target>
        </trans-unit>
        <trans-unit id="4dd0a48cec0f53000c96d709bef9efb450bae6d8" translate="yes" xml:space="preserve">
          <source>Leaving out the Notify option usually defaults an SMTP service to its default behavior equivalent to ['FAILURE'] notifications only, but again this may be dependent upon your site's SMTP configuration.</source>
          <target state="translated">Dejando fuera la opción de Notificar,por lo general un servicio de SMTP tiene un comportamiento por defecto equivalente a notificaciones de ['FALLA']solamente,pero nuevamente esto puede depender de la configuración de SMTP de su sitio.</target>
        </trans-unit>
        <trans-unit id="a4c7551b205677232e62bc969aaaea5621b25584" translate="yes" xml:space="preserve">
          <source>Lee Johnson &amp;lt;notfadeaway at btinternet dot com&amp;gt;</source>
          <target state="translated">Lee Johnson &amp;lt;notfadeaway en btinternet punto com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b6a5edc3102ea975638e0ce2bb8f6982f95bead8" translate="yes" xml:space="preserve">
          <source>Left and right padding with any character, creating a new string:</source>
          <target state="translated">Relleno de izquierda y derecha con cualquier personaje,creando una nueva cadena:</target>
        </trans-unit>
        <trans-unit id="7f1c7df67c81bb16bff18c751738160fab5ff982" translate="yes" xml:space="preserve">
          <source>Left and right padding with any character, modifying &lt;code&gt;$text&lt;/code&gt; directly:</source>
          <target state="translated">Relleno izquierdo y derecho con cualquier car&amp;aacute;cter, modificando &lt;code&gt;$text&lt;/code&gt; directamente:</target>
        </trans-unit>
        <trans-unit id="af98dcfaae79ce4ac9aa9fbbe9635687fe2fe178" translate="yes" xml:space="preserve">
          <source>Left offset from pos() to start match at.</source>
          <target state="translated">Desplazamiento a la izquierda de la posición para empezar el partido.</target>
        </trans-unit>
        <trans-unit id="32ff2067f2a9f0deffe08043bfbad0999ed3babf" translate="yes" xml:space="preserve">
          <source>LeftString</source>
          <target state="translated">LeftString</target>
        </trans-unit>
        <trans-unit id="fb74bcaf76999b5ef8dae81b1022d842c093fe10" translate="yes" xml:space="preserve">
          <source>Legacy</source>
          <target state="translated">Legacy</target>
        </trans-unit>
        <trans-unit id="177a7c67030b56d701d66da14735a0847871d1fb" translate="yes" xml:space="preserve">
          <source>Legacy Character Sets</source>
          <target state="translated">Juegos de Personajes Legados</target>
        </trans-unit>
        <trans-unit id="45890076a74f7ba49cb141341bf0a665659f9168" translate="yes" xml:space="preserve">
          <source>Legacy Encodings</source>
          <target state="translated">Codificaciones del legado</target>
        </trans-unit>
        <trans-unit id="ca20c7f742784eaf8c9542c65094bd868679305e" translate="yes" xml:space="preserve">
          <source>Legacy multi byte EBCDIC code pages XXX.</source>
          <target state="translated">Páginas de código EBCDIC multi byte heredadas XXX.</target>
        </trans-unit>
        <trans-unit id="7d1f21ee00bf8431c5da8e1a72603db078d1e391" translate="yes" xml:space="preserve">
          <source>Legacy usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632363f7b0b4709b3208536a8ec83f44895c04cc" translate="yes" xml:space="preserve">
          <source>Legacy wrapper fro &lt;a href=&quot;Test2::EventFacet::Trace&quot;&gt;Test2::EventFacet::Trace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14ba2ec2e45438ad3facc4d4b02bd06eedc0c59" translate="yes" xml:space="preserve">
          <source>Legacy, fixed-width encodings defined by the ISO 10646 standard. UCS-2 is a 16-bit encoding. Unlike UTF-16, UCS-2 is not extensible beyond &lt;code&gt;U+FFFF&lt;/code&gt; , because it does not use surrogates. UCS-4 is a 32-bit encoding, functionally identical to UTF-32 (the difference being that UCS-4 forbids neither surrogates nor code points larger than &lt;code&gt;0x10_FFFF&lt;/code&gt; ).</source>
          <target state="translated">Codificaciones heredadas de ancho fijo definidas por el est&amp;aacute;ndar ISO 10646. UCS-2 es una codificaci&amp;oacute;n de 16 bits. A diferencia de UTF-16, UCS-2 no se puede ampliar m&amp;aacute;s all&amp;aacute; de &lt;code&gt;U+FFFF&lt;/code&gt; , porque no utiliza sustitutos. UCS-4 es una codificaci&amp;oacute;n de 32 bits, funcionalmente id&amp;eacute;ntica a UTF-32 (la diferencia es que UCS-4 no proh&amp;iacute;be ni sustitutos ni puntos de c&amp;oacute;digo mayores que &lt;code&gt;0x10_FFFF&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b6664ed1e448ada62088f03c80e41e23a96a928" translate="yes" xml:space="preserve">
          <source>Legacy, fixed-width encodings defined by the ISO 10646 standard. UCS-2 is a 16-bit encoding. Unlike UTF-16, UCS-2 is not extensible beyond &lt;code&gt;U+FFFF&lt;/code&gt;, because it does not use surrogates. UCS-4 is a 32-bit encoding, functionally identical to UTF-32 (the difference being that UCS-4 forbids neither surrogates nor code points larger than &lt;code&gt;0x10_FFFF&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bd3b0c39f79b172b2c117ae638fd62dd4f1072" translate="yes" xml:space="preserve">
          <source>Legacy, this is currently a no-op that returns 0;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a83ae1dc6e4e324ce120afa5a8e7b91193b805" translate="yes" xml:space="preserve">
          <source>Legal &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt; constructs that match no characters</source>
          <target state="translated">Construcciones legales &lt;code&gt;\p{}&lt;/code&gt; y &lt;code&gt;\P{}&lt;/code&gt; que no coinciden con caracteres</target>
        </trans-unit>
        <trans-unit id="b01926f0986a11c72cf140417a7b70c5868b0797" translate="yes" xml:space="preserve">
          <source>Legal \p{} and \P{} constructs that match no characters</source>
          <target state="translated">Las construcciones legales y las construcciones que no coinciden con ningún personaje...</target>
        </trans-unit>
        <trans-unit id="8b37e0171cc1c8f695fff30ed31b832cbddee2f1" translate="yes" xml:space="preserve">
          <source>Legend of characters above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f35de278fd2499acf694739f13d5aa76297107" translate="yes" xml:space="preserve">
          <source>Leif Eriksen &amp;lt;leif dot eriksen at bigpond dot com&amp;gt;</source>
          <target state="translated">Leif Eriksen &amp;lt;leif dot eriksen en bigpond dot com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6115881c5ecab4a82072aab1fbcafeaf5ae5a302" translate="yes" xml:space="preserve">
          <source>Length of the name.</source>
          <target state="translated">La longitud del nombre.</target>
        </trans-unit>
        <trans-unit id="1deb1eed10d40a0d45e6e2d30e54152b66733959" translate="yes" xml:space="preserve">
          <source>Length to truncate the argument list when the &lt;code&gt;frame&lt;/code&gt; option's bit 4 is set.</source>
          <target state="translated">Longitud para truncar la lista de argumentos cuando se establece el bit 4 de la opci&amp;oacute;n de &lt;code&gt;frame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d1a91bdc1315d2ef3c37c514f4e0b41950b2992" translate="yes" xml:space="preserve">
          <source>Lengths and Widths</source>
          <target state="translated">Largos y anchos</target>
        </trans-unit>
        <trans-unit id="d32b0b56fe2109af2e400ced24b899e2e7e6bed2" translate="yes" xml:space="preserve">
          <source>Leon Timmermans &amp;lt;fawaka@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4d25e02c52538201b9cb795664e476bf2e16bc" translate="yes" xml:space="preserve">
          <source>Leon Timmermans &amp;lt;leont@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c763c85942db32f81cf9ff36bb94bec3c42bb459" translate="yes" xml:space="preserve">
          <source>Let Perldoc check Pod for errors</source>
          <target state="translated">Deja que Perldoc compruebe si hay errores en la cápsula</target>
        </trans-unit>
        <trans-unit id="236e4f11c45d6dc4aeeb3e3ee19570b2cee88f0e" translate="yes" xml:space="preserve">
          <source>Let Perldoc convert Pod to nroff</source>
          <target state="translated">Dejemos que Perldoc convierta a Pod en nroff</target>
        </trans-unit>
        <trans-unit id="974a4ac3dfc20423e93f62bd6d7257d2efff060e" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as ... Pod!</source>
          <target state="translated">Dejemos que Perldoc haga de Pod ...¡Pod!</target>
        </trans-unit>
        <trans-unit id="89789b71272a03c7a7d2242762bf736542d90944" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as RTF</source>
          <target state="translated">Dejemos que Perldoc represente a Pod como RTF</target>
        </trans-unit>
        <trans-unit id="a09176a65c16f1ea87e512ddbd1ebf583706c4be" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as XML</source>
          <target state="translated">Dejemos que Perldoc renderice el Pod como XML</target>
        </trans-unit>
        <trans-unit id="9dd1bef5afa3543070a44bc3e67a86b4a5626d33" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as man pages</source>
          <target state="translated">Dejemos que Perldoc presente a Pod como páginas de hombre</target>
        </trans-unit>
        <trans-unit id="cb573ad7df52482623e8e613fdbfbc5f59abce18" translate="yes" xml:space="preserve">
          <source>Let Perldoc render Pod as plaintext</source>
          <target state="translated">Dejemos que Perldoc presente a Pod como texto claro</target>
        </trans-unit>
        <trans-unit id="d279d6ba36fcd7e038b9dea67ba4516a9df60977" translate="yes" xml:space="preserve">
          <source>Let Perldoc use Tk::Pod to render Pod</source>
          <target state="translated">Dejemos que Perldoc use Tk::Pod para representar a Pod.</target>
        </trans-unit>
        <trans-unit id="757e98b6ce9386f0fb646f3598168b1185dc8359" translate="yes" xml:space="preserve">
          <source>Let it be noted that the flakiness of indirect filehandles is not related to whether they're strings, typeglobs, objects, or anything else. It's the syntax of the fundamental operators. Playing the object game doesn't help you at all here.</source>
          <target state="translated">Cabe señalar que la fragilidad de los mangos de archivos indirectos no está relacionada con si son cuerdas,glóbulos blancos,objetos o cualquier otra cosa.Es la sintaxis de los operadores fundamentales.Jugar al juego de los objetos no te ayuda en nada aquí.</target>
        </trans-unit>
        <trans-unit id="1fe958b2a6ee1393677c318cb2bd2d9b92f2cd48" translate="yes" xml:space="preserve">
          <source>Let it be stressed that</source>
          <target state="translated">Cabe destacar que</target>
        </trans-unit>
        <trans-unit id="b48514691c5b46e8297541220211ccc8b070316c" translate="yes" xml:space="preserve">
          <source>Let the index expire after how many days?</source>
          <target state="translated">¿Dejar que el índice expire después de cuántos días?</target>
        </trans-unit>
        <trans-unit id="c1338ab2b041d88118e285278d063d0f4210f6e9" translate="yes" xml:space="preserve">
          <source>Let us now discuss Unicode character classes, most usually called &quot;character properties&quot;. These are represented by the &lt;code&gt;\p{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; escape sequence. The negation of this is &lt;code&gt;\P{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt;. For example, to match lower and uppercase characters,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6104cb2c1f6570ab357e214a9780db2e76a15675" translate="yes" xml:space="preserve">
          <source>Let us now discuss Unicode character classes, most usually called &quot;character properties&quot;. These are represented by the &lt;code&gt;\p{name}&lt;/code&gt; escape sequence. Closely associated is the &lt;code&gt;\P{name}&lt;/code&gt; property, which is the negation of the &lt;code&gt;\p{name}&lt;/code&gt; one. For example, to match lower and uppercase characters,</source>
          <target state="translated">Analicemos ahora las clases de caracteres Unicode, normalmente llamadas &quot;propiedades de los caracteres&quot;. Estos est&amp;aacute;n representados por la secuencia de escape &lt;code&gt;\p{name}&lt;/code&gt; . Estrechamente asociada est&amp;aacute; la propiedad &lt;code&gt;\P{name}&lt;/code&gt; , que es la negaci&amp;oacute;n de la &lt;code&gt;\p{name}&lt;/code&gt; . Por ejemplo, para hacer coincidir caracteres en may&amp;uacute;sculas y min&amp;uacute;sculas,</target>
        </trans-unit>
        <trans-unit id="d5b865b005185fbf91c141118661a5d11906d96e" translate="yes" xml:space="preserve">
          <source>Let's also fix the MANIFEST file so that it accurately reflects the contents of our extension. The single line that says &quot;mylib&quot; should be replaced by the following three lines:</source>
          <target state="translated">También vamos a arreglar el archivo MANIFEST para que refleje con precisión el contenido de nuestra extensión.La única línea que dice &quot;mylib&quot; debe ser reemplazada por las siguientes tres líneas:</target>
        </trans-unit>
        <trans-unit id="f577dbeceee6187e31fa08c5d2d55b7b25ccea26" translate="yes" xml:space="preserve">
          <source>Let's assume that we have a package &lt;code&gt;Cool::Foo&lt;/code&gt; , which includes &lt;code&gt;Cool::Foo&lt;/code&gt; and &lt;code&gt;Cool::Bar&lt;/code&gt; modules each having a separate XS file. First we use the following</source>
          <target state="translated">Supongamos que tenemos un paquete &lt;code&gt;Cool::Foo&lt;/code&gt; , que incluye los m&amp;oacute;dulos &lt;code&gt;Cool::Foo&lt;/code&gt; y &lt;code&gt;Cool::Bar&lt;/code&gt; cada uno con un archivo XS separado. Primero usamos lo siguiente</target>
        </trans-unit>
        <trans-unit id="f9cbac3ad4b48c1f15258c105ba2e7521b56e827" translate="yes" xml:space="preserve">
          <source>Let's assume that we have a package &lt;code&gt;Cool::Foo&lt;/code&gt;, which includes &lt;code&gt;Cool::Foo&lt;/code&gt; and &lt;code&gt;Cool::Bar&lt;/code&gt; modules each having a separate XS file. First we use the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0ca95dec9c2d9636bc8d5032b2d5f394a81699" translate="yes" xml:space="preserve">
          <source>Let's begin by looking a simple scalar which is holding a string.</source>
          <target state="translated">Empecemos mirando un simple escalar que está sosteniendo una cuerda.</target>
        </trans-unit>
        <trans-unit id="bf0b81e7623e4177f0bbf011b090062ef49e50b2" translate="yes" xml:space="preserve">
          <source>Let's consider how different regexps would match &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; :</source>
          <target state="translated">Consideremos c&amp;oacute;mo diferentes expresiones regulares coincidir&amp;iacute;an con &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6aca9f9e3f0c9c3d03f0d9c58efc7677ff8a8ff8" translate="yes" xml:space="preserve">
          <source>Let's consider how different regexps would match &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df805a589a3384de86f5cf73ad97a197cc80b2b6" translate="yes" xml:space="preserve">
          <source>Let's consider what happens when the filtered code includes another module with use:</source>
          <target state="translated">Consideremos lo que sucede cuando el código filtrado incluye otro módulo con uso:</target>
        </trans-unit>
        <trans-unit id="ae779227ca7a97ab41c0486c107dd88686a00384" translate="yes" xml:space="preserve">
          <source>Let's create a TCP server on &lt;code&gt;localhost:3333&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bb45ed6a20ca29516eecb8c27b4f1a78faa8d9" translate="yes" xml:space="preserve">
          <source>Let's edit the .xs file by adding this to the end of the file:</source>
          <target state="translated">Editamos el archivo .xs añadiendo esto al final del archivo:</target>
        </trans-unit>
        <trans-unit id="f7e0018c031b17ac0ce35fd9db664c3f00e8a38b" translate="yes" xml:space="preserve">
          <source>Let's examine the cogs of this byte mill, one by one. There's the &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; call, creating the items we intend to stuff into the &lt;code&gt;$env&lt;/code&gt; buffer: to each key (in &lt;code&gt;$_&lt;/code&gt; ) it adds the &lt;code&gt;=&lt;/code&gt; separator and the hash entry value. Each triplet is packed with the template code sequence &lt;code&gt;A*A*Z*&lt;/code&gt; that is repeated according to the number of keys. (Yes, that's what the &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; function returns in scalar context.) To get the very last null byte, we add a &lt;code&gt;0&lt;/code&gt; at the end of the &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; list, to be packed with &lt;code&gt;C&lt;/code&gt; . (Attentive readers may have noticed that we could have omitted the 0.)</source>
          <target state="translated">Examinemos los engranajes de este molino de bytes, uno por uno. Est&amp;aacute; la llamada al &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; a , creando los elementos que pretendemos meter en el b&amp;uacute;fer &lt;code&gt;$env&lt;/code&gt; : a cada clave (en &lt;code&gt;$_&lt;/code&gt; ) agrega el separador &lt;code&gt;=&lt;/code&gt; y el valor de entrada hash. Cada triplete est&amp;aacute; empaquetado con la secuencia de c&amp;oacute;digo de plantilla &lt;code&gt;A*A*Z*&lt;/code&gt; que se repite de acuerdo con el n&amp;uacute;mero de teclas. (S&amp;iacute;, eso es lo que las &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; funci&amp;oacute;n devuelve en contexto escalar.) Para obtener el &amp;uacute;ltimo byte nulo, se a&amp;ntilde;ade un &lt;code&gt;0&lt;/code&gt; al final del &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; la lista, estar lleno de &lt;code&gt;C&lt;/code&gt; . (Los lectores atentos pueden haber notado que podr&amp;iacute;amos haber omitido el 0).</target>
        </trans-unit>
        <trans-unit id="03dd34b9bc34d0893db5fe1238852061dbc9990c" translate="yes" xml:space="preserve">
          <source>Let's examine the cogs of this byte mill, one by one. There's the &lt;code&gt;map&lt;/code&gt; call, creating the items we intend to stuff into the &lt;code&gt;$env&lt;/code&gt; buffer: to each key (in &lt;code&gt;$_&lt;/code&gt;) it adds the &lt;code&gt;=&lt;/code&gt; separator and the hash entry value. Each triplet is packed with the template code sequence &lt;code&gt;A*A*Z*&lt;/code&gt; that is repeated according to the number of keys. (Yes, that's what the &lt;code&gt;keys&lt;/code&gt; function returns in scalar context.) To get the very last null byte, we add a &lt;code&gt;0&lt;/code&gt; at the end of the &lt;code&gt;pack&lt;/code&gt; list, to be packed with &lt;code&gt;C&lt;/code&gt;. (Attentive readers may have noticed that we could have omitted the 0.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e554ae494be1d13390f7359c0d05574c54b38a5" translate="yes" xml:space="preserve">
          <source>Let's examine the whole implementation, for practice:</source>
          <target state="translated">Examinemos toda la implementación,para la práctica:</target>
        </trans-unit>
        <trans-unit id="cb0a55a99d6403d9b27402fcdfbf4d6ed2e005f9" translate="yes" xml:space="preserve">
          <source>Let's explore this feature a little more. We'll begin with the equivalent of</source>
          <target state="translated">Exploremos esta característica un poco más.Empezaremos con el equivalente a</target>
        </trans-unit>
        <trans-unit id="ebfb13b002928ab00b844746320f412762e65aa3" translate="yes" xml:space="preserve">
          <source>Let's give it a try:</source>
          <target state="translated">Vamos a intentarlo:</target>
        </trans-unit>
        <trans-unit id="4e14ae2cc2c4249d7ae1307778537f0e17717e46" translate="yes" xml:space="preserve">
          <source>Let's have a look at how Perl sees &lt;code&gt;$a = $b + $c&lt;/code&gt; :</source>
          <target state="translated">Echemos un vistazo a c&amp;oacute;mo perl ve &lt;code&gt;$a = $b + $c&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6bcf594dd87bbdba596aaad50a05456d93f5c880" translate="yes" xml:space="preserve">
          <source>Let's have a look at how Perl sees &lt;code&gt;$a = $b + $c&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e928f3f516e4f40543bf011e7476bdaffeba6904" translate="yes" xml:space="preserve">
          <source>Let's look at another TCP client. This one connects to the TCP &quot;time&quot; service on a number of different machines and shows how far their clocks differ from the system on which it's being run:</source>
          <target state="translated">Veamos otro cliente TCP.Este se conecta al servicio de &quot;tiempo&quot; de TCP en varias máquinas diferentes y muestra hasta qué punto sus relojes difieren del sistema en el que se está ejecutando:</target>
        </trans-unit>
        <trans-unit id="0bfde5091a0fdc4b1dcc0dd94b94093ffcfd6f13" translate="yes" xml:space="preserve">
          <source>Let's look at each in turn, using as an example a tie class for scalars that allows the user to do something like:</source>
          <target state="translated">Veamos cada una de ellas por separado,usando como ejemplo una clase de corbata para escalares que permite al usuario hacer algo como:</target>
        </trans-unit>
        <trans-unit id="8c38883dc5f76f55aab6aa025aff159c68fa3911" translate="yes" xml:space="preserve">
          <source>Let's look at each of these possible constructs in detail. There are separate sections on each of the following:</source>
          <target state="translated">Veamos cada una de estas posibles construcciones en detalle.Hay secciones separadas en cada una de las siguientes:</target>
        </trans-unit>
        <trans-unit id="ad30ae9725c85002b6831ea9730f9076d479a5c8" translate="yes" xml:space="preserve">
          <source>Let's look at each of these principles in depth.</source>
          <target state="translated">Veamos cada uno de estos principios en profundidad.</target>
        </trans-unit>
        <trans-unit id="176db7a51355c5004c1f239aa8667a05811318e4" translate="yes" xml:space="preserve">
          <source>Let's look at the example above, but with minimal quantifiers:</source>
          <target state="translated">Veamos el ejemplo anterior,pero con mínimos cuantificadores:</target>
        </trans-unit>
        <trans-unit id="44d6bf690bfe89fee660e282315649dfc02c909f" translate="yes" xml:space="preserve">
          <source>Let's make a quick object and x-plode it, first we'll start the debugger: it wants some form of input from STDIN, so we give it something non-committal, a zero:</source>
          <target state="translated">Hagamos un objeto rápido y hagamos una explosión X,primero iniciaremos el depurador:quiere alguna forma de entrada de STDIN,así que le damos algo no vinculante,un cero:</target>
        </trans-unit>
        <trans-unit id="8c36a08a96367b239dd26ec1d8f04af50262a733" translate="yes" xml:space="preserve">
          <source>Let's say you'd like your Perl program to process data stored in a nearby directory called &lt;code&gt;unsorted&lt;/code&gt;, which contains a number of textfiles. You'd also like your program to sort all the contents from these files into a single, alphabetically sorted list of unique lines before it starts processing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af4365a6067ebec1d91261e67cfd455affae6b4" translate="yes" xml:space="preserve">
          <source>Let's say your application is a server that will occasionally run Perl code from some arbitrary file. Your server has no way of knowing what code it's going to run. Very dangerous.</source>
          <target state="translated">Digamos que su aplicación es un servidor que ocasionalmente ejecutará código Perl desde algún archivo arbitrario.Tu servidor no tiene forma de saber qué código va a ejecutar.Es muy peligroso.</target>
        </trans-unit>
        <trans-unit id="4d890463be6280c78f6b7f6a985632f09c2fa90e" translate="yes" xml:space="preserve">
          <source>Let's see a quick example of how all this is useful.</source>
          <target state="translated">Veamos un ejemplo rápido de cómo todo esto es útil.</target>
        </trans-unit>
        <trans-unit id="e32a2ed9f3b04c47c03460e3d9853725a7d0f999" translate="yes" xml:space="preserve">
          <source>Let's see what &lt;code&gt;Benchmark&lt;/code&gt; makes of this:</source>
          <target state="translated">Veamos qu&amp;eacute; hace &lt;code&gt;Benchmark&lt;/code&gt; con esto:</target>
        </trans-unit>
        <trans-unit id="405776f1b44151a8af53d3cf919e2d8b537db4ed" translate="yes" xml:space="preserve">
          <source>Let's start in the middle, at line 4. This is a BINOP, a binary operator, which is at location &lt;code&gt;0x8179828&lt;/code&gt; . The specific operator in question is &lt;code&gt;sassign&lt;/code&gt; - scalar assignment - and you can find the code which implements it in the function &lt;code&gt;pp_sassign&lt;/code&gt; in</source>
          <target state="translated">Comencemos en el medio, en la l&amp;iacute;nea 4. Este es un BINOP, un operador binario, que est&amp;aacute; en la ubicaci&amp;oacute;n &lt;code&gt;0x8179828&lt;/code&gt; . El operador espec&amp;iacute;fico en cuesti&amp;oacute;n es &lt;code&gt;sassign&lt;/code&gt; - asignaci&amp;oacute;n escalar - y puede encontrar el c&amp;oacute;digo que lo implementa en la funci&amp;oacute;n &lt;code&gt;pp_sassign&lt;/code&gt; in</target>
        </trans-unit>
        <trans-unit id="c82eef57c73c123759da862922f036bf0665286b" translate="yes" xml:space="preserve">
          <source>Let's start in the middle, at line 4. This is a BINOP, a binary operator, which is at location &lt;code&gt;0x8179828&lt;/code&gt;. The specific operator in question is &lt;code&gt;sassign&lt;/code&gt; - scalar assignment - and you can find the code which implements it in the function &lt;code&gt;pp_sassign&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1d4b156d0cb946936473b6a08e0d57dc7fd23f" translate="yes" xml:space="preserve">
          <source>Let's start with the second line. It says that the uppercase of code point 97 is 65; or &lt;code&gt;&lt;a href=&quot;../functions/uc&quot;&gt;uc(&quot;a&quot;)&lt;/a&gt;&lt;/code&gt; == &quot;A&quot;. But the line is for the entire range of code points 97 through 122. To get the mapping for any code point in this range, you take the offset it has from the beginning code point of the range, and add that to the mapping for that first code point. So, the mapping for 122 (&quot;z&quot;) is derived by taking the offset of 122 from 97 (=25) and adding that to 65, yielding 90 (&quot;z&quot;). Likewise for everything in between.</source>
          <target state="translated">Empecemos por la segunda l&amp;iacute;nea. Dice que la may&amp;uacute;scula del c&amp;oacute;digo 97 es 65; o &lt;code&gt;&lt;a href=&quot;../functions/uc&quot;&gt;uc(&quot;a&quot;)&lt;/a&gt;&lt;/code&gt; == &quot;A&quot;. Pero la l&amp;iacute;nea es para todo el rango de puntos de c&amp;oacute;digo 97 a 122. Para obtener el mapeo para cualquier punto de c&amp;oacute;digo en este rango, tome el desplazamiento que tiene desde el punto de c&amp;oacute;digo inicial del rango y agr&amp;eacute;guelo al mapeo para ese primer punto de c&amp;oacute;digo. Por lo tanto, el mapeo para 122 (&quot;z&quot;) se deriva tomando el desplazamiento de 122 de 97 (= 25) y sum&amp;aacute;ndolo a 65, lo que da 90 (&quot;z&quot;). Lo mismo ocurre con todo lo dem&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="283878194b8e2d4159d246c8407adfc9545545e1" translate="yes" xml:space="preserve">
          <source>Let's start with the second line. It says that the uppercase of code point 97 is 65; or &lt;code&gt;uc(&quot;a&quot;)&lt;/code&gt; == &quot;A&quot;. But the line is for the entire range of code points 97 through 122. To get the mapping for any code point in this range, you take the offset it has from the beginning code point of the range, and add that to the mapping for that first code point. So, the mapping for 122 (&quot;z&quot;) is derived by taking the offset of 122 from 97 (=25) and adding that to 65, yielding 90 (&quot;z&quot;). Likewise for everything in between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0880854fa8770ea11a4efe4579463972aa5ae537" translate="yes" xml:space="preserve">
          <source>Let's suppose you have some weird Martian encoding where pairs of ASCII uppercase letters encode single Martian letters (i.e. the two bytes &quot;CV&quot; make a single Martian letter, as do the two bytes &quot;SG&quot;, &quot;VS&quot;, &quot;XX&quot;, etc.). Other bytes represent single characters, just like ASCII.</source>
          <target state="translated">Supongamos que tienes una extraña codificación marciana en la que pares de letras mayúsculas ASCII codifican letras marcianas individuales (es decir,los dos bytes &quot;CV&quot; hacen una sola letra marciana,al igual que los dos bytes &quot;SG&quot;,&quot;VS&quot;,&quot;XX&quot;,etc.).Otros bytes representan caracteres individuales,como el ASCII.</target>
        </trans-unit>
        <trans-unit id="8f09fe13c85ec276cd87ab04a04d40aac9612c6e" translate="yes" xml:space="preserve">
          <source>Let's suppose you've got to read in a data file like this:</source>
          <target state="translated">Supongamos que tienes que leer en un archivo de datos como este:</target>
        </trans-unit>
        <trans-unit id="2f7c544be1b70356d2951611060b9932dadf6ea2" translate="yes" xml:space="preserve">
          <source>Let's take a look at a portion of the .c file created for our extension. The file name is Mytest.c:</source>
          <target state="translated">Echemos un vistazo a una parte del archivo .c creado para nuestra extensión.El nombre del archivo es Mytest.c:</target>
        </trans-unit>
        <trans-unit id="ce5f83676281dd1446f1a5a503aee374bc369bcc" translate="yes" xml:space="preserve">
          <source>Let's take a look at the same program using a different profiler: &lt;code&gt;Devel::Profiler&lt;/code&gt; , a drop-in Perl-only replacement for &lt;code&gt;Devel::DProf&lt;/code&gt; . The usage is very slightly different in that instead of using the special &lt;code&gt;-d:&lt;/code&gt; flag, you pull &lt;code&gt;Devel::Profiler&lt;/code&gt; in directly as a module using &lt;code&gt;-M&lt;/code&gt; .</source>
          <target state="translated">Echemos un vistazo al mismo programa usando un generador de perfiles diferente: &lt;code&gt;Devel::Profiler&lt;/code&gt; , un reemplazo &lt;code&gt;Devel::DProf&lt;/code&gt; Perl para Devel :: DProf . El uso es ligeramente diferente en el sentido de que en lugar de usar la bandera especial &lt;code&gt;-d:&lt;/code&gt; , usted introduce &lt;code&gt;Devel::Profiler&lt;/code&gt; directamente como un m&amp;oacute;dulo usando &lt;code&gt;-M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51d206f459af5ffe821cbc3901dfba71c7b8ef1d" translate="yes" xml:space="preserve">
          <source>Let's take a look at the same program using a different profiler: &lt;code&gt;Devel::Profiler&lt;/code&gt;, a drop-in Perl-only replacement for &lt;code&gt;Devel::DProf&lt;/code&gt;. The usage is very slightly different in that instead of using the special &lt;code&gt;-d:&lt;/code&gt; flag, you pull &lt;code&gt;Devel::Profiler&lt;/code&gt; in directly as a module using &lt;code&gt;-M&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230698ed5211b94950bbc39ebf4a2cd8603f3243" translate="yes" xml:space="preserve">
          <source>Let's take a simple patch from start to finish.</source>
          <target state="translated">Tomemos un simple parche de principio a fin.</target>
        </trans-unit>
        <trans-unit id="2b003d41c47da4c513944208b256541b446c8a71" translate="yes" xml:space="preserve">
          <source>Let's take an example of manipulating a PV, from &lt;code&gt;sv_catpvn&lt;/code&gt; , in</source>
          <target state="translated">Tomemos un ejemplo de manipulaci&amp;oacute;n de un PV, de &lt;code&gt;sv_catpvn&lt;/code&gt; , en</target>
        </trans-unit>
        <trans-unit id="f81a1d5166b525293109d732fb53d9a2e8fb4f86" translate="yes" xml:space="preserve">
          <source>Let's take an example of manipulating a PV, from &lt;code&gt;sv_catpvn&lt;/code&gt;, in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3c67f07cd4da0245ca6a99400a337a71fe4ec4" translate="yes" xml:space="preserve">
          <source>Let's take an example. Suppose you're reading in data from a local format into a hash-of-hashes in Perl, turning that into a tree, walking the tree and then piping each node to an Acme Transmogrifier Server.</source>
          <target state="translated">Tomemos un ejemplo.Supongamos que estás leyendo datos de un formato local en un hash-of-hashes en Perl,convirtiéndolo en un árbol,caminando por el árbol y luego canalizando cada nodo a un Servidor Transmogrificador Acme.</target>
        </trans-unit>
        <trans-unit id="08e16151674f7f96adbcc23b02310179ef6623cd" translate="yes" xml:space="preserve">
          <source>Let's take the following test directory structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39fd63d744cf93b2616319a85e2d2154efb3e45" translate="yes" xml:space="preserve">
          <source>Let's you write:</source>
          <target state="translated">Vamos a escribir:</target>
        </trans-unit>
        <trans-unit id="2f17a5ca119319a7ec877e7a949710676dc887eb" translate="yes" xml:space="preserve">
          <source>Level 1 - Basic Unicode Support</source>
          <target state="translated">Nivel 1-Soporte básico de Unicode</target>
        </trans-unit>
        <trans-unit id="0de802e5c110593513199ad6be14e0d3e4934cee" translate="yes" xml:space="preserve">
          <source>Level 2 - Extended Unicode Support</source>
          <target state="translated">Nivel 2-Soporte Unicode extendido</target>
        </trans-unit>
        <trans-unit id="bddac528f4922054293682b3a34528809353679b" translate="yes" xml:space="preserve">
          <source>Level 3 - Tailored Support</source>
          <target state="translated">Nivel 3-Apoyo a medida</target>
        </trans-unit>
        <trans-unit id="af642ef849c39f332561002d12526780f4e80e2e" translate="yes" xml:space="preserve">
          <source>Level of verbosity. By default, the debugger leaves your exceptions and warnings alone, because altering them can break correctly running programs. It will attempt to print a message when uncaught INT, BUS, or SEGV signals arrive. (But see the mention of signals in &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt; below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b7cf7750bfaac558f7db0f6b00074662dc6814" translate="yes" xml:space="preserve">
          <source>Level of verbosity. By default, the debugger leaves your exceptions and warnings alone, because altering them can break correctly running programs. It will attempt to print a message when uncaught INT, BUS, or SEGV signals arrive. (But see the mention of signals in &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt; below.)</source>
          <target state="translated">Nivel de verbosidad. De forma predeterminada, el depurador deja sus excepciones y advertencias solas, porque alterarlas puede interrumpir la ejecuci&amp;oacute;n correcta de programas. Intentar&amp;aacute; imprimir un mensaje cuando lleguen se&amp;ntilde;ales INT, BUS o SEGV no detectadas. (Pero vea la menci&amp;oacute;n de se&amp;ntilde;ales en &lt;a href=&quot;#BUGS&quot;&gt;ERRORES a&lt;/a&gt; continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="ed47f098118b3a4908065115144a054c9afe75d6" translate="yes" xml:space="preserve">
          <source>Levels</source>
          <target state="translated">Levels</target>
        </trans-unit>
        <trans-unit id="dd4d01b82f363523e943497a1acd58ad122c1d74" translate="yes" xml:space="preserve">
          <source>Lewis, Bill, and Daniel J. Berg. Multithreaded Programming with Pthreads. Prentice Hall, 1997, ISBN 0-13-443698-9 (a well-written introduction to threads).</source>
          <target state="translated">Lewis,Bill y Daniel J.Berg.Programación multihilo con Pthreads.Prentice Hall,1997,ISBN 0-13-443698-9 (una introducción bien escrita a los hilos).</target>
        </trans-unit>
        <trans-unit id="0130807d4961ca028150a643b43fa9d3af268eec" translate="yes" xml:space="preserve">
          <source>Lexer interface</source>
          <target state="translated">Interfaz de Lexer</target>
        </trans-unit>
        <trans-unit id="7c46e8b2c6a1b67615cc4a28b1803b6611e259c0" translate="yes" xml:space="preserve">
          <source>Lexical (my) variables declared in scopes external to a subroutine appear in code2ref output text as package variables. This is a tricky problem, as perl has no native facility for referring to a lexical variable defined within a different scope, although &lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt; is a good start.</source>
          <target state="translated">Las variables l&amp;eacute;xicas (my) declaradas en &amp;aacute;mbitos externos a una subrutina aparecen en el texto de salida de code2ref como variables de paquete. Este es un problema delicado, ya que perl no tiene una funci&amp;oacute;n nativa para referirse a una variable l&amp;eacute;xica definida dentro de un &amp;aacute;mbito diferente, aunque &lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt; es un buen comienzo.</target>
        </trans-unit>
        <trans-unit id="2a2592394276034b7da48f012e3e1835635e7937" translate="yes" xml:space="preserve">
          <source>Lexical (my) variables declared in scopes external to a subroutine appear in coderef2text output text as package variables. This is a tricky problem, as perl has no native facility for referring to a lexical variable defined within a different scope, although &lt;a href=&quot;padwalker&quot;&gt;PadWalker&lt;/a&gt; is a good start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21795cace48f4382f41c503a0895c632d1557532" translate="yes" xml:space="preserve">
          <source>Lexical Subroutines</source>
          <target state="translated">Subrutinas léxicas</target>
        </trans-unit>
        <trans-unit id="91090443b78c24e5208fa0b7749049adce1d8581" translate="yes" xml:space="preserve">
          <source>Lexical effect</source>
          <target state="translated">Efecto léxico</target>
        </trans-unit>
        <trans-unit id="10e46358434f33f5da4b481844bfbc427a1eaf46" translate="yes" xml:space="preserve">
          <source>Lexical scopes of control structures are not bounded precisely by the braces that delimit their controlled blocks; control expressions are part of that scope, too. Thus in the loop</source>
          <target state="translated">Los alcances léxicos de las estructuras de control no están delimitados con precisión por los tirantes que delimitan sus bloques controlados;las expresiones de control también forman parte de ese alcance.Por lo tanto,en el bucle</target>
        </trans-unit>
        <trans-unit id="c32019b3ed41f9870148e7d8a8bcc91664cf5db8" translate="yes" xml:space="preserve">
          <source>Lexical subroutines are only available under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'lexical_subs'&lt;/code&gt; pragma, which produces a warning unless the &quot;experimental::lexical_subs&quot; warnings category is disabled.</source>
          <target state="translated">Las subrutinas l&amp;eacute;xicas solo est&amp;aacute;n disponibles bajo la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'lexical_subs'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso del&lt;/a&gt; pragma 'lexical_subs' , que produce una advertencia a menos que la categor&amp;iacute;a de advertencias &quot;experimental :: lexical_subs&quot; est&amp;eacute; desactivada.</target>
        </trans-unit>
        <trans-unit id="63259d01172ac59370a7ece5661c26923725e28e" translate="yes" xml:space="preserve">
          <source>Lexical variable introduced (declared with my()) for the first time.</source>
          <target state="translated">Variable léxica introducida (declarada con mi())por primera vez.</target>
        </trans-unit>
        <trans-unit id="6bec4b7b4f94bd2a84719ee4041560ade2de4cd8" translate="yes" xml:space="preserve">
          <source>Lexical variables (declared with &quot;my&quot;) are not visible within a format unless the format is declared within the scope of the lexical variable.</source>
          <target state="translated">Las variables léxicas (declaradas con &quot;mi&quot;)no son visibles dentro de un formato a menos que el formato se declare dentro del ámbito de la variable léxica.</target>
        </trans-unit>
        <trans-unit id="56e8fa65a6460263a21b0d0b067830070ec69c2a" translate="yes" xml:space="preserve">
          <source>Lexical warnings get around these limitations by allowing finer control over where warnings can or can't be tripped.</source>
          <target state="translated">Las advertencias léxicas sortean estas limitaciones permitiendo un control más fino sobre dónde pueden o no pueden dispararse las advertencias.</target>
        </trans-unit>
        <trans-unit id="dfa37e8913139b1f0a81171648bb039460ba6c8c" translate="yes" xml:space="preserve">
          <source>Lexically control overloading</source>
          <target state="translated">Lógicamente controlar la sobrecarga</target>
        </trans-unit>
        <trans-unit id="d71329c73390ebdefc7d3045a64e73de047c01c2" translate="yes" xml:space="preserve">
          <source>Lexing code (whether in the Perl core or not) moves this pointer past the characters that it consumes. It is also expected to perform some bookkeeping whenever a newline character is consumed. This movement can be more conveniently performed by the function &lt;a href=&quot;#lex_read_to&quot;&gt;&quot;lex_read_to&quot;&lt;/a&gt;, which handles newlines appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23a9b3c648b4ba0282c9679b9e53d7ed27aaf5d" translate="yes" xml:space="preserve">
          <source>Lexing code (whether in the Perl core or not) moves this pointer past the characters that it consumes. It is also expected to perform some bookkeeping whenever a newline character is consumed. This movement can be more conveniently performed by the function &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt;, which handles newlines appropriately.</source>
          <target state="translated">El c&amp;oacute;digo Lexing (ya sea en el n&amp;uacute;cleo de Perl o no) mueve este puntero m&amp;aacute;s all&amp;aacute; de los caracteres que consume. Tambi&amp;eacute;n se espera que realice alguna contabilidad cada vez que se consume un car&amp;aacute;cter de nueva l&amp;iacute;nea. Este movimiento se puede realizar m&amp;aacute;s convenientemente mediante la funci&amp;oacute;n &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt; , que maneja las nuevas l&amp;iacute;neas de manera apropiada.</target>
        </trans-unit>
        <trans-unit id="50c4503eb10cb7055e83f0b77d0c54ba198cb8a3" translate="yes" xml:space="preserve">
          <source>Lexing code attempted to stuff non-Latin-1 character into Latin-1 input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec3fbd307e04ea0a0267363d68414b3f6becd30" translate="yes" xml:space="preserve">
          <source>Lexing code internal error (%s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdf2fc886297cee27c73397601ff4f39103c78d" translate="yes" xml:space="preserve">
          <source>Libnet Frequently Asked Questions</source>
          <target state="translated">Preguntas frecuentes sobre Libnet</target>
        </trans-unit>
        <trans-unit id="e99e9a5a6c267649059fa8147d50e8a56d55d8c3" translate="yes" xml:space="preserve">
          <source>Libraries using &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings::warn&lt;/a&gt; for custom warning categories generally don't expect &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings::warn&lt;/a&gt; to be fatal and can wind up in an unexpected state as a result. For XS modules issuing categorized warnings, such unanticipated exceptions could also expose memory leak bugs.</source>
          <target state="translated">Las bibliotecas que usan &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings :: warn&lt;/a&gt; para categor&amp;iacute;as de advertencia personalizadas generalmente no esperan que &lt;a href=&quot;#FUNCTIONS&quot;&gt;warnings :: warn&lt;/a&gt; sea ​​fatal y puede terminar en un estado inesperado como resultado. Para los m&amp;oacute;dulos XS que emiten advertencias categorizadas, tales excepciones imprevistas tambi&amp;eacute;n podr&amp;iacute;an exponer errores de fuga de memoria.</target>
        </trans-unit>
        <trans-unit id="dbfd43d16e8972c230e7e22188720b2bf73e76c5" translate="yes" xml:space="preserve">
          <source>Library ... not found</source>
          <target state="translated">Biblioteca...no se encuentra</target>
        </trans-unit>
        <trans-unit id="51ac812d4d63215ce6bab6ff80843a9768d50aa3" translate="yes" xml:space="preserve">
          <source>Library modules should not in general export built-in names like &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; as part of their default &lt;code&gt;@EXPORT&lt;/code&gt; list, because these may sneak into someone else's namespace and change the semantics unexpectedly. Instead, if the module adds that name to &lt;code&gt;@EXPORT_OK&lt;/code&gt; , then it's possible for a user to import the name explicitly, but not implicitly. That is, they could say</source>
          <target state="translated">En general, los m&amp;oacute;dulos de la biblioteca no deben exportar nombres integrados como &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; como parte de su lista &lt;code&gt;@EXPORT&lt;/code&gt; predeterminada , ya que estos pueden colarse en el espacio de nombres de otra persona y cambiar la sem&amp;aacute;ntica inesperadamente. En cambio, si el m&amp;oacute;dulo agrega ese nombre a &lt;code&gt;@EXPORT_OK&lt;/code&gt; , entonces es posible que un usuario importe el nombre expl&amp;iacute;citamente, pero no impl&amp;iacute;citamente. Es decir, podr&amp;iacute;an decir</target>
        </trans-unit>
        <trans-unit id="ad8c903818c8a82f08facfa60cb87854b48f3251" translate="yes" xml:space="preserve">
          <source>Library modules should not in general export built-in names like &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;chdir&lt;/code&gt; as part of their default &lt;code&gt;@EXPORT&lt;/code&gt; list, because these may sneak into someone else's namespace and change the semantics unexpectedly. Instead, if the module adds that name to &lt;code&gt;@EXPORT_OK&lt;/code&gt;, then it's possible for a user to import the name explicitly, but not implicitly. That is, they could say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189f5ddd187269a52ad75ba078f7fedb0f60d5fe" translate="yes" xml:space="preserve">
          <source>License String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8774f0e51de54365d13b10f234f9f0ab4b4c7b6" translate="yes" xml:space="preserve">
          <source>License is also granted to make and use derivative works provided that such works are identified as &quot;derived from the RSA Data Security, Inc. MD5 Message-Digest Algorithm&quot; in all material mentioning or referencing the derived work.</source>
          <target state="translated">También se concede licencia para hacer y utilizar obras derivadas,siempre que dichas obras se identifiquen como &quot;derivadas de la RSA Data Security,Inc.MD5 Message-Digest Algorithm&quot; en todo el material que mencione o haga referencia a la obra derivada.</target>
        </trans-unit>
        <trans-unit id="8fb9dc902cb98efd9bae2b4a142dce7fcd9e3bb0" translate="yes" xml:space="preserve">
          <source>License to copy and use this software is granted provided that it is identified as the &quot;RSA Data Security, Inc. MD5 Message-Digest Algorithm&quot; in all material mentioning or referencing this software or this function.</source>
          <target state="translated">La licencia para copiar y utilizar este software se concede siempre que se identifique como &quot;RSA Data Security,Inc.MD5 Message-Digest Algorithm&quot; en todo el material que mencione o haga referencia a este software o a esta función.</target>
        </trans-unit>
        <trans-unit id="5924fd52bf49a8494e3d053dc865b25bbec5c6e6" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU General Public License version 1 or later, or the Artistic License.</source>
          <target state="translated">Licenciado bajo la GNU General Public License versión 1 o posterior,o la Licencia Artística.</target>
        </trans-unit>
        <trans-unit id="aa636d64869928622347b0ebd93665113e78146c" translate="yes" xml:space="preserve">
          <source>Licensing</source>
          <target state="translated">Licensing</target>
        </trans-unit>
        <trans-unit id="d5b616805cf9bfc9158dfb054c59875ea327a760" translate="yes" xml:space="preserve">
          <source>Life is not quite so transparent, however, when working with legacy encodings, I/O, and certain special cases:</source>
          <target state="translated">Sin embargo,la vida no es tan transparente cuando se trabaja con codificaciones de legado,E/S y ciertos casos especiales:</target>
        </trans-unit>
        <trans-unit id="ab3a00d7b8ef92b4d6db8938fdc867c976af1617" translate="yes" xml:space="preserve">
          <source>Lifetime of the parent process and pseudo-processes</source>
          <target state="translated">La vida del proceso padre y los pseudo-procesos</target>
        </trans-unit>
        <trans-unit id="cb79da38fbc832bc4294ccc8e4bcfcc8a2555134" translate="yes" xml:space="preserve">
          <source>Lightweight and lvalue version of &lt;code&gt;PAD_SV&lt;/code&gt; . Get or set the value at offset &lt;code&gt;po&lt;/code&gt; in the current pad. Unlike &lt;code&gt;PAD_SV&lt;/code&gt; , does not print diagnostics with -DX. For internal use only.</source>
          <target state="translated">Versi&amp;oacute;n liviana y &lt;code&gt;PAD_SV&lt;/code&gt; de PAD_SV . Obtiene o establece el valor en offset &lt;code&gt;po&lt;/code&gt; en el pad actual. A diferencia de &lt;code&gt;PAD_SV&lt;/code&gt; , no imprime diagn&amp;oacute;sticos con -DX. S&amp;oacute;lo para uso interno.</target>
        </trans-unit>
        <trans-unit id="3fd57349d3d10bcc5e3acd29d060e929880bc515" translate="yes" xml:space="preserve">
          <source>Lightweight and lvalue version of &lt;code&gt;PAD_SV&lt;/code&gt;. Get or set the value at offset &lt;code&gt;po&lt;/code&gt; in the current pad. Unlike &lt;code&gt;PAD_SV&lt;/code&gt;, does not print diagnostics with -DX. For internal use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e02c95fe85052fcadf9745a5f1d0358088d936" translate="yes" xml:space="preserve">
          <source>Like</source>
          <target state="translated">Like</target>
        </trans-unit>
        <trans-unit id="c9df7c5b0e2428587b12f5f968c72b403b65e631" translate="yes" xml:space="preserve">
          <source>Like &quot;@*&quot;, this is a variable-width field. The value supplied must be a scalar variable. Perl puts the first line (up to the first &quot;\n&quot;) of the text into the field, and then chops off the front of the string so that the next time the variable is referenced, more of the text can be printed. The variable will</source>
          <target state="translated">Como &quot;@*&quot;,este es un campo de ancho variable.El valor suministrado debe ser una variable escalar.Perl pone la primera línea (hasta la primera &quot;\n&quot;)del texto en el campo,y luego corta el frente de la cadena para que la próxima vez que se haga referencia a la variable,se pueda imprimir más texto.La variable</target>
        </trans-unit>
        <trans-unit id="9e4b27dce39ce4f15c0298254855f383991ad517" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#-T&quot;&gt;&quot;-T&quot;&lt;/a&gt;, but taint checks will issue warnings rather than fatal errors. These warnings can now be controlled normally with &lt;code&gt;no warnings qw(taint)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6efdf3c36a1c3613481963e9128916b7b900006" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#__FILE__&quot;&gt;&lt;code&gt;__FILE__&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#__LINE__&quot;&gt;&lt;code&gt;__LINE__&lt;/code&gt;&lt;/a&gt;, the filename and line number returned here may be altered by the mechanism described at &lt;a href=&quot;perlsyn#Plain-Old-Comments-%28Not%21%29&quot;&gt;&quot;Plain Old Comments (Not!)&quot; in perlsyn&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f94085fda091b1e0d2fbb00f475b7933a977348" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt;, the result may be an intermediate decomposition whose components are also decomposable. Use &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; to get the final decomposition in one step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c138d511965d3d204a9ae2bc98753a226047b504" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt;, the result may be an intermediate decomposition whose components are also decomposable. Use &lt;a href=&quot;normalize&quot;&gt;Unicode::Normalize&lt;/a&gt; to get the final decomposition in one step.</source>
          <target state="translated">Como &lt;a href=&quot;#charinfo()&quot;&gt;charinfo ()&lt;/a&gt; , el resultado puede ser una descomposici&amp;oacute;n intermedia cuyos componentes tambi&amp;eacute;n son descomponibles. Utilice &lt;a href=&quot;normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt; para obtener la descomposici&amp;oacute;n final en un solo paso.</target>
        </trans-unit>
        <trans-unit id="266742b9f67b4fe1a275417eb72b7a676513b96c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;&quot;cop_hints_fetch_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94306a359339162936c27f41ca5369637110def5" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;&quot;cop_hints_fetch_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d50417de331ddcfae6353b7aa1bfeeddd25071" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;&quot;cop_hints_fetch_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de5fd7897751225569f609d59202b32bba6024a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt; , pero toma un escalar de Perl en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="9e492b6f65de514837e38acf884d2920be6c9c8e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Como &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud, y sin hash precalculado.</target>
        </trans-unit>
        <trans-unit id="2de1e66c1756b6fab3c6fdb05cde4f4f25568233" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cop_hints_fetch_pvn&quot;&gt;cop_hints_fetch_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="4a253dd8613cfeb35cd85cfbea8043b7c360540b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;&quot;cophh_delete_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7af63bad15b32edbd28ac2c10d2108aae562c31" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;&quot;cophh_delete_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5b198e7e3473ff35bff47623cd4e88330d3954" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;&quot;cophh_delete_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de93912de0e72db38bde2b8e898d77fc9dc7395b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt; , pero toma un escalar de Perl en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="5f93afb3b500f705910109bc574d7e2b47ae58fd" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par cadena / longitud, y no tiene un hash precalculado.</target>
        </trans-unit>
        <trans-unit id="7bc8a6b9daffa5d612ad332627c80e1cbcfc7c28" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_delete_pvn&quot;&gt;cophh_delete_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="9cc1810855d64e33ce9ec26c456a64df0b593a05" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;&quot;cophh_fetch_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5cc8f19c22d392b66740ab20d62583c9f0b5cc" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;&quot;cophh_fetch_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3304e82e703cb693b770c7a91db4e251a771c7ab" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;&quot;cophh_fetch_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf7282f7430d0c1f55fb04bc9095993eb65be76" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt; , pero toma un escalar de Perl en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="b5ef552d2079e488edcf076c50da8cfc2edf287e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par cadena / longitud, y no tiene un hash precalculado.</target>
        </trans-unit>
        <trans-unit id="1d820027a36b428c792671f4c8e4ee5300a7823f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_fetch_pvn&quot;&gt;cophh_fetch_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="d743c06e3451a81c72518baf7f72a34f8bfafe8d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;&quot;cophh_store_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3d816bbaf79a909295b456cf4eb6930c147304" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;&quot;cophh_store_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0b3ccbd7b43691247d71e63bb360cc3249f86a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;&quot;cophh_store_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c1cef4e16a8379b39bb25b20396ecc27808f0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt; , pero toma un escalar de Perl en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="f8b72f1ae998c27a3bc7952f2e79a7833ed58822" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud, y sin hash precalculado.</target>
        </trans-unit>
        <trans-unit id="3d6eb33ec672f221ab14ac8aaae5ee9923295a95" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#cophh_store_pvn&quot;&gt;cophh_store_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="58ca9ffe0ac8e2dd6af7ebd2c0acbcec2c0d7145" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; allows you to lie to a program about its name if you use the &lt;code&gt;system PROGRAM LIST&lt;/code&gt; syntax. Again, see &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada44e107259fa024a8f358c79e51c738af229c1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;&quot;gv_fetchmeth_pvn&quot;&lt;/a&gt;, but lacks a flags parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54abf6089eca44394b7d1690bb3d38c0b82d3b35" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt;, but lacks a flags parameter.</source>
          <target state="translated">Como &lt;a href=&quot;#gv_fetchmeth_pvn&quot;&gt;gv_fetchmeth_pvn&lt;/a&gt; , pero carece de un par&amp;aacute;metro de banderas.</target>
        </trans-unit>
        <trans-unit id="9d0651cf67afe661baee2be32bf57a134f79be82" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; .</source>
          <target state="translated">Como &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; pero almacena la ubicaci&amp;oacute;n de la falla (en el caso de &quot;falla de utf8ness&quot;) o la ubicaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; + &lt;code&gt;len&lt;/code&gt; (en el caso de &quot;&amp;eacute;xito de utf8ness&quot;) en el &lt;code&gt;ep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4826c3546aa34ea2d0524b77459a729065bbf15b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;() but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; , and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; .</source>
          <target state="translated">Como &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; () pero almacena la ubicaci&amp;oacute;n de la falla (en el caso de &quot;falla de utf8ness&quot;) o la ubicaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; + &lt;code&gt;len&lt;/code&gt; (en el caso de &quot;&amp;eacute;xito de utf8ness&quot;) en el &lt;code&gt;ep&lt;/code&gt; , y el n&amp;uacute;mero de caracteres codificados en UTF-8 en &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc4004ca168e21bab8a364acb13202ffa9c080d1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;&quot;lex_stuff_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df9351141888ffdcb4847144fedfdb9527ae3f1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="84cb2c197de2f7ed274dcc28b904a10591e12927" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#memEQ&quot;&gt;&quot;memEQ&quot;&lt;/a&gt;, but the second string is a literal enclosed in double quotes, &lt;code&gt;l1&lt;/code&gt; gives the number of bytes in &lt;code&gt;s1&lt;/code&gt;. Returns zero if equal, or non-zero if non-equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3235e7d6c4a5e5829587587808c18e328cb540d6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#memNE&quot;&gt;&quot;memNE&quot;&lt;/a&gt;, but the second string is a literal enclosed in double quotes, &lt;code&gt;l1&lt;/code&gt; gives the number of bytes in &lt;code&gt;s1&lt;/code&gt;. Returns zero if non-equal, or zero if non-equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8418e841d048f747af15fb53b44957357d83e046" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nextafter&quot;&gt;&quot;nextafter&quot;&lt;/a&gt;, but potentially more accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855a9fc9268cf7c56dbfa870587e398be59edc5f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nextafter&quot;&gt;nextafter&lt;/a&gt;, but potentially more accurate.</source>
          <target state="translated">Como el &lt;a href=&quot;#nextafter&quot;&gt;siguiente&lt;/a&gt; , pero potencialmente m&amp;aacute;s preciso.</target>
        </trans-unit>
        <trans-unit id="0b2228c60a5736c212cccec834eca9e330073dae" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nexttoward&quot;&gt;&quot;nexttoward&quot;&lt;/a&gt;, but potentially less accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3abb505c749731ad1d3986f391df84d9a744972" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#nexttoward&quot;&gt;nexttoward&lt;/a&gt;, but potentially less accurate.</source>
          <target state="translated">Como el &lt;a href=&quot;#nexttoward&quot;&gt;siguiente&lt;/a&gt; , pero potencialmente menos preciso.</target>
        </trans-unit>
        <trans-unit id="014996f423e4b3ba0964db2cda0c7b80baa25ee8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;&quot;refcounted_he_fetch_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d8988dd3bbcc7667d93d474b90133547c697bf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;&quot;refcounted_he_fetch_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b66ec47b251b957cd7b2fb7f4d9c455c7a47ef" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;&quot;refcounted_he_fetch_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724b06f3c6974466e0dcb566dbe47f6fad84aa5a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt; , pero toma un escalar de Perl en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="23a489d2aec93a2d851cb278177881615d6f059f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Como &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par cadena / longitud, y sin hash precalculado.</target>
        </trans-unit>
        <trans-unit id="401a90792585ceca6e1448d38f3a439e9e9ccb83" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#refcounted_he_fetch_pvn&quot;&gt;refcounted_he_fetch_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="d7b205ac37d25afe008f83aeca2addd7bbdc67d3" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;&quot;refcounted_he_new_pvn&quot;&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf2aa2fcc789bbf185be046592fbdbb502d45ba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;&quot;refcounted_he_new_pvn&quot;&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5349abc807ca4a5e1b628b9c96aba7c6b34dcba3" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;&quot;refcounted_he_new_pvn&quot;&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046451b0d57dcef450722c52bfda2597acd52bb7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt;, but takes a Perl scalar instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt; , pero toma un escalar de Perl en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="6a998ebee49893ba076a8800f452b0183aae9a49" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt;, but takes a literal string instead of a string/length pair, and no precomputed hash.</source>
          <target state="translated">Como &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt; , pero toma una cadena literal en lugar de un par cadena / longitud, y sin hash precalculado.</target>
        </trans-unit>
        <trans-unit id="65d696e7d641f983cc3e14984e6670f40737f36e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt;, but takes a nul-terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;a href=&quot;#refcounted_he_new_pvn&quot;&gt;refcounted_he_new_pvn&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="8ee6b83a5c63efaa127609c27748de883a7f6ea1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#remainder&quot;&gt;&quot;remainder&quot;&lt;/a&gt; but also returns the low-order bits of the quotient (n) [C99]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a963885aaf0f61482fbaede4f9fc78877a13624a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#remainder&quot;&gt;remainder&lt;/a&gt; but also returns the low-order bits of the quotient (n) [C99]</source>
          <target state="translated">Me gusta el &lt;a href=&quot;#remainder&quot;&gt;resto&lt;/a&gt; pero tambi&amp;eacute;n devuelve los bits de orden inferior del cociente (n) [C99]</target>
        </trans-unit>
        <trans-unit id="684022cdfa09a338010e59568f2b520d497d9055" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#round&quot;&gt;&quot;round&quot;&lt;/a&gt;, but as integer, as opposed to floating point [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5282dab906515d5042c87772d3d7af38dc7d497" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;, but as integer, as opposed to floating point [C99].</source>
          <target state="translated">Como &lt;a href=&quot;#round&quot;&gt;redondo&lt;/a&gt; , pero como entero, a diferencia del punto flotante [C99].</target>
        </trans-unit>
        <trans-unit id="5ca6b661daea1fb2637dc5c26cdc951e025782cb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#setpayload&quot;&gt;&quot;setpayload&quot;&lt;/a&gt; but also makes the NaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13069e76221341c8aade28e20a2776be321b753c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#strtod&quot;&gt;&quot;strtod&quot;&lt;/a&gt; but for long doubles. Defined only if the system supports long doubles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05cbd07aa430b94f88ef1127d9cc3feb4a35b92" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#strtod&quot;&gt;strtod&lt;/a&gt; but for long doubles. Defined only if the system supports long doubles.</source>
          <target state="translated">Como &lt;a href=&quot;#strtod&quot;&gt;strtod&lt;/a&gt; pero para dobles largos. Definido solo si el sistema admite dobles largos.</target>
        </trans-unit>
        <trans-unit id="e5d85e8e0de6544839fe7d3c4073f5a3d09bc76d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_pv&quot;&gt;&quot;sv_does_pv&quot;&lt;/a&gt;, but doesn't take a &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f5fd00ec8eac8e99d9f1474911e3920a009bb9" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_pv&quot;&gt;sv_does_pv&lt;/a&gt;, but doesn't take a &lt;code&gt;flags&lt;/code&gt; parameter.</source>
          <target state="translated">Como &lt;a href=&quot;#sv_does_pv&quot;&gt;sv_does_pv&lt;/a&gt; , pero no toma un par&amp;aacute;metro de &lt;code&gt;flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ff8c36e121f1fd60e63b43a1210b091d9a7c4d4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;&quot;sv_does_sv&quot;&lt;/a&gt;, but takes a nul-terminated string instead of an SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4661a4afd9ad32e2ec4db3ef6fa0574da2c1a43" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;&quot;sv_does_sv&quot;&lt;/a&gt;, but takes a string/length pair instead of an SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad65fa317ddd80710d2963974312eb533dd0432b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt;, but takes a nul-terminated string instead of an SV.</source>
          <target state="translated">Como &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt; , pero toma una cadena terminada en nulo en lugar de un SV.</target>
        </trans-unit>
        <trans-unit id="aa34ede2432b39dab6d8a29f4520f696d8b17636" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt;, but takes a string/length pair instead of an SV.</source>
          <target state="translated">Como &lt;a href=&quot;#sv_does_sv&quot;&gt;sv_does_sv&lt;/a&gt; , pero toma un par de cadena / longitud en lugar de un SV.</target>
        </trans-unit>
        <trans-unit id="8055d83feddf7b95aa6c67e74cf6d04e1a0e5710" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt;. Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt;. This is the numeric version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b51c5f83e0f401b76b918dc53d982582a6c6707" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt;. Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt;. This is the string version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0b144d9f1c5c01a2bcc227e28eeb2d1477818c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;like()&lt;/code&gt;. Checks if $thing matches the given &lt;code&gt;$regex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499b3623d431ec18655cbbc9fbf8897411d047d8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;unlike()&lt;/code&gt;. Checks if $thing &lt;b&gt;does not match&lt;/b&gt; the given &lt;code&gt;$regex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0270db3e4b83c7917acde896050328f249d7140a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt; . Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . This is the numeric version.</source>
          <target state="translated">Como &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; 's &lt;code&gt;isnt()&lt;/code&gt; . Comprueba si &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . Esta es la versi&amp;oacute;n num&amp;eacute;rica.</target>
        </trans-unit>
        <trans-unit id="a5f74c54ee73f3446f105290901ca9cf61ea643a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;isnt()&lt;/code&gt; . Checks if &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . This is the string version.</source>
          <target state="translated">Como &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; 's &lt;code&gt;isnt()&lt;/code&gt; . Comprueba si &lt;code&gt;$got ne $dont_expect&lt;/code&gt; . Esta es la versi&amp;oacute;n de cadena.</target>
        </trans-unit>
        <trans-unit id="9693737cd3c58d515bd81ab55ef59b90671ceaba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;like()&lt;/code&gt; . Checks if $thing matches the given &lt;code&gt;$regex&lt;/code&gt; .</source>
          <target state="translated">&lt;a href=&quot;more&quot;&gt;Prueba de&lt;/a&gt; Me gusta :: More es &lt;code&gt;like()&lt;/code&gt; . Comprueba si $ thing coincide con &lt;code&gt;$regex&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="348be5230ca4cb8628d5a3ede0642c968809d567" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s &lt;code&gt;unlike()&lt;/code&gt; . Checks if $thing &lt;b&gt;does not match&lt;/b&gt; the given &lt;code&gt;$regex&lt;/code&gt; .</source>
          <target state="translated">Like &lt;a href=&quot;more&quot;&gt;Test :: M&amp;aacute;s&lt;/a&gt; es &lt;code&gt;unlike()&lt;/code&gt; . Comprueba si $ thing &lt;b&gt;no coincide con&lt;/b&gt; el &lt;code&gt;$regex&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="75959408f273f7b39d4c26886da9ddb8ba9ee269" translate="yes" xml:space="preserve">
          <source>Like &lt;b&gt;-T&lt;/b&gt;, but taint checks will issue warnings rather than fatal errors. These warnings can now be controlled normally with &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
qw(taint)&lt;/code&gt; .</source>
          <target state="translated">Como &lt;b&gt;-T&lt;/b&gt; , pero las comprobaciones de corrupci&amp;oacute;n emitir&amp;aacute;n advertencias en lugar de errores fatales. Estas advertencias ahora se pueden controlar normalmente &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings qw(taint)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19d3972f6bfa689ac944e15f05e77cbb13096271" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&quot;extract_delimited&quot;&lt;/code&gt; , the &lt;code&gt;extract_bracketed&lt;/code&gt; function takes up to three optional scalar arguments: a string to extract from, a delimiter specifier, and a prefix pattern. As before, a missing prefix defaults to optional whitespace and a missing text defaults to &lt;code&gt;$_&lt;/code&gt; . However, a missing delimiter specifier defaults to &lt;code&gt;'{}()[]&amp;lt;&amp;gt;'&lt;/code&gt; (see below).</source>
          <target state="translated">Al igual que &lt;code&gt;&quot;extract_delimited&quot;&lt;/code&gt; , la funci&amp;oacute;n &lt;code&gt;extract_bracketed&lt;/code&gt; toma hasta tres argumentos escalares opcionales: una cadena para extraer, un especificador delimitador y un patr&amp;oacute;n de prefijo. Como antes, un prefijo faltante toma como valor predeterminado un espacio en blanco opcional y un texto faltante toma el &lt;code&gt;$_&lt;/code&gt; predeterminado $ _ . Sin embargo, un especificador de delimitador faltante tiene como valor predeterminado &lt;code&gt;'{}()[]&amp;lt;&amp;gt;'&lt;/code&gt; (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="8d7efc2799c6c0aeefd629283955bc733e276d0d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&quot;extract_delimited&quot;&lt;/code&gt;, the &lt;code&gt;extract_bracketed&lt;/code&gt; function takes up to three optional scalar arguments: a string to extract from, a delimiter specifier, and a prefix pattern. As before, a missing prefix defaults to optional whitespace and a missing text defaults to &lt;code&gt;$_&lt;/code&gt;. However, a missing delimiter specifier defaults to &lt;code&gt;'{}()[]&amp;lt;&amp;gt;'&lt;/code&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8638e9c741c1e67ac1a4fb8957038d6a39847eb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt; , but if the value is omitted, the</source>
          <target state="translated">Como &lt;code&gt;:i&lt;/code&gt; , pero si se omite el valor, el</target>
        </trans-unit>
        <trans-unit id="6c3eb9fc5ff253146a577da27d5894ba1dc92861" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt; , but if the value is omitted, the current value for the option will be incremented.</source>
          <target state="translated">Como &lt;code&gt;:i&lt;/code&gt; , pero si se omite el valor, se incrementar&amp;aacute; el valor actual de la opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e917fcd099f7bf9447127b4c6b34e7b279996d9c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt;, but if the value is omitted, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9edf6df4e0a9dec710ce6226ae54af4b423720" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;:i&lt;/code&gt;, but if the value is omitted, the current value for the option will be incremented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72498a7bf2cc1e79678e63ab406b0c7a1e1f22d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN&quot;&gt;&quot;ckWARN&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if the warning category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e4e8837fe47e35448f28c70d5f0b43b109c2e8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN&quot;&gt;&quot;ckWARN&quot;&lt;/a&gt;&lt;/code&gt;, but takes two warnings categories as input, and returns TRUE if either is enabled. If either category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN2_d&quot;&gt;&quot;ckWARN2_d&quot;&lt;/a&gt; macro. The categories must be completely independent, one may not be subclassed from the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419e26b6ee286b6d83d0487c5a57940285a7f404" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN2&quot;&gt;&quot;ckWARN2&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if either warning category is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0b75aa92dfd27a10af7448f298956a33a06201" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN2&quot;&gt;&quot;ckWARN2&quot;&lt;/a&gt;&lt;/code&gt;, but takes three warnings categories as input, and returns TRUE if any is enabled. If any of the categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN3_d&quot;&gt;&quot;ckWARN3_d&quot;&lt;/a&gt; macro. The categories must be completely independent, one may not be subclassed from any other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2f4ea75511cd5867b17de10a3c9cc97f03000e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN3&quot;&gt;&quot;ckWARN3&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if any of the warning categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea073c6d4d2f3be717fe763a8236d2fa3983dd14" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN3&quot;&gt;&quot;ckWARN3&quot;&lt;/a&gt;&lt;/code&gt;, but takes four warnings categories as input, and returns TRUE if any is enabled. If any of the categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;, instead use the &lt;a href=&quot;#ckWARN4_d&quot;&gt;&quot;ckWARN4_d&quot;&lt;/a&gt; macro. The categories must be completely independent, one may not be subclassed from any other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7a6a2e8726ab7252364cc04fd4ea666ebc8c9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ckWARN4&quot;&gt;&quot;ckWARN4&quot;&lt;/a&gt;&lt;/code&gt;, but for use if and only if any of the warning categories is by default enabled even if not within the scope of &lt;code&gt;use warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6b184b57730c77a791a10594697539485e24b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_c9strict_utf8_string&quot;&gt;&quot;is_c9strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d139eda757264428ce8d6faad0998e0c3769736" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_c9strict_utf8_string&quot;&gt;&quot;is_c9strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5271b223e0f3ecc184afda4eb4579d5e8c1de58c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_strict_utf8_string&quot;&gt;&quot;is_strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cbb5f193b52a523e82c581210653da96c02968" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_strict_utf8_string&quot;&gt;&quot;is_strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fe020358fe6e2a30b7f3e56ff293f970a16478" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_fixed_width_buf_flags&quot;&gt;&quot;is_utf8_fixed_width_buf_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure in the &lt;code&gt;ep&lt;/code&gt; pointer. If the function returns TRUE, &lt;code&gt;*ep&lt;/code&gt; will point to the beginning of any partial character at the end of the buffer; if there is no partial character &lt;code&gt;*ep&lt;/code&gt; will contain &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184619f40e2d3b96236b99f26b9009ae016b50d2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_fixed_width_buf_loc_flags&quot;&gt;&quot;is_utf8_fixed_width_buf_loc_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the number of complete, valid characters found in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7227ef07854b8cfd22e221bfeaf5dae02357c44a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot;&lt;/a&gt;&lt;/code&gt; but upon failure, stores the location of the first UTF-8 variant character in the &lt;code&gt;ep&lt;/code&gt; pointer; if all characters are UTF-8 invariant, this function does not change the contents of &lt;code&gt;*ep&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86cd12bd56f8c4d5a287a0fc3cdf7a1222db664" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string&quot;&gt;&quot;is_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff1a503be987f0032effdacb189b36936341632" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string&quot;&gt;&quot;is_utf8_string&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc892fe53ef825e8f87599d3f0987cfffdb6bdb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer, and the number of UTF-8 encoded characters in the &lt;code&gt;el&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c58aaf9e5b4c34db9f382e35942b79704f88a22" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; but stores the location of the failure (in the case of &quot;utf8ness failure&quot;) or the location &lt;code&gt;s&lt;/code&gt;+&lt;code&gt;len&lt;/code&gt; (in the case of &quot;utf8ness success&quot;) in the &lt;code&gt;ep&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac14a2fc2052bfda8c74ae275ad47bc11891894" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#is_utf8_valid_partial_char&quot;&gt;&quot;is_utf8_valid_partial_char&quot;&lt;/a&gt;&lt;/code&gt;, it returns a boolean giving whether or not the input is a valid UTF-8 encoded partial character, but it takes an extra parameter, &lt;code&gt;flags&lt;/code&gt;, which can further restrict which code points are considered valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ae8be3d24ca6a297e15b0d7fafe2dba59e2100" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;#ninstr&quot;&gt;&quot;ninstr&quot;&lt;/a&gt;&lt;/code&gt;, but instead finds the final (rightmost) occurrence of a sequence of bytes within another sequence, returning &lt;code&gt;NULL&lt;/code&gt; if there is no such occurrence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ec6b1469cf896b7423c3e7e32f92d207da0b8f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; allows you to lie to a program about its name if you use the &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax. Again, see &lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , el &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; permite mentirle a un programa sobre su nombre si usa la sintaxis de &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; del &lt;a href=&quot;system&quot;&gt;sistema&lt;/a&gt; . Nuevamente, vea &lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53ce9db24e9d8151cb0d5ad673fbb551695d8498" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; allows you to lie to a program about its name if you use the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax. Again, see &lt;a href=&quot;#exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; , el &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; permite mentirle a un programa sobre su nombre si usa la sintaxis de &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; del &lt;a href=&quot;functions/system&quot;&gt;sistema&lt;/a&gt; . Nuevamente, vea &lt;a href=&quot;#exec&quot;&gt;exec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c07f470d836169d71198d296d47952ad2947c4f8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; $variable&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; creates a lexical alias to the package subroutine of the same name.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; $variable&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; &lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; crea un alias l&amp;eacute;xico para la subrutina del paquete del mismo nombre.</target>
        </trans-unit>
        <trans-unit id="71fcf0aeb3b2b8b93c5a529ba638d8c163bace8e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;perlapi#utf8_to_uvchr_buf&quot;&gt;&quot;utf8_to_uvchr_buf&quot; in perlapi&lt;/a&gt;&lt;/code&gt;, but should only be called when it is known that the next character in the input UTF-8 string &lt;code&gt;s&lt;/code&gt; is well-formed (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bfeaa61a4310c58029cc704a58399ca890239c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;=&lt;/code&gt; , but designates the argument as optional. If omitted, an empty string will be assigned to string values options, and the value zero to numeric options.</source>
          <target state="translated">Like &lt;code&gt;=&lt;/code&gt; , pero designa el argumento como opcional. Si se omite, se asignar&amp;aacute; una cadena vac&amp;iacute;a a las opciones de valores de cadena y el valor cero a las opciones num&amp;eacute;ricas.</target>
        </trans-unit>
        <trans-unit id="4ede365bb483e8de4140eea3631854060b2e0a3c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;=&lt;/code&gt;, but designates the argument as optional. If omitted, an empty string will be assigned to string values options, and the value zero to numeric options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a58c5a4f4c388955ace0d1b2c081730bec782ab" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ARRAY&lt;/code&gt; , but takes an index as an argument to get only one element, rather than a list of all of them.</source>
          <target state="translated">Como &lt;code&gt;ARRAY&lt;/code&gt; , pero toma un &amp;iacute;ndice como argumento para obtener solo un elemento, en lugar de una lista de todos ellos.</target>
        </trans-unit>
        <trans-unit id="f172ba9b7b9b3d5863cfacf3230b6e0158d82632" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ARRAY&lt;/code&gt;, but takes an index as an argument to get only one element, rather than a list of all of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904d0219765a58ae524cd174247fe80e59898174" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;CLONE&lt;/code&gt; , &lt;code&gt;CLONE_SKIP&lt;/code&gt; is currently called with no parameters other than the invocant package name, although that may change. Similarly, to allow for future expansion, the return value should be a single &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; value.</source>
          <target state="translated">Como &lt;code&gt;CLONE&lt;/code&gt; , &lt;code&gt;CLONE_SKIP&lt;/code&gt; se llama actualmente sin otros par&amp;aacute;metros que el nombre del paquete invocante, aunque eso puede cambiar. De manera similar, para permitir una expansi&amp;oacute;n futura, el valor de retorno debe ser un valor &amp;uacute;nico de &lt;code&gt;0&lt;/code&gt; o &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f940b8493916ee3f27829022bc4c4a8f402337a1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;CLONE&lt;/code&gt;, &lt;code&gt;CLONE_SKIP&lt;/code&gt; is currently called with no parameters other than the invocant package name, although that may change. Similarly, to allow for future expansion, the return value should be a single &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712167b0cb1cf028d5ac0a7f89ae0f319bb50f60" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Copy&lt;/code&gt; but returns &lt;code&gt;dest&lt;/code&gt;. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400aa1515ac06a94cb93b93ac9f5493878616d4c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Copy&lt;/code&gt; but returns dest. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="translated">Me gusta &lt;code&gt;Copy&lt;/code&gt; pero devuelve dest. &amp;Uacute;til para alentar a los compiladores a optimizar las llamadas finales</target>
        </trans-unit>
        <trans-unit id="14537197538893226d82efeb48b7a358e65846d7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Moose&lt;/code&gt; , &lt;code&gt;Class::Accessor&lt;/code&gt; generates accessor methods and a constructor for your class.</source>
          <target state="translated">Como &lt;code&gt;Moose&lt;/code&gt; , &lt;code&gt;Class::Accessor&lt;/code&gt; genera m&amp;eacute;todos de acceso y un constructor para su clase.</target>
        </trans-unit>
        <trans-unit id="41aea6605b986b34eea2def3a336d7bee9c15525" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Moose&lt;/code&gt;, &lt;code&gt;Class::Accessor&lt;/code&gt; generates accessor methods and a constructor for your class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1911709504f680e61bf78568c4b6d9d06b0561" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Move&lt;/code&gt; but returns &lt;code&gt;dest&lt;/code&gt;. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc10814cde731762cb07a8de6fded71423754dc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Move&lt;/code&gt; but returns dest. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="translated">Como &lt;code&gt;Move&lt;/code&gt; pero devuelve dest. &amp;Uacute;til para alentar a los compiladores a optimizar las llamadas finales</target>
        </trans-unit>
        <trans-unit id="63bea6acc9be28a6d3cb950aea732759df8ac57d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvIV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;SvIV&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="8f72df42d4357277ebaaa7626ab2ec8434c74b44" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvNV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;SvNV&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="f987f68efd96052a6b0a92226467d6e95b9160b3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to byte representation first if necessary.</source>
          <target state="translated">Como &lt;code&gt;SvPV&lt;/code&gt; , pero convierte sv en representaci&amp;oacute;n de bytes primero si es necesario.</target>
        </trans-unit>
        <trans-unit id="d5b21bddc458bd8cbfcd7db407bfa101b7f02dfa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to byte representation first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVbyte&lt;/code&gt; otherwise.</source>
          <target state="translated">Como &lt;code&gt;SvPV&lt;/code&gt; , pero convierte sv en representaci&amp;oacute;n de bytes primero si es necesario. Garant&amp;iacute;as para evaluar sv solo una vez; use el &lt;code&gt;SvPVbyte&lt;/code&gt; m&amp;aacute;s eficiente de lo contrario.</target>
        </trans-unit>
        <trans-unit id="020487c29dd87ab0c92e767efba3c8f41b9bfcc7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to utf8 first if necessary.</source>
          <target state="translated">Como &lt;code&gt;SvPV&lt;/code&gt; , pero convierte sv a utf8 primero si es necesario.</target>
        </trans-unit>
        <trans-unit id="a5a0c092212799a2ed1d29176de9f03d368894bf" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; , but converts sv to utf8 first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVutf8&lt;/code&gt; otherwise.</source>
          <target state="translated">Como &lt;code&gt;SvPV&lt;/code&gt; , pero convierte sv a utf8 primero si es necesario. Garant&amp;iacute;as para evaluar sv solo una vez; use el &lt;code&gt;SvPVutf8&lt;/code&gt; m&amp;aacute;s eficiente de lo contrario.</target>
        </trans-unit>
        <trans-unit id="728e33d136e3d988de2e0baba97a509be6c9c1b3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;SvPV&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="9f644bfac194a0b755578b81e47d7586566e4504" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but doesn't set a length variable.</source>
          <target state="translated">Como &lt;code&gt;SvPV&lt;/code&gt; pero no establece una variable de longitud.</target>
        </trans-unit>
        <trans-unit id="153041f77422ab93c76bcbcf6550af4c15800fa0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but will force the SV into containing a string (&lt;code&gt;SvPOK&lt;/code&gt; ), and only a string (&lt;code&gt;SvPOK_only&lt;/code&gt; ), by hook or by crook. You need force if you are going to update the &lt;code&gt;SvPVX&lt;/code&gt; directly. Processes get magic.</source>
          <target state="translated">Como &lt;code&gt;SvPV&lt;/code&gt; , pero forzar&amp;aacute; al SV a contener una cadena ( &lt;code&gt;SvPOK&lt;/code&gt; ), y solo una cadena ( &lt;code&gt;SvPOK_only&lt;/code&gt; ), por las buenas o por las malas. Necesita forzar si va a actualizar el &lt;code&gt;SvPVX&lt;/code&gt; directamente. Los procesos se vuelven m&amp;aacute;gicos.</target>
        </trans-unit>
        <trans-unit id="d21fc8eebda239f78f40ff861ae346674bc44746" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt; but will force the SV into containing a string (&lt;code&gt;SvPOK&lt;/code&gt;), and only a string (&lt;code&gt;SvPOK_only&lt;/code&gt;), by hook or by crook. You need force if you are going to update the &lt;code&gt;SvPVX&lt;/code&gt; directly. Processes get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349b9b0f215cc3428bdddf241602ce0c2e78c72b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94d5ef1f314f46efc3bd3d45f2affc66f0be81f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVutf8&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826e9ea9cb83ae3e7f9096a1ec17389c37388921" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVbyte&lt;/code&gt; otherwise. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141f76de6b791c79da422cfe3133860c38f0a7b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d303190c56047f26fce52e3043032426e788042e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to byte representation first if necessary.</source>
          <target state="translated">Como &lt;code&gt;SvPV_force&lt;/code&gt; , pero primero convierte sv en representaci&amp;oacute;n de bytes si es necesario.</target>
        </trans-unit>
        <trans-unit id="e339b69da0fc6099ae5122846dd6d16329909d09" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to byte representation first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVbyte_force&lt;/code&gt; otherwise.</source>
          <target state="translated">Como &lt;code&gt;SvPV_force&lt;/code&gt; , pero primero convierte sv en representaci&amp;oacute;n de bytes si es necesario. Garant&amp;iacute;as para evaluar sv solo una vez; utilice el &lt;code&gt;SvPVbyte_force&lt;/code&gt; m&amp;aacute;s eficiente de lo contrario.</target>
        </trans-unit>
        <trans-unit id="33e41cb5a5972955c89d4da04933a8a79726a21b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to utf8 first if necessary.</source>
          <target state="translated">Como &lt;code&gt;SvPV_force&lt;/code&gt; , pero convierte sv a utf8 primero si es necesario.</target>
        </trans-unit>
        <trans-unit id="85dee70f70d9f59dd1fd504ab0aa00e6dc082a6e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but converts sv to utf8 first if necessary. Guarantees to evaluate sv only once; use the more efficient &lt;code&gt;SvPVutf8_force&lt;/code&gt; otherwise.</source>
          <target state="translated">Como &lt;code&gt;SvPV_force&lt;/code&gt; , pero convierte sv a utf8 primero si es necesario. Garant&amp;iacute;as para evaluar sv solo una vez; utilice el &lt;code&gt;SvPVutf8_force&lt;/code&gt; m&amp;aacute;s eficiente de lo contrario.</target>
        </trans-unit>
        <trans-unit id="2ed49f80c2155ad585761ac04bf59edd4a6a0831" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt; , but doesn't process get magic.</source>
          <target state="translated">Como &lt;code&gt;SvPV_force&lt;/code&gt; , pero el proceso no se vuelve m&amp;aacute;gico.</target>
        </trans-unit>
        <trans-unit id="de31ac38b3310b9f71eaea9b2b9823bca2371b5b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef89cf67971528e31aab7836397b698e7ac2bf5f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVutf8_force&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64af48e8fcfd9300a6f250966560fbb0e199baa6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once; use the more efficient &lt;code&gt;SvPVbyte_force&lt;/code&gt; otherwise. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a9095d2fee3653ae330358ffc4695a81e6b02f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cf6163858835eb56fc5636d4aa26add2cda002" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_force&lt;/code&gt;, but doesn't process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd41cfed5f0aafc487ed8b935e2fe00690512ae4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt; , but converts sv to byte representation first if necessary.</source>
          <target state="translated">Como &lt;code&gt;SvPV_nolen&lt;/code&gt; , pero primero convierte sv en representaci&amp;oacute;n de bytes si es necesario.</target>
        </trans-unit>
        <trans-unit id="569d8ee3b9025e7d46c4e22dc014e9293f09b9cf" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt; , but converts sv to utf8 first if necessary.</source>
          <target state="translated">Como &lt;code&gt;SvPV_nolen&lt;/code&gt; , pero convierte sv a utf8 primero si es necesario.</target>
        </trans-unit>
        <trans-unit id="c6ed04996a1df68aa8ad7cc1586c48a5135a6669" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;SvPV_nolen&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="84b7cb4480c3132c8864625842015ea55fab81e1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to UTF-8 first if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa0a4e5ab6512583ca715ed04c79ddb474737cc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPV_nolen&lt;/code&gt;, but converts &lt;code&gt;sv&lt;/code&gt; to byte representation first if necessary. If the SV cannot be downgraded from UTF-8, this croaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a865431f8a7ccfcbc629a801cbd5a4e318acecb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVbyte&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cce88bb70d307b5b0e2ee525ca3357c9496281e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVbyte&lt;/code&gt;, but when &lt;code&gt;sv&lt;/code&gt; is undef, returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fb5185aac038bc23863cae1034fcc526a2af60" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVbyte_or_null&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a2791b53267404eb74d9bbda43c3aea418ea86" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVutf8&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406f4865185c362d6a5d331cd6d62f6ed4d4d970" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVutf8&lt;/code&gt;, but when &lt;code&gt;sv&lt;/code&gt; is undef, returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf879f0e51a10965057e3cd31f489e3ff76dc7b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvPVutf8_or_null&lt;/code&gt;, but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab106c9006a177a2bcf08f263e2472e6c9b25246" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV&lt;/code&gt; , but does any set magic required afterwards.</source>
          <target state="translated">Como &lt;code&gt;SvSetSV&lt;/code&gt; , pero hace cualquier magia establecida requerida despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="18661798a6626e7bf7cdbb46868b189d21d7ee00" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV&lt;/code&gt;, but does any set magic required afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388de52bdbcc28141b225f26cb9f3fe2e05660c9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , but does any set magic required afterwards.</source>
          <target state="translated">Como &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , pero luego hace cualquier magia establecida.</target>
        </trans-unit>
        <trans-unit id="0ed8a9070212dcdaecafb195378164bb65737213" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvSetSV_nosteal&lt;/code&gt;, but does any set magic required afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a27275be863ed7ef192a76ef76e83185d113390" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;SvUV&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;SvUV&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="c145fe31e7a9856cfd103483b939c0b69292c062" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Zero&lt;/code&gt; but returns dest. Useful for encouraging compilers to tail-call optimise.</source>
          <target state="translated">Como &lt;code&gt;Zero&lt;/code&gt; pero devuelve dest. &amp;Uacute;til para alentar a los compiladores a optimizar las llamadas finales</target>
        </trans-unit>
        <trans-unit id="e95906df0f28c9ef1e7b84894c91761f182cafd1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;_to_bin()&lt;/code&gt; but with a '0b' prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293678ff919e37219d0e5d9a7fb067403eb39d97" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;_to_hex()&lt;/code&gt; but with a '0x' prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c679af24785cdf880157af3d3d87fd5d4c630443" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;_to_oct()&lt;/code&gt; but with a '0' prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a30913145132e032417d97e9d5716e5d07e3a09" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;article&lt;/code&gt; but only fetches the body of the article.</source>
          <target state="translated">Me gusta el &lt;code&gt;article&lt;/code&gt; pero solo recupera el cuerpo del art&amp;iacute;culo.</target>
        </trans-unit>
        <trans-unit id="dbf2edb5cf6acda874d56c0ec8d6a027b38ecd7b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;article&lt;/code&gt; but only fetches the headers for the article.</source>
          <target state="translated">Me gusta el &lt;code&gt;article&lt;/code&gt; pero solo obtiene los encabezados del art&amp;iacute;culo.</target>
        </trans-unit>
        <trans-unit id="698d6282638ff97d91804a4f1cf2ced815c09a43" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;cond_wait&lt;/code&gt; , this function may take a shared, &lt;b&gt;locked&lt;/b&gt; variable as an additional parameter; in this case the first parameter is an &lt;b&gt;unlocked&lt;/b&gt; condition variable protected by a distinct lock variable.</source>
          <target state="translated">Como &lt;code&gt;cond_wait&lt;/code&gt; , esta funci&amp;oacute;n puede tomar una variable &lt;b&gt;bloqueada&lt;/b&gt; compartida como un par&amp;aacute;metro adicional; en este caso, el primer par&amp;aacute;metro es una variable de condici&amp;oacute;n &lt;b&gt;desbloqueada&lt;/b&gt; protegida por una variable de bloqueo distinta.</target>
        </trans-unit>
        <trans-unit id="c585c7b6a19c2570f8a734ae16123cf56bb4a904" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;cond_wait&lt;/code&gt;, this function may take a shared, &lt;b&gt;locked&lt;/b&gt; variable as an additional parameter; in this case the first parameter is an &lt;b&gt;unlocked&lt;/b&gt; condition variable protected by a distinct lock variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58a5c550c804eb437e5a9f29a412c2a917db541" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;copy&lt;/code&gt; , &lt;code&gt;rmscopy&lt;/code&gt; returns 1 on success. If an error occurs, it sets &lt;code&gt;$!&lt;/code&gt; , deletes the output file, and returns 0.</source>
          <target state="translated">Como &lt;code&gt;copy&lt;/code&gt; , &lt;code&gt;rmscopy&lt;/code&gt; devuelve 1 en caso de &amp;eacute;xito. Si ocurre un error, establece &lt;code&gt;$!&lt;/code&gt; , elimina el archivo de salida y devuelve 0.</target>
        </trans-unit>
        <trans-unit id="09aa3572893f32ca36724882d530f081b2c921bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;rmscopy&lt;/code&gt; returns 1 on success. If an error occurs, it sets &lt;code&gt;$!&lt;/code&gt;, deletes the output file, and returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62662a2fcd9593969fecb7744ceb2295a389997a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt; , but it prints to the &lt;code&gt;output()&lt;/code&gt; handle so it will not normally be seen by the user except in verbose mode.</source>
          <target state="translated">Como &lt;code&gt;diag()&lt;/code&gt; , pero se imprime en el identificador de &lt;code&gt;output()&lt;/code&gt; por lo que normalmente el usuario no lo ver&amp;aacute; excepto en modo detallado.</target>
        </trans-unit>
        <trans-unit id="983d206f2bed9edbbc722e7d5cdb62e2a06346c5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt; , except the message will not be seen when the test is run in a harness. It will only be visible in the verbose TAP stream.</source>
          <target state="translated">Como &lt;code&gt;diag()&lt;/code&gt; , excepto que el mensaje no se ver&amp;aacute; cuando la prueba se ejecute en un arn&amp;eacute;s. Solo ser&amp;aacute; visible en la secuencia TAP detallada.</target>
        </trans-unit>
        <trans-unit id="30ef0020e2af04e6653b9cacfc8060419afe5437" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt;, but it prints to the &lt;code&gt;output()&lt;/code&gt; handle so it will not normally be seen by the user except in verbose mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538ead19e35b8089406067731ca6a5943e4b5625" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;diag()&lt;/code&gt;, except the message will not be seen when the test is run in a harness. It will only be visible in the verbose TAP stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca575f5cd45b0a03fd8f03890b4f05a0793bc86" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;gv_stashpvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;gv_stashpvn&lt;/code&gt; , pero toma una cadena literal en lugar de un par cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="8691e2305cbe58536b7649210914f3f94532f0e6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;gv_stashpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a99146718e4827b551f9b9e65221a90a0c6896f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_fetch&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;hv_fetch&lt;/code&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="912f545edccc3d2ff98e523743c3a82e5bacfc8d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_fetch&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b54ec87ed43945667a5780ba1140342cbc85083" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_store&lt;/code&gt; , but takes a literal string instead of a string/length pair and omits the hash parameter.</source>
          <target state="translated">Como &lt;code&gt;hv_store&lt;/code&gt; , pero toma una cadena literal en lugar de un par cadena / longitud y omite el par&amp;aacute;metro hash.</target>
        </trans-unit>
        <trans-unit id="1d2d05d84f4bcf370e8da5d7a89dc98a3d07cfd1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;hv_store&lt;/code&gt;, but takes a literal string instead of a string/length pair and omits the hash parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cafedf7339223e94c98617ca5452de6e823831" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;is_regexp&lt;/code&gt; this function will not be confused by overloading or blessing of the object.</source>
          <target state="translated">Al igual que &lt;code&gt;is_regexp&lt;/code&gt; , esta funci&amp;oacute;n no se confundir&amp;aacute; con la sobrecarga o bendici&amp;oacute;n del objeto.</target>
        </trans-unit>
        <trans-unit id="ec33eb3b85c09c1867b94d4c5d38b36ea16437ca" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;newSVpvn&lt;/code&gt; , pero toma una cadena literal terminada en &lt;code&gt;NUL&lt;/code&gt; en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="1133f5bdbc277f0a43759c96e6e4a136a1b3e3c6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6def24d08af466796e4eeead658a36b729d71197" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_flags&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;newSVpvn_flags&lt;/code&gt; , pero toma una cadena literal terminada en &lt;code&gt;NUL&lt;/code&gt; en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="abd374fbe3d53f171a59b273311808bb8110bbbb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_flags&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1c507c68363b1af9c5557f4eef915d6b55b26a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt; , but takes a &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;newSVpvn_share&lt;/code&gt; , pero toma una cadena terminada en &lt;code&gt;NUL&lt;/code&gt; en lugar de un par cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="3dd80874ef095a04d51bc5aa179476376e4130b1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair and omits the hash parameter.</source>
          <target state="translated">Como &lt;code&gt;newSVpvn_share&lt;/code&gt; , pero toma una cadena literal terminada en &lt;code&gt;NUL&lt;/code&gt; en lugar de un par cadena / longitud y omite el par&amp;aacute;metro hash.</target>
        </trans-unit>
        <trans-unit id="d6eb188b6893f815d9a8bdb27b5ac56dcb122551" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt;, but takes a &lt;code&gt;NUL&lt;/code&gt;-terminated string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49fe9b556cc6794a2516353379f67e130b7ce84" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVpvn_share&lt;/code&gt;, but takes a literal string instead of a string/length pair and omits the hash parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40e017fad124c7546ce8fa47f9cf471e202cba4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;newSVsv&lt;/code&gt; but does not process get magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11236bc0b511fb5ce2d7100079100494df2e3d25" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;our $variable&lt;/code&gt;, &lt;code&gt;our sub&lt;/code&gt; creates a lexical alias to the package subroutine of the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6a38afce596ffe8e2f194c11ba3be9d30f3333" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;pasv_xfer&lt;/code&gt; but the file is stored on the remote server using the STOU command.</source>
          <target state="translated">Como &lt;code&gt;pasv_xfer&lt;/code&gt; pero el archivo se almacena en el servidor remoto usando el comando STOU.</target>
        </trans-unit>
        <trans-unit id="7fdced39cfee983640cff74a2b9f6b6a909daee3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;require_ok&lt;/code&gt; , but it will &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; the $module in question and only loads modules, not files.</source>
          <target state="translated">Como &lt;code&gt;require_ok&lt;/code&gt; , pero &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; el $ m&amp;oacute;dulo en cuesti&amp;oacute;n y solo carga m&amp;oacute;dulos, no archivos.</target>
        </trans-unit>
        <trans-unit id="8aa98318e2c42a18d337bece9c82948798cd16dd" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;require_ok&lt;/code&gt;, but it will &lt;code&gt;use&lt;/code&gt; the $module in question and only loads modules, not files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85e64ea446b94b53e6b0a98b79acffa9e65509e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;savepvn&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;savepvn&lt;/code&gt; , pero toma una cadena literal terminada en &lt;code&gt;NUL&lt;/code&gt; en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="ab6359be0dee3e4a9294e68cf9fca3c1e4336929" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;savepvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f07f68a2d9761eca21ebc3401a1a91fade1e35" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;skip()&lt;/code&gt; , only it will declare the test as failing and TODO. Similar to</source>
          <target state="translated">Al igual que &lt;code&gt;skip()&lt;/code&gt; , solo declarar&amp;aacute; la prueba como fallida y TODO. Similar a</target>
        </trans-unit>
        <trans-unit id="3b33b5f95e762241c8de2a57e4c85b1137e8f8d8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;skip()&lt;/code&gt;, only it will declare the test as failing and TODO. Similar to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb9b95fcba79da2d66d4cd56bc634f774dac146" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;summary()&lt;/code&gt; , but with a lot more detail.</source>
          <target state="translated">Como &lt;code&gt;summary()&lt;/code&gt; , pero con mucho m&amp;aacute;s detalle.</target>
        </trans-unit>
        <trans-unit id="8ab77eb4986ee757a37bdc02456676abd72f396c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;summary()&lt;/code&gt;, but with a lot more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc85a8c4d9155e4879660bb0fb6db949fdb86fb" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_2pv()&lt;/code&gt; , but doesn't return the length too. You should usually use the macro wrapper &lt;code&gt;SvPV_nolen(sv)&lt;/code&gt; instead.</source>
          <target state="translated">Como &lt;code&gt;sv_2pv()&lt;/code&gt; , pero tampoco devuelve la longitud. Por lo general, deber&amp;iacute;a utilizar el contenedor de macros &lt;code&gt;SvPV_nolen(sv)&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="5f1750e6fee439d6a5d7c30bcaadc82f4b76654a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_2pv()&lt;/code&gt;, but doesn't return the length too. You should usually use the macro wrapper &lt;code&gt;SvPV_nolen(sv)&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28ad4ddf0b006c6eedf3f81dcaf16c9a74e085e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_catpv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="74ec50e9ddcc0b0b4bd0d08a497824bb0da8c599" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpv&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;sv_catpv&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="dbe6953fefa65c174375eefeb7061a1d8d28d608" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96301ae15c375b77c0b44d75ba25e64a78136a72" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_catpvf&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="d094247c032470d6a00c5c42225cd27f4c338e8b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbd5c1c6aa34bdcc67b11a771b5ad797b082fb9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_catpvn&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="52a1bc2daa3eca49de27291192d60d01346616bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;sv_catpvn&lt;/code&gt; , pero toma una cadena literal en lugar de un par cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="1e9ddae012626cb7e4439d9980907c822af4371b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;sv_catpvn&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="1a2180c80e256d3412ef812a310798be5ad6256e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b542066a6f682efb528d954086e468e249dbea7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56485c39e91b575f9eb207ecfc300725f3983593" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_flags&lt;/code&gt; , but takes a literal &lt;code&gt;NUL&lt;/code&gt; -terminated string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;sv_catpvn_flags&lt;/code&gt; , pero toma una cadena literal terminada en &lt;code&gt;NUL&lt;/code&gt; en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="b8dc77061b45695e2a25d3d8ac47661d896a65ef" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_flags&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f05c96d8dfa46b087685cde4a872c91ee4af9a0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_mg&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;sv_catpvn_mg&lt;/code&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="fade09434f240ea70c6ba8138d1c0f20965adbe6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_mg&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d239fc60878c8dca9fcf1e90342df6ee45eef1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_nomg&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;sv_catpvn_nomg&lt;/code&gt; , pero toma una cadena literal en lugar de un par cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="9553515af5d9ec9e4a899f2411b3c5de81d5b4ad" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catpvn_nomg&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fccee46cd5a2dbdef0b3ef34ed13318240c0cba" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catsv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_catsv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="4126df4d71505019e5bb56c7d0ec65e860e57dbf" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catsv&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;sv_catsv&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="e282341ebef2e50ac8d4be165f9aa0f02c29868c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_catsv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb27b8554deaad725f9af3d8c8e7188da8e9d19b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_copypv&lt;/code&gt;, but doesn't invoke get magic first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e046d3517a7992d7d1e0d29443cd29e124206320" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_mortalcopy&lt;/code&gt;, but the extra &lt;code&gt;flags&lt;/code&gt; are passed to the &lt;code&gt;sv_setsv_flags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d38cbaa11df45cfca68f415fbd38548adbd2370" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setiv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setiv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="123ae4a5c669f8bb24b8cf176b2e86ba9cbfc11d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setiv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5a47bbf6d640fdec1cfafd760bfcac50991da5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setnv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setnv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="5eccffc67f571a8b3181f46b612067a5e6120f2c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setnv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d50840cdec742cb9632278831faf80f40688dc0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setpv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="c985c9690a312c499374407655b6ef9ec2e3e6e4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56d7c6489caae9851ec3dcbcf0456ce3751a5c3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setpvf&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="e2888cf79b645f5b449d1b4c6efb91b8ec3971c7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0fa3335ee153a3cf62cbff610e08349e8ad4b2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpviv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setpviv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="8d6dbd83d6e02627b8bee537343e41f6ed49077f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpviv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60536ff4b89cb5040f19feec4be6721d10632d63" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setpvn&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="550ac76e7931e655b1382b031643a9cb5f52950b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;sv_setpvn&lt;/code&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="481f4a0f0ab1f9f4574bd5faf772b821ede1d4a1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0931cea12270dd86a07ee0a9b6ee1091a8ce19a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4532add555cdc643bf47f76523943ddddd111761" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn_mg&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;sv_setpvn_mg&lt;/code&gt; , pero toma una cadena literal en lugar de un par cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="1d27898179a76dbb0e01036ba711d50a1c17a52f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setpvn_mg&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ab2d21a73ed79e392dc24ffd68bc21b0539241" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setref_pvn&lt;/code&gt; , but takes a literal string instead of a string/length pair.</source>
          <target state="translated">Como &lt;code&gt;sv_setref_pvn&lt;/code&gt; , pero toma una cadena literal en lugar de un par de cadena / longitud.</target>
        </trans-unit>
        <trans-unit id="9100e36266ee96c2294edf8f453c2726c48b65aa" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setref_pvn&lt;/code&gt;, but takes a literal string instead of a string/length pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2af716b65ba49b4f611a8f9a63df24afbfd34e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setsv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setsv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="029cf42c4714d829664184f54a69a5ea13d859b0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setsv&lt;/code&gt; but doesn't process magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setsv&lt;/code&gt; pero no procesa magia.</target>
        </trans-unit>
        <trans-unit id="45071495c613f505020d1cfedfcf720566ba6c27" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setsv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae58ef52e0fd2638f20a33b2c2ee3d70d45b7c9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setuv&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_setuv&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="6cf4c4e06956eb2dfc680c6ee569d41126786590" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_setuv&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc41b001c50d7d45a00cf8022d9c1f06a67020a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_usepvn&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_usepvn&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="00375d68772b5a6b2aa4d91a6b9d96252b296a38" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_usepvn&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48c5ccb5f58e5511c541b8f7b2bd77d2574234d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_downgrade&lt;/code&gt;, but does not process get magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19779d3638b6a1460d46c2178e7d9265d9957c6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_downgrade&lt;/code&gt;, but with additional &lt;code&gt;flags&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; has &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, processes get magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca37005148896df7fa5618334163dda55501b5e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_upgrade&lt;/code&gt;, but doesn't do magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4a9fe99bea434f521ad5e3db444369a722ea86" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_utf8_upgrade_flags&lt;/code&gt;, but has an additional parameter &lt;code&gt;extra&lt;/code&gt;, which is the number of unused bytes the string of &lt;code&gt;sv&lt;/code&gt; is guaranteed to have free after it upon return. This allows the caller to reserve extra space that it intends to fill, to avoid extra grows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4287363f537b02349404ef50aa3650a2da519053" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vcatpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_vcatpvf&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="07a25ef8f06b26f172176af25178325ccea0a52b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vcatpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14adf015575fe99f6c00f91da82a21970e20b8bd" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vsetpvf&lt;/code&gt; , but also handles 'set' magic.</source>
          <target state="translated">Como &lt;code&gt;sv_vsetpvf&lt;/code&gt; , pero tambi&amp;eacute;n maneja la magia 'set'.</target>
        </trans-unit>
        <trans-unit id="c99a7a12d3c14e8e4681f2d062967a1eb814fa0a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;sv_vsetpvf&lt;/code&gt;, but also handles 'set' magic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b383c55580a503d9f345eddab42a79557f296499" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;system&lt;/code&gt;, backticks put the child process exit code in &lt;code&gt;$?&lt;/code&gt;. If you'd like to manually inspect failure, you can check all possible failure modes by inspecting &lt;code&gt;$?&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ce5b4a9c5792e4e3d807965bc2f0706dc489a6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;todo()&lt;/code&gt; but only returns the value of &lt;code&gt;$TODO&lt;/code&gt; ignoring &lt;code&gt;todo_start()&lt;/code&gt; .</source>
          <target state="translated">Como &lt;code&gt;todo()&lt;/code&gt; pero solo devuelve el valor de &lt;code&gt;$TODO&lt;/code&gt; ignorando &lt;code&gt;todo_start()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56964d94313ff89750dbfac18fe4fbc021ee2504" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;todo()&lt;/code&gt; but only returns the value of &lt;code&gt;$TODO&lt;/code&gt; ignoring &lt;code&gt;todo_start()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c255f9b56f3d7d5035702059d9768bd0f276412" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::enabled&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908551960f131fd786c42f778071d30b61bb4476" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::fatal_enabled&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7a76c841e5f7c9a4c21b318b86a7b486c96e50" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::warn&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2a4468163a8d06d15e520d4c62bc8d67e5d7bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;warnings::warnif&lt;/code&gt;, but $level specifies the exact call frame, 0 being the immediate caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824220de4c99cc183f3e468cfbca9236675ff6fd" translate="yes" xml:space="preserve">
          <source>Like C, Perl does a certain amount of expression evaluation at compile time whenever it determines that all arguments to an operator are static and have no side effects. In particular, string concatenation happens at compile time between literals that don't do variable substitution. Backslash interpolation also happens at compile time. You can say</source>
          <target state="translated">Al igual que C,Perl hace una cierta evaluación de la expresión en el momento de la compilación siempre que determina que todos los argumentos a un operador son estáticos y no tienen efectos secundarios.En particular,la concatenación de cadenas ocurre en tiempo de compilación entre literales que no hacen sustitución de variables.La interpolación de barra invertida también ocurre en tiempo de compilación.Puedes decir</target>
        </trans-unit>
        <trans-unit id="13593327ac22cf57826e7691f4f7f418be9cc890" translate="yes" xml:space="preserve">
          <source>Like CPAN::Bundle::inst_file, but returns the $VERSION</source>
          <target state="translated">Como CPAN::Bundle::inst_file,pero devuelve la $VERSION</target>
        </trans-unit>
        <trans-unit id="180b470a6637521531543b80ac419cbc37898af4" translate="yes" xml:space="preserve">
          <source>Like Open3 but without STDERR capture.</source>
          <target state="translated">Como Open3 pero sin captura de STDERR.</target>
        </trans-unit>
        <trans-unit id="2a63fd6efd31d5a247539ef7d4f8ae9b22c58256" translate="yes" xml:space="preserve">
          <source>Like PERLPREFIX, but only for the site install locations.</source>
          <target state="translated">Como PERLPREFIX,pero sólo para los lugares de instalación del sitio.</target>
        </trans-unit>
        <trans-unit id="991d27f54f9be6d1ccfe86b4d87c281614bb46a9" translate="yes" xml:space="preserve">
          <source>Like PERLPREFIX, but only for the vendor install locations.</source>
          <target state="translated">Como PERLPREFIX,pero sólo para los lugares de instalación de los vendedores.</target>
        </trans-unit>
        <trans-unit id="3763cf6a811e93d689892e612d95e5287de00f17" translate="yes" xml:space="preserve">
          <source>Like PERLRUN, except it uses FULLPERL.</source>
          <target state="translated">Como PERLRUN,excepto que usa FULLPERL.</target>
        </trans-unit>
        <trans-unit id="8dff3350726fa7fbd1b6410bcef4d0a73c7217e0" translate="yes" xml:space="preserve">
          <source>Like PERLRUNINST, except it uses FULLPERL.</source>
          <target state="translated">Como PERLRUNINST,excepto que usa FULLPERL.</target>
        </trans-unit>
        <trans-unit id="5841126e64b3c89df76665c26ca814c87d8e1ffb" translate="yes" xml:space="preserve">
          <source>Like PREFIX, it sets several INSTALL* attributes at once. Unlike PREFIX it is easy to predict where the module will end up. The installation pattern looks like this:</source>
          <target state="translated">Como PREFIX,establece varios atributos de INSTALL*a la vez.A diferencia de PREFIX,es fácil predecir dónde acabará el módulo.El patrón de instalación se ve así:</target>
        </trans-unit>
        <trans-unit id="3eac640353c06a496dbb32cf64186b352fd16578" translate="yes" xml:space="preserve">
          <source>Like T_REFREF, except it does strict type checking (inheritance is not supported).</source>
          <target state="translated">Como T_REFREF,excepto que hace una estricta comprobación de tipos (la herencia no está soportada).</target>
        </trans-unit>
        <trans-unit id="b94e5c472f080d505351ce0495c57a8957e2a984" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt; . Checks if &lt;code&gt;$got == $expected&lt;/code&gt; . This is the numeric version.</source>
          <target state="translated">Como Test :: More &lt;code&gt;is()&lt;/code&gt; . Comprueba si &lt;code&gt;$got == $expected&lt;/code&gt; . Esta es la versi&amp;oacute;n num&amp;eacute;rica.</target>
        </trans-unit>
        <trans-unit id="cc96ef3fc2347f9c271af1895e169a768a31a74a" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt; . Checks if &lt;code&gt;$got eq $expected&lt;/code&gt; . This is the string version.</source>
          <target state="translated">Como Test :: More &lt;code&gt;is()&lt;/code&gt; . Comprueba si &lt;code&gt;$got eq $expected&lt;/code&gt; . Esta es la versi&amp;oacute;n de cadena.</target>
        </trans-unit>
        <trans-unit id="17f62623a10758c4c3b6761435cb5075609a1791" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt;. Checks if &lt;code&gt;$got == $expected&lt;/code&gt;. This is the numeric version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9447f392d01121cd67915dc61b0ec4cea9fd56" translate="yes" xml:space="preserve">
          <source>Like Test::More's &lt;code&gt;is()&lt;/code&gt;. Checks if &lt;code&gt;$got eq $expected&lt;/code&gt;. This is the string version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f7c9b4de7f16b968c9df459ba87fa3286f45be" translate="yes" xml:space="preserve">
          <source>Like UTF-8, UTF-16 is a variable-width encoding, but where UTF-8 uses 8-bit code units, UTF-16 uses 16-bit code units. All code points occupy either 2 or 4 bytes in UTF-16: code points &lt;code&gt;U+0000..U+FFFF&lt;/code&gt; are stored in a single 16-bit unit, and code points &lt;code&gt;U+10000..U+10FFFF&lt;/code&gt; in two 16-bit units. The latter case is using</source>
          <target state="translated">Como UTF-8, UTF-16 es una codificaci&amp;oacute;n de ancho variable, pero donde UTF-8 usa unidades de c&amp;oacute;digo de 8 bits, UTF-16 usa unidades de c&amp;oacute;digo de 16 bits. Todos los puntos de c&amp;oacute;digo ocupan 2 o 4 bytes en UTF-16: los puntos de c&amp;oacute;digo &lt;code&gt;U+0000..U+FFFF&lt;/code&gt; se almacenan en una sola unidad de 16 bits, y los puntos de c&amp;oacute;digo &lt;code&gt;U+10000..U+10FFFF&lt;/code&gt; en dos unidades. El &amp;uacute;ltimo caso est&amp;aacute; usando</target>
        </trans-unit>
        <trans-unit id="8dbb04c45e23e298185620fabadd06b7455bdd6a" translate="yes" xml:space="preserve">
          <source>Like UTF-8, but EBCDIC-safe, in the way that UTF-8 is ASCII-safe. This means that all the basic characters (which includes all those that have ASCII equivalents (like &lt;code&gt;&quot;A&quot;&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , &lt;code&gt;&quot;%&quot;&lt;/code&gt; ,</source>
          <target state="translated">Como UTF-8, pero seguro para EBCDIC, de la misma forma que UTF-8 es seguro para ASCII. Esto significa que todos los caracteres b&amp;aacute;sicos (que incluye todos los que tienen equivalentes ASCII (como &lt;code&gt;&quot;A&quot;&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , &lt;code&gt;&quot;%&quot;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="e6170cafe214afdbb40c4ffbbff65c6aeebd0ba1" translate="yes" xml:space="preserve">
          <source>Like UTF-8, but EBCDIC-safe, in the way that UTF-8 is ASCII-safe. This means that all the basic characters (which includes all those that have ASCII equivalents (like &lt;code&gt;&quot;A&quot;&lt;/code&gt;, &lt;code&gt;&quot;0&quot;&lt;/code&gt;, &lt;code&gt;&quot;%&quot;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6834a3fade58397a1a46bf4fd2e951ded5a49d5e" translate="yes" xml:space="preserve">
          <source>Like a forked process, but without &lt;b&gt;fork&lt;/b&gt;&amp;rsquo;s inherent memory protection. A thread is lighter weight than a full process, in that a process could have multiple threads running around in it, all fighting over the same process&amp;rsquo;s memory space unless steps are taken to protect threads from one another.</source>
          <target state="translated">Como un proceso bifurcado, pero sin la protecci&amp;oacute;n de memoria inherente a la &lt;b&gt;bifurcaci&amp;oacute;n&lt;/b&gt; . Un subproceso es m&amp;aacute;s liviano que un proceso completo, ya que un proceso podr&amp;iacute;a tener varios subprocesos corriendo en &amp;eacute;l, todos luchando por el espacio de memoria del mismo proceso a menos que se tomen medidas para proteger los subprocesos entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="78469c56db0b66e6f31da051cfaed2326cdc6d30" translate="yes" xml:space="preserve">
          <source>Like all Perl character operations, &lt;a href=&quot;#length-EXPR&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; normally deals in logical characters, not physical bytes. For how many bytes a string encoded as UTF-8 would take up, use &lt;code&gt;length(Encode::encode('UTF-8', EXPR))&lt;/code&gt; (you'll have to &lt;code&gt;use Encode&lt;/code&gt; first). See &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2266dcab58f5b4cb8dc0bb09fd899c041599a2" translate="yes" xml:space="preserve">
          <source>Like all Perl character operations, length() normally deals in logical characters, not physical bytes. For how many bytes a string encoded as UTF-8 would take up, use &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; (you'll have to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; first). See &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; and &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="translated">Como todas las operaciones de caracteres de Perl, length () normalmente trata en caracteres l&amp;oacute;gicos, no en bytes f&amp;iacute;sicos. Para cu&amp;aacute;ntos bytes ocupar&amp;iacute;a una cadena codificada como UTF-8, use &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; ( primero tendr&amp;aacute; que &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; ). Consulte &lt;a href=&quot;encode&quot;&gt;Codificar&lt;/a&gt; y &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78626057c138b9f0db027cda4d5b95c4d7adde63" translate="yes" xml:space="preserve">
          <source>Like all Perl character operations, length() normally deals in logical characters, not physical bytes. For how many bytes a string encoded as UTF-8 would take up, use &lt;code&gt;&lt;a href=&quot;length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; (you'll have to &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; first). See &lt;a href=&quot;../encode&quot;&gt;Encode&lt;/a&gt; and &lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt;.</source>
          <target state="translated">Como todas las operaciones de caracteres de Perl, length () normalmente trata en caracteres l&amp;oacute;gicos, no en bytes f&amp;iacute;sicos. Para cu&amp;aacute;ntos bytes ocupar&amp;iacute;a una cadena codificada como UTF-8, use &lt;code&gt;&lt;a href=&quot;length&quot;&gt;length(Encode::encode_utf8(EXPR))&lt;/a&gt;&lt;/code&gt; ( primero tendr&amp;aacute; que &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; Encode&lt;/code&gt; ). Consulte &lt;a href=&quot;../encode&quot;&gt;Codificar&lt;/a&gt; y &lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b262f2d7a83664abc258a4d3c715339214f8a1b0" translate="yes" xml:space="preserve">
          <source>Like chapters in many books, all top-level Perl source files (along with a few others here and there) begin with an epigrammatic inscription that alludes, indirectly and metaphorically, to the material you're about to read.</source>
          <target state="translated">Como los capítulos de muchos libros,todos los archivos de fuentes de Perl de alto nivel (junto con algunos otros aquí y allá)comienzan con una inscripción epigramática que alude,de manera indirecta y metafórica,al material que estás a punto de leer.</target>
        </trans-unit>
        <trans-unit id="c0d2dcb20ae20f18b840f20ba286a29e5869333a" translate="yes" xml:space="preserve">
          <source>Like config_sh() but returns, as a list, only the config entries who's names match the $regex.</source>
          <target state="translated">Como config_sh()pero devuelve,como una lista,sólo las entradas de configuración cuyos nombres coinciden con el $regex.</target>
        </trans-unit>
        <trans-unit id="f227f0321acaa416e145c904a4d8ec45847b8d64" translate="yes" xml:space="preserve">
          <source>Like expand, but returns objects of the appropriate type, i.e. CPAN::Bundle objects for bundles, CPAN::Module objects for modules, and CPAN::Distribution objects for distributions. Note: it does not expand to CPAN::Author objects.</source>
          <target state="translated">Como expandir,pero devuelve objetos del tipo apropiado,es decir,CPAN::Objetos de paquete para paquetes,CPAN::Objetos de módulo para módulos,y CPAN::Objetos de distribución para distribuciones.Nota:no se expande a los objetos CPAN::Author.</target>
        </trans-unit>
        <trans-unit id="7987e14ecfb530ef395d93bea0916098ba25cf44" translate="yes" xml:space="preserve">
          <source>Like many OO interfaces, the new() method is used to initialize version objects. If two arguments are passed to &lt;code&gt;new()&lt;/code&gt;, the &lt;b&gt;second&lt;/b&gt; one will be used as if it were prefixed with &quot;v&quot;. This is to support historical use of the &lt;code&gt;qw&lt;/code&gt; operator with the CVS variable $Revision, which is automatically incremented by CVS every time the file is committed to the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f385d834d0c261050be5f51ac316a9238769d175" translate="yes" xml:space="preserve">
          <source>Like many languages, Perl provides for user-defined subroutines. These may be located anywhere in the main program, loaded in from other files via the &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; keywords, or generated on the fly using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or anonymous subroutines. You can even call a function indirectly using a variable containing its name or a CODE reference.</source>
          <target state="translated">Como muchos lenguajes, Perl proporciona subrutinas definidas por el usuario. Estos pueden estar ubicados en cualquier lugar del programa principal, cargados desde otros archivos a trav&amp;eacute;s de las palabras clave &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , o generados sobre la marcha usando subrutinas &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; o an&amp;oacute;nimas. Incluso puede llamar a una funci&amp;oacute;n indirectamente usando una variable que contenga su nombre o una referencia de C&amp;Oacute;DIGO.</target>
        </trans-unit>
        <trans-unit id="fa955621946321cd50075e261d09e1a7c92c1f08" translate="yes" xml:space="preserve">
          <source>Like many languages, Perl provides for user-defined subroutines. These may be located anywhere in the main program, loaded in from other files via the &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, or &lt;code&gt;use&lt;/code&gt; keywords, or generated on the fly using &lt;code&gt;eval&lt;/code&gt; or anonymous subroutines. You can even call a function indirectly using a variable containing its name or a CODE reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff1e677a357242f787d00ffe6b33170f4a5ab49" translate="yes" xml:space="preserve">
          <source>Like most routines, returns a true value if successful and a false value [and sets &lt;code&gt;$^E&lt;/code&gt; and &lt;code&gt;regLastError()&lt;/code&gt;] on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bb042c0a5ea5166342c8b0ad6d2f8a2141fbc4" translate="yes" xml:space="preserve">
          <source>Like octal escapes, there are two forms of hexadecimal escapes, but both start with the sequence &lt;code&gt;\x&lt;/code&gt; . This is followed by either exactly two hexadecimal digits forming a number, or a hexadecimal number of arbitrary length surrounded by curly braces. The hexadecimal number is the code point of the character you want to express.</source>
          <target state="translated">Al igual que los escapes octales, hay dos formas de escapes hexadecimales, pero ambos comienzan con la secuencia &lt;code&gt;\x&lt;/code&gt; . A esto le siguen exactamente dos d&amp;iacute;gitos hexadecimales que forman un n&amp;uacute;mero o un n&amp;uacute;mero hexadecimal de longitud arbitraria rodeado por llaves. El n&amp;uacute;mero hexadecimal es el punto de c&amp;oacute;digo del car&amp;aacute;cter que desea expresar.</target>
        </trans-unit>
        <trans-unit id="8a3985e9eb051df5a5554fc58d279011c3ff1a77" translate="yes" xml:space="preserve">
          <source>Like octal escapes, there are two forms of hexadecimal escapes, but both start with the sequence &lt;code&gt;\x&lt;/code&gt;. This is followed by either exactly two hexadecimal digits forming a number, or a hexadecimal number of arbitrary length surrounded by curly braces. The hexadecimal number is the code point of the character you want to express.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea93e43cdaa94011eb7f20af4624fc89df3b75e2" translate="yes" xml:space="preserve">
          <source>Like other pragmas (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; , for example), features have a lexical effect. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature qw(foo)&lt;/code&gt; will only make the feature &quot;foo&quot; available from that point to the end of the enclosing block.</source>
          <target state="translated">Como otros pragmas ( &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; , por ejemplo), las caracter&amp;iacute;sticas tienen un efecto l&amp;eacute;xico. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature qw(foo)&lt;/code&gt; solo har&amp;aacute; que la funci&amp;oacute;n &quot;foo&quot; est&amp;eacute; disponible desde ese punto hasta el final del bloque adjunto.</target>
        </trans-unit>
        <trans-unit id="60f22d4af04544396e97c0fdb822358710ad0090" translate="yes" xml:space="preserve">
          <source>Like other pragmas (&lt;code&gt;use strict&lt;/code&gt;, for example), features have a lexical effect. &lt;code&gt;use feature qw(foo)&lt;/code&gt; will only make the feature &quot;foo&quot; available from that point to the end of the enclosing block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e331233743ae8af2fc425fe1e46364f44f02fcf9" translate="yes" xml:space="preserve">
          <source>Like property names, there is typically at least a short name for each such property-value, and a long name. If you know any name of the property-value (which you can get by &lt;a href=&quot;#prop_values%28%29&quot;&gt;&quot;prop_values()&quot;&lt;/a&gt;, you can use &lt;code&gt;prop_value_aliases&lt;/code&gt;() to get the long name (when called in scalar context), or a list of all the names, with the short name in the 0th element, the long name in the next element, and any other synonyms in the remaining elements, in no particular order, except that any all-numeric synonyms will be last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84dcad78456fba45a7cd86383d5b5d51df6ab7d" translate="yes" xml:space="preserve">
          <source>Like property names, there is typically at least a short name for each such property-value, and a long name. If you know any name of the property-value (which you can get by &lt;a href=&quot;#prop_values()&quot;&gt;prop_values()&lt;/a&gt;, you can use &lt;code&gt;prop_value_aliases&lt;/code&gt; () to get the long name (when called in scalar context), or a list of all the names, with the short name in the 0th element, the long name in the next element, and any other synonyms in the remaining elements, in no particular order, except that any all-numeric synonyms will be last.</source>
          <target state="translated">Al igual que los nombres de propiedad, normalmente hay al menos un nombre corto para cada valor de propiedad y un nombre largo. Si conoce cualquier nombre del valor de propiedad (que puede obtener mediante &lt;a href=&quot;#prop_values()&quot;&gt;prop_values ​​()&lt;/a&gt; , puede usar &lt;code&gt;prop_value_aliases&lt;/code&gt; () para obtener el nombre largo (cuando se llama en contexto escalar), o una lista de todos los nombres, con el name en el elemento 0, el nombre largo en el elemento siguiente y cualquier otro sin&amp;oacute;nimo en los elementos restantes, sin ning&amp;uacute;n orden en particular, excepto que cualquier sin&amp;oacute;nimo totalmente num&amp;eacute;rico ser&amp;aacute; el &amp;uacute;ltimo.</target>
        </trans-unit>
        <trans-unit id="199b34f10e1b7c8e7aa443166b2eaa7617b87f12" translate="yes" xml:space="preserve">
          <source>Like sv_copypv, but doesn't invoke get magic first.</source>
          <target state="translated">Como sv_copypv,pero no invoca a get magic primero.</target>
        </trans-unit>
        <trans-unit id="fa3c089315a35ab69068f31035a53de1242b1f4a" translate="yes" xml:space="preserve">
          <source>Like sv_utf8_upgrade, but doesn't do magic on &lt;code&gt;sv&lt;/code&gt; .</source>
          <target state="translated">Como sv_utf8_upgrade, pero no hace magia en &lt;code&gt;sv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="491235f5863c419144ac401911f4034bbb235829" translate="yes" xml:space="preserve">
          <source>Like sv_utf8_upgrade_flags, but has an additional parameter &lt;code&gt;extra&lt;/code&gt; , which is the number of unused bytes the string of 'sv' is guaranteed to have free after it upon return. This allows the caller to reserve extra space that it intends to fill, to avoid extra grows.</source>
          <target state="translated">Como sv_utf8_upgrade_flags, pero tiene un par&amp;aacute;metro &lt;code&gt;extra&lt;/code&gt; , que es el n&amp;uacute;mero de bytes no utilizados que se garantiza que la cadena de 'sv' tendr&amp;aacute; libres despu&amp;eacute;s de la devoluci&amp;oacute;n. Esto le permite a la persona que llama reservar espacio adicional que pretende llenar, para evitar crecimientos adicionales.</target>
        </trans-unit>
        <trans-unit id="b473e807de38ef5585564f3999d8d88c0c2f9ac9" translate="yes" xml:space="preserve">
          <source>Like the</source>
          <target state="translated">Como el</target>
        </trans-unit>
        <trans-unit id="1ec8b78d751f8503bdfc1aa5c17c2c7732f46241" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#%28%3Fadlupimnsx-imnsx%29&quot;&gt;&quot;(?adlupimnsx-imnsx)&quot;&lt;/a&gt; construct, &lt;code&gt;aa&lt;/code&gt; and &lt;code&gt;&quot;a&quot;&lt;/code&gt; override each other, as do &lt;code&gt;xx&lt;/code&gt; and &lt;code&gt;&quot;x&quot;&lt;/code&gt;. They are not additive. So, doing something like &lt;code&gt;(?xx-x:foo)&lt;/code&gt; turns off all &lt;code&gt;&quot;x&quot;&lt;/code&gt; behavior for matching &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e09e117230303a3e7e1540483add81bffa29662" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#Unicode-Properties&quot;&gt;Unicode properties&lt;/a&gt;, most of the POSIX properties match the same regardless of whether case-insensitive (&lt;code&gt;/i&lt;/code&gt;) matching is in effect or not. The two exceptions are &lt;code&gt;[:upper:]&lt;/code&gt; and &lt;code&gt;[:lower:]&lt;/code&gt;. Under &lt;code&gt;/i&lt;/code&gt;, they each match the union of &lt;code&gt;[:upper:]&lt;/code&gt; and &lt;code&gt;[:lower:]&lt;/code&gt;.</source>
          <target state="translated">Al igual que las &lt;a href=&quot;#Unicode-Properties&quot;&gt;propiedades Unicode&lt;/a&gt; , la mayor&amp;iacute;a de las propiedades POSIX coinciden independientemente de si la coincidencia que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas ( &lt;code&gt;/i&lt;/code&gt; ) est&amp;aacute; en vigor o no. Las dos excepciones son &lt;code&gt;[:upper:]&lt;/code&gt; y &lt;code&gt;[:lower:]&lt;/code&gt; . Bajo &lt;code&gt;/i&lt;/code&gt; , cada uno coincide con la uni&amp;oacute;n de &lt;code&gt;[:upper:]&lt;/code&gt; y &lt;code&gt;[:lower:]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56e82ac0ce55d077dfdc075b06ddac56ad8fd05e" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, if a &lt;code&gt;readline&lt;/code&gt; expression is used as the condition of a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt; loop, then it will be implicitly assigned to &lt;code&gt;$_&lt;/code&gt;. If either a &lt;code&gt;readline&lt;/code&gt; expression or an explicit assignment of a &lt;code&gt;readline&lt;/code&gt; expression to a scalar is used as a &lt;code&gt;while&lt;/code&gt;/&lt;code&gt;for&lt;/code&gt; condition, then the condition actually tests for definedness of the expression's value, not for its regular truth value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf3175a68d636ecf9925b34e6ff6a44a156b660" translate="yes" xml:space="preserve">
          <source>Like the existing DBM Filter functionality, this module arranges for the &lt;code&gt;$_&lt;/code&gt; variable to be populated with the key or value that a filter will check. This usually means that most DBM filters tend to be very short.</source>
          <target state="translated">Al igual que la funcionalidad de filtro DBM existente, este m&amp;oacute;dulo dispone que la variable &lt;code&gt;$_&lt;/code&gt; se rellene con la clave o el valor que comprobar&amp;aacute; un filtro. Esto generalmente significa que la mayor&amp;iacute;a de los filtros DBM tienden a ser muy cortos.</target>
        </trans-unit>
        <trans-unit id="2aa9d0e9009ba5b1538c8cb1249a579d95be7bcd" translate="yes" xml:space="preserve">
          <source>Like the flattened incoming parameter list, the return list is also flattened on return. So all you have managed to do here is stored everything in &lt;code&gt;@a&lt;/code&gt; and made &lt;code&gt;@b&lt;/code&gt; empty. See &lt;a href=&quot;#Pass-by-Reference&quot;&gt;&quot;Pass by Reference&quot;&lt;/a&gt; for alternatives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cce6c08fa97ca0be477f0721fb283a52d10b11" translate="yes" xml:space="preserve">
          <source>Like the flattened incoming parameter list, the return list is also flattened on return. So all you have managed to do here is stored everything in &lt;code&gt;@a&lt;/code&gt; and made &lt;code&gt;@b&lt;/code&gt; empty. See &lt;a href=&quot;#Pass-by-Reference&quot;&gt;Pass by Reference&lt;/a&gt; for alternatives.</source>
          <target state="translated">Al igual que la lista de par&amp;aacute;metros entrantes aplanada, la lista de devoluci&amp;oacute;n tambi&amp;eacute;n se aplasta al regresar. As&amp;iacute; que todo lo que han logrado hacer aqu&amp;iacute; se almacena todo en &lt;code&gt;@a&lt;/code&gt; e hizo &lt;code&gt;@b&lt;/code&gt; vaciar. Consulte &lt;a href=&quot;#Pass-by-Reference&quot;&gt;Pasar por referencia&lt;/a&gt; para conocer las alternativas.</target>
        </trans-unit>
        <trans-unit id="afd075e21a0c597db0ab2821856e88ceb5961fd6" translate="yes" xml:space="preserve">
          <source>Like the normal &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt;, except it reports according to your &lt;code&gt;level()&lt;/code&gt; .</source>
          <target state="translated">Como el &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; normal () , excepto que informa seg&amp;uacute;n su &lt;code&gt;level()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d1f3b5af74d0fcd2065711ea1d65ad1437e3ca2" translate="yes" xml:space="preserve">
          <source>Like the normal &lt;code&gt;caller()&lt;/code&gt;, except it reports according to your &lt;code&gt;level()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d2b0ec03adb313bc91ba8220b07bc1ab800f57" translate="yes" xml:space="preserve">
          <source>Like the other methods, the input parameter is not checked for validity. &lt;code&gt;undef&lt;/code&gt; or containing non-digits has the same effect as 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200195811a3c205ce0d87247b5aab2a0a4c65d8e" translate="yes" xml:space="preserve">
          <source>Like their AV counterparts, &lt;code&gt;hv_clear&lt;/code&gt; deletes all the entries in the hash table but does not actually delete the hash table. The &lt;code&gt;hv_undef&lt;/code&gt; deletes both the entries and the hash table itself.</source>
          <target state="translated">Al igual que sus hom&amp;oacute;logos de AV, &lt;code&gt;hv_clear&lt;/code&gt; elimina todas las entradas en la tabla hash, pero en realidad no elimina la tabla hash. El &lt;code&gt;hv_undef&lt;/code&gt; elimina tanto las entradas y la propia tabla hash.</target>
        </trans-unit>
        <trans-unit id="e82abff5c6c10139b1928c82bbe909480a69e24a" translate="yes" xml:space="preserve">
          <source>Likely to occur for a perl binary that was not properly installed. Correct by conducting a proper installation.</source>
          <target state="translated">Es probable que ocurra en el caso de un binario de perl que no se haya instalado correctamente.Corrígelo realizando una instalación adecuada.</target>
        </trans-unit>
        <trans-unit id="5195e8e0970c4f356d29e2dc5df49c188d971cda" translate="yes" xml:space="preserve">
          <source>Likely to occur for a perl library tree that was not properly installed. Correct by conducting a proper installation.</source>
          <target state="translated">Es probable que ocurra en el caso de un árbol de biblioteca de perlas que no se haya instalado correctamente.Corrígelo realizando una instalación adecuada.</target>
        </trans-unit>
        <trans-unit id="5a2da7a5f3225b97435c319fa8a430eb74f8dc5d" translate="yes" xml:space="preserve">
          <source>Likely to occur for a perl that was not properly installed. Correct by conducting a proper installation.</source>
          <target state="translated">Es probable que ocurra para un perl que no fue instalado correctamente.Corrígelo realizando una instalación adecuada.</target>
        </trans-unit>
        <trans-unit id="fc78654c95e5eb9c78fd54cff382380c29359dd7" translate="yes" xml:space="preserve">
          <source>Likely you forgot the &lt;code&gt;/x&lt;/code&gt; modifier or there was a typo in the pattern. For example, did you really mean to match a form-feed? If so, all the ASCII vertical space control characters are representable by escape sequences which won't present such a jarring appearance as your pattern does when displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87358f4e2ddd3816d7f56b79a06ec5e87b2b467" translate="yes" xml:space="preserve">
          <source>Likely, you should use this only for debugging anyway.</source>
          <target state="translated">Probablemente,deberías usar esto sólo para depurar de todos modos.</target>
        </trans-unit>
        <trans-unit id="5e2ad79894aa707c67ca50ba4a61384758d0873a" translate="yes" xml:space="preserve">
          <source>Likewise on all other OS levels. Then execute the following command, and fill in its choices</source>
          <target state="translated">Lo mismo en todos los demás niveles del sistema operativo.Entonces ejecuta el siguiente comando,y rellena sus opciones</target>
        </trans-unit>
        <trans-unit id="907735ad554b354d50508dedc314aa895182b86c" translate="yes" xml:space="preserve">
          <source>Likewise the call in:</source>
          <target state="translated">Lo mismo ocurre con la llamada:</target>
        </trans-unit>
        <trans-unit id="65ed6c9aec28bb7eb33858993a0680b4d9a0419f" translate="yes" xml:space="preserve">
          <source>Likewise,</source>
          <target state="translated">Likewise,</target>
        </trans-unit>
        <trans-unit id="c02c1537f9374adb04ab89c0867bc362683b8992" translate="yes" xml:space="preserve">
          <source>Likewise, &lt;code&gt;o conf KEY &lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt; LIST&lt;/code&gt; passes the LIST to the corresponding splice command.</source>
          <target state="translated">Asimismo, &lt;code&gt;o conf KEY &lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt; LIST&lt;/code&gt; pasa la LIST al comando de empalme correspondiente.</target>
        </trans-unit>
        <trans-unit id="886e8885f96bc8b4a5e209980f534b6f61eacaf4" translate="yes" xml:space="preserve">
          <source>Likewise, Filter::Simple is also smart enough to Do The Right Thing if you use Exporter:</source>
          <target state="translated">Del mismo modo,Filtro::Simple también es lo suficientemente inteligente para hacer lo correcto si se utiliza el Exportador:</target>
        </trans-unit>
        <trans-unit id="160bda2110bdb1f3a950ddf5accf544eb0786069" translate="yes" xml:space="preserve">
          <source>Likewise, declaring any variables with the &lt;code&gt;:Loud&lt;/code&gt; attribute within the package:</source>
          <target state="translated">Del mismo modo, declarando cualquier variable con el atributo &lt;code&gt;:Loud&lt;/code&gt; dentro del paquete:</target>
        </trans-unit>
        <trans-unit id="84a02ce9b38a8238dd6e99f162e9536e66631ce0" translate="yes" xml:space="preserve">
          <source>Likewise, install &quot;iPKGui Beta&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6adecc01f3598897c4c9f089b3d20664151e435" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; formats pack a string that's that many bits long. Each such format generates 1 bit of the result. These are typically followed by a repeat count like &lt;code&gt;B8&lt;/code&gt; or &lt;code&gt;B64&lt;/code&gt; .</source>
          <target state="translated">Del mismo modo, las &lt;code&gt;b&lt;/code&gt; y &lt;code&gt;B&lt;/code&gt; formatos de paquete de una cadena que es esa cantidad de bits de longitud. Cada uno de estos formatos genera 1 bit del resultado. Estos suelen ir seguidos de un recuento de repeticiones como &lt;code&gt;B8&lt;/code&gt; o &lt;code&gt;B64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a9dd269cb5956c09af91c5ffea1e001451d2341" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; formats pack a string that's that many bits long. Each such format generates 1 bit of the result. These are typically followed by a repeat count like &lt;code&gt;B8&lt;/code&gt; or &lt;code&gt;B64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e8f9ee995abe8e9c9ec7e9aaf53f3578e6a6e8" translate="yes" xml:space="preserve">
          <source>Likewise, there is no public API to read values from the temporaries stack. Instead. the macros &lt;code&gt;SAVETMPS&lt;/code&gt; and &lt;code&gt;FREETPMS&lt;/code&gt; are used. The &lt;code&gt;SAVETMPS&lt;/code&gt; macro establishes the base levels of the temporaries stack, by capturing the current value of &lt;code&gt;PL_tmps_ix&lt;/code&gt; into &lt;code&gt;PL_tmps_floor&lt;/code&gt; and saving the previous value to the save stack. Thereafter, whenever &lt;code&gt;FREETMPS&lt;/code&gt; is invoked all of the temporaries that have been pushed since that level are reclaimed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cbdf24c8a85f92cd82aa3a094249d6de02bf8f" translate="yes" xml:space="preserve">
          <source>Likewise, to create a class hierarchy in which every initializer inherited by a new object is invoked:</source>
          <target state="translated">Asimismo,crear una jerarquía de clases en la que se invoque cada inicializador heredado por un nuevo objeto:</target>
        </trans-unit>
        <trans-unit id="b2d941fa8901c396508e50ff7018851261440d12" translate="yes" xml:space="preserve">
          <source>Likewise, when using the &lt;a href=&quot;autosplit&quot;&gt;&lt;code&gt;AutoSplit&lt;/code&gt;&lt;/a&gt; module, try to keep your functions to 8.3 naming and case-insensitive conventions; or, at the least, make it so the resulting files have a unique (case-insensitively) first 8 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bd46189954c3a64d496328cd96089f6f4f9542" translate="yes" xml:space="preserve">
          <source>Likewise, when using the &lt;code&gt;AutoSplit&lt;/code&gt; module, try to keep your functions to 8.3 naming and case-insensitive conventions; or, at the least, make it so the resulting files have a unique (case-insensitively) first 8 characters.</source>
          <target state="translated">Del mismo modo, cuando utilice el m&amp;oacute;dulo &lt;code&gt;AutoSplit&lt;/code&gt; , intente mantener sus funciones en las convenciones de nombres 8.3 y que no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas; o, al menos, haga que los archivos resultantes tengan los primeros 8 caracteres &amp;uacute;nicos (sin distinci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas).</target>
        </trans-unit>
        <trans-unit id="622e4bdf3675a214ecc2d659e2770e558df61e8a" translate="yes" xml:space="preserve">
          <source>Limit on the value of Unicode code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73edeb8158f532278a32208dcd47fe3a3d7f86f" translate="yes" xml:space="preserve">
          <source>Limit recursion depth to N levels when dumping structures. Negative values are interpreted as infinity. Default: infinity.</source>
          <target state="translated">Limitar la profundidad de recursividad a los niveles de N cuando se vierten las estructuras.Los valores negativos se interpretan como infinito.Por defecto:infinito.</target>
        </trans-unit>
        <trans-unit id="2d1726e76688b7950a8162233fc1e17657b1edf0" translate="yes" xml:space="preserve">
          <source>Limitation with regard to &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">Limitaci&amp;oacute;n con respecto a &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55330d97525455296ae0e4b51ff25bb7abdac5c6" translate="yes" xml:space="preserve">
          <source>Limitation with regard to _</source>
          <target state="translated">Limitación con respecto a _</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="b39570022e2b6b41ec90b798a2544b51d29caf01" translate="yes" xml:space="preserve">
          <source>Limitations of Perl under AmigaOS 4.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e092ad529e2081e851e343be794f7609f24237" translate="yes" xml:space="preserve">
          <source>Limits of time_t</source>
          <target state="translated">Límites de tiempo_t</target>
        </trans-unit>
        <trans-unit id="6234e2f414d2b26733b9fd769dba962a7fcc3692" translate="yes" xml:space="preserve">
          <source>Limits on Numbers of Open Files on Solaris.</source>
          <target state="translated">Límites en el número de archivos abiertos en Solaris.</target>
        </trans-unit>
        <trans-unit id="a139366c419ef510c76cf49f4a191349fd578640" translate="yes" xml:space="preserve">
          <source>Line 1 is a macro, and its definition is dependent on your operating system. Line 3 references &lt;code&gt;PL_do_undump&lt;/code&gt; , a global variable - all global variables in Perl start with &lt;code&gt;PL_&lt;/code&gt; . This tells you whether the current running program was created with the &lt;code&gt;-u&lt;/code&gt; flag to perl and then</source>
          <target state="translated">La l&amp;iacute;nea 1 es una macro y su definici&amp;oacute;n depende de su sistema operativo. La l&amp;iacute;nea 3 hace referencia a &lt;code&gt;PL_do_undump&lt;/code&gt; , una variable global: todas las variables globales en Perl comienzan con &lt;code&gt;PL_&lt;/code&gt; . Esto le dice si el programa en ejecuci&amp;oacute;n actual fue creado con la bandera &lt;code&gt;-u&lt;/code&gt; en perl y luego</target>
        </trans-unit>
        <trans-unit id="0b0e9f3f9db20ac76f95740a88474a1af455f6f4" translate="yes" xml:space="preserve">
          <source>Line 1 is a macro, and its definition is dependent on your operating system. Line 3 references &lt;code&gt;PL_do_undump&lt;/code&gt;, a global variable - all global variables in Perl start with &lt;code&gt;PL_&lt;/code&gt;. This tells you whether the current running program was created with the &lt;code&gt;-u&lt;/code&gt; flag to perl and then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d4d7a9a244a3d12dfe7fb244172b4a39165816" translate="yes" xml:space="preserve">
          <source>Line 1 tells us we're looking at an SV which lives at &lt;code&gt;0xa04ecbc&lt;/code&gt; in memory. SVs themselves are very simple structures, but they contain a pointer to a more complex structure. In this case, it's a PV, a structure which holds a string value, at location &lt;code&gt;0xa041450&lt;/code&gt; . Line 2 is the reference count; there are no other references to this data, so it's 1.</source>
          <target state="translated">La l&amp;iacute;nea 1 nos dice que estamos viendo un SV que vive en &lt;code&gt;0xa04ecbc&lt;/code&gt; en la memoria. Los SV en s&amp;iacute; mismos son estructuras muy simples, pero contienen un puntero a una estructura m&amp;aacute;s compleja. En este caso, es un PV, una estructura que contiene un valor de cadena, en la ubicaci&amp;oacute;n &lt;code&gt;0xa041450&lt;/code&gt; . La l&amp;iacute;nea 2 es el recuento de referencia; no hay otras referencias a estos datos, por lo que es 1.</target>
        </trans-unit>
        <trans-unit id="8257e528d7a56dcca4db122b50b35bdc95c95709" translate="yes" xml:space="preserve">
          <source>Line 1 tells us we're looking at an SV which lives at &lt;code&gt;0xa04ecbc&lt;/code&gt; in memory. SVs themselves are very simple structures, but they contain a pointer to a more complex structure. In this case, it's a PV, a structure which holds a string value, at location &lt;code&gt;0xa041450&lt;/code&gt;. Line 2 is the reference count; there are no other references to this data, so it's 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852a5525bd0666646b8baf89f18138582eb7fb29" translate="yes" xml:space="preserve">
          <source>Line 1, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Filter::cpp&lt;/code&gt; , includes and installs the &lt;code&gt;cpp&lt;/code&gt; filter module. All source filters work this way. The use statement is compiled and executed at compile time, before any more of the file is read, and it attaches the cpp filter to the source stream behind the scenes. Now the data flow looks like this:</source>
          <target state="translated">L&amp;iacute;nea 1, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Filter::cpp&lt;/code&gt; , incluye e instala el m&amp;oacute;dulo de filtro &lt;code&gt;cpp&lt;/code&gt; . Todos los filtros de origen funcionan de esta manera. La declaraci&amp;oacute;n de uso se compila y ejecuta en tiempo de compilaci&amp;oacute;n, antes de que se lea m&amp;aacute;s del archivo, y adjunta el filtro cpp al flujo de origen detr&amp;aacute;s de escena. Ahora el flujo de datos se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="7d80c9fd96dedf73af4c56122f85ab0c0aa067ae" translate="yes" xml:space="preserve">
          <source>Line 1, &lt;code&gt;use Filter::cpp&lt;/code&gt;, includes and installs the &lt;code&gt;cpp&lt;/code&gt; filter module. All source filters work this way. The use statement is compiled and executed at compile time, before any more of the file is read, and it attaches the cpp filter to the source stream behind the scenes. Now the data flow looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe884af42f04d28c78e5fe62707a6228b47c52d" translate="yes" xml:space="preserve">
          <source>Line 10 does the actual catenation: the &lt;code&gt;Move&lt;/code&gt; macro moves a chunk of memory around: we move the string &lt;code&gt;ptr&lt;/code&gt; to the end of the PV - that's the start of the PV plus its current length. We're moving &lt;code&gt;len&lt;/code&gt; bytes of type &lt;code&gt;char&lt;/code&gt; . After doing so, we need to tell Perl we've extended the string, by altering &lt;code&gt;CUR&lt;/code&gt; to reflect the new length. &lt;code&gt;SvEND&lt;/code&gt; is a macro which gives us the end of the string, so that needs to be a &lt;code&gt;&quot;\0&quot;&lt;/code&gt; .</source>
          <target state="translated">La l&amp;iacute;nea 10 hace la catenaci&amp;oacute;n real: la macro &lt;code&gt;Move&lt;/code&gt; mueve una parte de la memoria: movemos la cadena &lt;code&gt;ptr&lt;/code&gt; al final del PV; ese es el comienzo del PV m&amp;aacute;s su longitud actual. Estamos moviendo &lt;code&gt;len&lt;/code&gt; bytes de tipo &lt;code&gt;char&lt;/code&gt; . Despu&amp;eacute;s de hacerlo, necesitamos decirle a Perl que hemos extendido la cadena, modificando &lt;code&gt;CUR&lt;/code&gt; para reflejar la nueva longitud. &lt;code&gt;SvEND&lt;/code&gt; es una macro que nos da el final de la cadena, por lo que debe ser un &lt;code&gt;&quot;\0&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="343b8ed5119a25daa7a642907594c94fca594fc8" translate="yes" xml:space="preserve">
          <source>Line 10 does the actual catenation: the &lt;code&gt;Move&lt;/code&gt; macro moves a chunk of memory around: we move the string &lt;code&gt;ptr&lt;/code&gt; to the end of the PV - that's the start of the PV plus its current length. We're moving &lt;code&gt;len&lt;/code&gt; bytes of type &lt;code&gt;char&lt;/code&gt;. After doing so, we need to tell Perl we've extended the string, by altering &lt;code&gt;CUR&lt;/code&gt; to reflect the new length. &lt;code&gt;SvEND&lt;/code&gt; is a macro which gives us the end of the string, so that needs to be a &lt;code&gt;&quot;\0&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ce4818db70a98f47c9e31ba9a951fb125f8128" translate="yes" xml:space="preserve">
          <source>Line 10 is the null op: this does exactly nothing. What is that doing there? If you see the null op, it's a sign that something has been optimized away after parsing. As we mentioned in &lt;a href=&quot;#Optimization&quot;&gt;&quot;Optimization&quot;&lt;/a&gt;, the optimization stage sometimes converts two operations into one, for example when fetching a scalar variable. When this happens, instead of rewriting the op tree and cleaning up the dangling pointers, it's easier just to replace the redundant operation with the null op. Originally, the tree would have looked like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7912d365642f9e0b2b596d940dc9036620ccc8" translate="yes" xml:space="preserve">
          <source>Line 10 is the null op: this does exactly nothing. What is that doing there? If you see the null op, it's a sign that something has been optimized away after parsing. As we mentioned in &lt;a href=&quot;#Optimization&quot;&gt;Optimization&lt;/a&gt;, the optimization stage sometimes converts two operations into one, for example when fetching a scalar variable. When this happens, instead of rewriting the op tree and cleaning up the dangling pointers, it's easier just to replace the redundant operation with the null op. Originally, the tree would have looked like this:</source>
          <target state="translated">La l&amp;iacute;nea 10 es la operaci&amp;oacute;n nula: esto no hace exactamente nada. &amp;iquest;Qu&amp;eacute; est&amp;aacute; haciendo eso ah&amp;iacute;? Si ve la operaci&amp;oacute;n nula, es una se&amp;ntilde;al de que algo se ha optimizado despu&amp;eacute;s del an&amp;aacute;lisis. Como mencionamos en &lt;a href=&quot;#Optimization&quot;&gt;Optimizaci&amp;oacute;n&lt;/a&gt; , la etapa de optimizaci&amp;oacute;n a veces convierte dos operaciones en una, por ejemplo, cuando se busca una variable escalar. Cuando esto sucede, en lugar de reescribir el &amp;aacute;rbol de operaciones y limpiar los punteros colgantes, es m&amp;aacute;s f&amp;aacute;cil reemplazar la operaci&amp;oacute;n redundante con la operaci&amp;oacute;n nula. Originalmente, el &amp;aacute;rbol se habr&amp;iacute;a visto as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="264f13994058273b1e958110b35aba9f84b7d3f9" translate="yes" xml:space="preserve">
          <source>Line 13 manipulates the flags; since we've changed the PV, any IV or NV values will no longer be valid: if we have &lt;code&gt;$a=10; $a.=&quot;6&quot;;&lt;/code&gt; we don't want to use the old IV of 10. &lt;code&gt;SvPOK_only_utf8&lt;/code&gt; is a special UTF-8-aware version of &lt;code&gt;SvPOK_only&lt;/code&gt; , a macro which turns off the IOK and NOK flags and turns on POK. The final &lt;code&gt;SvTAINT&lt;/code&gt; is a macro which launders tainted data if taint mode is turned on.</source>
          <target state="translated">La l&amp;iacute;nea 13 manipula las banderas; dado que hemos cambiado el PV, cualquier valor de IV o NV ya no ser&amp;aacute; v&amp;aacute;lido: si tenemos &lt;code&gt;$a=10; $a.=&quot;6&quot;;&lt;/code&gt; no queremos usar el antiguo IV de 10. &lt;code&gt;SvPOK_only_utf8&lt;/code&gt; es una versi&amp;oacute;n especial de &lt;code&gt;SvPOK_only&lt;/code&gt; compatible con UTF-8 , una macro que desactiva las banderas IOK y NOK y activa POK. El &lt;code&gt;SvTAINT&lt;/code&gt; final es una macro que lanza datos contaminados si el modo de contaminaci&amp;oacute;n est&amp;aacute; activado.</target>
        </trans-unit>
        <trans-unit id="f14c02821009fa7c46a173af60df4534a9b06517" translate="yes" xml:space="preserve">
          <source>Line 13 manipulates the flags; since we've changed the PV, any IV or NV values will no longer be valid: if we have &lt;code&gt;$a=10; $a.=&quot;6&quot;;&lt;/code&gt; we don't want to use the old IV of 10. &lt;code&gt;SvPOK_only_utf8&lt;/code&gt; is a special UTF-8-aware version of &lt;code&gt;SvPOK_only&lt;/code&gt;, a macro which turns off the IOK and NOK flags and turns on POK. The final &lt;code&gt;SvTAINT&lt;/code&gt; is a macro which launders tainted data if taint mode is turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755dd87e19fd3ba2af902fab337428ef967e0ea8" translate="yes" xml:space="preserve">
          <source>Line 3 are the flags for this SV - it's OK to use it as a PV, it's a read-only SV (because it's a constant) and the data is a PV internally. Next we've got the contents of the string, starting at location &lt;code&gt;0xa0484e0&lt;/code&gt; .</source>
          <target state="translated">La l&amp;iacute;nea 3 son las banderas para este SV: est&amp;aacute; bien usarlo como PV, es un SV de solo lectura (porque es una constante) y los datos son un PV internamente. A continuaci&amp;oacute;n, tenemos el contenido de la cadena, comenzando en la ubicaci&amp;oacute;n &lt;code&gt;0xa0484e0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6d733118bea452010f0639494cd9d297ac988a2" translate="yes" xml:space="preserve">
          <source>Line 3 are the flags for this SV - it's OK to use it as a PV, it's a read-only SV (because it's a constant) and the data is a PV internally. Next we've got the contents of the string, starting at location &lt;code&gt;0xa0484e0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40714861418609c0c173cdb387c1235ef584feb6" translate="yes" xml:space="preserve">
          <source>Line 4 calls a function in</source>
          <target state="translated">La línea 4 llama a una función en</target>
        </trans-unit>
        <trans-unit id="b40e00c673cb8c91399cf977ab21f4560a36a721" translate="yes" xml:space="preserve">
          <source>Line 4 checks what type of token we are expecting. &lt;code&gt;Aop&lt;/code&gt; returns a token. If you search for &lt;code&gt;Aop&lt;/code&gt; elsewhere in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce643cab9a4e3c9a722892a06301bcddec99baf" translate="yes" xml:space="preserve">
          <source>Line 5 gives us the current length of the string - note that this does &lt;b&gt;not&lt;/b&gt; include the null terminator. Line 6 is not the length of the string, but the length of the currently allocated buffer; as the string grows, Perl automatically extends the available storage via a routine called &lt;code&gt;SvGROW&lt;/code&gt; .</source>
          <target state="translated">La l&amp;iacute;nea 5 nos da la longitud actual de la cadena; tenga en cuenta que esto &lt;b&gt;no&lt;/b&gt; incluye el terminador nulo. La l&amp;iacute;nea 6 no es la longitud de la cadena, sino la longitud del b&amp;uacute;fer asignado actualmente; a medida que crece la cadena, Perl ampl&amp;iacute;a autom&amp;aacute;ticamente el almacenamiento disponible mediante una rutina llamada &lt;code&gt;SvGROW&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="379de365d1a548a0387a33346f31194909c467b1" translate="yes" xml:space="preserve">
          <source>Line 5 gives us the current length of the string - note that this does &lt;b&gt;not&lt;/b&gt; include the null terminator. Line 6 is not the length of the string, but the length of the currently allocated buffer; as the string grows, Perl automatically extends the available storage via a routine called &lt;code&gt;SvGROW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e801a645ef8652f9762283242a90486b96636e4b" translate="yes" xml:space="preserve">
          <source>Line 5 is another variable declaration - all variable declarations start with &lt;code&gt;d&lt;/code&gt; - which pops from the top of the argument stack two NVs (hence &lt;code&gt;nn&lt;/code&gt; ) and puts them into the variables &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; , hence the &lt;code&gt;rl&lt;/code&gt; . These are the two operands to the addition operator. Next, we call &lt;code&gt;SETn&lt;/code&gt; to set the NV of the return value to the result of adding the two values. This done, we return - the &lt;code&gt;RETURN&lt;/code&gt; macro makes sure that our return value is properly handled, and we pass the next operator to run back to the main run loop.</source>
          <target state="translated">La l&amp;iacute;nea 5 es otra declaraci&amp;oacute;n de variable, todas las declaraciones de variable comienzan con &lt;code&gt;d&lt;/code&gt; , que aparece en la parte superior de la pila de argumentos dos NV (por lo tanto, &lt;code&gt;nn&lt;/code&gt; ) y las coloca en las variables &lt;code&gt;right&lt;/code&gt; e &lt;code&gt;left&lt;/code&gt; , de ah&amp;iacute; el &lt;code&gt;rl&lt;/code&gt; . Estos son los dos operandos del operador de suma. A continuaci&amp;oacute;n, llamamos a &lt;code&gt;SETn&lt;/code&gt; para establecer el NV del valor de retorno al resultado de sumar los dos valores. Hecho esto, regresamos: la macro &lt;code&gt;RETURN&lt;/code&gt; se asegura de que nuestro valor de retorno se maneje correctamente y pasamos el siguiente operador para que vuelva al ciclo de ejecuci&amp;oacute;n principal.</target>
        </trans-unit>
        <trans-unit id="9ab0a06fa26dc1e693bbb46194cc19123ec14b86" translate="yes" xml:space="preserve">
          <source>Line 6 installs the city name into the appropriate array. &lt;code&gt;$table{$country}&lt;/code&gt; now holds a reference to the array of cities seen in that country so far. Line 6 is exactly like</source>
          <target state="translated">La l&amp;iacute;nea 6 instala el nombre de la ciudad en la matriz adecuada. &lt;code&gt;$table{$country}&lt;/code&gt; ahora contiene una referencia a la matriz de ciudades vistas en ese pa&amp;iacute;s hasta ahora. La l&amp;iacute;nea 6 es exactamente como</target>
        </trans-unit>
        <trans-unit id="c2ba84f7598874c7f48acd427ca1d636fc55bdcd" translate="yes" xml:space="preserve">
          <source>Line 6 is another variable declaration - all variable declarations start with &lt;code&gt;d&lt;/code&gt; - which pops from the top of the argument stack two NVs (hence &lt;code&gt;nn&lt;/code&gt;) and puts them into the variables &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;, hence the &lt;code&gt;rl&lt;/code&gt;. These are the two operands to the addition operator. Next, we call &lt;code&gt;SETn&lt;/code&gt; to set the NV of the return value to the result of adding the two values. This done, we return - the &lt;code&gt;RETURN&lt;/code&gt; macro makes sure that our return value is properly handled, and we pass the next operator to run back to the main run loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48a3eb6c3c3e42eae96423913fd8ffbda526837" translate="yes" xml:space="preserve">
          <source>Line Buffering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfe50eaa50ff37a3814f18a6020ab1131445d28" translate="yes" xml:space="preserve">
          <source>Line Listing Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62686b06fae48d96cf870eba5c52faaa0c94ec93" translate="yes" xml:space="preserve">
          <source>Line number that will be executed next.</source>
          <target state="translated">Número de línea que será ejecutado a continuación.</target>
        </trans-unit>
        <trans-unit id="4c2e43f7c549f47cf9031361a83c442a60f08003" translate="yes" xml:space="preserve">
          <source>Line up corresponding items vertically.</source>
          <target state="translated">Alinee los elementos correspondientes verticalmente.</target>
        </trans-unit>
        <trans-unit id="90a0a22c457fd80684a0398fb72051a69780b70d" translate="yes" xml:space="preserve">
          <source>Line up corresponding things vertically, especially if it'd be too long to fit on one line anyway.</source>
          <target state="translated">Alinear las cosas correspondientes verticalmente,sobre todo si es demasiado largo para caber en una línea de todos modos.</target>
        </trans-unit>
        <trans-unit id="fddad56552c576f0323dae03070effe7302ccb5f" translate="yes" xml:space="preserve">
          <source>Line up your transliterations when it makes sense:</source>
          <target state="translated">Alinee sus transliteraciones cuando tenga sentido:</target>
        </trans-unit>
        <trans-unit id="4dd6f945e5b458504f42d21fe69947944476c20f" translate="yes" xml:space="preserve">
          <source>Line wrapping to form simple paragraphs</source>
          <target state="translated">Envoltura de líneas para formar párrafos simples</target>
        </trans-unit>
        <trans-unit id="3c31b396df21c211f23a01f3c792334d1e4f696c" translate="yes" xml:space="preserve">
          <source>Line-by-line debugging. Causes &lt;code&gt;DB::DB()&lt;/code&gt; subroutine to be called for each statement executed. Also causes saving source code lines (like 0x400).</source>
          <target state="translated">Depuraci&amp;oacute;n l&amp;iacute;nea por l&amp;iacute;nea. Hace que se llame a la subrutina &lt;code&gt;DB::DB()&lt;/code&gt; para cada instrucci&amp;oacute;n ejecutada. Tambi&amp;eacute;n hace que se guarden l&amp;iacute;neas de c&amp;oacute;digo fuente (como 0x400).</target>
        </trans-unit>
        <trans-unit id="4a4c07d14ccbabaacd2cac3e3e1dcd6526decdb6" translate="yes" xml:space="preserve">
          <source>Lines 2-4 acquire a city and country name. Line 5 looks to see if the country is already present as a key in the hash. If it's not, the program uses the &lt;code&gt;[]&lt;/code&gt; notation (&lt;a href=&quot;#Make-Rule-2&quot;&gt;&lt;b&gt;Make Rule 2&lt;/b&gt;&lt;/a&gt;) to manufacture a new, empty anonymous array of cities, and installs a reference to it into the hash under the appropriate key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6544069544ff400a2f96a13aacecf88aefcebba3" translate="yes" xml:space="preserve">
          <source>Lines 2-4 acquire a city and country name. Line 5 looks to see if the country is already present as a key in the hash. If it's not, the program uses the &lt;code&gt;[]&lt;/code&gt; notation (&lt;b&gt;Make Rule 2&lt;/b&gt;) to manufacture a new, empty anonymous array of cities, and installs a reference to it into the hash under the appropriate key.</source>
          <target state="translated">Las l&amp;iacute;neas 2-4 adquieren un nombre de ciudad y pa&amp;iacute;s. La l&amp;iacute;nea 5 busca ver si el pa&amp;iacute;s ya est&amp;aacute; presente como clave en el hash. Si no es as&amp;iacute;, el programa usa la notaci&amp;oacute;n &lt;code&gt;[]&lt;/code&gt; ( &lt;b&gt;Make Rule 2&lt;/b&gt; ) para fabricar una nueva matriz an&amp;oacute;nima vac&amp;iacute;a de ciudades, e instala una referencia a ella en el hash bajo la clave apropiada.</target>
        </trans-unit>
        <trans-unit id="f9204249863f9ef26ff51a8eb193e8408a39e90b" translate="yes" xml:space="preserve">
          <source>Lines 2-7 are responsible for building the structure in the first place. Here they are again:</source>
          <target state="translated">Las líneas 2-7 son las responsables de construir la estructura en primer lugar.Aquí están de nuevo:</target>
        </trans-unit>
        <trans-unit id="de6cda1578fd7d9e7a9658f2b0c6b2f1938e7d0c" translate="yes" xml:space="preserve">
          <source>Lines are wrapped at &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; columns (default value: 76). &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; should be set to the full width of your output device. In fact, every resulting line will have length of no more than &lt;code&gt;$columns - 1&lt;/code&gt; .</source>
          <target state="translated">Las l&amp;iacute;neas est&amp;aacute;n envueltas en &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; columnas (valor predeterminado: 76). &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; deben establecerse en el ancho completo de su dispositivo de salida. De hecho, cada l&amp;iacute;nea resultante tendr&amp;aacute; una longitud de no m&amp;aacute;s de &lt;code&gt;$columns - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd8be9ac7f4d3de35a2d0dba7d82ca50f5c0336" translate="yes" xml:space="preserve">
          <source>Lines are wrapped at &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; columns (default value: 76). &lt;code&gt;$Text::Wrap::columns&lt;/code&gt; should be set to the full width of your output device. In fact, every resulting line will have length of no more than &lt;code&gt;$columns - 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b80c81ac338346fa6d5a46950a43da0e9261d9f" translate="yes" xml:space="preserve">
          <source>Linguistic tailoring for DUCET via Unicode::Collate</source>
          <target state="translated">Adaptación lingüística para DUCET a través de Unicode.</target>
        </trans-unit>
        <trans-unit id="911361fa28ffec535144574ef716816f8b8cd069" translate="yes" xml:space="preserve">
          <source>Link count not updated because hard links are not quite that hard (They are sort of half-way between hard and soft links). (AmigaOS)</source>
          <target state="translated">El recuento de enlaces no se ha actualizado porque los enlaces duros no son tan duros (están a medio camino entre los enlaces duros y los blandos).(AmigaOS)</target>
        </trans-unit>
        <trans-unit id="1bd9f440f54676f1bb94923dc077847ab746b4ad" translate="yes" xml:space="preserve">
          <source>Link dynamic extensions with AddressSanitizer. You must manually specify &lt;code&gt;-shared&lt;/code&gt; because using &lt;code&gt;-Alddlflags=-shared&lt;/code&gt; will prevent Configure from setting a default value for &lt;code&gt;lddlflags&lt;/code&gt; , which usually contains &lt;code&gt;-shared&lt;/code&gt; (at least on Linux).</source>
          <target state="translated">Vincula extensiones din&amp;aacute;micas con AddressSanitizer. Debe especificar manualmente &lt;code&gt;-shared&lt;/code&gt; porque el uso de &lt;code&gt;-Alddlflags=-shared&lt;/code&gt; evitar&amp;aacute; que Configure establezca un valor predeterminado para &lt;code&gt;lddlflags&lt;/code&gt; , que generalmente contiene &lt;code&gt;-shared&lt;/code&gt; (al menos en Linux).</target>
        </trans-unit>
        <trans-unit id="8e4a85ad0592eae3d98b608b03a13168bab41ac1" translate="yes" xml:space="preserve">
          <source>Link dynamic extensions with AddressSanitizer. You must manually specify &lt;code&gt;-shared&lt;/code&gt; because using &lt;code&gt;-Alddlflags=-shared&lt;/code&gt; will prevent Configure from setting a default value for &lt;code&gt;lddlflags&lt;/code&gt;, which usually contains &lt;code&gt;-shared&lt;/code&gt; (at least on Linux).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f974c23cae7ac7ab09ab4582a91560c7102a2b" translate="yes" xml:space="preserve">
          <source>Link the perl executable with AddressSanitizer.</source>
          <target state="translated">Vincula el ejecutable de perl con el AddressSanitizer.</target>
        </trans-unit>
        <trans-unit id="41c90512ffda6347e72f72d0a6f190da9ca1b80a" translate="yes" xml:space="preserve">
          <source>Link this text to that manual page. E.g., &lt;code&gt;L&amp;lt;Perl Error Messages|perldiag&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Vincula este texto a esa p&amp;aacute;gina del manual. Por ejemplo, &lt;code&gt;L&amp;lt;Perl Error Messages|perldiag&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da1dd85543ffc6fef88aec54ac7001cdb21f6577" translate="yes" xml:space="preserve">
          <source>Link this text to that section in that manual page. E.g., &lt;code&gt;L&amp;lt;postfix &quot;if&quot;|perlsyn/&quot;Statement Modifiers&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Vincula este texto a esa secci&amp;oacute;n de esa p&amp;aacute;gina de manual. Por ejemplo, &lt;code&gt;L&amp;lt;postfix &quot;if&quot;|perlsyn/&quot;Statement Modifiers&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a893b38edbd5af20fcd220578252e31f67b32a6" translate="yes" xml:space="preserve">
          <source>Link this text to that section in this manual page. E.g., &lt;code&gt;L&amp;lt;the various attributes|/&quot;Member Data&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Vincula este texto a esa secci&amp;oacute;n de esta p&amp;aacute;gina de manual. Por ejemplo, &lt;code&gt;L&amp;lt;the various attributes|/&quot;Member Data&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a75b0dcbc63f378ca4b7ba049d880c48c223d9a" translate="yes" xml:space="preserve">
          <source>Link to a Perl manual page (e.g., &lt;code&gt;L&amp;lt;Net::Ping&amp;gt;&lt;/code&gt; ). Note that &lt;code&gt;name&lt;/code&gt; should not contain spaces. This syntax is also occasionally used for references to Unix man pages, as in &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">Enlace a una p&amp;aacute;gina de manual de Perl (por ejemplo, &lt;code&gt;L&amp;lt;Net::Ping&amp;gt;&lt;/code&gt; ). Tenga en cuenta que el &lt;code&gt;name&lt;/code&gt; no debe contener espacios. Esta sintaxis tambi&amp;eacute;n se usa ocasionalmente para referencias a p&amp;aacute;ginas de manual de Unix, como en &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8989d4395dabd5c3aa39385b5b23f283a370aec" translate="yes" xml:space="preserve">
          <source>Link to a Perl manual page (e.g., &lt;code&gt;L&amp;lt;Net::Ping&amp;gt;&lt;/code&gt;). Note that &lt;code&gt;name&lt;/code&gt; should not contain spaces. This syntax is also occasionally used for references to Unix man pages, as in &lt;code&gt;L&amp;lt;crontab(5)&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebcbb26d8410e15ec0a3bf942439d1fa6f0dc0e" translate="yes" xml:space="preserve">
          <source>Link to a section in other manual page. E.g., &lt;code&gt;L&amp;lt;perlsyn/&quot;For Loops&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Enlace a una secci&amp;oacute;n en otra p&amp;aacute;gina del manual. Por ejemplo, &lt;code&gt;L&amp;lt;perlsyn/&quot;For Loops&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a4be78347858c96ca4af009ad12e83b583efec3" translate="yes" xml:space="preserve">
          <source>Link to a section in this manual page. E.g., &lt;code&gt;L&amp;lt;/&quot;Object Methods&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Enlace a una secci&amp;oacute;n de esta p&amp;aacute;gina de manual. Por ejemplo, &lt;code&gt;L&amp;lt;/&quot;Object Methods&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c060793b58b5034337a483732320e10661d5f930" translate="yes" xml:space="preserve">
          <source>Linker Problems in Irix</source>
          <target state="translated">Problemas de Linker en Irix</target>
        </trans-unit>
        <trans-unit id="91ca4118a066d9e15d3000d362f4707600eb85a4" translate="yes" xml:space="preserve">
          <source>Linking with C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632c0116497fe7ec21df3b6015a06dceee2c2e46" translate="yes" xml:space="preserve">
          <source>Links to an absolute URL. For example, &lt;code&gt;L&amp;lt;&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;The Perl Home Page|&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Enlaces a una URL absoluta. Por ejemplo, &lt;code&gt;L&amp;lt;&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt; o &lt;code&gt;L&amp;lt;The Perl Home Page|&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70dabca050ab89452a19f7ca28b4c05e928c7006" translate="yes" xml:space="preserve">
          <source>Links to an absolute URL. For example, &lt;code&gt;L&amp;lt;http://www.perl.org/&amp;gt;&lt;/code&gt; or &lt;code&gt;L&amp;lt;The Perl Home Page|http://www.perl.org/&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="83bd0efc45cc0fd69905b50d3c8ace24dff4bd31" translate="yes" xml:space="preserve">
          <source>Linux (x86, ARM, IA64)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec4f23be8f3036b01885e23831c9d8422f8e25f" translate="yes" xml:space="preserve">
          <source>Linux Magazine</source>
          <target state="translated">Linux Magazine</target>
        </trans-unit>
        <trans-unit id="2187306118c639d0411d3a1f0eea679c435e121f" translate="yes" xml:space="preserve">
          <source>Linux-specific shortcuts to specify the &lt;code&gt;O_NONBLOCK&lt;/code&gt; and &lt;code&gt;FD_CLOEXEC&lt;/code&gt; flags during a &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket(2)&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">Accesos directos espec&amp;iacute;ficos de Linux para especificar los &lt;code&gt;O_NONBLOCK&lt;/code&gt; y &lt;code&gt;FD_CLOEXEC&lt;/code&gt; durante una llamada de &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket(2)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27bd3b3373ebdc99eec5274a7f58493e52c3e65c" translate="yes" xml:space="preserve">
          <source>Linux-specific shortcuts to specify the &lt;code&gt;O_NONBLOCK&lt;/code&gt; and &lt;code&gt;FD_CLOEXEC&lt;/code&gt; flags during a &lt;code&gt;socket(2)&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaedd94529deff9e35130dfc5ae5796d73c29a7" translate="yes" xml:space="preserve">
          <source>LinuxThreads is now obsolete on Linux, and caching &lt;code&gt;getpid()&lt;/code&gt; like this made embedding perl unnecessarily complex (since you'd have to manually update the value of $$), so now &lt;code&gt;$$&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; will always return the same values as the underlying C library.</source>
          <target state="translated">LinuxThreads ahora est&amp;aacute; obsoleto en Linux, y el almacenamiento en cach&amp;eacute; de &lt;code&gt;getpid()&lt;/code&gt; como este hizo que la incrustaci&amp;oacute;n de perl fuera innecesariamente compleja (ya que tendr&amp;iacute;a que actualizar manualmente el valor de $$), por lo que ahora &lt;code&gt;$$&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; siempre devolver&amp;aacute;n los mismos valores que la biblioteca C subyacente.</target>
        </trans-unit>
        <trans-unit id="dc8491ab221544187737048d61360d36010b4180" translate="yes" xml:space="preserve">
          <source>LinuxThreads is now obsolete on Linux, and caching &lt;code&gt;getpid()&lt;/code&gt; like this made embedding perl unnecessarily complex (since you'd have to manually update the value of $$), so now &lt;code&gt;$$&lt;/code&gt; and &lt;code&gt;getppid()&lt;/code&gt; will always return the same values as the underlying C library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="29c9d470de128561132f93d1517a546cc93f2ef7" translate="yes" xml:space="preserve">
          <source>List (default all) actions, breakpoints and watch expressions</source>
          <target state="translated">Listar (por defecto todas)las acciones,puntos de ruptura y expresiones de vigilancia</target>
        </trans-unit>
        <trans-unit id="4f52dc39b8b924455cea92e15110632fa2352d9b" translate="yes" xml:space="preserve">
          <source>List &lt;code&gt;incr+1&lt;/code&gt; lines starting at &lt;code&gt;min&lt;/code&gt; .</source>
          <target state="translated">Enumere las l&amp;iacute;neas &lt;code&gt;incr+1&lt;/code&gt; comenzando en &lt;code&gt;min&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e2df285394e85b16a4d8402b790e30140168156" translate="yes" xml:space="preserve">
          <source>List &lt;code&gt;incr+1&lt;/code&gt; lines starting at &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605938e2092b0e1418a4f6b86421f6d6aadd1b04" translate="yes" xml:space="preserve">
          <source>List Operators (Rightward)</source>
          <target state="translated">Operadores de la lista (a la derecha)</target>
        </trans-unit>
        <trans-unit id="ea9c7040ec8c47c48d227dc0186264691d25d357" translate="yes" xml:space="preserve">
          <source>List a single line.</source>
          <target state="translated">Escriba una sola línea.</target>
        </trans-unit>
        <trans-unit id="43aa9239459d3ee11976e9110444e7fe09843446" translate="yes" xml:space="preserve">
          <source>List all build directories of distributions that have been tested successfully but have not yet been installed. See also &lt;code&gt;install_tested&lt;/code&gt; .</source>
          <target state="translated">Enumere todos los directorios de compilaci&amp;oacute;n de distribuciones que se han probado con &amp;eacute;xito pero que a&amp;uacute;n no se han instalado. Consulte tambi&amp;eacute;n &lt;code&gt;install_tested&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5da3c7994a3d61d34d9ca024ec7ac9503eb70a17" translate="yes" xml:space="preserve">
          <source>List all installed modules with their versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370cf490cd3daa93894252ec5158b9c077c837f2" translate="yes" xml:space="preserve">
          <source>List assignment in scalar context returns the number of elements produced by the expression on the right side of the assignment:</source>
          <target state="translated">La asignación de la lista en contexto escalar devuelve el número de elementos producidos por la expresión en el lado derecho de la asignación:</target>
        </trans-unit>
        <trans-unit id="45a5a84ab7f0560a41223626f7533a814734e050" translate="yes" xml:space="preserve">
          <source>List constants</source>
          <target state="translated">Lista de constantes</target>
        </trans-unit>
        <trans-unit id="55d8dbd99ddbc695154ff187f15da85365e9e00f" translate="yes" xml:space="preserve">
          <source>List constants are lists, not arrays. To index or slice them, they must be placed in parentheses.</source>
          <target state="translated">Las constantes de lista son listas,no arreglos.Para indexarlas o cortarlas,deben ser puestas entre paréntesis.</target>
        </trans-unit>
        <trans-unit id="c9230863aaf9811a194bc857bc0390c6326f13d9" translate="yes" xml:space="preserve">
          <source>List constants are not inlined unless you are using Perl v5.20 or higher. In v5.20 or higher, they are still not read-only, but that may change in future versions.</source>
          <target state="translated">Las constantes de la lista no están alineadas a menos que se utilice Perl v5.20 o superior.En la v5.20 o superior,todavía no son de sólo lectura,pero eso puede cambiar en futuras versiones.</target>
        </trans-unit>
        <trans-unit id="5d9c4f2773006f355714dc08c4a64f23012ee969" translate="yes" xml:space="preserve">
          <source>List directories as they are searched</source>
          <target state="translated">Enumere los directorios a medida que se buscan</target>
        </trans-unit>
        <trans-unit id="0865484d5c94ce11961bf51a22181df567484e88" translate="yes" xml:space="preserve">
          <source>List first window of lines from subroutine.</source>
          <target state="translated">Enumere la primera ventana de líneas de la subrutina.</target>
        </trans-unit>
        <trans-unit id="31c6b16c6806f38a9abbe22903640ceb79a76b77" translate="yes" xml:space="preserve">
          <source>List form of piped open not implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ff7a57a5555c3820cb313b589ff3e43f5801b3" translate="yes" xml:space="preserve">
          <source>List lines &lt;code&gt;min&lt;/code&gt; through &lt;code&gt;max&lt;/code&gt; . &lt;code&gt;l -&lt;/code&gt; is synonymous to &lt;code&gt;-&lt;/code&gt; .</source>
          <target state="translated">L&amp;iacute;neas Lista &lt;code&gt;min&lt;/code&gt; a trav&amp;eacute;s de &lt;code&gt;max&lt;/code&gt; . &lt;code&gt;l -&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6413580d4bb0dff3a638f87f617274c7d3fa5ba" translate="yes" xml:space="preserve">
          <source>List lines &lt;code&gt;min&lt;/code&gt; through &lt;code&gt;max&lt;/code&gt;. &lt;code&gt;l -&lt;/code&gt; is synonymous to &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2f29a334d30972bc8a9045f68baae0dc3ec6d8" translate="yes" xml:space="preserve">
          <source>List next window of lines.</source>
          <target state="translated">Enumera la siguiente ventana de líneas.</target>
        </trans-unit>
        <trans-unit id="5359c0166343c48f9f035c401a1a6fd47a5d3c30" translate="yes" xml:space="preserve">
          <source>List of</source>
          <target state="translated">Lista de</target>
        </trans-unit>
        <trans-unit id="f96221500e5dff9b2e5b2d0d52441200d3fe59bd" translate="yes" xml:space="preserve">
          <source>List of CHECK values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b2bf307cdc3add3b560b3cf9c6d9638160226a" translate="yes" xml:space="preserve">
          <source>List of _CHECK_ values</source>
          <target state="translated">Lista de valores de _CHECK</target>
        </trans-unit>
        <trans-unit id="3fbb95646db607d6a530d90010130a90b221c352" translate="yes" xml:space="preserve">
          <source>List of four elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e3128876d62127f71da94d3596564663a283a7" translate="yes" xml:space="preserve">
          <source>List of handlers that have been registered.</source>
          <target state="translated">Lista de manipuladores que han sido registrados.</target>
        </trans-unit>
        <trans-unit id="942be8ea6b09c5850208d901ada25608760abbb7" translate="yes" xml:space="preserve">
          <source>List of libraries that need to be linked with when linking a perl binary which includes this extension. Only those libraries that actually exist are included. These are written to a file and used when linking perl.</source>
          <target state="translated">Lista de bibliotecas a las que hay que enlazar cuando se enlaza un binario de perl que incluye esta extensión.Sólo se incluyen las bibliotecas que realmente existen.Éstas se escriben en un archivo y se utilizan al enlazar perl.</target>
        </trans-unit>
        <trans-unit id="25c88a0a5acb1948d9832032688b4c20061ebe55" translate="yes" xml:space="preserve">
          <source>List of lines in currently loaded file.</source>
          <target state="translated">Lista de líneas en el archivo actualmente cargado.</target>
        </trans-unit>
        <trans-unit id="e2c751f0916c7f646852ece1bcfc81eae8d05b8f" translate="yes" xml:space="preserve">
          <source>List of object files, defaults to '$(BASEEXT)$(OBJ_EXT)', but can be a long string or an array containing all object files, e.g. &quot;tkpBind.o tkpButton.o tkpCanvas.o&quot; or [&quot;tkpBind.o&quot;, &quot;tkpButton.o&quot;, &quot;tkpCanvas.o&quot;]</source>
          <target state="translated">Lista de archivos de objetos,por defecto '$(BASEEXT)$(OBJ_EXT)',pero puede ser una larga cadena o un array que contenga todos los archivos de objetos,por ejemplo &quot;tkpBind.o tkpButton.o tkpCanvas.o&quot; o [&quot;tkpBind.o&quot;,&quot;tkpButton.o&quot;,&quot;tkpCanvas.o&quot;]</target>
        </trans-unit>
        <trans-unit id="5c1db3ac864f059bce7875da034cf8c723ca64e1" translate="yes" xml:space="preserve">
          <source>List of those libraries that are needed but can be linked in dynamically at run time on this platform. SunOS/Solaris does not need this because ld records the information (from LDLOADLIBS) into the object file. This list is used to create a .bs (bootstrap) file.</source>
          <target state="translated">Lista de las bibliotecas que se necesitan pero que pueden enlazarse dinámicamente en tiempo de ejecución en esta plataforma.SunOS/Solaris no necesita esto porque ld registra la información (de LDLOADLIBS)en el archivo de objetos.Esta lista se utiliza para crear un archivo .bs (bootstrap).</target>
        </trans-unit>
        <trans-unit id="5a0cf49d555f62d3d4e052b6541ec31f30e51960" translate="yes" xml:space="preserve">
          <source>List of those libraries which can or must be linked into the shared library when created using ld. These may be static or dynamic libraries. LD_RUN_PATH is a colon separated list of the directories in LDLOADLIBS. It is passed as an environment variable to the process that links the shared library.</source>
          <target state="translated">Lista de las bibliotecas que pueden o deben enlazarse con la biblioteca compartida cuando se crean utilizando ld.Estas pueden ser bibliotecas estáticas o dinámicas.LD_RUN_PATH es una lista separada por dos puntos de los directorios en LDLOADLIBS.Se pasa como una variable de entorno al proceso que enlaza la biblioteca compartida.</target>
        </trans-unit>
        <trans-unit id="ebae2310224ffad36ada7ef466a7460f111ae936" translate="yes" xml:space="preserve">
          <source>List of three arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be97ad6178a15f3564cecdb6dad31b0f188dfe5e" translate="yes" xml:space="preserve">
          <source>List of three elements. Second is an array reference; third is a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc4309268bf3b8e9ff25ca0646ecdbee8a86829" translate="yes" xml:space="preserve">
          <source>List of two elements: &lt;code&gt;typemap&lt;/code&gt; element from &lt;code&gt;%args&lt;/code&gt;; current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2868b38546ebc5d5d8fcc48449cbafe99e0ffc2a" translate="yes" xml:space="preserve">
          <source>List out all pre-prompt Perl command actions.</source>
          <target state="translated">Enumere todas las acciones de comando de Perl previas al aviso.</target>
        </trans-unit>
        <trans-unit id="b2fda16ba9c5deaf514c003911417714fab1f6a2" translate="yes" xml:space="preserve">
          <source>List out post-prompt Perl command actions.</source>
          <target state="translated">Enumere las acciones del comando Perl posteriores al aviso.</target>
        </trans-unit>
        <trans-unit id="b85c9a7b9160438294dae5b78f69ab7f0a89edb4" translate="yes" xml:space="preserve">
          <source>List out pre-prompt debugger commands.</source>
          <target state="translated">Enumere los comandos de depuración previos a la solicitud.</target>
        </trans-unit>
        <trans-unit id="c433826fb0a01d3298adbd1cec75ac79e366fe70" translate="yes" xml:space="preserve">
          <source>List previous window of lines.</source>
          <target state="translated">Enumere la ventana anterior de líneas.</target>
        </trans-unit>
        <trans-unit id="6828bea1ce4a116f7cab52f1ff715d22eb63c991" translate="yes" xml:space="preserve">
          <source>List subroutine names [not] matching the regex.</source>
          <target state="translated">Enumere los nombres de las subrutinas que no coincidan con el regex.</target>
        </trans-unit>
        <trans-unit id="080ba82727d1a06b5322db16c03b125c4027029d" translate="yes" xml:space="preserve">
          <source>List the modules by the specified authors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d9bedea128205ac0ccf6ba46b2275b7e0355dc" translate="yes" xml:space="preserve">
          <source>List value constructors</source>
          <target state="translated">Lista de constructores de valores</target>
        </trans-unit>
        <trans-unit id="3b83ab8a9c9e9daa0f3c240465a14ac3cfec98b6" translate="yes" xml:space="preserve">
          <source>List values are denoted by separating individual values by commas (and enclosing the list in parentheses where precedence requires it):</source>
          <target state="translated">Los valores de la lista se denotan separando los valores individuales por comas (y encerrando la lista entre paréntesis cuando la precedencia lo requiera):</target>
        </trans-unit>
        <trans-unit id="9c332d7d437db4bb1a089aef08dedde1d03aa848" translate="yes" xml:space="preserve">
          <source>List values in scalar context</source>
          <target state="translated">Valores de la lista en contexto escalar</target>
        </trans-unit>
        <trans-unit id="3e21f245885fcb8d2afb9ad390e31a12b2893368" translate="yes" xml:space="preserve">
          <source>List which methods may be called on the result of the evaluated expression. The expression may evaluated to a reference to a blessed object, or to a package name.</source>
          <target state="translated">Enumere los métodos a los que se puede recurrir en función del resultado de la expresión evaluada.La expresión puede ser evaluada a una referencia a un objeto bendito,o a un nombre de paquete.</target>
        </trans-unit>
        <trans-unit id="d8403bab2922ebc2678fad6cf5cb327231181154" translate="yes" xml:space="preserve">
          <source>List::Util</source>
          <target state="translated">List::Util</target>
        </trans-unit>
        <trans-unit id="0553bce08d5ad663737a32d66e461a6fde4d42cc" translate="yes" xml:space="preserve">
          <source>List::Util - A selection of general-utility list subroutines</source>
          <target state="translated">List::Util-Una selección de subrutinas de lista de utilidad general</target>
        </trans-unit>
        <trans-unit id="e6ae9327a79eb9d0433ed0271e4debca709ad198" translate="yes" xml:space="preserve">
          <source>List::Util::XS</source>
          <target state="translated">List::Util::XS</target>
        </trans-unit>
        <trans-unit id="6a577f2f652a9865e261b6b1b9108f10eb35a6b7" translate="yes" xml:space="preserve">
          <source>List::Util::XS - Indicate if List::Util was compiled with a C compiler</source>
          <target state="translated">List::Util::XS-Indique si List::Util fue compilado con un compilador C</target>
        </trans-unit>
        <trans-unit id="577f684095ccbc8608cf104c7d53ed608fc27e62" translate="yes" xml:space="preserve">
          <source>Listed below are functions that are either completely unimplemented or else have been implemented differently on various platforms. Following each description will be, in parentheses, a list of platforms that the description applies to.</source>
          <target state="translated">A continuación se enumeran las funciones que no se han implementado en absoluto o que se han implementado de forma diferente en diversas plataformas.A continuación de cada descripción figurará,entre paréntesis,una lista de las plataformas a las que se aplica la descripción.</target>
        </trans-unit>
        <trans-unit id="4785b15f1934e1c153e7966e7a875d6c72382735" translate="yes" xml:space="preserve">
          <source>Listed below are functions that are either completely unimplemented or else have been implemented differently on various platforms. Preceding each description will be, in parentheses, a list of platforms that the description applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c518fb067439705f3ff5fa5b4a62b9be3afa31ae" translate="yes" xml:space="preserve">
          <source>Listen</source>
          <target state="translated">Listen</target>
        </trans-unit>
        <trans-unit id="484fc3879bbb2d1bc964407cad68611698ffceb6" translate="yes" xml:space="preserve">
          <source>Listen =&amp;gt; INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dea679b659a4bf77b36d5e329bc16ce43947db3" translate="yes" xml:space="preserve">
          <source>Listen should be an integer value or left unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2100cb1ce0771ebf5c66d34af2b3109940abd61" translate="yes" xml:space="preserve">
          <source>Listing available encodings</source>
          <target state="translated">Listado de codificaciones disponibles</target>
        </trans-unit>
        <trans-unit id="0827ddb4ed49430cfb1658042c94b816fe2859f3" translate="yes" xml:space="preserve">
          <source>Lists all available encodings, one per line, in case-insensitive order. Note that only the canonical names are listed; many aliases exist. For example, the names are case-insensitive, and many standard and common aliases work, such as &quot;latin1&quot; for &quot;ISO-8859-1&quot;, or &quot;ibm850&quot; instead of &quot;cp850&quot;, or &quot;winlatin1&quot; for &quot;cp1252&quot;. See &lt;a href=&quot;Encode::Supported&quot;&gt;Encode::Supported&lt;/a&gt; for a full discussion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd09e23888b88d8b373ca4d91ed87f3200a2d3a8" translate="yes" xml:space="preserve">
          <source>Lists all available encodings, one per line, in case-insensitive order. Note that only the canonical names are listed; many aliases exist. For example, the names are case-insensitive, and many standard and common aliases work, such as &quot;latin1&quot; for &quot;ISO-8859-1&quot;, or &quot;ibm850&quot; instead of &quot;cp850&quot;, or &quot;winlatin1&quot; for &quot;cp1252&quot;. See &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt; for a full discussion.</source>
          <target state="translated">Muestra todas las codificaciones disponibles, una por l&amp;iacute;nea, en orden que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas. Tenga en cuenta que solo se enumeran los nombres can&amp;oacute;nicos; existen muchos alias. Por ejemplo, los nombres no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas y funcionan muchos alias est&amp;aacute;ndar y comunes, como &quot;latin1&quot; para &quot;ISO-8859-1&quot; o &quot;ibm850&quot; en lugar de &quot;cp850&quot; o &quot;winlatin1&quot; para &quot;cp1252&quot;. . Consulte &lt;a href=&quot;encode/supported&quot;&gt;Encode :: Supported&lt;/a&gt; para una discusi&amp;oacute;n completa.</target>
        </trans-unit>
        <trans-unit id="e4e9b933aa47588e5dca2e5d37752f783428eced" translate="yes" xml:space="preserve">
          <source>Lists known issues and incompatibilities; &lt;code&gt;&lt;a href=&quot;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&quot;&gt;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Enumera problemas e incompatibilidades conocidos; &lt;code&gt;&lt;a href=&quot;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&quot;&gt;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="974b5b0f1238cd291d1764b895cc33d03520382a" translate="yes" xml:space="preserve">
          <source>Lists known issues and incompatibilities; &lt;code&gt;http://gd.tuwien.ac.at/utils/archivers/star/README.otherbugs&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b97602e24bdf80cc94582bec0e02d773290ecc" translate="yes" xml:space="preserve">
          <source>Lists may be assigned to only when each element of the list is itself legal to assign to:</source>
          <target state="translated">Las listas sólo pueden asignarse cuando cada elemento de la lista es en sí mismo legal de asignar:</target>
        </trans-unit>
        <trans-unit id="c5a2888cd48d3f7aa2e98cd01aee025fae061e84" translate="yes" xml:space="preserve">
          <source>Literal ASCII TAB characters are now allowed in strings (and treated as &lt;code&gt;\t&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0213917f82ae95d80bb5989c7abf1f8ddda65a97" translate="yes" xml:space="preserve">
          <source>Literal conversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527da73e406ed03ebcb72acc86b11111c4a02fcb" translate="yes" xml:space="preserve">
          <source>Literal uses of &lt;code&gt;{&lt;/code&gt; were deprecated in Perl 5.20, and some uses of it started to give deprecation warnings since. These cases were made fatal in Perl 5.26. Due to an oversight, not all cases of a use of a literal &lt;code&gt;{&lt;/code&gt; got a deprecation warning. Some cases started warning in Perl 5.26, and were made fatal in Perl 5.30. Other cases started in Perl 5.28, and were made fatal in 5.32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5147c26642d830ab230197606d4cf605ea045572" translate="yes" xml:space="preserve">
          <source>Literal vertical space in [] is illegal except under /x in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a788cee27d549015a0786732c662e05cdd7567" translate="yes" xml:space="preserve">
          <source>Lithuania</source>
          <target state="translated">Lithuania</target>
        </trans-unit>
        <trans-unit id="91575e88330ca0a393b09df24c2f9572b830580f" translate="yes" xml:space="preserve">
          <source>Ll</source>
          <target state="translated">Ll</target>
        </trans-unit>
        <trans-unit id="ddcb77ff769ea54ca622848f6bedd4004fa4f4fa" translate="yes" xml:space="preserve">
          <source>Load</source>
          <target state="translated">Load</target>
        </trans-unit>
        <trans-unit id="7006eb18a426109e42c387f4ebcfd765f549c2c8" translate="yes" xml:space="preserve">
          <source>Load &lt;code&gt;local::lib&lt;/code&gt; (think like &lt;code&gt;-I&lt;/code&gt; for loading lib paths). Too bad &lt;code&gt;-l&lt;/code&gt; was already taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec750aae1f96446e6d4c2da3ed090454e5eb47c" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;&quot;MATH LIBRARY&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb2a396182dae27999fc6c1e32de77266a8eaa5" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;MATH LIBRARY&lt;/a&gt;.</source>
          <target state="translated">Cargue una biblioteca matem&amp;aacute;tica diferente, consulte &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;BIBLIOTECA MATH&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97f3b50d057eea8062f2d58a28647a93d5cccf56" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#Math-Library&quot;&gt;&quot;Math Library&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a359a67f4a6d92b34e91186041854ab36b846b" translate="yes" xml:space="preserve">
          <source>Load a different math lib, see &lt;a href=&quot;#Math-Library&quot;&gt;Math Library&lt;/a&gt;.</source>
          <target state="translated">Cargue una &lt;a href=&quot;#Math-Library&quot;&gt;biblioteca&lt;/a&gt; matem&amp;aacute;tica diferente, consulte Biblioteca matem&amp;aacute;tica .</target>
        </trans-unit>
        <trans-unit id="26c9c83eb2148dde20d87505b058099c18e18cdd" translate="yes" xml:space="preserve">
          <source>Load a harness replacement class.</source>
          <target state="translated">Carga una clase de reemplazo de arnés.</target>
        </trans-unit>
        <trans-unit id="3ab8a70aafed206e446c89069a6d6fa487286375" translate="yes" xml:space="preserve">
          <source>Load functions only on demand</source>
          <target state="translated">Cargar las funciones sólo a petición</target>
        </trans-unit>
        <trans-unit id="1a6bf14720b01e30066247880d6ebc3b8752469c" translate="yes" xml:space="preserve">
          <source>Load subroutines only on demand</source>
          <target state="translated">Cargar las subrutinas sólo a petición</target>
        </trans-unit>
        <trans-unit id="d792f29bac65ac823df5b7bb2984ae1cc96bc863" translate="yes" xml:space="preserve">
          <source>Load the C Fcntl.h defines</source>
          <target state="translated">Cargar el C Fcntl.h define</target>
        </trans-unit>
        <trans-unit id="41ca4f17e3678d8fa4513a23c57b7eb4caf19350" translate="yes" xml:space="preserve">
          <source>Load the file that has the CPAN configuration data. This should have the same format as the standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240fa313380982dac95b53cefb0c75077c026845" translate="yes" xml:space="preserve">
          <source>Load the state from a file</source>
          <target state="translated">Cargar el estado desde un archivo</target>
        </trans-unit>
        <trans-unit id="15cac79f7c6e29d135cac8ed345f5ee74ad107b9" translate="yes" xml:space="preserve">
          <source>Load various IO modules</source>
          <target state="translated">Cargar varios módulos IO</target>
        </trans-unit>
        <trans-unit id="59ee7110b16f2ee9279e975045a71b3b2753da6e" translate="yes" xml:space="preserve">
          <source>LoadFile</source>
          <target state="translated">LoadFile</target>
        </trans-unit>
        <trans-unit id="9cd272bfb77c57c025d780a7adea2d2f4a39e607" translate="yes" xml:space="preserve">
          <source>Loading DLLs and ordinals in DLLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9030f4b47aa2abda4199dcc7ac6f1cb72c9d6947" translate="yes" xml:space="preserve">
          <source>Loads &lt;code&gt;ExtUtils::Typemaps::Excommunicated&lt;/code&gt;, instantiates an object, and dumps it as an embeddable typemap for use directly in your XS file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478aa4ede7f109d8fe9ce74fc47e542819bd58d3" translate="yes" xml:space="preserve">
          <source>Loads Perl library from &lt;code&gt;$exedir/../dll/lib/&lt;/code&gt;.</source>
          <target state="translated">Carga la biblioteca Perl desde &lt;code&gt;$exedir/../dll/lib/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a90cb96849f4ba39ef789f1926fb83b5216a75c" translate="yes" xml:space="preserve">
          <source>Loads a dynamic link library into memory and returns its module handle. This handle can be used with Win32::GetProcAddress() and Win32::FreeLibrary(). This function is deprecated. Use the Win32::API module instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5210c4cd9f4652e7e267673947f320fe973e2f" translate="yes" xml:space="preserve">
          <source>Loads a specified module and imports the default functions to the specified package.</source>
          <target state="translated">Carga un módulo especificado e importa las funciones predeterminadas al paquete especificado.</target>
        </trans-unit>
        <trans-unit id="27e6bb733433394f480bba5733da627a3f3f2045" translate="yes" xml:space="preserve">
          <source>Loads a specified module and imports the default functions.</source>
          <target state="translated">Carga un módulo especificado e importa las funciones predeterminadas.</target>
        </trans-unit>
        <trans-unit id="0912e26f46f2862f9bc8f741f795bbefe5ccdd67" translate="yes" xml:space="preserve">
          <source>Loads a specified module to the specified package.</source>
          <target state="translated">Carga un módulo específico al paquete especificado.</target>
        </trans-unit>
        <trans-unit id="6ec299bdf7d010c1eee08526d7bd0161603d96f6" translate="yes" xml:space="preserve">
          <source>Loads a specified module.</source>
          <target state="translated">Carga un módulo específico.</target>
        </trans-unit>
        <trans-unit id="e32cb3524fbd8048df24f387ab1d261efd4fc528" translate="yes" xml:space="preserve">
          <source>Loads the DLL LIBRARYNAME and calls the function DllRegisterServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb5e0e921899c7d9aa0924124cdcb6c8851e055" translate="yes" xml:space="preserve">
          <source>Loads the DLL LIBRARYNAME and calls the function DllUnregisterServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194a22a082c50fda80d3d163aa9acda90d655677" translate="yes" xml:space="preserve">
          <source>Loads the handler classes defined in &lt;a href=&quot;#config&quot;&gt;&quot;config&quot;&lt;/a&gt;. For example, given a config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a312f5b131e98b974541ced8733bc202310a2a5" translate="yes" xml:space="preserve">
          <source>Loads the handler classes defined in &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt;. For example, given a config:</source>
          <target state="translated">Carga las clases de controlador definidas en &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt; . Por ejemplo, dada una configuraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="2288e3df6687abb6b74ab409c03ac48535ed3150" translate="yes" xml:space="preserve">
          <source>Loads the module whose name is pointed to by the string part of &lt;code&gt;name&lt;/code&gt;. Note that the actual module name, not its filename, should be given. Eg, &quot;Foo::Bar&quot; instead of &quot;Foo/Bar.pm&quot;. ver, if specified and not NULL, provides version semantics similar to &lt;code&gt;use Foo::Bar VERSION&lt;/code&gt;. The optional trailing arguments can be used to specify arguments to the module's &lt;code&gt;import()&lt;/code&gt; method, similar to &lt;code&gt;use Foo::Bar VERSION LIST&lt;/code&gt;; their precise handling depends on the flags. The flags argument is a bitwise-ORed collection of any of &lt;code&gt;PERL_LOADMOD_DENY&lt;/code&gt;, &lt;code&gt;PERL_LOADMOD_NOIMPORT&lt;/code&gt;, or &lt;code&gt;PERL_LOADMOD_IMPORT_OPS&lt;/code&gt; (or 0 for no flags).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6dda1ab28094112405a17ad65b1a4c1c089d63" translate="yes" xml:space="preserve">
          <source>Loads the module whose name is pointed to by the string part of name. Note that the actual module name, not its filename, should be given. Eg, &quot;Foo::Bar&quot; instead of &quot;Foo/Bar.pm&quot;. flags can be any of PERL_LOADMOD_DENY, PERL_LOADMOD_NOIMPORT, or PERL_LOADMOD_IMPORT_OPS (or 0 for no flags). ver, if specified and not NULL, provides version semantics similar to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION&lt;/code&gt; . The optional trailing SV* arguments can be used to specify arguments to the module's import() method, similar to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION LIST&lt;/code&gt; . They must be terminated with a final NULL pointer. Note that this list can only be omitted when the PERL_LOADMOD_NOIMPORT flag has been used. Otherwise at least a single NULL pointer to designate the default import list is required.</source>
          <target state="translated">Carga el m&amp;oacute;dulo cuyo nombre apunta la parte de cadena de name. Tenga en cuenta que debe proporcionarse el nombre real del m&amp;oacute;dulo, no su nombre de archivo. Por ejemplo, &quot;Foo :: Bar&quot; en lugar de &quot;Foo / Bar.pm&quot;. Los indicadores pueden ser PERL_LOADMOD_DENY, PERL_LOADMOD_NOIMPORT o PERL_LOADMOD_IMPORT_OPS (o 0 si no hay indicadores). ver, si se especifica y no es NULL, proporciona una sem&amp;aacute;ntica de versi&amp;oacute;n similar a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION&lt;/code&gt; . Los argumentos opcionales SV * finales se pueden usar para especificar argumentos para el m&amp;eacute;todo import () del m&amp;oacute;dulo, similar al &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Foo::Bar VERSION LIST&lt;/code&gt; . Deben terminar con un puntero NULL final. Tenga en cuenta que esta lista solo se puede omitir cuando se ha utilizado la marca PERL_LOADMOD_NOIMPORT. De lo contrario, se requiere al menos un puntero NULL para designar la lista de importaci&amp;oacute;n predeterminada.</target>
        </trans-unit>
        <trans-unit id="9af5b63a9cb9853b15da20ea4f2739623dc82021" translate="yes" xml:space="preserve">
          <source>Loc.U</source>
          <target state="translated">Loc.U</target>
        </trans-unit>
        <trans-unit id="2c161b9d2652a245b17c473e85af35d98c964e27" translate="yes" xml:space="preserve">
          <source>Loc_ar.U</source>
          <target state="translated">Loc_ar.U</target>
        </trans-unit>
        <trans-unit id="40cd835b717a79093cb71f794169679d3511a012" translate="yes" xml:space="preserve">
          <source>Loc_sed.U</source>
          <target state="translated">Loc_sed.U</target>
        </trans-unit>
        <trans-unit id="b62225661a9783f7a6a2c6e6f754c699e4dfbc8e" translate="yes" xml:space="preserve">
          <source>Local Locales</source>
          <target state="translated">Los locales</target>
        </trans-unit>
        <trans-unit id="00b7d8ac28ed6d0a7686172cc54cac83dde1640a" translate="yes" xml:space="preserve">
          <source>Local configuration data for libnet</source>
          <target state="translated">Datos de configuración local para libnet</target>
        </trans-unit>
        <trans-unit id="2073176912b2b8b08756b78673e90f32f9412f5a" translate="yes" xml:space="preserve">
          <source>Local hosts should normally respond to pings within milliseconds. However, on a very congested network it may take up to 3 seconds or longer to receive an echo packet from the remote host. If the timeout is set too low under these conditions, it will appear that the remote host is not reachable (which is almost the truth).</source>
          <target state="translated">Los huéspedes locales normalmente deberían responder a los pings en milisegundos.Sin embargo,en una red muy congestionada puede tardar hasta 3 segundos o más en recibir un paquete de eco del host remoto.Si el tiempo de espera se establece demasiado bajo en estas condiciones,parecerá que el host remoto no es alcanzable (lo cual es casi la verdad).</target>
        </trans-unit>
        <trans-unit id="5ce134969fa4b38910928473dcd30b211050ffe0" translate="yes" xml:space="preserve">
          <source>Local patches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c690298b945c1b37cc5a68671d9b773af108fb2" translate="yes" xml:space="preserve">
          <source>Local settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b6cc762cf095afa6ac2b3f63960344e064751c" translate="yes" xml:space="preserve">
          <source>LocalAddr =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3479965474a90e55723b0f25860802c53406e91d" translate="yes" xml:space="preserve">
          <source>LocalAddrInfo =&amp;gt; ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dabe6c778984c0b6509601202090746e803410" translate="yes" xml:space="preserve">
          <source>LocalHost =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9b0a319772622c356126ecbc602688d6563804" translate="yes" xml:space="preserve">
          <source>LocalPort</source>
          <target state="translated">LocalPort</target>
        </trans-unit>
        <trans-unit id="0b1eb8a4f4bc001c793e0eea29e95b79014c3314" translate="yes" xml:space="preserve">
          <source>LocalPort =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e824d201d4911c9432bae5428ad07c94b3eaabb9" translate="yes" xml:space="preserve">
          <source>LocalService =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d14f2f76fdd1296a6f5facde16712babc39964d" translate="yes" xml:space="preserve">
          <source>Locale '%s' contains (at least) the following characters which have unexpected meanings: %s The Perl program will use the expected meanings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0705df55ca759471ac9bb2feda1c0edcd06beb2b" translate="yes" xml:space="preserve">
          <source>Locale '%s' may not work well.%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d6a411ea768d6e339737cbc631007347c4656b" translate="yes" xml:space="preserve">
          <source>Locale is not completely independent. The</source>
          <target state="translated">El local no es completamente independiente.El</target>
        </trans-unit>
        <trans-unit id="2ecddee9e3454bdf482ac7866a6d45e31677a35b" translate="yes" xml:space="preserve">
          <source>Locale-aware XS code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944d1183f1e4f233c0975643c2ef4f71a04349e2" translate="yes" xml:space="preserve">
          <source>Locale-related functions and macros</source>
          <target state="translated">Funciones y macros relacionadas con el lugar</target>
        </trans-unit>
        <trans-unit id="e8ffa7590c272791934be71fefca2983045527a4" translate="yes" xml:space="preserve">
          <source>Locale/*.pl</source>
          <target state="translated">Locale/*.pl</target>
        </trans-unit>
        <trans-unit id="1f8d3cc6a62e48187b6914a4e521248e770e765b" translate="yes" xml:space="preserve">
          <source>Locale::Country</source>
          <target state="translated">Locale::Country</target>
        </trans-unit>
        <trans-unit id="711ea7f4d30a8250ee3539542d2d19015e5ecdec" translate="yes" xml:space="preserve">
          <source>Locale::Country - standard codes for country identification</source>
          <target state="translated">Local::País-códigos estándar para la identificación de países</target>
        </trans-unit>
        <trans-unit id="745a3f2e63c8527b20fd7a0effbd2a4f6ce52b10" translate="yes" xml:space="preserve">
          <source>Locale::Currency</source>
          <target state="translated">Locale::Currency</target>
        </trans-unit>
        <trans-unit id="c9d7708330810bdeae6d8e6f009ab34981fb3578" translate="yes" xml:space="preserve">
          <source>Locale::Currency - standard codes for currency identification</source>
          <target state="translated">Local::Moneda-códigos estándar para la identificación de la moneda</target>
        </trans-unit>
        <trans-unit id="a2f93f9cc8bf81f232cf25c9d6170a176bd3c8f2" translate="yes" xml:space="preserve">
          <source>Locale::Language</source>
          <target state="translated">Locale::Language</target>
        </trans-unit>
        <trans-unit id="cbd3f9670295ab004a97a8799e46f114e838f7c9" translate="yes" xml:space="preserve">
          <source>Locale::Language - standard codes for language identification</source>
          <target state="translated">Lenguaje::Lenguaje-códigos estándar para la identificación del lenguaje</target>
        </trans-unit>
        <trans-unit id="a9d8403dd9e14d9c4a74e42c449f4f4083d77a9b" translate="yes" xml:space="preserve">
          <source>Locale::Maketext</source>
          <target state="translated">Locale::Maketext</target>
        </trans-unit>
        <trans-unit id="58f6640492c0aec7031aee510f4ce0bcac4b2a22" translate="yes" xml:space="preserve">
          <source>Locale::Maketext - framework for localization</source>
          <target state="translated">Locale::Maketext-marco para la localización</target>
        </trans-unit>
        <trans-unit id="e28b946d05a8b6576abf4d9a367dd68f9175de8e" translate="yes" xml:space="preserve">
          <source>Locale::Maketext does not use any special syntax to differentiate bracket notation methods from normal class or object methods. This design makes it vulnerable to format string attacks whenever it is used to process strings provided by untrusted users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b3c0ab0595b5cdd83722214636b337ad110e39" translate="yes" xml:space="preserve">
          <source>Locale::Maketext does support blacklist and whitelist functionality to limit which methods may be called as bracket notation methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffc03bfc5c484b62d9372e1420bdf253f5b3f52" translate="yes" xml:space="preserve">
          <source>Locale::Maketext offers a variety of methods, which fall into three categories:</source>
          <target state="translated">Locale::Maketext ofrece una variedad de métodos,que se dividen en tres categorías:</target>
        </trans-unit>
        <trans-unit id="0376cece04f73d6cbbeda92b6c96963d0c327dc4" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Cookbook</source>
          <target state="translated">Locale::Maketext::Cookbook</target>
        </trans-unit>
        <trans-unit id="e7d10311ab56423a10a6401a972e219ed34731ef" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Cookbook - recipes for using Locale::Maketext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5723d6c0c42ee05086667e38fd4249fe7082e8c" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Guts</source>
          <target state="translated">Locale::Maketext::Guts</target>
        </trans-unit>
        <trans-unit id="63bea57dac9566b0aa40481ae087dc206e13e8ee" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Guts - Deprecated module to load Locale::Maketext utf8 code</source>
          <target state="translated">Locale::Maketext::Guts-Módulo desaprobado para cargar Locale::Maketext código utf8</target>
        </trans-unit>
        <trans-unit id="b14392dcdae7ce47ee917b41b3e73f1a3b72f5e1" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::GutsLoader</source>
          <target state="translated">Locale::Maketext::GutsLoader</target>
        </trans-unit>
        <trans-unit id="9810a1053985ebcf2f9b5544107826a653c00a65" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::GutsLoader - Deprecated module to load Locale::Maketext utf8 code</source>
          <target state="translated">Locale::Maketext::GutsLoader-Módulo desaprobado para cargar Locale::Maketext código utf8</target>
        </trans-unit>
        <trans-unit id="a239b132192c48779d9a0ee403ad81c93ab75902" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Simple</source>
          <target state="translated">Locale::Maketext::Simple</target>
        </trans-unit>
        <trans-unit id="a942c8cd15bd2125fe42db2a486e9feebf1cfa35" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::Simple - Simple interface to Locale::Maketext::Lexicon</source>
          <target state="translated">Locale::Maketext::Simple-Interfaz simple para Locale::Maketext::Léxico</target>
        </trans-unit>
        <trans-unit id="31310b7b3a3180c515d5a42eececda4ed908af34" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::TPJ13</source>
          <target state="translated">Locale::Maketext::TPJ13</target>
        </trans-unit>
        <trans-unit id="b7159c2a5a142d4334282c641ce964b49b8e476c" translate="yes" xml:space="preserve">
          <source>Locale::Maketext::TPJ13 -- article about software localization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee43c469c3726bd84652212d4ca88cc335a5967" translate="yes" xml:space="preserve">
          <source>Locale::Script</source>
          <target state="translated">Locale::Script</target>
        </trans-unit>
        <trans-unit id="8f438e3df7fafcc383b453fd3213f4653605e9c0" translate="yes" xml:space="preserve">
          <source>Locale::Script - standard codes for script identification</source>
          <target state="translated">Local::Guión-códigos estándar para la identificación del guión</target>
        </trans-unit>
        <trans-unit id="a222060e32289bf6910ac4a07a10733be500bd99" translate="yes" xml:space="preserve">
          <source>Locales</source>
          <target state="translated">Locales</target>
        </trans-unit>
        <trans-unit id="92e24d2019e2a32f9830f5f805e70b0e0aef8c2f" translate="yes" xml:space="preserve">
          <source>Locales according to the default UCA rules include am (Amharic) without &lt;code&gt;[reorder Ethi]&lt;/code&gt;, bg (Bulgarian) without &lt;code&gt;[reorder Cyrl]&lt;/code&gt;, chr (Cherokee) without &lt;code&gt;[reorder Cher]&lt;/code&gt;, de (German), en (English), fr (French), ga (Irish), id (Indonesian), it (Italian), ka (Georgian) without &lt;code&gt;[reorder Geor]&lt;/code&gt;, mn (Mongolian) without &lt;code&gt;[reorder Cyrl Mong]&lt;/code&gt;, ms (Malay), nl (Dutch), pt (Portuguese), ru (Russian) without &lt;code&gt;[reorder Cyrl]&lt;/code&gt;, sw (Swahili), zu (Zulu).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8764300ec3ae038b44ac23ce898f50ceb30676b" translate="yes" xml:space="preserve">
          <source>Locales are supported. There may be glitches when a locale is another EBCDIC code page which has some of the &lt;a href=&quot;#The-13-variant-characters&quot;&gt;code-page variant characters&lt;/a&gt; in other positions.</source>
          <target state="translated">Se admiten las configuraciones regionales. Puede haber fallas cuando una configuraci&amp;oacute;n regional es otra p&amp;aacute;gina de c&amp;oacute;digos EBCDIC que tiene algunos de los &lt;a href=&quot;#The-13-variant-characters&quot;&gt;caracteres variantes de la p&amp;aacute;gina de c&amp;oacute;digos&lt;/a&gt; en otras posiciones.</target>
        </trans-unit>
        <trans-unit id="33d4312ea8caf12dbb4ec71dca19ee7924926ead" translate="yes" xml:space="preserve">
          <source>Localization and Perl: gettext breaks, Maketext fixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f83a14354ab144fa1eeefe381bdddf7ef6a4b6" translate="yes" xml:space="preserve">
          <source>Localization of elements of composite types</source>
          <target state="translated">Localización de elementos de tipos compuestos</target>
        </trans-unit>
        <trans-unit id="87574e6a695fdc9051fd38476db62bcaa8e7cafd" translate="yes" xml:space="preserve">
          <source>Localization of globs</source>
          <target state="translated">Localización de glóbulos</target>
        </trans-unit>
        <trans-unit id="f2f69b5bf206324f99fe659a46e5c54c241d441a" translate="yes" xml:space="preserve">
          <source>Localization of special variables</source>
          <target state="translated">Localización de variables especiales</target>
        </trans-unit>
        <trans-unit id="56adc662b2ff25957a5294f0112a3c7b0d263e47" translate="yes" xml:space="preserve">
          <source>Localized deletion of elements of composite types</source>
          <target state="translated">Supresión localizada de elementos de tipos compuestos</target>
        </trans-unit>
        <trans-unit id="e60da19033e636198e96d7e490201c9c1369d134" translate="yes" xml:space="preserve">
          <source>Localizing &lt;code&gt;$.&lt;/code&gt; will not localize the filehandle's line count</source>
          <target state="translated">Localizando &lt;code&gt;$.&lt;/code&gt; no localizar&amp;aacute; el recuento de l&amp;iacute;neas del identificador de archivo</target>
        </trans-unit>
        <trans-unit id="8364e7e87819604234599a1511218996199f997e" translate="yes" xml:space="preserve">
          <source>Localizing changes</source>
          <target state="translated">Localizar los cambios</target>
        </trans-unit>
        <trans-unit id="f408eed5847840b83469388030b3326ba3bf4885" translate="yes" xml:space="preserve">
          <source>Localizing tied arrays or hashes does not work. After exiting the scope the arrays or the hashes are not restored.</source>
          <target state="translated">Localizar matrices atadas o hashes no funciona.Después de salir del campo de visión,las matrices o los hashes no se restauran.</target>
        </trans-unit>
        <trans-unit id="00e0ebc3f4b2567f4695fa9503d51f87733e190d" translate="yes" xml:space="preserve">
          <source>Locate directory of original perl script</source>
          <target state="translated">Localizar el directorio de la escritura perl original</target>
        </trans-unit>
        <trans-unit id="c6294c5b9baff7ccda4385a76937e4c98b9c0e02" translate="yes" xml:space="preserve">
          <source>Locate the CV corresponding to the currently executing sub or eval. If &lt;code&gt;db_seqp&lt;/code&gt; is non_null, skip CVs that are in the DB package and populate &lt;code&gt;*db_seqp&lt;/code&gt; with the cop sequence number at the point that the DB:: code was entered. (This allows debuggers to eval in the scope of the breakpoint rather than in the scope of the debugger itself.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffe84cd97aaf675f786b03919bbd1aad3c3fe1d" translate="yes" xml:space="preserve">
          <source>Locate the CV corresponding to the currently executing sub or eval. If db_seqp is non_null, skip CVs that are in the DB package and populate *db_seqp with the cop sequence number at the point that the DB:: code was entered. (This allows debuggers to eval in the scope of the breakpoint rather than in the scope of the debugger itself.)</source>
          <target state="translated">Localice el CV correspondiente a la sub o evaluación que se está ejecutando actualmente.Si db_seqp no es nulo,salta los CVs que están en el paquete DB y rellena *db_seqp con el número de secuencia de cop en el punto en que se introdujo el código DB::.(Esto permite a los depuradores evaluar en el ámbito del punto de interrupción en lugar de en el ámbito del propio depurador).</target>
        </trans-unit>
        <trans-unit id="f5cb0ec5fe28860a73ac5e9c7f201c2864475a69" translate="yes" xml:space="preserve">
          <source>Locates the full path to the script bin directory to allow the use of paths relative to the bin directory.</source>
          <target state="translated">Localiza la ruta completa del directorio bin del guión para permitir el uso de rutas relativas al directorio bin.</target>
        </trans-unit>
        <trans-unit id="90f656c2cec82492063f2f19f63b0344475a8752" translate="yes" xml:space="preserve">
          <source>Location of Perl</source>
          <target state="translated">Ubicación de Perl</target>
        </trans-unit>
        <trans-unit id="e526b099baebb5894aa471d61a7294aea38b4fdb" translate="yes" xml:space="preserve">
          <source>Lock the database with fd &amp;amp; flock.</source>
          <target state="translated">Bloquea la base de datos con fd &amp;amp; flock.</target>
        </trans-unit>
        <trans-unit id="877d08a97c129fe96b732f20ebe8f52e02d93eca" translate="yes" xml:space="preserve">
          <source>Locking and error checking are left as an exercise for the reader. Don't forget them or you'll be quite sorry.</source>
          <target state="translated">El bloqueo y la comprobación de errores se dejan como ejercicio para el lector.No los olvides o te arrepentirás.</target>
        </trans-unit>
        <trans-unit id="5c812093b2212c9a68f04fea78f378e5c17f025b" translate="yes" xml:space="preserve">
          <source>Locking this for exclusive access [by specifying &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;$uShare&lt;/code&gt;] doesn't prevent access to the partitions on the disk nor their file systems. So other processes can still access any raw sectors within a partition and can use the file system on the disk as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e083fbbbc4d1d6973e64d911c09f30a9d157b0ca" translate="yes" xml:space="preserve">
          <source>Locking this for exclusive access doesn't prevent access to the physical drive that the partition is on so other processes can still access the raw sectors that way. Locking this for exclusive access &lt;b&gt;does&lt;/b&gt; prevent other processes from opening the same raw partition and &lt;b&gt;does&lt;/b&gt; prevent access to the file system on it. It even prevents the current process from accessing the file system on that partition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95da6ca83293caed356315f7966585c98bbeb01" translate="yes" xml:space="preserve">
          <source>Locking this for exclusive access prevents all access to the floppy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cac3a963a1045fd348fae956e2fc8becb2159a" translate="yes" xml:space="preserve">
          <source>Locking: The Trouble with fd</source>
          <target state="translated">Cerrando:El problema con el FD</target>
        </trans-unit>
        <trans-unit id="a0ee9e59f4952196e4f063486823a5e6655ed2ab" translate="yes" xml:space="preserve">
          <source>Locks and unlocks the value for an individual key of a hash. The value of a locked key cannot be changed.</source>
          <target state="translated">Bloquea y desbloquea el valor de una llave individual de un hachís.El valor de una llave bloqueada no puede ser cambiado.</target>
        </trans-unit>
        <trans-unit id="409c237554d2d89fa246a166165492e5479e6006" translate="yes" xml:space="preserve">
          <source>Locks are a handy tool to synchronize access to data, and using them properly is the key to safe shared data. Unfortunately, locks aren't without their dangers, especially when multiple locks are involved. Consider the following code:</source>
          <target state="translated">Las cerraduras son una herramienta útil para sincronizar el acceso a los datos,y usarlas correctamente es la clave para asegurar los datos compartidos.Desafortunadamente,las cerraduras no están exentas de peligros,especialmente cuando hay varias cerraduras involucradas.Considere el siguiente código:</target>
        </trans-unit>
        <trans-unit id="d77ca7a462f2ee37cd5eeb13d2720840dd8f730e" translate="yes" xml:space="preserve">
          <source>Locks are recursive, which means it's okay for a thread to lock a variable more than once. The lock will last until the outermost &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; on the variable goes out of scope. For example:</source>
          <target state="translated">Los bloqueos son recursivos, lo que significa que est&amp;aacute; bien que un hilo bloquee una variable m&amp;aacute;s de una vez. El bloqueo durar&amp;aacute; hasta que el &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock()&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s externo () de la variable quede fuera de alcance. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c5da8053ebc549397001271ac2e0aa42fd2e1379" translate="yes" xml:space="preserve">
          <source>Locks are recursive, which means it's okay for a thread to lock a variable more than once. The lock will last until the outermost &lt;code&gt;lock()&lt;/code&gt; on the variable goes out of scope. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0486b135937b6c03b868507a94d272ff8ac6f4" translate="yes" xml:space="preserve">
          <source>Locks on variables only affect &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; calls--they do</source>
          <target state="translated">Los bloqueos en variables solo afectan las llamadas de &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; , lo hacen</target>
        </trans-unit>
        <trans-unit id="bf6b3c933353830be1f6195e3ebd4e20c5282db3" translate="yes" xml:space="preserve">
          <source>Locks on variables only affect &lt;code&gt;lock&lt;/code&gt; calls--they do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da97798dad8ca8d2be91a6ab0264ebfef22de7d" translate="yes" xml:space="preserve">
          <source>Locks record for a read operation for this process, while allowing other accessors to read the record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34a4fe30048f2f9c89009d31801cebec1a5e7be" translate="yes" xml:space="preserve">
          <source>Locks record for write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2494e49f95e86d62c9e1df9443b971b1071d1eb2" translate="yes" xml:space="preserve">
          <source>Log all messages up to debug:</source>
          <target state="translated">Registra todos los mensajes para depurar:</target>
        </trans-unit>
        <trans-unit id="ac20548f5a2664c1934f84717b314a50501d6ebb" translate="yes" xml:space="preserve">
          <source>Log an error that can't be ignored.</source>
          <target state="translated">Registra un error que no puede ser ignorado.</target>
        </trans-unit>
        <trans-unit id="9f24d2b09c179c98a526a557d74f3d2be5514fb4" translate="yes" xml:space="preserve">
          <source>Log an error unless &lt;code&gt;$parser-&amp;gt;no_whining( TRUE );&lt;/code&gt; .</source>
          <target state="translated">Registra un error a menos que &lt;code&gt;$parser-&amp;gt;no_whining( TRUE );&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="352c5f44c11749156243d487f189c562b58e4995" translate="yes" xml:space="preserve">
          <source>Log an error unless &lt;code&gt;$parser-&amp;gt;no_whining( TRUE );&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598cba7875d82844d0ea4fd50137d27e20e9822b" translate="yes" xml:space="preserve">
          <source>Log critical messages, errors and warnings:</source>
          <target state="translated">Registra los mensajes críticos,los errores y las advertencias:</target>
        </trans-unit>
        <trans-unit id="1cc66c8eb58fd8fd2198272ffebc6331b40fb88c" translate="yes" xml:space="preserve">
          <source>Log debugging info to STDERR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a127fbcd6604ca1cf80302b78e02d5ba87eed29" translate="yes" xml:space="preserve">
          <source>Log everything except informational messages:</source>
          <target state="translated">Registra todo excepto los mensajes informativos:</target>
        </trans-unit>
        <trans-unit id="346e7edbc99f3e01ce84957ff3c99842429de19b" translate="yes" xml:space="preserve">
          <source>Log into the remote FTP server with the given login information. If no arguments are given then the &lt;code&gt;Net::FTP&lt;/code&gt; uses the &lt;code&gt;Net::Netrc&lt;/code&gt; package to lookup the login information for the connected host. If no information is found then a login of</source>
          <target state="translated">Inicie sesi&amp;oacute;n en el servidor FTP remoto con la informaci&amp;oacute;n de inicio de sesi&amp;oacute;n proporcionada. Si no se proporcionan argumentos, &lt;code&gt;Net::FTP&lt;/code&gt; usa el paquete &lt;code&gt;Net::Netrc&lt;/code&gt; para buscar la informaci&amp;oacute;n de inicio de sesi&amp;oacute;n del host conectado. Si no se encuentra informaci&amp;oacute;n, un inicio de sesi&amp;oacute;n de</target>
        </trans-unit>
        <trans-unit id="38711dd5aba31d74455f59112be713add52892b6" translate="yes" xml:space="preserve">
          <source>Log to UDP port on &lt;code&gt;$remotehost&lt;/code&gt; instead of logging locally:</source>
          <target state="translated">Inicie sesi&amp;oacute;n en el puerto UDP en &lt;code&gt;$remotehost&lt;/code&gt; lugar de iniciar sesi&amp;oacute;n localmente:</target>
        </trans-unit>
        <trans-unit id="5e1bf4e3758f68132ff0d122f3d8b036581a8776" translate="yes" xml:space="preserve">
          <source>Log::Dispatch::Config::TestLog</source>
          <target state="translated">Log::Dispatch::Config::TestLog</target>
        </trans-unit>
        <trans-unit id="ef88b916547cdcd540b35fe969c4a4a3e3015dad" translate="yes" xml:space="preserve">
          <source>Logarithm base two [C99].</source>
          <target state="translated">Base logarítmica dos [C99].</target>
        </trans-unit>
        <trans-unit id="126a3068c345063640bada367b1b3170b97166a9" translate="yes" xml:space="preserve">
          <source>Logging if DEBUG (constant)</source>
          <target state="translated">Registro si DEBUG (constante)</target>
        </trans-unit>
        <trans-unit id="786908e4097f50192db248aa36b5528e31277867" translate="yes" xml:space="preserve">
          <source>Logical And</source>
          <target state="translated">Lógico y</target>
        </trans-unit>
        <trans-unit id="4f0fe5e6156db1c8f396f9ada6968d19b442623d" translate="yes" xml:space="preserve">
          <source>Logical Defined-Or</source>
          <target state="translated">Lógico Definido-o</target>
        </trans-unit>
        <trans-unit id="27999dc9087d157951951d7c5ab5c57a64718d42" translate="yes" xml:space="preserve">
          <source>Logical Not</source>
          <target state="translated">Lógico no</target>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27af685856a54b17004644154867c40474db6e5" translate="yes" xml:space="preserve">
          <source>Logical or and Exclusive Or</source>
          <target state="translated">Lógico o y exclusivo o</target>
        </trans-unit>
        <trans-unit id="eaac42db96179506f42bd718fb8ac139cdc3650b" translate="yes" xml:space="preserve">
          <source>Logical paths specified by system variables containing comma-separated search lists are also allowed; hence &lt;code&gt;System:Modules&lt;/code&gt; is a valid filename, and the filesystem will prefix &lt;code&gt;Modules&lt;/code&gt; with each section of &lt;code&gt;System$Path&lt;/code&gt; until a name is made that points to an object on disk. Writing to a new file &lt;code&gt;System:Modules&lt;/code&gt; would be allowed only if &lt;code&gt;System$Path&lt;/code&gt; contains a single item list. The filesystem will also expand system variables in filenames if enclosed in angle brackets, so &lt;code&gt;&amp;lt;System$Dir&amp;gt;.Modules&lt;/code&gt; would look for the file &lt;code&gt;$ENV{'System$Dir'} . 'Modules'&lt;/code&gt; . The obvious implication of this is that &lt;b&gt;fully qualified filenames can start with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;/b&gt; and should be protected when &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; is used for input.</source>
          <target state="translated">Tambi&amp;eacute;n se permiten rutas l&amp;oacute;gicas especificadas por variables del sistema que contienen listas de b&amp;uacute;squeda separadas por comas; por lo tanto, &lt;code&gt;System:Modules&lt;/code&gt; es un nombre de archivo v&amp;aacute;lido, y el sistema de archivos antepondr&amp;aacute; &lt;code&gt;Modules&lt;/code&gt; con cada secci&amp;oacute;n de &lt;code&gt;System$Path&lt;/code&gt; hasta que se haga un nombre que apunte a un objeto en el disco. Escribir en un nuevo archivo &lt;code&gt;System:Modules&lt;/code&gt; se permitir&amp;iacute;an solo si &lt;code&gt;System$Path&lt;/code&gt; contiene una lista de elementos &amp;uacute;nicos. El sistema de archivos tambi&amp;eacute;n expandir&amp;aacute; las variables del sistema en los nombres de archivos si est&amp;aacute;n encerrados entre corchetes angulares, por lo que &lt;code&gt;&amp;lt;System$Dir&amp;gt;.Modules&lt;/code&gt; buscar&amp;aacute; el archivo &lt;code&gt;$ENV{'System$Dir'} . 'Modules'&lt;/code&gt; . La implicaci&amp;oacute;n obvia de esto es que &lt;b&gt;los nombres de archivo completamente calificados pueden comenzar con &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;/b&gt;y debe protegerse cuando se utiliza &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; para la entrada.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
