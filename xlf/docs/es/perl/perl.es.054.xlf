<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="c63f5330afffd0f96ba6a347110ff40ca764f1be" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$/&lt;/code&gt; to an empty string -- the so-called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ddd91296b80d48f63b97d11f86bf92fa707898" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$Storable::canonical&lt;/code&gt; may not yield frozen strings that compare equal due to possible stringification of numbers. When the string version of a scalar exists, it is the form stored; therefore, if you happen to use your numbers as strings between two freezing operations on the same data structures, you will get different results.</source>
          <target state="translated">La configuraci&amp;oacute;n de &lt;code&gt;$Storable::canonical&lt;/code&gt; puede no producir cadenas congeladas que se comparen iguales debido a una posible cadena de n&amp;uacute;meros. Cuando existe la versi&amp;oacute;n de cadena de un escalar, es la forma almacenada; por lo tanto, si utiliza sus n&amp;uacute;meros como cadenas entre dos operaciones de congelaci&amp;oacute;n en las mismas estructuras de datos, obtendr&amp;aacute; resultados diferentes.</target>
        </trans-unit>
        <trans-unit id="ee7529f5e271b3d9636aff71fec9fc4be4a2ca6c" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$Test::Builder::Level&lt;/code&gt; overrides. This is typically useful localized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a709bc63116d6d03dcd3b4fd0b3541521b8558" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$|&lt;/code&gt; for an I/O stream causes data to be flushed all the way to disk on each write (</source>
          <target state="translated">Configuraci&amp;oacute;n &lt;code&gt;$|&lt;/code&gt; para un flujo de E / S hace que los datos se vac&amp;iacute;en hasta el disco en cada escritura (</target>
        </trans-unit>
        <trans-unit id="7bdb73ae2acf769ed4bd9afac1e469320505fda3" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; also resets the</source>
          <target state="translated">Establecer &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n restablece</target>
        </trans-unit>
        <trans-unit id="ce72a4be942d96b86ceb3742d54f6473d82ec88a" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; also resets the</source>
          <target state="translated">Establecer &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n restablece</target>
        </trans-unit>
        <trans-unit id="81e935f5e5ab31635e7b03bba630b9938eecfc87" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; makes everything squeaky clean:</source>
          <target state="translated">Establecer &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; en &lt;code&gt;1&lt;/code&gt; hace que todo est&amp;eacute; absolutamente limpio:</target>
        </trans-unit>
        <trans-unit id="50fa85492558cd44d6b9f1afbdff70a2e4108f54" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;STDIN&lt;/code&gt; and/or &lt;code&gt;STDOUT&lt;/code&gt; individually</source>
          <target state="translated">Configuraci&amp;oacute;n de &lt;code&gt;STDIN&lt;/code&gt; y / o &lt;code&gt;STDOUT&lt;/code&gt; individualmente</target>
        </trans-unit>
        <trans-unit id="4f9eb8079771b6da74df870a0a1370a3cb9be87d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;complain_stderr&lt;/code&gt; also sets &lt;code&gt;no_errata_section&lt;/code&gt; .</source>
          <target state="translated">La configuraci&amp;oacute;n de &lt;code&gt;complain_stderr&lt;/code&gt; tambi&amp;eacute;n establece &lt;code&gt;no_errata_section&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd089f7c8a8970d27009b895f3cc683565fa586d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;complain_stderr&lt;/code&gt; also sets &lt;code&gt;no_errata_section&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10362b055af0308648ca63d33ff10a0c0f9934a6" translate="yes" xml:space="preserve">
          <source>Setting STDIN and/or STDOUT individually</source>
          <target state="translated">Configurando STDIN y/o STDOUT individualmente</target>
        </trans-unit>
        <trans-unit id="7dde8cccfbe3175df65836547f417ec4e979d0f3" translate="yes" xml:space="preserve">
          <source>Setting Up Perl on Windows</source>
          <target state="translated">Configuración de Perl en Windows</target>
        </trans-unit>
        <trans-unit id="03d80b73479791646c754ee71dc0b8f73353a3b3" translate="yes" xml:space="preserve">
          <source>Setting a class variable effects all object instance that are created afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7e870818d92357cc34f0edc9d2ffc323dfb9cd" translate="yes" xml:space="preserve">
          <source>Setting both the &lt;code&gt;MOVEFILE_COPY_ALLOWED&lt;/code&gt; and &lt;code&gt;MOVEFILE_DELAY_UNTIL_REBOOT&lt;/code&gt; bits will cause &lt;code&gt;MoveFileEx&lt;/code&gt; to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bbdf31701f2636d6241f2f8b6c0eb454a30af8" translate="yes" xml:space="preserve">
          <source>Setting it to anything other than &lt;code&gt;undef&lt;/code&gt; is a fatal error as of Perl 5.28.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1417ccd3a0143c9a40476570cd8fb02ccad4ed" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;%SIGRT&lt;/code&gt; elements is equivalent to calling this:</source>
          <target state="translated">Establecer los elementos &lt;code&gt;%SIGRT&lt;/code&gt; es equivalente a llamar a esto:</target>
        </trans-unit>
        <trans-unit id="c7a6bebed94df4e3e768814b8f3e3dfddba88a4f" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;verify_SSL&lt;/code&gt; attribute to a true value will make HTTP::Tiny verify that an SSL connection has a valid SSL certificate corresponding to the host name of the connection and that the SSL certificate has been verified by a CA. Assuming you trust the CA, this will protect against a &lt;a href=&quot;http://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot;&gt;man-in-the-middle attack&lt;/a&gt;. If you are concerned about security, you should enable this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0c4dd5d8f60f1a8d77275b291148d46f159606" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;verify_SSL&lt;/code&gt; attribute to a true value will make HTTP::Tiny verify that an SSL connection has a valid SSL certificate corresponding to the host name of the connection and that the SSL certificate has been verified by a CA. Assuming you trust the CA, this will protect against a &lt;a href=&quot;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot;&gt;man-in-the-middle attack&lt;/a&gt;. If you are concerned about security, you should enable this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ec05020c3a0391ac46c3f2c9e7e9c6639db3b3" translate="yes" xml:space="preserve">
          <source>Setting the exec bit on some locations (generally</source>
          <target state="translated">Ajustando el bit de ejecución en algunos lugares (generalmente</target>
        </trans-unit>
        <trans-unit id="99efc8eeb4f7c0706141c23794a45f669d3fbffe" translate="yes" xml:space="preserve">
          <source>Setting the formatter will REPLACE any existing formatter. You may set the formatter to undef to prevent output. The old formatter will be returned if one was already set. Only one formatter is allowed at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3d9f3b006fc1714b052eb6aef60a4b942cd5d6" translate="yes" xml:space="preserve">
          <source>Setting the maximum depth to one disallows any nesting, so that ensures that the object is only a single hash/object or array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1515ddab2e35849ea7ad601162395461e45ef5" translate="yes" xml:space="preserve">
          <source>Setting the memory limit to 0 will inhibit caching; records will be fetched from disk every time you examine them.</source>
          <target state="translated">Poner el límite de la memoria a 0 inhibirá el caching;los registros serán recuperados del disco cada vez que los examine.</target>
        </trans-unit>
        <trans-unit id="f70563603bae0022751c2fbafcf703970f2af6b4" translate="yes" xml:space="preserve">
          <source>Setting this adds perl command line switches to each test file run.</source>
          <target state="translated">Configurar esto agrega interruptores de línea de comando de perl a cada ejecución de archivos de prueba.</target>
        </trans-unit>
        <trans-unit id="3a36ae3404b81240dcc4f244db3b5d9e9fe68945" translate="yes" xml:space="preserve">
          <source>Setting this appropriately is useful if you want to use the RTF to spellcheck, and/or if you want it to hyphenate right.</source>
          <target state="translated">Ajustar esto apropiadamente es útil si quieres usar el RTF para revisar la ortografía,y/o si quieres que escriba bien el guión.</target>
        </trans-unit>
        <trans-unit id="eb28c99d71e509270976d6187ac7708f64d8198f" translate="yes" xml:space="preserve">
          <source>Setting this attribute (to a value that's a regexp) means that you want to limit the results just to items whose podnames match the given regexp. Normally this option is not needed, and the more efficient &lt;code&gt;limit_glob&lt;/code&gt; attribute is used instead.</source>
          <target state="translated">Establecer este atributo (en un valor que sea una expresi&amp;oacute;n regular) significa que desea limitar los resultados solo a los elementos cuyos nombres de pod coincidan con la expresi&amp;oacute;n regular dada. Normalmente, esta opci&amp;oacute;n no es necesaria y en su lugar se utiliza el atributo &lt;code&gt;limit_glob&lt;/code&gt; ,que es m&amp;aacute;s eficiente .</target>
        </trans-unit>
        <trans-unit id="978f31a63d0a75abda9032068834ce25f6f936c4" translate="yes" xml:space="preserve">
          <source>Setting this attribute to a string value means that the searches should begin in the specified subdirectory name (like &quot;Pod&quot; or &quot;File::Find&quot;, also expressible as &quot;File/Find&quot;). For example, the search option &lt;code&gt;$search-&amp;gt;limit_glob(&quot;File::Find::R*&quot;)&lt;/code&gt; is the same as the combination of the search options &lt;code&gt;$search-&amp;gt;limit_re(&quot;^File::Find::R&quot;) -&amp;gt; dir_prefix(&quot;File::Find&quot;)&lt;/code&gt; .</source>
          <target state="translated">Establecer este atributo en un valor de cadena significa que las b&amp;uacute;squedas deben comenzar en el nombre del subdirectorio especificado (como &quot;Pod&quot; o &quot;Archivo :: Buscar&quot;, tambi&amp;eacute;n expresable como &quot;Archivo / Buscar&quot;). Por ejemplo, la opci&amp;oacute;n de b&amp;uacute;squeda &lt;code&gt;$search-&amp;gt;limit_glob(&quot;File::Find::R*&quot;)&lt;/code&gt; es la misma que la combinaci&amp;oacute;n de las opciones de b&amp;uacute;squeda &lt;code&gt;$search-&amp;gt;limit_re(&quot;^File::Find::R&quot;) -&amp;gt; dir_prefix(&quot;File::Find&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d5e74182dfb5fc2d28e0dbb72fa2c1349ab02d0" translate="yes" xml:space="preserve">
          <source>Setting this attribute to a string value means that the searches should begin in the specified subdirectory name (like &quot;Pod&quot; or &quot;File::Find&quot;, also expressible as &quot;File/Find&quot;). For example, the search option &lt;code&gt;$search-&amp;gt;limit_glob(&quot;File::Find::R*&quot;)&lt;/code&gt; is the same as the combination of the search options &lt;code&gt;$search-&amp;gt;limit_re(&quot;^File::Find::R&quot;) -&amp;gt; dir_prefix(&quot;File::Find&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604339932ff3f36e42a38ab869ec272a6090fa6b" translate="yes" xml:space="preserve">
          <source>Setting this attribute to a true value (and by default it is false) will turn &quot;S&amp;lt;...&amp;gt;&quot; sequences into sequences of words separated by &lt;code&gt;\xA0&lt;/code&gt; (non-breaking space) characters. For example, it will take this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0982d76049449d0383de59b7439bcf64a50fab11" translate="yes" xml:space="preserve">
          <source>Setting this bit is useful for allowing you to check whether a floppy diskette is in the floppy drive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428f294c336f76408adb1fa256045589284c8f18" translate="yes" xml:space="preserve">
          <source>Setting this environment variable to 1 means that Perl will simply use the first suitable LSP enumerated in the catalog, which keeps</source>
          <target state="translated">Poner esta variable de entorno a 1 significa que Perl simplemente usará el primer LSP adecuado enumerado en el catálogo,que mantiene</target>
        </trans-unit>
        <trans-unit id="58986a4a9897f4b83b3ef2fcc107e9d9ac853dce" translate="yes" xml:space="preserve">
          <source>Setting this to a non-zero value has been deprecated since Perl 5.12 and throws a fatal error as of Perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c601f26f0773d007fbfc9c3dd2bd190b39a86e1" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the error stream does not match that declared with &lt;code&gt;test_err&lt;/code&gt; .</source>
          <target state="translated">Establecer esto en un valor verdadero har&amp;aacute; que la prueba ignore si la salida enviada por la prueba al flujo de error no coincide con la declarada con &lt;code&gt;test_err&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca6601411c3d23620343cf28ba50d8255b57f96b" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the error stream does not match that declared with &lt;code&gt;test_err&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6a7f1ac441089e81cf334470f68a0350c3eeb4" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the output stream does not match that declared with &lt;code&gt;test_out&lt;/code&gt; .</source>
          <target state="translated">Establecer esto en un valor verdadero har&amp;aacute; que la prueba ignore si la salida enviada por la prueba al flujo de salida no coincide con la declarada con &lt;code&gt;test_out&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7494f54d9ccfaa1555b97034605f0696874ab83e" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the output stream does not match that declared with &lt;code&gt;test_out&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18b09e20cf39c98db8028c26245168d90e6eceb" translate="yes" xml:space="preserve">
          <source>Setting this to true will make the harness display the number of milliseconds each test took. You can also use</source>
          <target state="translated">Poner esto en verdadero hará que el arnés muestre el número de milisegundos que tomó cada prueba.También puede usar</target>
        </trans-unit>
        <trans-unit id="83b02bd49b46e2f5bcb31f889abff75ab229e8cf" translate="yes" xml:space="preserve">
          <source>Setting this variable includes the tests in</source>
          <target state="translated">La configuración de esta variable incluye las pruebas en</target>
        </trans-unit>
        <trans-unit id="748c80296dffa5e7f806097b537391f16d71d73d" translate="yes" xml:space="preserve">
          <source>Setting this variable runs all the Net::Ping modules tests, otherwise some tests that interact with the outside world are skipped. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl58delta.html&quot;&gt;perl58delta&lt;/a&gt;.</source>
          <target state="translated">Al establecer esta variable, se ejecutan todas las pruebas de los m&amp;oacute;dulos Net :: Ping; de lo contrario, se omiten algunas pruebas que interact&amp;uacute;an con el mundo exterior. Ver &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl58delta.html&quot;&gt;perl58delta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f17e222db1f976822d9a24eb487be07d7eb495af" translate="yes" xml:space="preserve">
          <source>Setting this variable runs all the Net::Ping modules tests, otherwise some tests that interact with the outside world are skipped. See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perl58delta&quot;&gt;perl58delta&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7593ed09c7d1c65b5b02df3383bcc07c6f89e435" translate="yes" xml:space="preserve">
          <source>Setting this variable skips the vrexx.t tests for OS2::REXX.</source>
          <target state="translated">Configurar esta variable salta las pruebas de vrexx.t para OS2::REXX.</target>
        </trans-unit>
        <trans-unit id="34781ef166af178f4a16f210ffda5361e9f8fee9" translate="yes" xml:space="preserve">
          <source>Setting this variable to any other value than &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is deprecated due to fundamental defects in its design and implementation. It is planned to remove it from a future Perl version. Its purpose was to allow your non-ASCII Perl scripts to not have to be written in UTF-8; this was useful before editors that worked on UTF-8 encoded text were common, but that was long ago. It causes problems, such as affecting the operation of other modules that aren't expecting it, causing general mayhem. Its use can lead to segfaults.</source>
          <target state="translated">Establecer esta variable en cualquier otro valor que &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; sea indef est&amp;aacute; obsoleto debido a defectos fundamentales en su dise&amp;ntilde;o e implementaci&amp;oacute;n. Est&amp;aacute; previsto eliminarlo de una futura versi&amp;oacute;n de Perl. Su prop&amp;oacute;sito era permitir que sus scripts de Perl no ASCII no tuvieran que estar escritos en UTF-8; esto era &amp;uacute;til antes de que los editores que trabajaban con texto codificado en UTF-8 fueran comunes, pero eso fue hace mucho tiempo. Causa problemas, como afectar el funcionamiento de otros m&amp;oacute;dulos que no lo esperan, provocando un caos generalizado. Su uso puede dar lugar a segfaults.</target>
        </trans-unit>
        <trans-unit id="868c25fc57402d39160dd4614d853cdf01773124" translate="yes" xml:space="preserve">
          <source>Setting this variable to anything other than an undefined value throws a fatal error as of Perl 5.28.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a486a54881ca4944733417c8d453b816b797adac" translate="yes" xml:space="preserve">
          <source>Setting up a cross-compilation environment</source>
          <target state="translated">Establecer un entorno de compilación cruzada</target>
        </trans-unit>
        <trans-unit id="6edda08937ce5437ef2f9deb1364a59b1289c766" translate="yes" xml:space="preserve">
          <source>Setting up a signal handler will need to be carefully considered and controlled. What mask is in effect when a signal handler gets called? If a user can get an imported function to get an exception and call the user's signal handler, does that user's restricted mask get re-instated before the handler is called? Does an imported handler get called with its original mask or the user's one?</source>
          <target state="translated">La creación de un manejador de señales deberá ser cuidadosamente considerada y controlada.¿Qué máscara está en vigor cuando se llama a un manejador de señales? Si un usuario puede obtener una función importada para obtener una excepción y llamar al manejador de señales del usuario,¿se restablece la máscara restringida de ese usuario antes de que se llame al manejador? ¿Se llama a un manejador importado con su máscara original o con la del usuario?</target>
        </trans-unit>
        <trans-unit id="8a164660ff7c0aea058ea9a4d65db581e8d4cbe7" translate="yes" xml:space="preserve">
          <source>Setting up tests</source>
          <target state="translated">Preparando las pruebas</target>
        </trans-unit>
        <trans-unit id="acd917abd9bb5722d2d930c558cb52f288f8c3ea" translate="yes" xml:space="preserve">
          <source>Setting up the build environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da49b73758ae4af2765bb80f7edfbb1e396f46b2" translate="yes" xml:space="preserve">
          <source>Setting/Accessing</source>
          <target state="translated">Setting/Accessing</target>
        </trans-unit>
        <trans-unit id="13bf8ac5cbad88170c30283bc7715ae8986fb23c" translate="yes" xml:space="preserve">
          <source>Setuid scripts have additional constraints that can produce error messages such as &quot;Insecure dependency&quot;. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">Los scripts de Setuid tienen restricciones adicionales que pueden producir mensajes de error como &quot;Dependencia insegura&quot;. Ver &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="7542e5edaf78a7e51c593cd897bf4d6df150673c" translate="yes" xml:space="preserve">
          <source>Setup and utilities for Perl on OS/390</source>
          <target state="translated">Configuración y utilidades para Perl en OS/390</target>
        </trans-unit>
        <trans-unit id="e42bc033db0c04c8f20ac694388fa4c4bbcb2050" translate="yes" xml:space="preserve">
          <source>Several &quot;Eskimo&quot; languages.</source>
          <target state="translated">Varios idiomas &quot;esquimales&quot;.</target>
        </trans-unit>
        <trans-unit id="e624c615b753dfc714db2cd39f7729ccdb361710" translate="yes" xml:space="preserve">
          <source>Several CPAN modules may be able to help, including &lt;a href=&quot;IPC::Open2&quot;&gt;IPC::Open2&lt;/a&gt; or &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt;, &lt;a href=&quot;IPC::Run&quot;&gt;IPC::Run&lt;/a&gt;, &lt;a href=&quot;Parallel::Jobs&quot;&gt;Parallel::Jobs&lt;/a&gt;, &lt;a href=&quot;Parallel::ForkManager&quot;&gt;Parallel::ForkManager&lt;/a&gt;, &lt;a href=&quot;poe&quot;&gt;POE&lt;/a&gt;, &lt;a href=&quot;Proc::Background&quot;&gt;Proc::Background&lt;/a&gt;, and &lt;a href=&quot;Win32::Process&quot;&gt;Win32::Process&lt;/a&gt;. There are many other modules you might use, so check those namespaces for other options too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a086e14a1c43e8380db16eefaab3f189882d72" translate="yes" xml:space="preserve">
          <source>Several CPAN modules may be able to help, including &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt; or &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::Jobs&quot;&gt;Parallel::Jobs&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::ForkManager&quot;&gt;Parallel::ForkManager&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/POE&quot;&gt;POE&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Proc::Background&quot;&gt;Proc::Background&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Process&quot;&gt;Win32::Process&lt;/a&gt;. There are many other modules you might use, so check those namespaces for other options too.</source>
          <target state="translated">Varios m&amp;oacute;dulos CPAN pueden ayudar, incluidos &lt;a href=&quot;ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt; o &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::Jobs&quot;&gt;Parallel :: Jobs&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::ForkManager&quot;&gt;Parallel :: ForkManager&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/POE&quot;&gt;POE&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Proc::Background&quot;&gt;Proc :: Background&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Process&quot;&gt;Win32 :: Process&lt;/a&gt; . Hay muchos otros m&amp;oacute;dulos que puede usar, as&amp;iacute; que verifique esos espacios de nombres para ver tambi&amp;eacute;n otras opciones.</target>
        </trans-unit>
        <trans-unit id="72ba89d4b4f03b960d7a7c1b62fec8c497398f12" translate="yes" xml:space="preserve">
          <source>Several Perl functions and modules depend on the existence of some optional libraries. Configure will find them if they are installed in one of the directories listed as being used for library searches. Pre-built packages for most of these are available from the Cygwin installer.</source>
          <target state="translated">Varias funciones y módulos de Perl dependen de la existencia de algunas bibliotecas opcionales.Configure las encontrará si están instaladas en uno de los directorios listados como usados para la búsqueda de bibliotecas.Los paquetes preconstruidos para la mayoría de ellos están disponibles en el instalador Cygwin.</target>
        </trans-unit>
        <trans-unit id="b507fbc9e6ee713770906faa20b03579b86f6852" translate="yes" xml:space="preserve">
          <source>Several Unix/Linux related magazines frequently include articles on Perl.</source>
          <target state="translated">Varias revistas relacionadas con Unix/Linux suelen incluir artículos sobre Perl.</target>
        </trans-unit>
        <trans-unit id="36833c191e11bf7ea7ef7228e804dddd43eea89d" translate="yes" xml:space="preserve">
          <source>Several cleanups prompted by lack of compatible perlglob.exe under Borland (GSAR 27-MAY-97)</source>
          <target state="translated">Varias limpiezas provocadas por la falta de un perlglob.exe compatible con Borland (GSAR 27-MAY-97)</target>
        </trans-unit>
        <trans-unit id="db13e38fcdff385659bc07b56eda3f3ec8420c2f" translate="yes" xml:space="preserve">
          <source>Several configuration variables can be used to control the kind of output generated when using the procedural interface. These variables are usually &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;ized in a block so that other parts of the code are not affected by the change.</source>
          <target state="translated">Se pueden usar varias variables de configuraci&amp;oacute;n para controlar el tipo de salida generada cuando se usa la interfaz de procedimiento. Estas variables son generalmente &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; es zan en un bloque para que las otras partes del c&amp;oacute;digo no se ven afectados por el cambio.</target>
        </trans-unit>
        <trans-unit id="83d8e7f315acd58c810faf7794bbfb59262d1b8a" translate="yes" xml:space="preserve">
          <source>Several configuration variables can be used to control the kind of output generated when using the procedural interface. These variables are usually &lt;code&gt;local&lt;/code&gt;ized in a block so that other parts of the code are not affected by the change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025ea220ceeecd1a101f60931a1651e8d46a3ae1" translate="yes" xml:space="preserve">
          <source>Several constructs above specify a character by a number. That number gives the character's position in the character set encoding (indexed from 0). This is called synonymously its ordinal, code position, or code point. Perl works on platforms that have a native encoding currently of either ASCII/Latin1 or EBCDIC, each of which allow specification of 256 characters. In general, if the number is 255 (0xFF, 0377) or below, Perl interprets this in the platform's native encoding. If the number is 256 (0x100, 0400) or above, Perl interprets it as a Unicode code point and the result is the corresponding Unicode character. For example &lt;code&gt;\x{50}&lt;/code&gt; and &lt;code&gt;\o{120}&lt;/code&gt; both are the number 80 in decimal, which is less than 256, so the number is interpreted in the native character set encoding. In ASCII the character in the 80th position (indexed from 0) is the letter &lt;code&gt;&quot;P&quot;&lt;/code&gt; , and in EBCDIC it is the ampersand symbol &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; . &lt;code&gt;\x{100}&lt;/code&gt; and &lt;code&gt;\o{400}&lt;/code&gt; are both 256 in decimal, so the number is interpreted as a Unicode code point no matter what the native encoding is. The name of the character in the 256th position (indexed by 0) in Unicode is &lt;code&gt;LATIN CAPITAL LETTER A WITH MACRON&lt;/code&gt; .</source>
          <target state="translated">Varias construcciones anteriores especifican un car&amp;aacute;cter mediante un n&amp;uacute;mero. Ese n&amp;uacute;mero da la posici&amp;oacute;n del personaje en la codificaci&amp;oacute;n del juego de caracteres (indexado desde 0). A esto se le llama como sin&amp;oacute;nimo su posici&amp;oacute;n de c&amp;oacute;digo, ordinal o punto de c&amp;oacute;digo. Perl funciona en plataformas que tienen una codificaci&amp;oacute;n nativa actualmente de ASCII / Latin1 o EBCDIC, cada una de las cuales permite la especificaci&amp;oacute;n de 256 caracteres. En general, si el n&amp;uacute;mero es 255 (0xFF, 0377) o menos, Perl lo interpreta en la codificaci&amp;oacute;n nativa de la plataforma. Si el n&amp;uacute;mero es 256 (0x100, 0400) o superior, Perl lo interpreta como un punto de c&amp;oacute;digo Unicode y el resultado es el car&amp;aacute;cter Unicode correspondiente. Por ejemplo, &lt;code&gt;\x{50}&lt;/code&gt; y &lt;code&gt;\o{120}&lt;/code&gt; ambos son el n&amp;uacute;mero 80 en decimal, que es menor que 256, por lo que el n&amp;uacute;mero se interpreta en la codificaci&amp;oacute;n del juego de caracteres nativo. En ASCII, el car&amp;aacute;cter en la posici&amp;oacute;n 80 (indexado desde 0) es la letra &lt;code&gt;&quot;P&quot;&lt;/code&gt; , y en EBCDIC es el s&amp;iacute;mbolo comercial &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; . &lt;code&gt;\x{100}&lt;/code&gt; y &lt;code&gt;\o{400}&lt;/code&gt; son 256 en decimal, por lo que el n&amp;uacute;mero se interpreta como un punto de c&amp;oacute;digo Unicode sin importar cu&amp;aacute;l sea la codificaci&amp;oacute;n nativa. El nombre del car&amp;aacute;cter en la posici&amp;oacute;n 256 (indexado por 0) en Unicode es &lt;code&gt;LATIN CAPITAL LETTER A WITH MACRON&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a14148d4e07e86d0280b9d6a9312145456a6cee5" translate="yes" xml:space="preserve">
          <source>Several constructs above specify a character by a number. That number gives the character's position in the character set encoding (indexed from 0). This is called synonymously its ordinal, code position, or code point. Perl works on platforms that have a native encoding currently of either ASCII/Latin1 or EBCDIC, each of which allow specification of 256 characters. In general, if the number is 255 (0xFF, 0377) or below, Perl interprets this in the platform's native encoding. If the number is 256 (0x100, 0400) or above, Perl interprets it as a Unicode code point and the result is the corresponding Unicode character. For example &lt;code&gt;\x{50}&lt;/code&gt; and &lt;code&gt;\o{120}&lt;/code&gt; both are the number 80 in decimal, which is less than 256, so the number is interpreted in the native character set encoding. In ASCII the character in the 80th position (indexed from 0) is the letter &lt;code&gt;&quot;P&quot;&lt;/code&gt;, and in EBCDIC it is the ampersand symbol &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;. &lt;code&gt;\x{100}&lt;/code&gt; and &lt;code&gt;\o{400}&lt;/code&gt; are both 256 in decimal, so the number is interpreted as a Unicode code point no matter what the native encoding is. The name of the character in the 256th position (indexed by 0) in Unicode is &lt;code&gt;LATIN CAPITAL LETTER A WITH MACRON&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9aff41551a73b4b6b0997301b0cba3ee81abb6f" translate="yes" xml:space="preserve">
          <source>Several modules can handle this sort of parsing--&lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;, &lt;a href=&quot;Text::CSV&quot;&gt;Text::CSV&lt;/a&gt;, &lt;a href=&quot;Text::CSV_XS&quot;&gt;Text::CSV_XS&lt;/a&gt;, and &lt;a href=&quot;Text::ParseWords&quot;&gt;Text::ParseWords&lt;/a&gt;, among others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb881b9834838039d809c3bb093fb3ca4e17bb6" translate="yes" xml:space="preserve">
          <source>Several modules can handle this sort of parsing--&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text::CSV&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text::CSV_XS&lt;/a&gt;, and &lt;a href=&quot;text/parsewords&quot;&gt;Text::ParseWords&lt;/a&gt;, among others.</source>
          <target state="translated">Varios m&amp;oacute;dulos pueden manejar este tipo de an&amp;aacute;lisis &lt;a href=&quot;text/balanced&quot;&gt;: Text :: Balanced&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text :: CSV&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text :: CSV_XS&lt;/a&gt; y &lt;a href=&quot;text/parsewords&quot;&gt;Text :: ParseWords&lt;/a&gt; , entre otros.</target>
        </trans-unit>
        <trans-unit id="ec37cc7162eb28d20005e06a7dec3c5b338debaf" translate="yes" xml:space="preserve">
          <source>Several modules let you calculate with unlimited or fixed precision (bound only by memory and CPU time). There are also some non-standard modules that provide faster implementations via external C libraries.</source>
          <target state="translated">Varios módulos le permiten calcular con una precisión ilimitada o fija (limitada sólo por la memoria y el tiempo de la CPU).También hay algunos módulos no estándar que proporcionan implementaciones más rápidas a través de librerías C externas.</target>
        </trans-unit>
        <trans-unit id="67c147f88fedb964246268fefad75f6aa72aeeaf" translate="yes" xml:space="preserve">
          <source>Several other minor changes</source>
          <target state="translated">Otros cambios menores</target>
        </trans-unit>
        <trans-unit id="cbd707922dc7f0ac0b710570868c333b9e909d87" translate="yes" xml:space="preserve">
          <source>Several parameters correspond to &lt;code&gt;ExtUtils::Mksymlists::Mksymlists()&lt;/code&gt; options, as follows:</source>
          <target state="translated">Varios par&amp;aacute;metros corresponden a las &lt;code&gt;ExtUtils::Mksymlists::Mksymlists()&lt;/code&gt; , de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="51ce731fa04ac92371342430f3071e509e7a9526" translate="yes" xml:space="preserve">
          <source>Several required files will still be missing:</source>
          <target state="translated">Varios archivos necesarios seguirán desapareciendo:</target>
        </trans-unit>
        <trans-unit id="12bb0a278c9f044c640d0d62fedbff6f2aff8b1d" translate="yes" xml:space="preserve">
          <source>Several special variables also refer back to portions of the previous match. &lt;code&gt;$+&lt;/code&gt; returns whatever the last bracket match matched. &lt;code&gt;$&amp;amp;&lt;/code&gt; returns the entire matched string. (At one point &lt;code&gt;$0&lt;/code&gt; did also, but now it returns the name of the program.) &lt;code&gt;$`&lt;/code&gt; returns everything before the matched string. &lt;code&gt;$'&lt;/code&gt; returns everything after the matched string. And &lt;code&gt;$^N&lt;/code&gt; contains whatever was matched by the most-recently closed group (submatch). &lt;code&gt;$^N&lt;/code&gt; can be used in extended patterns (see below), for example to assign a submatch to a variable.</source>
          <target state="translated">Varias variables especiales tambi&amp;eacute;n hacen referencia a partes de la coincidencia anterior. &lt;code&gt;$+&lt;/code&gt; devuelve lo que coincida con el &amp;uacute;ltimo corchete. &lt;code&gt;$&amp;amp;&lt;/code&gt; devuelve toda la cadena coincidente. (En un momento, &lt;code&gt;$0&lt;/code&gt; tambi&amp;eacute;n lo hizo, pero ahora devuelve el nombre del programa). &lt;code&gt;$`&lt;/code&gt; Devuelve todo antes de la cadena correspondiente. &lt;code&gt;$'&lt;/code&gt; devuelve todo despu&amp;eacute;s de la cadena coincidente. Y &lt;code&gt;$^N&lt;/code&gt; contiene lo que coincidi&amp;oacute; con el grupo cerrado m&amp;aacute;s recientemente (subcoincidencia). &lt;code&gt;$^N&lt;/code&gt; se puede usar en patrones extendidos (ver m&amp;aacute;s abajo), por ejemplo, para asignar una subcoincidencia a una variable.</target>
        </trans-unit>
        <trans-unit id="a3ae7946c2d0f29082eea7ad30cbcf455540f6e6" translate="yes" xml:space="preserve">
          <source>Several styles of output are possible, all controlled by setting the &lt;code&gt;Indent&lt;/code&gt; flag. See &lt;a href=&quot;#Configuration-Variables-or-Methods&quot;&gt;&quot;Configuration Variables or Methods&quot;&lt;/a&gt; below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353c61ff546c0748767d65edffd80e2d9a48d8cb" translate="yes" xml:space="preserve">
          <source>Several styles of output are possible, all controlled by setting the &lt;code&gt;Indent&lt;/code&gt; flag. See &lt;a href=&quot;#Configuration-Variables-or-Methods&quot;&gt;Configuration Variables or Methods&lt;/a&gt; below for details.</source>
          <target state="translated">Son posibles varios estilos de salida, todos controlados mediante el establecimiento de la &lt;code&gt;Indent&lt;/code&gt; . Consulte &lt;a href=&quot;#Configuration-Variables-or-Methods&quot;&gt;Variables o m&amp;eacute;todos de configuraci&amp;oacute;n a&lt;/a&gt; continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="b3fa635b974cdf4d0bafcdf7021b5b41371ca982" translate="yes" xml:space="preserve">
          <source>Several tools needed to build perl are located in /usr/ccs/bin/: ar, as, ld, and make. Make sure that /usr/ccs/bin/ is in your PATH.</source>
          <target state="translated">Varias herramientas necesarias para construir perl se encuentran en /usr/ccs/bin/:ar,as,ld,y make.Asegúrate de que la /usr/ccs/bin/esté en tu PATH.</target>
        </trans-unit>
        <trans-unit id="e75716eac93d8afc288ec94b4c657ebfcf948efd" translate="yes" xml:space="preserve">
          <source>Severe warnings are always enabled, unless they are explicitly disabled with the &lt;code&gt;warnings&lt;/code&gt; pragma or the &lt;b&gt;-X&lt;/b&gt; switch.</source>
          <target state="translated">Las advertencias severas siempre est&amp;aacute;n habilitadas, a menos que est&amp;eacute;n expl&amp;iacute;citamente deshabilitadas con el pragma de &lt;code&gt;warnings&lt;/code&gt; o la &lt;b&gt;opci&amp;oacute;n -X&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e7dd772b3854a8bc3b300bf85e9a40b9bf25a50f" translate="yes" xml:space="preserve">
          <source>Shall we always set the FTP_PASSIVE environment variable when dealing with ftp download (yes/no)?</source>
          <target state="translated">¿Debemos establecer siempre la variable de entorno FTP_PASSIVE cuando se trata de una descarga ftp (sí/no)?</target>
        </trans-unit>
        <trans-unit id="8e75a17098ea7fdbca5b7dda7621f8612dfe0695" translate="yes" xml:space="preserve">
          <source>Share =&amp;gt; $sShare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944edb7108bfdb534265951ea7b5a33f9f4b73e0" translate="yes" xml:space="preserve">
          <source>Share =&amp;gt; $uShare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bf62db0a202cfe8b527778be027079163e0d35" translate="yes" xml:space="preserve">
          <source>Share what you did with the other people. Relax. Enjoy fruits of your work.</source>
          <target state="translated">Comparte lo que hiciste con los demás.Relájate.Disfruta de los frutos de tu trabajo.</target>
        </trans-unit>
        <trans-unit id="df3c637adb69abac13b29419d0cfa8b766ae4adc" translate="yes" xml:space="preserve">
          <source>Shared And Unshared Data</source>
          <target state="translated">Datos compartidos y no compartidos</target>
        </trans-unit>
        <trans-unit id="2ad8427c8c9758999d3e74a7bdd5fb7162a57750" translate="yes" xml:space="preserve">
          <source>Shared libraries created on a platform using a particular PA-RISC version are not usable on platforms using an earlier PA-RISC version by default. However, this backwards compatibility may be enabled using the same +DAportable compiler flag (with the same PA-RISC 1.0 caveat mentioned above).</source>
          <target state="translated">Las bibliotecas compartidas creadas en una plataforma que utiliza una versión particular de PA-RISC no son utilizables en plataformas que utilizan una versión anterior de PA-RISC por defecto.Sin embargo,esta compatibilidad hacia atrás puede ser habilitada usando la misma bandera del compilador +DAportable (con la misma advertencia de PA-RISC 1.0 mencionada anteriormente).</target>
        </trans-unit>
        <trans-unit id="193a001ab941319380e15850d6f5c791732088df" translate="yes" xml:space="preserve">
          <source>Shared libraries created on an Itanium platform cannot be loaded on a PA-RISC platform. Shared libraries created on a PA-RISC platform can only be loaded on an Itanium platform if it is a PA-RISC executable that is attempting to load the PA-RISC library. A PA-RISC shared library cannot be loaded into an Itanium executable nor vice-versa.</source>
          <target state="translated">Las bibliotecas compartidas creadas en una plataforma Itanium no pueden ser cargadas en una plataforma PA-RISC.Las bibliotecas compartidas creadas en una plataforma PA-RISC sólo pueden ser cargadas en una plataforma Itanium si se trata de un ejecutable PA-RISC que está intentando cargar la biblioteca PA-RISC.Una biblioteca compartida PA-RISC no puede ser cargada en un ejecutable Itanium ni viceversa.</target>
        </trans-unit>
        <trans-unit id="6953ee78fc5edeec2d6a50098821da893b0458f7" translate="yes" xml:space="preserve">
          <source>Shared references among objects will not stay shared: if we're serializing the list of object [A, C] where both object A and C refer to the SAME object B, and if there is a serializing hook in A that says freeze(B), then when deserializing, we'll get [A', C'] where A' refers to B', but C' refers to D, a deep clone of B'. The topology was not preserved.</source>
          <target state="translated">Las referencias compartidas entre los objetos no permanecerán compartidas:si estamos serializando la lista de objetos [A,C]donde tanto el objeto A como el C se refieren al MISMO objeto B,y si hay un gancho de serialización en A que dice congelar(B),entonces al deserializar,obtendremos [A',C']donde A' se refiere a B',pero C' se refiere a D,un clon profundo de B'.La topología no se ha conservado.</target>
        </trans-unit>
        <trans-unit id="f728eba8dfb3236f1667f74466840c95e5a7b8ee" translate="yes" xml:space="preserve">
          <source>Shared variables can only store scalars, refs of shared variables, or refs of shared data (discussed in next section):</source>
          <target state="translated">Las variables compartidas sólo pueden almacenar escalares,refs de variables compartidas,o refs de datos compartidos (discutidos en la siguiente sección):</target>
        </trans-unit>
        <trans-unit id="001c163e34c30bd422c6c0b180836b52f1afdb17" translate="yes" xml:space="preserve">
          <source>Sharing Databases With C Applications</source>
          <target state="translated">Compartir bases de datos con aplicaciones C</target>
        </trans-unit>
        <trans-unit id="bd8715c47f235864c2ceb04d785a7b7ec14fa56b" translate="yes" xml:space="preserve">
          <source>Sharing typemaps Between CPAN Distributions</source>
          <target state="translated">Compartiendo typemaps entre las distribuciones de CPAN</target>
        </trans-unit>
        <trans-unit id="0a07afc00eaa14a561ef50fb9dc88822e22b041a" translate="yes" xml:space="preserve">
          <source>Sharp shell programmers should take note of the following:</source>
          <target state="translated">Los programadores de shells afilados deberían tomar nota de lo siguiente:</target>
        </trans-unit>
        <trans-unit id="f78065b15d0af880ad317e4f961cef2d5893c97c" translate="yes" xml:space="preserve">
          <source>Shawn H Corey &lt;code&gt;SHCOREY at cpan.org&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa79f294b4ff3f2bd0e6980c0d9d3429325e3b2" translate="yes" xml:space="preserve">
          <source>Shawn M Moore &lt;code&gt;sartak@gmail.com&lt;/code&gt;</source>
          <target state="translated">Shawn M Moore &lt;code&gt;sartak@gmail.com&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a14cc09b3426b2766b9650c676895c8481a40916" translate="yes" xml:space="preserve">
          <source>Shebang Race Condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc1fd5d3c0f3dcfd55d010426e61bf9451e680d" translate="yes" xml:space="preserve">
          <source>Shell</source>
          <target state="translated">Shell</target>
        </trans-unit>
        <trans-unit id="46f2fc676064cd202c006928e29b43973667f22c" translate="yes" xml:space="preserve">
          <source>Shell Traps</source>
          <target state="translated">Trampas para cascos</target>
        </trans-unit>
        <trans-unit id="05e1aa29dff23edb2a5976ffe3e3f5926084ec96" translate="yes" xml:space="preserve">
          <source>Shell escapes newlines in $text.</source>
          <target state="translated">Shell se escapa de las nuevas líneas en el texto de $.</target>
        </trans-unit>
        <trans-unit id="411430d5faea18a48223083d430d03ec02723be9" translate="yes" xml:space="preserve">
          <source>Shell mode</source>
          <target state="translated">El modo de la concha...</target>
        </trans-unit>
        <trans-unit id="ae8110256e73e2d29bfd2b0361c6084818dcf5fb" translate="yes" xml:space="preserve">
          <source>Shell variables from the</source>
          <target state="translated">Las variables de la cubierta de la</target>
        </trans-unit>
        <trans-unit id="a5efec93b7817b727267bf3e97356065022021aa" translate="yes" xml:space="preserve">
          <source>Shell::Command which is these same functions but take arguments normally.</source>
          <target state="translated">Shell::Comando que es estas mismas funciones pero toma los argumentos normalmente.</target>
        </trans-unit>
        <trans-unit id="5597033de9e3a9ee3ab28b086225929f8384f842" translate="yes" xml:space="preserve">
          <source>Shells (especially &lt;b&gt;csh&lt;/b&gt;) do several levels of substitution on each command line. Perl does substitution in only certain constructs such as double quotes, backticks, angle brackets, and search patterns.</source>
          <target state="translated">Los shells (especialmente &lt;b&gt;csh&lt;/b&gt; ) realizan varios niveles de sustituci&amp;oacute;n en cada l&amp;iacute;nea de comando. Perl solo realiza sustituciones en determinadas construcciones, como comillas dobles, comillas invertidas, corchetes angulares y patrones de b&amp;uacute;squeda.</target>
        </trans-unit>
        <trans-unit id="c3085316e59739c3d0881dec21da7ebe8e1387d1" translate="yes" xml:space="preserve">
          <source>Shells interpret scripts a little bit at a time. Perl compiles the entire program before executing it (except for &lt;code&gt;BEGIN&lt;/code&gt; blocks, which execute at compile time).</source>
          <target state="translated">Los shells interpretan los guiones poco a poco. Perl compila todo el programa antes de ejecutarlo (excepto los bloques &lt;code&gt;BEGIN&lt;/code&gt; , que se ejecutan en tiempo de compilaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="d740f71b4c0205327f8285c81beee6b58843073b" translate="yes" xml:space="preserve">
          <source>Shift Operators</source>
          <target state="translated">Operadores de turno</target>
        </trans-unit>
        <trans-unit id="53ffaf0e7e7ca17703b35ea2272d3800a2b8789e" translate="yes" xml:space="preserve">
          <source>Shift object N digits right in base B and return the resulting object. This is equivalent to performing integer division by B**N and discarding the remainder, except that it might be much faster, depending on how the number is represented internally.</source>
          <target state="translated">Cambie el objeto N dígitos a la derecha de la base B y devuelva el objeto resultante.Esto equivale a realizar la división de un número entero por B**N y descartar el resto,excepto que podría ser mucho más rápido,dependiendo de cómo se represente el número internamente.</target>
        </trans-unit>
        <trans-unit id="816ba91c6c549fed8497fc4ed9fd5be93db7467c" translate="yes" xml:space="preserve">
          <source>Shift the object N digits left in base B. This is equivalent to multiplying by B**N, except that it might be much faster, depending on how the number is represented internally.</source>
          <target state="translated">Desplazar el objeto N dígitos a la izquierda en la base B.Esto equivale a multiplicar por B**N,excepto que podría ser mucho más rápido,dependiendo de cómo se represente el número internamente.</target>
        </trans-unit>
        <trans-unit id="34ca9f2e9bedec059779353756117cfa0cd23d9b" translate="yes" xml:space="preserve">
          <source>Shift_JIS</source>
          <target state="translated">Shift_JIS</target>
        </trans-unit>
        <trans-unit id="c96929f71a3c235121f63b63fb9116d40dbf5a0d" translate="yes" xml:space="preserve">
          <source>Shifting by more bits than the size of the integers means most of the time zero (all bits fall off), except that under &lt;code&gt;use integer&lt;/code&gt; right overshifting a negative shiftee results in -1. This is unlike in C, where shifting by too many bits is undefined. A common C behavior is &quot;shift by modulo wordbits&quot;, so that for example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82c36060459ec37e9c46c5b4c7db69b11b3eb70" translate="yes" xml:space="preserve">
          <source>Shifting by negative number of bits means the reverse shift: left shift becomes right shift, right shift becomes left shift. This is unlike in C, where negative shift is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbd5485928f42790ecd61230b448ed394726e75" translate="yes" xml:space="preserve">
          <source>Shifts $x right by $y in base $n. Default is base 2, used are usually 10 and 2, but others work, too.</source>
          <target state="translated">Cambia $x a la derecha por $y en la base $n.Por defecto es base 2,se usan normalmente 10 y 2,pero otros funcionan también.</target>
        </trans-unit>
        <trans-unit id="84e5b666ca83223606a44c0968ce869e11125987" translate="yes" xml:space="preserve">
          <source>Shifts the first value of the array off and returns it, shortening the array by 1 and moving everything down. If there are no elements in the array, returns the undefined value. If ARRAY is omitted, shifts the &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt; array within the lexical scope of subroutines and formats, and the &lt;a href=&quot;perlvar#%40ARGV&quot;&gt;&lt;code&gt;@ARGV&lt;/code&gt;&lt;/a&gt; array outside a subroutine and also within the lexical scopes established by the &lt;code&gt;eval STRING&lt;/code&gt;, &lt;code&gt;BEGIN {}&lt;/code&gt;, &lt;code&gt;INIT {}&lt;/code&gt;, &lt;code&gt;CHECK {}&lt;/code&gt;, &lt;code&gt;UNITCHECK {}&lt;/code&gt;, and &lt;code&gt;END {}&lt;/code&gt; constructs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab6779d1c4d586e5a686816d2490a5a885e59ca" translate="yes" xml:space="preserve">
          <source>Shifts the first value of the array off and returns it, shortening the array by 1 and moving everything down. If there are no elements in the array, returns the undefined value. If ARRAY is omitted, shifts the &lt;code&gt;@_&lt;/code&gt; array within the lexical scope of subroutines and formats, and the &lt;code&gt;@ARGV&lt;/code&gt; array outside a subroutine and also within the lexical scopes established by the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; , and &lt;code&gt;END {}&lt;/code&gt; constructs.</source>
          <target state="translated">Desplaza el primer valor de la matriz y lo devuelve, acortando la matriz en 1 y moviendo todo hacia abajo. Si no hay elementos en la matriz, devuelve el valor indefinido. Si se omite ARRAY, cambia el arreglo &lt;code&gt;@_&lt;/code&gt; dentro del alcance l&amp;eacute;xico de subrutinas y formatos, y el arreglo &lt;code&gt;@ARGV&lt;/code&gt; fuera de una subrutina y tambi&amp;eacute;n dentro de los alcances l&amp;eacute;xicos establecidos por &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; y &lt;code&gt;END {}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ceb6ece5170a4ff335501d527cf25219b25ce8af" translate="yes" xml:space="preserve">
          <source>Shifts the first value of the array off and returns it, shortening the array by 1 and moving everything down. If there are no elements in the array, returns the undefined value. If ARRAY is omitted, shifts the &lt;code&gt;@_&lt;/code&gt; array within the lexical scope of subroutines and formats, and the &lt;code&gt;@ARGV&lt;/code&gt; array outside a subroutine and also within the lexical scopes established by the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; , and &lt;code&gt;END {}&lt;/code&gt; constructs.</source>
          <target state="translated">Desplaza el primer valor de la matriz y lo devuelve, acortando la matriz en 1 y moviendo todo hacia abajo. Si no hay elementos en la matriz, devuelve el valor indefinido. Si se omite ARRAY, cambia el arreglo &lt;code&gt;@_&lt;/code&gt; dentro del alcance l&amp;eacute;xico de subrutinas y formatos, y el arreglo &lt;code&gt;@ARGV&lt;/code&gt; fuera de una subrutina y tambi&amp;eacute;n dentro de los alcances l&amp;eacute;xicos establecidos por &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; y &lt;code&gt;END {}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9246a967ab694917a93818e0c2f25b9c02d69c1" translate="yes" xml:space="preserve">
          <source>Shlomi Fish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531ae3a2e613d67a406a1e927931cfe1052049c5" translate="yes" xml:space="preserve">
          <source>Shoichi Kaji &amp;lt;skaji@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dece67ae205fea215adef783e8ddedd9ee8cd234" translate="yes" xml:space="preserve">
          <source>Short for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e560762a5e85f4245145df0a3d5f14955ebfbe7e" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;an instance of a class&amp;rdquo;, meaning an &lt;b&gt;object&lt;/b&gt; of that &lt;b&gt;class&lt;/b&gt;.</source>
          <target state="translated">Abreviatura de &quot;una instancia de una clase&quot;, que significa un &lt;b&gt;objeto&lt;/b&gt; de esa &lt;b&gt;clase&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="bf0f9ba179007d01df18b67571c95890eacf53a2" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;array value&amp;rdquo;, which refers to one of Perl&amp;rsquo;s internal data types that holds an &lt;b&gt;array&lt;/b&gt;. The &lt;code&gt;AV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">Abreviatura de &quot;valor de matriz&quot;, que se refiere a uno de los tipos de datos internos de Perl que contiene una &lt;b&gt;matriz&lt;/b&gt; . El tipo &lt;code&gt;AV&lt;/code&gt; es una subclase de &lt;b&gt;SV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="daa4e28096f49e40bca183e69c8dbf8fb7d81587" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;scalar value&amp;rdquo;. But within the Perl interpreter, every &lt;b&gt;referent&lt;/b&gt; is treated as a member of a class derived from SV, in an object-oriented sort of way. Every &lt;b&gt;value&lt;/b&gt; inside Perl is passed around as a C language &lt;code&gt;SV*&lt;/code&gt; pointer. The SV &lt;b&gt;struct&lt;/b&gt; knows its own &amp;ldquo;referent type&amp;rdquo;, and the code is smart enough (we hope) not to try to call a &lt;b&gt;hash&lt;/b&gt; function on a &lt;b&gt;subroutine&lt;/b&gt;.</source>
          <target state="translated">Abreviatura de &quot;valor escalar&quot;. Pero dentro del int&amp;eacute;rprete de Perl, cada &lt;b&gt;referente&lt;/b&gt; es tratado como un miembro de una clase derivada de SV, de una manera orientada a objetos. Cada &lt;b&gt;valor&lt;/b&gt; dentro de Perl se pasa como un puntero &lt;code&gt;SV*&lt;/code&gt; en lenguaje C. La &lt;b&gt;estructura&lt;/b&gt; SV conoce su propio &quot;tipo de referencia&quot;, y el c&amp;oacute;digo es lo suficientemente inteligente (esperamos) para no intentar llamar a una funci&amp;oacute;n &lt;b&gt;hash&lt;/b&gt; en una &lt;b&gt;subrutina&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="5d19c4596f6bfea39cf19abcb0120dd79077a176" translate="yes" xml:space="preserve">
          <source>Short for &lt;b&gt;scratchpad&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;Abreviatura&lt;/b&gt; de &lt;b&gt;scratchpad&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="11be5993935a64f6ec9ea9395f4cafbeb6afecc6" translate="yes" xml:space="preserve">
          <source>Short for Nevada, no part of which will ever be confused with civilization. NV also means an internal floating- point Numeric Value of the type a &lt;b&gt;scalar&lt;/b&gt; can hold, not to be confused with an &lt;b&gt;IV&lt;/b&gt;.</source>
          <target state="translated">Abreviatura de Nevada, ninguna parte de la cual se confundir&amp;aacute; jam&amp;aacute;s con la civilizaci&amp;oacute;n. NV tambi&amp;eacute;n significa un valor num&amp;eacute;rico de coma flotante interno del tipo que puede contener un &lt;b&gt;escalar&lt;/b&gt; , que no debe confundirse con un &lt;b&gt;IV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="753c68d3ba41db74e4df8914f2ce920431708ec4" translate="yes" xml:space="preserve">
          <source>Short for Transmission Control Protocol. A protocol wrapped around the Internet Protocol to make an unreliable packet transmission mechanism appear to the application program to be a reliable &lt;b&gt;stream&lt;/b&gt; of bytes. (Usually.)</source>
          <target state="translated">Abreviatura de Protocolo de control de transmisi&amp;oacute;n. Un protocolo envuelto alrededor del Protocolo de Internet para hacer que un mecanismo de transmisi&amp;oacute;n de paquetes no confiable le parezca al programa de aplicaci&amp;oacute;n como un &lt;b&gt;flujo&lt;/b&gt; confiable de bytes. (Generalmente.)</target>
        </trans-unit>
        <trans-unit id="dc5ee68c69bf44299748c4c256b80c120fb271e9" translate="yes" xml:space="preserve">
          <source>Short for a &amp;ldquo;hash value&amp;rdquo; typedef, which holds Perl&amp;rsquo;s internal representation of a hash. The &lt;code&gt;HV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">Abreviatura de typedef de &quot;valor hash&quot;, que contiene la representaci&amp;oacute;n interna de Perl de un hash. El tipo &lt;code&gt;HV&lt;/code&gt; es una subclase de &lt;b&gt;SV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="641d12dc5680debd9252f30257e835d77f2b58b5" translate="yes" xml:space="preserve">
          <source>Short for a &amp;ldquo;terminal&amp;rdquo;&amp;mdash;that is, a leaf node of a &lt;b&gt;syntax tree&lt;/b&gt;. A thing that functions grammatically as an &lt;b&gt;operand&lt;/b&gt; for the operators in an expression.</source>
          <target state="translated">Abreviatura de &quot;terminal&quot;, es decir, un nodo hoja de un &lt;b&gt;&amp;aacute;rbol de sintaxis&lt;/b&gt; . Algo que funciona gramaticalmente como &lt;b&gt;operando&lt;/b&gt; para los operadores de una expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2a34ff2be32b26b7b9b0b3b4f346552a9899d102" translate="yes" xml:space="preserve">
          <source>Short for one member of &lt;b&gt;Perl mongers&lt;/b&gt;, a purveyor of Perl.</source>
          <target state="translated">Abreviatura de un miembro de &lt;b&gt;Perl traficantes&lt;/b&gt; , un proveedor de Perl.</target>
        </trans-unit>
        <trans-unit id="215e423928369d110ed59f1768219b3b38101a83" translate="yes" xml:space="preserve">
          <source>Short integers. This is equivalent to T_IV but explicitly casts the return to type &lt;code&gt;short&lt;/code&gt; . The default typemap for &lt;code&gt;short&lt;/code&gt; is T_IV.</source>
          <target state="translated">Enteros cortos. Esto es equivalente a T_IV pero expl&amp;iacute;citamente lanza el retorno al tipo &lt;code&gt;short&lt;/code&gt; . El mapa de tipos predeterminado para &lt;code&gt;short&lt;/code&gt; es T_IV.</target>
        </trans-unit>
        <trans-unit id="12e34708f98b55fcfa0df10d0541bdc76b04003d" translate="yes" xml:space="preserve">
          <source>Short integers. This is equivalent to T_IV but explicitly casts the return to type &lt;code&gt;short&lt;/code&gt;. The default typemap for &lt;code&gt;short&lt;/code&gt; is T_IV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e173f44ce033e23615a07008598ed98e0724ec82" translate="yes" xml:space="preserve">
          <source>Short of loading the file into a database or pre-indexing the lines in the file, there are a couple of things that you can do.</source>
          <target state="translated">Aparte de cargar el archivo en una base de datos o pre-indexar las líneas del archivo,hay un par de cosas que puedes hacer.</target>
        </trans-unit>
        <trans-unit id="84208312087b060594b7b3ab194603ca9b48cd14" translate="yes" xml:space="preserve">
          <source>Short string (usually 10 characters or less, not enforced, but may be truncated by renderers) categorizing the amnesty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342f19ffca54484d831bc22d60422377cb72128f" translate="yes" xml:space="preserve">
          <source>Short summary: You need to create a package that defines four methods:</source>
          <target state="translated">Breve resumen:Necesitas crear un paquete que defina cuatro métodos:</target>
        </trans-unit>
        <trans-unit id="7d0c4499cb9c122a7211725e510477fa79e82bb6" translate="yes" xml:space="preserve">
          <source>Short tag to categorize the error. This is usually 10 characters or less, formatters may truncate longer tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5092f6331f83cfc30c23eb79579783db3e8793f1" translate="yes" xml:space="preserve">
          <source>Short tag to categorize the info. This is usually 10 characters or less, formatters may truncate longer tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b21662873145e63208c0c220c63eecf3382545" translate="yes" xml:space="preserve">
          <source>Short tests may produce negative figures because perl can appear to take longer to execute the empty loop than a short test; try:</source>
          <target state="translated">Las pruebas cortas pueden dar cifras negativas porque parece que el perl puede tardar más en ejecutar el bucle vacío que una prueba corta;inténtelo:</target>
        </trans-unit>
        <trans-unit id="3c291d239a5572586d5800f8940e243040b2c7b5" translate="yes" xml:space="preserve">
          <source>Shortcomings of Perl under AmigaOS</source>
          <target state="translated">Deficiencias del Perl bajo el AmigaOS</target>
        </trans-unit>
        <trans-unit id="fa78e77c849e3197f1c80d2dbbfe4db374f3b001" translate="yes" xml:space="preserve">
          <source>Shortcomings of Perl under DOS</source>
          <target state="translated">Deficiencias del Perl en el DOS</target>
        </trans-unit>
        <trans-unit id="a84b9d9cc1ba4235d4b9a38a4443bc225f0a9d86" translate="yes" xml:space="preserve">
          <source>Should I do anything special if I call perl from multiple threads?</source>
          <target state="translated">¿Debería hacer algo especial si llamo a Perl desde varios hilos?</target>
        </trans-unit>
        <trans-unit id="41623a0ef32a13c7058b74719f5d1256441b7302" translate="yes" xml:space="preserve">
          <source>Should I use a web framework?</source>
          <target state="translated">¿Debería usar un marco de trabajo en la web?</target>
        </trans-unit>
        <trans-unit id="706821549d14c573be320aadd1615ad49253a11a" translate="yes" xml:space="preserve">
          <source>Should a user have the need for compiling Perl in the LP64 environment, use the -Duse64bitall flag to Configure. This will force Perl to be compiled in a pure LP64 environment (with the +DD64 flag for HP C-ANSI-C, with no additional options for GNU gcc 64-bit on PA-RISC, and with -mlp64 for GNU gcc on Itanium). If you want to compile Perl using gcc, you will have to get a version of the compiler that supports 64-bit operations.)</source>
          <target state="translated">Si un usuario tiene la necesidad de compilar Perl en el entorno LP64,use la bandera -Duse64bitall para Configurar.Esto forzará a que Perl sea compilado en un entorno LP64 puro (con la bandera +DD64 para HP C-ANSI-C,sin opciones adicionales para GNU gcc 64-bit en PA-RISC,y con -mlp64 para GNU gcc en Itanium).Si quieres compilar Perl usando gcc,tendrás que conseguir una versión del compilador que soporte operaciones de 64 bits).</target>
        </trans-unit>
        <trans-unit id="efca6f20e60abb6462f2115cc6f4f778b3e904aa" translate="yes" xml:space="preserve">
          <source>Should an &lt;code&gt;ok()&lt;/code&gt; fail, it will produce some diagnostics:</source>
          <target state="translated">Si un &lt;code&gt;ok()&lt;/code&gt; falla, producir&amp;aacute; algunos diagn&amp;oacute;sticos:</target>
        </trans-unit>
        <trans-unit id="6ed2a6a9606e8c4524e86ab5840b45b4bc37bfbb" translate="yes" xml:space="preserve">
          <source>Should be true if this event should result in a test count increment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa2401927f1002b79d1cf0dcfbafc98b85b5c42" translate="yes" xml:space="preserve">
          <source>Should be used if the perl library is moved from the default location in preference to &lt;code&gt;PERL(5)LIB&lt;/code&gt;, since this would not leave wrong entries in @INC. For example, if the compiled version of perl looks for @INC in</source>
          <target state="translated">Debe usarse si la biblioteca perl se mueve de la ubicaci&amp;oacute;n predeterminada en lugar de &lt;code&gt;PERL(5)LIB&lt;/code&gt; , ya que esto no dejar&amp;iacute;a entradas incorrectas en @INC. Por ejemplo, si la versi&amp;oacute;n compilada de perl busca @INC en</target>
        </trans-unit>
        <trans-unit id="56e9538fa48dc5397d7704d11be1b316f1409e45" translate="yes" xml:space="preserve">
          <source>Should make stream's state consistent with layers below. That is, any buffered write data should be written, and file position of lower layers adjusted for data read from below but not actually consumed. (Should perhaps &lt;code&gt;Unread()&lt;/code&gt; such data to the lower layer.)</source>
          <target state="translated">Debe hacer que el estado de la secuencia sea coherente con las capas siguientes. Es decir, todos los datos de escritura almacenados en b&amp;uacute;fer deben escribirse y la posici&amp;oacute;n del archivo de las capas inferiores debe ajustarse para los datos le&amp;iacute;dos desde abajo pero no consumidos realmente. (Quiz&amp;aacute;s deber&amp;iacute;a no &lt;code&gt;Unread()&lt;/code&gt; dichos datos en la capa inferior).</target>
        </trans-unit>
        <trans-unit id="1c3d2c3d146bd37267ff2248c2cd5e844253f599" translate="yes" xml:space="preserve">
          <source>Should not be set with newer Perls, since this may hide some</source>
          <target state="translated">No debe establecerse con los nuevos Perls,ya que esto puede ocultar algunos</target>
        </trans-unit>
        <trans-unit id="ed8ff1c4976aa7b4301ba319829b15d5951b2c6e" translate="yes" xml:space="preserve">
          <source>Should probably be built into the core, and needs to stop pandering to DOS habits. Needs a dose of optimization too.</source>
          <target state="translated">Probablemente debería estar incorporado en el núcleo,y necesita dejar de complacer los hábitos de DOS.También necesita una dosis de optimización.</target>
        </trans-unit>
        <trans-unit id="fbde5e966385ab1512ea67e3f35d08dd24d83ceb" translate="yes" xml:space="preserve">
          <source>Should return 0 on success, -1 on error. Optional.</source>
          <target state="translated">Debería devolver 0 en el éxito,-1 en el error.Opcional.</target>
        </trans-unit>
        <trans-unit id="f8c399f86acf033efef1e2751ef404b5ddaa2865" translate="yes" xml:space="preserve">
          <source>Should return 0 on success, -1 on error. Optional. Default is to fail, but that is likely to be changed in future.</source>
          <target state="translated">Debería devolver 0 en el éxito,-1 en el error.Opcional.Por defecto es fallar,pero es probable que eso cambie en el futuro.</target>
        </trans-unit>
        <trans-unit id="246758221cfd3e60868d6718c892fa1bb87177ab" translate="yes" xml:space="preserve">
          <source>Should return a string to be placed in the buffer. Optional. If not provided, must provide READ or reject handles open for reading in PUSHED.</source>
          <target state="translated">Debería devolver una cuerda para ser colocada en el buffer.Opcional.Si no se proporciona,debe proporcionar las manijas de LECTURA o rechazo abiertas para la lectura en EMPUJADO.</target>
        </trans-unit>
        <trans-unit id="d3cbfd0fcf4f24975313de4df8de49164d7ee2fd" translate="yes" xml:space="preserve">
          <source>Should return an object or the class, or -1 on failure. (Compare TIEHANDLE.) The arguments are an optional mode string (&quot;r&quot;, &quot;w&quot;, &quot;w+&quot;, ...) and a filehandle for the PerlIO layer below. Mandatory.</source>
          <target state="translated">Debe devolver un objeto o la clase,o -1 en caso de fracaso.(Compare TIEHANDLE.)Los argumentos son una cadena de modo opcional (&quot;r&quot;,&quot;w&quot;,&quot;w+&quot;,...)y un filehandle para la capa PerlIO de abajo.Obligatorio.</target>
        </trans-unit>
        <trans-unit id="5642f34ce9dcd1c3ffa2dfc0c58640c6cb31044d" translate="yes" xml:space="preserve">
          <source>Should the $prefix fail to match</source>
          <target state="translated">En caso de que el prefijo $ no coincida con</target>
        </trans-unit>
        <trans-unit id="1690346ded0caeaa5dcdd766cbbfd423effb3884" translate="yes" xml:space="preserve">
          <source>Should yield no problems with AIX 5.1 / 5.2 / 5.3 / 6.1 / 7.1.</source>
          <target state="translated">No debería haber problemas con AIX 5.1/5.2/5.3/6.1/7.1.</target>
        </trans-unit>
        <trans-unit id="377f03a2a4c9b170d5d73c84fdd0fa6c29b00142" translate="yes" xml:space="preserve">
          <source>Should yield no problems.</source>
          <target state="translated">No debería dar problemas.</target>
        </trans-unit>
        <trans-unit id="35f86593f3a7cab63ebec9bff3335371662e4b80" translate="yes" xml:space="preserve">
          <source>Should you be stuck with an ancient version of git (prior to 1.7), then &lt;code&gt;git push&lt;/code&gt; will not have the &lt;code&gt;-u&lt;/code&gt; switch, and you have to replace the last step with the following sequence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b16df946245605727ff1e16d4791f2bf174400d" translate="yes" xml:space="preserve">
          <source>Should you wish to build a statically-linked executable on a system which can dynamically load libraries, you may, in all the following examples, where the command &quot;&lt;code&gt;make&lt;/code&gt; &quot; with no arguments is executed, run the command &quot;&lt;code&gt;make perl&lt;/code&gt; &quot; instead.</source>
          <target state="translated">Si desea construir un ejecutable vinculado est&amp;aacute;ticamente en un sistema que pueda cargar bibliotecas din&amp;aacute;micamente, puede, en todos los ejemplos siguientes, donde se ejecuta el comando &quot; &lt;code&gt;make&lt;/code&gt; &quot; sin argumentos, ejecutar el comando &quot; &lt;code&gt;make perl&lt;/code&gt; &quot; en su lugar.</target>
        </trans-unit>
        <trans-unit id="398654e660729596cb8454b7f800d571ef53f379" translate="yes" xml:space="preserve">
          <source>Should you wish to build a statically-linked executable on a system which can dynamically load libraries, you may, in all the following examples, where the command &quot;&lt;code&gt;make&lt;/code&gt;&quot; with no arguments is executed, run the command &quot;&lt;code&gt;make perl&lt;/code&gt;&quot; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad198af5ed254b36c0129bab30cb66de4af9306" translate="yes" xml:space="preserve">
          <source>Show all individual modules that have a $VERSION of zero?</source>
          <target state="translated">¿Mostrar todos los módulos individuales que tienen una $VERSIÓN de cero?</target>
        </trans-unit>
        <trans-unit id="5886e6a19b112ccca7d7e5c6a420d33f7dc320f4" translate="yes" xml:space="preserve">
          <source>Show all individual modules that have no $VERSION?</source>
          <target state="translated">¿Mostrar todos los módulos individuales que no tienen $VERSIÓN?</target>
        </trans-unit>
        <trans-unit id="432657faf9897211c68f4ccc299c680506ae0f85" translate="yes" xml:space="preserve">
          <source>Show lexical variables used in functions or files</source>
          <target state="translated">Mostrar las variables léxicas utilizadas en funciones o archivos</target>
        </trans-unit>
        <trans-unit id="15563729135e9ba264fbcba30a709d66c8a1dd93" translate="yes" xml:space="preserve">
          <source>Show test comments (this is a no-op if &lt;code&gt;verbose&lt;/code&gt; is selected).</source>
          <target state="translated">Mostrar comentarios de la prueba (esto no es posible si se selecciona &lt;code&gt;verbose&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="453672f22864e2ecabd52010a0251f21457a02b2" translate="yes" xml:space="preserve">
          <source>Show test failures (this is a no-op if &lt;code&gt;verbose&lt;/code&gt; is selected).</source>
          <target state="translated">Mostrar fallas de prueba (esta es una operaci&amp;oacute;n no &lt;code&gt;verbose&lt;/code&gt; si se selecciona detallado ).</target>
        </trans-unit>
        <trans-unit id="25af3a88c3b3773349dd8ac90b045308d5492ec5" translate="yes" xml:space="preserve">
          <source>Show the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ccbb891469b1a972be7b689b1ec1c7304ecb2a" translate="yes" xml:space="preserve">
          <source>Show the module details. This prints one line for each out-of-date module (meaning, modules locally installed but have newer versions on CPAN). Each line has three columns: module name, local version, and CPAN version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad96a4d0e92d1a92a25032d1a69981cb8c4094d" translate="yes" xml:space="preserve">
          <source>Show the out-of-date modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3deb58d49160799c00454338107f604ea794ed5" translate="yes" xml:space="preserve">
          <source>Show usage.</source>
          <target state="translated">Mostrar el uso.</target>
        </trans-unit>
        <trans-unit id="7222550b5b66397acb151415418533c6a8f6f5fe" translate="yes" xml:space="preserve">
          <source>ShowMode</source>
          <target state="translated">ShowMode</target>
        </trans-unit>
        <trans-unit id="66970db782112b1077801cd655daa3c67c2cdecf" translate="yes" xml:space="preserve">
          <source>Shows if the given module is primarily maintained in perl core or on CPAN and bug tracker URL.</source>
          <target state="translated">Muestra si el módulo dado se mantiene principalmente en el núcleo de perl o en el CPAN y el URL del rastreador de errores.</target>
        </trans-unit>
        <trans-unit id="ab7d18eafb7bcc2a74ee000087e57646aecc2b0d" translate="yes" xml:space="preserve">
          <source>Shows the primary maintainers for the specified modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a820735e69e06ccea6cc9de4ba8697b78a4549" translate="yes" xml:space="preserve">
          <source>Shuts down a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; for a tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac75e459283e311c2d85839794c7648cec7df9c2" translate="yes" xml:space="preserve">
          <source>Shuts down a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Cierra un int&amp;eacute;rprete de Perl. Ver &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90e62e13ea37ff3f7a2ddce5609c724fd7e64daf" translate="yes" xml:space="preserve">
          <source>Shuts down a socket connection in the manner indicated by HOW, which has the same interpretation as in the syscall of the same name.</source>
          <target state="translated">Cierra una conexión de enchufe de la manera indicada por HOW,que tiene la misma interpretación que en la llamada al sistema del mismo nombre.</target>
        </trans-unit>
        <trans-unit id="7187637d0f34c57d8bea4681c13bb60273e1f7d1" translate="yes" xml:space="preserve">
          <source>Shuts down a socket connection in the manner indicated by the value passed in, which has the same interpretation as in the syscall of the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de95fa319fad54d4fda1efff03c4320b4f1bbba0" translate="yes" xml:space="preserve">
          <source>Shutsdown the specified MACHINE, notifying users with the supplied MESSAGE, within the specified TIMEOUT interval. Forces closing of all documents without prompting the user if FORCECLOSE is true, and reboots the machine if REBOOT is true. This function works only on WinNT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="27bed13a88c60350c3de92ec3820e1cc4f7d6ec3" translate="yes" xml:space="preserve">
          <source>Signal</source>
          <target state="translated">Signal</target>
        </trans-unit>
        <trans-unit id="76e3a47c3cea2b4bc39210e8f1a7a4f458325f46" translate="yes" xml:space="preserve">
          <source>Signal flag. Will be set to a true value if a signal was caught. Clients may check for this flag to abort time-consuming operations.</source>
          <target state="translated">Bandera de señales.Se ajustará a un valor real si se capta una señal.Los clientes pueden comprobar si esta bandera aborta las operaciones que llevan mucho tiempo.</target>
        </trans-unit>
        <trans-unit id="47e8409eab6e54647df4cb7cecc41ee28c30a02b" translate="yes" xml:space="preserve">
          <source>Signal handlers deal with signal names, not numbers. Use &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; to find their names on your system.</source>
          <target state="translated">Los manejadores de se&amp;ntilde;ales tratan con nombres de se&amp;ntilde;ales, no con n&amp;uacute;meros. Utilice &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; para encontrar sus nombres en su sistema.</target>
        </trans-unit>
        <trans-unit id="f793004ac2bfb867d7b8c1fed8ccaa1370121adc" translate="yes" xml:space="preserve">
          <source>Signal handlers deal with signal names, not numbers. Use &lt;code&gt;kill -l&lt;/code&gt; to find their names on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89722759e06611996072c09d8d893f78366be03" translate="yes" xml:space="preserve">
          <source>Signal handlers need to be set up in the threads for the signals they are expected to act upon. Here's an example for</source>
          <target state="translated">Los manipuladores de señales deben ser establecidos en los hilos para las señales sobre las que se espera que actúen.Aquí hay un ejemplo de</target>
        </trans-unit>
        <trans-unit id="4c81c67cfc40c99d8beeb124cd5a299ed53f7fa3" translate="yes" xml:space="preserve">
          <source>Signal handling is also used for timeouts in Unix. While safely protected within an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; block, you set a signal handler to trap alarm signals and then schedule to have one delivered to you in some number of seconds. Then try your blocking operation, clearing the alarm when it's done but not before you've exited your &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; block. If it goes off, you'll use die() to jump out of the block.</source>
          <target state="translated">El manejo de se&amp;ntilde;ales tambi&amp;eacute;n se usa para tiempos de espera en Unix. Mientras est&amp;aacute; protegido de manera segura dentro de un bloque &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; , usted configura un manejador de se&amp;ntilde;ales para capturar las se&amp;ntilde;ales de alarma y luego programar para que se le entregue una en algunos segundos. Luego intente su operaci&amp;oacute;n de bloqueo, borrando la alarma cuando haya terminado, pero no antes de que haya salido de su bloque &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; . Si se dispara, usar&amp;aacute;s die () para saltar fuera del bloque.</target>
        </trans-unit>
        <trans-unit id="d4984dbb18bb8f6d69231c1c5402b289b6cae3fd" translate="yes" xml:space="preserve">
          <source>Signal handling is also used for timeouts in Unix. While safely protected within an &lt;code&gt;eval{}&lt;/code&gt; block, you set a signal handler to trap alarm signals and then schedule to have one delivered to you in some number of seconds. Then try your blocking operation, clearing the alarm when it's done but not before you've exited your &lt;code&gt;eval{}&lt;/code&gt; block. If it goes off, you'll use die() to jump out of the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cd055a7cd87b137130bb8b93c1c2e53904764f" translate="yes" xml:space="preserve">
          <source>Signal handling may not behave as on Unix platforms (where it doesn't exactly &quot;behave&quot;, either :). For instance, calling &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; from signal handlers will cause an exception, since most implementations of &lt;code&gt;signal()&lt;/code&gt; on Windows are severely crippled. Thus, signals may work only for simple things like setting a flag variable in the handler. Using signals under this port should currently be considered unsupported.</source>
          <target state="translated">El manejo de se&amp;ntilde;ales puede no comportarse como en las plataformas Unix (donde tampoco se &quot;comporta&quot; exactamente :). Por ejemplo, llamar a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; desde los controladores de se&amp;ntilde;ales provocar&amp;aacute; una excepci&amp;oacute;n, ya que la mayor&amp;iacute;a de las implementaciones de &lt;code&gt;signal()&lt;/code&gt; en Windows est&amp;aacute;n gravemente da&amp;ntilde;adas. Por lo tanto, las se&amp;ntilde;ales pueden funcionar solo para cosas simples como establecer una variable de bandera en el controlador. Actualmente, el uso de se&amp;ntilde;ales en este puerto no debe considerarse compatible.</target>
        </trans-unit>
        <trans-unit id="a87648f8ff8510d519181cee20c22a292d601e89" translate="yes" xml:space="preserve">
          <source>Signal handling may not behave as on Unix platforms (where it doesn't exactly &quot;behave&quot;, either :). For instance, calling &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;exit()&lt;/code&gt; from signal handlers will cause an exception, since most implementations of &lt;code&gt;signal()&lt;/code&gt; on Windows are severely crippled. Thus, signals may work only for simple things like setting a flag variable in the handler. Using signals under this port should currently be considered unsupported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6c417fd537a17b001daa7dbea3a3b50cef51ef" translate="yes" xml:space="preserve">
          <source>Signal number zero may fail because you lack permission to send the signal when directed at a process whose real or saved UID is not identical to the real or effective UID of the sending process, even though the process is alive. You may be able to determine the cause of failure using &lt;code&gt;$!&lt;/code&gt; or &lt;code&gt;%!&lt;/code&gt; .</source>
          <target state="translated">La se&amp;ntilde;al n&amp;uacute;mero cero puede fallar porque no tiene permiso para enviar la se&amp;ntilde;al cuando se dirige a un proceso cuyo UID real o guardado no es id&amp;eacute;ntico al UID real o efectivo del proceso de env&amp;iacute;o, aunque el proceso est&amp;eacute; activo. Es posible que pueda determinar la causa de la falla usando &lt;code&gt;$!&lt;/code&gt; o &lt;code&gt;%!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2252f0feffa6900d113f918d18d91c133bf55365" translate="yes" xml:space="preserve">
          <source>Signal number zero may fail because you lack permission to send the signal when directed at a process whose real or saved UID is not identical to the real or effective UID of the sending process, even though the process is alive. You may be able to determine the cause of failure using &lt;code&gt;$!&lt;/code&gt; or &lt;code&gt;%!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="fec07adfbf089fdf5b54412a5f3085422a9dd0ae" translate="yes" xml:space="preserve">
          <source>Signals are</source>
          <target state="translated">Las señales son</target>
        </trans-unit>
        <trans-unit id="fe837ae8c05b966bdccbee31fe8ed0fe5d881059" translate="yes" xml:space="preserve">
          <source>Signals as &quot;faults&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43861fb85280c34c4b0e58573e896842254a1d10" translate="yes" xml:space="preserve">
          <source>Signals in Plan 9 Perl</source>
          <target state="translated">Señales en el Plan 9 Perl</target>
        </trans-unit>
        <trans-unit id="259b4915ff9abfbb2a728a264509dffb23aed5c4" translate="yes" xml:space="preserve">
          <source>Signals that are intercepted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2f061cd789264d5433118e03b134a8734af9d2" translate="yes" xml:space="preserve">
          <source>Signals triggered by operating system state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cf0392296064579858651f856889aadbc2805e" translate="yes" xml:space="preserve">
          <source>Signatures</source>
          <target state="translated">Signatures</target>
        </trans-unit>
        <trans-unit id="d9d7c542958055b1904998cdb447122ec36a75ab" translate="yes" xml:space="preserve">
          <source>Signed bitwise operators.</source>
          <target state="translated">Firmado por los operadores de bits.</target>
        </trans-unit>
        <trans-unit id="2622f509b356185fe6a42f6313ddbc8e57057af2" translate="yes" xml:space="preserve">
          <source>Significant performance improvements</source>
          <target state="translated">Mejoras significativas en el rendimiento</target>
        </trans-unit>
        <trans-unit id="ae6207f79c10c58b3e0ef4c08bbf6c86acc82fd9" translate="yes" xml:space="preserve">
          <source>Signum function. Set the number to -1, 0, or 1, depending on whether the number is negative, zero, or positive, respectively. Does not modify NaNs.</source>
          <target state="translated">Función de los signos.Ponga el número a -1,0 o 1,dependiendo de si el número es negativo,cero o positivo,respectivamente.No modifica el NaNs.</target>
        </trans-unit>
        <trans-unit id="31506097adfa948440134c0119e5a52038393445" translate="yes" xml:space="preserve">
          <source>Silberschatz, Abraham, and Peter B. Galvin. Operating System Concepts, 4th ed. Addison-Wesley, 1995, ISBN 0-201-59292-4</source>
          <target state="translated">Silberschatz,Abraham y Peter B.Galvin.Operating System Concepts,4ª edición.Addison-Wesley,1995,ISBN 0-201-59292-4</target>
        </trans-unit>
        <trans-unit id="c1200bf449b67efb756e3194a25dcba2a224c7bd" translate="yes" xml:space="preserve">
          <source>Similar in functionality to &lt;a href=&quot;perlfunc#recv&quot;&gt;&quot;recv&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf91ecf8b9db2d36c3c4af1dda8c5294da5403f" translate="yes" xml:space="preserve">
          <source>Similar in functionality to &lt;a href=&quot;perlfunc#send&quot;&gt;&quot;send&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4b469b48eb970781d347cff775a6eb6ed07b9c" translate="yes" xml:space="preserve">
          <source>Similar problems can occur when storing &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; in HVs:</source>
          <target state="translated">Pueden ocurrir problemas similares al almacenar &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; en HV:</target>
        </trans-unit>
        <trans-unit id="0939c3fe5c0d5d2bff40d1b5db20a06321bba976" translate="yes" xml:space="preserve">
          <source>Similar to</source>
          <target state="translated">Similar a</target>
        </trans-unit>
        <trans-unit id="ca29a7deeeb800f3b647ae8e447ace2495bd48e6" translate="yes" xml:space="preserve">
          <source>Similar to &quot;CHECK&quot;, but for &lt;code&gt;INIT&lt;/code&gt; -blocks, not &lt;code&gt;CHECK&lt;/code&gt; blocks.</source>
          <target state="translated">Similar a &quot;CHECK&quot;, pero para bloques &lt;code&gt;INIT&lt;/code&gt; , no &lt;code&gt;CHECK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5ec53f333f04a2995b3e086134767c778243eaa" translate="yes" xml:space="preserve">
          <source>Similar to &quot;CHECK&quot;, but for &lt;code&gt;INIT&lt;/code&gt;-blocks, not &lt;code&gt;CHECK&lt;/code&gt; blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02dc2c9e4fd99225658784381bc57431376c4f2" translate="yes" xml:space="preserve">
          <source>Similar to $io-&amp;gt;seek, but sets the IO::File's position using the system call lseek(2) directly, so will confuse most perl IO operators except sysread and syswrite (see &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for full details)</source>
          <target state="translated">Similar a $ io-&amp;gt; seek, pero establece la posici&amp;oacute;n de IO :: File usando la llamada al sistema lseek (2) directamente, por lo que confundir&amp;aacute; a la mayor&amp;iacute;a de los operadores de perl IO excepto sysread y syswrite (vea &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; para detalles completos)</target>
        </trans-unit>
        <trans-unit id="68c4347f8fea5b416312257ca34ba342de4d10b9" translate="yes" xml:space="preserve">
          <source>Similar to $io-&amp;gt;seek, but sets the IO::File's position using the system call lseek(2) directly, so will confuse most perl IO operators except sysread and syswrite (see &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for full details)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a39eaf579340710bf4bd0f530bd675ee9e7a95" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;&quot;any&quot;&lt;/a&gt; and &lt;a href=&quot;#all&quot;&gt;&quot;all&quot;&lt;/a&gt;, but with the return sense inverted. &lt;code&gt;none&lt;/code&gt; returns true only if no value in the &lt;code&gt;@list&lt;/code&gt; causes the &lt;code&gt;BLOCK&lt;/code&gt; to return true, and &lt;code&gt;notall&lt;/code&gt; returns true only if not all of the values do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48998732d2d944be662f876c6215817f6203f325" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;&quot;any&quot;&lt;/a&gt;, except that it requires all elements of the &lt;code&gt;@list&lt;/code&gt; to make the &lt;code&gt;BLOCK&lt;/code&gt; return true. If any element returns false, then it returns false. If the &lt;code&gt;BLOCK&lt;/code&gt; never returns false or the &lt;code&gt;@list&lt;/code&gt; was empty then it returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeabee18f75813e1d32d468eb7ba172bf546eaed" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt; and &lt;a href=&quot;#all&quot;&gt;all&lt;/a&gt;, but with the return sense inverted. &lt;code&gt;none&lt;/code&gt; returns true only if no value in the &lt;code&gt;@list&lt;/code&gt; causes the &lt;code&gt;BLOCK&lt;/code&gt; to return true, and &lt;code&gt;notall&lt;/code&gt; returns true only if not all of the values do.</source>
          <target state="translated">Similar a &lt;a href=&quot;#any&quot;&gt;todos&lt;/a&gt; y &lt;a href=&quot;#all&quot;&gt;cada uno&lt;/a&gt; , pero con el sentido de retorno invertido. &lt;code&gt;none&lt;/code&gt; devuelve verdadero solo si ning&amp;uacute;n valor en &lt;code&gt;@list&lt;/code&gt; hace que &lt;code&gt;BLOCK&lt;/code&gt; devuelva verdadero, y &lt;code&gt;notall&lt;/code&gt; devuelve verdadero solo si no todos los valores lo hacen.</target>
        </trans-unit>
        <trans-unit id="e0b3d2d208d62b5b40ff53db1e72a57e69459f20" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;, except that it requires all elements of the &lt;code&gt;@list&lt;/code&gt; to make the &lt;code&gt;BLOCK&lt;/code&gt; return true. If any element returns false, then it returns false. If the &lt;code&gt;BLOCK&lt;/code&gt; never returns false or the &lt;code&gt;@list&lt;/code&gt; was empty then it returns true.</source>
          <target state="translated">Similar a &lt;a href=&quot;#any&quot;&gt;cualquiera&lt;/a&gt; , excepto que requiere todos los elementos de &lt;code&gt;@list&lt;/code&gt; para hacer que &lt;code&gt;BLOCK&lt;/code&gt; regrese verdadero. Si alg&amp;uacute;n elemento devuelve falso, entonces devuelve falso. Si el &lt;code&gt;BLOCK&lt;/code&gt; nunca devuelve falso o la &lt;code&gt;@list&lt;/code&gt; estaba vac&amp;iacute;a, entonces devuelve verdadero.</target>
        </trans-unit>
        <trans-unit id="4be8eb83dc7372a8ceafe2d398607db21cbd0df8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;&quot;max&quot;&lt;/a&gt; but returns the entry in the list with the lowest numerical value. If the list is empty then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcb2ef3c4104f74e02c3a234af9ace81a7ab965" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;&quot;max&quot;&lt;/a&gt;, but treats all the entries in the list as strings and returns the highest string as defined by the &lt;code&gt;gt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9665cd00110ac2a060c12898dd3b9d89a35f309" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt; but returns the entry in the list with the lowest numerical value. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Similar a &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt; pero devuelve la entrada en la lista con el valor num&amp;eacute;rico m&amp;aacute;s bajo. Si la lista est&amp;aacute; vac&amp;iacute;a, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1acc3d00496e9a8972d2b21602c04ac03da5cacb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;, but treats all the entries in the list as strings and returns the highest string as defined by the &lt;code&gt;gt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Similar a &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt; , pero trata todas las entradas de la lista como cadenas y devuelve la cadena m&amp;aacute;s alta definida por el operador &lt;code&gt;gt&lt;/code&gt; . Si la lista est&amp;aacute; vac&amp;iacute;a, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfb0f506a775b443c104de0b0c91306a78f551b3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#min&quot;&gt;&quot;min&quot;&lt;/a&gt;, but treats all the entries in the list as strings and returns the lowest string as defined by the &lt;code&gt;lt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a68b93abd1f3ba4015d6e167facf857ecad51b4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;, but treats all the entries in the list as strings and returns the lowest string as defined by the &lt;code&gt;lt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Similar a &lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt; , pero trata todas las entradas de la lista como cadenas y devuelve la cadena m&amp;aacute;s baja definida por el operador &lt;code&gt;lt&lt;/code&gt; . Si la lista est&amp;aacute; vac&amp;iacute;a, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ecb07a28c8b871910322942b1bd79e2ea6e867f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#sum&quot;&gt;&quot;sum&quot;&lt;/a&gt;, except this returns 0 when given an empty list, rather than &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720744a95bf0e839c040c184fab6270aac42881d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#sum&quot;&gt;sum&lt;/a&gt;, except this returns 0 when given an empty list, rather than &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Similar a &lt;a href=&quot;#sum&quot;&gt;sum&lt;/a&gt; , excepto que devuelve 0 cuando se le da una lista vac&amp;iacute;a, en lugar de &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0c5d81a8f59f78025d72fb656f559ed47e0b02" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;%+&lt;/code&gt; , this variable allows access to the named capture groups in the last successful match in the currently active dynamic scope. To each capture group name found in the regular expression, it associates a reference to an array containing the list of values captured by all buffers with that name (should there be several of them), in the order where they appear.</source>
          <target state="translated">Similar a &lt;code&gt;%+&lt;/code&gt; , esta variable permite el acceso a los grupos de captura nombrados en la &amp;uacute;ltima coincidencia exitosa en el alcance din&amp;aacute;mico actualmente activo. A cada nombre de grupo de captura que se encuentra en la expresi&amp;oacute;n regular, asocia una referencia a una matriz que contiene la lista de valores capturados por todos los b&amp;uacute;feres con ese nombre (si hubiera varios de ellos), en el orden en que aparecen.</target>
        </trans-unit>
        <trans-unit id="fc5cb74e6a15c2726021f737c1b80fe548fe2cc2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;%+&lt;/code&gt;, this variable allows access to the named capture groups in the last successful match in the currently active dynamic scope. To each capture group name found in the regular expression, it associates a reference to an array containing the list of values captured by all buffers with that name (should there be several of them), in the order where they appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc471f756f7e6a826fb6380627738dab038925d3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(??{ &lt;i&gt;code&lt;/i&gt; })&lt;/code&gt; except that it does not involve executing any code or potentially compiling a returned pattern string; instead it treats the part of the current pattern contained within a specified capture group as an independent pattern that must match at the current position. Also different is the treatment of capture buffers, unlike &lt;code&gt;(??{ &lt;i&gt;code&lt;/i&gt; })&lt;/code&gt; recursive patterns have access to their caller's match state, so one can use backreferences safely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85d1cf5a45c378c11b14a61c254003e40f86d06" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(??{ code })&lt;/code&gt; except that it does not involve executing any code or potentially compiling a returned pattern string; instead it treats the part of the current pattern contained within a specified capture group as an independent pattern that must match at the current position. Also different is the treatment of capture buffers, unlike &lt;code&gt;(??{ code })&lt;/code&gt; recursive patterns have access to their callers match state, so one can use backreferences safely.</source>
          <target state="translated">Similar a &lt;code&gt;(??{ code })&lt;/code&gt; excepto que no implica ejecutar ning&amp;uacute;n c&amp;oacute;digo o potencialmente compilar una cadena de patr&amp;oacute;n devuelta; en su lugar, trata la parte del patr&amp;oacute;n actual contenida dentro de un grupo de captura especificado como un patr&amp;oacute;n independiente que debe coincidir en la posici&amp;oacute;n actual. Tambi&amp;eacute;n es diferente el tratamiento de los b&amp;uacute;feres de captura, a diferencia de &lt;code&gt;(??{ code })&lt;/code&gt; los patrones recursivos tienen acceso al estado de coincidencia de sus llamadores, por lo que se pueden usar referencias inversas de forma segura.</target>
        </trans-unit>
        <trans-unit id="7b5e1028f59af1e35880841b72d98eb83a4ac03c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(R1)&lt;/code&gt; , this predicate checks to see if we're executing directly inside of the leftmost group with a given name (this is the same logic used by &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt; to disambiguate). It does not check the full stack, but only the name of the innermost active recursion.</source>
          <target state="translated">Similar a &lt;code&gt;(R1)&lt;/code&gt; , este predicado verifica si estamos ejecutando directamente dentro del grupo m&amp;aacute;s a la izquierda con un nombre dado (esta es la misma l&amp;oacute;gica utilizada por &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt; para eliminar la ambig&amp;uuml;edad). No verifica la pila completa, sino solo el nombre de la recursividad activa m&amp;aacute;s interna.</target>
        </trans-unit>
        <trans-unit id="a58b4285d54a7974cddfaf2830c81dd7d35f40eb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(R1)&lt;/code&gt;, this predicate checks to see if we're executing directly inside of the leftmost group with a given name (this is the same logic used by &lt;code&gt;(?&amp;amp;&lt;i&gt;NAME&lt;/i&gt;)&lt;/code&gt; to disambiguate). It does not check the full stack, but only the name of the innermost active recursion. Full syntax: &lt;code&gt;(?(R&amp;amp;&lt;i&gt;name&lt;/i&gt;)&lt;i&gt;then&lt;/i&gt;|&lt;i&gt;else&lt;/i&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d819c8539b4d29d94e8d4689944b0f7272e6c433" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;any&lt;/code&gt; returns true if any element makes the &lt;code&gt;BLOCK&lt;/code&gt; return a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then it returns false.</source>
          <target state="translated">Similar a &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; en el sentido de que eval&amp;uacute;a la configuraci&amp;oacute;n de &lt;code&gt;BLOCK&lt;/code&gt; &lt;code&gt;$_&lt;/code&gt; para cada elemento de &lt;code&gt;@list&lt;/code&gt; a su vez. &lt;code&gt;any&lt;/code&gt; devuelve verdadero si cualquier elemento hace que &lt;code&gt;BLOCK&lt;/code&gt; devuelva un valor verdadero. Si &lt;code&gt;BLOCK&lt;/code&gt; nunca devuelve verdadero o &lt;code&gt;@list&lt;/code&gt; estaba vac&amp;iacute;o, entonces devuelve falso.</target>
        </trans-unit>
        <trans-unit id="309f2e4aced8f70bc86983e34f644c5eeda43d60" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;first&lt;/code&gt; returns the first element where the result from &lt;code&gt;BLOCK&lt;/code&gt; is a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Similar a &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; en que eval&amp;uacute;a la configuraci&amp;oacute;n de &lt;code&gt;BLOCK&lt;/code&gt; &lt;code&gt;$_&lt;/code&gt; a cada elemento de &lt;code&gt;@list&lt;/code&gt; por turno. &lt;code&gt;first&lt;/code&gt; devuelve el primer elemento donde el resultado de &lt;code&gt;BLOCK&lt;/code&gt; es un valor verdadero. Si &lt;code&gt;BLOCK&lt;/code&gt; nunca devuelve verdadero o &lt;code&gt;@list&lt;/code&gt; estaba vac&amp;iacute;o, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e075f217be25d05567036ad66b6856b5e68b562" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;@+&lt;/code&gt; , the &lt;code&gt;%+&lt;/code&gt; hash allows access to the named capture buffers, should they exist, in the last successful match in the currently active dynamic scope.</source>
          <target state="translated">Similar a &lt;code&gt;@+&lt;/code&gt; , el &lt;code&gt;%+&lt;/code&gt; hash permite el acceso a los b&amp;uacute;feres de captura nombrados, si existen, en la &amp;uacute;ltima coincidencia exitosa en el alcance din&amp;aacute;mico actualmente activo.</target>
        </trans-unit>
        <trans-unit id="c20f7b2090b36afe2f8cc1a28252ce82895a9532" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;@+&lt;/code&gt;, the &lt;code&gt;%+&lt;/code&gt; hash allows access to the named capture buffers, should they exist, in the last successful match in the currently active dynamic scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d5383c2abb4219427283869f7f92149d2a972c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Open&lt;/code&gt; , returns PerlIO* on success, &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">Similar a &lt;code&gt;Open&lt;/code&gt; , devuelve PerlIO * en caso de &amp;eacute;xito, &lt;code&gt;NULL&lt;/code&gt; en caso de error.</target>
        </trans-unit>
        <trans-unit id="1de2fbefa7ee02f134e1d332ea00e119a6f12731" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Open&lt;/code&gt;, returns PerlIO* on success, &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9b990cdb77a226953210e003d5b8ec28f7e6d4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;eq_array()&lt;/code&gt; , except the order of the elements is &lt;b&gt;not&lt;/b&gt; important. This is a deep check, but the irrelevancy of order only applies to the top level.</source>
          <target state="translated">Similar a &lt;code&gt;eq_array()&lt;/code&gt; , excepto que el orden de los elementos &lt;b&gt;no&lt;/b&gt; es importante. Esta es una verificaci&amp;oacute;n profunda, pero la irrelevancia del orden solo se aplica al nivel superior.</target>
        </trans-unit>
        <trans-unit id="c6f86f2d94dbcc71aafb977b9cc5434713d6b331" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;eq_array()&lt;/code&gt;, except the order of the elements is &lt;b&gt;not&lt;/b&gt; important. This is a deep check, but the irrelevancy of order only applies to the top level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3701740d1ad6bfc649e15fd040627ffd1f305bbb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;grep&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;any&lt;/code&gt; returns true if any element makes the &lt;code&gt;BLOCK&lt;/code&gt; return a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then it returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfbf42053ee4ef8969a4fa2ee7faff4e2fb6ee2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;grep&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;first&lt;/code&gt; returns the first element where the result from &lt;code&gt;BLOCK&lt;/code&gt; is a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799cf1cf4afc49012909146223bfe3d0985a8027" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;htmlify()&lt;/code&gt; , but turns non-alphanumerics into underscores. Note that &lt;code&gt;anchorify()&lt;/code&gt; is not exported by default.</source>
          <target state="translated">Similar a &lt;code&gt;htmlify()&lt;/code&gt; , pero convierte los caracteres no alfanum&amp;eacute;ricos en guiones bajos. Tenga en cuenta que &lt;code&gt;anchorify()&lt;/code&gt; no se exporta de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="c853c707bee9ff3b2aad37853128e372734e9e4d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;htmlify()&lt;/code&gt;, but turns non-alphanumerics into underscores. Note that &lt;code&gt;anchorify()&lt;/code&gt; is not exported by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12c5c9a9a0658e780b40222b20b1585f58ad997" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;is()&lt;/code&gt; , except that if $got and $expected are references, it does a deep comparison walking each data structure to see if they are equivalent. If the two structures are different, it will display the place where they start differing.</source>
          <target state="translated">Similar a &lt;code&gt;is()&lt;/code&gt; , excepto que si $ got y $ esperaba son referencias, hace una comparaci&amp;oacute;n profunda recorriendo cada estructura de datos para ver si son equivalentes. Si las dos estructuras son diferentes, mostrar&amp;aacute; el lugar donde comienzan a diferir.</target>
        </trans-unit>
        <trans-unit id="5856aeb59fd6e40eddb32ad4b83e28afc3331a2a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;is()&lt;/code&gt;, except that if $got and $expected are references, it does a deep comparison walking each data structure to see if they are equivalent. If the two structures are different, it will display the place where they start differing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a60ea110d9d9e2f388b25322faf3b4d38a6a8c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;list&lt;/code&gt; but only active groups that match the pattern are returned. &lt;code&gt;PATTERN&lt;/code&gt; can be a group pattern.</source>
          <target state="translated">Similar a la &lt;code&gt;list&lt;/code&gt; a, pero solo se devuelven los grupos activos que coinciden con el patr&amp;oacute;n. &lt;code&gt;PATTERN&lt;/code&gt; puede ser un patr&amp;oacute;n de grupo.</target>
        </trans-unit>
        <trans-unit id="8394e4ee5f103a1c48fa6ce025d057e64f7170cc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;lock_keys()&lt;/code&gt; , with the difference being that the optional key list specifies keys that may or may not be already in the hash. Essentially this is an easier way to say</source>
          <target state="translated">Similar a &lt;code&gt;lock_keys()&lt;/code&gt; , con la diferencia de que la lista de claves opcional especifica claves que pueden o no estar ya en el hash. B&amp;aacute;sicamente, esta es una forma m&amp;aacute;s f&amp;aacute;cil de decir</target>
        </trans-unit>
        <trans-unit id="fd28c174d303c48db24df8e8b11ae9ae4d26bc24" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;lock_keys()&lt;/code&gt;, with the difference being that the optional key list specifies keys that may or may not be already in the hash. Essentially this is an easier way to say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb0fd1c6610a16c5e7d118e0a5ba89092c8069d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;newUNOP&lt;/code&gt; , but creates an UNOP_AUX struct instead, with op_aux initialised to aux</source>
          <target state="translated">Similar a &lt;code&gt;newUNOP&lt;/code&gt; , pero crea una estructura UNOP_AUX en su lugar, con op_aux inicializado a aux</target>
        </trans-unit>
        <trans-unit id="5e858708a27caba519590b6fdb8853664bd94dce" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;newUNOP&lt;/code&gt;, but creates an &lt;code&gt;UNOP_AUX&lt;/code&gt; struct instead, with &lt;code&gt;op_aux&lt;/code&gt; initialised to &lt;code&gt;aux&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc376b4266acbbeb8358039fda2afe78067b9523" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;is()&lt;/code&gt; and &lt;code&gt;isnt()&lt;/code&gt; compare their two arguments with &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;ne&lt;/code&gt; respectively and use the result of that to determine if the test succeeded or failed. So these:</source>
          <target state="translated">Similar a &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;is()&lt;/code&gt; e &lt;code&gt;isnt()&lt;/code&gt; comparan sus dos argumentos con &lt;code&gt;eq&lt;/code&gt; y &lt;code&gt;ne&lt;/code&gt; respectivamente y usan el resultado de eso para determinar si la prueba tuvo &amp;eacute;xito o no. Entonces estos:</target>
        </trans-unit>
        <trans-unit id="2d613f276bedf9458ff8ce32e8990c5576137f0b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;like()&lt;/code&gt; matches $got against the regex &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/expected/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Similar a &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;like()&lt;/code&gt; coincide con $ got contra la expresi&amp;oacute;n regular &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/expected/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d80b81dd55578d43ab2dc56b52c4c8c56c375c2a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt;, &lt;code&gt;is()&lt;/code&gt; and &lt;code&gt;isnt()&lt;/code&gt; compare their two arguments with &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;ne&lt;/code&gt; respectively and use the result of that to determine if the test succeeded or failed. So these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38f30f4277690cf45428e116cea438e779a9819" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt;, &lt;code&gt;like()&lt;/code&gt; matches $got against the regex &lt;code&gt;qr/expected/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f443cdf5d4202dff7105c24c5a2b89e3df5ba0b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;reduce&lt;/code&gt; except that it also returns the intermediate values along with the final result. As before, &lt;code&gt;$a&lt;/code&gt; is set to the first element of the given list, and the &lt;code&gt;BLOCK&lt;/code&gt; is then called once for remaining item in the list set into &lt;code&gt;$b&lt;/code&gt;, with the result being captured for return as well as becoming the new value for &lt;code&gt;$a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050d8bfd9d6dd81a6f8789b0e8d9cd7b8f6780b4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt; , but localize &lt;code&gt;@gv&lt;/code&gt; and &lt;code&gt;%gv&lt;/code&gt; .</source>
          <target state="translated">Similar a &lt;code&gt;save_scalar&lt;/code&gt; , pero localice &lt;code&gt;@gv&lt;/code&gt; y &lt;code&gt;%gv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07501a6bba290a81025a9cc58f969fd7da78b384" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt; , but will reinstate an &lt;code&gt;SV *&lt;/code&gt; .</source>
          <target state="translated">Similar a &lt;code&gt;save_scalar&lt;/code&gt; , pero restablecer&amp;aacute; un &lt;code&gt;SV *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="657ba45f71ac8c697cb507869c08178c868c5018" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt;, but localize &lt;code&gt;@gv&lt;/code&gt; and &lt;code&gt;%gv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd7eb38494553782c4863edc348cc1335774a8b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt;, but will reinstate an &lt;code&gt;SV *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1390e677f6a0ebeb104aa1d188d2523b30d8bc4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_svref&lt;/code&gt; , but localize &lt;code&gt;AV *&lt;/code&gt; and &lt;code&gt;HV *&lt;/code&gt; .</source>
          <target state="translated">Similar a &lt;code&gt;save_svref&lt;/code&gt; , pero localice &lt;code&gt;AV *&lt;/code&gt; y &lt;code&gt;HV *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f3780c5e475fc5db102e3fd087d1848086a6f08" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_svref&lt;/code&gt;, but localize &lt;code&gt;AV *&lt;/code&gt; and &lt;code&gt;HV *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdee7e1885c1d2ec3f4e4850b44e46e9ebce62cc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;unlink0&lt;/code&gt; except after file comparison using cmpstat, the filehandle is closed prior to attempting to unlink the file. This allows the file to be removed without using an END block, but does mean that the post-unlink comparison of the filehandle state provided by &lt;code&gt;unlink0&lt;/code&gt; is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf1c2a19f0b0ee74a54bd214a8ec4d84f8e3cf9" translate="yes" xml:space="preserve">
          <source>Similar to C</source>
          <target state="translated">Similar a C</target>
        </trans-unit>
        <trans-unit id="a64ea60affb2a9690ec81f413108d64202543e9b" translate="yes" xml:space="preserve">
          <source>Similar to T_PTR except that the pointer is stored in a scalar and the reference to that scalar is returned to the caller. This can be used to hide the actual pointer value from the programmer since it is usually not required directly from within perl.</source>
          <target state="translated">Similar a T_PTR excepto que el puntero se almacena en un escalar y la referencia a ese escalar se devuelve al llamador.Esto puede ser usado para ocultar el valor actual del puntero al programador ya que normalmente no se requiere directamente desde dentro de perl.</target>
        </trans-unit>
        <trans-unit id="4ed1b14b67aa9193491a3dd6d65f8409d185456b" translate="yes" xml:space="preserve">
          <source>Similar to T_PTROBJ in that the pointer is blessed into a scalar object. The difference is that when the object is passed back into XS it must be of the correct type (inheritance is not supported) while T_PTROBJ supports inheritance.</source>
          <target state="translated">Similar a T_PTROBJ en que el puntero es bendecido en un objeto escalar.La diferencia es que cuando el objeto es pasado de nuevo a XS debe ser del tipo correcto (no se soporta la herencia)mientras que T_PTROBJ soporta la herencia.</target>
        </trans-unit>
        <trans-unit id="98345bece5539f546d5a8e96d6aece125a75354c" translate="yes" xml:space="preserve">
          <source>Similar to T_PTRREF except that the reference is blessed into a class. This allows the pointer to be used as an object. Most commonly used to deal with C structs. The typemap checks that the perl object passed into the XS routine is of the correct class (or part of a subclass).</source>
          <target state="translated">Similar a T_PTRREF excepto que la referencia es bendecida en una clase.Esto permite que el puntero sea usado como un objeto.Se usa más comúnmente para tratar con estructuras C.El mapa de tipos comprueba que el objeto perl pasado a la rutina XS es de la clase correcta (o parte de una subclase).</target>
        </trans-unit>
        <trans-unit id="a0e3f786e5320b6b926d5843480fabad22b49df4" translate="yes" xml:space="preserve">
          <source>Similar to T_PTRREF, except the pointer stored in the referenced scalar is dereferenced and copied to the output variable. This means that T_REFREF is to T_PTRREF as T_OPAQUE is to T_OPAQUEPTR. All clear?</source>
          <target state="translated">Similar a T_PTRREF,excepto que el puntero almacenado en el escalar referenciado es des-referenciado y copiado a la variable de salida.Esto significa que T_REFREF es a T_PTRREF como T_OPAQUE es a T_OPAQUEPTR.¿Todo claro?</target>
        </trans-unit>
        <trans-unit id="316a66a038c9003e3588353dd7b06b4570041574" translate="yes" xml:space="preserve">
          <source>Similar to key/value hash slices (and also introduced in Perl 5.20), the % array slice syntax returns a list of index/value pairs:</source>
          <target state="translated">De manera similar a los trozos de hachís de clave/valor (y también introducidos en Perl 5.20),la sintaxis de los trozos de matriz % devuelve una lista de pares índice/valor:</target>
        </trans-unit>
        <trans-unit id="fcdb3335ff45dd421a45fea8e6567734b9ec0cac" translate="yes" xml:space="preserve">
          <source>Similar to mkstemp(), except that an extra argument can be supplied with a suffix to be appended to the template.</source>
          <target state="translated">Similar a mkstemp(),excepto que se puede suministrar un argumento extra con un sufijo para ser añadido a la plantilla.</target>
        </trans-unit>
        <trans-unit id="4cf9bfb3c81fe1275534c974c84d67c5db310bda" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">Similar a la palabra clave &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; de perl , pero interpreta la lista dada como una lista de pares de tama&amp;ntilde;o uniforme. Invoca el &lt;code&gt;BLOCK&lt;/code&gt; varias veces, en contexto escalar, con &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; configurados en pares sucesivos de valores de &lt;code&gt;@kvlist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20605e6412e378f2426dfa2ecf790a73c30912ee" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in list context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">Similar a la palabra clave &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; de perl , pero interpreta la lista dada como una lista de pares de tama&amp;ntilde;o uniforme. Invoca el &lt;code&gt;BLOCK&lt;/code&gt; varias veces, en el contexto de la lista, con &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; configurados en pares sucesivos de valores de &lt;code&gt;@kvlist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8dc38a4899c208d20a94f1397e679f06553d540" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;grep&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6971d89c696879a9eeb673adbf4f23a22af252ce" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;map&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in list context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e0979e74abc467bf78f9a39fbc983727e9baaf" translate="yes" xml:space="preserve">
          <source>Similar to strings, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt; acts like apostrophes on a regexp; all other &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; delimiters act like quotes. If the regexp evaluates to the empty string, the regexp in the</source>
          <target state="translated">Similar a las cadenas, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt; act&amp;uacute;a como ap&amp;oacute;strofos en una expresi&amp;oacute;n regular; todos los dem&amp;aacute;s delimitadores &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; act&amp;uacute;an como comillas. Si la expresi&amp;oacute;n regular se eval&amp;uacute;a como una cadena vac&amp;iacute;a, la expresi&amp;oacute;n regular en el</target>
        </trans-unit>
        <trans-unit id="19b88f89de77da98af72b4163220db2f0a7c8ecd" translate="yes" xml:space="preserve">
          <source>Similar to strings, &lt;code&gt;m''&lt;/code&gt; acts like apostrophes on a regexp; all other &lt;code&gt;'m'&lt;/code&gt; delimiters act like quotes. If the regexp evaluates to the empty string, the regexp in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82cc003c44f0253412b5190a2e4c975c854a684" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#first&quot;&gt;&quot;first&quot;&lt;/a&gt; function, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ef33d2521670adf2f6b3cf61cae1999ab3778c" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#first&quot;&gt;first&lt;/a&gt; function, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">Similar a la &lt;a href=&quot;#first&quot;&gt;primera&lt;/a&gt; funci&amp;oacute;n, pero interpreta la lista dada como una lista de pares de tama&amp;ntilde;o uniforme. Se invoca los &lt;code&gt;BLOCK&lt;/code&gt; m&amp;uacute;ltiples veces, en contexto escalar, con &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; conjunto a pares sucesivos de los valores de la &lt;code&gt;@kvlist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f852487d7b194c670f738b8370d3735ea507b49e" translate="yes" xml:space="preserve">
          <source>Similar to the above, a sigil, followed by bareword text in braces, where the first character is a caret. The next character is any one of the characters &lt;code&gt;[][A-Z^_?\]&lt;/code&gt;, followed by ASCII word characters. An example is &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0747626402d2dd7f7c45b97cc24e9304db46b6d7" translate="yes" xml:space="preserve">
          <source>Similar to the above, a sigil, followed by bareword text in brackets, where the first character is either a caret followed by an uppercase letter, like &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; or a non-&lt;code&gt;NUL&lt;/code&gt; , non-space literal control like &lt;code&gt;${\7LOBAL_PHASE}&lt;/code&gt; . Like the above, when not under &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; , the characters in &lt;code&gt;[0x80-0xFF]&lt;/code&gt; are considered controls, but as of v5.22, the use of any that are non-graphical are deprecated, and as of v5.20 the use of any ASCII-range literal control is deprecated. Support for these will be removed in a future version of perl.</source>
          <target state="translated">Similar a lo anterior, un sigilo, seguido de un texto sin palabras entre par&amp;eacute;ntesis, donde el primer car&amp;aacute;cter es un signo de intercalaci&amp;oacute;n seguido de una letra may&amp;uacute;scula, como &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; o un control literal sin espacio ni &lt;code&gt;NUL&lt;/code&gt; como &lt;code&gt;${\7LOBAL_PHASE}&lt;/code&gt; . Al igual que lo anterior, cuando no est&amp;aacute; en &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; , los caracteres en &lt;code&gt;[0x80-0xFF]&lt;/code&gt; se consideran controles, pero a partir de la v5.22, el uso de cualquiera que no sea gr&amp;aacute;fico est&amp;aacute; obsoleto, y a partir de la v5.20 el el uso de cualquier control literal de rango ASCII est&amp;aacute; en desuso. La compatibilidad con estos se eliminar&amp;aacute; en una versi&amp;oacute;n futura de perl.</target>
        </trans-unit>
        <trans-unit id="668df669d9efbd5ecee333d1f8978a303dbbc797" translate="yes" xml:space="preserve">
          <source>Similar to try, except that it does not catch exceptions. The idea here is to protect $@ and $! from changes. $@ and $! will be restored to whatever they were before the run so long as it is successful. If the run fails $! will still be restored, but $@ will contain the exception being thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21000b274c1010d95d46737a373e917805b17d88" translate="yes" xml:space="preserve">
          <source>Similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2112c220c2b71523b70f673d7ec4dcde3c15e0" translate="yes" xml:space="preserve">
          <source>Similarly &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'Debug'&lt;/code&gt; produces debugging output, the difference being that it allows the fine tuning of what debugging output will be emitted. Options are divided into three groups, those related to compilation, those related to execution and those related to special purposes. The options are as follows:</source>
          <target state="translated">De manera similar, el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'Debug'&lt;/code&gt; produce una salida de depuraci&amp;oacute;n, con la diferencia de que permite el ajuste fino de la salida de depuraci&amp;oacute;n que se emitir&amp;aacute;. Las opciones se dividen en tres grupos, las relacionadas con la compilaci&amp;oacute;n, las relacionadas con la ejecuci&amp;oacute;n y las relacionadas con fines especiales. Las opciones son las siguientes:</target>
        </trans-unit>
        <trans-unit id="c569ec67d5806423bac1b597854e2fd9a9cd8f16" translate="yes" xml:space="preserve">
          <source>Similarly &lt;code&gt;use re 'Debug'&lt;/code&gt; produces debugging output, the difference being that it allows the fine tuning of what debugging output will be emitted. Options are divided into three groups, those related to compilation, those related to execution and those related to special purposes. The options are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d106c3869ea4929caecddf63406cc3cb977903" translate="yes" xml:space="preserve">
          <source>Similarly all warnings are disabled in a block by either of these:</source>
          <target state="translated">Del mismo modo,todas las advertencias se desactivan en un bloque por cualquiera de estos:</target>
        </trans-unit>
        <trans-unit id="55dea1c41dc940323d881fe12ebce9ec69c591cf" translate="yes" xml:space="preserve">
          <source>Similarly if you opened that handle &lt;code&gt;FH&lt;/code&gt; with regular &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, you may use:</source>
          <target state="translated">De manera similar, si abri&amp;oacute; ese identificador &lt;code&gt;FH&lt;/code&gt; con &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; regular o &lt;code&gt;&lt;a href=&quot;../functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , puede usar:</target>
        </trans-unit>
        <trans-unit id="64831f5e93834f6bf428903e01c563e7e7bece53" translate="yes" xml:space="preserve">
          <source>Similarly if you opened that handle &lt;code&gt;FH&lt;/code&gt; with regular &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;sysopen&lt;/code&gt;, you may use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53be67a31768325e220272f535bb98f85e3fcddf" translate="yes" xml:space="preserve">
          <source>Similarly one could take the output of the third numbers column from recipe 2 to obtain a &lt;code&gt;$cp_1047&lt;/code&gt; table. The fourth numbers column of the output from recipe 2 could provide a &lt;code&gt;$cp_posix_bc&lt;/code&gt; table suitable for transcoding as well.</source>
          <target state="translated">De manera similar, se podr&amp;iacute;a tomar la salida de la tercera columna de n&amp;uacute;meros de la receta 2 para obtener una tabla &lt;code&gt;$cp_1047&lt;/code&gt; . La cuarta columna de n&amp;uacute;meros de la salida de la receta 2 podr&amp;iacute;a proporcionar una tabla &lt;code&gt;$cp_posix_bc&lt;/code&gt; adecuada para la transcodificaci&amp;oacute;n tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="d0f4815a422eaba46c3d84f219793b24d2375a6b" translate="yes" xml:space="preserve">
          <source>Similarly the NULL needs to be taken into account when you are considering the length of existing keys/values.</source>
          <target state="translated">Del mismo modo,el NULL debe tenerse en cuenta cuando se considera la longitud de las claves/valores existentes.</target>
        </trans-unit>
        <trans-unit id="15d5ffcdd52f893f6f74efb6a4803895765d4c4b" translate="yes" xml:space="preserve">
          <source>Similarly the name &quot;WinWin32s&quot; should have been &quot;Win32s&quot; but has been kept as-is for backwards compatibility reasons too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b052290a572fb153a5a7598b50b12efdb7ef549e" translate="yes" xml:space="preserve">
          <source>Similarly unclear is what should be generated when the &lt;code&gt;\N{...}&lt;/code&gt; is used as one of the end points of the range, such as in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04230c63a76d30ed5b83266e25e001a24b4eb855" translate="yes" xml:space="preserve">
          <source>Similarly with the one-shot interface, if the input is a buffer larger than 4 Gig, a zip64 complaint zip file will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4baed99da5d9cf308161bde5e8cc00af2ab9d79" translate="yes" xml:space="preserve">
          <source>Similarly you can build in parallel with GNU make, type &quot;gmake -j2&quot; to build with two parallel jobs, or higher for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4fb6a726563143c1c04086d201d673d7729dd3" translate="yes" xml:space="preserve">
          <source>Similarly,</source>
          <target state="translated">Similarly,</target>
        </trans-unit>
        <trans-unit id="90864fd67d3db4c105028d84006c631220f52597" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;$href-&amp;gt;{'red'}&lt;/code&gt; is part of the hash referred to by the scalar variable &lt;code&gt;$href&lt;/code&gt; , perhaps even one with no name. &lt;code&gt;$href{'red'}&lt;/code&gt; is part of the deceptively named &lt;code&gt;%href&lt;/code&gt; hash. It's easy to forget to leave out the &lt;code&gt;-&amp;gt;&lt;/code&gt; , and if you do, you'll get bizarre results when your program gets array and hash elements out of totally unexpected hashes and arrays that weren't the ones you wanted to use.</source>
          <target state="translated">De manera similar, &lt;code&gt;$href-&amp;gt;{'red'}&lt;/code&gt; es parte del hash al que se refiere la variable escalar &lt;code&gt;$href&lt;/code&gt; , quiz&amp;aacute;s incluso una sin nombre. &lt;code&gt;$href{'red'}&lt;/code&gt; es parte del hash &lt;code&gt;%href&lt;/code&gt; nombre enga&amp;ntilde;oso . Es f&amp;aacute;cil olvidarse de omitir el &lt;code&gt;-&amp;gt;&lt;/code&gt; , y si lo hace, obtendr&amp;aacute; resultados extra&amp;ntilde;os cuando su programa obtenga elementos de matriz y hash de hashes y matrices totalmente inesperados que no eran los que quer&amp;iacute;a usar.</target>
        </trans-unit>
        <trans-unit id="b70d4728a23b61603feac7dca92ea80423288fd3" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;$href-&amp;gt;{'red'}&lt;/code&gt; is part of the hash referred to by the scalar variable &lt;code&gt;$href&lt;/code&gt;, perhaps even one with no name. &lt;code&gt;$href{'red'}&lt;/code&gt; is part of the deceptively named &lt;code&gt;%href&lt;/code&gt; hash. It's easy to forget to leave out the &lt;code&gt;-&amp;gt;&lt;/code&gt;, and if you do, you'll get bizarre results when your program gets array and hash elements out of totally unexpected hashes and arrays that weren't the ones you wanted to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9f2629494d34ddc3413b1763638df2e3855408" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;-&amp;gt;autodefer(1)&lt;/code&gt; re-enables autodeferment, and &lt;code&gt;-&amp;gt;autodefer()&lt;/code&gt; recovers the current value of the autodefer setting.</source>
          <target state="translated">De manera similar, &lt;code&gt;-&amp;gt;autodefer(1)&lt;/code&gt; vuelve a habilitar el autodeferment, y &lt;code&gt;-&amp;gt;autodefer()&lt;/code&gt; recupera el valor actual de la configuraci&amp;oacute;n de autodefer.</target>
        </trans-unit>
        <trans-unit id="ed0a74921b522c90d239c941839d98f9f544df9e" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;.=&lt;/code&gt; and &lt;code&gt;x=&lt;/code&gt; operators lose their mathemagical properties if the string conversion substitution is applied.</source>
          <target state="translated">De manera similar, los operadores &lt;code&gt;.=&lt;/code&gt; Y &lt;code&gt;x=&lt;/code&gt; pierden sus propiedades matem&amp;aacute;ticas si se aplica la sustituci&amp;oacute;n de conversi&amp;oacute;n de cadenas.</target>
        </trans-unit>
        <trans-unit id="98381cd292cecc23499c5a97dc7663476a411916" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; magic can be used much like tie() to call a C function any time a scalar's value is used or changed. The &lt;code&gt;MAGIC&lt;/code&gt; 's &lt;code&gt;mg_ptr&lt;/code&gt; field points to a &lt;code&gt;ufuncs&lt;/code&gt; structure:</source>
          <target state="translated">De manera similar, &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; magic se puede usar de manera muy similar a tie () para llamar a una funci&amp;oacute;n C cada vez que se usa o cambia el valor de un escalar. El &lt;code&gt;MAGIC&lt;/code&gt; 's &lt;code&gt;mg_ptr&lt;/code&gt; campo apunta a un &lt;code&gt;ufuncs&lt;/code&gt; estructura:</target>
        </trans-unit>
        <trans-unit id="dd56bf6157ee2e5e27ea1785ce7250db948cb17e" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; magic can be used much like tie() to call a C function any time a scalar's value is used or changed. The &lt;code&gt;MAGIC&lt;/code&gt;'s &lt;code&gt;mg_ptr&lt;/code&gt; field points to a &lt;code&gt;ufuncs&lt;/code&gt; structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084028b0095b78ad708b249b88f8a8326808bba4" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;\x&lt;i&gt;nn&lt;/i&gt;&lt;/code&gt;, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1434bb43847966624ccbd7c82a8d888d8931593" translate="yes" xml:space="preserve">
          <source>Similarly, Perl's built-in &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; function treats a reference to a blessed object specially. If you call &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref($thing)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;$thing&lt;/code&gt; holds a reference to an object, it will return the name of the class that the object has been blessed into.</source>
          <target state="translated">Del mismo modo, Perl incorporado &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; trata de funci&amp;oacute;n una referencia a un objeto bendito especialmente. Si llama a &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref($thing)&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;$thing&lt;/code&gt; tiene una referencia a un objeto, devolver&amp;aacute; el nombre de la clase en la que el objeto ha sido bendecido.</target>
        </trans-unit>
        <trans-unit id="3c79bdba87881c1ec05393b4d27a2c965c79a1a5" translate="yes" xml:space="preserve">
          <source>Similarly, Perl's built-in &lt;code&gt;ref&lt;/code&gt; function treats a reference to a blessed object specially. If you call &lt;code&gt;ref($thing)&lt;/code&gt; and &lt;code&gt;$thing&lt;/code&gt; holds a reference to an object, it will return the name of the class that the object has been blessed into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed57441510534192d07967fc62d33e33379b4e80" translate="yes" xml:space="preserve">
          <source>Similarly, a list assignment in list context produces the list of lvalues assigned to, and a list assignment in scalar context returns the number of elements produced by the expression on the right hand side of the assignment.</source>
          <target state="translated">De manera análoga,una asignación de lista en contexto de lista produce la lista de valores asignados,y una asignación de lista en contexto escalar devuelve el número de elementos producidos por la expresión en el lado derecho de la asignación.</target>
        </trans-unit>
        <trans-unit id="105351b9ff1ce0c3b0da126c3158372b6f241c09" translate="yes" xml:space="preserve">
          <source>Similarly, a value assigned to &lt;code&gt;$)&lt;/code&gt; must also be a space-separated list of numbers. The first number sets the effective gid, and the rest (if any) are passed to &lt;code&gt;setgroups()&lt;/code&gt; . To get the effect of an empty list for &lt;code&gt;setgroups()&lt;/code&gt; , just repeat the new effective gid; that is, to force an effective gid of 5 and an effectively empty &lt;code&gt;setgroups()&lt;/code&gt; list, say &lt;code&gt; $) = &quot;5 5&quot; &lt;/code&gt; .</source>
          <target state="translated">De manera similar, un valor asignado a &lt;code&gt;$)&lt;/code&gt; tambi&amp;eacute;n debe ser una lista de n&amp;uacute;meros separados por espacios. El primer n&amp;uacute;mero establece el gid efectivo y el resto (si corresponde) se pasa a &lt;code&gt;setgroups()&lt;/code&gt; . Para obtener el efecto de una lista vac&amp;iacute;a para &lt;code&gt;setgroups()&lt;/code&gt; , simplemente repita el nuevo gid efectivo; es decir, para forzar un gid efectivo de 5 y una lista &lt;code&gt;setgroups()&lt;/code&gt; efectivamente vac&amp;iacute;a , digamos &lt;code&gt; $) = &quot;5 5&quot; &lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9bfb808fae3d4ef85e01abecf018c96a424092b" translate="yes" xml:space="preserve">
          <source>Similarly, a value assigned to &lt;code&gt;$)&lt;/code&gt; must also be a space-separated list of numbers. The first number sets the effective gid, and the rest (if any) are passed to &lt;code&gt;setgroups()&lt;/code&gt;. To get the effect of an empty list for &lt;code&gt;setgroups()&lt;/code&gt;, just repeat the new effective gid; that is, to force an effective gid of 5 and an effectively empty &lt;code&gt;setgroups()&lt;/code&gt; list, say &lt;code&gt; $) = &quot;5 5&quot; &lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f830d9f2bf12f89de4edd3497ea1af8e153890fe" translate="yes" xml:space="preserve">
          <source>Similarly, an expression that returns a reference to a scalar can be dereferenced via &lt;code&gt;${...}&lt;/code&gt; . Thus, the above expression may be written as:</source>
          <target state="translated">De manera similar, una expresi&amp;oacute;n que devuelve una referencia a un escalar se puede desreferenciar mediante &lt;code&gt;${...}&lt;/code&gt; . Por lo tanto, la expresi&amp;oacute;n anterior se puede escribir como:</target>
        </trans-unit>
        <trans-unit id="6c0225a1fecb24141de2c67cfa637dd7b4544c6f" translate="yes" xml:space="preserve">
          <source>Similarly, an expression that returns a reference to a scalar can be dereferenced via &lt;code&gt;${...}&lt;/code&gt;. Thus, the above expression may be written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1370fc5b87a4deef9433fab962c63dda2bb0891" translate="yes" xml:space="preserve">
          <source>Similarly, autogeneration for keys &lt;code&gt;'+='&lt;/code&gt; and &lt;code&gt;'++'&lt;/code&gt; is analogous to &lt;code&gt;'-='&lt;/code&gt; and &lt;code&gt;'--'&lt;/code&gt; above:</source>
          <target state="translated">De manera similar, la generaci&amp;oacute;n autom&amp;aacute;tica para las claves &lt;code&gt;'+='&lt;/code&gt; y &lt;code&gt;'++'&lt;/code&gt; es an&amp;aacute;loga a &lt;code&gt;'-='&lt;/code&gt; y &lt;code&gt;'--'&lt;/code&gt; arriba:</target>
        </trans-unit>
        <trans-unit id="22f4fe3ff0b7318ce2f9a1f22a4a30c916f48517" translate="yes" xml:space="preserve">
          <source>Similarly, because of all the subscripting that is done using single words, the same rule applies to any bareword that is used for subscripting a hash. So now, instead of writing</source>
          <target state="translated">Del mismo modo,debido a toda la subscripción que se hace con palabras individuales,la misma regla se aplica a cualquier palabra de barra que se utilice para la subscripción de un hash.Así que ahora,en lugar de escribir</target>
        </trans-unit>
        <trans-unit id="1ef17c2e729b74afc14b925795781df60a813811" translate="yes" xml:space="preserve">
          <source>Similarly, decimal strings can represent only those numbers which have a finite decimal expansion. Being strings, and thus of arbitrary length, there is no practical limit for the exponent or number of decimal digits for these numbers. (But realize that what we are discussing the rules for just the</source>
          <target state="translated">De manera similar,las cadenas decimales pueden representar sólo aquellos números que tienen una expansión decimal finita.Al ser cadenas,y por lo tanto de longitud arbitraria,no existe un límite práctico para el exponente o número de dígitos decimales de estos números.(Pero date cuenta de que lo que estamos discutiendo son las reglas para sólo el</target>
        </trans-unit>
        <trans-unit id="d345f5b26d91c2f90c4bf682659d17c36e269cb0" translate="yes" xml:space="preserve">
          <source>Similarly, for repeated &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/()/g&lt;/a&gt;&lt;/code&gt; the second-best match is the match at the position one notch further in the string.</source>
          <target state="translated">De manera similar, para &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/()/g&lt;/a&gt;&lt;/code&gt; repetido, la segunda mejor coincidencia es la coincidencia en la posici&amp;oacute;n un nivel m&amp;aacute;s adelante en la cadena.</target>
        </trans-unit>
        <trans-unit id="120bba2aa7dfcc858de2e7ae463e7151de6901e1" translate="yes" xml:space="preserve">
          <source>Similarly, for repeated &lt;code&gt;m/()/g&lt;/code&gt; the second-best match is the match at the position one notch further in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee2c36ef0fdac4abda9dcad28ab4aed983df538" translate="yes" xml:space="preserve">
          <source>Similarly, functions that return text data--such as a function that fetches a web page--should sometimes translate newlines before returning the data, if they've not yet been translated to the local newline representation. A single line of code will often suffice:</source>
          <target state="translated">Del mismo modo,las funciones que devuelven datos de texto -como una función que busca una página web-a veces deberían traducir las nuevas líneas antes de devolver los datos,si aún no se han traducido a la representación local de la nueva línea.A menudo bastará con una sola línea de código:</target>
        </trans-unit>
        <trans-unit id="6397152c0c35f4b75972d06222dcea4b97f1756f" translate="yes" xml:space="preserve">
          <source>Similarly, if the &lt;code&gt;compress&lt;/code&gt; program is available, you can use this to write a &lt;code&gt;.tar.Z&lt;/code&gt; file</source>
          <target state="translated">De manera similar, si el programa de &lt;code&gt;compress&lt;/code&gt; est&amp;aacute; disponible, puede usarlo para escribir un archivo &lt;code&gt;.tar.Z&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e75a2bb501471358d82a9998e95b65710f45b03" translate="yes" xml:space="preserve">
          <source>Similarly, if you need the threads object, but your thread will not be returning a value (i.e.,</source>
          <target state="translated">Del mismo modo,si necesita el objeto de los hilos,pero su hilo no va a devolver un valor (es decir,</target>
        </trans-unit>
        <trans-unit id="5871ebe0fa13ed14449c1f6ca87d126616162345" translate="yes" xml:space="preserve">
          <source>Similarly, in the failure branch we could use &lt;code&gt;PUSHs&lt;/code&gt;</source>
          <target state="translated">De manera similar, en la rama de falla podr&amp;iacute;amos usar &lt;code&gt;PUSHs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9077bdc5741605a4137fa6215e60fd225b8f3e44" translate="yes" xml:space="preserve">
          <source>Similarly, it would be better to use &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; instead of,</source>
          <target state="translated">Del mismo modo, ser&amp;iacute;a mejor &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; lugar de,</target>
        </trans-unit>
        <trans-unit id="14a6593d35c0dd5a226aba97a86d554f0e84ed18" translate="yes" xml:space="preserve">
          <source>Similarly, it would be better to use &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt; instead of,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46d4cfe15f7f292996d268d497a4ca8dd6bd83c" translate="yes" xml:space="preserve">
          <source>Similarly, just because an operator lets you assume default arguments doesn't mean that you have to make use of the defaults. The defaults are there for lazy systems programmers writing one-shot programs. If you want your program to be readable, consider supplying the argument.</source>
          <target state="translated">Del mismo modo,el hecho de que un operador le permita asumir argumentos por defecto no significa que tenga que hacer uso de los valores por defecto.Los valores por defecto están ahí para los programadores de sistemas perezosos que escriben programas de una sola vez.Si quieres que tu programa sea legible,considera suministrar el argumento.</target>
        </trans-unit>
        <trans-unit id="65a3c4117ed70cbe8d3af699e5cf5e22b4df58b4" translate="yes" xml:space="preserve">
          <source>Similarly, mixing signals and threads may be problematic. Implementations are platform-dependent, and even the POSIX semantics may not be what you expect (and Perl doesn't even give you the full POSIX API). For example, there is no way to guarantee that a signal sent to a multi-threaded Perl application will get intercepted by any particular thread. (However, a recently added feature does provide the capability to send signals between threads. See &lt;a href=&quot;threads#THREAD-SIGNALLING&quot;&gt;&quot;THREAD SIGNALLING&quot; in threads&lt;/a&gt; for more details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab81862aa9c1688c2206840c0db77adfc7697fb" translate="yes" xml:space="preserve">
          <source>Similarly, mixing signals and threads may be problematic. Implementations are platform-dependent, and even the POSIX semantics may not be what you expect (and Perl doesn't even give you the full POSIX API). For example, there is no way to guarantee that a signal sent to a multi-threaded Perl application will get intercepted by any particular thread. (However, a recently added feature does provide the capability to send signals between threads. See &lt;a href=&quot;threads#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING in threads&lt;/a&gt; for more details.)</source>
          <target state="translated">De manera similar, mezclar se&amp;ntilde;ales e hilos puede resultar problem&amp;aacute;tico. Las implementaciones dependen de la plataforma, e incluso la sem&amp;aacute;ntica POSIX puede no ser la esperada (y Perl ni siquiera le brinda la API POSIX completa). Por ejemplo, no hay forma de garantizar que una se&amp;ntilde;al enviada a una aplicaci&amp;oacute;n Perl de subprocesos m&amp;uacute;ltiples sea interceptada por un subproceso en particular. (Sin embargo, una caracter&amp;iacute;stica a&amp;ntilde;adida recientemente proporciona la capacidad de enviar se&amp;ntilde;ales entre subprocesos. Consulte &lt;a href=&quot;threads#THREAD-SIGNALLING&quot;&gt;SE&amp;Ntilde;ALIZACI&amp;Oacute;N DE HILOS en subprocesos&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="cd7a72bba4a729c17beea354c31212e7918a1056" translate="yes" xml:space="preserve">
          <source>Similarly, syswrite() and send() use only the &lt;code&gt;:utf8&lt;/code&gt; flag, otherwise ignoring any layers. If the flag is set, both write the value UTF-8 encoded, even if the layer is some different encoding, such as the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b7335ed3c7d05707d8547cd24aeb6b264218d7" translate="yes" xml:space="preserve">
          <source>Similarly, syswrite() and send() used only the &lt;code&gt;:utf8&lt;/code&gt; flag, otherwise ignoring any layers. If the flag is set, both wrote the value UTF-8 encoded, even if the layer is some different encoding, such as the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9312c4a2cb541668748a3ea749dc0d9f12c2cf9" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;UNICODE_WARN_NONCHAR&lt;/code&gt; and &lt;code&gt;UNICODE_DISALLOW_NONCHAR&lt;/code&gt; flags affect how the function handles a Unicode non-character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa030e076fa248a433f0f83ee4a1aceaeee249f" translate="yes" xml:space="preserve">
          <source>Similarly, the parameter &lt;code&gt;inc_override&lt;/code&gt; may be a reference to an array which is used in place of the default module search paths from &lt;code&gt;@INC&lt;/code&gt; .</source>
          <target state="translated">De manera similar, el par&amp;aacute;metro &lt;code&gt;inc_override&lt;/code&gt; puede ser una referencia a una matriz que se usa en lugar de las rutas de b&amp;uacute;squeda de m&amp;oacute;dulos predeterminadas de &lt;code&gt;@INC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c747d6cbaa1a9a827f93122d97bf098849b7485" translate="yes" xml:space="preserve">
          <source>Similarly, the parameter &lt;code&gt;inc_override&lt;/code&gt; may be a reference to an array which is used in place of the default module search paths from &lt;code&gt;@INC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1497da8abe3ed6eca13bd6302e3d281ea65007d7" translate="yes" xml:space="preserve">
          <source>Similarly, the resultant filespec will contain the file version only if one was present in the input filespec.</source>
          <target state="translated">Del mismo modo,la especificación de archivos resultante contendrá la versión del archivo sólo si había una presente en la especificación de archivos de entrada.</target>
        </trans-unit>
        <trans-unit id="0dacead88183b1e9c6304a4ceec665b6c24796d7" translate="yes" xml:space="preserve">
          <source>Similarly, they can be used in regular expression literals</source>
          <target state="translated">Del mismo modo,pueden utilizarse en los literales de expresión regular</target>
        </trans-unit>
        <trans-unit id="395326d4967b38aae5eb742109108213c899c254" translate="yes" xml:space="preserve">
          <source>Similarly, this is invalid:</source>
          <target state="translated">Del mismo modo,esto es inválido:</target>
        </trans-unit>
        <trans-unit id="6c8f54b856913d21b69f361a1a90203715ac01de" translate="yes" xml:space="preserve">
          <source>Similarly, this recipe can be used for properties that do require adjustments:</source>
          <target state="translated">Del mismo modo,esta receta puede ser utilizada para las propiedades que requieren ajustes:</target>
        </trans-unit>
        <trans-unit id="838e649b773f393ab1e3e6ec2fd3f5756cf00ea3" translate="yes" xml:space="preserve">
          <source>Similarly, this will silence warnings from this module, and preserve the default behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b2e4fdd23d41dfea9d8225a12a424a715230bb" translate="yes" xml:space="preserve">
          <source>Similarly, this:</source>
          <target state="translated">Del mismo modo,esto:</target>
        </trans-unit>
        <trans-unit id="d1bdda2be136926ef9a893301ff91d18747c507f" translate="yes" xml:space="preserve">
          <source>Similarly, to copy an anonymous hash, you can use</source>
          <target state="translated">Del mismo modo,para copiar un hash anónimo,puedes usar</target>
        </trans-unit>
        <trans-unit id="7850beac28db723d025cfad11fb93ce97e2ced9b" translate="yes" xml:space="preserve">
          <source>Similarly, using &lt;code&gt;$^W&lt;/code&gt; to either disable or enable blocks of code is fundamentally flawed. For a start, say you want to disable warnings in a block of code. You might expect this to be enough to do the trick:</source>
          <target state="translated">De manera similar, usar &lt;code&gt;$^W&lt;/code&gt; para deshabilitar o habilitar bloques de c&amp;oacute;digo es fundamentalmente defectuoso. Para empezar, digamos que desea desactivar las advertencias en un bloque de c&amp;oacute;digo. Podr&amp;iacute;a esperar que esto sea suficiente para hacer el truco:</target>
        </trans-unit>
        <trans-unit id="2664530a7df4eabf1ac2e9d54c9f06c6deee6b41" translate="yes" xml:space="preserve">
          <source>Similarly, with this code</source>
          <target state="translated">De manera similar,con este código</target>
        </trans-unit>
        <trans-unit id="b0293d771b0de8656e1c85bf1faad486bf545599" translate="yes" xml:space="preserve">
          <source>Similarly, you may use these I/O layers on output streams to automatically convert Unicode to the specified encoding when it is written to the stream. For example, the following snippet copies the contents of the file &quot;text.jis&quot; (encoded as ISO-2022-JP, aka JIS) to the file &quot;text.utf8&quot;, encoded as UTF-8:</source>
          <target state="translated">Del mismo modo,puede utilizar estas capas de E/S en los flujos de salida para convertir automáticamente Unicode en la codificación especificada cuando se escribe en el flujo.Por ejemplo,el siguiente fragmento copia el contenido del archivo &quot;text.jis&quot; (codificado como ISO-2022-JP,alias JIS)al archivo &quot;text.utf8&quot;,codificado como UTF-8:</target>
        </trans-unit>
        <trans-unit id="a9548affa7e4acbe2593b885978a8755658bc00f" translate="yes" xml:space="preserve">
          <source>Similary to</source>
          <target state="translated">Similares a</target>
        </trans-unit>
        <trans-unit id="d038c3b0b4f25db2b86d3e73c906bad029553a54" translate="yes" xml:space="preserve">
          <source>Simon Cozens &amp;lt;simon AT brecon DOT co DOT uk&amp;gt; - Being there to answer zillions of annoying questions</source>
          <target state="translated">Simon Cozens &amp;lt;simon en brecon DOT co DOT uk&amp;gt; - Estar all&amp;iacute; para responder a millones de preguntas molestas</target>
        </trans-unit>
        <trans-unit id="db6a8ce8a7b56a60b15a1e81509c2149cf995dfb" translate="yes" xml:space="preserve">
          <source>Simon Cozens and Wolfgang Laun.</source>
          <target state="translated">Simon Cozens y Wolfgang Laun.</target>
        </trans-unit>
        <trans-unit id="911ebed02457e684e0b32e14a35ae78fa21f67e0" translate="yes" xml:space="preserve">
          <source>Simon Cozens, &lt;code&gt;simon@cpan.org&lt;/code&gt;</source>
          <target state="translated">Simon Cozens, &lt;code&gt;simon@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c339f709f7b43634c7fbcb9cbd9eccd0f9cc3ac2" translate="yes" xml:space="preserve">
          <source>Simple Mail Transfer Protocol Client</source>
          <target state="translated">Cliente del Protocolo de Transferencia de Correo Simple</target>
        </trans-unit>
        <trans-unit id="0b80f19dce22ed4ff1ea0703ed5ec7dc2f2434d5" translate="yes" xml:space="preserve">
          <source>Simple Perl scalars (any scalar that is not a reference) are the most difficult objects to encode: JSON::PP will encode undefined scalars as JSON &lt;code&gt;null&lt;/code&gt; values, scalars that have last been used in a string context before encoding as JSON strings, and anything else as number value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee009eadcb45691f1eecbe3d87057665862d1bd" translate="yes" xml:space="preserve">
          <source>Simple Scalar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f59937d173df040577971290f0e1cacd671a9c" translate="yes" xml:space="preserve">
          <source>Simple Statements</source>
          <target state="translated">Declaraciones simples</target>
        </trans-unit>
        <trans-unit id="84ffc80b7ca3fcee70bdb32bddd613a718e0b12c" translate="yes" xml:space="preserve">
          <source>Simple assignment is not overloadable (the &lt;code&gt;'='&lt;/code&gt; key is used for the &lt;a href=&quot;#Copy-Constructor&quot;&gt;&quot;Copy Constructor&quot;&lt;/a&gt;). Perl does have a way to make assignments to an object do whatever you want, but this involves using tie(), not overload - see &lt;a href=&quot;perlfunc#tie&quot;&gt;&quot;tie&quot; in perlfunc&lt;/a&gt; and the &lt;a href=&quot;#COOKBOOK&quot;&gt;&quot;COOKBOOK&quot;&lt;/a&gt; examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd89bedbaeb791041cff4fe148dbfde653b95d00" translate="yes" xml:space="preserve">
          <source>Simple assignment is not overloadable (the &lt;code&gt;'='&lt;/code&gt; key is used for the &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;). Perl does have a way to make assignments to an object do whatever you want, but this involves using tie(), not overload - see &lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt; and the &lt;a href=&quot;#COOKBOOK&quot;&gt;COOKBOOK&lt;/a&gt; examples below.</source>
          <target state="translated">La asignaci&amp;oacute;n simple no se puede sobrecargar (la tecla &lt;code&gt;'='&lt;/code&gt; se usa para el &lt;a href=&quot;#Copy-Constructor&quot;&gt;constructor de copias&lt;/a&gt; ). Perl tiene una forma de hacer que las asignaciones a un objeto hagan lo que quiera, pero esto implica usar tie (), no sobrecargar - vea los ejemplos de &lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt; y el &lt;a href=&quot;#COOKBOOK&quot;&gt;LIBRO DE COCINA a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8605c0b660faa7b5703ee9847774a8d43e86ed05" translate="yes" xml:space="preserve">
          <source>Simple delegatees for misc parameters derived from distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eac8882772ef72bea55863ece1200dedf301b7" translate="yes" xml:space="preserve">
          <source>Simple enough. Now compile and run:</source>
          <target state="translated">Es bastante simple.Ahora compila y corre:</target>
        </trans-unit>
        <trans-unit id="ba971c7177cc7a0849b0167e7f954b49b5a4aaf2" translate="yes" xml:space="preserve">
          <source>Simple examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764eff41a5149cfadde2c6b72cdd2e21368ca43b" translate="yes" xml:space="preserve">
          <source>Simple examples to open a file for reading:</source>
          <target state="translated">Ejemplos simples para abrir un archivo para su lectura:</target>
        </trans-unit>
        <trans-unit id="8bbdbbffdc1d0c057f0470ba8573e7773f1d085a" translate="yes" xml:space="preserve">
          <source>Simple interface to Locale::Maketext::Lexicon</source>
          <target state="translated">Interfaz simple para Locale::Maketext::Léxico</target>
        </trans-unit>
        <trans-unit id="7b8b7240c656011159c28f4357d2c8a844877df6" translate="yes" xml:space="preserve">
          <source>Simple matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a65de4566d838633c7cfe8d2f3954d6165e02e" translate="yes" xml:space="preserve">
          <source>Simple methods for simple tasks</source>
          <target state="translated">Métodos simples para tareas sencillas</target>
        </trans-unit>
        <trans-unit id="107deb5b12e566d319794bc7ce2d8bcc70c508d0" translate="yes" xml:space="preserve">
          <source>Simple options</source>
          <target state="translated">Opciones simples</target>
        </trans-unit>
        <trans-unit id="b3c11d00394d5efd68e3089882ea99ef88db2b49" translate="yes" xml:space="preserve">
          <source>Simple subroutine to insert the macros defined by the macro attribute into the Makefile.</source>
          <target state="translated">Subrutina simple para insertar las macros definidas por el atributo de la macro en el Makefile.</target>
        </trans-unit>
        <trans-unit id="adadcc42c8be98750be33acd4bfac36bd737f651" translate="yes" xml:space="preserve">
          <source>Simple substitution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f78d32b59c097fb10ad26d36f2e74fdbebe4e64" translate="yes" xml:space="preserve">
          <source>Simple word matching</source>
          <target state="translated">Simple coincidencia de palabras</target>
        </trans-unit>
        <trans-unit id="f7b02d0f94f21913ddb8d295324658b8720d69e0" translate="yes" xml:space="preserve">
          <source>Simple, eh?</source>
          <target state="translated">Simple,¿eh?</target>
        </trans-unit>
        <trans-unit id="5ab4a74caba11b1370fe119fe34f9f5db826dbbf" translate="yes" xml:space="preserve">
          <source>Simple, one-off commits pushed to the 'blead' branch should be simple commits that apply cleanly. In other words, you should make sure your work is committed against the current position of blead, so that you can push back to the master repository without merging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee1790ba48c5c5f5aec6b6de12f218c366e78db" translate="yes" xml:space="preserve">
          <source>Simple... Now look:</source>
          <target state="translated">Simple...Ahora mira:</target>
        </trans-unit>
        <trans-unit id="6c9330b7a2ff965f7db6cafb9f575b4d58374515" translate="yes" xml:space="preserve">
          <source>Simpler definition of attribute handlers</source>
          <target state="translated">Definición más sencilla de los manejadores de atributos</target>
        </trans-unit>
        <trans-unit id="50c361747016ee3aff5355a6c96f0c2b139551ef" translate="yes" xml:space="preserve">
          <source>Simplest way to do it automatically is to use your version control system's revision number (you are using version control, right?).</source>
          <target state="translated">La forma más simple de hacerlo automáticamente es usar el número de revisión de tu sistema de control de versiones (estás usando el control de versiones,¿verdad?).</target>
        </trans-unit>
        <trans-unit id="68be18029150583164f9438753e32a72fd3e4c87" translate="yes" xml:space="preserve">
          <source>Simplified source filtering</source>
          <target state="translated">Filtrado simplificado de la fuente</target>
        </trans-unit>
        <trans-unit id="66f7f6fe24549ec54694a312ab799bde4d89b2f3" translate="yes" xml:space="preserve">
          <source>Simply not portable. Get your lvalue to be of the right type, or maybe use temporary variables, or dirty tricks with unions.</source>
          <target state="translated">Simplemente no es portátil.Consigue que tu valor sea del tipo correcto,o quizás usa variables temporales,o trucos sucios con las uniones.</target>
        </trans-unit>
        <trans-unit id="20084b93a5f754ce0ccd01de74eb0172d18babfc" translate="yes" xml:space="preserve">
          <source>Simply put:</source>
          <target state="translated">En pocas palabras:</target>
        </trans-unit>
        <trans-unit id="991f810db6d12637f2fd5bbddcb5e86f7ab43bb2" translate="yes" xml:space="preserve">
          <source>Simply put: for each extension linked with your Perl executable (determined during its initial configuration on your computer or when adding a new extension), a Perl subroutine is created to incorporate the extension's routines. Normally, that subroutine is named</source>
          <target state="translated">En pocas palabras:para cada extensión vinculada con su ejecutable Perl (determinado durante su configuración inicial en su computadora o cuando se agrega una nueva extensión),se crea una subrutina Perl para incorporar las rutinas de la extensión.Normalmente,esa subrutina se denomina</target>
        </trans-unit>
        <trans-unit id="86b802f817d8db47f98e358e0df4e43c122569da" translate="yes" xml:space="preserve">
          <source>Simply run</source>
          <target state="translated">Simplemente corre...</target>
        </trans-unit>
        <trans-unit id="14c3e2e53d9dfb6b8072093e8b927f77f6a76d42" translate="yes" xml:space="preserve">
          <source>Simply says that we're Unix.</source>
          <target state="translated">Simplemente dice que somos Unix.</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="60dbe9f3bc2001b2c722387a7d49aaabb3da33d1" translate="yes" xml:space="preserve">
          <source>Since # can be used for comments, # must be escaped.</source>
          <target state="translated">Ya que#se puede usar para los comentarios,#se debe escapar.</target>
        </trans-unit>
        <trans-unit id="7f16eb993aa5b4126dadedc6b4f7941b4f104c6b" translate="yes" xml:space="preserve">
          <source>Since 3.26, using &lt;code&gt;-F&lt;/code&gt; as the superuser also implies &lt;code&gt;-U&lt;/code&gt; as opening most files and traversing directories requires privileges that are above the nobody/nogroup level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18dd63133c168a4767fcb87b71a43b938682e1a" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; does a &lt;a href=&quot;#fork&quot;&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; it may affect a &lt;code&gt;SIGCHLD&lt;/code&gt; handler. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ded02f76d7e8f2623d74fdc5f26a66cd0a132c8" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;http://man.he.net/man3/flock&quot;&gt;flock(3)&lt;/a&gt; is present in EMX, but is not functional, it is emulated by perl. To disable the emulations, set environment variable &lt;code&gt;USE_PERL_FLOCK=0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af160de91abb536123124eac1ecabfc37de02e74" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; does a &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; it may affect a &lt;code&gt;SIGCHLD&lt;/code&gt; handler. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">Dado que el &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; realiza una &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; , puede afectar a un controlador &lt;code&gt;SIGCHLD&lt;/code&gt; . Consulte &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="aba59b2cf00e40d21bac4c0a192544510ddcbae0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; will also call the &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; method, the actual value for &lt;code&gt;MODULE&lt;/code&gt; must be a bareword. That is, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; cannot load files by name, although &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; can:</source>
          <target state="translated">Dado que el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n llamar&amp;aacute; al m&amp;eacute;todo de &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n , el valor real de &lt;code&gt;MODULE&lt;/code&gt; debe ser una palabra simple. Es decir, el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; no puede cargar archivos por nombre, aunque &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; puede:</target>
        </trans-unit>
        <trans-unit id="73d2921b742823e6f578c98791a72739f4a21337" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; does a &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; it may affect a &lt;code&gt;SIGCHLD&lt;/code&gt; handler. See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">Dado que el &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; realiza una &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; , puede afectar a un controlador &lt;code&gt;SIGCHLD&lt;/code&gt; . Consulte &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="53cc6266d93eb2a78be0857ad5ecd43af7e2b644" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Archive::Tar&lt;/code&gt; doesn't change the current directory internally while it is extracting the items in a tarball, all calls to &lt;code&gt;Cwd::cwd()&lt;/code&gt; can be avoided if we can guarantee that the current directory doesn't get changed externally.</source>
          <target state="translated">Dado que &lt;code&gt;Archive::Tar&lt;/code&gt; no cambia el directorio actual internamente mientras extrae los elementos en un tarball, todas las llamadas a &lt;code&gt;Cwd::cwd()&lt;/code&gt; pueden evitarse si podemos garantizar que el directorio actual no se cambie externamente.</target>
        </trans-unit>
        <trans-unit id="42aa5efcb3e75000fce11592bd84e59ec314928e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; are ignored during the execution of &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;, if you expect your program to terminate on receipt of these signals you will need to arrange to do so yourself based on the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3c7a53144e6a3302e2a2f9e7b6229b194fa174" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; are ignored during the execution of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, if you expect your program to terminate on receipt of these signals you will need to arrange to do so yourself based on the return value.</source>
          <target state="translated">Dado que &lt;code&gt;SIGINT&lt;/code&gt; y &lt;code&gt;SIGQUIT&lt;/code&gt; se ignoran durante la ejecuci&amp;oacute;n del &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , si espera que su programa termine al recibir estas se&amp;ntilde;ales, deber&amp;aacute; hacer arreglos para hacerlo usted mismo en funci&amp;oacute;n del valor de retorno.</target>
        </trans-unit>
        <trans-unit id="e4f45d5c1543b43feed600201b8df9285b671829" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; are ignored during the execution of &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, if you expect your program to terminate on receipt of these signals you will need to arrange to do so yourself based on the return value.</source>
          <target state="translated">Dado que &lt;code&gt;SIGINT&lt;/code&gt; y &lt;code&gt;SIGQUIT&lt;/code&gt; se ignoran durante la ejecuci&amp;oacute;n del &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , si espera que su programa termine al recibir estas se&amp;ntilde;ales, deber&amp;aacute; hacer arreglos para hacerlo usted mismo en funci&amp;oacute;n del valor de retorno.</target>
        </trans-unit>
        <trans-unit id="c78eaa920d9b2c6c4c17bb6231c81108ebdc9ea7" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;XSRETURN_*&lt;/code&gt; macros can be used with CODE blocks as well, one can rewrite this example as:</source>
          <target state="translated">Dado que las macros &lt;code&gt;XSRETURN_*&lt;/code&gt; tambi&amp;eacute;n se pueden usar con bloques CODE, se puede reescribir este ejemplo como:</target>
        </trans-unit>
        <trans-unit id="ddeb2559b4a933dbff6f6bd50711c077c5250a4a" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;use&lt;/code&gt; will also call the &lt;code&gt;import&lt;/code&gt; method, the actual value for &lt;code&gt;MODULE&lt;/code&gt; must be a bareword. That is, &lt;code&gt;use&lt;/code&gt; cannot load files by name, although &lt;code&gt;require&lt;/code&gt; can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae1fb90f2e2a999e504c7cb0f71e0777fa542ca" translate="yes" xml:space="preserve">
          <source>Since CPAN.pm version 1.88_51 modules declared as &lt;code&gt;build_requires&lt;/code&gt; by a distribution are treated differently depending on the config variable &lt;code&gt;build_requires_install_policy&lt;/code&gt; . By setting &lt;code&gt;build_requires_install_policy&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;, such a module is not installed. It is only built and tested, and then kept in the list of tested but uninstalled modules. As such, it is available during the build of the dependent module by integrating the path to the &lt;code&gt;blib/arch&lt;/code&gt; and &lt;code&gt;blib/lib&lt;/code&gt; directories in the environment variable PERL5LIB. If &lt;code&gt;build_requires_install_policy&lt;/code&gt; is set ti &lt;code&gt;yes&lt;/code&gt; , then both modules declared as &lt;code&gt;requires&lt;/code&gt; and those declared as &lt;code&gt;build_requires&lt;/code&gt; are treated alike. By setting to &lt;code&gt;ask/yes&lt;/code&gt; or &lt;code&gt;ask/&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , CPAN.pm asks the user and sets the default accordingly.</source>
          <target state="translated">Dado que CPAN.pm versi&amp;oacute;n 1.88_51, los m&amp;oacute;dulos declarados como &lt;code&gt;build_requires&lt;/code&gt; por una distribuci&amp;oacute;n se tratan de manera diferente seg&amp;uacute;n la variable de configuraci&amp;oacute;n &lt;code&gt;build_requires_install_policy&lt;/code&gt; . Al establecer &lt;code&gt;build_requires_install_policy&lt;/code&gt; en &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , dicho m&amp;oacute;dulo no se instala. Solo se crea y se prueba, y luego se mantiene en la lista de m&amp;oacute;dulos probados pero desinstalados. Como tal, est&amp;aacute; disponible durante la construcci&amp;oacute;n del m&amp;oacute;dulo dependiente integrando la ruta a los &lt;code&gt;blib/arch&lt;/code&gt; y &lt;code&gt;blib/lib&lt;/code&gt; en la variable de entorno PERL5LIB. Si &lt;code&gt;build_requires_install_policy&lt;/code&gt; se establece en ti &lt;code&gt;yes&lt;/code&gt; , ambos m&amp;oacute;dulos se declaran como &lt;code&gt;requires&lt;/code&gt; y los declarados como &lt;code&gt;build_requires&lt;/code&gt; se tratan por igual. Al configurar &lt;code&gt;ask/yes&lt;/code&gt; o &lt;code&gt;ask/&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , CPAN.pm pregunta al usuario y establece el valor predeterminado en consecuencia.</target>
        </trans-unit>
        <trans-unit id="92bd94b93ba7aa98da9b694cc55416c0183aa164" translate="yes" xml:space="preserve">
          <source>Since DLLs may be loaded at run time, to have the same mechanism for DLLs one needs to have the address range of</source>
          <target state="translated">Dado que las DLL pueden cargarse en tiempo de ejecución,para tener el mismo mecanismo para las DLL es necesario tener el rango de direcciones de</target>
        </trans-unit>
        <trans-unit id="b8d7eab0940cbd19c7e5c0a0410f1af9f2b70a97" translate="yes" xml:space="preserve">
          <source>Since Emacs version 19 patchlevel 22 or so, there have been both a perl-mode.el and support for the Perl debugger built in. These should come with the standard Emacs 19 distribution.</source>
          <target state="translated">Desde la versión 19 de Emacs,nivel de parche 22 más o menos,se ha incorporado tanto un perl-mode.el como soporte para el depurador Perl.Estos deberían venir con la distribución estándar de Emacs 19.</target>
        </trans-unit>
        <trans-unit id="ae992899a872766d28cfb8b692b2e7f7ecf24212" translate="yes" xml:space="preserve">
          <source>Since File::Spec is object oriented, subroutines should not be called directly, as in:</source>
          <target state="translated">Como File::Spec está orientado a los objetos,las subrutinas no deben ser llamadas directamente,como en:</target>
        </trans-unit>
        <trans-unit id="58330cb00aafa72e888d41a23aef159c39b70e0c" translate="yes" xml:space="preserve">
          <source>Since INPUT sections allow declaration of C variables which do not appear in the parameter list of a subroutine, this may be shortened to:</source>
          <target state="translated">Dado que las secciones INPUT permiten la declaración de variables C que no aparecen en la lista de parámetros de una subrutina,esto puede acortarse a</target>
        </trans-unit>
        <trans-unit id="45546e69c804ad74560b03b1bfa0ada21545dbab" translate="yes" xml:space="preserve">
          <source>Since Math::BigInt and BigFloat also overload the normal math operations, the following line will still work:</source>
          <target state="translated">Ya que Math::BigInt y BigFloat también sobrecargan las operaciones matemáticas normales,la siguiente línea seguirá funcionando:</target>
        </trans-unit>
        <trans-unit id="1a22aa5b5825f973b9ba76849397ffcf019b0d3e" translate="yes" xml:space="preserve">
          <source>Since OS/2 port of perl uses a remarkable EMX environment, it can run (and build extensions, and - possibly - be built itself) under any environment which can run EMX. The current list is DOS, DOS-inside-OS/2, Win0.3*, Win0.95 and WinNT. Out of many perl flavors, only one works, see &lt;a href=&quot;#perl_.exe&quot;&gt;&quot;&lt;i&gt;perl_.exe&lt;/i&gt;&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdb84eddf5f43124818a551b78d4d19bef89ac6" translate="yes" xml:space="preserve">
          <source>Since OS/2 port of perl uses a remarkable EMX environment, it can run (and build extensions, and - possibly - be built itself) under any environment which can run EMX. The current list is DOS, DOS-inside-OS/2, Win0.3*, Win0.95 and WinNT. Out of many perl flavors, only one works, see &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;.</source>
          <target state="translated">Dado que el puerto OS / 2 de perl utiliza un entorno EMX notable, puede ejecutarse (y crear extensiones y, posiblemente, construirse &amp;eacute;l mismo) en cualquier entorno que pueda ejecutar EMX. La lista actual es DOS, DOS-inside-OS / 2, Win0.3 *, Win0.95 y WinNT. De los muchos sabores de perl, solo uno funciona, consulte &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6084ebce66f9d95008fbd76add0c4721f5880c4b" translate="yes" xml:space="preserve">
          <source>Since PERL_SYS_INIT3() may change &lt;code&gt;env&lt;/code&gt; , it may be more appropriate to provide &lt;code&gt;env&lt;/code&gt; as an argument to perl_parse().</source>
          <target state="translated">Dado que PERL_SYS_INIT3 () puede cambiar &lt;code&gt;env&lt;/code&gt; , puede ser m&amp;aacute;s apropiado proporcionar &lt;code&gt;env&lt;/code&gt; como argumento a perl_parse ().</target>
        </trans-unit>
        <trans-unit id="f7f8af64efb04a46b462c34b5604a1102a5d4309" translate="yes" xml:space="preserve">
          <source>Since PERL_SYS_INIT3() may change &lt;code&gt;env&lt;/code&gt;, it may be more appropriate to provide &lt;code&gt;env&lt;/code&gt; as an argument to perl_parse().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908c64d54ba36fa8efadd65bbb91e193ec071dc5" translate="yes" xml:space="preserve">
          <source>Since Perl 5.004, however, this situation is a special case and Perl creates the hash key only when you make the assignment:</source>
          <target state="translated">Sin embargo,desde Perl 5.004,esta situación es un caso especial y Perl crea la clave hash sólo cuando hace la asignación:</target>
        </trans-unit>
        <trans-unit id="a9ff67b0f4d57746c4f60694c82d05a6c7b9009b" translate="yes" xml:space="preserve">
          <source>Since Perl 5.16.0, the &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; token is available under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'current_sub'&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16.0&lt;/code&gt; . It will evaluate to a reference to the currently-running sub, which allows for recursive calls without knowing your subroutine's name.</source>
          <target state="translated">Desde Perl 5.16.0, el token &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; est&amp;aacute; disponible en la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'current_sub'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'current_sub' y &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16.0&lt;/code&gt; . Se evaluar&amp;aacute; como una referencia al sub actual que se est&amp;aacute; ejecutando, lo que permite llamadas recursivas sin conocer el nombre de su subrutina.</target>
        </trans-unit>
        <trans-unit id="d1a3d1fb600646bfa2800199a2796c986b7ed30e" translate="yes" xml:space="preserve">
          <source>Since Perl 5.16.0, the &lt;code&gt;__SUB__&lt;/code&gt; token is available under &lt;code&gt;use feature 'current_sub'&lt;/code&gt; and &lt;code&gt;use 5.16.0&lt;/code&gt;. It will evaluate to a reference to the currently-running sub, which allows for recursive calls without knowing your subroutine's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fae0c1bd1740225eb42eb57769894f0dc25fdf8" translate="yes" xml:space="preserve">
          <source>Since Perl 5.18, the option &lt;code&gt;--libpods&lt;/code&gt; has been deprecated, and using this option did not do anything other than producing a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd0c9118f331aebc3c70bcab476c8b369f379f5" translate="yes" xml:space="preserve">
          <source>Since Perl 5.26, this functionality with the extra parameter has been available by using a corresponding macro to each one of these, and whose name is formed by appending &lt;code&gt;_safe&lt;/code&gt; to the base name. There is no change to the functionality of those. For example, &lt;code&gt;isDIGIT_utf8_safe&lt;/code&gt; corresponds to &lt;code&gt;isDIGIT_utf8&lt;/code&gt;, and both now behave identically. All are documented in &lt;a href=&quot;perlapi#Character-case-changing&quot;&gt;&quot;Character case changing&quot; in perlapi&lt;/a&gt; and &lt;a href=&quot;perlapi#Character-classification&quot;&gt;&quot;Character classification&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd1865b1bb90979ee802c45310e91e7b7152674" translate="yes" xml:space="preserve">
          <source>Since Perl 5.6.1 the special variables @- and @+ can functionally replace $`, $&amp;amp; and $'. These arrays contain pointers to the beginning and end of each match (see perlvar for the full story), so they give you essentially the same information, but without the risk of excessive string copying.</source>
          <target state="translated">Desde Perl 5.6.1, las variables especiales @ - y @ + pueden reemplazar funcionalmente $ `, $ &amp;amp; y $ '. Estas matrices contienen punteros al principio y al final de cada coincidencia (consulte perlvar para la historia completa), por lo que le brindan esencialmente la misma informaci&amp;oacute;n, pero sin el riesgo de una copia excesiva de cadenas.</target>
        </trans-unit>
        <trans-unit id="0c3b5811fc581b714a97d98184d154d442e77a68" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8, thread programming has been available using a model called</source>
          <target state="translated">Desde Perl 5.8,la programación de los hilos ha estado disponible usando un modelo llamado</target>
        </trans-unit>
        <trans-unit id="8b1528960c7f653f3987ab48deb0e1d4226f3c72" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0 a file handle referring to a string can be created by calling open with a reference to that string instead of the filename. This file handle can then be used to read from or write to the string:</source>
          <target state="translated">Desde Perl 5.8.0 se puede crear un manejador de archivo que se refiera a una cadena,llamando a open con una referencia a esa cadena en lugar del nombre del archivo.Este &quot;handle&quot; de archivo puede ser usado para leer o escribir en la cadena:</target>
        </trans-unit>
        <trans-unit id="e4d8eb9b8b02c94511ca94b8a0081bc372e591a2" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, if the first two elements of the list are &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;http://man.he.net/man2/utime&quot;&gt;utime(2)&lt;/a&gt; syscall from your C library is called with a null second argument. On most systems, this will set the file's access and modification times to the current time (i.e., equivalent to the example above) and will work even on files you don't own provided you have write permission:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9a4f3a496c7e0b6fbb6d2a333860ae199a0774" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, if the first two elements of the list are &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the utime(2) syscall from your C library is called with a null second argument. On most systems, this will set the file's access and modification times to the current time (i.e., equivalent to the example above) and will work even on files you don't own provided you have write permission:</source>
          <target state="translated">Desde Perl 5.8.0, si los dos primeros elementos de la lista son &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , se llama a la llamada al sistema utime (2) de su biblioteca C con un segundo argumento nulo. En la mayor&amp;iacute;a de los sistemas, esto establecer&amp;aacute; las horas de acceso y modificaci&amp;oacute;n del archivo a la hora actual (es decir, equivalente al ejemplo anterior) y funcionar&amp;aacute; incluso en archivos que no son de su propiedad, siempre que tenga permiso de escritura:</target>
        </trans-unit>
        <trans-unit id="82732a952fbe092bd928ea5f2a3dfaabc967f5cd" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, if the first two elements of the list are &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the utime(2) syscall from your C library is called with a null second argument. On most systems, this will set the file's access and modification times to the current time (i.e., equivalent to the example above) and will work even on files you don't own provided you have write permission:</source>
          <target state="translated">Desde Perl 5.8.0, si los dos primeros elementos de la lista son &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , se llama a la llamada al sistema utime (2) de su biblioteca C con un segundo argumento nulo. En la mayor&amp;iacute;a de los sistemas, esto establecer&amp;aacute; las horas de acceso y modificaci&amp;oacute;n del archivo a la hora actual (es decir, equivalente al ejemplo anterior) y funcionar&amp;aacute; incluso en archivos que no son de su propiedad, siempre que tenga permiso de escritura:</target>
        </trans-unit>
        <trans-unit id="e51f3522d03a5b3a232bf4033ea382564508f931" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, signals have been made safer in Perl by postponing their handling until the interpreter is in a</source>
          <target state="translated">Desde Perl 5.8.0,las señales se han hecho más seguras en Perl posponiendo su manejo hasta que el intérprete esté en un</target>
        </trans-unit>
        <trans-unit id="f2d46e3f9d2d01548c43a50c625a8e637b891700" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, you can also use the list form of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; for pipes. This is preferred when you wish to avoid having the shell interpret metacharacters that may be in your command string.</source>
          <target state="translated">Desde Perl 5.8.0, tambi&amp;eacute;n puede usar la forma de lista de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; para tuber&amp;iacute;as. Esto es preferible cuando desea evitar que el shell interprete los metacaracteres que pueden estar en su cadena de comandos.</target>
        </trans-unit>
        <trans-unit id="718a678663da5c7f9393577cff7fa0dc58227371" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, you can also use the list form of &lt;code&gt;open&lt;/code&gt; for pipes. This is preferred when you wish to avoid having the shell interpret metacharacters that may be in your command string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3480b6dbc008fbf05d437030616ffbd60db1a205" translate="yes" xml:space="preserve">
          <source>Since Perl 5.9.5</source>
          <target state="translated">Desde el Perl 5.9.5</target>
        </trans-unit>
        <trans-unit id="ce3c317911640225ca1493860827b3b6d9d6a56f" translate="yes" xml:space="preserve">
          <source>Since Perl doesn't currently do anything with the &lt;code&gt;LC_MONETARY&lt;/code&gt; category, specifying &lt;code&gt;:monetary&lt;/code&gt; does effectively nothing. Some systems have other categories, such as &lt;code&gt;LC_PAPER&lt;/code&gt;, but Perl also doesn't do anything with them, and there is no way to specify them in this pragma's arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83749785256b2bd98e45a0b0907ae739a924facc" translate="yes" xml:space="preserve">
          <source>Since Perl doesn't currently do anything with the &lt;code&gt;LC_MONETARY&lt;/code&gt; category, specifying &lt;code&gt;:monetary&lt;/code&gt; does effectively nothing. Some systems have other categories, such as &lt;code&gt;LC_PAPER_SIZE&lt;/code&gt; , but Perl also doesn't know anything about them, and there is no way to specify them in this pragma's arguments.</source>
          <target state="translated">Dado que Perl actualmente no hace nada con la categor&amp;iacute;a &lt;code&gt;LC_MONETARY&lt;/code&gt; , especificar &lt;code&gt;:monetary&lt;/code&gt; no hace nada. Algunos sistemas tienen otras categor&amp;iacute;as, como &lt;code&gt;LC_PAPER_SIZE&lt;/code&gt; , pero Perl tampoco sabe nada sobre ellos y no hay forma de especificarlos en los argumentos de este pragma.</target>
        </trans-unit>
        <trans-unit id="7873f3b494192ca12067337abef4df445eb77998" translate="yes" xml:space="preserve">
          <source>Since Perl may compile the pattern at the moment of execution of the &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; operator, using &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; may have speed advantages in some situations, notably if the result of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; is used standalone:</source>
          <target state="translated">Dado que Perl puede compilar el patr&amp;oacute;n en el momento de la ejecuci&amp;oacute;n del operador &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; , el uso de &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; puede tener ventajas de velocidad en algunas situaciones, especialmente si el resultado de &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; se usa de forma independiente:</target>
        </trans-unit>
        <trans-unit id="7ee8fc05b2f265e0275f90b02e962f3d6fb61694" translate="yes" xml:space="preserve">
          <source>Since Perl may compile the pattern at the moment of execution of the &lt;code&gt;qr()&lt;/code&gt; operator, using &lt;code&gt;qr()&lt;/code&gt; may have speed advantages in some situations, notably if the result of &lt;code&gt;qr()&lt;/code&gt; is used standalone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a306c8d466811a3ef5f554b084c63b5f925fc7a3" translate="yes" xml:space="preserve">
          <source>Since Perl processes the &lt;code&gt;#!&lt;/code&gt; -line (cf. &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;DESCRIPTION in perlrun&lt;/a&gt;, &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;, &lt;a href=&quot;perldiag#No-Perl-script-found-in-input&quot;&gt;No Perl script found in input in perldiag&lt;/a&gt;), it should know when a program</source>
          <target state="translated">Dado que Perl procesa el &lt;code&gt;#!&lt;/code&gt; -line (cf. &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;DESCRIPCI&amp;Oacute;N en perlrun&lt;/a&gt; , &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Interruptores de comando en perlrun&lt;/a&gt; , &lt;a href=&quot;perldiag#No-Perl-script-found-in-input&quot;&gt;No se encontr&amp;oacute; ning&amp;uacute;n script Perl en la entrada en perldiag&lt;/a&gt; ), deber&amp;iacute;a saber cu&amp;aacute;ndo un programa</target>
        </trans-unit>
        <trans-unit id="15eed331802dca8328c200227a6895f19cb9da5d" translate="yes" xml:space="preserve">
          <source>Since Perl processes the &lt;code&gt;#!&lt;/code&gt;-line (cf. &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot; in perlrun&lt;/a&gt;, &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;&quot;Command Switches&quot; in perlrun&lt;/a&gt;, &lt;a href=&quot;perldiag#No-Perl-script-found-in-input&quot;&gt;&quot;No Perl script found in input&quot; in perldiag&lt;/a&gt;), it should know when a program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7890be1aa1eaa7cb9334a73bda7962f1d481f1" translate="yes" xml:space="preserve">
          <source>Since Perl recognizes a Unicode Byte Order Mark at the start of files as signaling that the file is Unicode encoded as in UTF-16 (whether big-endian or little-endian) or UTF-8, Pod parsers should do the same. Otherwise, the character encoding should be understood as being UTF-8 if the first highbit byte sequence in the file seems valid as a UTF-8 sequence, or otherwise as CP-1252 (earlier versions of this specification used Latin-1 instead of CP-1252).</source>
          <target state="translated">Dado que Perl reconoce una marca de orden de bytes Unicode al inicio de los archivos como una señal de que el archivo está codificado en Unicode como en UTF-16 (ya sea big-endian o little-endian)o en UTF-8,los analizadores de Pod deberían hacer lo mismo.De lo contrario,la codificación de caracteres debe entenderse como UTF-8 si la primera secuencia de bytes de bits altos del archivo parece válida como una secuencia UTF-8,o en caso contrario como CP-1252 (las versiones anteriores de esta especificación utilizaban el latín-1 en lugar de CP-1252).</target>
        </trans-unit>
        <trans-unit id="ca8e547d2675a51d87227fd5471e1262dc702174" translate="yes" xml:space="preserve">
          <source>Since Perl v5.10.0 includes the version.pm comparison logic anyways, you don't need to do anything at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b73dcb8330d72308d60b51669745466fec012ac" translate="yes" xml:space="preserve">
          <source>Since Perl v5.22.0, calls to this function are optimized out on ASCII platforms, so there is no performance hit in using it there.</source>
          <target state="translated">Desde Perl v5.22.0,las llamadas a esta función están optimizadas en las plataformas ASCII,por lo que no hay ningún golpe de rendimiento al usarla allí.</target>
        </trans-unit>
        <trans-unit id="3b795b95acb54fe26d52c3d9e0c84f28d54d781c" translate="yes" xml:space="preserve">
          <source>Since Perl v5.6.0, Perl variable names may also be alphanumeric strings preceded by a caret. These must all be written in the form &lt;code&gt;${^Foo}&lt;/code&gt;; the braces are not optional. &lt;code&gt;${^Foo}&lt;/code&gt; denotes the scalar variable whose name is considered to be a control-&lt;code&gt;F&lt;/code&gt; followed by two &lt;code&gt;o&lt;/code&gt;'s. These variables are reserved for future special uses by Perl, except for the ones that begin with &lt;code&gt;^_&lt;/code&gt; (caret-underscore). No name that begins with &lt;code&gt;^_&lt;/code&gt; will acquire a special meaning in any future version of Perl; such names may therefore be used safely in programs. &lt;code&gt;$^_&lt;/code&gt; itself, however,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9077183204414786a18b0b5b41280a8b58d8fe93" translate="yes" xml:space="preserve">
          <source>Since Perl v5.6.0, Perl variable names may be alphanumeric strings that begin with a caret (or a control character, but this form is deprecated). These variables must be written in the form &lt;code&gt;${^Foo}&lt;/code&gt; ; the braces are not optional. &lt;code&gt;${^Foo}&lt;/code&gt; denotes the scalar variable whose name is a control-&lt;code&gt;F&lt;/code&gt; followed by two &lt;code&gt;o&lt;/code&gt; 's. These variables are reserved for future special uses by Perl, except for the ones that begin with &lt;code&gt;^_&lt;/code&gt; (control-underscore or caret-underscore). No control-character name that begins with &lt;code&gt;^_&lt;/code&gt; will acquire a special meaning in any future version of Perl; such names may therefore be used safely in programs. &lt;code&gt;$^_&lt;/code&gt; itself, however,</source>
          <target state="translated">Desde Perl v5.6.0, los nombres de las variables de Perl pueden ser cadenas alfanum&amp;eacute;ricas que comienzan con un signo de intercalaci&amp;oacute;n (o un car&amp;aacute;cter de control, pero esta forma est&amp;aacute; en desuso). Estas variables deben escribirse en la forma &lt;code&gt;${^Foo}&lt;/code&gt; ; las llaves no son opcionales. &lt;code&gt;${^Foo}&lt;/code&gt; denota la variable escalar cuyo nombre es un control- &lt;code&gt;F&lt;/code&gt; seguido de dos &lt;code&gt;o&lt;/code&gt; . Estas variables est&amp;aacute;n reservadas para futuros usos especiales de Perl, excepto las que comienzan con &lt;code&gt;^_&lt;/code&gt; (control-subrayado o intercalaci&amp;oacute;n-subrayado). Ning&amp;uacute;n nombre de car&amp;aacute;cter de control que comience con &lt;code&gt;^_&lt;/code&gt; adquirir&amp;aacute; un significado especial en ninguna versi&amp;oacute;n futura de Perl; por lo tanto, estos nombres se pueden utilizar de forma segura en los programas. &lt;code&gt;$^_&lt;/code&gt; s&amp;iacute; mismo, sin embargo,</target>
        </trans-unit>
        <trans-unit id="33f810cef075561e9d829f100d7d5982e746f4f2" translate="yes" xml:space="preserve">
          <source>Since PodParser-1.24 the &lt;b&gt;Pod::Checker&lt;/b&gt; module uses only the &lt;b&gt;poderror&lt;/b&gt; method to print errors and warnings. The summary output (e.g. &quot;Pod syntax OK&quot;) has been dropped from the module and has been included in &lt;b&gt;podchecker&lt;/b&gt; (the script). This allows users of &lt;b&gt;Pod::Checker&lt;/b&gt; to control completely the output behavior. Users of &lt;b&gt;podchecker&lt;/b&gt; (the script) get the well-known behavior.</source>
          <target state="translated">Desde PodParser-1.24, el m&amp;oacute;dulo &lt;b&gt;Pod :: Checker&lt;/b&gt; usa solo el m&amp;eacute;todo &lt;b&gt;poderror&lt;/b&gt; para imprimir errores y advertencias. El resultado de resumen (por ejemplo, &quot;Sintaxis de pod OK&quot;) se ha eliminado del m&amp;oacute;dulo y se ha incluido en &lt;b&gt;podchecker&lt;/b&gt; (el script). Esto permite a los usuarios de &lt;b&gt;Pod :: Checker&lt;/b&gt; controlar completamente el comportamiento de salida. Los usuarios de &lt;b&gt;podchecker&lt;/b&gt; (el script) obtienen el comportamiento conocido.</target>
        </trans-unit>
        <trans-unit id="25c4aa2f7c7ea22cd03f6256eb0cf383feb5378c" translate="yes" xml:space="preserve">
          <source>Since Storable version 2.05, CODE references may be serialized with the help of &lt;a href=&quot;B::Deparse&quot;&gt;B::Deparse&lt;/a&gt;. To enable this feature, set &lt;code&gt;$Storable::Deparse&lt;/code&gt; to a true value. To enable deserialization, &lt;code&gt;$Storable::Eval&lt;/code&gt; should be set to a true value. Be aware that deserialization is done through &lt;code&gt;eval&lt;/code&gt;, which is dangerous if the Storable file contains malicious data. You can set &lt;code&gt;$Storable::Eval&lt;/code&gt; to a subroutine reference which would be used instead of &lt;code&gt;eval&lt;/code&gt;. See below for an example using a &lt;a href=&quot;safe&quot;&gt;Safe&lt;/a&gt; compartment for deserialization of CODE references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62ae1b79550d7e8d8b071446dadbd144fa9a44a" translate="yes" xml:space="preserve">
          <source>Since Storable version 2.05, CODE references may be serialized with the help of &lt;a href=&quot;b/deparse&quot;&gt;B::Deparse&lt;/a&gt;. To enable this feature, set &lt;code&gt;$Storable::Deparse&lt;/code&gt; to a true value. To enable deserialization, &lt;code&gt;$Storable::Eval&lt;/code&gt; should be set to a true value. Be aware that deserialization is done through &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, which is dangerous if the Storable file contains malicious data. You can set &lt;code&gt;$Storable::Eval&lt;/code&gt; to a subroutine reference which would be used instead of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. See below for an example using a &lt;a href=&quot;safe&quot;&gt;Safe&lt;/a&gt; compartment for deserialization of CODE references.</source>
          <target state="translated">Desde la versi&amp;oacute;n 2.05 de Storable, las referencias CODE se pueden serializar con la ayuda de &lt;a href=&quot;b/deparse&quot;&gt;B :: Deparse&lt;/a&gt; . Para habilitar esta funci&amp;oacute;n, establezca &lt;code&gt;$Storable::Deparse&lt;/code&gt; en un valor real. Para habilitar la deserializaci&amp;oacute;n, &lt;code&gt;$Storable::Eval&lt;/code&gt; debe establecerse en un valor verdadero. Tenga en cuenta que la deserializaci&amp;oacute;n se realiza a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; , lo cual es peligroso si el archivo almacenable contiene datos maliciosos. Puede establecer &lt;code&gt;$Storable::Eval&lt;/code&gt; en una referencia de subrutina que se usar&amp;iacute;a en lugar de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; . Consulte a continuaci&amp;oacute;n un ejemplo de uso de un compartimento &lt;a href=&quot;safe&quot;&gt;seguro&lt;/a&gt; para la deserializaci&amp;oacute;n de referencias CODE.</target>
        </trans-unit>
        <trans-unit id="c88a8ad5ec93e93fc48a98cd339628a0d0dbcb2e" translate="yes" xml:space="preserve">
          <source>Since UTF-7 is a 7-bit (re)encoded version of UTF-16BE, It is not part of Unicode's Character Encoding Scheme. It is separately implemented in Encode::Unicode::UTF7. For details see &lt;a href=&quot;Encode::Unicode::UTF7&quot;&gt;Encode::Unicode::UTF7&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0441a16b2e74d4d0e51c5a02d816d3fcef92571" translate="yes" xml:space="preserve">
          <source>Since UTF-7 is a 7-bit (re)encoded version of UTF-16BE, It is not part of Unicode's Character Encoding Scheme. It is separately implemented in Encode::Unicode::UTF7. For details see &lt;a href=&quot;unicode/utf7&quot;&gt;Encode::Unicode::UTF7&lt;/a&gt;.</source>
          <target state="translated">Dado que UTF-7 es una versi&amp;oacute;n (re) codificada de 7 bits de UTF-16BE, no forma parte del esquema de codificaci&amp;oacute;n de caracteres de Unicode. Se implementa por separado en Encode :: Unicode :: UTF7. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;unicode/utf7&quot;&gt;Encode :: Unicode :: UTF7&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2162d18e9f113918db80108542b383e4720b61a0" translate="yes" xml:space="preserve">
          <source>Since Unicode rules are not defined on these code points, if a Unicode-defined operation is done on them, Perl uses what we believe are sensible rules, while generally warning, using the &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; category. For example, &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc(&quot;\x{11_0000}&quot;)&lt;/a&gt;&lt;/code&gt; will generate such a warning, returning the input parameter as its result, since Perl defines the uppercase of every non-Unicode code point to be the code point itself. (All the case changing operations, not just uppercasing, work this way.)</source>
          <target state="translated">Dado que las reglas Unicode no est&amp;aacute;n definidas en estos puntos de c&amp;oacute;digo, si se realiza una operaci&amp;oacute;n definida por Unicode en ellos, Perl usa lo que creemos que son reglas sensatas, mientras que generalmente advierte, usando la categor&amp;iacute;a &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; . Por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc(&quot;\x{11_0000}&quot;)&lt;/a&gt;&lt;/code&gt; generar&amp;aacute; dicha advertencia, devolviendo el par&amp;aacute;metro de entrada como resultado, ya que Perl define las may&amp;uacute;sculas de cada punto de c&amp;oacute;digo no Unicode como el punto de c&amp;oacute;digo en s&amp;iacute;. (Todas las operaciones de cambio de may&amp;uacute;sculas y min&amp;uacute;sculas, no solo las may&amp;uacute;sculas, funcionan de esta manera).</target>
        </trans-unit>
        <trans-unit id="e37eae9f276840962a41c4b116e9f1cbc6df456a" translate="yes" xml:space="preserve">
          <source>Since Unicode rules are not defined on these code points, if a Unicode-defined operation is done on them, Perl uses what we believe are sensible rules, while generally warning, using the &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; category. For example, &lt;code&gt;uc(&quot;\x{11_0000}&quot;)&lt;/code&gt; will generate such a warning, returning the input parameter as its result, since Perl defines the uppercase of every non-Unicode code point to be the code point itself. (All the case changing operations, not just uppercasing, work this way.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7285a56d9c4d213c9ad280d3cdcf143edd27d7d8" translate="yes" xml:space="preserve">
          <source>Since VMS keeps track of files according to a different scheme than Unix, it's not really possible to represent the file's ID in the &lt;code&gt;st_dev&lt;/code&gt; and &lt;code&gt;st_ino&lt;/code&gt; fields of a &lt;code&gt;struct &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; . Perl tries its best, though, and the values it uses are pretty unlikely to be the same for two different files. We can't guarantee this, though, so caveat scriptor.</source>
          <target state="translated">Dado que VMS realiza un seguimiento de los archivos de acuerdo con un esquema diferente al de Unix, no es realmente posible representar el ID del archivo en los campos &lt;code&gt;st_dev&lt;/code&gt; y &lt;code&gt;st_ino&lt;/code&gt; de una &lt;code&gt;struct &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; . Sin embargo, Perl hace todo lo posible y es poco probable que los valores que utiliza sean los mismos para dos archivos diferentes. Sin embargo, no podemos garantizar esto, as&amp;iacute; que advierta al scriptor.</target>
        </trans-unit>
        <trans-unit id="f97165e0cc621ecf8ede47b3bb388f24e3bbd9ef" translate="yes" xml:space="preserve">
          <source>Since VMS keeps track of files according to a different scheme than Unix, it's not really possible to represent the file's ID in the &lt;code&gt;st_dev&lt;/code&gt; and &lt;code&gt;st_ino&lt;/code&gt; fields of a &lt;code&gt;struct stat&lt;/code&gt;. Perl tries its best, though, and the values it uses are pretty unlikely to be the same for two different files. We can't guarantee this, though, so caveat scriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5a9b6174ae871df152be709da101732e21f32c" translate="yes" xml:space="preserve">
          <source>Since Windows has nothing as simple as an executable bit, we check the file extension.</source>
          <target state="translated">Como Windows no tiene nada tan simple como un bit ejecutable,comprobamos la extensión del archivo.</target>
        </trans-unit>
        <trans-unit id="fd9730169823a0770803a5925e2496af06ca17b1" translate="yes" xml:space="preserve">
          <source>Since a TODO test does not need a reason, this function can return an empty string even when inside a TODO block. Use &lt;code&gt;$Test-&amp;gt;in_todo&lt;/code&gt; to determine if you are currently inside a TODO block.</source>
          <target state="translated">Dado que una prueba TODO no necesita una raz&amp;oacute;n, esta funci&amp;oacute;n puede devolver una cadena vac&amp;iacute;a incluso cuando est&amp;aacute; dentro de un bloque TODO. Use &lt;code&gt;$Test-&amp;gt;in_todo&lt;/code&gt; para determinar si se encuentra actualmente dentro de un bloque TODO.</target>
        </trans-unit>
        <trans-unit id="9ae46893bafbcba3b5e81c0b6866dc9c42e9443c" translate="yes" xml:space="preserve">
          <source>Since a wide character does not fit into a byte, the Digest::SHA routines croak if they encounter one. Whereas if a Unicode string contains no wide characters, the module accepts it quite happily. The following code illustrates the two cases:</source>
          <target state="translated">Como un personaje amplio no cabe en un byte,las rutinas del Digest::SHA se quiebran si se encuentran con uno.Mientras que si una cadena de Unicode no contiene caracteres anchos,el módulo la acepta con gusto.El siguiente código ilustra los dos casos:</target>
        </trans-unit>
        <trans-unit id="cf5ecd8beadbfc6894afc9b33f8c568a935ac82c" translate="yes" xml:space="preserve">
          <source>Since all &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; directives are executed at compile-time, the only way to change overloading during run-time is to</source>
          <target state="translated">Dado que todas las directivas de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; se ejecutan en tiempo de compilaci&amp;oacute;n, la &amp;uacute;nica forma de cambiar la sobrecarga durante el tiempo de ejecuci&amp;oacute;n es</target>
        </trans-unit>
        <trans-unit id="993a10b235330ad1f20f4c41c806f9d2c3a4329f" translate="yes" xml:space="preserve">
          <source>Since all &lt;code&gt;use&lt;/code&gt; directives are executed at compile-time, the only way to change overloading during run-time is to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121e9d461e86db932f5cbbcefdf834cbc71c32ee" translate="yes" xml:space="preserve">
          <source>Since all numbers are not objects, you can use all functions that are part of the BigInt or BigFloat API. It is wise to use only the bxxx() notation, and not the fxxx() notation, though. This makes you independent on the fact that the underlying object might morph into a different class than BigFloat.</source>
          <target state="translated">Como todos los números no son objetos,puedes usar todas las funciones que forman parte de la API de BigInt o BigFloat.Sin embargo,es prudente usar sólo la notación bxxx(),y no la notación fxxx().Esto te hace independiente del hecho de que el objeto subyacente pueda transformarse en una clase diferente a BigFloat.</target>
        </trans-unit>
        <trans-unit id="a8ab3cbd0a89b8927ddf254335c455bf7a9e0853" translate="yes" xml:space="preserve">
          <source>Since all numbers are now objects, you can use all functions that are part of the BigInt API. You can only use the bxxx() notation, and not the fxxx() notation, though.</source>
          <target state="translated">Como todos los números son ahora objetos,puedes usar todas las funciones que forman parte de la API de BigInt.Sin embargo,sólo puedes usar la notación bxxx(),y no la notación fxxx().</target>
        </trans-unit>
        <trans-unit id="4e2f7ef257d55f0fed05e16ea09bffefc9e8b92c" translate="yes" xml:space="preserve">
          <source>Since all numbers are now objects, you can use all functions that are part of the BigInt or BigFloat API. It is wise to use only the bxxx() notation, and not the fxxx() notation, though. This makes it possible that the underlying object might morph into a different class than BigFloat.</source>
          <target state="translated">Como todos los números son ahora objetos,puedes usar todas las funciones que forman parte de la API de BigInt o BigFloat.Sin embargo,es prudente usar sólo la notación bxxx(),y no la notación fxxx().Esto hace posible que el objeto subyacente se transforme en una clase diferente a la de BigFloat.</target>
        </trans-unit>
        <trans-unit id="6baa6e390f30e8a9126d448dab3ed477bfa1776f" translate="yes" xml:space="preserve">
          <source>Since an expression &lt;code&gt;&quot;ab$cd,,&quot;&lt;/code&gt; is just a shortcut for &lt;code&gt;'ab' . $cd . ',,'&lt;/code&gt; , it is expected that overloaded constant strings are equipped with reasonable overloaded catenation operator, otherwise absurd results will result. Similarly, negative numbers are considered as negations of positive constants.</source>
          <target state="translated">Dado que una expresi&amp;oacute;n &lt;code&gt;&quot;ab$cd,,&quot;&lt;/code&gt; es solo un atajo para &lt;code&gt;'ab' . $cd . ',,'&lt;/code&gt; , se espera que las cadenas constantes sobrecargadas est&amp;eacute;n equipadas con un operador de catenaci&amp;oacute;n sobrecargado razonable; de ​​lo contrario, se obtendr&amp;aacute;n resultados absurdos. De manera similar, los n&amp;uacute;meros negativos se consideran negaciones de constantes positivas.</target>
        </trans-unit>
        <trans-unit id="9eab2e484706387d3cb0dc782cf2ac19206003e5" translate="yes" xml:space="preserve">
          <source>Since an expression &lt;code&gt;&quot;ab$cd,,&quot;&lt;/code&gt; is just a shortcut for &lt;code&gt;'ab' . $cd . ',,'&lt;/code&gt;, it is expected that overloaded constant strings are equipped with reasonable overloaded catenation operator, otherwise absurd results will result. Similarly, negative numbers are considered as negations of positive constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad22ba0685e5d4fac9ab43140e5e8b95922e320" translate="yes" xml:space="preserve">
          <source>Since any scalar can be passed as a pattern, it's possible to implement an engine that does something with an array (&lt;code&gt;&quot;ook&quot; =~ [ qw/ eek
hlagh / ]&lt;/code&gt; ) or with the non-stringified form of a compiled regular expression (&lt;code&gt;&quot;ook&quot; =~ qr/eek/&lt;/code&gt; ). Perl's own engine will always stringify everything using the snippet above, but that doesn't mean other engines have to.</source>
          <target state="translated">Dado que cualquier escalar se puede pasar como un patr&amp;oacute;n, es posible implementar un motor que haga algo con una matriz ( &lt;code&gt;&quot;ook&quot; =~ [ qw/ eek hlagh / ]&lt;/code&gt; ) o con la forma no en cadena de una expresi&amp;oacute;n regular compilada ( &lt;code&gt;&quot;ook&quot; =~ qr/eek/&lt;/code&gt; ). El propio motor de Perl siempre clasificar&amp;aacute; todo utilizando el fragmento anterior, pero eso no significa que otros motores tengan que hacerlo.</target>
        </trans-unit>
        <trans-unit id="a96aedcf3c01c8994f2ad1304c88bcd0b989eae9" translate="yes" xml:space="preserve">
          <source>Since any scalar can be passed as a pattern, it's possible to implement an engine that does something with an array (&lt;code&gt;&quot;ook&quot; =~ [ qw/ eek hlagh / ]&lt;/code&gt;) or with the non-stringified form of a compiled regular expression (&lt;code&gt;&quot;ook&quot; =~ qr/eek/&lt;/code&gt;). Perl's own engine will always stringify everything using the snippet above, but that doesn't mean other engines have to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641d084a3985af991bd9e2608e23022b03d9ab2f" translate="yes" xml:space="preserve">
          <source>Since blessed objects are actually stored as RV's, it is useful to use the typemap features to preprocess parameters and extract the actual SV stored within the blessed RV. See the sample for T_PTROBJ_SPECIAL below.</source>
          <target state="translated">Dado que los objetos bendecidos se almacenan realmente como RV,es útil utilizar las características del mapa de tipos para preprocesar los parámetros y extraer el SV real almacenado en el RV bendecido.Ver el ejemplo de T_PTROBJ_SPECIAL más abajo.</target>
        </trans-unit>
        <trans-unit id="8c4a595ff52b120e783068a746cfa5bbb3e02fd1" translate="yes" xml:space="preserve">
          <source>Since changing a slice changes the original array or hash that it's slicing, a &lt;code&gt;foreach&lt;/code&gt; construct will alter some--or even all--of the values of the array or hash.</source>
          <target state="translated">Dado que cambiar un segmento cambia la matriz o el hash original que est&amp;aacute; dividiendo, una construcci&amp;oacute;n &lt;code&gt;foreach&lt;/code&gt; alterar&amp;aacute; algunos, o incluso todos, los valores de la matriz o el hash.</target>
        </trans-unit>
        <trans-unit id="fe77918163189e19fb5ee32ad02fe79f3b55c3d3" translate="yes" xml:space="preserve">
          <source>Since code that runs both with and without threads is usually pretty messy, it's best to isolate the thread-specific code in its own module. In our example above, that's what &lt;code&gt;MyMod_threaded&lt;/code&gt; is, and it's only imported if we're running on a threaded Perl.</source>
          <target state="translated">Dado que el c&amp;oacute;digo que se ejecuta tanto con subprocesos como sin ellos suele ser bastante complicado, es mejor aislar el c&amp;oacute;digo espec&amp;iacute;fico del subproceso en su propio m&amp;oacute;dulo. En nuestro ejemplo anterior, eso es &lt;code&gt;MyMod_threaded&lt;/code&gt; , y solo se importa si estamos ejecutando un Perl con subprocesos.</target>
        </trans-unit>
        <trans-unit id="7cbe078e4c38d00728f285597cf545219cabca7e" translate="yes" xml:space="preserve">
          <source>Since cygwin-1.7 pathnames are UTF-8 encoded.</source>
          <target state="translated">Ya que las rutas de Cygwin-1.7 están codificadas en UTF-8.</target>
        </trans-unit>
        <trans-unit id="266d3a18d9d36b211495f4b1c929d7f21c8d9c1c" translate="yes" xml:space="preserve">
          <source>Since cygwin-1.7 textmounts are deprecated and strongly discouraged.</source>
          <target state="translated">Dado que los montajes de texto de cygwin-1.7 están desaconsejados y fuertemente desaconsejados.</target>
        </trans-unit>
        <trans-unit id="d1be23ed029f3a9d2b3315834beff1a066fe092b" translate="yes" xml:space="preserve">
          <source>Since environment variables are normally in all uppercase, no additional special formatting is generally needed; they're glaring enough as it is.</source>
          <target state="translated">Dado que las variables de entorno suelen estar en todas las mayúsculas,por lo general no se necesita ningún formato especial adicional;ya son suficientemente evidentes.</target>
        </trans-unit>
        <trans-unit id="7b1f94f3541d2fa04906c8d0560fd0adccde7ea8" translate="yes" xml:space="preserve">
          <source>Since evaluation of the translation function (see &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;&quot;CUSTOM TRANSLATORS&quot;&lt;/a&gt;) happens in the middle of compilation (of a string literal), the translation function should not do any &lt;code&gt;eval&lt;/code&gt;s or &lt;code&gt;require&lt;/code&gt;s. This restriction should be lifted (but is low priority) in a future version of Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af76bf7b4202770a0de3b09fc13dec72dab7c4f4" translate="yes" xml:space="preserve">
          <source>Since evaluation of the translation function (see &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;CUSTOM TRANSLATORS&lt;/a&gt;) happens in the middle of compilation (of a string literal), the translation function should not do any &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;s. This restriction should be lifted (but is low priority) in a future version of Perl.</source>
          <target state="translated">Dado que la evaluaci&amp;oacute;n de la funci&amp;oacute;n de traducci&amp;oacute;n (ver &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;TRADUCTORES PERSONALIZADOS&lt;/a&gt; ) ocurre en medio de la compilaci&amp;oacute;n (de un literal de cadena), la funci&amp;oacute;n de traducci&amp;oacute;n no deber&amp;iacute;a hacer ninguna &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n ni &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; ninguna . Esta restricci&amp;oacute;n deber&amp;iacute;a eliminarse (pero es de baja prioridad) en una versi&amp;oacute;n futura de Perl.</target>
        </trans-unit>
        <trans-unit id="e702e67c36d5f56f32c4ca887c029adc55bb2d25" translate="yes" xml:space="preserve">
          <source>Since file associations don't work everywhere, and there are reportedly bugs with file associations where it does work, the old method of wrapping the perl script to make it look like a regular batch file to the OS, may be used. The install process makes available the &quot;pl2bat.bat&quot; script which can be used to wrap perl scripts into batch files. For example:</source>
          <target state="translated">Dado que las asociaciones de archivos no funcionan en todas partes,y que,según se informa,hay errores con las asociaciones de archivos en las que sí funciona,se puede utilizar el antiguo método de envolver el script perl para que parezca un archivo por lotes normal para el sistema operativo.El proceso de instalación pone a disposición el script &quot;pl2bat.bat&quot; que puede utilizarse para envolver los scripts perl en archivos por lotes.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="23fd0e0c0c88af650bd14da915c09ac6e76b1837" translate="yes" xml:space="preserve">
          <source>Since hash keys are strings, the default normalizer will not distinguish between &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and the empty string. It also won't work when the function's arguments are references. For example, consider a function &lt;code&gt;g&lt;/code&gt; which gets two arguments: A number, and a reference to an array of numbers:</source>
          <target state="translated">Dado que las claves hash son cadenas, el normalizador predeterminado no distinguir&amp;aacute; entre &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; y la cadena vac&amp;iacute;a. Tampoco funcionar&amp;aacute; cuando los argumentos de la funci&amp;oacute;n sean referencias. Por ejemplo, considere una funci&amp;oacute;n &lt;code&gt;g&lt;/code&gt; que obtiene dos argumentos: un n&amp;uacute;mero y una referencia a una matriz de n&amp;uacute;meros:</target>
        </trans-unit>
        <trans-unit id="5436c585986115252a0eaae5572a50baa0e6e228" translate="yes" xml:space="preserve">
          <source>Since hash keys are strings, the default normalizer will not distinguish between &lt;code&gt;undef&lt;/code&gt; and the empty string. It also won't work when the function's arguments are references. For example, consider a function &lt;code&gt;g&lt;/code&gt; which gets two arguments: A number, and a reference to an array of numbers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1b02458a611387371114bfc83a2b6bef610aa1" translate="yes" xml:space="preserve">
          <source>Since in this example only the hostname was used, the redundant conversion of the port number into a service name may be omitted by passing the &lt;code&gt;NIx_NOSERV&lt;/code&gt; flag.</source>
          <target state="translated">Dado que en este ejemplo solo se us&amp;oacute; el nombre de host, la conversi&amp;oacute;n redundante del n&amp;uacute;mero de puerto en un nombre de servicio puede omitirse pasando el indicador &lt;code&gt;NIx_NOSERV&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43ba5f496d72ffff6bead4e713df055d0751d289" translate="yes" xml:space="preserve">
          <source>Since it is an actual &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; (not a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;),</source>
          <target state="translated">Dado que es un &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; real (no un &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; ),</target>
        </trans-unit>
        <trans-unit id="55f0899d2eb4523813b05345316dcef5758fc23e" translate="yes" xml:space="preserve">
          <source>Since it is an actual &lt;code&gt;do&lt;/code&gt; (not a &lt;code&gt;require&lt;/code&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb621853d8928b75d75f89c40a84cc2ef109eca4" translate="yes" xml:space="preserve">
          <source>Since it is based on Linux, the NAS can run many popular Linux software packages, including Perl. In fact, Synology provides a ready-to-install package for Perl, depending on the version of DSM the installed perl ranges from 5.8.6 on DSM-4.3 to 5.24.0 on DSM-6.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7acf7de7efee5f314675d9545729adcf4f4695" translate="yes" xml:space="preserve">
          <source>Since it is only at the compilation stage that the operator mask applies, controlled access to potentially unsafe operations can be achieved by having a handle to a wrapper subroutine (written outside the compartment) placed into the compartment. For example,</source>
          <target state="translated">Dado que sólo en la etapa de compilación se aplica la máscara del operador,se puede lograr un acceso controlado a las operaciones potencialmente inseguras haciendo que se coloque un asa en una subrutina de envoltura (escrita fuera del compartimento)en el compartimento.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="1f11ca56ce1f8e288941a46d45decb0b96762c16" translate="yes" xml:space="preserve">
          <source>Since it's a common mistake to use &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt;, Perl warns you if &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; is called in void context and if there is a following statement that isn't &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#warn-LIST&quot;&gt;&lt;code&gt;warn&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#exit-EXPR&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; (if &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; are enabled--but you always do that, right?). If you</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194e3b48a27a3bdaa4b431c05b89584d736f7041" translate="yes" xml:space="preserve">
          <source>Since it's a common mistake to use &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, Perl warns you if &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; is called in void context and if there is a following statement that isn't &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (if &lt;code&gt;-w&lt;/code&gt; is set--but you always do that, right?). If you</source>
          <target state="translated">Dado que es un error com&amp;uacute;n usar &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , Perl le advierte si se llama a &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; en un contexto vac&amp;iacute;o y si hay una declaraci&amp;oacute;n siguiente que no es &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (si se establece &lt;code&gt;-w&lt;/code&gt; , pero siempre haz eso, &amp;iquest;verdad?). Si tu</target>
        </trans-unit>
        <trans-unit id="84dfc8fed05280b5766bcde26ffe3ad58754f68f" translate="yes" xml:space="preserve">
          <source>Since it's a common mistake to use &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, Perl warns you if &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; is called in void context and if there is a following statement that isn't &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (if &lt;code&gt;-w&lt;/code&gt; is set--but you always do that, right?). If you</source>
          <target state="translated">Dado que es un error com&amp;uacute;n usar &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , Perl le advierte si se llama a &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; en un contexto vac&amp;iacute;o y si hay una declaraci&amp;oacute;n siguiente que no es &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (si se establece &lt;code&gt;-w&lt;/code&gt; , pero siempre haz eso, &amp;iquest;verdad?). Si tu</target>
        </trans-unit>
        <trans-unit id="738084392e8e6e74486d375f063b4666c3458a7c" translate="yes" xml:space="preserve">
          <source>Since just passing an SV to an XS function and copying the data of the SV is not enough to copy the UTF8 flags, even less right is just passing a &lt;code&gt;char *&lt;/code&gt; to an XS function.</source>
          <target state="translated">Dado que simplemente pasar un SV a una funci&amp;oacute;n XS y copiar los datos del SV no es suficiente para copiar los indicadores UTF8, menos a&amp;uacute;n es simplemente pasar un &lt;code&gt;char *&lt;/code&gt; a una funci&amp;oacute;n XS.</target>
        </trans-unit>
        <trans-unit id="b9469e3eb840b801f9d7d7208ec99b06d836b6ea" translate="yes" xml:space="preserve">
          <source>Since kernel threading can interrupt a thread at any time, they will uncover some of the implicit locking assumptions you may make in your program. For example, something as simple as &lt;code&gt;$x = $x + 2&lt;/code&gt; can behave unpredictably with kernel threads if &lt;code&gt;$x&lt;/code&gt; is visible to other threads, as another thread may have changed &lt;code&gt;$x&lt;/code&gt; between the time it was fetched on the right hand side and the time the new value is stored.</source>
          <target state="translated">Dado que el subproceso del kernel puede interrumpir un subproceso en cualquier momento, descubrir&amp;aacute;n algunas de las suposiciones de bloqueo impl&amp;iacute;citas que puede hacer en su programa. Por ejemplo, algo tan simple como &lt;code&gt;$x = $x + 2&lt;/code&gt; puede comportarse de manera impredecible con subprocesos del kernel si &lt;code&gt;$x&lt;/code&gt; es visible para otros subprocesos, ya que otro subproceso puede haber cambiado &lt;code&gt;$x&lt;/code&gt; entre el momento en que se obtuvo en el lado derecho y el hora en que se almacena el nuevo valor.</target>
        </trans-unit>
        <trans-unit id="50bf4cd3ab25a16dfb39690f40c89ca9d71697ee" translate="yes" xml:space="preserve">
          <source>Since many pieces of code create tiny subroutines consisting of only a few ops, and since a huge slab would be quite a bit of baggage for those to carry around, the first slab is always very small. To avoid allocating too many slabs for a single CV, each subsequent slab is twice the size of the previous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c7d09052cf4af0cf4ad320357c5a1a11966392" translate="yes" xml:space="preserve">
          <source>Since numbers are actually objects, you can call all the usual methods from BigInt/BigFloat on them. This even works to some extent on expressions:</source>
          <target state="translated">Como los números son en realidad objetos,puedes llamar a todos los métodos habituales de BigInt/BigFloat en ellos.Esto incluso funciona hasta cierto punto en las expresiones:</target>
        </trans-unit>
        <trans-unit id="ae2a46b8ade0fb9460587cc2799fe61eb4a8fb37" translate="yes" xml:space="preserve">
          <source>Since perl 5.17.1</source>
          <target state="translated">Desde el perl 5.17.1</target>
        </trans-unit>
        <trans-unit id="3f51453ac56d21d59ae3e879a25ac51097e95502" translate="yes" xml:space="preserve">
          <source>Since perl does not (yet?) support constant objects, these constants are in seconds only, so you cannot, for example, do this: &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; ONE_WEEK-&amp;gt;minutes;&lt;/code&gt;</source>
          <target state="translated">Dado que perl no admite (&amp;iquest;todav&amp;iacute;a?) Objetos constantes, estas constantes son solo en segundos, por lo que no puede, por ejemplo, hacer esto: &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; ONE_WEEK-&amp;gt;minutes;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cab6e87a3c1e5785b11343a6d4dd9e12fc5fa718" translate="yes" xml:space="preserve">
          <source>Since perl does not (yet?) support constant objects, these constants are in seconds only, so you cannot, for example, do this: &lt;code&gt;print ONE_WEEK-&amp;gt;minutes;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea4faada9587774e63ccd6c739ed955f5067def" translate="yes" xml:space="preserve">
          <source>Since pi &amp;asymp; 355/116 is only accurate to 6 decimal places, you would want to say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6206d48617efe1643080f044370ee3db2757b71" translate="yes" xml:space="preserve">
          <source>Since release 1.77, CPAN.pm has been able to verify cryptographically signed module distributions using Module::Signature. The CPAN modules can be signed by their authors, thus giving more security. The simple unsigned MD5 checksums that were used before by CPAN protect mainly against accidental file corruption.</source>
          <target state="translated">Desde la versión 1.77,CPAN.pm ha sido capaz de verificar las distribuciones de módulos firmados criptográficamente usando el módulo::Signature.Los módulos del CPAN pueden ser firmados por sus autores,dando así más seguridad.Las sencillas sumas de verificación MD5 sin firmar que se usaban antes por el CPAN protegen principalmente contra la corrupción accidental de archivos.</target>
        </trans-unit>
        <trans-unit id="f410d2ff83f136d497487286db5d2eccb910e974" translate="yes" xml:space="preserve">
          <source>Since some operations can be automatically generated from others, there is a minimal set of operations that need to be overloaded in order to have the complete set of overloaded operations at one's disposal. Of course, the autogenerated operations may not do exactly what the user expects. The minimal set is:</source>
          <target state="translated">Dado que algunas operaciones pueden generarse automáticamente a partir de otras,hay un conjunto mínimo de operaciones que deben ser sobrecargadas para poder disponer del conjunto completo de operaciones sobrecargadas.Por supuesto,las operaciones autogeneradas pueden no hacer exactamente lo que el usuario espera.El conjunto mínimo es:</target>
        </trans-unit>
        <trans-unit id="9e13ee98073f6b6ff77b6bcc87f449d4c9298e6d" translate="yes" xml:space="preserve">
          <source>Since static extensions are incorporated directly into</source>
          <target state="translated">Dado que las extensiones estáticas se incorporan directamente en</target>
        </trans-unit>
        <trans-unit id="a88aba659efeb2d72344fd5945ed041580ceab14" translate="yes" xml:space="preserve">
          <source>Since storage is performed recursively, you might want to stuff references to objects that share a lot of common data into a single array or hash table, and then store that object. That way, when you retrieve back the whole thing, the objects will continue to share what they originally shared.</source>
          <target state="translated">Dado que el almacenamiento se realiza de forma recursiva,es posible que desee rellenar las referencias a los objetos que comparten muchos datos comunes en una única matriz o tabla hash,y luego almacenar ese objeto.De esa manera,cuando recuperes todo,los objetos continuarán compartiendo lo que originalmente compartieron.</target>
        </trans-unit>
        <trans-unit id="9ba4735b13fee2b9416d8bafb7be0fc636ca00de" translate="yes" xml:space="preserve">
          <source>Since subroutines implementing assignment operators are not required to modify their operands (see &lt;a href=&quot;#Overloadable-Operations&quot;&gt;&quot;Overloadable Operations&quot;&lt;/a&gt; above), we do not need anything special to make &lt;code&gt;+=&lt;/code&gt; and friends work, besides adding these operators to %subr and defining a copy constructor (needed since Perl has no way to know that the implementation of &lt;code&gt;'+='&lt;/code&gt; does not mutate the argument - see &lt;a href=&quot;#Copy-Constructor&quot;&gt;&quot;Copy Constructor&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b31e0831fe480c7543658e6a5c02d003d2e334" translate="yes" xml:space="preserve">
          <source>Since subroutines implementing assignment operators are not required to modify their operands (see &lt;a href=&quot;#Overloadable-Operations&quot;&gt;Overloadable Operations&lt;/a&gt; above), we do not need anything special to make &lt;code&gt;+=&lt;/code&gt; and friends work, besides adding these operators to %subr and defining a copy constructor (needed since Perl has no way to know that the implementation of &lt;code&gt;'+='&lt;/code&gt; does not mutate the argument - see &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;).</source>
          <target state="translated">Dado que las subrutinas que implementan operadores de asignaci&amp;oacute;n no necesitan modificar sus operandos (ver &lt;a href=&quot;#Overloadable-Operations&quot;&gt;Operaciones sobrecargadas&lt;/a&gt; arriba), no necesitamos nada especial para hacer que &lt;code&gt;+=&lt;/code&gt; y amigos funcionen, adem&amp;aacute;s de agregar estos operadores a% subr y definir un constructor de copia (necesario ya que Perl ha no hay forma de saber que la implementaci&amp;oacute;n de &lt;code&gt;'+='&lt;/code&gt; no muta el argumento (consulte &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copiar constructor&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="39828fbb336c2f70993a4540589d36ff13c1f2fe" translate="yes" xml:space="preserve">
          <source>Since such a construct is equivalent to using an empty string, you are recommended to remove such &lt;code&gt;\N{}&lt;/code&gt; constructs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24efb6846ccb0dd586c9a2d632cd24665dcacdba" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; method treats the &lt;code&gt;$VERSION&lt;/code&gt; number as a simple numeric value it will regard version 1.10 as lower than 1.9. For this reason it is strongly recommended that you use numbers with at least two decimal places, e.g., 1.09.</source>
          <target state="translated">Dado que el m&amp;eacute;todo &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; trata el n&amp;uacute;mero &lt;code&gt;$VERSION&lt;/code&gt; como un valor num&amp;eacute;rico simple, considerar&amp;aacute; la versi&amp;oacute;n 1.10 como menor que 1.9. Por esta raz&amp;oacute;n, se recomienda encarecidamente que utilice n&amp;uacute;meros con al menos dos lugares decimales, por ejemplo, 1.09.</target>
        </trans-unit>
        <trans-unit id="9984a40959f39d46f91cc9c90e354da67e76965d" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;ops&lt;/code&gt; pragma currently has an irreversible global effect, it is only of significant practical use with the &lt;code&gt;-M&lt;/code&gt; option on the command line.</source>
          <target state="translated">Dado que &lt;code&gt;ops&lt;/code&gt; pragma actualmente tiene un efecto global irreversible, solo tiene un uso pr&amp;aacute;ctico significativo con la opci&amp;oacute;n &lt;code&gt;-M&lt;/code&gt; en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="953376be0c1beefb5a7844380d81b187b71cbf9b" translate="yes" xml:space="preserve">
          <source>Since the CV takes ownership of its slab when flagged, that flag is never copied when a CV is cloned, as one CV could free a slab that another CV still points to, since forced freeing of ops ignores the reference count (but asserts that it looks right).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926a29507017e24c08c49eb96c57773fd03c95dd" translate="yes" xml:space="preserve">
          <source>Since the MD5 algorithm is byte oriented you might only add bits as multiples of 8, so you probably want to just use add() instead. The add_bits() method is provided for compatibility with other digest implementations. See &lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt; for description of the arguments that add_bits() take.</source>
          <target state="translated">Dado que el algoritmo MD5 est&amp;aacute; orientado a bytes, es posible que solo agregue bits como m&amp;uacute;ltiplos de 8, por lo que probablemente desee usar add () en su lugar. El m&amp;eacute;todo add_bits () se proporciona por compatibilidad con otras implementaciones de resumen. Consulte el &lt;a href=&quot;../digest&quot;&gt;resumen&lt;/a&gt; para obtener una descripci&amp;oacute;n de los argumentos que toma add_bits ().</target>
        </trans-unit>
        <trans-unit id="b38cceb121fc001ce43895b005634147912b7f28" translate="yes" xml:space="preserve">
          <source>Since the MD5 algorithm is byte oriented you might only add bits as multiples of 8, so you probably want to just use add() instead. The add_bits() method is provided for compatibility with other digest implementations. See &lt;a href=&quot;digest&quot;&gt;Digest&lt;/a&gt; for description of the arguments that add_bits() take.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf00ba41dfb6029d72bbfa314d984c685681962" translate="yes" xml:space="preserve">
          <source>Since the MD5 algorithm is only defined for strings of bytes, it can not be used on strings that contains chars with ordinal number above 255 (Unicode strings). The MD5 functions and methods will croak if you try to feed them such input data:</source>
          <target state="translated">Dado que el algoritmo MD5 sólo está definido para cadenas de bytes,no puede utilizarse en cadenas que contengan caracteres con número ordinal superior a 255 (cadenas Unicode).Las funciones y métodos del MD5 se estropearán si se intenta alimentarlos con tales datos de entrada:</target>
        </trans-unit>
        <trans-unit id="4504893c7038fe54de5cf229bf7abc99b79c512f" translate="yes" xml:space="preserve">
          <source>Since the Perl extension DLLs are always loaded with the full path, there is no need to mangle their names in a version-specific ways: their directory already reflects the corresponding version of perl, and @INC takes into account binary compatibility with older version. Starting from &lt;code&gt;5.6.2&lt;/code&gt; the name mangling scheme is fixed to be the same as for Perl 5.005_53 (same as in a popular binary release). Thus new Perls will be able to</source>
          <target state="translated">Dado que las DLL de extensi&amp;oacute;n de Perl siempre se cargan con la ruta completa, no es necesario modificar sus nombres de una manera espec&amp;iacute;fica de la versi&amp;oacute;n: su directorio ya refleja la versi&amp;oacute;n correspondiente de perl, y @INC tiene en cuenta la compatibilidad binaria con la versi&amp;oacute;n anterior. A partir de &lt;code&gt;5.6.2&lt;/code&gt; , el esquema de modificaci&amp;oacute;n de nombres se fija para que sea el mismo que para Perl 5.005_53 (igual que en una versi&amp;oacute;n binaria popular). As&amp;iacute;, las nuevas Perls podr&amp;aacute;n</target>
        </trans-unit>
        <trans-unit id="d9753e3adbb08c389f10d17cb835e755759949e1" translate="yes" xml:space="preserve">
          <source>Since the VMS linker distinguishes symbols based only on the first 31 characters of their names, it is occasionally necessary to shorten symbol names in order to avoid collisions. (This is especially true of names generated by xsubpp, since prefixes generated by nested package names can become quite long.) &lt;code&gt;ExtUtils::XSSymSet&lt;/code&gt; provides functions to shorten names in a consistent fashion, and to track a set of names to insure that each is unique. While designed with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bc7c77475d3cf936d8648a172f314719ec1f56" translate="yes" xml:space="preserve">
          <source>Since the first character of $x matched the regex, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="translated">Dado que el primer car&amp;aacute;cter de $ x coincid&amp;iacute;a con la expresi&amp;oacute;n regular, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; a&amp;ntilde;adi&amp;oacute; un elemento inicial vac&amp;iacute;o a la lista.</target>
        </trans-unit>
        <trans-unit id="e30d9369cb9f674a0338e525db18f9f146fc0752" translate="yes" xml:space="preserve">
          <source>Since the first character of $x matched the regex, &lt;code&gt;split&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2334de3a289af7777d7979b79868746517ddea3f" translate="yes" xml:space="preserve">
          <source>Since the first character of $x matched the regexp, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="translated">Dado que el primer car&amp;aacute;cter de $ x coincid&amp;iacute;a con la expresi&amp;oacute;n regular, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; a&amp;ntilde;adi&amp;oacute; un elemento inicial vac&amp;iacute;o a la lista.</target>
        </trans-unit>
        <trans-unit id="dfb32be28d90dd8cfadf42b0da79f140a1aebe0c" translate="yes" xml:space="preserve">
          <source>Since the first character of &lt;code&gt;$x&lt;/code&gt; matched the regexp, &lt;code&gt;split&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9108eba2d411db85e70e8df1569d830e2a5d25c" translate="yes" xml:space="preserve">
          <source>Since the fork() emulation runs code in multiple threads, extensions calling into non-thread-safe libraries may not work reliably when calling fork(). As Perl's threading support gradually becomes more widely adopted even on platforms with a native fork(), such extensions are expected to be fixed for thread-safety.</source>
          <target state="translated">Dado que la emulación de fork()ejecuta código en múltiples hilos,las extensiones que llaman a librerías no seguras para los hilos pueden no funcionar de forma fiable al llamar a fork().A medida que el soporte de hilos de Perl se va adoptando gradualmente más ampliamente incluso en plataformas con un fork()nativo,se espera que tales extensiones se arreglen para la seguridad de los hilos.</target>
        </trans-unit>
        <trans-unit id="b5c6d6292298eef29abac825fb611cdb8dbc410b" translate="yes" xml:space="preserve">
          <source>Since the logging doesn't use PerlIO, all SV allocations are logged and no extra SV allocations are introduced by enabling the logging. If compiled with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; , the serial number for each SV allocation is also logged.</source>
          <target state="translated">Dado que el registro no usa PerlIO, todas las asignaciones de SV se registran y no se introducen asignaciones de SV adicionales al habilitar el registro. Si se compila con &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; , tambi&amp;eacute;n se registra el n&amp;uacute;mero de serie para cada asignaci&amp;oacute;n de SV.</target>
        </trans-unit>
        <trans-unit id="3e539eeb6fc84357572fa6a057c29a86c8133533" translate="yes" xml:space="preserve">
          <source>Since the logging doesn't use PerlIO, all SV allocations are logged and no extra SV allocations are introduced by enabling the logging. If compiled with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt;, the serial number for each SV allocation is also logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3279571aa6d0a69a5a2abdeb30f262cc44dbbdae" translate="yes" xml:space="preserve">
          <source>Since the match operator &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, the substitution operator &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, and the regular expression quoting operator &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; are double-quotish constructs, you can interpolate variables into the pattern. See the answer to &quot;How can I quote a variable to use in a regex?&quot; for more details.</source>
          <target state="translated">Dado que el operador de coincidencia &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , el operador de sustituci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; y el operador de comillas de expresi&amp;oacute;n regular &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; son construcciones de comillas dobles, puede interpolar variables en el patr&amp;oacute;n. Vea la respuesta a &quot;&amp;iquest;C&amp;oacute;mo puedo citar una variable para usar en una expresi&amp;oacute;n regular?&quot; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="7344ea0eab36d0c1c0f9a8a859bf628b21f3791b" translate="yes" xml:space="preserve">
          <source>Since the match operator &lt;code&gt;m//&lt;/code&gt;, the substitution operator &lt;code&gt;s///&lt;/code&gt;, and the regular expression quoting operator &lt;code&gt;qr//&lt;/code&gt; are double-quotish constructs, you can interpolate variables into the pattern. See the answer to &quot;How can I quote a variable to use in a regex?&quot; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b10458d44f04e31c63c483bc8240735b5e37c7" translate="yes" xml:space="preserve">
          <source>Since the null filehandle uses the two argument form of &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; it interprets special characters, so if you have a script like this:</source>
          <target state="translated">Dado que el identificador de archivo nulo usa la forma de dos argumentos de &lt;a href=&quot;functions/open&quot;&gt;abrir&lt;/a&gt; , interpreta caracteres especiales, por lo que si tiene un script como este:</target>
        </trans-unit>
        <trans-unit id="66fb7ce305be412987d9aacf9b06a1422f1fe031" translate="yes" xml:space="preserve">
          <source>Since the null filehandle uses the two argument form of &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt; it interprets special characters, so if you have a script like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd81accbd1bb6c167fba1a41e5f2407058ac7a87" translate="yes" xml:space="preserve">
          <source>Since the object is also a hash, you can treat it as one, using it to store data associated with the object. Typically, code inside the class can treat the hash as an accessible data structure, while code outside the class should always treat the object as opaque. This is called &lt;b&gt;encapsulation&lt;/b&gt;. Encapsulation means that the user of an object does not have to know how it is implemented. The user simply calls documented methods on the object.</source>
          <target state="translated">Dado que el objeto tambi&amp;eacute;n es un hash, puede tratarlo como uno y usarlo para almacenar datos asociados con el objeto. Normalmente, el c&amp;oacute;digo dentro de la clase puede tratar el hash como una estructura de datos accesible, mientras que el c&amp;oacute;digo fuera de la clase siempre debe tratar el objeto como opaco. A esto se le llama &lt;b&gt;encapsulaci&amp;oacute;n&lt;/b&gt; . La encapsulaci&amp;oacute;n significa que el usuario de un objeto no tiene que saber c&amp;oacute;mo se implementa. El usuario simplemente llama a m&amp;eacute;todos documentados en el objeto.</target>
        </trans-unit>
        <trans-unit id="db12f27020b74e90b153b0c7282afabc69308986" translate="yes" xml:space="preserve">
          <source>Since the original &lt;code&gt;big5&lt;/code&gt; encoding (1984) is not supported anywhere (glibc and DOS-based systems uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;big5-eten&lt;/code&gt; ; Microsoft uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;cp950&lt;/code&gt; ), a conscious decision was made to alias &lt;code&gt;big5&lt;/code&gt; to &lt;code&gt;big5-eten&lt;/code&gt; , which is the de facto superset of the original big5.</source>
          <target state="translated">Dado que la codificaci&amp;oacute;n &lt;code&gt;big5&lt;/code&gt; original (1984) no se admite en ning&amp;uacute;n lugar (los sistemas basados ​​en glibc y DOS usan &lt;code&gt;big5&lt;/code&gt; para significar &lt;code&gt;big5-eten&lt;/code&gt; ; Microsoft usa &lt;code&gt;big5&lt;/code&gt; para significar &lt;code&gt;cp950&lt;/code&gt; ), se tom&amp;oacute; una decisi&amp;oacute;n consciente de alias &lt;code&gt;big5&lt;/code&gt; a &lt;code&gt;big5-eten&lt;/code&gt; , que es el superconjunto de facto del big5 original.</target>
        </trans-unit>
        <trans-unit id="d8d087310b96c8a2161d52fb071f50cb14fd5ed5" translate="yes" xml:space="preserve">
          <source>Since the original &lt;code&gt;big5&lt;/code&gt; encoding (1984) is not supported anywhere (glibc and DOS-based systems uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;big5-eten&lt;/code&gt;; Microsoft uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;cp950&lt;/code&gt;), a conscious decision was made to alias &lt;code&gt;big5&lt;/code&gt; to &lt;code&gt;big5-eten&lt;/code&gt;, which is the de facto superset of the original big5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e096824f5ca19792394259581d18c44d0fb48327" translate="yes" xml:space="preserve">
          <source>Since the path separators are different on some operating systems ('/' on Unix, ':' on MacPerl, etc...) we recommend you use the File::Spec modules wherever portability is a concern.</source>
          <target state="translated">Como los separadores de ruta son diferentes en algunos sistemas operativos ('/' en Unix,':' en MacPerl,etc...)recomendamos usar los módulos File::Spec siempre que la portabilidad sea una preocupación.</target>
        </trans-unit>
        <trans-unit id="8b814beacf19306d64e3fcdb9e9e2ebc37bd2f9a" translate="yes" xml:space="preserve">
          <source>Since the return value of EXPR is executed as a block within the lexical context of the current Perl program, any outer lexical variables are visible to it, and any package variable settings or subroutine and format definitions remain afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc1d2d6e3b782b2dd5e1481aef1464f9b2e04bc" translate="yes" xml:space="preserve">
          <source>Since the scope wasn't lexical, other modules' use of &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">Dado que el alcance no era l&amp;eacute;xico, el uso de &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; , de otros m&amp;oacute;dulos</target>
        </trans-unit>
        <trans-unit id="a424c04edb43b51178f65103d1803116d4fd0aaa" translate="yes" xml:space="preserve">
          <source>Since the scope wasn't lexical, other modules' use of &lt;code&gt;chr&lt;/code&gt;, &lt;code&gt;ord&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b947b7b4bc7b90e1cd94b89023d67ed8fe406b" translate="yes" xml:space="preserve">
          <source>Since the symbols listed within &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; must also appear in either &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; , two utility functions are provided which allow you to easily add tagged sets of symbols to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; :</source>
          <target state="translated">Dado que los s&amp;iacute;mbolos enumerados dentro de &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; tambi&amp;eacute;n deben aparecer en &lt;code&gt;@EXPORT&lt;/code&gt; o &lt;code&gt;@EXPORT_OK&lt;/code&gt; , se proporcionan dos funciones de utilidad que le permiten agregar f&amp;aacute;cilmente conjuntos de s&amp;iacute;mbolos etiquetados a &lt;code&gt;@EXPORT&lt;/code&gt; o &lt;code&gt;@EXPORT_OK&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="12348ccf02ace58fde57dcb8fdfe6146a5174932" translate="yes" xml:space="preserve">
          <source>Since the symbols listed within &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; must also appear in either &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt;, two utility functions are provided which allow you to easily add tagged sets of symbols to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1ad4491daa19cab8cfcffcbf76d31fdb6dedaa" translate="yes" xml:space="preserve">
          <source>Since the text to insert should be different in &lt;code&gt;bytes&lt;/code&gt; mode and out of it, the function should check the current state of &lt;code&gt;bytes&lt;/code&gt; -flag as in:</source>
          <target state="translated">Dado que el texto a insertar debe ser diferente en el modo de &lt;code&gt;bytes&lt;/code&gt; y fuera de &amp;eacute;l, la funci&amp;oacute;n debe verificar el estado actual de &lt;code&gt;bytes&lt;/code&gt; -flag como en:</target>
        </trans-unit>
        <trans-unit id="a18ac7a6a5b44dc9939056baa28ada3143807b7e" translate="yes" xml:space="preserve">
          <source>Since the text to insert should be different in &lt;code&gt;bytes&lt;/code&gt; mode and out of it, the function should check the current state of &lt;code&gt;bytes&lt;/code&gt;-flag as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57f88b4da7c64e61f7bcbc6480133424225f899" translate="yes" xml:space="preserve">
          <source>Since the total size of all Perl SIS files once installed is over 2 MB, it is recommended to do the installation into a memory card (drive E:) instead of the C: drive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50530d766e72e0b6fff4d2cca6e94d3aad2090a6" translate="yes" xml:space="preserve">
          <source>Since there are relatively few objects in a picture, there are only a few colors, which get looked up over and over again. Memoizing &lt;code&gt;ColorToRGB&lt;/code&gt; sped up the program by several percent.</source>
          <target state="translated">Dado que hay relativamente pocos objetos en una imagen, solo hay unos pocos colores, que se buscan una y otra vez. Memorizar &lt;code&gt;ColorToRGB&lt;/code&gt; aceler&amp;oacute; el programa en varios por ciento.</target>
        </trans-unit>
        <trans-unit id="6cb6a83a2f2c3167da777a122214abb67623928e" translate="yes" xml:space="preserve">
          <source>Since there are so many, they are presented in table format with languages and corresponding encoding names by vendors. Note that the table is sorted in order of ISO-8859 and the corresponding vendor mappings are slightly different from that of ISO. See &lt;a href=&quot;http://czyborra.com/charsets/iso8859.html&quot;&gt;http://czyborra.com/charsets/iso8859.html&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29f8659dcd90c4211c87b64479756be9287fa54" translate="yes" xml:space="preserve">
          <source>Since there is a bijection between a point in the 2D plane and a complex number (i.e. the mapping is unique and reciprocal), a complex number can also be uniquely identified with polar coordinates:</source>
          <target state="translated">Dado que existe una bijección entre un punto en el plano 2D y un número complejo (es decir,la cartografía es única y recíproca),un número complejo también puede identificarse de manera única con coordenadas polares:</target>
        </trans-unit>
        <trans-unit id="bc706817bd3a8e95c1023efd45beb0908b6a5e49" translate="yes" xml:space="preserve">
          <source>Since these aren't legal POSIX class specifications, but are legal bracketed character classes, Perl treats them as the latter. In the first example, it matches the characters &lt;code&gt;&quot;:&quot;&lt;/code&gt;, &lt;code&gt;&quot;[&quot;&lt;/code&gt;, &lt;code&gt;&quot;a&quot;&lt;/code&gt;, &lt;code&gt;&quot;l&quot;&lt;/code&gt;, &lt;code&gt;&quot;m&quot;&lt;/code&gt;, &lt;code&gt;&quot;n&quot;&lt;/code&gt;, and &lt;code&gt;&quot;u&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3716c24306b4924201a3a983711259349f4d7b7c" translate="yes" xml:space="preserve">
          <source>Since these functions are different for most operating systems, each set of OS specific routines is available in a separate module, including:</source>
          <target state="translated">Dado que estas funciones son diferentes para la mayoría de los sistemas operativos,cada conjunto de rutinas específicas de los sistemas operativos está disponible en un módulo separado,incluyendo:</target>
        </trans-unit>
        <trans-unit id="61e7fa1fca7db47b0de02fb29d8bdc7a036c2ad4" translate="yes" xml:space="preserve">
          <source>Since these macros have side-effects don't use them as arguments to macros that may evaluate their argument several times, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d20e57f802de1056f71e94f07efcc76036480f" translate="yes" xml:space="preserve">
          <source>Since things like &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;1 / 3&lt;/code&gt; must presented with a limited accuracy lest a operation consumes all resources, each operation produces no more than the requested number of digits.</source>
          <target state="translated">Dado que elementos como &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;1 / 3&lt;/code&gt; deben presentarse con una precisi&amp;oacute;n limitada para que una operaci&amp;oacute;n no consuma todos los recursos, cada operaci&amp;oacute;n no produce m&amp;aacute;s del n&amp;uacute;mero solicitado de d&amp;iacute;gitos.</target>
        </trans-unit>
        <trans-unit id="55385d26f11babeaaffc540cfe07e740a0d30a4d" translate="yes" xml:space="preserve">
          <source>Since things like &lt;code&gt;sqrt(2)&lt;/code&gt; or &lt;code&gt;1 / 3&lt;/code&gt; must presented with a limited accuracy lest a operation consumes all resources, each operation produces no more than the requested number of digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a21b989b9d575d7d2eef7cf2bea0c2bc7b6c1e" translate="yes" xml:space="preserve">
          <source>Since this document was first written, the convention has become more and more to use hexadecimal notation for code points. To do this with the recipes and to also sort is a multi-step process, so here, for convenience, is the table from above, re-sorted to be in Code Page 1047 order, and using hex notation.</source>
          <target state="translated">Desde que este documento fue escrito por primera vez,la convención se ha convertido cada vez más en utilizar la notación hexadecimal para los puntos de código.Hacer esto con las recetas y también clasificar es un proceso de varios pasos,así que aquí,por comodidad,está la tabla de arriba,reordenada para estar en el orden de la página de códigos 1047,y usando la notación hexadecimal.</target>
        </trans-unit>
        <trans-unit id="ef4f428bd8f59049b7e023a3a37d2ecfa135c01b" translate="yes" xml:space="preserve">
          <source>Since this is 0.something release, any future releases are almost guaranteed to be binary incompatible. As a sign of this the Symbian symbol exports are kept unfrozen and the .def files fully rebuilt every time.</source>
          <target state="translated">Como se trata de una versión 0.something,cualquier versión futura está casi garantizada como binaria incompatible.Como señal de esto,las exportaciones de símbolos Symbian se mantienen descongeladas y los archivos .def se reconstruyen completamente cada vez.</target>
        </trans-unit>
        <trans-unit id="a29b3865557e1b6dfb498bcdde9cd5a7a83c05b9" translate="yes" xml:space="preserve">
          <source>Since this module is most often used only indirectly from extension &lt;code&gt;Makefile.PL&lt;/code&gt; files, here is an example &lt;code&gt;Makefile.PL&lt;/code&gt; entry to add a library to the build process for an extension:</source>
          <target state="translated">Dado que este m&amp;oacute;dulo se usa con mayor frecuencia solo indirectamente desde los archivos de extensi&amp;oacute;n &lt;code&gt;Makefile.PL&lt;/code&gt; , aqu&amp;iacute; hay un ejemplo de entrada &lt;code&gt;Makefile.PL&lt;/code&gt; para agregar una biblioteca al proceso de compilaci&amp;oacute;n de una extensi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="01f476f0532c2e2f8ff2160a3485f37336e92c5d" translate="yes" xml:space="preserve">
          <source>Since this module refers to perl core's Unicode database in the directory</source>
          <target state="translated">Como este módulo se refiere a la base de datos Unicode del núcleo de Perl en el directorio</target>
        </trans-unit>
        <trans-unit id="e87fdde57834ef3e5b68a023cf000c8017fe6842" translate="yes" xml:space="preserve">
          <source>Since this procedure may take quite a long time to complete, it makes sense to &quot;freeze&quot; your CPAN configuration by disabling periodic updates of the local copy of CPAN index: set &lt;code&gt;index_expire&lt;/code&gt; to some big value (I use 365), then save the settings</source>
          <target state="translated">Dado que este procedimiento puede tardar bastante en completarse, tiene sentido &quot;congelar&quot; su configuraci&amp;oacute;n de CPAN desactivando las actualizaciones peri&amp;oacute;dicas de la copia local del &amp;iacute;ndice de CPAN: establezca &lt;code&gt;index_expire&lt;/code&gt; en un valor grande (yo uso 365), luego guarde la configuraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="db30ab250873c1062c4781e4e7b7fad867ddcab0" translate="yes" xml:space="preserve">
          <source>Since this will lead to issues as described above.</source>
          <target state="translated">Ya que esto llevará a cuestiones como las descritas anteriormente.</target>
        </trans-unit>
        <trans-unit id="5b8353c61df27001cdfae1689cea0393e824247d" translate="yes" xml:space="preserve">
          <source>Since threads are also subroutines, they can return values. To wait for a thread to exit and extract any values it might return, you can use the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; method:</source>
          <target state="translated">Dado que los hilos tambi&amp;eacute;n son subrutinas, pueden devolver valores. Para esperar a que un hilo salga y extraiga cualquier valor que pueda devolver, puede usar el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9bad1409df4464c147cc94bb57065c1ad067150c" translate="yes" xml:space="preserve">
          <source>Since threads are also subroutines, they can return values. To wait for a thread to exit and extract any values it might return, you can use the &lt;code&gt;join()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865359543cead83315159b60389211a49302275e" translate="yes" xml:space="preserve">
          <source>Since to call certain OS/2 API one needs to have a correctly initialized &lt;code&gt;Win&lt;/code&gt; subsystem, OS/2-specific extensions may require getting &lt;code&gt;HAB&lt;/code&gt; s and &lt;code&gt;HMQ&lt;/code&gt; s. If an extension would do it on its own, another extension could fail to initialize.</source>
          <target state="translated">Dado que para llamar a cierta API de OS / 2 es necesario tener un subsistema &lt;code&gt;Win&lt;/code&gt; correctamente inicializado , las extensiones espec&amp;iacute;ficas de OS / 2 pueden requerir la obtenci&amp;oacute;n de &lt;code&gt;HAB&lt;/code&gt; sy &lt;code&gt;HMQ&lt;/code&gt; . Si una extensi&amp;oacute;n lo hiciera por s&amp;iacute; sola, otra extensi&amp;oacute;n podr&amp;iacute;a fallar al inicializar.</target>
        </trans-unit>
        <trans-unit id="a707076963b2deddc0e47770d659e4e4346ffd5b" translate="yes" xml:space="preserve">
          <source>Since to call certain OS/2 API one needs to have a correctly initialized &lt;code&gt;Win&lt;/code&gt; subsystem, OS/2-specific extensions may require getting &lt;code&gt;HAB&lt;/code&gt;s and &lt;code&gt;HMQ&lt;/code&gt;s. If an extension would do it on its own, another extension could fail to initialize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac123183aa461484cfbda02f53a1d46605cce417" translate="yes" xml:space="preserve">
          <source>Since v1.24 the &lt;b&gt;Pod::Checker&lt;/b&gt; module uses only the &lt;b&gt;poderror&lt;/b&gt; method to print errors and warnings. The summary output (e.g. &quot;Pod syntax OK&quot;) has been dropped from the module and has been included in &lt;b&gt;podchecker&lt;/b&gt; (the script). This allows users of &lt;b&gt;Pod::Checker&lt;/b&gt; to control completely the output behavior. Users of &lt;b&gt;podchecker&lt;/b&gt; (the script) get the well-known behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c16cb5be350777f69ddd741df453e37c786546" translate="yes" xml:space="preserve">
          <source>Since v5.6.0, Perl's CORE::glob() is implemented in terms of bsd_glob(). Note that they don't share the same prototype--CORE::glob() only accepts a single argument. Due to historical reasons, CORE::glob() will also split its argument on whitespace, treating it as multiple patterns, whereas bsd_glob() considers them as one pattern. But see &lt;code&gt;:bsd_glob&lt;/code&gt; under &lt;a href=&quot;#EXPORTS&quot;&gt;&quot;EXPORTS&quot;&lt;/a&gt;, below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993c2506a3b501e251a227378341211573ee7139" translate="yes" xml:space="preserve">
          <source>Since v5.6.0, Perl's CORE::glob() is implemented in terms of bsd_glob(). Note that they don't share the same prototype--CORE::glob() only accepts a single argument. Due to historical reasons, CORE::glob() will also split its argument on whitespace, treating it as multiple patterns, whereas bsd_glob() considers them as one pattern. But see &lt;code&gt;:bsd_glob&lt;/code&gt; under &lt;a href=&quot;#EXPORTS&quot;&gt;EXPORTS&lt;/a&gt;, below.</source>
          <target state="translated">Desde v5.6.0, CORE :: glob () de Perl se implementa en t&amp;eacute;rminos de bsd_glob (). Tenga en cuenta que no comparten el mismo prototipo: CORE :: glob () solo acepta un &amp;uacute;nico argumento. Debido a razones hist&amp;oacute;ricas, CORE :: glob () tambi&amp;eacute;n dividir&amp;aacute; su argumento en espacios en blanco, trat&amp;aacute;ndolo como patrones m&amp;uacute;ltiples, mientras que bsd_glob () los considera como un patr&amp;oacute;n. Pero vea &lt;code&gt;:bsd_glob&lt;/code&gt; en &lt;a href=&quot;#EXPORTS&quot;&gt;EXPORTACIONES&lt;/a&gt; , a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4ad68534057bbff035849577fdc9d02265e92498" translate="yes" xml:space="preserve">
          <source>Since valgrind adds significant overhead, tests will take much longer to run. The valgrind tests support being run in parallel to help with this:</source>
          <target state="translated">Como Valgrind añade una carga significativa,las pruebas tardarán mucho más tiempo en realizarse.Las pruebas de valgrind admiten ser ejecutadas en paralelo para ayudar con esto:</target>
        </trans-unit>
        <trans-unit id="cddab41a34bae01a0c375cc55e93affd1f3991b2" translate="yes" xml:space="preserve">
          <source>Since version 1.26.</source>
          <target state="translated">Desde la versión 1.26.</target>
        </trans-unit>
        <trans-unit id="6b04b338e1bf6330ffba84da282f69c260eb86f1" translate="yes" xml:space="preserve">
          <source>Since version 1.29.</source>
          <target state="translated">Desde la versión 1.29.</target>
        </trans-unit>
        <trans-unit id="90fa8ea868e9b39ffa1222c302c6573df472b992" translate="yes" xml:space="preserve">
          <source>Since version 1.30.</source>
          <target state="translated">Desde la versión 1.30.</target>
        </trans-unit>
        <trans-unit id="b46b7661e42d1c9773df584f5695782bec0ddb2f" translate="yes" xml:space="preserve">
          <source>Since version 1.33.</source>
          <target state="translated">Desde la versión 1.33.</target>
        </trans-unit>
        <trans-unit id="4b40436a29419119d4b78bb2f402e947b823a0e2" translate="yes" xml:space="preserve">
          <source>Since version 1.35.</source>
          <target state="translated">Desde la versión 1.35.</target>
        </trans-unit>
        <trans-unit id="3a2c4273e02619f5ed86c67adac94047a5ca0b70" translate="yes" xml:space="preserve">
          <source>Since version 1.36.</source>
          <target state="translated">Desde la versión 1.36.</target>
        </trans-unit>
        <trans-unit id="828428c704d4b18c115ba845d9cbbc499bb7c74e" translate="yes" xml:space="preserve">
          <source>Since version 1.40.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623e941c243fc86dd1af6f5b5214ee2ab1b54b93" translate="yes" xml:space="preserve">
          <source>Since version 1.42.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0995e25b2df10d5239bf46e745e3af66bfa38ff9" translate="yes" xml:space="preserve">
          <source>Since version 1.44.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fc2cbdcb50a3cca10d3657cdf7b3d3b631c2f4" translate="yes" xml:space="preserve">
          <source>Since version 1.45.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20faedc97370e5707a72fd235e65122603a7fcc7" translate="yes" xml:space="preserve">
          <source>Since version 1.50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a1a8817578d6cd5474a6b1a0cb684b5b5d0681" translate="yes" xml:space="preserve">
          <source>Since version 1.54.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ea051224d185be13b4a3d24b650c0164b10687" translate="yes" xml:space="preserve">
          <source>Since version 1.55.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefe381ec383217e51c9e6b76ef75c74617d1b90" translate="yes" xml:space="preserve">
          <source>Since version 2.22 (part of Encode 2.83), the MIME encoder should be fully compliant to &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2231&quot;&gt;RFC 2231&lt;/a&gt;. Due to the aforementioned bugs in previous versions of the MIME encoder, there is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991cb9597f8a402ad66b55672ad9333f3ec6c358" translate="yes" xml:space="preserve">
          <source>Since version 2.91_01, JSON::PP uses a different number detection logic that converts a scalar that is possible to turn into a number safely. The new logic is slightly faster, and tends to help people who use older perl or who want to encode complicated data structure. However, this may results in a different JSON text from the one JSON::XS encodes (and thus may break tests that compare entire JSON texts). If you do need the previous behavior for compatibility or for finer control, set PERL_JSON_PP_USE_B environmental variable to true before you &lt;code&gt;use&lt;/code&gt; JSON::PP (or JSON.pm).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2498504f50455260e9635ae498353ef8c9decaca" translate="yes" xml:space="preserve">
          <source>Since version 5.8 Perl uses the PerlIO I/O library. This enables you to use different encodings per IO channel. For example you may use</source>
          <target state="translated">Desde la versión 5.8,Perl utiliza la biblioteca de E/S de PerlIO.Esto le permite usar diferentes codificaciones por canal IO.Por ejemplo,puede utilizar</target>
        </trans-unit>
        <trans-unit id="656ca296455da01a08e031bd90f196ae0bd4a55c" translate="yes" xml:space="preserve">
          <source>Since version 5.8 Perl uses the new PerlIO on BS2000. This enables you using different encodings per IO channel. For example you may use</source>
          <target state="translated">Desde la versión 5.8,Perl utiliza el nuevo PerlIO en BS2000.Esto le permite usar diferentes codificaciones por canal IO.Por ejemplo,puede usar</target>
        </trans-unit>
        <trans-unit id="5792847b18d8585cbe32d073b79aab824b6fbb3d" translate="yes" xml:space="preserve">
          <source>Since version 5.8.0, hashes can be</source>
          <target state="translated">Desde la versión 5.8.0,los hashes pueden ser</target>
        </trans-unit>
        <trans-unit id="a80731504bb0fcf1278621181ce230d90a8fe55c" translate="yes" xml:space="preserve">
          <source>Since version &lt;code&gt;1.39&lt;/code&gt; these &lt;code&gt;ARRAY&lt;/code&gt; references are blessed objects, recognising the two methods &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. The following code is equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3045986b0102a2064e1410bb295874d9fe22b31d" translate="yes" xml:space="preserve">
          <source>Since version &lt;code&gt;1.39&lt;/code&gt; these ARRAY references are blessed objects, recognising the two methods &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; . The following code is equivalent:</source>
          <target state="translated">Desde la versi&amp;oacute;n &lt;code&gt;1.39&lt;/code&gt; , estas referencias de ARRAY son objetos bendecidos, reconociendo los dos m&amp;eacute;todos &lt;code&gt;key&lt;/code&gt; y &lt;code&gt;value&lt;/code&gt; . El siguiente c&amp;oacute;digo es equivalente:</target>
        </trans-unit>
        <trans-unit id="d22b88a2ec6cf389267a717ce7fbb228afb24d03" translate="yes" xml:space="preserve">
          <source>Since version &lt;code&gt;1.51&lt;/code&gt; they also have a &lt;code&gt;TO_JSON&lt;/code&gt; method to ease serialisation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da1ba2b2bc63ba7f5a165684b362132feb79be8" translate="yes" xml:space="preserve">
          <source>Since version v1.33, Math::BigInt and Math::BigFloat have full support for accuracy and precision based rounding, both automatically after every operation, as well as manually.</source>
          <target state="translated">Desde la versión v1.33,Math::BigInt y Math::BigFloat tienen soporte completo para el redondeo basado en la exactitud y la precisión,tanto automáticamente después de cada operación,como manualmente.</target>
        </trans-unit>
        <trans-unit id="75e1e7b33ae8faf22bfba9121d2d99d1efb7768e" translate="yes" xml:space="preserve">
          <source>Since we didn't define a &lt;code&gt;save()&lt;/code&gt; method in the &lt;code&gt;File::MP3&lt;/code&gt; class, Perl will look at the &lt;code&gt;File::MP3&lt;/code&gt; class's parent classes to find the &lt;code&gt;save()&lt;/code&gt; method. If Perl cannot find a &lt;code&gt;save()&lt;/code&gt; method anywhere in the inheritance hierarchy, it will die.</source>
          <target state="translated">Como no definimos un m&amp;eacute;todo &lt;code&gt;save()&lt;/code&gt; en la clase &lt;code&gt;File::MP3&lt;/code&gt; , Perl buscar&amp;aacute; en las clases padre de la clase &lt;code&gt;File::MP3&lt;/code&gt; para encontrar el m&amp;eacute;todo &lt;code&gt;save()&lt;/code&gt; . Si Perl no puede encontrar un m&amp;eacute;todo &lt;code&gt;save()&lt;/code&gt; en ninguna parte de la jerarqu&amp;iacute;a de herencia, morir&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="3e236441f92cccda5b2d49a5d2e52d11313518e5" translate="yes" xml:space="preserve">
          <source>Since we don't have an NV for &lt;code&gt;$b&lt;/code&gt; , we'll have to use &lt;code&gt;sv_2nv&lt;/code&gt; to convert it. If we step again, we'll find ourselves there:</source>
          <target state="translated">Como no tenemos un NV para &lt;code&gt;$b&lt;/code&gt; , tendremos que usar &lt;code&gt;sv_2nv&lt;/code&gt; para convertirlo. Si damos un paso de nuevo, nos encontraremos all&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="43d65fe03aac7da5dd4ef49b28b5012afba90c77" translate="yes" xml:space="preserve">
          <source>Since we don't have an NV for &lt;code&gt;$b&lt;/code&gt;, we'll have to use &lt;code&gt;sv_2nv&lt;/code&gt; to convert it. If we step again, we'll find ourselves there:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3708f0927e1925f92bdee0634ab63e7742c6b549" translate="yes" xml:space="preserve">
          <source>Since we don't know if &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; works, or even subroutines, use ad hoc tests for these three. Step carefully to avoid using the feature being tested. Tests in</source>
          <target state="translated">Como no sabemos si &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; trabajos, o incluso subrutinas, use pruebas ad hoc para estos tres. Act&amp;uacute;e con cuidado para evitar utilizar la funci&amp;oacute;n que se est&amp;aacute; probando. Pruebas en</target>
        </trans-unit>
        <trans-unit id="959f38fbc36ca9c82998d3e370dda38e5dddb0bf" translate="yes" xml:space="preserve">
          <source>Since we don't know if &lt;code&gt;require&lt;/code&gt; works, or even subroutines, use ad hoc tests for these three. Step carefully to avoid using the feature being tested. Tests in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f9ededf0cd07d09b1ffd3609acb21770a40353" translate="yes" xml:space="preserve">
          <source>Since we feed a list of ten 2-digit hexadecimal strings to &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, the pack template should contain ten pack codes. If this is run on a computer with ASCII character coding, it will print &lt;code&gt;0123456789&lt;/code&gt; .</source>
          <target state="translated">Dado que alimentamos una lista de diez cadenas hexadecimales de 2 d&amp;iacute;gitos para &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; , la plantilla del paquete debe contener diez c&amp;oacute;digos de paquete. Si se ejecuta en una computadora con codificaci&amp;oacute;n de caracteres ASCII, imprimir&amp;aacute; &lt;code&gt;0123456789&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3e96dcf9d6747abca3c34da42f376ec3097c3d9" translate="yes" xml:space="preserve">
          <source>Since we feed a list of ten 2-digit hexadecimal strings to &lt;code&gt;pack&lt;/code&gt;, the pack template should contain ten pack codes. If this is run on a computer with ASCII character coding, it will print &lt;code&gt;0123456789&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a3bb738728020d7b3d2bd56167deba0672548c" translate="yes" xml:space="preserve">
          <source>Since we said earlier:</source>
          <target state="translated">Como dijimos antes:</target>
        </trans-unit>
        <trans-unit id="78829eafb6296e19175ed55a3097f673b5dc1d5f" translate="yes" xml:space="preserve">
          <source>Since you can assign to a list of variables, you can also assign to an array or hash slice.</source>
          <target state="translated">Como puedes asignar a una lista de variables,también puedes asignar a una matriz o a un trozo de hash.</target>
        </trans-unit>
        <trans-unit id="35b796faff1e6866bc3d8ff9ecdff8f636cea4f9" translate="yes" xml:space="preserve">
          <source>Since you only run one test per program &lt;code&gt;new&lt;/code&gt; always returns the same Test::Builder object. No matter how many times you call &lt;code&gt;new()&lt;/code&gt; , you're getting the same object. This is called a singleton. This is done so that multiple modules share such global information as the test counter and where test output is going.</source>
          <target state="translated">Dado que solo ejecuta una prueba por programa, &lt;code&gt;new&lt;/code&gt; siempre devuelve el mismo objeto Test :: Builder. No importa cu&amp;aacute;ntas veces llame a &lt;code&gt;new()&lt;/code&gt; , obtendr&amp;aacute; el mismo objeto. Esto se llama singleton. Esto se hace para que varios m&amp;oacute;dulos compartan informaci&amp;oacute;n global como el contador de prueba y hacia d&amp;oacute;nde se dirige la salida de prueba.</target>
        </trans-unit>
        <trans-unit id="d6632404c7510ee37ef12fec086b1b9886c3c039" translate="yes" xml:space="preserve">
          <source>Since you only run one test per program &lt;code&gt;new&lt;/code&gt; always returns the same Test::Builder object. No matter how many times you call &lt;code&gt;new()&lt;/code&gt;, you're getting the same object. This is called a singleton. This is done so that multiple modules share such global information as the test counter and where test output is going.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df43da3b7bd5966cc2c20737e50dc599284dd8e" translate="yes" xml:space="preserve">
          <source>Since you want to be a good programmer, you probably want to use a lexical filehandle, even though formats are designed to work with bareword filehandles since the default format names take the filehandle name. However, you can control this with some Perl special per-filehandle variables: &lt;code&gt;$^&lt;/code&gt; , which names the top-of-page format, and &lt;code&gt;$~&lt;/code&gt; which shows the line format. You have to change the default filehandle to set these variables:</source>
          <target state="translated">Dado que desea ser un buen programador, probablemente desee utilizar un identificador de archivo l&amp;eacute;xico, aunque los formatos est&amp;aacute;n dise&amp;ntilde;ados para funcionar con identificadores de archivo de palabras simples, ya que los nombres de formato predeterminados toman el nombre del identificador de archivo. Sin embargo, puede controlar esto con algunas variables de manejo especiales por archivo de Perl: &lt;code&gt;$^&lt;/code&gt; , que nombra el formato de la parte superior de la p&amp;aacute;gina, y &lt;code&gt;$~&lt;/code&gt; que muestra el formato de l&amp;iacute;nea. Debe cambiar el identificador de archivo predeterminado para establecer estas variables:</target>
        </trans-unit>
        <trans-unit id="8a72acc5d7f8358918f3a719037cabf59df13c37" translate="yes" xml:space="preserve">
          <source>Since you want to be a good programmer, you probably want to use a lexical filehandle, even though formats are designed to work with bareword filehandles since the default format names take the filehandle name. However, you can control this with some Perl special per-filehandle variables: &lt;code&gt;$^&lt;/code&gt;, which names the top-of-page format, and &lt;code&gt;$~&lt;/code&gt; which shows the line format. You have to change the default filehandle to set these variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ee6b56ac231ef340b4b0ce7a9b1c774baa56bb" translate="yes" xml:space="preserve">
          <source>Since you're assigning to a scalar, the righthand side is in scalar context. The comma operator (yes, it's an operator!) in scalar context evaluates its lefthand side, throws away the result, and evaluates it's righthand side and returns the result. In effect, that list-lookalike assigns to &lt;code&gt;$scalar&lt;/code&gt; it's rightmost value. Many people mess this up because they choose a list-lookalike whose last element is also the count they expect:</source>
          <target state="translated">Dado que est&amp;aacute; asignando a un escalar, el lado derecho est&amp;aacute; en contexto escalar. El operador de coma (&amp;iexcl;s&amp;iacute;, es un operador!) En contexto escalar eval&amp;uacute;a su lado izquierdo, descarta el resultado, eval&amp;uacute;a su lado derecho y devuelve el resultado. En efecto, ese aspecto de lista asigna a &lt;code&gt;$scalar&lt;/code&gt; su valor m&amp;aacute;s a la derecha. Mucha gente arruina esto porque eligen una lista similar cuyo &amp;uacute;ltimo elemento es tambi&amp;eacute;n el recuento que esperan:</target>
        </trans-unit>
        <trans-unit id="b1e4d1f3b6584286a7b1e87475e6b68a4163f836" translate="yes" xml:space="preserve">
          <source>Since you're using ssh, you'll have to pass some extra arguments to Configure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e2d6a9962eddfc9f09d9986a8e8b8277588e75" translate="yes" xml:space="preserve">
          <source>Since, as mentioned above, bitwise operators may take extra arguments, you may want to use something like &lt;code&gt;(lobj, robj, swap, ...)&lt;/code&gt; (with literal &lt;code&gt;...&lt;/code&gt;) as your parameter list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c0b7bdab70ca2cc9c844a0d74a3af0bbf41c3e" translate="yes" xml:space="preserve">
          <source>Singapore</source>
          <target state="translated">Singapore</target>
        </trans-unit>
        <trans-unit id="b227b1e063b8171583fca32f48c11de71e845c84" translate="yes" xml:space="preserve">
          <source>Single 8-bit characters.</source>
          <target state="translated">Un solo personaje de 8 bits.</target>
        </trans-unit>
        <trans-unit id="62539aaf022cade9262a4b6494d3943b6956e5a8" translate="yes" xml:space="preserve">
          <source>Single Byte Encodings</source>
          <target state="translated">Codificaciones de un solo byte</target>
        </trans-unit>
        <trans-unit id="4530f93a4bcf9d5873d117244d6fb7434ad7291d" translate="yes" xml:space="preserve">
          <source>Single Quotes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012b49ff1827b6d4c0bd35ca2f9e9f57f854cb53" translate="yes" xml:space="preserve">
          <source>Single form (&lt;code&gt;\p{name}&lt;/code&gt;) tighter rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8a4e28358318025ab4a8b973931c58f9de9358" translate="yes" xml:space="preserve">
          <source>Single quotes indicate the text is to be treated literally with no interpolation of its content. This is similar to single quoted strings except that backslashes have no special meaning, with &lt;code&gt;\\&lt;/code&gt; being treated as two backslashes and not one as they would in every other quoting construct.</source>
          <target state="translated">Las comillas simples indican que el texto debe tratarse literalmente sin interpolar su contenido. Esto es similar a las cadenas entre comillas simples, excepto que las barras invertidas no tienen un significado especial, y &lt;code&gt;\\&lt;/code&gt; se trata como dos barras invertidas y no una como lo har&amp;iacute;an en cualquier otra construcci&amp;oacute;n de comillas.</target>
        </trans-unit>
        <trans-unit id="2988b7ce72e4ef43941b210b5d2de77bb3a0210b" translate="yes" xml:space="preserve">
          <source>Single space after keywords that are followed by parens, no space between function name and following paren</source>
          <target state="translated">Un solo espacio después de las palabras clave que son seguidas por parens,no hay espacio entre el nombre de la función y el siguiente paren</target>
        </trans-unit>
        <trans-unit id="998773a99793919677d4844303decc2eb2f960f3" translate="yes" xml:space="preserve">
          <source>Single step. Executes until the beginning of another statement, descending into subroutine calls. If an expression is supplied that includes function calls, it too will be single-stepped.</source>
          <target state="translated">Un solo paso.Se ejecuta hasta el comienzo de otra declaración,descendiendo a las llamadas de subrutinas.Si se suministra una expresión que incluye llamadas a funciones,también será de un solo paso.</target>
        </trans-unit>
        <trans-unit id="b39e88e61083334da27e22ac3304f5322910c7a2" translate="yes" xml:space="preserve">
          <source>Single-letter properties match all characters in any of the two-letter sub-properties starting with the same letter. &lt;code&gt;LC&lt;/code&gt; and &lt;code&gt;L&amp;amp;&lt;/code&gt; are special: both are aliases for the set consisting of everything matched by &lt;code&gt;Ll&lt;/code&gt; , &lt;code&gt;Lu&lt;/code&gt; , and &lt;code&gt;Lt&lt;/code&gt; .</source>
          <target state="translated">Las propiedades de una sola letra coinciden con todos los caracteres de cualquiera de las subpropiedades de dos letras que comienzan con la misma letra. &lt;code&gt;LC&lt;/code&gt; y &lt;code&gt;L&amp;amp;&lt;/code&gt; son especiales: ambos son alias para el conjunto que consiste en todo acompa&amp;ntilde;ado de &lt;code&gt;Ll&lt;/code&gt; , &lt;code&gt;Lu&lt;/code&gt; , y &lt;code&gt;Lt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8acda7f90b42defaf44562897d2b28bbd83f4e8" translate="yes" xml:space="preserve">
          <source>Single-letter properties match all characters in any of the two-letter sub-properties starting with the same letter. &lt;code&gt;LC&lt;/code&gt; and &lt;code&gt;L&amp;amp;&lt;/code&gt; are special: both are aliases for the set consisting of everything matched by &lt;code&gt;Ll&lt;/code&gt;, &lt;code&gt;Lu&lt;/code&gt;, and &lt;code&gt;Lt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47784ae534e76f07f938e74b6b49c2e04c524d60" translate="yes" xml:space="preserve">
          <source>Single-step flag. Will be true if the API will stop at the next statement.</source>
          <target state="translated">Bandera de un solo paso.Será cierto si el API se detiene en la siguiente declaración.</target>
        </trans-unit>
        <trans-unit id="3fd72cbf421902beaf4893343701c7e9f292181e" translate="yes" xml:space="preserve">
          <source>Sinograms like &amp;ldquo;東京&amp;rdquo; come back with character names of &lt;code&gt;CJK UNIFIED IDEOGRAPH-6771&lt;/code&gt; and &lt;code&gt;CJK UNIFIED IDEOGRAPH-4EAC&lt;/code&gt; , because their &amp;ldquo;names&amp;rdquo; vary. The CPAN &lt;code&gt;Unicode::Unihan&lt;/code&gt; module has a large database for decoding these (and a whole lot more), provided you know how to understand its output.</source>
          <target state="translated">Los sinogramas como &amp;ldquo;東京&amp;rdquo; regresan con nombres de caracteres de &lt;code&gt;CJK UNIFIED IDEOGRAPH-6771&lt;/code&gt; y &lt;code&gt;CJK UNIFIED IDEOGRAPH-4EAC&lt;/code&gt; , porque sus &amp;ldquo;nombres&amp;rdquo; var&amp;iacute;an. El m&amp;oacute;dulo CPAN &lt;code&gt;Unicode::Unihan&lt;/code&gt; tiene una gran base de datos para decodificarlos (y mucho m&amp;aacute;s), siempre que sepa c&amp;oacute;mo comprender su salida.</target>
        </trans-unit>
        <trans-unit id="b9df3910d077951b174aefd94b54e0bc3ac87d77" translate="yes" xml:space="preserve">
          <source>Sinograms like &amp;ldquo;東京&amp;rdquo; come back with character names of &lt;code&gt;CJK UNIFIED IDEOGRAPH-6771&lt;/code&gt; and &lt;code&gt;CJK UNIFIED IDEOGRAPH-4EAC&lt;/code&gt;, because their &amp;ldquo;names&amp;rdquo; vary. The CPAN &lt;code&gt;Unicode::Unihan&lt;/code&gt; module has a large database for decoding these (and a whole lot more), provided you know how to understand its output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e8fd907b0e11131190209772e747eaed820c59" translate="yes" xml:space="preserve">
          <source>Site-specific perl extensions and modules can be installed in one of two places. Put architecture-independent files into:</source>
          <target state="translated">Las extensiones y módulos de perl de sitios específicos pueden ser instalados en uno de dos lugares.Poner archivos independientes de la arquitectura en:</target>
        </trans-unit>
        <trans-unit id="00832815e260edfba2e83c2f4b5a6a35db1c2d1c" translate="yes" xml:space="preserve">
          <source>Six such conversions are possible:</source>
          <target state="translated">Seis de esas conversiones son posibles:</target>
        </trans-unit>
        <trans-unit id="ab71370c759f98b4c2c5f12f621583aa7cb9faf2" translate="yes" xml:space="preserve">
          <source>Sixth:</source>
          <target state="translated">Sixth:</target>
        </trans-unit>
        <trans-unit id="43701334f4b3da3fdeb3363278217ac0f215873d" translate="yes" xml:space="preserve">
          <source>Size of the function table. This is compared against the value PerlIO code &quot;knows&quot; as a compatibility check. Future versions</source>
          <target state="translated">Tamaño de la tabla de funciones.Esto se compara con el valor que el código PerlIO &quot;conoce&quot; como una comprobación de compatibilidad.Futuras versiones</target>
        </trans-unit>
        <trans-unit id="936d52e1c615ea7024397f6ff1aeb7c89ebd5bad" translate="yes" xml:space="preserve">
          <source>Size, Endianness, and BOM</source>
          <target state="translated">Tamaño,Endianidad y MOB</target>
        </trans-unit>
        <trans-unit id="0ec62bfb6670c34f50ed4190d4e6017dc34d76d5" translate="yes" xml:space="preserve">
          <source>Skip a package when throwing autodie exceptions</source>
          <target state="translated">Sáltate un paquete cuando lances excepciones de auto-muerte</target>
        </trans-unit>
        <trans-unit id="73e856b6ebf6aeb3a630b124c6e02c2a78566450" translate="yes" xml:space="preserve">
          <source>Skip all tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c526a5770e20da3a4179e52c1b052314f790b3" translate="yes" xml:space="preserve">
          <source>Skip event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ffbfd6b2e06775aaf14afc6238b4599cf532c4" translate="yes" xml:space="preserve">
          <source>Skip events bump test counts just like &lt;a href=&quot;Test2::Event::Ok&quot;&gt;Test2::Event::Ok&lt;/a&gt; events, but they can never fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a18bbc33fb3b107b0f37ec04073b6f8f1aa7be" translate="yes" xml:space="preserve">
          <source>Skip sub-char mapping should there be no code point.</source>
          <target state="translated">Saltar el mapeo del sub-char en caso de que no haya un punto de código.</target>
        </trans-unit>
        <trans-unit id="fa22bcdeb4f395bdc09dc2fd5b11b93a885994fb" translate="yes" xml:space="preserve">
          <source>Skip the real Pod formatting, and just show the raw Pod source (&lt;b&gt;U&lt;/b&gt;nformatted)</source>
          <target state="translated">Saltar formatear la verdadera Pod, y acaba de mostrar la fuente de la vaina cruda ( &lt;b&gt;T&lt;/b&gt; nformatted)</target>
        </trans-unit>
        <trans-unit id="e6cd533514432f62bafda9ad5f9825a972ff6179" translate="yes" xml:space="preserve">
          <source>Skip this section if the XSUB functions are supposed to be called from other modules only; read it only if you call your XSUBs from the code in your module, or have a &lt;code&gt;BOOT:&lt;/code&gt; section in your XS file (see &lt;a href=&quot;perlxs#The-BOOT%3A-Keyword&quot;&gt;&quot;The BOOT: Keyword&quot; in perlxs&lt;/a&gt;). What is described here is equally applicable to the &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e59adfb26a9113df0d5c476d39a18d0087952f5" translate="yes" xml:space="preserve">
          <source>Skip this section if the XSUB functions are supposed to be called from other modules only; read it only if you call your XSUBs from the code in your module, or have a &lt;code&gt;BOOT:&lt;/code&gt; section in your XS file (see &lt;a href=&quot;perlxs#The-BOOT%3a-Keyword&quot;&gt;The BOOT: Keyword in perlxs&lt;/a&gt;). What is described here is equally applicable to the &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt; interface.</source>
          <target state="translated">Omita esta secci&amp;oacute;n si se supone que las funciones XSUB deben llamarse solo desde otros m&amp;oacute;dulos; l&amp;eacute;alo solo si llama a sus XSUB desde el c&amp;oacute;digo en su m&amp;oacute;dulo, o tiene una secci&amp;oacute;n &lt;code&gt;BOOT:&lt;/code&gt; en su archivo XS (vea &lt;a href=&quot;perlxs#The-BOOT%3a-Keyword&quot;&gt;La palabra clave BOOT: en perlxs&lt;/a&gt; ). Lo que se describe aqu&amp;iacute; es igualmente aplicable a la interfaz &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a516a3ce4b9fd1e3a2a9186564fe4ca0d9da8218" translate="yes" xml:space="preserve">
          <source>Skipping tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ab6781ff6514e41583039acc42db3e0f3c9201" translate="yes" xml:space="preserve">
          <source>Skips all the tests, using the given &lt;code&gt;$reason&lt;/code&gt; . Exits immediately with 0.</source>
          <target state="translated">Omite todas las pruebas, utilizando el &lt;code&gt;$reason&lt;/code&gt; dado . Sale inmediatamente con 0.</target>
        </trans-unit>
        <trans-unit id="9d406363c0222ce5a6c71553ed555dc077dda244" translate="yes" xml:space="preserve">
          <source>Skips all the tests, using the given &lt;code&gt;$reason&lt;/code&gt;. Exits immediately with 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563adc0d862d00d2bcc7549833d1039985aead2a" translate="yes" xml:space="preserve">
          <source>Skips the current test, reporting &lt;code&gt;$why&lt;/code&gt; .</source>
          <target state="translated">Omite la prueba actual e informa &lt;code&gt;$why&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c9a19a668210cd54ae808f068a27dac1e967c53" translate="yes" xml:space="preserve">
          <source>Skips the current test, reporting &lt;code&gt;$why&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1ac1071abc2c48fe8c683c23437c17bcd0e5ba" translate="yes" xml:space="preserve">
          <source>Skips to the next compressed data stream in the input file/buffer. If a new compressed data stream is found, the eof marker will be cleared and &lt;code&gt;$.&lt;/code&gt; will be reset to 0.</source>
          <target state="translated">Salta al siguiente flujo de datos comprimidos en el archivo / b&amp;uacute;fer de entrada. Si se encuentra un nuevo flujo de datos comprimidos, el marcador eof se borrar&amp;aacute; y &lt;code&gt;$.&lt;/code&gt; se restablecer&amp;aacute; a 0.</target>
        </trans-unit>
        <trans-unit id="4249f92b08fd3ea49d1d4587b0dc45efe6514ff5" translate="yes" xml:space="preserve">
          <source>SkyMarshal &amp;lt;skymarshal1729@gmail.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1af20e2176a0b7a938bf7cbbbf01e3f656d901" translate="yes" xml:space="preserve">
          <source>Skye Shaw &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41574ecb0de77a7fed0beca1f4434e4a44173169" translate="yes" xml:space="preserve">
          <source>Slab leaked from cv %p</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d051f41b7de19e7acc50c00d91bed9bc77c2a243" translate="yes" xml:space="preserve">
          <source>Slab-based operator allocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28422baab3fe565caf66be5cefa3539fc1817282" translate="yes" xml:space="preserve">
          <source>Slab_Alloc</source>
          <target state="translated">Slab_Alloc</target>
        </trans-unit>
        <trans-unit id="dfee07ce355211f20f3bdab2cb3fa2a9def9c336" translate="yes" xml:space="preserve">
          <source>Slab_Free</source>
          <target state="translated">Slab_Free</target>
        </trans-unit>
        <trans-unit id="8b86eb2caadb21d205d9d0ad56cf031153fb8e27" translate="yes" xml:space="preserve">
          <source>Slab_to_ro</source>
          <target state="translated">Slab_to_ro</target>
        </trans-unit>
        <trans-unit id="b4128d18330a7f45f087418a9b524193204735bc" translate="yes" xml:space="preserve">
          <source>Slab_to_rw</source>
          <target state="translated">Slab_to_rw</target>
        </trans-unit>
        <trans-unit id="147d6799969166c3bb4c81176bc4c31ac64ac6bd" translate="yes" xml:space="preserve">
          <source>Slaven Rezic &amp;lt;slaven.rezic@idealo.de&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac691e6a9650a28847ff59e7d257f5f29d2f4fa" translate="yes" xml:space="preserve">
          <source>Slaven Rezic &amp;lt;slaven@rezic.de&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59d0602eb0550fd0dbf5d82907d6271ae4af6ea" translate="yes" xml:space="preserve">
          <source>Sleeps for the number of microseconds (millionths of a second) specified. Returns the number of microseconds actually slept. Can sleep for more than one second, unlike the &lt;code&gt;usleep&lt;/code&gt; system call. Can also sleep for zero seconds, which often works like a</source>
          <target state="translated">Duerme el n&amp;uacute;mero de microsegundos (millon&amp;eacute;simas de segundo) especificado. Devuelve el n&amp;uacute;mero de microsegundos realmente dormidos. Puede dormir durante m&amp;aacute;s de un segundo, a diferencia de la &lt;code&gt;usleep&lt;/code&gt; sistema usleep . Tambi&amp;eacute;n puede dormir durante cero segundos, lo que a menudo funciona como un</target>
        </trans-unit>
        <trans-unit id="a7c111ccc19a7463efac9caa48bfd176015106c5" translate="yes" xml:space="preserve">
          <source>Sleeps for the number of nanoseconds (1e9ths of a second) specified. Returns the number of nanoseconds actually slept (accurate only to microseconds, the nearest thousand of them). Can sleep for more than one second. Can also sleep for zero seconds, which often works like a</source>
          <target state="translated">Duerme durante el número de nanosegundos (1e9ths de segundo)especificado.Devuelve el número de nanosegundos realmente dormidos (exacto sólo a microsegundos,el más cercano a mil de ellos).Puede dormir durante más de un segundo.También puede dormir durante cero segundos,lo que a menudo funciona como un</target>
        </trans-unit>
        <trans-unit id="858360f4742bec3dbad2b4b1586f95ca8cfce48d" translate="yes" xml:space="preserve">
          <source>Sleeps for the number of nanoseconds (1e9ths of a second) specified. Returns the number of nanoseconds actually slept. The $which is the &quot;clock id&quot;, as with clock_gettime() and clock_getres(). The flags default to zero but &lt;code&gt;TIMER_ABSTIME&lt;/code&gt; can specified (must be exported explicitly) which means that &lt;code&gt;$nanoseconds&lt;/code&gt; is not a time interval (as is the default) but instead an absolute time. Can sleep for more than one second. Can also sleep for zero seconds, which often works like a</source>
          <target state="translated">Duerme durante la cantidad de nanosegundos (1e9ths de segundo) especificada. Devuelve el n&amp;uacute;mero de nanosegundos realmente dormidos. El $ que es el &quot;ID de reloj&quot;, como con clock_gettime () y clock_getres (). Los indicadores est&amp;aacute;n predeterminados en cero, pero se puede especificar &lt;code&gt;TIMER_ABSTIME&lt;/code&gt; (debe exportarse expl&amp;iacute;citamente), lo que significa que &lt;code&gt;$nanoseconds&lt;/code&gt; no es un intervalo de tiempo (como es el predeterminado) sino un tiempo absoluto. Puede dormir m&amp;aacute;s de un segundo. Tambi&amp;eacute;n puede dormir durante cero segundos, lo que a menudo funciona como un</target>
        </trans-unit>
        <trans-unit id="bfc9358c36664745e87042ffeea926ba49acc8f0" translate="yes" xml:space="preserve">
          <source>Sleeps for the specified amount of seconds. Returns the number of seconds actually slept (a floating point value). This function can be imported, resulting in a nice drop-in replacement for the &lt;code&gt;&lt;a href=&quot;../functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; provided with perl, see the &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; below.</source>
          <target state="translated">Duerme durante la cantidad especificada de segundos. Devuelve el n&amp;uacute;mero de segundos realmente dormidos (un valor de punto flotante). Esta funci&amp;oacute;n se puede importar, lo que resulta en un buen reemplazo para el &lt;code&gt;&lt;a href=&quot;../functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; provisto con perl, vea los &lt;a href=&quot;#EXAMPLES&quot;&gt;EJEMPLOS a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="18ae77017c85766e5d3a71c2d083fdfba9357fdb" translate="yes" xml:space="preserve">
          <source>Sleeps for the specified amount of seconds. Returns the number of seconds actually slept (a floating point value). This function can be imported, resulting in a nice drop-in replacement for the &lt;code&gt;sleep&lt;/code&gt; provided with perl, see the &lt;a href=&quot;#EXAMPLES&quot;&gt;&quot;EXAMPLES&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a455933ba1827ec6d2d6cea6cb61c05bd3954351" translate="yes" xml:space="preserve">
          <source>Slices</source>
          <target state="translated">Slices</target>
        </trans-unit>
        <trans-unit id="de97696f04df2d455746fc0459c7a0334ac08b94" translate="yes" xml:space="preserve">
          <source>Slices in scalar context return the last item of the slice.</source>
          <target state="translated">Las rebanadas en contexto escalar devuelven el último elemento de la rebanada.</target>
        </trans-unit>
        <trans-unit id="fade4867f2281855741bb2fdfae6ec6bfe669774" translate="yes" xml:space="preserve">
          <source>Slicing operations and parentheses cause the right-hand side to be evaluated in list context:</source>
          <target state="translated">Las operaciones de corte y paréntesis hacen que el lado derecho se evalúe en el contexto de la lista:</target>
        </trans-unit>
        <trans-unit id="dcf621083da44b050ec0828499127db4dc13006b" translate="yes" xml:space="preserve">
          <source>SlickEdit</source>
          <target state="translated">SlickEdit</target>
        </trans-unit>
        <trans-unit id="71625e10c96350176b8faecaf24d1d897cf6efce" translate="yes" xml:space="preserve">
          <source>Slightly modified by Arthur Bergman to fit the new thread model/module.</source>
          <target state="translated">Ligeramente modificado por Arthur Bergman para adaptarse al nuevo modelo/módulo de hilo.</target>
        </trans-unit>
        <trans-unit id="b6c149c3e00467fba347629a63ed02fed098d061" translate="yes" xml:space="preserve">
          <source>Slovakia</source>
          <target state="translated">Slovakia</target>
        </trans-unit>
        <trans-unit id="d1aa0503612aa4168939b77b59ca74532a11951a" translate="yes" xml:space="preserve">
          <source>Slovenia</source>
          <target state="translated">Slovenia</target>
        </trans-unit>
        <trans-unit id="945d75b6ccb37accbc9182a048ffec51dcd1a47f" translate="yes" xml:space="preserve">
          <source>Slurpy parameter not last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c84511f9de85f2a5bea737ad0651170f5fc9c55" translate="yes" xml:space="preserve">
          <source>Smart matching a non-overloaded object breaks encapsulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05c92e1201b3c7a99b14a3196c426c41067b9ce" translate="yes" xml:space="preserve">
          <source>Smartmatch Operator</source>
          <target state="translated">Operador de Smartmatch</target>
        </trans-unit>
        <trans-unit id="853b5644d464d7aa87bcee31b98647e7b0076053" translate="yes" xml:space="preserve">
          <source>Smartmatch expects to be able to allocate an op at run time, run it, and then throw it away. For that to work the op is simply malloced when PL_compcv hasn't been set up. So all slab-allocated ops are marked as such (&lt;code&gt;-&amp;gt;op_slabbed&lt;/code&gt;), to distinguish them from malloced ops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226b6fe8f9e2cd4e8ca8e6e55a94a83ba3f2cf5a" translate="yes" xml:space="preserve">
          <source>Smartmatch is experimental</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4adce585ab904a3b57996c9eacd1526a8856e59" translate="yes" xml:space="preserve">
          <source>Smartmatching of Objects</source>
          <target state="translated">La coincidencia inteligente de los objetos</target>
        </trans-unit>
        <trans-unit id="fcef3abf224b18a1a9539b5cd1a74a21f40eb21d" translate="yes" xml:space="preserve">
          <source>Smartmatching one hash against another reports whether both contain the same keys, no more and no less. This could be used to see whether two records have the same field names, without caring what values those fields might have. For example:</source>
          <target state="translated">La comparación inteligente de un hash contra otro informa si ambos contienen las mismas claves,ni más ni menos.Esto podría utilizarse para ver si dos registros tienen los mismos nombres de campo,sin importar los valores que puedan tener esos campos.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f02489100f7e7550e46dc3c0c8c28f36daa00353" translate="yes" xml:space="preserve">
          <source>Smoke testing Perl 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c177aabcbd4f359e0aaa8a530199381f4cf98371" translate="yes" xml:space="preserve">
          <source>Snooping</source>
          <target state="translated">Snooping</target>
        </trans-unit>
        <trans-unit id="4460e52ce30ee2f7dab472f65e7bc2c1c88dffad" translate="yes" xml:space="preserve">
          <source>So I got smart: I decided to be lazy and let the C compiler parse the C, which would spit out debugger stabs for me to read. These were much easier to parse. It's still not a pretty program, but at least it's more robust.</source>
          <target state="translated">Así que me volví inteligente:decidí ser perezoso y dejar que el compilador de C analizara el C,que escupiría puñaladas de depurador para que yo lo leyera.Estos eran mucho más fáciles de analizar.Todavía no es un programa bonito,pero al menos es más robusto.</target>
        </trans-unit>
        <trans-unit id="a1f5ce193c65cebf4de4614792ca39a016541f36" translate="yes" xml:space="preserve">
          <source>So a typical call to check would look like this:</source>
          <target state="translated">Así que una típica llamada de control se vería así:</target>
        </trans-unit>
        <trans-unit id="32bf3b4ebf1dd24fdccf516f7c267bd10f4fed6f" translate="yes" xml:space="preserve">
          <source>So assuming the database created above, we can use &lt;code&gt;get_dup&lt;/code&gt; like this:</source>
          <target state="translated">Entonces, asumiendo la base de datos creada anteriormente, podemos usar &lt;code&gt;get_dup&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9531481e3958e36f87e15fe09a502608d674e17a" translate="yes" xml:space="preserve">
          <source>So called because of a similar construct in &lt;b&gt;shells&lt;/b&gt; that pretends that the &lt;b&gt;lines&lt;/b&gt; following the &lt;b&gt;command&lt;/b&gt; are a separate &lt;b&gt;file&lt;/b&gt; to be fed to the command, up to some terminating string. In Perl, however, it&amp;rsquo;s just a fancy form of quoting.</source>
          <target state="translated">Se llama as&amp;iacute; debido a una construcci&amp;oacute;n similar en &lt;b&gt;shells&lt;/b&gt; que pretende que las &lt;b&gt;l&amp;iacute;neas que&lt;/b&gt; siguen al &lt;b&gt;comando&lt;/b&gt; son un &lt;b&gt;archivo&lt;/b&gt; separado que se alimenta al comando, hasta una cadena de terminaci&amp;oacute;n. En Perl, sin embargo, es solo una forma elegante de citar.</target>
        </trans-unit>
        <trans-unit id="93e9a6ece24ada54b55dc7612c9389e7a638c36b" translate="yes" xml:space="preserve">
          <source>So each subroutine is born with an array of scratchpads (of length 1). On each entry to the subroutine it is checked that the current depth of the recursion is not more than the length of this array, and if it is, new scratchpad is created and pushed into the array.</source>
          <target state="translated">Así que cada subrutina nace con una serie de &quot;scratchpads&quot; (de longitud 1).En cada entrada de la subrutina se comprueba que la profundidad actual de la recursividad no es mayor que la longitud de esta matriz,y si lo es,se crea un nuevo bloc de notas y se empuja dentro de la matriz.</target>
        </trans-unit>
        <trans-unit id="c0f1f69e80ab7ebe217f8989a490d4af7ac57aa2" translate="yes" xml:space="preserve">
          <source>So far I've shown you nothing that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd2a2cfe6e08c35c8f0019242b9920756d8258f" translate="yes" xml:space="preserve">
          <source>So far so good. But suppose the way you're implementing this is:</source>
          <target state="translated">Hasta ahora todo bien.Pero supongamos que la forma en que está implementando esto es:</target>
        </trans-unit>
        <trans-unit id="99d938c6031e3ad535ec502cea56c5d218d4389a" translate="yes" xml:space="preserve">
          <source>So far so good. Those of you who have been paying attention will have spotted that the tied object hasn't been used so far. So lets add an extra method to the Remember class to allow comments to be included in the file; say, something like this:</source>
          <target state="translated">Hasta ahora todo bien.Aquellos de ustedes que han estado prestando atención habrán visto que el objeto atado no ha sido usado hasta ahora.Así que vamos a añadir un método extra a la clase Recordar para permitir que se incluyan comentarios en el archivo;digamos,algo como esto:</target>
        </trans-unit>
        <trans-unit id="438b9b4e31229df657e054c261ee9d298ca8b103" translate="yes" xml:space="preserve">
          <source>So far we've merely tried to find and list the experimental features and infer their inception, versions, etc. There's a lot of speculation here.</source>
          <target state="translated">Hasta ahora sólo hemos intentado encontrar y enumerar las características experimentales e inferir su inicio,versiones,etc.Hay mucha especulación aquí.</target>
        </trans-unit>
        <trans-unit id="10bc3a4c124b48037408d12298d27779d339f321" translate="yes" xml:space="preserve">
          <source>So far, so good. With the knowledge above you can already perform searches with just about any literal string regexp you can dream up. Here is a</source>
          <target state="translated">Hasta ahora,todo bien.Con los conocimientos anteriores ya puedes realizar búsquedas con casi cualquier regexp de cadena literal que se te ocurra.Aquí hay un</target>
        </trans-unit>
        <trans-unit id="8af65d96d3224572aaaeff6426ae992e0bd5b192" translate="yes" xml:space="preserve">
          <source>So far, we're using just the normal list return mechanism. What happens if you want to pass or return a hash? Well, if you're using only one of them, or you don't mind them concatenating, then the normal calling convention is ok, although a little expensive.</source>
          <target state="translated">Hasta ahora,estamos usando sólo el mecanismo normal de retorno de la lista.¿Qué pasa si quieres pasar o devolver un hachís? Bueno,si estás usando sólo uno de ellos,o no te importa que se concatenen,entonces la convención normal de llamadas está bien,aunque un poco cara.</target>
        </trans-unit>
        <trans-unit id="6a1a83e9f4437f40c54f1506b859ac7294d0d128" translate="yes" xml:space="preserve">
          <source>So far, we've seen literals used as templates. If the list of pack items doesn't have fixed length, an expression constructing the template is required (whenever, for some reason, &lt;code&gt;()*&lt;/code&gt; cannot be used). Here's an example: To store named string values in a way that can be conveniently parsed by a C program, we create a sequence of names and null terminated ASCII strings, with &lt;code&gt;=&lt;/code&gt; between the name and the value, followed by an additional delimiting null byte. Here's how:</source>
          <target state="translated">Hasta ahora, hemos visto literales utilizados como plantillas. Si la lista de elementos del paquete no tiene una longitud fija, se requiere una expresi&amp;oacute;n que construya la plantilla (siempre que, por alguna raz&amp;oacute;n, no se pueda usar &lt;code&gt;()*&lt;/code&gt; ). Aqu&amp;iacute; hay un ejemplo: para almacenar valores de cadena con nombre de una manera que pueda ser analizada convenientemente por un programa en C, creamos una secuencia de nombres y cadenas ASCII terminadas en nulo, con &lt;code&gt;=&lt;/code&gt; entre el nombre y el valor, seguido de un byte nulo delimitador adicional . As&amp;iacute; es c&amp;oacute;mo:</target>
        </trans-unit>
        <trans-unit id="7a5692420708108a4d7ad47094be88b57cf9bf66" translate="yes" xml:space="preserve">
          <source>So for English (with Bracket Notation) &lt;code&gt;&quot;...[quant,_1,file]...&quot;&lt;/code&gt; is fine (for 0 it returns &quot;0 files&quot;, for 1 it returns &quot;1 file&quot;, and for more it returns &quot;2 files&quot;, etc.)</source>
          <target state="translated">Entonces, para ingl&amp;eacute;s (con notaci&amp;oacute;n entre corchetes) &lt;code&gt;&quot;...[quant,_1,file]...&quot;&lt;/code&gt; est&amp;aacute; bien (para 0 devuelve &quot;0 archivos&quot;, para 1 devuelve &quot;1 archivo&quot; y para m&amp;aacute;s devuelve &quot; 2 archivos &quot;, etc.)</target>
        </trans-unit>
        <trans-unit id="8477c048b776b6250b8d3a6b206bd8a95a79a9ff" translate="yes" xml:space="preserve">
          <source>So for example, instead of using:</source>
          <target state="translated">Así que por ejemplo,en lugar de usar:</target>
        </trans-unit>
        <trans-unit id="23a15c81788a2c5aff56ccaef77af7e0b8ce44eb" translate="yes" xml:space="preserve">
          <source>So given the diagram above, Perl will search &lt;code&gt;Child&lt;/code&gt; , &lt;code&gt;Father&lt;/code&gt; , &lt;code&gt;PaternalGrandparent&lt;/code&gt; , &lt;code&gt;SharedGreatGrandParent&lt;/code&gt; , &lt;code&gt;Mother&lt;/code&gt; , and finally &lt;code&gt;MaternalGrandparent&lt;/code&gt; . This may be a problem because now we're looking in &lt;code&gt;SharedGreatGrandParent&lt;/code&gt;</source>
          <target state="translated">Entonces, dado el diagrama anterior, Perl buscar&amp;aacute; &lt;code&gt;Child&lt;/code&gt; , &lt;code&gt;Father&lt;/code&gt; , &lt;code&gt;PaternalGrandparent&lt;/code&gt; , &lt;code&gt;SharedGreatGrandParent&lt;/code&gt; , &lt;code&gt;Mother&lt;/code&gt; y finalmente &lt;code&gt;MaternalGrandparent&lt;/code&gt; . Esto puede ser un problema porque ahora estamos buscando en &lt;code&gt;SharedGreatGrandParent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f8c16c38e4b1347fbe4bd6bed13c87b6b97a967" translate="yes" xml:space="preserve">
          <source>So given the diagram above, Perl will search &lt;code&gt;Child&lt;/code&gt;, &lt;code&gt;Father&lt;/code&gt;, &lt;code&gt;PaternalGrandparent&lt;/code&gt;, &lt;code&gt;SharedGreatGrandParent&lt;/code&gt;, &lt;code&gt;Mother&lt;/code&gt;, and finally &lt;code&gt;MaternalGrandparent&lt;/code&gt;. This may be a problem because now we're looking in &lt;code&gt;SharedGreatGrandParent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f4e47cc018c4b1c4ca9fc78408994ad8035bd1" translate="yes" xml:space="preserve">
          <source>So here is the bottom line--if you are sure that control will revert back to the enclosing Perl scope fairly quickly after the end of your callback, then it isn't absolutely necessary to dispose explicitly of any temporaries you may have created. Mind you, if you are at all uncertain about what to do, it doesn't do any harm to tidy up anyway.</source>
          <target state="translated">Así que aquí está el resultado final:si está seguro de que el control volverá al periscopio adjunto bastante rápido después del final de su llamada,entonces no es absolutamente necesario disponer explícitamente de cualquier temporal que pueda haber creado.Tenga en cuenta que si no está seguro de lo que debe hacer,no hace ningún daño ordenar de todos modos.</target>
        </trans-unit>
        <trans-unit id="4443d502fbd614fe670f624b7a8d6e87d74c5b32" translate="yes" xml:space="preserve">
          <source>So hopefully you've now got a few ideas about what's good to modularise. Let's now see how it's done.</source>
          <target state="translated">Así que espero que ahora tengas algunas ideas sobre lo que es bueno modular.Veamos ahora cómo se hace.</target>
        </trans-unit>
        <trans-unit id="6d3a27421600e7d4abecd702bd20845b8466123d" translate="yes" xml:space="preserve">
          <source>So how do I use a proxy with File::Fetch?</source>
          <target state="translated">Entonces,¿cómo uso un proxy con File::Fetch?</target>
        </trans-unit>
        <trans-unit id="9d00ee45ac1982b7db0dbf721dd3e3787ed6d62f" translate="yes" xml:space="preserve">
          <source>So how do you use a source filter in a Perl script? Above, I said that a source filter is just a special kind of module. Like all Perl modules, a source filter is invoked with a use statement.</source>
          <target state="translated">Entonces,¿cómo se usa un filtro de fuente en un guión de Perl? Arriba,dije que un filtro de origen es sólo un tipo especial de módulo.Como todos los módulos de Perl,un filtro fuente se invoca con una declaración de uso.</target>
        </trans-unit>
        <trans-unit id="6cca2cb75a50d0827a566440232066af85d09fbe" translate="yes" xml:space="preserve">
          <source>So how does it work?</source>
          <target state="translated">Entonces,¿cómo funciona?</target>
        </trans-unit>
        <trans-unit id="7fc04ce8d1c409ed6d44985cf7b3c46dd155a24f" translate="yes" xml:space="preserve">
          <source>So how hard could that be? You look at the code that produces the first item, and it reads:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9612f816ae3d1d599129006ddc23ec570699e275" translate="yes" xml:space="preserve">
          <source>So if you take for example the shell command</source>
          <target state="translated">Así que si tomas por ejemplo el comando shell</target>
        </trans-unit>
        <trans-unit id="557e6fd5bed4c1d07e89cc778dd5ffa04e712afb" translate="yes" xml:space="preserve">
          <source>So if you want to check the validity of the encoding, surround the expression with &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; block as follows;</source>
          <target state="translated">Entonces, si desea verificar la validez de la codificaci&amp;oacute;n, rodee la expresi&amp;oacute;n con el bloque &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; de la siguiente manera;</target>
        </trans-unit>
        <trans-unit id="a821fbe9858bdf4860678fd5e1e7551e3704e346" translate="yes" xml:space="preserve">
          <source>So if you want to check the validity of the encoding, surround the expression with &lt;code&gt;eval {}&lt;/code&gt; block as follows;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e30a7ebf49e6593b8da91cf7504894e9cfa473" translate="yes" xml:space="preserve">
          <source>So if you were to supply a new, complete, top-level source file to add to Perl, you should conform to this peculiar practice by yourself selecting an appropriate quotation from Tolkien, retaining the original spelling and punctuation and using the same format the rest of the quotes are in. Indirect and oblique is just fine; remember, it's a metaphor, so being meta is, after all, what it's for.</source>
          <target state="translated">Por lo tanto,si tuviera que suministrar un nuevo archivo de fuente completo de alto nivel para agregarlo a Perl,debería ajustarse a esta práctica peculiar seleccionando una cita apropiada de Tolkien,conservando la ortografía y la puntuación originales y utilizando el mismo formato en que se encuentran el resto de las citas.Indirecta y oblicua está bien;recuerde,es una metáfora,así que ser una metáfora es,después de todo,para lo que sirve.</target>
        </trans-unit>
        <trans-unit id="02bb4252af15d73e7777da1a95cce444353d918a" translate="yes" xml:space="preserve">
          <source>So if you're working with Unicode data, consult the documentation of every module you're using if there are any issues with Unicode data exchange. If the documentation does not talk about Unicode at all, suspect the worst and probably look at the source to learn how the module is implemented. Modules written completely in Perl shouldn't cause problems. Modules that directly or indirectly access code written in other programming languages are at risk.</source>
          <target state="translated">Así que si trabajas con datos Unicode,consulta la documentación de cada módulo que utilices si hay algún problema con el intercambio de datos Unicode.Si la documentación no habla en absoluto de Unicode,sospeche lo peor y probablemente mire la fuente para saber cómo se implementa el módulo.Los módulos escritos completamente en Perl no deberían causar problemas.Los módulos que acceden directa o indirectamente a código escrito en otros lenguajes de programación están en riesgo.</target>
        </trans-unit>
        <trans-unit id="e319523cadbb2780f0ef0af26ce5a7a559c73594" translate="yes" xml:space="preserve">
          <source>So in VMS its pm_to_blib.ts.</source>
          <target state="translated">Así que en el VMS es pm_to_blib.ts.</target>
        </trans-unit>
        <trans-unit id="3bce9b15392a6c8658669f57b4a2decac3558eb6" translate="yes" xml:space="preserve">
          <source>So instead you'll want to do something like this:</source>
          <target state="translated">Así que en vez de eso querrás hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="6161c23b3048d528f32556aeffc6deb23d6328c9" translate="yes" xml:space="preserve">
          <source>So it is round-trip safe for \xF9\xF9. But if the line above is upside down, here is what happens.</source>
          <target state="translated">Así que es seguro para el viaje de ida y vuelta.Pero si la línea de arriba está al revés,esto es lo que pasa.</target>
        </trans-unit>
        <trans-unit id="c06ae4675003e825258b16549181d9f72cc7560a" translate="yes" xml:space="preserve">
          <source>So it's clearer and best to use the compound form when specifying blocks. And be sure that is what you really really want to do. In most cases scripts are what you want instead.</source>
          <target state="translated">Así que es más claro y mejor usar la forma compuesta cuando se especifican los bloques.Y asegúrate de que eso es lo que realmente quieres hacer.En la mayoría de los casos los guiones son lo que quieres en su lugar.</target>
        </trans-unit>
        <trans-unit id="3007e0313fdaf4be553a40db748fe3ab3979d2d6" translate="yes" xml:space="preserve">
          <source>So just remember always to use the array or hash constructors with &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;{}&lt;/code&gt; , and you'll be fine, although it's not always optimally efficient.</source>
          <target state="translated">As&amp;iacute; que recuerde siempre usar los constructores de matriz o hash con &lt;code&gt;[]&lt;/code&gt; o &lt;code&gt;{}&lt;/code&gt; , y estar&amp;aacute; bien, aunque no siempre es &amp;oacute;ptimamente eficiente.</target>
        </trans-unit>
        <trans-unit id="d027afb082f340c36adda48951c99192de3bf3d9" translate="yes" xml:space="preserve">
          <source>So just remember always to use the array or hash constructors with &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;{}&lt;/code&gt;, and you'll be fine, although it's not always optimally efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f6b3059bd71a14d4d6430ebaa792ae77f9b5ae" translate="yes" xml:space="preserve">
          <source>So much for textual data. Let's get onto the meaty stuff that &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; are best at: handling binary formats for numbers. There is, of course, not just one binary format - life would be too simple - but Perl will do all the finicky labor for you.</source>
          <target state="translated">Demasiado para los datos textuales. Vayamos a las cosas carnosas en las que &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; son mejores: manejo de formatos binarios para n&amp;uacute;meros. Por supuesto, no hay solo un formato binario (la vida ser&amp;iacute;a demasiado simple), pero Perl har&amp;aacute; todo el trabajo meticuloso por usted.</target>
        </trans-unit>
        <trans-unit id="c03e630c08b97b3f5b437a4e7c4b378ae3776973" translate="yes" xml:space="preserve">
          <source>So much for textual data. Let's get onto the meaty stuff that &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;unpack&lt;/code&gt; are best at: handling binary formats for numbers. There is, of course, not just one binary format - life would be too simple - but Perl will do all the finicky labor for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6434510a7a13803f70088fd4384a0dc891e9b671" translate="yes" xml:space="preserve">
          <source>So neither &lt;code&gt;latin1&lt;/code&gt; nor &lt;code&gt;ascii&lt;/code&gt; are incompatible with the &lt;code&gt;utf8&lt;/code&gt; flag - they only govern when the JSON output engine escapes a character or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6d818d0bc8716d4413f806e54c839d9543bd1d" translate="yes" xml:space="preserve">
          <source>So now &lt;code&gt;tie $scalar&lt;/code&gt; will always tie the scalar, not the handle it holds. To tie the handle, use &lt;code&gt;tie *$scalar&lt;/code&gt; (with an explicit asterisk). The same applies to &lt;code&gt;tied *$scalar&lt;/code&gt; and &lt;code&gt;untie *$scalar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e5670a7ba385b708ff4bcfadcd36a0825afece" translate="yes" xml:space="preserve">
          <source>So now this code would be written:</source>
          <target state="translated">Así que ahora este código sería escrito:</target>
        </trans-unit>
        <trans-unit id="7ec657e348cc94be548b290696e0a818e7f982d5" translate="yes" xml:space="preserve">
          <source>So now you have a file ending in .tar.gz (or, less often, .zip). You know there's a tasty module inside. There are four steps you must now take:</source>
          <target state="translated">Así que ahora tienes un archivo que termina en .tar.gz (o,menos a menudo,.zip).Sabes que hay un sabroso módulo dentro.Hay cuatro pasos que debes dar ahora:</target>
        </trans-unit>
        <trans-unit id="9f7f09ef2fcd4d20ffdab1795e6c221c8b2cdf50" translate="yes" xml:space="preserve">
          <source>So please select carefully what library you want to use.</source>
          <target state="translated">Así que por favor seleccione cuidadosamente qué biblioteca quiere usar.</target>
        </trans-unit>
        <trans-unit id="fc4d504736579a86ac1ba1abd47d391cec08a768" translate="yes" xml:space="preserve">
          <source>So put in parentheses to say what you really mean.</source>
          <target state="translated">Así que pon entre paréntesis para decir lo que realmente quieres decir.</target>
        </trans-unit>
        <trans-unit id="291a379872204cd90f4de2f2a608af9f0d7dabed" translate="yes" xml:space="preserve">
          <source>So specifically, autoloaded functions cannot see package lexicals (this applies to both the &lt;b&gt;SelfLoader&lt;/b&gt; and the Autoloader). The &lt;code&gt;vars&lt;/code&gt; pragma provides an alternative to defining package-level globals that will be visible to autoloaded routines. See the documentation on &lt;b&gt;vars&lt;/b&gt; in the pragma section of &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">As&amp;iacute; que espec&amp;iacute;ficamente, las funciones de carga autom&amp;aacute;tica no pueden ver los l&amp;eacute;xicos de los paquetes (esto se aplica tanto al &lt;b&gt;Autocargador&lt;/b&gt; como al &lt;b&gt;Autocargador&lt;/b&gt; ). El pragma &lt;code&gt;vars&lt;/code&gt; proporciona una alternativa a la definici&amp;oacute;n de globales a nivel de paquete que ser&amp;aacute;n visibles para las rutinas cargadas autom&amp;aacute;ticamente. Consulte la documentaci&amp;oacute;n sobre &lt;b&gt;vars&lt;/b&gt; en la secci&amp;oacute;n pragma de &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="178e0296c43b2c22ca3149a0d363aa4b6a82de7c" translate="yes" xml:space="preserve">
          <source>So that's how we consume and produce fixed-width data. Let's recap what we've seen of &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; so far:</source>
          <target state="translated">As&amp;iacute; es como consumimos y producimos datos de ancho fijo. Recapitulemos lo que hemos visto de &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; hasta ahora:</target>
        </trans-unit>
        <trans-unit id="ae19d4915e0b62760549bd4eeb2c1e92ef2ac7db" translate="yes" xml:space="preserve">
          <source>So that's how we consume and produce fixed-width data. Let's recap what we've seen of &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;unpack&lt;/code&gt; so far:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5a5de8356ec781cae3674738f4fa4085230f11" translate="yes" xml:space="preserve">
          <source>So the Perl interface would look like this</source>
          <target state="translated">Así que la interfaz de Perl se vería así</target>
        </trans-unit>
        <trans-unit id="eb361df349469f52fd13dc7f637fd6d3f4002c01" translate="yes" xml:space="preserve">
          <source>So the Perl subroutine would look like this:</source>
          <target state="translated">Así que la subrutina Perl se vería así:</target>
        </trans-unit>
        <trans-unit id="f9e5e29abec6c42a24502ee051f01eb881622a3a" translate="yes" xml:space="preserve">
          <source>So the exit codes are...</source>
          <target state="translated">Así que los códigos de salida son...</target>
        </trans-unit>
        <trans-unit id="ecdcbf5b6eec0983bdba576e908b1b991d7bdaa0" translate="yes" xml:space="preserve">
          <source>So the methods &lt;code&gt;PrintID&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; can be invoked like this:</source>
          <target state="translated">Entonces, los m&amp;eacute;todos &lt;code&gt;PrintID&lt;/code&gt; y &lt;code&gt;Display&lt;/code&gt; se pueden invocar as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="fc02af530f320939749f4c5dd232069afbb23ee8" translate="yes" xml:space="preserve">
          <source>So the return value will be true if the seek operation was successful. For failure, a false value is returned and &lt;code&gt;fileLastError()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; are set to the reason for the failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7fd8e534a0a64d6932df0e7228b52bddc2accd" translate="yes" xml:space="preserve">
          <source>So these now have simple defaults rather than probing at build-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050bc5740a1b6bb30a161c3c46fabef260c75737" translate="yes" xml:space="preserve">
          <source>So this:</source>
          <target state="translated">Así que esto:</target>
        </trans-unit>
        <trans-unit id="65f64a88a88a2a42947aa812e415dc968ce4fc3b" translate="yes" xml:space="preserve">
          <source>So to repeat always use SvOK() to check whether an sv is defined.</source>
          <target state="translated">Así que para repetir siempre usa SvOK()para comprobar si un sv está definido.</target>
        </trans-unit>
        <trans-unit id="ec007077340f2b45239679ca4cc61f38315a3433" translate="yes" xml:space="preserve">
          <source>So what happened to dTHR?</source>
          <target state="translated">Entonces,¿qué pasó con el DTHR?</target>
        </trans-unit>
        <trans-unit id="dd71b3066f2c37ca89d49c13416a448baf2ad1f1" translate="yes" xml:space="preserve">
          <source>So what has this got to do with &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;? Well, if you want to compose a Unicode string (that is internally encoded as UTF-8), you can do so by using template code &lt;code&gt;U&lt;/code&gt; . As an example, let's produce the Euro currency symbol (code number 0x20AC):</source>
          <target state="translated">Entonces, &amp;iquest;qu&amp;eacute; tiene esto que ver con el &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; ? Bueno, si se quiere componer una cadena Unicode (que est&amp;aacute; codificado internamente como UTF-8), puede hacerlo mediante el uso de c&amp;oacute;digo de la plantilla &lt;code&gt;U&lt;/code&gt; . Como ejemplo, produzcamos el s&amp;iacute;mbolo de moneda Euro (n&amp;uacute;mero de c&amp;oacute;digo 0x20AC):</target>
        </trans-unit>
        <trans-unit id="be8214c7c17783a92e4d370b91d6755f26454042" translate="yes" xml:space="preserve">
          <source>So what has this got to do with &lt;code&gt;pack&lt;/code&gt;? Well, if you want to compose a Unicode string (that is internally encoded as UTF-8), you can do so by using template code &lt;code&gt;U&lt;/code&gt;. As an example, let's produce the Euro currency symbol (code number 0x20AC):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76db05e5ac37110bc4537d598a8e57f24d0e7d58" translate="yes" xml:space="preserve">
          <source>So what is the big problem? Well, if you are expecting Perl to tidy up those temporaries for you, you might be in for a long wait. For Perl to dispose of your temporaries, control must drop back to the enclosing scope at some stage. In the event driven scenario that may never happen. This means that, as time goes on, your program will create more and more temporaries, none of which will ever be freed. As each of these temporaries consumes some memory your program will eventually consume all the available memory in your system--kapow!</source>
          <target state="translated">Entonces,¿cuál es el gran problema? Bueno,si esperas que Perl te arregle esos temporales,puede que tengas que esperar mucho tiempo.Para que Perl se deshaga de sus temporales,el control debe volver a la mira en algún momento.En el caso de que el escenario sea impulsado,eso puede no suceder nunca.Esto significa que,a medida que pase el tiempo,tu programa creará más y más temporarios,ninguno de los cuales será liberado.A medida que cada una de estas temporarias consuma algo de memoria,su programa consumirá eventualmente toda la memoria disponible en su sistema...¡kapow!</target>
        </trans-unit>
        <trans-unit id="49dd0c06fd8f279176f457e7dd90bd0af2090341" translate="yes" xml:space="preserve">
          <source>So what's new?</source>
          <target state="translated">¿Qué hay de nuevo?</target>
        </trans-unit>
        <trans-unit id="8be287051544a93972a5fe33ce5f2eed6334bad0" translate="yes" xml:space="preserve">
          <source>So when the output is a filehandle it will carry out a seek to the eof before writing any compressed data. If the output is a filename, it will be opened for appending. If the output is a buffer, all compressed data will be appended to the existing buffer.</source>
          <target state="translated">Así que cuando la salida sea un filehandle,realizará una búsqueda a la eof antes de escribir cualquier dato comprimido.Si la salida es un nombre de archivo,se abrirá para ser añadido.Si la salida es un buffer,todos los datos comprimidos se añadirán al buffer existente.</target>
        </trans-unit>
        <trans-unit id="2b16151fbc25d8d9908507f5cf41dca81006fcb5" translate="yes" xml:space="preserve">
          <source>So when the output is a filehandle it will carry out a seek to the eof before writing any uncompressed data. If the output is a filename, it will be opened for appending. If the output is a buffer, all uncompressed data will be appended to the existing buffer.</source>
          <target state="translated">Así que cuando la salida es un filehandle llevará a cabo una búsqueda a la eof antes de escribir cualquier dato sin comprimir.Si la salida es un nombre de archivo,se abrirá para ser añadido.Si la salida es un buffer,todos los datos descomprimidos se añadirán al buffer existente.</target>
        </trans-unit>
        <trans-unit id="faf320f95dede4954f64d637d17b4ef0ec2ac56b" translate="yes" xml:space="preserve">
          <source>So when we parse &lt;code&gt;/foo/&lt;/code&gt; we see something like the following table. The left shows what is being parsed, and the number indicates where the next regop would go. The stuff on the right is the trace output of the graph. The names are chosen to be short to make it less dense on the screen. 'tsdy' is a special form of &lt;code&gt;regtail()&lt;/code&gt; which does some extra analysis.</source>
          <target state="translated">Entonces, cuando analizamos &lt;code&gt;/foo/&lt;/code&gt; vemos algo como la siguiente tabla. La izquierda muestra lo que se est&amp;aacute; analizando y el n&amp;uacute;mero indica d&amp;oacute;nde ir&amp;iacute;a la siguiente repetici&amp;oacute;n. Lo que se muestra a la derecha es el resultado de la traza del gr&amp;aacute;fico. Los nombres se eligen para que sean cortos para que sean menos densos en la pantalla. 'tsdy' es una forma especial de &lt;code&gt;regtail()&lt;/code&gt; que hace un an&amp;aacute;lisis adicional.</target>
        </trans-unit>
        <trans-unit id="4ca42b2545bb9f74c7dfcf26ad336456861738d0" translate="yes" xml:space="preserve">
          <source>So why is UNINST=1 not the default?</source>
          <target state="translated">Entonces,¿por qué el UNINST=1 no es el predeterminado?</target>
        </trans-unit>
        <trans-unit id="5764d39b6b45dd4fdf0407e6dadfbf8730c1c2c3" translate="yes" xml:space="preserve">
          <source>So why use these? They produce better diagnostics on failure. &lt;code&gt;ok()&lt;/code&gt; cannot know what you are testing for (beyond the name), but &lt;code&gt;is()&lt;/code&gt; and &lt;code&gt;isnt()&lt;/code&gt; know what the test was and why it failed. For example this test:</source>
          <target state="translated">Entonces, &amp;iquest;por qu&amp;eacute; usar estos? Producen mejores diagn&amp;oacute;sticos en caso de falla. &lt;code&gt;ok()&lt;/code&gt; no puede saber qu&amp;eacute; est&amp;aacute; probando (m&amp;aacute;s all&amp;aacute; del nombre), pero &lt;code&gt;is()&lt;/code&gt; y &lt;code&gt;isnt()&lt;/code&gt; sabe cu&amp;aacute;l fue la prueba y por qu&amp;eacute; fall&amp;oacute;. Por ejemplo, esta prueba:</target>
        </trans-unit>
        <trans-unit id="0723871c8efb4af11337b70788bc11e5f341de34" translate="yes" xml:space="preserve">
          <source>So why would you ever want to use a Unix domain socket instead of a simpler named pipe? Because a named pipe doesn't give you sessions. You can't tell one process's data from another's. With socket programming, you get a separate session for each client; that's why accept() takes two arguments.</source>
          <target state="translated">Entonces,¿por qué querrías usar un enchufe de dominio Unix en lugar de un tubo con nombre más simple? Porque una tubería con nombre no te da sesiones.No puedes diferenciar los datos de un proceso de los de otro.Con la programación de sockets,obtienes una sesión separada para cada cliente;por eso accept()toma dos argumentos.</target>
        </trans-unit>
        <trans-unit id="907dfd8f705f1e1d725ffd018f44b3318d9e84e1" translate="yes" xml:space="preserve">
          <source>So you can figure out what went wrong without rerunning the test.</source>
          <target state="translated">Así que puedes averiguar qué salió mal sin volver a hacer la prueba.</target>
        </trans-unit>
        <trans-unit id="23330e80d1d5c0a1be567b0263265e46b7f62019" translate="yes" xml:space="preserve">
          <source>So you rewrite it to read:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a109f19c85f2e155b7bae45252c43e85217d92" translate="yes" xml:space="preserve">
          <source>So you should instead try this;</source>
          <target state="translated">Así que deberías probar esto;</target>
        </trans-unit>
        <trans-unit id="99368e21d7e985fc9382de7cbad3270d6b572550" translate="yes" xml:space="preserve">
          <source>So you want to know what &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; actually does?</source>
          <target state="translated">&amp;iquest;Quiere saber qu&amp;eacute; hace realmente la &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n ?</target>
        </trans-unit>
        <trans-unit id="f880312d8311a1d75dbe80304cdf01f9913e6eb1" translate="yes" xml:space="preserve">
          <source>So you want to know what &lt;code&gt;import&lt;/code&gt; actually does?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98457d69f47757522cf080b8cba6d90757ec58b" translate="yes" xml:space="preserve">
          <source>So, beside calls like</source>
          <target state="translated">Así que,además de las llamadas como</target>
        </trans-unit>
        <trans-unit id="8b676466aa2043751e164c60e8f768fad4f2409b" translate="yes" xml:space="preserve">
          <source>So, for classes and subclasses to have inheritance correctly work with autoloading, you need to ensure stubs are loaded.</source>
          <target state="translated">Así que,para que las clases y subclases de herencia funcionen correctamente con el autocargamento,debes asegurarte de que los talones estén cargados.</target>
        </trans-unit>
        <trans-unit id="3fdc850c88acfeea0034b4d0a5ecf1cbe8955116" translate="yes" xml:space="preserve">
          <source>So, for example, &quot;wb9&quot; means open for writing with the maximum compression using the default strategy and &quot;wb4R&quot; means open for writing with compression level 4 and run-length encoding.</source>
          <target state="translated">Así,por ejemplo,&quot;wb9&quot; significa abierto para escribir con la máxima compresión utilizando la estrategia por defecto y &quot;wb4R&quot; significa abierto para escribir con el nivel de compresión 4 y la codificación de la longitud de ejecución.</target>
        </trans-unit>
        <trans-unit id="ef8d2c630e8e6fd22bf1a2656520cdc24a0e732f" translate="yes" xml:space="preserve">
          <source>So, for example, say you have a file compressed with gzip that you want to recompress with bzip2. Here is all that is needed to carry out the recompression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d3c65256a4087c70ab29c5923eefef7208b53e" translate="yes" xml:space="preserve">
          <source>So, for instance, to pack 20302 to a signed 16 bit integer in your computer's representation you write</source>
          <target state="translated">Así que,por ejemplo,para empaquetar 20302 a un entero firmado de 16 bits en la representación de tu ordenador escribes</target>
        </trans-unit>
        <trans-unit id="5a026df42e6a15ca497ded704c00f477c0e8e518" translate="yes" xml:space="preserve">
          <source>So, if you see two terms with an &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt; , between them, you can turn them into a single expression. When you do this, you execute the code in the block on the next line: if you see &lt;code&gt;=&lt;/code&gt; , you'll do the code in line 2. If you see &lt;code&gt;+&lt;/code&gt; , you'll do the code in line 4. It's this code which contributes to the op tree.</source>
          <target state="translated">Entonces, si ve dos t&amp;eacute;rminos con &lt;code&gt;=&lt;/code&gt; o &lt;code&gt;+&lt;/code&gt; , entre ellos, puede convertirlos en una sola expresi&amp;oacute;n. Cuando haces esto, ejecutas el c&amp;oacute;digo en el bloque de la siguiente l&amp;iacute;nea: si ves &lt;code&gt;=&lt;/code&gt; , har&amp;aacute;s el c&amp;oacute;digo en la l&amp;iacute;nea 2. Si ves &lt;code&gt;+&lt;/code&gt; , har&amp;aacute;s el c&amp;oacute;digo en la l&amp;iacute;nea 4. Es este c&amp;oacute;digo que contribuye al &amp;aacute;rbol de operaciones.</target>
        </trans-unit>
        <trans-unit id="0379bb60c338fa89d5d14562ac618c3cb90f2526" translate="yes" xml:space="preserve">
          <source>So, if you see two terms with an &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;, between them, you can turn them into a single expression. When you do this, you execute the code in the block on the next line: if you see &lt;code&gt;=&lt;/code&gt;, you'll do the code in line 2. If you see &lt;code&gt;+&lt;/code&gt;, you'll do the code in line 4. It's this code which contributes to the op tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f012b7bad59a01daf6da8ed100b9c040ae573c55" translate="yes" xml:space="preserve">
          <source>So, if you want to collect memory info in a cycle, you may call</source>
          <target state="translated">Así que,si quieres recopilar información de la memoria en un ciclo,puedes llamar</target>
        </trans-unit>
        <trans-unit id="f33ef09895b9595e58c40994534996d41b9b84f6" translate="yes" xml:space="preserve">
          <source>So, in general, &quot;state&quot; subroutines are faster. But &quot;my&quot; subs are necessary if you want to create closures:</source>
          <target state="translated">Así que,en general,las subrutinas de &quot;estado&quot; son más rápidas.Pero &quot;mis&quot; subrutinas son necesarias si quieres crear cierres:</target>
        </trans-unit>
        <trans-unit id="b92446e0fc5150a550f9b239a78e7589775be2a5" translate="yes" xml:space="preserve">
          <source>So, let's say you want to add a custom element called 'foo'. In your subclass's &lt;code&gt;new&lt;/code&gt; method, after calling &lt;code&gt;SUPER::new&lt;/code&gt; you'd call:</source>
          <target state="translated">Entonces, digamos que desea agregar un elemento personalizado llamado 'foo'. En el &lt;code&gt;new&lt;/code&gt; m&amp;eacute;todo de su subclase , despu&amp;eacute;s de llamar a &lt;code&gt;SUPER::new&lt;/code&gt; llamar&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="6f5a18b784416c2faf1e8dee13b0302a69a860cf" translate="yes" xml:space="preserve">
          <source>So, on the advice of the gettext manual, you rewrite:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04546d861006181e7076b52be007eeaf163f592b" translate="yes" xml:space="preserve">
          <source>So, rather than having to say:</source>
          <target state="translated">Así que,en lugar de tener que decir:</target>
        </trans-unit>
        <trans-unit id="ce7cf438ffd137d4b9ae434030e4dd1bac347bb0" translate="yes" xml:space="preserve">
          <source>So, saying &lt;code&gt;11 &amp;amp; 3&lt;/code&gt; performs the &quot;and&quot; operation on numbers (yielding &lt;code&gt;3&lt;/code&gt; ). Saying &lt;code&gt;&quot;11&quot; &amp;amp; &quot;3&quot;&lt;/code&gt; performs the &quot;and&quot; operation on strings (yielding &lt;code&gt;&quot;1&quot;&lt;/code&gt; ).</source>
          <target state="translated">Entonces, decir &lt;code&gt;11 &amp;amp; 3&lt;/code&gt; realiza la operaci&amp;oacute;n &quot;y&quot; en n&amp;uacute;meros (dando como resultado &lt;code&gt;3&lt;/code&gt; ). Decir &lt;code&gt;&quot;11&quot; &amp;amp; &quot;3&quot;&lt;/code&gt; realiza la operaci&amp;oacute;n &quot;y&quot; en cadenas (dando como resultado &lt;code&gt;&quot;1&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="82342d83c583203ac699858cccf76690e3807bf1" translate="yes" xml:space="preserve">
          <source>So, saying &lt;code&gt;11 &amp;amp; 3&lt;/code&gt; performs the &quot;and&quot; operation on numbers (yielding &lt;code&gt;3&lt;/code&gt;). Saying &lt;code&gt;&quot;11&quot; &amp;amp; &quot;3&quot;&lt;/code&gt; performs the &quot;and&quot; operation on strings (yielding &lt;code&gt;&quot;1&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a687b4464c81c65ad71b0b242c9a17889c06be5" translate="yes" xml:space="preserve">
          <source>So, sometimes you might want to use symbolic references to manipulate the symbol table directly. This doesn't matter for formats, handles, and subroutines, because they are always global--you can't use my() on them. For scalars, arrays, and hashes, though--and usually for subroutines-- you probably only want to use hard references.</source>
          <target state="translated">Así que,a veces puede que quieras usar referencias simbólicas para manipular la tabla de símbolos directamente.Esto no importa para los formatos,manijas y subrutinas,porque siempre son globales...no puedes usar mi()en ellas.Sin embargo,para escalares,arreglos y hashes,y normalmente para subrutinas,probablemente sólo quieras usar referencias duras.</target>
        </trans-unit>
        <trans-unit id="988f750cf0c3c51b512a9cb6f00133978c0404e1" translate="yes" xml:space="preserve">
          <source>So, the following examples now works as expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b62c1a83484ac0f80542a2de9bd04874ec15952" translate="yes" xml:space="preserve">
          <source>So, the following examples will now work all as expected:</source>
          <target state="translated">Por lo tanto,los siguientes ejemplos funcionarán como se esperaba:</target>
        </trans-unit>
        <trans-unit id="b83b5043b490e39d23dba00f7ce754a2ed020ba9" translate="yes" xml:space="preserve">
          <source>So, the following line:</source>
          <target state="translated">Entonces,la siguiente línea:</target>
        </trans-unit>
        <trans-unit id="e43264c4b337b0feb1da1b34ab4669d9bfde22ae" translate="yes" xml:space="preserve">
          <source>So, the following two statements do the same thing:</source>
          <target state="translated">Entonces,las siguientes dos declaraciones hacen lo mismo:</target>
        </trans-unit>
        <trans-unit id="0f5b24deb12867f441d62aa11cf38e02b6693a70" translate="yes" xml:space="preserve">
          <source>So, the string of Martian &quot;I am CVSGXX!&quot; uses 12 bytes to encode the nine characters 'I', ' ', 'a', 'm', ' ', 'CV', 'SG', 'XX', '!'.</source>
          <target state="translated">Así que,la cadena de marcianos &quot;¡Soy CVSGXX!&quot; utiliza 12 bytes para codificar los nueve caracteres &quot;I&quot;,&quot;a&quot;,&quot;m&quot;,&quot;CV&quot;,&quot;SG&quot;,&quot;XX&quot;,&quot;¡&quot;!</target>
        </trans-unit>
        <trans-unit id="93058ef0377751cf8a22fa887d9f94acca14dc08" translate="yes" xml:space="preserve">
          <source>So, this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a65604ac4ef3bcdf6fdcf41ebba719fc161bed" translate="yes" xml:space="preserve">
          <source>So, what needs to replace gettext is a system that supports lexicons of functions instead of lexicons of strings. An entry in a lexicon from such a system should</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666f233dad00e2e027af2bcddbc736103b174459" translate="yes" xml:space="preserve">
          <source>So, what's the big problem with that? It looks right, doesn't it? After all, I just told you that you need an array of references, so by golly, you've made me one!</source>
          <target state="translated">Entonces,¿cuál es el gran problema con eso? Se ve bien,¿no? Después de todo,te acabo de decir que necesitas una serie de referencias,así que por Dios,¡me has hecho una!</target>
        </trans-unit>
        <trans-unit id="c5f7a9040d43fdd63e7b31365a3279f444817139" translate="yes" xml:space="preserve">
          <source>So, you email your various translators (the boss decides that the languages du jour are Chinese, Arabic, Russian, and Italian, so you have one translator for each), asking for translations for &quot;I scanned %g directory.&quot; and &quot;I scanned %g directories.&quot;. When they reply, you'll put that in the lexicons for gettext to use when it localizes your software, so that when the user is running under the &quot;zh&quot; (Chinese) locale, gettext(&quot;I scanned %g directory.&quot;) will return the appropriate Chinese text, with a &quot;%g&quot; in there where printf can then interpolate $dir_scan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b8aecd3aaaa33e35d9724dfec4e61ddcb14189" translate="yes" xml:space="preserve">
          <source>So:</source>
          <target state="translated">So:</target>
        </trans-unit>
        <trans-unit id="93c6a1f183694628e37ced41591147bfc0da1908" translate="yes" xml:space="preserve">
          <source>Socket</source>
          <target state="translated">Socket</target>
        </trans-unit>
        <trans-unit id="1a669dbe9f824af2034872bc98a2b6823a4c09af" translate="yes" xml:space="preserve">
          <source>Socket option level constant for setsockopt() and getsockopt().</source>
          <target state="translated">Constante de nivel de opción de enchufe para setsockopt()y getsockopt().</target>
        </trans-unit>
        <trans-unit id="e89a311c363b4ef4dc4be93eaeb6560498486275" translate="yes" xml:space="preserve">
          <source>Socket option name constants for IPv4 socket options at the &lt;code&gt;IPPROTO_IP&lt;/code&gt; level.</source>
          <target state="translated">Constantes de nombre de opci&amp;oacute;n de socket para opciones de socket IPv4 en el nivel &lt;code&gt;IPPROTO_IP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d741b5bebfd867658e744ca3a901afeae953cecf" translate="yes" xml:space="preserve">
          <source>Socket option name constants for IPv6 socket options at the &lt;code&gt;IPPROTO_IPV6&lt;/code&gt; level.</source>
          <target state="translated">Constantes de nombre de opci&amp;oacute;n de socket para opciones de socket IPv6 en el nivel &lt;code&gt;IPPROTO_IPV6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bea3c52b1b205afb6610aaf669b9a46fdff261d" translate="yes" xml:space="preserve">
          <source>Socket option name constants for TCP socket options at the &lt;code&gt;IPPROTO_TCP&lt;/code&gt; level.</source>
          <target state="translated">Constantes de nombre de opci&amp;oacute;n de socket para opciones de socket TCP en el nivel &lt;code&gt;IPPROTO_TCP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8943cecdeb64eeb6c75caac188d81a6e580de3c7" translate="yes" xml:space="preserve">
          <source>Socket option name constants for setsockopt() and getsockopt() at the &lt;code&gt;SOL_SOCKET&lt;/code&gt; level.</source>
          <target state="translated">Constantes de nombre de opci&amp;oacute;n de socket para setsockopt () y getsockopt () en el nivel &lt;code&gt;SOL_SOCKET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a16f3d4e350888989be5c310a53b83649d06948" translate="yes" xml:space="preserve">
          <source>Socket option value constants for &lt;code&gt;IP_TOS&lt;/code&gt; socket option.</source>
          <target state="translated">Constantes de valor de opci&amp;oacute;n de socket para la opci&amp;oacute;n de socket &lt;code&gt;IP_TOS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa50a464d89f205a80a64569fe1c6e97815468d2" translate="yes" xml:space="preserve">
          <source>Socket option value contants for &lt;code&gt;IP_MTU_DISCOVER&lt;/code&gt; socket option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734337896e45cc2ebeff48479a66b46bdd05ddb4" translate="yes" xml:space="preserve">
          <source>Socket type constants to use as the second argument to socket(), or the value of the &lt;code&gt;SO_TYPE&lt;/code&gt; socket option.</source>
          <target state="translated">Constantes de tipo de socket para usar como segundo argumento de socket (), o el valor de la opci&amp;oacute;n de socket &lt;code&gt;SO_TYPE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bedda872ecdb70c2a2d140ada477f5b294eb6f0" translate="yes" xml:space="preserve">
          <source>Socket.</source>
          <target state="translated">Socket.</target>
        </trans-unit>
        <trans-unit id="ebe92a08483968e414740930bf0a0a08483ad931" translate="yes" xml:space="preserve">
          <source>Socket.a</source>
          <target state="translated">Socket.a</target>
        </trans-unit>
        <trans-unit id="848572346180cfeef643ccd7fddcc1762d26f13a" translate="yes" xml:space="preserve">
          <source>Sockets: Client/Server Communication</source>
          <target state="translated">Enchufes:Comunicación cliente/servidor</target>
        </trans-unit>
        <trans-unit id="7ec10a4e74fb45054402ed905e46c34443ecf08d" translate="yes" xml:space="preserve">
          <source>Sockopts =&amp;gt; ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96898c7bdde72d33b35d72cb9458ecfe538b1436" translate="yes" xml:space="preserve">
          <source>Software distributions released to the CPAN include a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9951caf8addf9e39a4e5a9ec448dfc26c21d1a" translate="yes" xml:space="preserve">
          <source>Solaris (x86, SPARC)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfadcc007c702d16ecd0e6f6d3baeefff3d72aa" translate="yes" xml:space="preserve">
          <source>Solaris 10 documentation on syslog, &lt;a href=&quot;http://docs.sun.com/app/docs/doc/816-5168/syslog-3c?a=view&quot;&gt;http://docs.sun.com/app/docs/doc/816-5168/syslog-3c?a=view&lt;/a&gt;</source>
          <target state="translated">Documentaci&amp;oacute;n de Solaris 10 en syslog, &lt;a href=&quot;http://docs.sun.com/app/docs/doc/816-5168/syslog-3c?a=view&quot;&gt;http://docs.sun.com/app/docs/doc/816-5168/syslog-3c?a=view&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c7dc4f9a32286dc36b6fd2393ea8eff49fa670d" translate="yes" xml:space="preserve">
          <source>Solaris 11 documentation on syslog, &lt;a href=&quot;https://docs.oracle.com/cd/E53394_01/html/E54766/syslog-3c.html&quot;&gt;https://docs.oracle.com/cd/E53394_01/html/E54766/syslog-3c.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa552d1b28be69cf1da96419b8a90307162871" translate="yes" xml:space="preserve">
          <source>Solaris 7 and above will run in either 32 bit or 64 bit mode on SPARC CPUs, via a reboot. You can build 64 bit apps whilst running 32 bit mode and vice-versa. 32 bit apps will run under Solaris running in either 32 or 64 bit mode. 64 bit apps require Solaris to be running 64 bit mode.</source>
          <target state="translated">Solaris 7 y superior se ejecutará en modo de 32 o 64 bits en las CPU SPARC,mediante un reinicio.Puedes construir aplicaciones de 64 bits mientras corres en modo de 32 bits y viceversa.Las aplicaciones de 32 bits se ejecutarán en Solaris en modo de 32 o 64 bits.Las aplicaciones de 64 bits requieren que Solaris se ejecute en modo de 64 bits.</target>
        </trans-unit>
        <trans-unit id="bd381ce5f7739cf9ac8dad77ffda2188f3978def" translate="yes" xml:space="preserve">
          <source>Solaris Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed34c43c64cf4558fcdec9f488cfa58f0a1b6fe3" translate="yes" xml:space="preserve">
          <source>Solaris FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef2766b707c501497b46c746afec2754f6fc860" translate="yes" xml:space="preserve">
          <source>Solaris Version Numbers.</source>
          <target state="translated">Números de versión de Solaris.</target>
        </trans-unit>
        <trans-unit id="cc61dfb91810e5a0313350199a1b65c0af136cfa" translate="yes" xml:space="preserve">
          <source>Solaris global loading added by Nick Ing-Simmons with design/coding assistance from Tim Bunce, January 1996.</source>
          <target state="translated">La carga global de Solaris añadida por Nick Ing-Simmons con la ayuda de diseño/codificación de Tim Bunce,enero de 1996.</target>
        </trans-unit>
        <trans-unit id="708154fc528413c51483abd6933e68d503e36bdc" translate="yes" xml:space="preserve">
          <source>Solaris may include two versions of perl, e.g. Solaris 9 includes both 5.005_03 and 5.6.1. This is to provide stability across Solaris releases, in cases where a later perl version has incompatibilities with the version included in the preceding Solaris release. The default perl version will always be the most recent, and in general the old version will only be retained for one Solaris release. Note also that the default perl will NOT be configured to search for modules in the older version, again due to compatibility/stability concerns. As a consequence if you upgrade Solaris, you will have to rebuild/reinstall any additional CPAN modules that you installed for the previous Solaris version. See the CPAN manpage under 'autobundle' for a quick way of doing this.</source>
          <target state="translated">Solaris puede incluir dos versiones de perl,por ejemplo,Solaris 9 incluye tanto 5.005_03 como 5.6.1.Esto es para proporcionar estabilidad a través de las versiones de Solaris,en los casos en que una versión posterior de perl tenga incompatibilidades con la versión incluida en la versión precedente de Solaris.La versión de perl por defecto siempre será la más reciente,y en general la versión antigua sólo se conservará para una versión de Solaris.Tenga en cuenta también que el perl por defecto NO se configurará para buscar módulos en la versión anterior,de nuevo debido a problemas de compatibilidad/estabilidad.Por consiguiente,si actualiza Solaris,tendrá que reconstruir/reinstalar los módulos CPAN adicionales que haya instalado para la versión anterior de Solaris.Vea la página de manual del CPAN en 'autoconjunto' para una forma rápida de hacerlo.</target>
        </trans-unit>
        <trans-unit id="4bfa1cd2c976e4c546cb366d1dac1622384583a6" translate="yes" xml:space="preserve">
          <source>Solaris provides some BSD-compatibility functions in /usr/ucblib/libucb.a. Perl will not build and run correctly if linked against -lucb since it contains routines that are incompatible with the standard Solaris libc. Normally this is not a problem since the solaris hints file prevents Configure from even looking in /usr/ucblib for libraries, and also explicitly omits -lucb.</source>
          <target state="translated">Solaris proporciona algunas funciones de compatibilidad BSD en /usr/ucblib/libucb.a.Perl no se construirá y ejecutará correctamente si se enlaza contra -lucb ya que contiene rutinas que son incompatibles con la libc estándar de Solaris.Normalmente esto no es un problema,ya que el archivo hints de Solaris impide a Configurar incluso buscar bibliotecas en /usr/ucblib,y también omite explícitamente -lucb.</target>
        </trans-unit>
        <trans-unit id="d0c3f51965773ced91efb778a3671a3477592fd4" translate="yes" xml:space="preserve">
          <source>Solaris ships with a range of Solaris-specific modules. If you choose to install your own version of perl you will find the source of many of these modules is available on CPAN under the Sun::Solaris:: namespace.</source>
          <target state="translated">Las naves de Solaris con una gama de módulos específicos de Solaris.Si elige instalar su propia versión de perl encontrará la fuente de muchos de estos módulos en el CPAN bajo el Sol::Solaris::namespace.</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="05b004a92e5eda3ec6e47516b582fc25b61b35b9" translate="yes" xml:space="preserve">
          <source>Solutions</source>
          <target state="translated">Solutions</target>
        </trans-unit>
        <trans-unit id="9cdf28d779226e286e9b065703a4425b88267886" translate="yes" xml:space="preserve">
          <source>Solving the problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b2aad45d07b70e1b7eefea74316913901b6e42" translate="yes" xml:space="preserve">
          <source>Some</source>
          <target state="translated">Some</target>
        </trans-unit>
        <trans-unit id="5f679f54e4d0cf2197954f773a392f8d165d2696" translate="yes" xml:space="preserve">
          <source>Some (minor) parts copyright 2009 Adam Kennedy.</source>
          <target state="translated">Algunas partes (menores)tienen derechos de autor de 2009 Adam Kennedy.</target>
        </trans-unit>
        <trans-unit id="3a644bfc8b4acacc1b56f8b5a49f0fbd16c47364" translate="yes" xml:space="preserve">
          <source>Some *nix programs use fork() a lot; with the mostly useful flavors of perl for OS/2 (there are several built simultaneously) this is supported; but some flavors do not support this (e.g., when Perl is called from inside REXX). Using fork() after</source>
          <target state="translated">Algunos programas de *nix utilizan mucho el fork();con los sabores más útiles de perl para OS/2 (hay varios construidos simultáneamente)esto está soportado;pero algunos sabores no lo soportan (por ejemplo,cuando se llama a Perl desde el interior de REXX).Usando fork()después de</target>
        </trans-unit>
        <trans-unit id="6a808c47f9491da438c1507c81067e0d0ad1d610" translate="yes" xml:space="preserve">
          <source>Some / became \ in pdksh.</source>
          <target state="translated">Algunos se convirtieron en PDHS.</target>
        </trans-unit>
        <trans-unit id="2ced2108dbb21d847b539e5bf8d6eae4e6952b9e" translate="yes" xml:space="preserve">
          <source>Some &lt;code&gt;/&lt;/code&gt; became &lt;code&gt;\&lt;/code&gt; in pdksh.</source>
          <target state="translated">Algunos &lt;code&gt;/&lt;/code&gt; se convirtieron en &lt;code&gt;\&lt;/code&gt; en pdksh.</target>
        </trans-unit>
        <trans-unit id="aee5f872bb2cc36da4c3ed1ff4e14aea96b6faa3" translate="yes" xml:space="preserve">
          <source>Some &lt;code&gt;Win*&lt;/code&gt; entry points also overload a &quot;meaningful&quot; return value with the error indicator; having a 0 return value indicates an error. Yet some other &lt;code&gt;Win*&lt;/code&gt; entry points overload things even more, and 0 return value may mean a successful call returning a valid value 0, as well as an error condition; in the case of a 0 return value one should call WinGetLastError() API to distinguish a successful call from a failing one.</source>
          <target state="translated">Algunos puntos de entrada de &lt;code&gt;Win*&lt;/code&gt; tambi&amp;eacute;n sobrecargan un valor de retorno &quot;significativo&quot; con el indicador de error; tener un valor de retorno de 0 indica un error. Sin embargo, algunos otros puntos de entrada de &lt;code&gt;Win*&lt;/code&gt; sobrecargan las cosas a&amp;uacute;n m&amp;aacute;s, y el valor de retorno 0 puede significar una llamada exitosa que devuelve un valor v&amp;aacute;lido 0, as&amp;iacute; como una condici&amp;oacute;n de error; en el caso de un valor de retorno de 0, se debe llamar a la API WinGetLastError () para distinguir una llamada exitosa de una que falla.</target>
        </trans-unit>
        <trans-unit id="7d77130c6b6fd9352c737bed1bb1dcb935bd9ca9" translate="yes" xml:space="preserve">
          <source>Some DLLs are only present in some versions of OS/2, or in some configurations of OS/2. Some exported entry points are present only in DLLs shipped with some versions of OS/2. If these DLLs and entry points were linked directly for a Perl executable/DLL or from a Perl extensions, this binary would work only with the specified versions/setups. Even if these entry points were not needed, the</source>
          <target state="translated">Algunas DLL sólo están presentes en algunas versiones de OS/2,o en algunas configuraciones de OS/2.Algunos puntos de entrada exportados sólo están presentes en las DLL que se suministran con algunas versiones de OS/2.Si estas DLL y puntos de entrada estuvieran enlazados directamente para un ejecutable/DLL de Perl o desde una extensión de Perl,este binario funcionaría sólo con las versiones/configuraciones especificadas.Incluso si estos puntos de entrada no fueran necesarios,el</target>
        </trans-unit>
        <trans-unit id="8e4ba3d45352907bcc89de2a6a57c8be8f5ee286" translate="yes" xml:space="preserve">
          <source>Some Filters Clobber the &lt;code&gt;DATA&lt;/code&gt; Handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14adc2a370c74e9f0b7a6eb136961fb44f4e9d5e" translate="yes" xml:space="preserve">
          <source>Some IBM EBCDIC character sets may be known by character code set identification numbers (CCSID numbers) or code page numbers.</source>
          <target state="translated">Algunos conjuntos de caracteres EBCDIC de IBM pueden conocerse por los números de identificación del conjunto de caracteres (números CCSID)o los números de página de códigos.</target>
        </trans-unit>
        <trans-unit id="20970d609d169c267b614af470114dc6b026c453" translate="yes" xml:space="preserve">
          <source>Some Irix cc versions, e.g. 7.3.1.1m (try cc -version) have been known to have issues (coredumps) when compiling perl.c. If you've used -OPT:fast_io=ON and this happens, try removing it. If that fails, or you didn't use that, then try adjusting other optimization options (-LNO, -INLINE, -O3 to -O2, etcetera). The compiler bug has been reported to SGI. (Allen Smith &amp;lt;easmith@beatrice.rutgers.edu&amp;gt;)</source>
          <target state="translated">Se sabe que algunas versiones cc de Irix, por ejemplo 7.3.1.1m (pruebe la versi&amp;oacute;n cc) tienen problemas (coredumps) al compilar perl.c. Si ha utilizado -OPT: fast_io = ON y esto sucede, intente eliminarlo. Si eso falla, o no lo us&amp;oacute;, intente ajustar otras opciones de optimizaci&amp;oacute;n (-LNO, -INLINE, -O3 a -O2, etc&amp;eacute;tera). El error del compilador ha sido informado a SGI. (Allen Smith &amp;lt;easmith@beatrice.rutgers.edu&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="e270800f9e2c9ef58198c6c9f8463f63bac86a3b" translate="yes" xml:space="preserve">
          <source>Some Linux platforms have a maximum stack size. Setting too large of a stack size will cause thread creation to fail.</source>
          <target state="translated">Algunas plataformas Linux tienen un tamaño máximo de pila.Establecer un tamaño de pila demasiado grande hará que falle la creación de hilos.</target>
        </trans-unit>
        <trans-unit id="bad9f67e1f3cb77c4fe9db59234d0c5d6bb841b2" translate="yes" xml:space="preserve">
          <source>Some OSes do not need these in which case leave it blank.</source>
          <target state="translated">Algunos sistemas operativos no necesitan esto,en cuyo caso déjalo en blanco.</target>
        </trans-unit>
        <trans-unit id="69e7c8fdafb5d76df4c8f736ecf437657f4dc150" translate="yes" xml:space="preserve">
          <source>Some Pod formatters output to formats that implement non-breaking spaces as an individual character (which I'll call &quot;NBSP&quot;), and others output to formats that implement non-breaking spaces just as spaces wrapped in a &quot;don't break this across lines&quot; code. Note that at the level of Pod, both sorts of codes can occur: Pod can contain a NBSP character (whether as a literal, or as a &quot;E&amp;lt;160&amp;gt;&quot; or &quot;E&amp;lt;nbsp&amp;gt;&quot; code); and Pod can contain &quot;S&amp;lt;foo I&amp;lt;bar&amp;gt; baz&amp;gt;&quot; codes, where &quot;mere spaces&quot; (character 32) in such codes are taken to represent non-breaking spaces. Pod parsers should consider supporting the optional parsing of &quot;S&amp;lt;foo I&amp;lt;bar&amp;gt; baz&amp;gt;&quot; as if it were &quot;foo</source>
          <target state="translated">Algunos formateadores de pod dan salida a formatos que implementan espacios que no se rompen como un car&amp;aacute;cter individual (que llamar&amp;eacute; &quot;NBSP&quot;), y otros dan salida a formatos que implementan espacios que no se rompen, como los espacios envueltos en un &quot;no rompa esto a trav&amp;eacute;s de l&amp;iacute;neas &quot;c&amp;oacute;digo. Tenga en cuenta que en el nivel de Pod, pueden ocurrir ambos tipos de c&amp;oacute;digos: Pod puede contener un car&amp;aacute;cter NBSP (ya sea como un literal, o como un c&amp;oacute;digo &quot;E &amp;lt;160&amp;gt;&quot; o &quot;E &amp;lt;nbsp&amp;gt;&quot;); y Pod puede contener c&amp;oacute;digos &quot;S &amp;lt;foo I &amp;lt;bar&amp;gt; baz&amp;gt;&quot;, donde &quot;meros espacios&quot; (car&amp;aacute;cter 32) en dichos c&amp;oacute;digos se toman para representar espacios que no se dividen. Los analizadores de pod deben considerar la posibilidad de admitir el an&amp;aacute;lisis opcional de &quot;S &amp;lt;foo I &amp;lt;bar&amp;gt; baz&amp;gt;&quot; como si fuera &quot;foo</target>
        </trans-unit>
        <trans-unit id="f04294d93d5e63f6eed93e1148616595ef1487e2" translate="yes" xml:space="preserve">
          <source>Some Sys-V based systems, notably Solaris 2.X, redefined some of the standard socket constants. Since these were constant across all architectures, they were often hardwired into perl code. The proper way to deal with this is to &quot;use Socket&quot; to get the correct values.</source>
          <target state="translated">Algunos sistemas basados en Sys-V,en particular Solaris 2.X,redefinieron algunas de las constantes de los enchufes estándar.Dado que estas eran constantes en todas las arquitecturas,a menudo estaban cableadas en código perl.La forma correcta de tratar esto es &quot;usar el socket&quot; para obtener los valores correctos.</target>
        </trans-unit>
        <trans-unit id="a5a0c5f6bf86975f2c301ba492652230f705bf5a" translate="yes" xml:space="preserve">
          <source>Some Unicode properties have a restricted set of legal values. For example, all binary properties are restricted to just &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; ; and there are only a few dozen possible General Categories.</source>
          <target state="translated">Algunas propiedades Unicode tienen un conjunto restringido de valores legales. Por ejemplo, todas las propiedades binarias est&amp;aacute;n restringidas a &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; ; y solo hay unas pocas docenas de categor&amp;iacute;as generales posibles.</target>
        </trans-unit>
        <trans-unit id="9e6eb6762559c642717c0b35b0e9407b4ea3c431" translate="yes" xml:space="preserve">
          <source>Some Unicode properties have a restricted set of legal values. For example, all binary properties are restricted to just &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; ; and there are only a few dozen possible General Categories. Use &lt;code&gt;prop_values&lt;/code&gt; to find out if a given property is one such, and if so, to get a list of the values:</source>
          <target state="translated">Algunas propiedades Unicode tienen un conjunto restringido de valores legales. Por ejemplo, todas las propiedades binarias est&amp;aacute;n restringidas a &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; ; y solo hay unas pocas docenas de categor&amp;iacute;as generales posibles. Utilice &lt;code&gt;prop_values&lt;/code&gt; para averiguar si una propiedad dada es tal y, de ser as&amp;iacute;, para obtener una lista de los valores:</target>
        </trans-unit>
        <trans-unit id="5c1e962daca68404a4b5aeb9ebaf19ea3e632a80" translate="yes" xml:space="preserve">
          <source>Some Unicode properties have a restricted set of legal values. For example, all binary properties are restricted to just &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;; and there are only a few dozen possible General Categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f826abadcb88c4b8481c939d03177c526f688d85" translate="yes" xml:space="preserve">
          <source>Some Unicode properties have a restricted set of legal values. For example, all binary properties are restricted to just &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;; and there are only a few dozen possible General Categories. Use &lt;code&gt;prop_values&lt;/code&gt; to find out if a given property is one such, and if so, to get a list of the values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da934a0c72e4b177f3b0df8a238ca7ff76fadba5" translate="yes" xml:space="preserve">
          <source>Some Unixes, especially more recent ones, are free of this inherent security bug. On such systems, when the kernel passes the name of the set-id script to open to the interpreter, rather than using a pathname subject to meddling, it instead passes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16213d61f5d76543cce7f4b52c976b8f28e064a" translate="yes" xml:space="preserve">
          <source>Some approximate operating system names and their &lt;a href=&quot;perlvar#%24%5EO&quot;&gt;&lt;code&gt;$^O&lt;/code&gt;&lt;/a&gt; values in the &quot;OTHER&quot; category include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd2e23e9cee0c22d7103f4f9a78d73d761dd3aa" translate="yes" xml:space="preserve">
          <source>Some approximate operating system names and their &lt;code&gt;$^O&lt;/code&gt; values in the &quot;OTHER&quot; category include:</source>
          <target state="translated">Algunos nombres de sistemas operativos aproximados y sus valores &lt;code&gt;$^O&lt;/code&gt; en la categor&amp;iacute;a &quot;OTRO&quot; incluyen:</target>
        </trans-unit>
        <trans-unit id="fc63731ea34f43c4af1c4ec405f7ea69ef1d9704" translate="yes" xml:space="preserve">
          <source>Some authors have strange characters in their names.</source>
          <target state="translated">Algunos autores tienen caracteres extraños en sus nombres.</target>
        </trans-unit>
        <trans-unit id="6877eb2746dbad4bb0e9e27d968022bfea3412f0" translate="yes" xml:space="preserve">
          <source>Some background on thread implementations from the operating system viewpoint. There are three basic categories of threads: user-mode threads, kernel threads, and multiprocessor kernel threads.</source>
          <target state="translated">Algunos antecedentes sobre implementaciones de hilos desde el punto de vista del sistema operativo.Hay tres categorías básicas de hilos:hilos en modo de usuario,hilos de núcleo y hilos de núcleo multiprocesador.</target>
        </trans-unit>
        <trans-unit id="fc0d6a626635ac5ae4291cc3487e50efd6ae5a14" translate="yes" xml:space="preserve">
          <source>Some bits may be relevant at compile-time only, some at run-time only. This is a new mechanism and the details may change. See also &lt;a href=&quot;perldebguts&quot;&gt;perldebguts&lt;/a&gt;.</source>
          <target state="translated">Algunos bits pueden ser relevantes solo en tiempo de compilaci&amp;oacute;n, algunos solo en tiempo de ejecuci&amp;oacute;n. Este es un nuevo mecanismo y los detalles pueden cambiar. V&amp;eacute;ase tambi&amp;eacute;n &lt;a href=&quot;perldebguts&quot;&gt;perldebguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd8e9b1766f0e1e6eaaded7abc870a37e4571ff0" translate="yes" xml:space="preserve">
          <source>Some brief examples:</source>
          <target state="translated">Algunos ejemplos breves:</target>
        </trans-unit>
        <trans-unit id="61327002f5b3861abd79c62e144ccb79536f4f22" translate="yes" xml:space="preserve">
          <source>Some builtins (e.g. &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt;) has a call signature that cannot completely be representated with a Perl prototype. This means that some valid Perl code will be invalid under autodie. As an example:</source>
          <target state="translated">Algunas incorporaciones (por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/truncate&quot;&gt;truncate&lt;/a&gt;&lt;/code&gt; ) tienen una firma de llamada que no se puede representar completamente con un prototipo de Perl. Esto significa que alg&amp;uacute;n c&amp;oacute;digo Perl v&amp;aacute;lido no ser&amp;aacute; v&amp;aacute;lido en autodie. Como ejemplo:</target>
        </trans-unit>
        <trans-unit id="7e79ef5917eeda28b646e901197de5a6a38623ed" translate="yes" xml:space="preserve">
          <source>Some builtins (e.g. &lt;code&gt;chdir&lt;/code&gt; or &lt;code&gt;truncate&lt;/code&gt;) has a call signature that cannot completely be representated with a Perl prototype. This means that some valid Perl code will be invalid under autodie. As an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21eaccc7842c81c4d4f8ac981ea6b511271286ba" translate="yes" xml:space="preserve">
          <source>Some calls simply aren't available, real or emulated, on every platform.</source>
          <target state="translated">Algunas llamadas simplemente no están disponibles,reales o emuladas,en todas las plataformas.</target>
        </trans-unit>
        <trans-unit id="f873ff9032d8b5cf7f774b66c05c986170a4cd42" translate="yes" xml:space="preserve">
          <source>Some characters have multiple names (synonyms).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7144ad6e6fa073f902e93d5905df49ebac937d92" translate="yes" xml:space="preserve">
          <source>Some code points also have abbreviated names, such as &quot;LF&quot; or &quot;NL&quot;. &lt;code&gt;viacode&lt;/code&gt; never returns these.</source>
          <target state="translated">Algunos puntos de c&amp;oacute;digo tambi&amp;eacute;n tienen nombres abreviados, como &quot;LF&quot; o &quot;NL&quot;. &lt;code&gt;viacode&lt;/code&gt; nunca devuelve estos.</target>
        </trans-unit>
        <trans-unit id="73ac6d49c092929d2ed08d514c7b1beb64ede02a" translate="yes" xml:space="preserve">
          <source>Some code taken from &lt;a href=&quot;../more&quot;&gt;Test::More&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Catch&quot;&gt;Test::Catch&lt;/a&gt;, written by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;. Hence, those parts Copyright Micheal G Schwern 2001. Used and distributed with permission.</source>
          <target state="translated">Alg&amp;uacute;n c&amp;oacute;digo tomado de &lt;a href=&quot;../more&quot;&gt;Test :: More&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Catch&quot;&gt;Test :: Catch&lt;/a&gt; , escrito por Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;. Por lo tanto, esas partes son Copyright Micheal G Schwern 2001. Usado y distribuido con permiso.</target>
        </trans-unit>
        <trans-unit id="5561c8c582f640440613f3fca93ddc04efa36da2" translate="yes" xml:space="preserve">
          <source>Some code taken from &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; and &lt;a href=&quot;Test::Catch&quot;&gt;Test::Catch&lt;/a&gt;, written by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;. Hence, those parts Copyright Micheal G Schwern 2001. Used and distributed with permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e5cd1d1e32143aa0622aa3ff5ac884d8c3a28f" translate="yes" xml:space="preserve">
          <source>Some comparison operators, as their associativity,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1339e50839100723841e8e48747e9f9a1f5bed3" translate="yes" xml:space="preserve">
          <source>Some constants and functions are exported by default by this module; but for backward-compatibility any recently-added symbols are not exported by default and must be requested explicitly. When an import list is provided to the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Socket&lt;/code&gt; line, the default exports are not automatically imported. It is therefore best practice to always to explicitly list all the symbols required.</source>
          <target state="translated">Algunas constantes y funciones son exportadas por defecto por este m&amp;oacute;dulo; pero para la compatibilidad con versiones anteriores, los s&amp;iacute;mbolos agregados recientemente no se exportan de forma predeterminada y deben solicitarse expl&amp;iacute;citamente. Cuando se proporciona una lista de importaci&amp;oacute;n a la l&amp;iacute;nea de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Socket&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; , las exportaciones predeterminadas no se importan autom&amp;aacute;ticamente. Por lo tanto, es una buena pr&amp;aacute;ctica enumerar siempre expl&amp;iacute;citamente todos los s&amp;iacute;mbolos requeridos.</target>
        </trans-unit>
        <trans-unit id="54e9eafb99e932590ca2a179b6517831860be80f" translate="yes" xml:space="preserve">
          <source>Some constants and functions are exported by default by this module; but for backward-compatibility any recently-added symbols are not exported by default and must be requested explicitly. When an import list is provided to the &lt;code&gt;use Socket&lt;/code&gt; line, the default exports are not automatically imported. It is therefore best practice to always to explicitly list all the symbols required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078dd465c32a4795a8e3e38bd49c7d92d32009a8" translate="yes" xml:space="preserve">
          <source>Some constants don't print correctly either with or without &lt;b&gt;-d&lt;/b&gt;. For instance, neither B::Deparse nor Data::Dumper know how to print dual-valued scalars correctly, as in:</source>
          <target state="translated">Algunas constantes no se imprimen correctamente con o sin &lt;b&gt;-d&lt;/b&gt; . Por ejemplo, ni B :: Deparse ni Data :: Dumper saben c&amp;oacute;mo imprimir escalares de doble valor correctamente, como en:</target>
        </trans-unit>
        <trans-unit id="c475f4b24c437233a2b88333a558801f98c19297" translate="yes" xml:space="preserve">
          <source>Some contexts allow 2 or even 1 digit, but any usage without exactly three digits, the first being a zero, may give unintended results. (For example, in a regular expression it may be confused with a backreference; see &lt;a href=&quot;perlrebackslash#Octal-escapes&quot;&gt;&quot;Octal escapes&quot; in perlrebackslash&lt;/a&gt;.) Starting in Perl 5.14, you may use &lt;code&gt;\o{}&lt;/code&gt; instead, which avoids all these problems. Otherwise, it is best to use this construct only for ordinals &lt;code&gt;\077&lt;/code&gt; and below, remembering to pad to the left with zeros to make three digits. For larger ordinals, either use &lt;code&gt;\o{}&lt;/code&gt;, or convert to something else, such as to hex and use &lt;code&gt;\N{U+}&lt;/code&gt; (which is portable between platforms with different character sets) or &lt;code&gt;\x{}&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e689eba4cf9a38a4acdff5d45d4adaf1f020711" translate="yes" xml:space="preserve">
          <source>Some contexts allow 2 or even 1 digit, but any usage without exactly three digits, the first being a zero, may give unintended results. (For example, in a regular expression it may be confused with a backreference; see &lt;a href=&quot;perlrebackslash#Octal-escapes&quot;&gt;Octal escapes in perlrebackslash&lt;/a&gt;.) Starting in Perl 5.14, you may use &lt;code&gt;\o{}&lt;/code&gt; instead, which avoids all these problems. Otherwise, it is best to use this construct only for ordinals &lt;code&gt;\077&lt;/code&gt; and below, remembering to pad to the left with zeros to make three digits. For larger ordinals, either use &lt;code&gt;\o{}&lt;/code&gt; , or convert to something else, such as to hex and use &lt;code&gt;\N{U+}&lt;/code&gt; (which is portable between platforms with different character sets) or &lt;code&gt;\x{}&lt;/code&gt; instead.</source>
          <target state="translated">Algunos contextos permiten 2 o incluso 1 d&amp;iacute;gito, pero cualquier uso sin exactamente tres d&amp;iacute;gitos, siendo el primero un cero, puede dar resultados no deseados. (Por ejemplo, en una expresi&amp;oacute;n regular puede confundirse con una referencia inversa; consulte Escapes &lt;a href=&quot;perlrebackslash#Octal-escapes&quot;&gt;octal en perlrebackslash&lt;/a&gt; .) A partir de Perl 5.14, puede usar &lt;code&gt;\o{}&lt;/code&gt; lugar, lo que evita todos estos problemas. De lo contrario, es mejor usar esta construcci&amp;oacute;n solo para los ordinales &lt;code&gt;\077&lt;/code&gt; e inferiores, recordando rellenar a la izquierda con ceros para hacer tres d&amp;iacute;gitos. Para ordinales m&amp;aacute;s grandes, use &lt;code&gt;\o{}&lt;/code&gt; , o convi&amp;eacute;rtalo a otra cosa, como hexadecimal y use &lt;code&gt;\N{U+}&lt;/code&gt; (que es port&amp;aacute;til entre plataformas con diferentes conjuntos de caracteres) o &lt;code&gt;\x{}&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="17469d7643e0741d1ada43cbcada6ad7b4213174" translate="yes" xml:space="preserve">
          <source>Some cool command line examples to impress the Python crowd ;)</source>
          <target state="translated">Algunos ejemplos geniales de línea de comando para impresionar a la multitud de Python ;)</target>
        </trans-unit>
        <trans-unit id="4f597c06196db5dfae23debf5b526fce9cd25685" translate="yes" xml:space="preserve">
          <source>Some cool command line examples to impress the Python crowd ;) You might want to compare them to the results under -Mbignum or -Mbigrat:</source>
          <target state="translated">Algunos ejemplos geniales de línea de comando para impresionar a la multitud de Python ;)Puede que quieras compararlos con los resultados de -Mbignum o -Mbigrat:</target>
        </trans-unit>
        <trans-unit id="c6746b978d2a5bd75b46a34b757950222f7e2d87" translate="yes" xml:space="preserve">
          <source>Some database drivers for DBI can also automatically encode and decode, but that is sometimes limited to the UTF-8 encoding.</source>
          <target state="translated">Algunos controladores de bases de datos para DBI también pueden codificar y decodificar automáticamente,pero eso a veces se limita a la codificación UTF-8.</target>
        </trans-unit>
        <trans-unit id="20c968c59a29a0ad6a0ddbad176bb82749120644" translate="yes" xml:space="preserve">
          <source>Some devices will be expecting a &quot;\r&quot; at the end of each line rather than a &quot;\n&quot;. In some ports of perl, &quot;\r&quot; and &quot;\n&quot; are different from their usual (Unix) ASCII values of &quot;\015&quot; and &quot;\012&quot;. You may have to give the numeric values you want directly, using octal (&quot;\015&quot;), hex (&quot;0x0D&quot;), or as a control-character specification (&quot;\cM&quot;).</source>
          <target state="translated">Algunos dispositivos esperan un &quot;\r&quot; al final de cada línea en lugar de un &quot;\N&quot;.En algunos puertos de Perl,&quot;\N&quot; y &quot;\N&quot; son diferentes de sus habituales valores ASCII (Unix)de &quot;\N -015&quot; y &quot;\N -012&quot;.Puede que tengas que dar los valores numéricos que quieras directamente,usando octal (&quot;\015&quot;),hexagonal (&quot;0x0D&quot;),o como una especificación de caracteres de control (&quot;\cM&quot;).</target>
        </trans-unit>
        <trans-unit id="29952c75d7a51b190a8cddfeefebadadc1b42414" translate="yes" xml:space="preserve">
          <source>Some digits that &lt;code&gt;\d&lt;/code&gt; matches look like some of the [0-9] ones, but have different values. For example, BENGALI DIGIT FOUR (U+09EA) looks very much like an ASCII DIGIT EIGHT (U+0038), and LEPCHA DIGIT SIX (U+1C46) looks very much like an ASCII DIGIT FIVE (U+0035). An application that is expecting only the ASCII digits might be misled, or if the match is &lt;code&gt;\d+&lt;/code&gt;, the matched string might contain a mixture of digits from different writing systems that look like they signify a number different than they actually do. &lt;a href=&quot;Unicode::UCD#num%28%29&quot;&gt;&quot;num()&quot; in Unicode::UCD&lt;/a&gt; can be used to safely calculate the value, returning &lt;code&gt;undef&lt;/code&gt; if the input string contains such a mixture. Otherwise, for example, a displayed price might be deliberately different than it appears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15270299f74ddedc9cb2a27cec0a8d56d430a18" translate="yes" xml:space="preserve">
          <source>Some digits that &lt;code&gt;\d&lt;/code&gt; matches look like some of the [0-9] ones, but have different values. For example, BENGALI DIGIT FOUR (U+09EA) looks very much like an ASCII DIGIT EIGHT (U+0038). An application that is expecting only the ASCII digits might be misled, or if the match is &lt;code&gt;\d+&lt;/code&gt; , the matched string might contain a mixture of digits from different writing systems that look like they signify a number different than they actually do. &lt;a href=&quot;unicode/ucd#num()&quot;&gt;num() in Unicode::UCD&lt;/a&gt; can be used to safely calculate the value, returning &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the input string contains such a mixture.</source>
          <target state="translated">Algunos d&amp;iacute;gitos que coinciden con &lt;code&gt;\d&lt;/code&gt; parecen a algunos de los [0-9], pero tienen valores diferentes. Por ejemplo, BENGALI DIGIT FOUR (U + 09EA) se parece mucho a un ASCII DIGIT OCHO (U + 0038). Una aplicaci&amp;oacute;n que espera solo los d&amp;iacute;gitos ASCII puede ser enga&amp;ntilde;ada, o si la coincidencia es &lt;code&gt;\d+&lt;/code&gt; , la cadena coincidente puede contener una mezcla de d&amp;iacute;gitos de diferentes sistemas de escritura que parecen significar un n&amp;uacute;mero diferente al que realmente significan. &lt;a href=&quot;unicode/ucd#num()&quot;&gt;num () en Unicode :: UCD&lt;/a&gt; se puede utilizar para calcular de forma segura el valor, devolviendo &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si la cadena de entrada contiene dicha mezcla.</target>
        </trans-unit>
        <trans-unit id="eb6208f023afd54f9f4acc30a7d493bf14dc6378" translate="yes" xml:space="preserve">
          <source>Some distributions may fail some tests, but you may want to install them anyway (as above, or via &lt;code&gt;force install&lt;/code&gt; command of &lt;code&gt;CPAN.pm&lt;/code&gt; shell-mode).</source>
          <target state="translated">Algunas distribuciones pueden fallar algunas pruebas, pero es posible que desee instalar de todas formas (como el anterior, o por medio de &lt;code&gt;force install&lt;/code&gt; el mando de &lt;code&gt;CPAN.pm&lt;/code&gt; modo shell).</target>
        </trans-unit>
        <trans-unit id="673083d85e2bc8b38798cec75fcc0568d074003d" translate="yes" xml:space="preserve">
          <source>Some distributions may need to link to libraries or other third-party code and their build and installation sequences may be more complicated. Check any</source>
          <target state="translated">Es posible que algunas distribuciones necesiten enlazar con bibliotecas u otros códigos de terceros y que sus secuencias de construcción e instalación sean más complicadas.Revise cualquier</target>
        </trans-unit>
        <trans-unit id="1c42a00c69d1bae42ece6b69f30632a5649a6c28" translate="yes" xml:space="preserve">
          <source>Some documentation is not available as man pages, so if a cross-reference is not found by man, try it with &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;. Perldoc can also take you directly to documentation for functions (with the &lt;b&gt;-f&lt;/b&gt; switch). See &lt;code&gt;perldoc --help&lt;/code&gt; (or &lt;a href=&quot;perldoc&quot;&gt;&lt;code&gt;perldoc perldoc&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;man perldoc&lt;/code&gt;) for other helpful options &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; has to offer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14b5226c1b3194a20df87855367bd2962c1e595" translate="yes" xml:space="preserve">
          <source>Some documentation is not available as man pages, so if a cross-reference is not found by man, try it with &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;. Perldoc can also take you directly to documentation for functions (with the &lt;b&gt;-f&lt;/b&gt; switch). See &lt;code&gt;perldoc --help&lt;/code&gt; (or &lt;code&gt;perldoc perldoc&lt;/code&gt; or &lt;code&gt;man perldoc&lt;/code&gt; ) for other helpful options &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; has to offer.</source>
          <target state="translated">Parte de la documentaci&amp;oacute;n no est&amp;aacute; disponible como p&amp;aacute;ginas de manual, por lo que si man no encuentra una referencia cruzada, int&amp;eacute;ntelo con &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; . Perldoc tambi&amp;eacute;n puede llevarlo directamente a la documentaci&amp;oacute;n de funciones (con el &lt;b&gt;modificador -f&lt;/b&gt; ). Consulte &lt;code&gt;perldoc --help&lt;/code&gt; (o &lt;code&gt;perldoc perldoc&lt;/code&gt; o &lt;code&gt;man perldoc&lt;/code&gt; ) para conocer otras opciones &amp;uacute;tiles que &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; tiene para ofrecer.</target>
        </trans-unit>
        <trans-unit id="24f338e775f9d8f25e87916116198ed5fdfd8fac" translate="yes" xml:space="preserve">
          <source>Some earlier versions of this module had docs with some confusing typos in the description of &lt;code&gt;skip(...)&lt;/code&gt; .</source>
          <target state="translated">Algunas versiones anteriores de este m&amp;oacute;dulo ten&amp;iacute;an documentos con algunos errores tipogr&amp;aacute;ficos confusos en la descripci&amp;oacute;n de &lt;code&gt;skip(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="755fe62cf032f564de90de30771b7c019c165183" translate="yes" xml:space="preserve">
          <source>Some earlier versions of this module had docs with some confusing typos in the description of &lt;code&gt;skip(...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5fff71fc694b06c17e66dad87b134506e2302b" translate="yes" xml:space="preserve">
          <source>Some essentially obsolete locales that aren't supersets of ASCII, mainly those in ISO 646 or other 7-bit locales, such as ASMO 449, can also have problems, depending on what portions of the ASCII character set get changed by the locale and are also used by the program. The warning message lists the determinable conflicting characters.</source>
          <target state="translated">Algunos locales esencialmente obsoletos que no son superconjuntos de ASCII,principalmente los de ISO 646 u otros locales de 7 bits,como ASMO 449,también pueden tener problemas,dependiendo de qué partes del conjunto de caracteres ASCII son cambiadas por el local y también son utilizadas por el programa.El mensaje de advertencia enumera los caracteres conflictivos determinables.</target>
        </trans-unit>
        <trans-unit id="e8b38cbb77fcb476bf8e2983ccfda5ed33f46a79" translate="yes" xml:space="preserve">
          <source>Some example section specifications follow.</source>
          <target state="translated">A continuación se presentan algunos ejemplos de especificaciones de sección.</target>
        </trans-unit>
        <trans-unit id="6e29ae8ec1bfc30435ce56e5aeb3c20b82d6940f" translate="yes" xml:space="preserve">
          <source>Some examples of lists include:</source>
          <target state="translated">Algunos ejemplos de listas incluyen:</target>
        </trans-unit>
        <trans-unit id="ae84b84bf5612613743104cf4d1d3f624e770f5d" translate="yes" xml:space="preserve">
          <source>Some examples of syntactically invalid attribute lists (with annotation):</source>
          <target state="translated">Algunos ejemplos de listas de atributos sintácticamente inválidos (con anotación):</target>
        </trans-unit>
        <trans-unit id="9c0e82c6c1b276d5dbb162e62c1346aa697136e3" translate="yes" xml:space="preserve">
          <source>Some examples of syntactically valid attribute lists:</source>
          <target state="translated">Algunos ejemplos de listas de atributos con validez sintáctica:</target>
        </trans-unit>
        <trans-unit id="9ef77adb00cc27df250473773f43482c29f3a24d" translate="yes" xml:space="preserve">
          <source>Some examples of valid string input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">Algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="75d23fa0c37e5a03812b09ef6b9c46fbb0fa3389" translate="yes" xml:space="preserve">
          <source>Some extensions provide filters on data entry/exit points, such as &lt;code&gt;DB_File::filter_store_key&lt;/code&gt; and family. Look out for such filters in the documentation of your extensions; they can make the transition to Unicode data much easier.</source>
          <target state="translated">Algunas extensiones proporcionan filtros en los puntos de entrada / salida de datos, como &lt;code&gt;DB_File::filter_store_key&lt;/code&gt; y family. Busque dichos filtros en la documentaci&amp;oacute;n de sus extensiones; pueden facilitar mucho la transici&amp;oacute;n a datos Unicode.</target>
        </trans-unit>
        <trans-unit id="1ba2d8223f5d5832c6d62c8b546d87c608dd84fc" translate="yes" xml:space="preserve">
          <source>Some extensions, like DB_File and Compress::Zlib use/require prebuilt libraries for the perl extensions/modules to work. If these libraries are built using the default configuration, it might happen that you run into an error like &quot;invalid loader fixup&quot; during load phase. HP is aware of this problem. Search the HP-UX cxx-dev forums for discussions about the subject. The short answer is that &lt;b&gt;everything&lt;/b&gt; (all libraries, everything) must be compiled with &lt;code&gt;+z&lt;/code&gt; or &lt;code&gt;+Z&lt;/code&gt; to be PIC (position independent code). (For gcc, that would be &lt;code&gt;-fpic&lt;/code&gt; or &lt;code&gt;-fPIC&lt;/code&gt; ). In HP-UX 11.00 or newer the linker error message should tell the name of the offending object file.</source>
          <target state="translated">Algunas extensiones, como DB_File y Compress :: Zlib usan / requieren bibliotecas precompiladas para que funcionen las extensiones / m&amp;oacute;dulos de perl. Si estas bibliotecas se compilan con la configuraci&amp;oacute;n predeterminada, puede ocurrir que se encuentre con un error como &quot;reparaci&amp;oacute;n del cargador no v&amp;aacute;lida&quot; durante la fase de carga. HP es consciente de este problema. Busque en los foros de HP-UX cxx-dev las discusiones sobre el tema. La respuesta corta es que &lt;b&gt;todo&lt;/b&gt; (todas las bibliotecas, todo) debe ser compilado con &lt;code&gt;+z&lt;/code&gt; o &lt;code&gt;+Z&lt;/code&gt; para ser PIC (c&amp;oacute;digo independiente de posici&amp;oacute;n). (Para gcc, ser&amp;iacute;a &lt;code&gt;-fpic&lt;/code&gt; o &lt;code&gt;-fPIC&lt;/code&gt; ). En HP-UX 11.00 o posterior, el mensaje de error del vinculador deber&amp;iacute;a indicar el nombre del archivo de objeto infractor.</target>
        </trans-unit>
        <trans-unit id="97e5fb9532f2e63b2e8307d7b53c5f2c9628f824" translate="yes" xml:space="preserve">
          <source>Some extensions, like DB_File and Compress::Zlib use/require prebuilt libraries for the perl extensions/modules to work. If these libraries are built using the default configuration, it might happen that you run into an error like &quot;invalid loader fixup&quot; during load phase. HP is aware of this problem. Search the HP-UX cxx-dev forums for discussions about the subject. The short answer is that &lt;b&gt;everything&lt;/b&gt; (all libraries, everything) must be compiled with &lt;code&gt;+z&lt;/code&gt; or &lt;code&gt;+Z&lt;/code&gt; to be PIC (position independent code). (For gcc, that would be &lt;code&gt;-fpic&lt;/code&gt; or &lt;code&gt;-fPIC&lt;/code&gt;). In HP-UX 11.00 or newer the linker error message should tell the name of the offending object file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96048dd05a92d52cf8eb93ed66aaff949feef0b8" translate="yes" xml:space="preserve">
          <source>Some features of Storable can lead to security vulnerabilities if you accept Storable documents from untrusted sources with the default flags. Most obviously, the optional (off by default) CODE reference serialization feature allows transfer of code to the deserializing process. Furthermore, any serialized object will cause Storable to helpfully load the module corresponding to the class of the object in the deserializing module. For manipulated module names, this can load almost arbitrary code. Finally, the deserialized object's destructors will be invoked when the objects get destroyed in the deserializing process. Maliciously crafted Storable documents may put such objects in the value of a hash key that is overridden by another key/value pair in the same hash, thus causing immediate destructor execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7fd53f722062eada03c99c5c0131726fe7cb4c" translate="yes" xml:space="preserve">
          <source>Some features of Storable can lead to security vulnerabilities if you accept Storable documents from untrusted sources. Most obviously, the optional (off by default) CODE reference serialization feature allows transfer of code to the deserializing process. Furthermore, any serialized object will cause Storable to helpfully load the module corresponding to the class of the object in the deserializing module. For manipulated module names, this can load almost arbitrary code. Finally, the deserialized object's destructors will be invoked when the objects get destroyed in the deserializing process. Maliciously crafted Storable documents may put such objects in the value of a hash key that is overridden by another key/value pair in the same hash, thus causing immediate destructor execution.</source>
          <target state="translated">Algunas características del Storable pueden provocar vulnerabilidades de seguridad si se aceptan documentos del Storable de fuentes no fiables.Lo más obvio es que la característica opcional (desactivada por defecto)de serialización de referencia de CÓDIGO permite transferir el código al proceso de deserialización.Además,cualquier objeto serializado hará que Storable cargue de forma útil el módulo correspondiente a la clase del objeto en el módulo de deserialización.En el caso de nombres de módulos manipulados,esto puede cargar un código casi arbitrario.Finalmente,los destructores del objeto deserializado serán invocados cuando los objetos sean destruidos en el proceso de deserialización.Los documentos almacenables elaborados malintencionadamente pueden poner esos objetos en el valor de una clave hash que es anulada por otro par clave/valor en el mismo hash,lo que provoca la ejecución inmediata del destructor.</target>
        </trans-unit>
        <trans-unit id="f752a90675005dd54235d7444500f6345be768a8" translate="yes" xml:space="preserve">
          <source>Some fields (prereq, optional_features) indicate the particular version(s) of some other module that may be required as a prerequisite. This section details the Version Range type used to provide this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4359f8aa4aabe1dad1748bdef1a7b9a37c1bbf67" translate="yes" xml:space="preserve">
          <source>Some fields are marked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db1ec9986268b7b9f60738685c3882e9bc3347c" translate="yes" xml:space="preserve">
          <source>Some fields require a version specification (ex. &lt;a href=&quot;#requires&quot;&gt;&quot;requires&quot;&lt;/a&gt;, &lt;a href=&quot;#recommends&quot;&gt;&quot;recommends&quot;&lt;/a&gt;, &lt;a href=&quot;#build_requires&quot;&gt;&quot;build_requires&quot;&lt;/a&gt;, etc.) to indicate the particular version(s) of some other module that may be required as a prerequisite. This section details the version specification formats that are currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97585d9b5872f5fb97ab1bbd9ba4d3f871bc3309" translate="yes" xml:space="preserve">
          <source>Some fields require a version specification (ex. &lt;a href=&quot;#requires&quot;&gt;&quot;requires&quot;&lt;/a&gt;, &lt;a href=&quot;#recommends&quot;&gt;&quot;recommends&quot;&lt;/a&gt;, &lt;a href=&quot;#build_requires&quot;&gt;&quot;build_requires&quot;&lt;/a&gt;, etc.). This section details the version specifications that are currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a5845f2d183141d3d5841eae9982c91a04a877" translate="yes" xml:space="preserve">
          <source>Some filesystems may not support UTF-8 file names, or they may be supported incompatibly with Perl. Therefore UTF-8 names that are visible to the filesystem, such as module names may not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410f15ec6c766d4ad924aef6bed79d8486d14679" translate="yes" xml:space="preserve">
          <source>Some folks are surprised that &lt;code&gt;make distclean&lt;/code&gt; does not delete everything not listed in their MANIFEST (thus making a clean distribution) but only tells them what they need to delete. This is done because it is considered too dangerous. While developing your module you might write a new file, not add it to the MANIFEST, then run a &lt;code&gt;distclean&lt;/code&gt; and be sad because your new work was deleted.</source>
          <target state="translated">Algunas personas se sorprenden de que &lt;code&gt;make distclean&lt;/code&gt; no borre todo lo que no est&amp;eacute; listado en su MANIFEST (haciendo as&amp;iacute; una distribuci&amp;oacute;n limpia) sino que solo les dice lo que necesitan borrar. Esto se hace porque se considera demasiado peligroso. Mientras desarrolla su m&amp;oacute;dulo, puede escribir un nuevo archivo, no agregarlo al MANIFEST, luego ejecutar un &lt;code&gt;distclean&lt;/code&gt; y estar triste porque su nuevo trabajo fue eliminado.</target>
        </trans-unit>
        <trans-unit id="278e93ddc6a44b33edbb2aa1b1e3252bdefc68ee" translate="yes" xml:space="preserve">
          <source>Some folks would prefer full alphanumeric prototypes. Alphanumerics have been intentionally left out of prototypes for the express purpose of someday in the future adding named, formal parameters. The current mechanism's main goal is to let module writers provide better diagnostics for module users. Larry feels the notation quite understandable to Perl programmers, and that it will not intrude greatly upon the meat of the module, nor make it harder to read. The line noise is visually encapsulated into a small pill that's easy to swallow.</source>
          <target state="translated">Algunos preferirían prototipos alfanuméricos completos.Los alfanuméricos se han dejado intencionadamente fuera de los prototipos con el propósito expreso de añadir algún día en el futuro parámetros formales con nombre.El objetivo principal del mecanismo actual es permitir que los escritores de módulos proporcionen mejores diagnósticos a los usuarios de los módulos.Larry cree que la notación es bastante comprensible para los programadores de Perl,y que no se inmiscuirá mucho en la carne del módulo,ni lo hará más difícil de leer.El ruido de la línea está visualmente encapsulado en una pequeña píldora que es fácil de tragar.</target>
        </trans-unit>
        <trans-unit id="97b6babea6d7a1882a7f9edff1a7d1c57e6e6a28" translate="yes" xml:space="preserve">
          <source>Some format names that formatters currently are known to accept include &quot;roff&quot;, &quot;man&quot;, &quot;latex&quot;, &quot;tex&quot;, &quot;text&quot;, and &quot;html&quot;. (Some formatters will treat some of these as synonyms.)</source>
          <target state="translated">Algunos nombres de formatos que los formateadores aceptan actualmente son &quot;roff&quot;,&quot;man&quot;,&quot;latex&quot;,&quot;tex&quot;,&quot;text&quot; y &quot;html&quot;.(Algunos formateadores tratarán algunos de estos como sinónimos).</target>
        </trans-unit>
        <trans-unit id="947f64f8eb13b365edd8f2a637d714cf57c4bdc9" translate="yes" xml:space="preserve">
          <source>Some formatter subclasses use this as a flag for whether output should have prologue and epilogue code omitted. For example, setting this to true for an HTML formatter class should omit the &quot;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;...&amp;lt;/title&amp;gt;&amp;lt;body&amp;gt;...&quot; prologue and the &quot;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&quot; epilogue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae9c58f7596d57c13463eeb374970b17faa09ff" translate="yes" xml:space="preserve">
          <source>Some frequently seen examples:</source>
          <target state="translated">Algunos ejemplos que se ven con frecuencia:</target>
        </trans-unit>
        <trans-unit id="5f63fbe742ecc7df05393f6e705a1b34f98dd874" translate="yes" xml:space="preserve">
          <source>Some functions are provided to simplify customization.</source>
          <target state="translated">Se proporcionan algunas funciones para simplificar la personalización.</target>
        </trans-unit>
        <trans-unit id="37fca23bc4f77bc45e835fb641ab69a99facbd7e" translate="yes" xml:space="preserve">
          <source>Some functions are slower when working on UTF-8 encoded strings than on byte encoded strings. All functions that need to hop over characters such as &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt;, or matching regular expressions can work &lt;b&gt;much&lt;/b&gt; faster when the underlying data are byte-encoded.</source>
          <target state="translated">Algunas funciones son m&amp;aacute;s lentas cuando se trabaja en cadenas codificadas en UTF-8 que en cadenas codificadas por bytes. Todas las funciones que necesitan saltar sobre caracteres como &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; , o expresiones regulares coincidentes pueden funcionar &lt;b&gt;mucho&lt;/b&gt; m&amp;aacute;s r&amp;aacute;pido cuando los datos subyacentes est&amp;aacute;n codificados por bytes.</target>
        </trans-unit>
        <trans-unit id="29d81f6ce46ee6c8888e985a057496dc42144979" translate="yes" xml:space="preserve">
          <source>Some functions are slower when working on UTF-8 encoded strings than on byte encoded strings. All functions that need to hop over characters such as &lt;code&gt;length()&lt;/code&gt;, &lt;code&gt;substr()&lt;/code&gt; or &lt;code&gt;index()&lt;/code&gt;, or matching regular expressions can work &lt;b&gt;much&lt;/b&gt; faster when the underlying data are byte-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83116620b210d6b01d6ea586806a731e05a2beb8" translate="yes" xml:space="preserve">
          <source>Some functions available based on the version of VMS. (VMS)</source>
          <target state="translated">Algunas funciones disponibles basadas en la versión de VMS.(VMS)</target>
        </trans-unit>
        <trans-unit id="851bf3122418d781546b0c8256e17049b7be4c91" translate="yes" xml:space="preserve">
          <source>Some languages work directly with the memory addresses of values, but this can be like playing with fire. Perl provides a set of asbestos gloves for handling all memory management. The closest to an address operator in Perl is the backslash operator, but it gives you a &lt;b&gt;hard reference&lt;/b&gt;, which is much safer than a memory address.</source>
          <target state="translated">Algunos lenguajes trabajan directamente con las direcciones de memoria de los valores, pero esto puede ser como jugar con fuego. Perl proporciona un juego de guantes de amianto para manejar toda la gesti&amp;oacute;n de la memoria. Lo m&amp;aacute;s cercano a un operador de direcci&amp;oacute;n en Perl es el operador de barra invertida, pero le brinda una &lt;b&gt;referencia s&amp;oacute;lida&lt;/b&gt; , que es mucho m&amp;aacute;s segura que una direcci&amp;oacute;n de memoria.</target>
        </trans-unit>
        <trans-unit id="3b63ca608d0f3df96b959d17a1dcc8d27338725f" translate="yes" xml:space="preserve">
          <source>Some layers will automatically insert required lower level layers if not present; for example &lt;code&gt;:perlio&lt;/code&gt; will insert &lt;code&gt;:unix&lt;/code&gt; below itself for low level IO, and &lt;code&gt;:encoding&lt;/code&gt; will insert the platform defaults for buffered IO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2879836a3b0aef43a136fc41d29e15e272723203" translate="yes" xml:space="preserve">
          <source>Some libraries use methods that don't modify their argument, and some libraries don't even use objects, but rather unblessed references. Because of this, liberary methods are always called as class methods, not instance methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2704cdd835e2ffc2151c5b3e73d345acc2100f0" translate="yes" xml:space="preserve">
          <source>Some locales have special sorting rules.</source>
          <target state="translated">Algunos locales tienen reglas especiales de clasificación.</target>
        </trans-unit>
        <trans-unit id="4cbad0bcc8b3efd678863ec66e302790409bbb20" translate="yes" xml:space="preserve">
          <source>Some methods take slightly different arguments to those defined in &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; in attempt to make the interface more flexible. These are</source>
          <target state="translated">Algunos m&amp;eacute;todos toman argumentos ligeramente diferentes a los definidos en &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; para intentar hacer la interfaz m&amp;aacute;s flexible. Estos son</target>
        </trans-unit>
        <trans-unit id="4d5ca2cd44839d0147fa7ed895887914f1a8f96d" translate="yes" xml:space="preserve">
          <source>Some modules have an event loop, waiting for user-input. It is highly unlikely that two such modules would work adequately together in a single Perl application.</source>
          <target state="translated">Algunos módulos tienen un bucle de eventos,esperando la entrada del usuario.Es muy improbable que dos de esos módulos funcionen adecuadamente juntos en una sola aplicación Perl.</target>
        </trans-unit>
        <trans-unit id="e535cd54feac531816f027ba1cdedeba3dabdc08" translate="yes" xml:space="preserve">
          <source>Some modules have validation for particular types of input, such as &lt;a href=&quot;Business::ISBN&quot;&gt;Business::ISBN&lt;/a&gt;, &lt;a href=&quot;Business::CreditCard&quot;&gt;Business::CreditCard&lt;/a&gt;, &lt;a href=&quot;Email::Valid&quot;&gt;Email::Valid&lt;/a&gt;, and &lt;a href=&quot;Data::Validate::IP&quot;&gt;Data::Validate::IP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99aeed54cc1e7c695f296661c28f743d9f582de7" translate="yes" xml:space="preserve">
          <source>Some modules have validation for particular types of input, such as &lt;a href=&quot;http://search.cpan.org/perldoc/Business::ISBN&quot;&gt;Business::ISBN&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Business::CreditCard&quot;&gt;Business::CreditCard&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Valid&quot;&gt;Email::Valid&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Data::Validate::IP&quot;&gt;Data::Validate::IP&lt;/a&gt;.</source>
          <target state="translated">Algunos m&amp;oacute;dulos tienen validaci&amp;oacute;n para tipos particulares de entrada, como &lt;a href=&quot;http://search.cpan.org/perldoc/Business::ISBN&quot;&gt;Business :: ISBN&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Business::CreditCard&quot;&gt;Business :: CreditCard&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Valid&quot;&gt;Email :: Valid&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Data::Validate::IP&quot;&gt;Data :: Validate :: IP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8896acdebb142a8bf319a25d0ebc467b0372d0f5" translate="yes" xml:space="preserve">
          <source>Some modules live both in the &lt;b&gt;Standard Library&lt;/b&gt; and on &lt;b&gt;CPAN&lt;/b&gt;. These modules might be developed on two tracks as people modify either version. The trend currently is to untangle these situations.</source>
          <target state="translated">Algunos m&amp;oacute;dulos viven tanto en la &lt;b&gt;biblioteca est&amp;aacute;ndar&lt;/b&gt; como en &lt;b&gt;CPAN&lt;/b&gt; . Estos m&amp;oacute;dulos pueden desarrollarse en dos pistas a medida que las personas modifican cualquiera de las versiones. La tendencia actual es desenredar estas situaciones.</target>
        </trans-unit>
        <trans-unit id="267ef3c8246a5b5e4dbd867563c1e64b65448f37" translate="yes" xml:space="preserve">
          <source>Some modules look directly at hash keys on the Test::Builder singleton. The problem here is that the Test::Builder singleton no longer holds anything important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215c8776bbaeb0d62cdfe5e95b87468adeef4092" translate="yes" xml:space="preserve">
          <source>Some modules may call a non-perl library that is locale-aware. This is fine as long as it doesn't try to query or change the locale using the system &lt;code&gt;setlocale&lt;/code&gt;. But if these do call the system &lt;code&gt;setlocale&lt;/code&gt;, those calls may be ineffective. Instead, &lt;a href=&quot;perlapi#Perl_setlocale&quot;&gt;&lt;code&gt;Perl_setlocale&lt;/code&gt;&lt;/a&gt; works in all circumstances. Plain setlocale is ineffective on multi-threaded POSIX 2008 systems. It operates only on the global locale, whereas each thread has its own locale, paying no attention to the global one. Since converting these non-Perl libraries to &lt;code&gt;Perl_setlocale&lt;/code&gt; is out of the question, there is a new function in v5.28 &lt;a href=&quot;perlapi#switch_to_global_locale&quot;&gt;&lt;code&gt;switch_to_global_locale&lt;/code&gt;&lt;/a&gt; that will switch the thread it is called from so that any system &lt;code&gt;setlocale&lt;/code&gt; calls will have their desired effect. The function &lt;a href=&quot;perlapi#sync_locale&quot;&gt;&lt;code&gt;sync_locale&lt;/code&gt;&lt;/a&gt; must be called before returning to perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2536c5611f03605401087c295c560b8c0a55966f" translate="yes" xml:space="preserve">
          <source>Some modules might have special reporting requirements, such as a Github or Google Code tracking system, so you should check the module documentation too.</source>
          <target state="translated">Algunos módulos pueden tener requisitos especiales de presentación de informes,como un sistema de seguimiento de Github o Google Code,por lo que también deberías comprobar la documentación del módulo.</target>
        </trans-unit>
        <trans-unit id="9d3dcbb265761ea263567338345aa34c90c2eea2" translate="yes" xml:space="preserve">
          <source>Some modules, mainly extensions, provide their own AUTOLOAD subroutines. They typically need to check for some special cases (such as constants) and then fallback to &lt;b&gt;AutoLoader&lt;/b&gt;'s AUTOLOAD for the rest.</source>
          <target state="translated">Algunos m&amp;oacute;dulos, principalmente extensiones, proporcionan sus propias subrutinas AUTOLOAD. Por lo general, necesitan verificar algunos casos especiales (como constantes) y luego &lt;b&gt;recurrir a&lt;/b&gt; AUTOLOAD de &lt;b&gt;AutoLoader&lt;/b&gt; para el resto.</target>
        </trans-unit>
        <trans-unit id="f0adb7b022a9b5dadbc9c6aa9b58b0a54e7f8265" translate="yes" xml:space="preserve">
          <source>Some more examples, all returning 250:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c12ec8767768e2405ac12fa9dd3e5b3e02eaa4d" translate="yes" xml:space="preserve">
          <source>Some names known to &lt;code&gt;\N{...}&lt;/code&gt; refer to a sequence of multiple characters, instead of the usual single character. When one of these is included in the class, the entire sequence is matched. For example,</source>
          <target state="translated">Algunos nombres conocidos por &lt;code&gt;\N{...}&lt;/code&gt; refieren a una secuencia de varios caracteres, en lugar del car&amp;aacute;cter &amp;uacute;nico habitual. Cuando uno de estos se incluye en la clase, se empareja toda la secuencia. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="86874fce71a4882d328a8877cd2a4fc52a6a4fe2" translate="yes" xml:space="preserve">
          <source>Some networking library functions like gethostbyname() are known to have their own implementations of timeouts which may conflict with your timeouts. If you have problems with such functions, try using the POSIX sigaction() function, which bypasses Perl safe signals. Be warned that this does subject you to possible memory corruption, as described above.</source>
          <target state="translated">Algunas funciones de biblioteca de red como gethostbyname()son conocidas por tener sus propias implementaciones de tiempos muertos que pueden entrar en conflicto con sus tiempos muertos.Si tienes problemas con tales funciones,intenta usar la función POSIX sigaction(),que evita las señales seguras de Perl.Tenga en cuenta que esto lo expone a una posible corrupción de la memoria,como se ha descrito anteriormente.</target>
        </trans-unit>
        <trans-unit id="0ce6014b84ac6fe075f649ff6034ad219b7b909a" translate="yes" xml:space="preserve">
          <source>Some non-Perl implementations of the Age property may change its meaning to be the same as the Perl &lt;code&gt;Present_In&lt;/code&gt; property; just be aware of that.</source>
          <target state="translated">Algunas implementaciones de la propiedad Age que no son de Perl pueden cambiar su significado para que sea el mismo que el de la propiedad &lt;code&gt;Present_In&lt;/code&gt; de Perl ; Solo ten cuidado con eso.</target>
        </trans-unit>
        <trans-unit id="020d12e0872ef168546404b52284bd6940ecd187" translate="yes" xml:space="preserve">
          <source>Some non-numeric HTML entity name, such as &lt;code&gt;E&amp;lt;eacute&amp;gt;&lt;/code&gt; , meaning the same thing as &lt;code&gt;&amp;amp;eacute;&lt;/code&gt; in HTML -- i.e., a lowercase e with an acute (/-shaped) accent.</source>
          <target state="translated">Alg&amp;uacute;n nombre de entidad HTML no num&amp;eacute;rico, como &lt;code&gt;E&amp;lt;eacute&amp;gt;&lt;/code&gt; , que significa lo mismo que &lt;code&gt;&amp;amp;eacute;&lt;/code&gt; en HTML, es decir, una e min&amp;uacute;scula con un acento agudo (en forma de /).</target>
        </trans-unit>
        <trans-unit id="d647bb86c88fea55dd1fa79cef8c74e6a775c39b" translate="yes" xml:space="preserve">
          <source>Some non-numeric HTML entity name, such as &lt;code&gt;E&amp;lt;eacute&amp;gt;&lt;/code&gt;, meaning the same thing as &lt;code&gt;&amp;amp;eacute;&lt;/code&gt; in HTML -- i.e., a lowercase e with an acute (/-shaped) accent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742d524f056fc75f1015c7da11070249cb40a21b" translate="yes" xml:space="preserve">
          <source>Some notes about ftp archives: Please use a long descriptive file name that includes the version number. Most incoming directories will not be readable/listable, i.e., you won't be able to see your file after uploading it. Remember to send your email notification message as soon as possible after uploading else your file may get deleted automatically. Allow time for the file to be processed and/or check the file has been processed before announcing its location.</source>
          <target state="translated">Algunas notas sobre los archivos ftp:Por favor,utilice un nombre de archivo descriptivo largo que incluya el número de versión.La mayoría de los directorios entrantes no serán legibles/listables,es decir,no podrá ver su archivo después de subirlo.Recuerda enviar tu mensaje de notificación por correo electrónico lo antes posible después de subirlo,de lo contrario tu archivo puede ser eliminado automáticamente.Deje pasar un tiempo para que el archivo sea procesado y/o compruebe que el archivo ha sido procesado antes de anunciar su ubicación.</target>
        </trans-unit>
        <trans-unit id="7d0867bfec63bbea7b4c7184ee3d3a80f6c90eb5" translate="yes" xml:space="preserve">
          <source>Some of Test::Tester's functions return arrays of these hashes, just like Test::Builder-&amp;gt;details. That is, the hash for the first test will be array element 1 (not 0). Element 0 will not be a hash it will be a string which contains any diagnostic output that came before the first test. This should usually be empty, if it's not, it means something output diagnostics before any test results showed up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5039f425d422cec80636f2fe25c7aa8c335808" translate="yes" xml:space="preserve">
          <source>Some of the books we've listed appear almost ancient in internet scale, but we've included those books because they still describe the current way of doing things. Not everything in Perl changes every day. Many of the beginner-level books, too, go over basic features and techniques that are still valid today. In general though, we try to limit this list to books published in the past five years.</source>
          <target state="translated">Algunos de los libros que hemos enumerado parecen casi antiguos a escala de Internet,pero hemos incluido esos libros porque todavía describen la forma actual de hacer las cosas.No todo en Perl cambia cada día.Muchos de los libros para principiantes,también,repasan características y técnicas básicas que siguen siendo válidas hoy en día.En general,sin embargo,tratamos de limitar esta lista a los libros publicados en los últimos cinco años.</target>
        </trans-unit>
        <trans-unit id="ec6365cb89577ea447484ee46de59521b7dffa94" translate="yes" xml:space="preserve">
          <source>Some of the built-in functions do not act exactly as documented in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;, and a few are not implemented at all. To avoid surprises, particularly if you have had prior exposure to Perl in other operating environments or if you intend to write code that will be portable to other environments, see &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for a reasonably definitive list of these differences.</source>
          <target state="translated">Algunas de las funciones integradas no act&amp;uacute;an exactamente como se documenta en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; , y algunas no se implementan en absoluto. Para evitar sorpresas, especialmente si ha estado expuesto previamente a Perl en otros entornos operativos o si tiene la intenci&amp;oacute;n de escribir c&amp;oacute;digo que ser&amp;aacute; port&amp;aacute;til a otros entornos, consulte &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; para obtener una lista razonablemente definitiva de estas diferencias.</target>
        </trans-unit>
        <trans-unit id="0c8239353496c2009cfe543c3292467ce35311ef" translate="yes" xml:space="preserve">
          <source>Some of the configuration files in /etc used by the networking APIs are either missing or have the wrong names. In particular, make sure that there's either an /etc/resolv.conf or an /etc/hosts, so that gethostbyname() works, and make sure that the file /etc/proto has been renamed to /etc/protocol (NOT /etc/protocols, as used by other Unix systems). You may have to look for things like HOSTNAME and DOMAINORIGIN in the &quot;//'SYS1.TCPPARMS(TCPDATA)'&quot; PDS member in order to properly set up your /etc networking files.</source>
          <target state="translated">Algunos de los archivos de configuración en /etc utilizados por las APIs de la red o bien faltan o tienen nombres equivocados.En particular,asegúrese de que haya un /etc/resolv.conf o un /etc/hosts,para que funcione gethostbyname(),y asegúrese de que el archivo /etc/proto haya sido renombrado a /etc/protocol (NO /etc/protocols,como se usa en otros sistemas Unix).Puede que tengas que buscar cosas como HOSTNAME y DOMAINORIGIN en el &quot;//'SYS1.TCPPARMS(TCPDATA)'&quot; miembro del PDS para poder configurar correctamente sus archivos de red de /etc.</target>
        </trans-unit>
        <trans-unit id="1d2fcdaf6bf2b0dace2c66c8a0e3613f9f85f66f" translate="yes" xml:space="preserve">
          <source>Some of the entries in the list are marked as &quot;experimental&quot;. This means these should not generally be used. They may be removed or changed without notice. You can ask why they are experimental by sending email to &lt;a href=&quot;mailto:perl5-porters@perl.org&quot;&gt;mailto:perl5-porters@perl.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b022f479803e9b4139aa894b3173d5ebd19950" translate="yes" xml:space="preserve">
          <source>Some of the examples later in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; use the &lt;a href=&quot;Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt; module from CPAN. The reason you might choose &lt;a href=&quot;Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt; over the perl built-in functions is that it works with numbers of ANY size, that it is optimized for speed on some operations, and for at least some programmers the notation might be familiar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c6dd767013c78841ab05e0e012ebcc93f26f14" translate="yes" xml:space="preserve">
          <source>Some of the examples later in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; use the &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt; module from CPAN. The reason you might choose &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt; over the perl built-in functions is that it works with numbers of ANY size, that it is optimized for speed on some operations, and for at least some programmers the notation might be familiar.</source>
          <target state="translated">Algunos de los ejemplos posteriores en &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; usan el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit :: Vector&lt;/a&gt; de CPAN. La raz&amp;oacute;n por la que puede elegir &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit :: Vector&lt;/a&gt; en lugar de las funciones integradas de perl es que funciona con n&amp;uacute;meros de CUALQUIER tama&amp;ntilde;o, que est&amp;aacute; optimizado para la velocidad en algunas operaciones y, al menos para algunos programadores, la notaci&amp;oacute;n puede resultar familiar.</target>
        </trans-unit>
        <trans-unit id="b1b52c56fd19edbbc0804a6b9841658fb64d4030" translate="yes" xml:space="preserve">
          <source>Some of the functionality of the debugging code can be achieved using XS modules.</source>
          <target state="translated">Parte de la funcionalidad del código de depuración se puede lograr usando módulos XS.</target>
        </trans-unit>
        <trans-unit id="bf0e1ecb04bb221fe8c8c990742dfa2a73f01086" translate="yes" xml:space="preserve">
          <source>Some of the functionality of the debugging code can be achieved with a non-debugging perl by using XS modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129d9d1e78c142ea547ff6b028cde8ebd0aadf7f" translate="yes" xml:space="preserve">
          <source>Some of the functions are called with a</source>
          <target state="translated">Algunas de las funciones se llaman con un</target>
        </trans-unit>
        <trans-unit id="43704b45451eba3bea984abb31f94004f6ecfd41" translate="yes" xml:space="preserve">
          <source>Some of the highlights of &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;:</source>
          <target state="translated">Algunos de los aspectos m&amp;aacute;s destacados de &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="02ba05af57929b86c26da34f7202e0310b46aa70" translate="yes" xml:space="preserve">
          <source>Some of the methods defined in &lt;code&gt;Net::FTP&lt;/code&gt; return an object which will be derived from the &lt;code&gt;Net::FTP::dataconn&lt;/code&gt; class. See &lt;a href=&quot;Net::FTP::dataconn&quot;&gt;Net::FTP::dataconn&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35b9e6be7b3bf5bc03040d536fb7da8f901aae2" translate="yes" xml:space="preserve">
          <source>Some of the methods defined in &lt;code&gt;Net::FTP&lt;/code&gt; return an object which will be derived from the &lt;code&gt;Net::FTP::dataconn&lt;/code&gt; class. See &lt;a href=&quot;ftp/dataconn&quot;&gt;Net::FTP::dataconn&lt;/a&gt; for more details.</source>
          <target state="translated">Algunos de los m&amp;eacute;todos definidos en &lt;code&gt;Net::FTP&lt;/code&gt; devuelven un objeto que se derivar&amp;aacute; de la clase &lt;code&gt;Net::FTP::dataconn&lt;/code&gt; . Consulte &lt;a href=&quot;ftp/dataconn&quot;&gt;Net :: FTP :: dataconn&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="085f62b2598cb482a6875006e876358d6d804f21" translate="yes" xml:space="preserve">
          <source>Some of the methods defined in &lt;code&gt;Net::FTP&lt;/code&gt; return an object which will be derived from this class. The dataconn class itself is derived from the &lt;code&gt;IO::Socket::INET&lt;/code&gt; class, so any normal IO operations can be performed. However the following methods are defined in the dataconn class and IO should be performed using these.</source>
          <target state="translated">Algunos de los m&amp;eacute;todos definidos en &lt;code&gt;Net::FTP&lt;/code&gt; devuelven un objeto que se derivar&amp;aacute; de esta clase. La clase de dataconn en s&amp;iacute; se deriva de la clase &lt;code&gt;IO::Socket::INET&lt;/code&gt; , por lo que se pueden realizar todas las operaciones de IO normales. Sin embargo, los siguientes m&amp;eacute;todos se definen en la clase dataconn y la E / S debe realizarse utilizando estos.</target>
        </trans-unit>
        <trans-unit id="fbd9bb2f70bdb8a22b7796ad4ee4aab43ab4a22a" translate="yes" xml:space="preserve">
          <source>Some of the modifiers require more explanation than given in the &lt;a href=&quot;#Overview&quot;&gt;&quot;Overview&quot;&lt;/a&gt; above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2754422800ffdc8654fa173c411cbbdaf9ca8a2" translate="yes" xml:space="preserve">
          <source>Some of the modules that use these libraries &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt;, &lt;a href=&quot;Math::BigFloat&quot;&gt;Math::BigFloat&lt;/a&gt;, and &lt;a href=&quot;Math::BigRat&quot;&gt;Math::BigRat&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312d5ef79ec3abd87646ed6a59f9c68ae862462d" translate="yes" xml:space="preserve">
          <source>Some of the most common mistakes:</source>
          <target state="translated">Algunos de los errores más comunes:</target>
        </trans-unit>
        <trans-unit id="5796d9bed54a4c270451442098ed19f9f0088003" translate="yes" xml:space="preserve">
          <source>Some of the most common values are &lt;code&gt;O_RDONLY&lt;/code&gt; for opening the file in read-only mode, &lt;code&gt;O_WRONLY&lt;/code&gt; for opening the file in write-only mode, and &lt;code&gt;O_RDWR&lt;/code&gt; for opening the file in read-write mode.</source>
          <target state="translated">Algunos de los valores m&amp;aacute;s comunes son &lt;code&gt;O_RDONLY&lt;/code&gt; para abrir el archivo en modo de solo lectura, &lt;code&gt;O_WRONLY&lt;/code&gt; para abrir el archivo en modo de solo escritura y &lt;code&gt;O_RDWR&lt;/code&gt; para abrir el archivo en modo de lectura-escritura.</target>
        </trans-unit>
        <trans-unit id="d5f4367d2cd66fe5bca2400a4df459be12cf9924" translate="yes" xml:space="preserve">
          <source>Some of the parser default template files in /samples are needed in /etc. In particular be sure that you at least copy /samples/yyparse.c to /etc before running Perl's Configure. This step ensures successful extraction of EBCDIC versions of parser files such as perly.c and perly.h. This has to be done before running Configure the first time. If you failed to do so then the easiest way to re-Configure Perl is to delete your misconfigured build root and re-extract the source from the tar ball. Then you must ensure that /etc/yyparse.c is properly in place before attempting to re-run Configure.</source>
          <target state="translated">Algunos de los archivos de plantilla por defecto del analizador en /samples se necesitan en /etc.En particular,asegúrese de copiar al menos el archivo /samples/yyparse.c en /etc antes de ejecutar el Configurar de Perl.Este paso asegura la extracción exitosa de las versiones EBCDIC de los archivos parser como perly.c y perly.h.Esto debe hacerse antes de ejecutar Configure la primera vez.Si no lo hizo,entonces la forma más fácil de reconfigurar Perl es borrar su raíz de construcción mal configurada y volver a extraer la fuente del balón de alquitrán.Entonces debes asegurarte de que /etc/yyparse.c está correctamente en su lugar antes de intentar volver a ejecutar Configure.</target>
        </trans-unit>
        <trans-unit id="83c0811a95d044951ce0ba50edb2e9cd1f45c8cb" translate="yes" xml:space="preserve">
          <source>Some of the reported info, such as hex addresses, is not particularly valuable. Other information would be more useful for the typical programmer, such as line-numbers, pad-slot reuses, etc.. Given this, -newlex is not a particularly good flag-name.</source>
          <target state="translated">Parte de la información reportada,como las direcciones hexagonales,no es particularmente valiosa.Otra información sería más útil para el programador típico,como números de línea,reutilizaciones de ranuras de pads,etc..Dado esto,-newlex no es un nombre de bandera particularmente bueno.</target>
        </trans-unit>
        <trans-unit id="6116e5b7738fb6cac5aba2e6136f23c97d874e1d" translate="yes" xml:space="preserve">
          <source>Some of the standard Perl XS extensions (see &lt;a href=&quot;#HISTORY&quot;&gt;&quot;HISTORY&quot;&lt;/a&gt; are also available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2180880e97e49639996064a1f6af7e81cac534b" translate="yes" xml:space="preserve">
          <source>Some of the standard Perl libraries are included, but not all: see &lt;a href=&quot;#HISTORY&quot;&gt;&quot;HISTORY&quot;&lt;/a&gt; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdf99bdb0c6c762dab8d358da246b612330e8fa" translate="yes" xml:space="preserve">
          <source>Some of these are also deprecated. You can exclude these from your compiled Perl by adding this option to Configure: &lt;code&gt;-Accflags='-DNO_MATHOMS'&lt;/code&gt;</source>
          <target state="translated">Algunos de estos tambi&amp;eacute;n est&amp;aacute;n obsoletos. Puede excluirlos de su Perl compilado agregando esta opci&amp;oacute;n a Configure: &lt;code&gt;-Accflags='-DNO_MATHOMS'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d94da1d47f6dfef189dc9a92fab735da2e9c93d7" translate="yes" xml:space="preserve">
          <source>Some of these books are available as free downloads.</source>
          <target state="translated">Algunos de estos libros están disponibles como descargas gratuitas.</target>
        </trans-unit>
        <trans-unit id="55b425b2a6fe515905b997d3820e2d955eabc2cf" translate="yes" xml:space="preserve">
          <source>Some of these functions also combine dynaloading semantic with the error-propagation semantic discussed above.</source>
          <target state="translated">Algunas de estas funciones también combinan la semántica de la dinamización con la semántica de la propagación de errores que se ha mencionado anteriormente.</target>
        </trans-unit>
        <trans-unit id="7a3b090758880601b5c97fb9b694e1e73a3369bc" translate="yes" xml:space="preserve">
          <source>Some of these methods might be of interest to general users, as well as of interest to formatter-writers.</source>
          <target state="translated">Algunos de estos métodos podrían ser de interés para los usuarios en general,así como de interés para los redactores de formatos.</target>
        </trans-unit>
        <trans-unit id="644a8605b72e956aa183e4a65e2c5fc19e8769dc" translate="yes" xml:space="preserve">
          <source>Some of these pseudo-modules import semantics into the current block scope (like &lt;a href=&quot;strict&quot;&gt;&lt;code&gt;strict&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/a&gt;, unlike ordinary modules, which import symbols into the current package (which are effective through the end of the file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80eb2a0ac01474685656b9eca0e98318c5698b3f" translate="yes" xml:space="preserve">
          <source>Some of these pseudo-modules import semantics into the current block scope (like &lt;code&gt;strict&lt;/code&gt; or &lt;code&gt;integer&lt;/code&gt; , unlike ordinary modules, which import symbols into the current package (which are effective through the end of the file).</source>
          <target state="translated">Algunos de estos pseudo-m&amp;oacute;dulos importan sem&amp;aacute;ntica al alcance del bloque actual (como &lt;code&gt;strict&lt;/code&gt; o &lt;code&gt;integer&lt;/code&gt; , a diferencia de los m&amp;oacute;dulos ordinarios, que importan s&amp;iacute;mbolos al paquete actual (que son efectivos hasta el final del archivo).</target>
        </trans-unit>
        <trans-unit id="f69cda68e897fa9c0b4882048fc82a98372f85df" translate="yes" xml:space="preserve">
          <source>Some of these shouldn't really be called in a Perl application, and for others there are thread-safe versions of these already implemented:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc82daea8e525be9f1657205fd39cc94c0720ec" translate="yes" xml:space="preserve">
          <source>Some of these specific cases are shown as examples in other answers in this section of the perlfaq.</source>
          <target state="translated">Algunos de estos casos específicos se muestran como ejemplos en otras respuestas en esta sección de la perlfaq.</target>
        </trans-unit>
        <trans-unit id="7ac7dfacde52b03cada88bb1c11d6be2449d545b" translate="yes" xml:space="preserve">
          <source>Some of this may be confusing. Here's a handy reference to the ASCII CR and LF characters. You can print it out and stick it in your wallet.</source>
          <target state="translated">Algo de esto puede ser confuso.Aquí hay una referencia útil a los caracteres ASCII CR y LF.Puedes imprimirla y pegarla en tu cartera.</target>
        </trans-unit>
        <trans-unit id="9436ec9fafb3dbaf8b6e8266e0c7a558118556b8" translate="yes" xml:space="preserve">
          <source>Some older Pod translators require paragraphs (including command paragraphs like &quot;=head2 Functions&quot;) to be separated by</source>
          <target state="translated">Algunos traductores de Pod más antiguos requieren que los párrafos (incluyendo los párrafos de comando como &quot;=funciones de la cabeza2&quot;)estén separados por</target>
        </trans-unit>
        <trans-unit id="530312ef21d84b684c5534cd434fe4d79ac602e0" translate="yes" xml:space="preserve">
          <source>Some older versions of Berkeley DB had problems with fixed length records using the RECNO file format. This problem has been fixed since version 1.85 of Berkeley DB.</source>
          <target state="translated">Algunas versiones antiguas de Berkeley DB tenían problemas con los registros de longitud fija usando el formato de archivo RECNO.Este problema ha sido arreglado desde la versión 1.85 de Berkeley DB.</target>
        </trans-unit>
        <trans-unit id="4c2cd6192ba71ba66f15fbdbb416f6e8ad76580e" translate="yes" xml:space="preserve">
          <source>Some operating systems don't ship the CORE directory with their base perl install. To solve the problem, you likely need to install a perl development package such as perl-devel (CentOS, Fedora and other Redhat systems) or perl (Ubuntu and other Debian systems).</source>
          <target state="translated">Algunos sistemas operativos no envían el directorio CORE con su instalación base de perl.Para resolver el problema,es probable que necesite instalar un paquete de desarrollo de perl como perl-devel (CentOS,Fedora y otros sistemas de Redhat)o perl (Ubuntu y otros sistemas de Debian).</target>
        </trans-unit>
        <trans-unit id="a0bcdb116909bbaf782dcc8531648c8104b0144b" translate="yes" xml:space="preserve">
          <source>Some operating systems have bugs in the kernel that make setuid scripts inherently insecure. Perl gives you a number of options (described in &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;) to work around such systems.</source>
          <target state="translated">Algunos sistemas operativos tienen errores en el kernel que hacen que los scripts de setuid sean inherentemente inseguros. Perl le ofrece una serie de opciones (descritas en &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; ) para trabajar con dichos sistemas.</target>
        </trans-unit>
        <trans-unit id="2250e1a4559063fcac9cec7cc104374f3f26f7ef" translate="yes" xml:space="preserve">
          <source>Some operating systems may perform &lt;code&gt;IO::File::new()&lt;/code&gt; or &lt;code&gt;IO::File::open()&lt;/code&gt; on a directory without errors. This behavior is not portable and not suggested for use. Using &lt;code&gt;&lt;a href=&quot;../functions/opendir&quot;&gt;opendir()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;IO::Dir&lt;/code&gt; are suggested instead.</source>
          <target state="translated">Algunos sistemas operativos pueden ejecutar &lt;code&gt;IO::File::new()&lt;/code&gt; o &lt;code&gt;IO::File::open()&lt;/code&gt; en un directorio sin errores. Este comportamiento no es port&amp;aacute;til y no se sugiere su uso. En su lugar, se &lt;code&gt;&lt;a href=&quot;../functions/opendir&quot;&gt;opendir()&lt;/a&gt;&lt;/code&gt; usar opendir () y &lt;code&gt;&lt;a href=&quot;../functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;IO::Dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69855bea0e31a33e7317d263f4ec459059c92ed3" translate="yes" xml:space="preserve">
          <source>Some operating systems may perform &lt;code&gt;IO::File::new()&lt;/code&gt; or &lt;code&gt;IO::File::open()&lt;/code&gt; on a directory without errors. This behavior is not portable and not suggested for use. Using &lt;code&gt;opendir()&lt;/code&gt; and &lt;code&gt;readdir()&lt;/code&gt; or &lt;code&gt;IO::Dir&lt;/code&gt; are suggested instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39015af4e836c35f8e25b30fad81d0e5afdfce43" translate="yes" xml:space="preserve">
          <source>Some operations may be slower for small numbers, but are significantly faster for big numbers. Other operations are now constant (O(1), like &lt;code&gt;bneg()&lt;/code&gt; , &lt;code&gt;babs()&lt;/code&gt; etc), instead of O(N) and thus nearly always take much less time. These optimizations were done on purpose.</source>
          <target state="translated">Algunas operaciones pueden ser m&amp;aacute;s lentas para n&amp;uacute;meros peque&amp;ntilde;os, pero son significativamente m&amp;aacute;s r&amp;aacute;pidas para n&amp;uacute;meros grandes. Otras operaciones ahora son constantes (O (1), como &lt;code&gt;bneg()&lt;/code&gt; , &lt;code&gt;babs()&lt;/code&gt; etc.), en lugar de O (N) y, por lo tanto, casi siempre toman mucho menos tiempo. Estas optimizaciones se realizaron a prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="34443f21f05a44f91512261ff33473bdb84f64b0" translate="yes" xml:space="preserve">
          <source>Some operations may be slower for small numbers, but are significantly faster for big numbers. Other operations are now constant (O(1), like &lt;code&gt;bneg()&lt;/code&gt;, &lt;code&gt;babs()&lt;/code&gt; etc), instead of O(N) and thus nearly always take much less time. These optimizations were done on purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9f3e95144e8b33a9458895d77a0f239683f515" translate="yes" xml:space="preserve">
          <source>Some operators are instead non-associative, meaning that it is a syntax error to use a sequence of those operators of the same precedence. For example, &lt;code&gt;&quot;$x .. $y .. $z&quot;&lt;/code&gt; is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62110d88a0d086d7fc7d0ffc86ee7f8031edd34d" translate="yes" xml:space="preserve">
          <source>Some options, in particular &lt;code&gt;-I&lt;/code&gt;, &lt;code&gt;-M&lt;/code&gt;, &lt;code&gt;PERL5LIB&lt;/code&gt; and &lt;code&gt;PERL5OPT&lt;/code&gt; can interact, and the order in which they are applied is important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ecacb543bf1cb170543843116f3f4c7e881ad8" translate="yes" xml:space="preserve">
          <source>Some other (not completely debugged) situations when FP flags change include some video drivers (?), and some operations related to creation of the windows. People who code &lt;b&gt;OpenGL&lt;/b&gt; may have more experience on this.</source>
          <target state="translated">Algunas otras situaciones (no completamente depuradas) cuando cambian los indicadores FP incluyen algunos controladores de video (?) Y algunas operaciones relacionadas con la creaci&amp;oacute;n de ventanas. Las personas que codifican &lt;b&gt;OpenGL&lt;/b&gt; pueden tener m&amp;aacute;s experiencia en esto.</target>
        </trans-unit>
        <trans-unit id="377fbf88a15d635b8d6d486abdf4ac17224b10a7" translate="yes" xml:space="preserve">
          <source>Some other IO modules don't belong to the perl core but can be loaded as well if they have been installed from CPAN. You can discover which ones exist by searching for &quot;^IO::&quot; on &lt;a href=&quot;http://search.cpan.org&quot;&gt;http://search.cpan.org&lt;/a&gt;.</source>
          <target state="translated">Algunos otros m&amp;oacute;dulos IO no pertenecen al n&amp;uacute;cleo de perl, pero tambi&amp;eacute;n pueden cargarse si se han instalado desde CPAN. Puede descubrir cu&amp;aacute;les existen buscando &quot;^ IO ::&quot; en &lt;a href=&quot;http://search.cpan.org&quot;&gt;http://search.cpan.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d0a736269bfee7b88f6f3d6b373b941a1d11276" translate="yes" xml:space="preserve">
          <source>Some other values are treated specially for internal use and should not be depended on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7424cd4ab88fb33b2270b2db7bbe8e04cad5739e" translate="yes" xml:space="preserve">
          <source>Some output formats that do allow rendering &quot;L&amp;lt;...&amp;gt;&quot; codes as hypertext, might not allow the link-text to be formatted; in that case, formatters will have to just ignore that formatting.</source>
          <target state="translated">Algunos formatos de salida que permiten la representaci&amp;oacute;n de c&amp;oacute;digos &quot;L &amp;lt;...&amp;gt;&quot; como hipertexto, pueden no permitir que se formatee el texto del enlace; en ese caso, los formateadores tendr&amp;aacute;n que ignorar ese formato.</target>
        </trans-unit>
        <trans-unit id="256ae5437abb579a53a890ac8a995ac8070fd714" translate="yes" xml:space="preserve">
          <source>Some particular limitations of note include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7659015df8ed2f8e8d7c6aab66109d4919b25a40" translate="yes" xml:space="preserve">
          <source>Some particular sequences of characters are given a single name, in addition to their individual ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a79a974eeb026992ad7b1bb5fab50968d6932c" translate="yes" xml:space="preserve">
          <source>Some passes discussed below are performed concurrently, but because their results are the same, we consider them individually. For different quoting constructs, Perl performs different numbers of passes, from one to four, but these passes are always performed in the same order.</source>
          <target state="translated">Algunos pases que se comentan a continuación se realizan de forma simultánea,pero como sus resultados son los mismos,los consideramos de forma individual.Para diferentes construcciones de citas,Perl realiza diferentes números de pases,de uno a cuatro,pero estos pases se realizan siempre en el mismo orden.</target>
        </trans-unit>
        <trans-unit id="7ae8fed66b51985370778e2e29c81e03a37d1f13" translate="yes" xml:space="preserve">
          <source>Some people get too used to writing things like:</source>
          <target state="translated">Algunas personas se acostumbran a escribir cosas como:</target>
        </trans-unit>
        <trans-unit id="970ff42e05d0088fd549cac2a995425a1e1eba68" translate="yes" xml:space="preserve">
          <source>Some people have reported encountering &quot;Out of memory!&quot; errors while trying to build Perl using GNU make binaries. If you encounter such trouble then try to download the source code kit and build GNU make from source to eliminate any such trouble. You might also find GNU make (as well as Perl and Apache) in the red-piece/book &quot;Open Source Software for OS/390 UNIX&quot;, SG24-5944-00 from IBM.</source>
          <target state="translated">Algunas personas han reportado haber encontrado errores &quot;Out of memory!&quot; al tratar de construir Perl usando binarios de GNU make.Si se encuentra con tales problemas,entonces intente descargar el kit de código fuente y construir GNU make desde el código fuente para eliminarlos.También puede encontrar GNU make (así como Perl y Apache)en la pieza roja/libro &quot;Open Source Software for OS/390 UNIX&quot;,SG24-5944-00 de IBM.</target>
        </trans-unit>
        <trans-unit id="98c7c01703d39bcc6345fdf8d617292db8f23d37" translate="yes" xml:space="preserve">
          <source>Some people may be inclined to include an explicit &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; in the above XSUB, rather than letting control fall through to the end. In those situations &lt;code&gt;XSRETURN_EMPTY&lt;/code&gt; should be used, instead. This will ensure that the XSUB stack is properly adjusted. Consult &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for other &lt;code&gt;XSRETURN&lt;/code&gt; macros.</source>
          <target state="translated">Algunas personas pueden estar inclinadas a incluir un &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;cito en el XSUB anterior, en lugar de dejar que el control caiga hasta el final. En esas situaciones, se debe utilizar &lt;code&gt;XSRETURN_EMPTY&lt;/code&gt; . Esto asegurar&amp;aacute; que la pila XSUB est&amp;eacute; correctamente ajustada. Consulte &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; para otras macros &lt;code&gt;XSRETURN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6b8960b846f5085f978f5b96b85b0906849df57" translate="yes" xml:space="preserve">
          <source>Some people may be inclined to include an explicit &lt;code&gt;return&lt;/code&gt; in the above XSUB, rather than letting control fall through to the end. In those situations &lt;code&gt;XSRETURN_EMPTY&lt;/code&gt; should be used, instead. This will ensure that the XSUB stack is properly adjusted. Consult &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for other &lt;code&gt;XSRETURN&lt;/code&gt; macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b055a6a001cadf9ec7b3e638f2bc15cb8ed85e4" translate="yes" xml:space="preserve">
          <source>Some people may wish to outlaw barewords entirely. If you say</source>
          <target state="translated">Algunas personas pueden querer prohibir completamente las despedidas.Si usted dice</target>
        </trans-unit>
        <trans-unit id="bae38a7d38c5d89eb67db6e4b702e604142997e5" translate="yes" xml:space="preserve">
          <source>Some people mistakenly regard this as a security problem. If your program does insecure things, and relies on people not knowing how to exploit those insecurities, it is not secure. It is often possible for someone to determine the insecure things and exploit them without viewing the source. Security through obscurity, the name for hiding your bugs instead of fixing them, is little security indeed.</source>
          <target state="translated">Algunas personas consideran erróneamente que esto es un problema de seguridad.Si su programa hace cosas inseguras,y depende de que la gente no sepa cómo explotar esas inseguridades,no es seguro.A menudo es posible que alguien determine las cosas inseguras y las explote sin ver la fuente.La seguridad a través de la oscuridad,el nombre para esconder sus bichos en lugar de arreglarlos,es poca seguridad en realidad.</target>
        </trans-unit>
        <trans-unit id="df10001a5e994bd1a3232bcb5d3f173424f0cd78" translate="yes" xml:space="preserve">
          <source>Some people need this and some people avoid it. For Perl, it&amp;rsquo;s an old way to say &lt;b&gt;I/O layer&lt;/b&gt;.</source>
          <target state="translated">Algunas personas necesitan esto y otras lo evitan. Para Perl, es una vieja manera de decir &lt;b&gt;la capa I / O&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="37ecbcdb1f8127ee6539d97d23e8c04d2e848681" translate="yes" xml:space="preserve">
          <source>Some people regard this as a security problem. If your program does insecure things and relies on people not knowing how to exploit those insecurities, it is not secure. It is often possible for someone to determine the insecure things and exploit them without viewing the source. Security through obscurity, the name for hiding your bugs instead of fixing them, is little security indeed.</source>
          <target state="translated">Algunas personas consideran esto como un problema de seguridad.Si su programa hace cosas inseguras y depende de que la gente no sepa cómo explotar esas inseguridades,no es seguro.A menudo es posible que alguien determine las cosas inseguras y las explote sin ver la fuente.La seguridad a través de la oscuridad,el nombre para esconder sus bichos en lugar de arreglarlos,es poca seguridad en realidad.</target>
        </trans-unit>
        <trans-unit id="646207c2365abd1daf6b5c56b0451ba2ee5e82de" translate="yes" xml:space="preserve">
          <source>Some platforms (Win32, AIX, VMS, OS/2, to name a few) require any function that is part of the public API (the shared Perl library) to be explicitly marked as exported. See the discussion about</source>
          <target state="translated">Algunas plataformas (Win32,AIX,VMS,OS/2,por nombrar algunas)requieren que cualquier función que forme parte de la API pública (la biblioteca Perl compartida)se marque explícitamente como exportada.Véase la discusión sobre</target>
        </trans-unit>
        <trans-unit id="f71f7e49e6244b0a28baf7e54c8479e2d307382e" translate="yes" xml:space="preserve">
          <source>Some platforms can't delete or rename files held open by the system, this limitation may also apply to changing filesystem metainformation like file permissions or owners. Remember to &lt;a href=&quot;perlfunc#close-FILEHANDLE&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; files when you are done with them. Don't &lt;a href=&quot;perlfunc#unlink-LIST&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perlfunc#rename-OLDNAME%2CNEWNAME&quot;&gt;&lt;code&gt;rename&lt;/code&gt;&lt;/a&gt; an open file. Don't &lt;a href=&quot;perlfunc#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; a file already tied or opened; &lt;a href=&quot;perlfunc#untie-VARIABLE&quot;&gt;&lt;code&gt;untie&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perlfunc#close-FILEHANDLE&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; it first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e0751f43cf70fa1b809101e7e4735cf3d63955" translate="yes" xml:space="preserve">
          <source>Some platforms can't delete or rename files held open by the system, this limitation may also apply to changing filesystem metainformation like file permissions or owners. Remember to &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; files when you are done with them. Don't &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt; an open file. Don't &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; a file already tied or opened; &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; it first.</source>
          <target state="translated">Algunas plataformas no pueden eliminar o cambiar el nombre de los archivos mantenidos abiertos por el sistema, esta limitaci&amp;oacute;n tambi&amp;eacute;n puede aplicarse a cambiar la metainformaci&amp;oacute;n del sistema de archivos, como los permisos o los propietarios de los archivos. Recuerde &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; archivos cuando haya terminado con ellos. No &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; ni &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;&lt;/code&gt; un archivo abierto. No &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; ni &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; un archivo ya vinculado o abierto; &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; primero.</target>
        </trans-unit>
        <trans-unit id="da26b78199e00ef73fdfb4bbe53a1032367ab8a7" translate="yes" xml:space="preserve">
          <source>Some platforms have a minimum thread stack size. Trying to set the stack size below this value will result in a warning, and the minimum stack size will be used.</source>
          <target state="translated">Algunas plataformas tienen un tamaño mínimo de pila de hilos.Si se intenta establecer el tamaño de la pila por debajo de este valor,aparecerá una advertencia y se utilizará el tamaño mínimo de la pila.</target>
        </trans-unit>
        <trans-unit id="bcf43713051466cf97d586bae0917d51d61ca30f" translate="yes" xml:space="preserve">
          <source>Some platforms have a minimum thread stack size. Trying to set the stack size below this value will result in the above warning, and the stack size will be set to the minimum.</source>
          <target state="translated">Algunas plataformas tienen un tamaño mínimo de pila de hilos.Si se intenta establecer el tamaño de la pila por debajo de este valor,aparecerá la advertencia anterior y el tamaño de la pila se establecerá en el mínimo.</target>
        </trans-unit>
        <trans-unit id="5105a7088de9859cd20060f09ecf9b0528ad1069" translate="yes" xml:space="preserve">
          <source>Some platforms have other categories, dealing with such things as measurement units and paper sizes. None of these are used directly by Perl, but outside operations that Perl interacts with may use these. See &lt;a href=&quot;#Not-within-the-scope-of-%22use-locale%22&quot;&gt;&quot;Not within the scope of &quot;use locale&quot;&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11c8787b6044982e680d4ae9bfff407819b6d1c" translate="yes" xml:space="preserve">
          <source>Some platforms have other categories, dealing with such things as measurement units and paper sizes. None of these are used directly by Perl, but outside operations that Perl interacts with may use these. See &lt;a href=&quot;#Not-within-the-scope-of-%22use-locale%22&quot;&gt;Not within the scope of use locale&lt;/a&gt; below.</source>
          <target state="translated">Algunas plataformas tienen otras categor&amp;iacute;as, que se ocupan de cosas como unidades de medida y tama&amp;ntilde;os de papel. Ninguno de estos es usado directamente por Perl, pero las operaciones externas con las que Perl interact&amp;uacute;a pueden usarlos. Consulte &lt;a href=&quot;#Not-within-the-scope-of-%22use-locale%22&quot;&gt;Configuraci&amp;oacute;n regional fuera del alcance de uso a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="27d67098e269de48eafdad3480b3920c43ba2cb7" translate="yes" xml:space="preserve">
          <source>Some points to note:</source>
          <target state="translated">Algunos puntos a tener en cuenta:</target>
        </trans-unit>
        <trans-unit id="4d3653fc867e65c669e5c29b359dbebb9253c5c0" translate="yes" xml:space="preserve">
          <source>Some possible reasons: your inheritance is getting confused, you've misspelled the method name, or the object is of the wrong type. Check out &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; for details about any of the above cases. You may also use &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; &lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;($object)&lt;/code&gt; to find out the class &lt;code&gt;$object&lt;/code&gt; was blessed into.</source>
          <target state="translated">Algunas posibles razones: su herencia se est&amp;aacute; confundiendo, ha escrito mal el nombre del m&amp;eacute;todo o el objeto es del tipo incorrecto. Consulte &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; para obtener detalles sobre cualquiera de los casos anteriores. Tambi&amp;eacute;n puede usar &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; &lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;($object)&lt;/code&gt; para averiguar en qu&amp;eacute; clase se bendijo &lt;code&gt;$object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="290c6b9cea94cfe13fbb802d97a5a0cd78346837" translate="yes" xml:space="preserve">
          <source>Some possible reasons: your inheritance is getting confused, you've misspelled the method name, or the object is of the wrong type. Check out &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; for details about any of the above cases. You may also use &lt;code&gt;print ref($object)&lt;/code&gt; to find out the class &lt;code&gt;$object&lt;/code&gt; was blessed into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b61ffed7b1a69179adefb6f5756bdb1cb79574b" translate="yes" xml:space="preserve">
          <source>Some pragmas are lexically scoped--typically those that affect the &lt;code&gt;$^H&lt;/code&gt; hints variable. Others affect the current package instead, like &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; , which allow you to predeclare a variables or subroutines within a particular</source>
          <target state="translated">Algunos pragmas tienen un &amp;aacute;mbito l&amp;eacute;xico, normalmente los que afectan a la variable &lt;code&gt;$^H&lt;/code&gt; hints. Otros, en cambio, afectan el paquete actual, como &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; , que le permiten predeclarar variables o subrutinas dentro de una determinada</target>
        </trans-unit>
        <trans-unit id="7d87d5053d095f39938496538e49008745b231d2" translate="yes" xml:space="preserve">
          <source>Some pragmas are lexically scoped--typically those that affect the &lt;code&gt;$^H&lt;/code&gt; hints variable. Others affect the current package instead, like &lt;code&gt;use vars&lt;/code&gt; and &lt;code&gt;use subs&lt;/code&gt;, which allow you to predeclare a variables or subroutines within a particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca977f551e014badc60a278bfe97ad872b1a03f5" translate="yes" xml:space="preserve">
          <source>Some problem (forget which ;-)</source>
          <target state="translated">Algún problema (olvida cuál ;-)</target>
        </trans-unit>
        <trans-unit id="747d0cb3f2eb2365d2dd72ee766a74de28620e7d" translate="yes" xml:space="preserve">
          <source>Some problems are associated with using temporary files that reside on NFS file systems and it is recommended that a local filesystem is used whenever possible. Some of the security tests will most probably fail when the temp file is not local. Additionally, be aware that the performance of I/O operations over NFS will not be as good as for a local disk.</source>
          <target state="translated">Algunos problemas están asociados con el uso de archivos temporales que residen en sistemas de archivos NFS y se recomienda utilizar un sistema de archivos local siempre que sea posible.Es muy probable que algunas de las pruebas de seguridad fallen cuando el archivo temporal no sea local.Además,tenga en cuenta que el rendimiento de las operaciones de E/S sobre NFS no será tan bueno como para un disco local.</target>
        </trans-unit>
        <trans-unit id="82690c6e6b8e4e473e3f2745d7358e432662fc95" translate="yes" xml:space="preserve">
          <source>Some processors may find that the &lt;code&gt;S&amp;lt;...&amp;gt;&lt;/code&gt; code is easiest to implement by replacing each space in the parse tree under the content of the S, with an NBSP. But note: the replacement should apply</source>
          <target state="translated">Algunos procesadores pueden encontrar que el c&amp;oacute;digo &lt;code&gt;S&amp;lt;...&amp;gt;&lt;/code&gt; es m&amp;aacute;s f&amp;aacute;cil de implementar reemplazando cada espacio en el &amp;aacute;rbol de an&amp;aacute;lisis bajo el contenido de S, con un NBSP. Pero tenga en cuenta: el reemplazo debe aplicarse</target>
        </trans-unit>
        <trans-unit id="229ed6abc320881bbd15c4ddf8619bff82e22293" translate="yes" xml:space="preserve">
          <source>Some programmers choose to use an explicit conversion so as to leave nothing to doubt:</source>
          <target state="translated">Algunos programadores optan por utilizar una conversión explícita para no dejar nada en duda:</target>
        </trans-unit>
        <trans-unit id="76cff92347a8a5dd33b0b88b52afc87676bbe1d1" translate="yes" xml:space="preserve">
          <source>Some programmers may prefer to think of filehandles as objects with methods, preferring to write the last example as:</source>
          <target state="translated">Algunos programadores pueden preferir pensar en los manejos de archivos como objetos con métodos,prefiriendo escribir el último ejemplo como:</target>
        </trans-unit>
        <trans-unit id="9293db7d23e9765c2433258535b9e48d3fd5d563" translate="yes" xml:space="preserve">
          <source>Some properties are considered obsolete by Unicode, but still available. There are several varieties of obsolescence:</source>
          <target state="translated">Algunas propiedades son consideradas obsoletas por Unicode,pero aún están disponibles.Hay varias variedades de obsolescencia:</target>
        </trans-unit>
        <trans-unit id="8e185e2d007b85b8d377436c39a0c68b4b4f4ab1" translate="yes" xml:space="preserve">
          <source>Some rare applications will need to create more than one interpreter during a session. Such an application might sporadically decide to release any resources associated with the interpreter.</source>
          <target state="translated">Algunas aplicaciones raras necesitarán crear más de un intérprete durante una sesión.Tal aplicación podría decidir esporádicamente liberar cualquier recurso asociado con el intérprete.</target>
        </trans-unit>
        <trans-unit id="0314a7222da4e53e09e85e4d4942b044d7cacfc9" translate="yes" xml:space="preserve">
          <source>Some regular expressions use identical subpatterns in several places. Starting with Perl 5.10, it is possible to define named subpatterns in a section of the pattern so that they can be called up by name anywhere in the pattern. This syntactic pattern for this definition group is &lt;code&gt;(?(DEFINE)(?&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)...)&lt;/code&gt;. An insertion of a named pattern is written as &lt;code&gt;(?&amp;amp;&lt;i&gt;name&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5ce3e6e9260f74f3afe8318024d986a7fd16de" translate="yes" xml:space="preserve">
          <source>Some regular expressions use identical subpatterns in several places. Starting with Perl 5.10, it is possible to define named subpatterns in a section of the pattern so that they can be called up by name anywhere in the pattern. This syntactic pattern for this definition group is &lt;code&gt;(?(DEFINE)(?&amp;lt;name&amp;gt;pattern)...)&lt;/code&gt;. An insertion of a named pattern is written as &lt;code&gt;(?&amp;amp;name)&lt;/code&gt;.</source>
          <target state="translated">Algunas expresiones regulares usan subpatrones id&amp;eacute;nticos en varios lugares. A partir de Perl 5.10, es posible definir subpatrones con nombre en una secci&amp;oacute;n del patr&amp;oacute;n para que se puedan llamar por su nombre en cualquier parte del patr&amp;oacute;n. Este patr&amp;oacute;n sint&amp;aacute;ctico para este grupo de definici&amp;oacute;n es &lt;code&gt;(?(DEFINE)(?&amp;lt;name&amp;gt;pattern)...)&lt;/code&gt; . Una inserci&amp;oacute;n de un patr&amp;oacute;n con nombre se escribe como &lt;code&gt;(?&amp;amp;name)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58899e8b736f7c4726449bcec0f3b25df5fc7632" translate="yes" xml:space="preserve">
          <source>Some routines (&lt;code&gt;is_odd()&lt;/code&gt; , &lt;code&gt;is_even()&lt;/code&gt; , &lt;code&gt;is_zero()&lt;/code&gt; , &lt;code&gt;is_one()&lt;/code&gt; , &lt;code&gt;is_nan()&lt;/code&gt; ) return true or false, while others (&lt;code&gt;bcmp()&lt;/code&gt; , &lt;code&gt;bacmp()&lt;/code&gt; ) return either undef, &amp;lt;0, 0 or &amp;gt;0 and are suited for sort.</source>
          <target state="translated">Algunas rutinas ( &lt;code&gt;is_odd()&lt;/code&gt; , &lt;code&gt;is_even()&lt;/code&gt; , &lt;code&gt;is_zero()&lt;/code&gt; , &lt;code&gt;is_one()&lt;/code&gt; , &lt;code&gt;is_nan()&lt;/code&gt; ) devuelven verdadero o falso, mientras que otras ( &lt;code&gt;bcmp()&lt;/code&gt; , &lt;code&gt;bacmp()&lt;/code&gt; ) devuelven indef, &amp;lt;0, 0 o&amp;gt; 0 y son adecuados para clasificar.</target>
        </trans-unit>
        <trans-unit id="834cc437cec84afae22c004e80ee3d6149cb6f55" translate="yes" xml:space="preserve">
          <source>Some routines (&lt;code&gt;is_odd()&lt;/code&gt; , &lt;code&gt;is_even()&lt;/code&gt; , &lt;code&gt;is_zero()&lt;/code&gt; , &lt;code&gt;is_one()&lt;/code&gt; , &lt;code&gt;is_nan()&lt;/code&gt; , etc.) return true or false, while others (&lt;code&gt;bcmp()&lt;/code&gt; , &lt;code&gt;bacmp()&lt;/code&gt; ) return either undef (if NaN is involved), &amp;lt;0, 0 or &amp;gt;0 and are suited for sort.</source>
          <target state="translated">Algunas rutinas ( &lt;code&gt;is_odd()&lt;/code&gt; , &lt;code&gt;is_even()&lt;/code&gt; , &lt;code&gt;is_zero()&lt;/code&gt; , &lt;code&gt;is_one()&lt;/code&gt; , &lt;code&gt;is_nan()&lt;/code&gt; , etc.) devuelven verdadero o falso, mientras que otras ( &lt;code&gt;bcmp()&lt;/code&gt; , &lt;code&gt;bacmp()&lt;/code&gt; ) devuelven undef (si NaN est&amp;aacute; involucrado ), &amp;lt;0, 0 o&amp;gt; 0 y son adecuados para ordenar.</target>
        </trans-unit>
        <trans-unit id="b07ef2379b9c2b49ab7fe4b04878c3104f0be76f" translate="yes" xml:space="preserve">
          <source>Some scalar variables contain more than one type of scalar data. For example, the variable &lt;code&gt;$!&lt;/code&gt; contains either the numeric value of &lt;code&gt;errno&lt;/code&gt; or its string equivalent from either &lt;code&gt;strerror&lt;/code&gt; or &lt;code&gt;sys_errlist[]&lt;/code&gt; .</source>
          <target state="translated">Algunas variables escalares contienen m&amp;aacute;s de un tipo de datos escalares. Por ejemplo, la variable &lt;code&gt;$!&lt;/code&gt; contiene el valor num&amp;eacute;rico de &lt;code&gt;errno&lt;/code&gt; o su cadena equivalente de &lt;code&gt;strerror&lt;/code&gt; o &lt;code&gt;sys_errlist[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="293877a0e77da8a8b9fbcbcd030c4833f67c96da" translate="yes" xml:space="preserve">
          <source>Some scalar variables contain more than one type of scalar data. For example, the variable &lt;code&gt;$!&lt;/code&gt; contains either the numeric value of &lt;code&gt;errno&lt;/code&gt; or its string equivalent from either &lt;code&gt;strerror&lt;/code&gt; or &lt;code&gt;sys_errlist[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b802bf6a4f1848df9acbe46a4e2a4fe02ad51578" translate="yes" xml:space="preserve">
          <source>Some scripts, usually identified with a *.PL extension, are self-configuring and are able to correctly create their own shebang path from config information located in Plan 9 Perl. These you won't need to be worried about.</source>
          <target state="translated">Algunos scripts,normalmente identificados con una extensión *.PL,son autoconfigurables y son capaces de crear correctamente su propia ruta de shebang a partir de la información de configuración ubicada en el Plan 9 Perl.Estos no necesitarán preocuparse.</target>
        </trans-unit>
        <trans-unit id="0de1611bc5300339bfc467a34c6fb8f9747fd7ed" translate="yes" xml:space="preserve">
          <source>Some servers are configured to only work in passive mode. If you have one of these you can force &lt;code&gt;Net::FTP&lt;/code&gt; to always transfer in passive mode; when not going via a firewall, by setting &lt;code&gt;ftp_int_passive&lt;/code&gt; to a</source>
          <target state="translated">Algunos servidores est&amp;aacute;n configurados para funcionar solo en modo pasivo. Si tiene uno de estos, puede forzar a &lt;code&gt;Net::FTP&lt;/code&gt; a transferir siempre en modo pasivo; cuando no va a trav&amp;eacute;s de un firewall, estableciendo &lt;code&gt;ftp_int_passive&lt;/code&gt; en un</target>
        </trans-unit>
        <trans-unit id="ebc3655c5b01cc226f09d2ace7c8e5f430f35ebd" translate="yes" xml:space="preserve">
          <source>Some servers do not understand this command, but issuing it and ignoring the response is harmless.</source>
          <target state="translated">Algunos servidores no entienden este comando,pero emitirlo e ignorar la respuesta es inofensivo.</target>
        </trans-unit>
        <trans-unit id="c3d7fb888727f4ae5ed3bb068213cd5f194d2bf2" translate="yes" xml:space="preserve">
          <source>Some signals can be neither trapped nor ignored, such as the KILL and STOP (but not the TSTP) signals. Note that ignoring signals makes them disappear. If you only want them blocked temporarily without them getting lost you'll have to use POSIX' sigprocmask.</source>
          <target state="translated">Algunas señales no pueden ser ni atrapadas ni ignoradas,como las señales KILL y STOP (pero no la TSTP).Tenga en cuenta que ignorar las señales hace que desaparezcan.Si sólo quieres bloquearlas temporalmente sin que se pierdan,tendrás que usar la máscara de sigilo de POSIX.</target>
        </trans-unit>
        <trans-unit id="2b6d2a03109d9cfeb6b788931c3af13636a6e9ce" translate="yes" xml:space="preserve">
          <source>Some signals can be neither trapped nor ignored, such as the KILL and STOP (but not the TSTP) signals. Note that ignoring signals makes them disappear. If you only want them blocked temporarily without them getting lost you'll have to use the &lt;code&gt;POSIX&lt;/code&gt; module's &lt;a href=&quot;posix#sigprocmask&quot;&gt;sigprocmask&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcba60d06f3c08a852e1ccedb100d4bd2f6af23" translate="yes" xml:space="preserve">
          <source>Some simple style guidelines</source>
          <target state="translated">Algunas pautas de estilo simples</target>
        </trans-unit>
        <trans-unit id="0a3063c3a46746b861b03ccbf2777db3ca544d44" translate="yes" xml:space="preserve">
          <source>Some simple tricks for determining if you are running on an EBCDIC platform could include any of the following (perhaps all):</source>
          <target state="translated">Algunos trucos sencillos para determinar si se está ejecutando en una plataforma de EBCDIC podrían incluir cualquiera de los siguientes (quizás todos):</target>
        </trans-unit>
        <trans-unit id="3f3c0a1f0f425bdd141982a9f345d9ad53284159" translate="yes" xml:space="preserve">
          <source>Some source filters use the &lt;code&gt;DATA&lt;/code&gt; handle to read the calling program. When using these source filters you cannot rely on this handle, nor expect any particular kind of behavior when operating on it. Filters based on Filter::Util::Call (and therefore Filter::Simple) do not alter the &lt;code&gt;DATA&lt;/code&gt; filehandle, but on the other hand totally ignore the text after &lt;code&gt;__DATA__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038ab8e08e45dcac2b1a2ba44edc5e7ade978952" translate="yes" xml:space="preserve">
          <source>Some source filters use the &lt;code&gt;DATA&lt;/code&gt; handle to read the calling program. When using these source filters you cannot rely on this handle, nor expect any particular kind of behavior when operating on it. Filters based on Filter::Util::Call (and therefore Filter::Simple) do not alter the &lt;code&gt;DATA&lt;/code&gt; filehandle.</source>
          <target state="translated">Algunos filtros de origen utilizan el identificador de &lt;code&gt;DATA&lt;/code&gt; para leer el programa de llamada. Al usar estos filtros de origen, no puede confiar en este identificador, ni esperar ning&amp;uacute;n tipo de comportamiento particular al operar en &amp;eacute;l. Los filtros basados ​​en Filter :: Util :: Call (y por lo tanto Filter :: Simple) no alteran el identificador del archivo &lt;code&gt;DATA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1b44415edca47e18840114c042b3fbafad7d31e" translate="yes" xml:space="preserve">
          <source>Some special cases like a trailing 0x00 byte or a lone 0x1B byte are not well-defined and decode() will return an empty string for them. One possible workaround is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887e76ddfe1351446ffd243bda2aac92d02dd5a3" translate="yes" xml:space="preserve">
          <source>Some subclasses that indiscriminately dump event attributes (well, except for ones beginning with &quot;~&quot;) can use this object attribute for refraining to dump the &quot;start_line&quot; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0397fafffa0394e8352d14b65804f0f4b7e0e7f0" translate="yes" xml:space="preserve">
          <source>Some switches do care if they are processed twice, for instance combinations of &lt;a href=&quot;#-l%5Boctnum%5D&quot;&gt;-l&lt;/a&gt; and &lt;a href=&quot;#-0%5Boctal%2Fhexadecimal%5D&quot;&gt;-0&lt;/a&gt;. Either put all the switches after the 32-character boundary (if applicable), or replace the use of &lt;b&gt;-0&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3ebd295e43b2c81df8bd4b9c3baef266ee5f66" translate="yes" xml:space="preserve">
          <source>Some switches do care if they are processed twice, for instance combinations of &lt;b&gt;-l&lt;/b&gt; and &lt;b&gt;-0&lt;/b&gt;. Either put all the switches after the 32-character boundary (if applicable), or replace the use of &lt;b&gt;-0&lt;/b&gt;</source>
          <target state="translated">A algunos conmutadores les importa si se procesan dos veces, por ejemplo, combinaciones de &lt;b&gt;-l&lt;/b&gt; y &lt;b&gt;-0&lt;/b&gt; . Coloque todos los interruptores despu&amp;eacute;s del l&amp;iacute;mite de 32 caracteres (si corresponde) o reemplace el uso de &lt;b&gt;-0&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="109f18c999c7939dc43da5678ce045bdc21c20e9" translate="yes" xml:space="preserve">
          <source>Some systems define &lt;a href=&quot;#pipe-READHANDLE%2CWRITEHANDLE&quot;&gt;&lt;code&gt;pipe&lt;/code&gt;&lt;/a&gt; in terms of &lt;a href=&quot;#socketpair-SOCKET1%2CSOCKET2%2CDOMAIN%2CTYPE%2CPROTOCOL&quot;&gt;&lt;code&gt;socketpair&lt;/code&gt;&lt;/a&gt;, in which a call to &lt;code&gt;pipe($rdr, $wtr)&lt;/code&gt; is essentially:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c346e3627bcf4ba52fad903600add2510035afb4" translate="yes" xml:space="preserve">
          <source>Some systems defined &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; in terms of &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;, in which a call to &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;(Rdr, Wtr)&lt;/code&gt; is essentially:</source>
          <target state="translated">Algunos sistemas definen la &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; en t&amp;eacute;rminos de &lt;code&gt;&lt;a href=&quot;functions/socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt; de conectores , en los que una llamada a la &lt;code&gt;&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;(Rdr, Wtr)&lt;/code&gt; es esencialmente:</target>
        </trans-unit>
        <trans-unit id="6fc6b04b810684b6c41fe63810499cab8b09c739" translate="yes" xml:space="preserve">
          <source>Some systems defined &lt;code&gt;&lt;a href=&quot;pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; in terms of &lt;code&gt;&lt;a href=&quot;socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt;, in which a call to &lt;code&gt;&lt;a href=&quot;pipe&quot;&gt;pipe&lt;/a&gt;(Rdr, Wtr)&lt;/code&gt; is essentially:</source>
          <target state="translated">Algunos sistemas definen la &lt;code&gt;&lt;a href=&quot;pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; en t&amp;eacute;rminos de &lt;code&gt;&lt;a href=&quot;socketpair&quot;&gt;socketpair&lt;/a&gt;&lt;/code&gt; de conectores , en los que una llamada a la &lt;code&gt;&lt;a href=&quot;pipe&quot;&gt;pipe&lt;/a&gt;(Rdr, Wtr)&lt;/code&gt; es esencialmente:</target>
        </trans-unit>
        <trans-unit id="ec2cddcb7714cb3145808dbf1959d4cf532d708d" translate="yes" xml:space="preserve">
          <source>Some systems have APIs but not implementations: for example QNX and Haiku have the interval timer APIs but not the functionality.</source>
          <target state="translated">Algunos sistemas tienen API pero no implementaciones:por ejemplo,QNX y Haiku tienen las API de temporizadores de intervalos pero no la funcionalidad.</target>
        </trans-unit>
        <trans-unit id="af9e4e7dc8e2d766a51ba5d183c159f4967112d1" translate="yes" xml:space="preserve">
          <source>Some systems have thread-safe versions of some of the functions, such as &lt;code&gt;getpwnam_r()&lt;/code&gt; instead of &lt;code&gt;getpwnam()&lt;/code&gt;. There, Perl automatically and invisibly substitutes the thread-safe version, without notice. This means that code that safely runs on some systems can fail on others that lack the thread-safe versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b5dcc57517fdbe334dfa953d44b8287e96b48c" translate="yes" xml:space="preserve">
          <source>Some systems may have even weirder byte orders such as</source>
          <target state="translated">Algunos sistemas pueden tener órdenes de bytes aún más extrañas como</target>
        </trans-unit>
        <trans-unit id="6223cb44b81823af78522ece7689e7171de5236a" translate="yes" xml:space="preserve">
          <source>Some systems use CONFORMING TO to note conformance to relevant standards and MT-LEVEL to note safeness for use in threaded programs or signal handlers. These headings are primarily useful when documenting parts of a C library.</source>
          <target state="translated">Algunos sistemas utilizan CONFORMING TO para anotar la conformidad con las normas pertinentes y MT-LEVEL para anotar la seguridad para su uso en programas enhebrados o manejadores de señales.Estos encabezados son principalmente útiles cuando se documentan partes de una biblioteca C.</target>
        </trans-unit>
        <trans-unit id="b5f78f639815d7596cee6bf607be57c18273af36" translate="yes" xml:space="preserve">
          <source>Some test failures may occur if you use a command shell other than the native &quot;cmd.exe&quot;, or if you are building from a path that contains spaces. So don't do that.</source>
          <target state="translated">Algunos fallos de la prueba pueden ocurrir si se utiliza un shell de comandos que no sea el nativo &quot;cmd.exe&quot;,o si se está construyendo desde una ruta que contiene espacios.Así que no lo hagas.</target>
        </trans-unit>
        <trans-unit id="db2f4892c2d72b4b87094017ed92e99d93095f9c" translate="yes" xml:space="preserve">
          <source>Some test modules would replace the Test::Builder singleton instance with their own instance or subclass. This was usually done to intercept or modify results as they happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec70ba84fc671de1bea2095d64f0ecee13115e62" translate="yes" xml:space="preserve">
          <source>Some tests are known to fail:</source>
          <target state="translated">Se sabe que algunas pruebas fallan:</target>
        </trans-unit>
        <trans-unit id="6a89cc5c4b8e960cca98e5c9aef6613a37510494" translate="yes" xml:space="preserve">
          <source>Some tests depended on &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$?&lt;/code&gt; being modified in subtle ways. A patch was applied to correct things that changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d98556687379d0793051b330180895e416a427" translate="yes" xml:space="preserve">
          <source>Some tests may complain under known circumstances.</source>
          <target state="translated">Algunas pruebas pueden quejarse en circunstancias conocidas.</target>
        </trans-unit>
        <trans-unit id="c1340d9e04d7bf928c677a3bd6e8e8121f7021a3" translate="yes" xml:space="preserve">
          <source>Some tests may generate extra messages similar to</source>
          <target state="translated">Algunas pruebas pueden generar mensajes adicionales similares a</target>
        </trans-unit>
        <trans-unit id="ed680f9db7c37de4a3fb02472a48fb5b299c3b28" translate="yes" xml:space="preserve">
          <source>Some tests were fragile and required base.pm to be loaded at a late stage. Test2 was loading base.pm too early. The tests were updated to fix this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3e7fb048dd3da6c3efee2236b9f7245e42c776" translate="yes" xml:space="preserve">
          <source>Some tests were fragile, but have been fixed. The actual breakage was from the subtest comment indentation change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c36c454152688ffa8f0d5944c5eae241cf584a" translate="yes" xml:space="preserve">
          <source>Some tests will be skipped because they need the fork() function:</source>
          <target state="translated">Algunas pruebas se omitirán porque necesitan la función fork():</target>
        </trans-unit>
        <trans-unit id="ae4dfb05b376af0b4aa8499ceeb5ad1587cfc612" translate="yes" xml:space="preserve">
          <source>Some things might not work as you expect them. Below is documented what is known to be troublesome:</source>
          <target state="translated">Algunas cosas pueden no funcionar como esperas.A continuación se documenta lo que se sabe que es problemático:</target>
        </trans-unit>
        <trans-unit id="c22086010db6828bca64b97b121f052c5aaeaeec" translate="yes" xml:space="preserve">
          <source>Some time ago I had reports it does not work. Nowadays it is checked in the Perl test suite, so grep</source>
          <target state="translated">Hace algún tiempo tuve informes de que no funciona.Hoy en día se comprueba en la sala de pruebas de Perl,así que grep</target>
        </trans-unit>
        <trans-unit id="ff04f69dfe09fd05da827bf89d221c2f8cd81859" translate="yes" xml:space="preserve">
          <source>Some tools did do a good job setting these to the correct hub, but you cannot always rely on that. Use the 'hubs' facet list instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d4257cf6ff6a8e43bd3c5319c1718bd7fb9ab6" translate="yes" xml:space="preserve">
          <source>Some type of removable media other than a floppy diskette.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729fe9bb5c1721be7b9c47b47d38d0043a1d5be9" translate="yes" xml:space="preserve">
          <source>Some types of lvalues can be localized as well: hash and array elements and slices, conditionals (provided that their result is always localizable), and symbolic references. As for simple variables, this creates new, dynamically scoped values.</source>
          <target state="translated">También pueden localizarse algunos tipos de valores:elementos y cortes de hash y array,condicionales (siempre que su resultado sea siempre localizable)y referencias simbólicas.En cuanto a las variables simples,esto crea nuevos valores de alcance dinámico.</target>
        </trans-unit>
        <trans-unit id="36c279e82d37aef763f2dc425df33d302f2edc2c" translate="yes" xml:space="preserve">
          <source>Some unusual systems, such as VMS, require special filename handling in order to deal with symbolic names for files (i.e., VMS's Logical Names).</source>
          <target state="translated">Algunos sistemas inusuales,como el VMS,requieren un manejo especial de los nombres de los archivos para poder tratar los nombres simbólicos de los archivos (es decir,los Nombres Lógicos del VMS).</target>
        </trans-unit>
        <trans-unit id="6a39214b093577878080cd0246589b3e208ffeb5" translate="yes" xml:space="preserve">
          <source>Some user's however may feel that the above &quot;economy of expression&quot; is not particularly readable nor consistent and may instead choose to do something more like the following:</source>
          <target state="translated">Sin embargo,algunos usuarios pueden considerar que la &quot;economía de expresión&quot; anterior no es particularmente legible ni coherente y pueden optar por hacer algo más parecido a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="1ad295080cd8e985d193a33706aa64c82df7132f" translate="yes" xml:space="preserve">
          <source>Some users have expressed that they think this whole mechanism of having a &quot;fail&quot; attribute at all, seems a rather pointless complication. But I want Locale::Maketext to be usable for software projects of</source>
          <target state="translated">Algunos usuarios han expresado que piensan que todo este mecanismo de tener un atributo de &quot;falla&quot; en absoluto,parece una complicación bastante inútil.Pero quiero que Locale::Maketext sea utilizable para proyectos de software de</target>
        </trans-unit>
        <trans-unit id="7ab6d61e44a0f4b38225b697b64d41eb4c216b63" translate="yes" xml:space="preserve">
          <source>Some users may wish to encourage the use of lexically scoped variables. As an aid to catching implicit uses to package variables, which are always global, if you say</source>
          <target state="translated">Algunos usuarios tal vez deseen alentar el uso de variables de alcance léxico.Como una ayuda para atrapar los usos implícitos para empaquetar las variables,que son siempre globales,si se dice</target>
        </trans-unit>
        <trans-unit id="020ce1178f605ac1782ec8459fa4fa7fd0cf745e" translate="yes" xml:space="preserve">
          <source>Some versions of &lt;code&gt;DB_File&lt;/code&gt; won't let you store data under a key of length 0. That means that if you have a function &lt;code&gt;f&lt;/code&gt; which you memoized and the cache is in a &lt;code&gt;DB_File&lt;/code&gt; database, then the value of &lt;code&gt;f()&lt;/code&gt; (&lt;code&gt;f&lt;/code&gt; called with no arguments) will not be memoized. If this is a big problem, you can supply a normalizer function that prepends &lt;code&gt;&quot;x&quot;&lt;/code&gt; to every key.</source>
          <target state="translated">Algunas versiones de &lt;code&gt;DB_File&lt;/code&gt; no le permitir&amp;aacute;n almacenar datos bajo una clave de longitud 0. Eso significa que si tiene una funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; que memoriz&amp;oacute; y la cach&amp;eacute; est&amp;aacute; en una &lt;code&gt;DB_File&lt;/code&gt; datos DB_File , entonces el valor de &lt;code&gt;f()&lt;/code&gt; ( &lt;code&gt;f&lt;/code&gt; llamado con sin argumentos) no se memorizar&amp;aacute;. Si esto es un gran problema, puede proporcionar una funci&amp;oacute;n de normalizaci&amp;oacute;n que anteponga &lt;code&gt;&quot;x&quot;&lt;/code&gt; a cada tecla.</target>
        </trans-unit>
        <trans-unit id="8bb4498f94e563a623dff663cd55b4fc862752c4" translate="yes" xml:space="preserve">
          <source>Some versions of &lt;code&gt;make&lt;/code&gt; set the variable &lt;code&gt;MAKE&lt;/code&gt; . Others do not. This variable contains the string to be included in</source>
          <target state="translated">Algunas versiones de &lt;code&gt;make&lt;/code&gt; establecen la variable &lt;code&gt;MAKE&lt;/code&gt; . Otros no lo hacen. Esta variable contiene la cadena que se incluir&amp;aacute; en</target>
        </trans-unit>
        <trans-unit id="fd2f9dd996c82ce27f9d189fd038a8b3dc2b29cb" translate="yes" xml:space="preserve">
          <source>Some versions of &lt;code&gt;make&lt;/code&gt; set the variable &lt;code&gt;MAKE&lt;/code&gt;. Others do not. This variable contains the string to be included in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954f7aeec06323e12a6983f37a0846eca84625d3" translate="yes" xml:space="preserve">
          <source>Some versions of flock() can't lock files over a network (e.g. on NFS file systems), so you'd need to force the use of fcntl(2) when you build Perl. But even this is dubious at best. See the flock entry of &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; and the</source>
          <target state="translated">Algunas versiones de flock () no pueden bloquear archivos a trav&amp;eacute;s de una red (por ejemplo, en sistemas de archivos NFS), por lo que deber&amp;aacute; forzar el uso de fcntl (2) cuando compile Perl. Pero incluso esto es, en el mejor de los casos, dudoso. Vea la entrada del reba&amp;ntilde;o de &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; y el</target>
        </trans-unit>
        <trans-unit id="dd60cc6568aba712fcca69343c88a2420637338a" translate="yes" xml:space="preserve">
          <source>Some, but not all, UTF-8 malformations are detected, and in fact, some malformed input could cause reading beyond the end of the input buffer, which is one reason why this function is deprecated. The other is that only in extremely limited circumstances should the Unicode versus native code point be of any interest to you. See &lt;a href=&quot;#utf8_to_uvuni_buf&quot;&gt;&quot;utf8_to_uvuni_buf&quot;&lt;/a&gt; for alternatives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d311518a6bb3b8613076ce871f73cf8cb1a1e05f" translate="yes" xml:space="preserve">
          <source>Some, but not all, UTF-8 malformations are detected, and in fact, some malformed input could cause reading beyond the end of the input buffer, which is one reason why this function is deprecated. The other is that only in extremely limited circumstances should the Unicode versus native code point be of any interest to you. See &lt;a href=&quot;#utf8_to_uvuni_buf&quot;&gt;utf8_to_uvuni_buf&lt;/a&gt; for alternatives.</source>
          <target state="translated">Algunas, pero no todas, las malformaciones UTF-8 se detectan y, de hecho, alguna entrada mal formada podr&amp;iacute;a provocar una lectura m&amp;aacute;s all&amp;aacute; del final del b&amp;uacute;fer de entrada, que es una de las razones por las que esta funci&amp;oacute;n est&amp;aacute; en desuso. La otra es que solo en circunstancias extremadamente limitadas, el punto Unicode versus el c&amp;oacute;digo nativo deber&amp;iacute;a ser de alg&amp;uacute;n inter&amp;eacute;s para usted. Consulte &lt;a href=&quot;#utf8_to_uvuni_buf&quot;&gt;utf8_to_uvuni_buf&lt;/a&gt; para conocer las alternativas.</target>
        </trans-unit>
        <trans-unit id="f0f7251754bf0f46339bfaca2d9d1483409569f4" translate="yes" xml:space="preserve">
          <source>Some, but not all, UTF-8 malformations are detected, and in fact, some malformed input could cause reading beyond the end of the input buffer, which is why this function is deprecated. Use &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;&quot;utf8_to_uvchr_buf&quot;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc9641c97ef26419e8b09582d42e0230f643449" translate="yes" xml:space="preserve">
          <source>Some, but not all, UTF-8 malformations are detected, and in fact, some malformed input could cause reading beyond the end of the input buffer, which is why this function is deprecated. Use &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;utf8_to_uvchr_buf&lt;/a&gt; instead.</source>
          <target state="translated">Se detectan algunas, pero no todas, las malformaciones UTF-8 y, de hecho, alguna entrada mal formada podr&amp;iacute;a provocar una lectura m&amp;aacute;s all&amp;aacute; del final del b&amp;uacute;fer de entrada, por lo que esta funci&amp;oacute;n est&amp;aacute; en desuso. &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;En su&lt;/a&gt; lugar, utilice utf8_to_uvchr_buf .</target>
        </trans-unit>
        <trans-unit id="d5b99daee126bc167396885e5a173ca7e1b5727f" translate="yes" xml:space="preserve">
          <source>Some, such as &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; aren't provided because the concept does not exist within Plan 9. Others, such as some of the socket-related functions, simply haven't been written yet. Many in the latter category may be supported in the future.</source>
          <target state="translated">Algunos, como &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; , no se proporcionan porque el concepto no existe dentro del Plan 9. Otros, como algunas de las funciones relacionadas con socket, simplemente no se han escrito todav&amp;iacute;a. Muchos de los de esta &amp;uacute;ltima categor&amp;iacute;a pueden recibir soporte en el futuro.</target>
        </trans-unit>
        <trans-unit id="63c9382b076dd9dd8161d9b49e86f36c6b0988c1" translate="yes" xml:space="preserve">
          <source>Some, such as &lt;code&gt;chown&lt;/code&gt; and &lt;code&gt;umask&lt;/code&gt; aren't provided because the concept does not exist within Plan 9. Others, such as some of the socket-related functions, simply haven't been written yet. Many in the latter category may be supported in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b529d1f2a1daeac288a5dc3e3f1ad071820c7a2" translate="yes" xml:space="preserve">
          <source>Some/Module.pm</source>
          <target state="translated">Some/Module.pm</target>
        </trans-unit>
        <trans-unit id="75f6f0269318d3e6d862e35e227cdb78f8aa0076" translate="yes" xml:space="preserve">
          <source>Someone like Larry, or one of his peculiar friends. Also refers to the strange prefixes that Perl requires as noun markers on its variables.</source>
          <target state="translated">Alguien como Larry,o uno de sus peculiares amigos.También se refiere a los extraños prefijos que Perl requiere como marcadores de nombres en sus variables.</target>
        </trans-unit>
        <trans-unit id="4645c18015bf5520c386fecd9f2627c0f851f491" translate="yes" xml:space="preserve">
          <source>Someone who &amp;ldquo;carries&amp;rdquo; software from one &lt;b&gt;platform&lt;/b&gt; to another. Porting programs written in platform-dependent languages such as C can be difficult work, but porting programs like Perl is very much worth the agony.</source>
          <target state="translated">Alguien que &quot;lleva&quot; software de una &lt;b&gt;plataforma&lt;/b&gt; a otra. Portar programas escritos en lenguajes dependientes de la plataforma como C puede ser un trabajo dif&amp;iacute;cil, pero portar programas como Perl merece mucho la pena.</target>
        </trans-unit>
        <trans-unit id="81901ca358030c454d79961747b435397961631e" translate="yes" xml:space="preserve">
          <source>Someone who breaks security on computer systems. A cracker may be a true &lt;b&gt;hacker&lt;/b&gt; or only a &lt;b&gt;script kiddie&lt;/b&gt;.</source>
          <target state="translated">Alguien que rompe la seguridad de los sistemas inform&amp;aacute;ticos. Un cracker puede ser un verdadero &lt;b&gt;hacker&lt;/b&gt; o solo un &lt;b&gt;script kiddie&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="1964ccb6039dfc22b78b8e0d35db2a914eb047cc" translate="yes" xml:space="preserve">
          <source>Someone who is brilliantly persistent in solving technical problems, whether these involve golfing, fighting orcs, or programming. Hacker is a neutral term, morally speaking. Good hackers are not to be confused with evil &lt;b&gt;crackers&lt;/b&gt; or clueless &lt;b&gt;script kiddies&lt;/b&gt;. If you confuse them, we will presume that you are either evil or clueless.</source>
          <target state="translated">Alguien que sea brillantemente persistente en la resoluci&amp;oacute;n de problemas t&amp;eacute;cnicos, ya sean de golf, lucha contra orcos o programaci&amp;oacute;n. Hacker es un t&amp;eacute;rmino neutral, moralmente hablando. Los buenos hackers no deben ser confundidos con los malos &lt;b&gt;galletas&lt;/b&gt; o despistados &lt;b&gt;ni&amp;ntilde;os de la escritura&lt;/b&gt; . Si los confunde, asumiremos que es malvado o que no tiene ni idea.</target>
        </trans-unit>
        <trans-unit id="a06bdcd2151c9efce6b287181e34780a4956856f" translate="yes" xml:space="preserve">
          <source>Something &amp;ldquo;iffy&amp;rdquo;. See &lt;b&gt;Boolean context&lt;/b&gt;.</source>
          <target state="translated">Algo &quot;dudoso&quot;. Ver &lt;b&gt;contexto booleano&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e155f24963deb993057b4c0bc7a9a37afd51cb22" translate="yes" xml:space="preserve">
          <source>Something extra that happens when you evaluate an &lt;b&gt;expression&lt;/b&gt;. Nowadays it can refer to almost anything. For example, evaluating a simple assignment statement typically has the &amp;ldquo;side effect&amp;rdquo; of assigning a value to a variable. (And you thought assigning the value was your primary intent in the first place!) Likewise, assigning a value to the special variable &lt;code&gt;$|&lt;/code&gt; (&lt;code&gt;$AUTOFLUSH&lt;/code&gt; ) has the side effect of forcing a flush after every &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; on the currently selected filehandle.</source>
          <target state="translated">Algo extra que sucede cuando eval&amp;uacute;as una &lt;b&gt;expresi&amp;oacute;n&lt;/b&gt; . Hoy en d&amp;iacute;a puede referirse a casi cualquier cosa. Por ejemplo, evaluar una declaraci&amp;oacute;n de asignaci&amp;oacute;n simple normalmente tiene el &quot;efecto secundario&quot; de asignar un valor a una variable. (&amp;iexcl;Y pens&amp;oacute; que asignar el valor era su intenci&amp;oacute;n principal en primer lugar!) Del mismo modo, asignar un valor a la variable especial &lt;code&gt;$|&lt;/code&gt; ( &lt;code&gt;$AUTOFLUSH&lt;/code&gt; ) tiene el efecto secundario de forzar una descarga despu&amp;eacute;s de cada &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; en el identificador de archivo seleccionado actualmente.</target>
        </trans-unit>
        <trans-unit id="4a7cb9b5327bb852f44f8593a79f045c7ad57891" translate="yes" xml:space="preserve">
          <source>Something extra that happens when you evaluate an &lt;b&gt;expression&lt;/b&gt;. Nowadays it can refer to almost anything. For example, evaluating a simple assignment statement typically has the &amp;ldquo;side effect&amp;rdquo; of assigning a value to a variable. (And you thought assigning the value was your primary intent in the first place!) Likewise, assigning a value to the special variable &lt;code&gt;$|&lt;/code&gt; (&lt;code&gt;$AUTOFLUSH&lt;/code&gt;) has the side effect of forcing a flush after every &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; on the currently selected filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783e080adee89f0dfad650da0b7f44d322697c43" translate="yes" xml:space="preserve">
          <source>Something is rotten in the state of the program. An attributed subroutine ceased to exist between the point it was declared and the point at which its attribute handler(s) would have been called.</source>
          <target state="translated">Algo está podrido en el estado del programa.Una subrutina atribuida dejó de existir entre el punto en el que fue declarada y el punto en el que su(s)manejador(es)de atributos habría(n)sido llamado(s).</target>
        </trans-unit>
        <trans-unit id="9119b80c4db3125e0e5d3f36b18c5029258c49c9" translate="yes" xml:space="preserve">
          <source>Something is still amiss: consider the loop variable $cnt of the script. It was a number, not an object. We cannot make this value of type &lt;code&gt;symbolic&lt;/code&gt; , since then the loop will not terminate.</source>
          <target state="translated">Algo todav&amp;iacute;a est&amp;aacute; mal: considere la variable de ciclo $ cnt del script. Era un n&amp;uacute;mero, no un objeto. No podemos hacer que este valor de tipo sea &lt;code&gt;symbolic&lt;/code&gt; , ya que entonces el bucle no terminar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e0a55c1b08a5503b38a652a677cea0c95bbc3889" translate="yes" xml:space="preserve">
          <source>Something is still amiss: consider the loop variable $cnt of the script. It was a number, not an object. We cannot make this value of type &lt;code&gt;symbolic&lt;/code&gt;, since then the loop will not terminate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b420f56b3a25fc6071dc9a2a0d9e492a4d5a4fac" translate="yes" xml:space="preserve">
          <source>Something like &lt;code&gt;&quot;-DHAVE_UNISTD_H&quot;&lt;/code&gt;</source>
          <target state="translated">Algo como &lt;code&gt;&quot;-DHAVE_UNISTD_H&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2229723dcea531af53507e7f80155b0032f61e90" translate="yes" xml:space="preserve">
          <source>Something not owned by anybody. Perl is copyrighted and is thus</source>
          <target state="translated">Algo que no pertenece a nadie.Perl tiene derechos de autor y por lo tanto</target>
        </trans-unit>
        <trans-unit id="63320e06b401dd030b4898741e99304253f96385" translate="yes" xml:space="preserve">
          <source>Something of a hack but it prevents a lot of code duplication between MM_* variants.</source>
          <target state="translated">Algo así como un hacker,pero evita una gran cantidad de duplicación de código entre las variantes MM_*.</target>
        </trans-unit>
        <trans-unit id="bbccb8a40149fe00b8fef910fa55b43eced89db6" translate="yes" xml:space="preserve">
          <source>Something similar to the offset hack is performed on AVs to enable efficient shifting and splicing off the beginning of the array; while &lt;code&gt;AvARRAY&lt;/code&gt; points to the first element in the array that is visible from Perl, &lt;code&gt;AvALLOC&lt;/code&gt; points to the real start of the C array. These are usually the same, but a &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; operation can be carried out by increasing &lt;code&gt;AvARRAY&lt;/code&gt; by one and decreasing &lt;code&gt;AvFILL&lt;/code&gt; and &lt;code&gt;AvMAX&lt;/code&gt; . Again, the location of the real start of the C array only comes into play when freeing the array. See &lt;code&gt;av_shift&lt;/code&gt; in</source>
          <target state="translated">Algo similar al truco de desplazamiento se realiza en los AV para permitir un cambio y un empalme eficientes del comienzo de la matriz; mientras que &lt;code&gt;AvARRAY&lt;/code&gt; apunta al primer elemento de la matriz que es visible desde Perl, &lt;code&gt;AvALLOC&lt;/code&gt; apunta al inicio real de la matriz C. Estos suelen ser los mismos, pero se puede realizar una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; aumentando &lt;code&gt;AvARRAY&lt;/code&gt; en uno y disminuyendo &lt;code&gt;AvFILL&lt;/code&gt; y &lt;code&gt;AvMAX&lt;/code&gt; . Nuevamente, la ubicaci&amp;oacute;n del inicio real de la matriz C solo entra en juego cuando se libera la matriz. Ver &lt;code&gt;av_shift&lt;/code&gt; en</target>
        </trans-unit>
        <trans-unit id="d8e742452f6bb725bfab3a5c5dba5836e7b3c368" translate="yes" xml:space="preserve">
          <source>Something similar to the offset hack is performed on AVs to enable efficient shifting and splicing off the beginning of the array; while &lt;code&gt;AvARRAY&lt;/code&gt; points to the first element in the array that is visible from Perl, &lt;code&gt;AvALLOC&lt;/code&gt; points to the real start of the C array. These are usually the same, but a &lt;code&gt;shift&lt;/code&gt; operation can be carried out by increasing &lt;code&gt;AvARRAY&lt;/code&gt; by one and decreasing &lt;code&gt;AvFILL&lt;/code&gt; and &lt;code&gt;AvMAX&lt;/code&gt;. Again, the location of the real start of the C array only comes into play when freeing the array. See &lt;code&gt;av_shift&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4332fef1f22d39fca98466a0536a5b2d1aaa44ee" translate="yes" xml:space="preserve">
          <source>Something that tells your program what sort of variable you&amp;rsquo;d like. Perl doesn&amp;rsquo;t require you to declare variables, but you can use &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; to denote that you want something other than the default.</source>
          <target state="translated">Algo que le diga a su programa qu&amp;eacute; tipo de variable le gustar&amp;iacute;a. Perl no requiere que declare variables, pero puede usar &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; para indicar que desea algo diferente al predeterminado.</target>
        </trans-unit>
        <trans-unit id="e3fc8d53ca8cfa587374cbbfc4c208732524185a" translate="yes" xml:space="preserve">
          <source>Something that tells your program what sort of variable you&amp;rsquo;d like. Perl doesn&amp;rsquo;t require you to declare variables, but you can use &lt;code&gt;my&lt;/code&gt;, &lt;code&gt;our&lt;/code&gt;, or &lt;code&gt;state&lt;/code&gt; to denote that you want something other than the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad3b77572daa04075d4890e62387b4b824f1955" translate="yes" xml:space="preserve">
          <source>Something to exclude, prefixed by &lt;code&gt;&quot;-&quot;&lt;/code&gt; : an existing character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) or a fully qualified (including package name) user-defined character property, to represent all the characters in that property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="translated">Algo para excluir, con el prefijo &lt;code&gt;&quot;-&quot;&lt;/code&gt; : una propiedad de car&amp;aacute;cter existente (con el prefijo &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) o una propiedad de car&amp;aacute;cter definida por el usuario completamente calificada (incluido el nombre del paquete), para representar todos los caracteres de esa propiedad; dos puntos de c&amp;oacute;digo hexadecimal para un rango; o un &amp;uacute;nico punto de c&amp;oacute;digo hexadecimal.</target>
        </trans-unit>
        <trans-unit id="7bf62f5d5b516cf40152d9946d4ef2a34c8991f7" translate="yes" xml:space="preserve">
          <source>Something to exclude, prefixed by &lt;code&gt;&quot;-&quot;&lt;/code&gt;: an existing character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt;) or a fully qualified (including package name) user-defined character property, to represent all the characters in that property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7458ff984e1016174a3ccc404733830b1557d4" translate="yes" xml:space="preserve">
          <source>Something to include, prefixed by &lt;code&gt;&quot;+&quot;&lt;/code&gt; : a built-in character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) or a fully qualified (including package name) user-defined character property, to represent all the characters in that property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="translated">Algo para incluir, con el prefijo &lt;code&gt;&quot;+&quot;&lt;/code&gt; : una propiedad de car&amp;aacute;cter incorporada (con el prefijo &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) o una propiedad de car&amp;aacute;cter completamente calificada (incluido el nombre del paquete) definida por el usuario, para representar todos los caracteres en esa propiedad; dos puntos de c&amp;oacute;digo hexadecimal para un rango; o un &amp;uacute;nico punto de c&amp;oacute;digo hexadecimal.</target>
        </trans-unit>
        <trans-unit id="bb71dc1c8ef0238d1cf6b1ff9fe27bbba1762fb7" translate="yes" xml:space="preserve">
          <source>Something to include, prefixed by &lt;code&gt;&quot;+&quot;&lt;/code&gt;: a built-in character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt;) or a fully qualified (including package name) user-defined character property, to represent all the characters in that property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691cfd6a9c9ef44b73a6c3b1fc2fc7e231422dbe" translate="yes" xml:space="preserve">
          <source>Something to intersect with, prefixed by &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; : an existing character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) or a fully qualified (including package name) user-defined character property, for all the characters except the characters in the property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="translated">Algo con lo que se cruza, con el prefijo &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; : una propiedad de car&amp;aacute;cter existente (con el prefijo &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) o una propiedad de car&amp;aacute;cter definida por el usuario completamente calificada (incluido el nombre del paquete), para todos los caracteres excepto los caracteres de la propiedad; dos puntos de c&amp;oacute;digo hexadecimal para un rango; o un &amp;uacute;nico punto de c&amp;oacute;digo hexadecimal.</target>
        </trans-unit>
        <trans-unit id="4e94a757edcaa7aad7a0e5c39dc75f3c74ce6898" translate="yes" xml:space="preserve">
          <source>Something to intersect with, prefixed by &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;: an existing character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt;) or a fully qualified (including package name) user-defined character property, for all the characters except the characters in the property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6131959027de2eb65107afa87755cfdbae0af220" translate="yes" xml:space="preserve">
          <source>Something to negate, prefixed &lt;code&gt;&quot;!&quot;&lt;/code&gt; : an existing character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) or a fully qualified (including package name) user-defined character property, to represent all the characters in that property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="translated">Algo para negar, con el prefijo &lt;code&gt;&quot;!&quot;&lt;/code&gt; : una propiedad de car&amp;aacute;cter existente (con el prefijo &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt; ) o una propiedad de car&amp;aacute;cter completamente calificada (incluido el nombre del paquete) definida por el usuario, para representar todos los caracteres de esa propiedad; dos puntos de c&amp;oacute;digo hexadecimal para un rango; o un &amp;uacute;nico punto de c&amp;oacute;digo hexadecimal.</target>
        </trans-unit>
        <trans-unit id="1f4e74c8c058a6efc1c6982e3f86bee213dbdf3d" translate="yes" xml:space="preserve">
          <source>Something to negate, prefixed &lt;code&gt;&quot;!&quot;&lt;/code&gt;: an existing character property (prefixed by &lt;code&gt;&quot;utf8::&quot;&lt;/code&gt;) or a fully qualified (including package name) user-defined character property, to represent all the characters in that property; two hexadecimal code points for a range; or a single hexadecimal code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29b35d3b7e27c5736fa04a9d5a9779f7c0d02b4" translate="yes" xml:space="preserve">
          <source>Something we&amp;rsquo;d call a &lt;b&gt;metacharacter&lt;/b&gt; except that it&amp;rsquo;s a sequence of more than one character. Generally, the first character in the sequence must be a true metacharacter to get the other characters in the metasymbol to misbehave along with it.</source>
          <target state="translated">Algo que llamar&amp;iacute;amos &lt;b&gt;metacar&amp;aacute;cter&lt;/b&gt; excepto que es una secuencia de m&amp;aacute;s de un car&amp;aacute;cter. Por lo general, el primer personaje de la secuencia debe ser un verdadero metacar&amp;aacute;cter para lograr que los otros personajes del metas&amp;iacute;mbolo se comporten mal con &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="0939ed03ca5713b7d596d517d3a21d567b42a063" translate="yes" xml:space="preserve">
          <source>Something went horribly wrong-- the number of microseconds that cannot become negative just became negative. Maybe your compiler is broken?</source>
          <target state="translated">Algo salió terriblemente mal...el número de microsegundos que no pueden convertirse en negativos acaba de convertirse en negativo.¿Quizás tu compilador está roto?</target>
        </trans-unit>
        <trans-unit id="c59ba282daa2ae9441382d6bdd1d5cbb102eba6e" translate="yes" xml:space="preserve">
          <source>Something you can see from anywhere, usually used of &lt;b&gt;variables&lt;/b&gt; and &lt;b&gt;subroutines&lt;/b&gt; that are visible everywhere in your program. In Perl, only certain special variables are truly global&amp;mdash;most variables (and all subroutines) exist only in the current &lt;b&gt;package&lt;/b&gt;. Global variables can be declared with &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;. See &amp;ldquo;Global Declarations&amp;rdquo; in Camel chapter 4, &amp;ldquo;Statements and Declarations&amp;rdquo;.</source>
          <target state="translated">Algo que puede ver desde cualquier lugar, generalmente utilizado en &lt;b&gt;variables&lt;/b&gt; y &lt;b&gt;subrutinas&lt;/b&gt; que son visibles en todas partes de su programa. En Perl, solo ciertas variables especiales son verdaderamente globales; la mayor&amp;iacute;a de las variables (y todas las subrutinas) existen solo en el &lt;b&gt;paquete&lt;/b&gt; actual . Las variables globales se pueden declarar con &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; . Consulte &amp;ldquo;Declaraciones globales&amp;rdquo; en el cap&amp;iacute;tulo 4 de Camel, &amp;ldquo;Declaraciones y declaraciones&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="e2c9c959fabe06831c4dbb79467f69e8f2c98312" translate="yes" xml:space="preserve">
          <source>Something you can see from anywhere, usually used of &lt;b&gt;variables&lt;/b&gt; and &lt;b&gt;subroutines&lt;/b&gt; that are visible everywhere in your program. In Perl, only certain special variables are truly global&amp;mdash;most variables (and all subroutines) exist only in the current &lt;b&gt;package&lt;/b&gt;. Global variables can be declared with &lt;code&gt;our&lt;/code&gt;. See &amp;ldquo;Global Declarations&amp;rdquo; in Camel chapter 4, &amp;ldquo;Statements and Declarations&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e88fa4cc64647b2e3278d50a97cb8b0618c720" translate="yes" xml:space="preserve">
          <source>Something you do for someone else to make them happy, like giving them the time of day (or of their life). On some machines, well-known services are listed by the &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Algo que haces por otra persona para hacerla feliz, como darle la hora del d&amp;iacute;a (o de su vida). En algunas m&amp;aacute;quinas, la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getservent&quot;&gt;getservent&lt;/a&gt;&lt;/code&gt; enumera los servicios conocidos .</target>
        </trans-unit>
        <trans-unit id="3583892f6ad6941063be20d46c43faa9b54da5ee" translate="yes" xml:space="preserve">
          <source>Something you do for someone else to make them happy, like giving them the time of day (or of their life). On some machines, well-known services are listed by the &lt;code&gt;getservent&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae96bed2910e868f1f0a103c503d2b55a0cc3496" translate="yes" xml:space="preserve">
          <source>Sometimes (see &lt;a href=&quot;#When-Unicode-Does-Not-Happen&quot;&gt;&quot;When Unicode Does Not Happen&quot;&lt;/a&gt; or &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;&quot;The &quot;Unicode Bug&quot;&quot;&lt;/a&gt;) there are situations where you simply need to force a byte string into UTF-8, or vice versa. The standard module &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; can be used for this, or the low-level calls &lt;a href=&quot;utf8#Utility-functions&quot;&gt;&lt;code&gt;utf8::upgrade($bytestring)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;utf8#Utility-functions&quot;&gt;&lt;code&gt;utf8::downgrade($utf8string[, FAIL_OK])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457be77433ae10862116d65ca361c913afdc2edf" translate="yes" xml:space="preserve">
          <source>Sometimes (see &lt;a href=&quot;#When-Unicode-Does-Not-Happen&quot;&gt;When Unicode Does Not Happen&lt;/a&gt; or &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt;) there are situations where you simply need to force a byte string into UTF-8, or vice versa. The standard module &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; can be used for this, or the low-level calls &lt;a href=&quot;utf8#Utility-functions&quot;&gt;utf8::upgrade($bytestring) &lt;/a&gt; and &lt;a href=&quot;utf8#Utility-functions&quot;&gt;utf8::downgrade($utf8string[, FAIL_OK]) &lt;/a&gt;.</source>
          <target state="translated">A veces (consulte &lt;a href=&quot;#When-Unicode-Does-Not-Happen&quot;&gt;Cuando Unicode no sucede&lt;/a&gt; o &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;El error Unicode&lt;/a&gt; ) hay situaciones en las que simplemente necesita forzar una cadena de bytes en UTF-8, o viceversa. Para esto se puede usar el m&amp;oacute;dulo est&amp;aacute;ndar &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; , o las llamadas de bajo nivel &lt;a href=&quot;utf8#Utility-functions&quot;&gt;utf8 :: upgrade ($ bytestring)&lt;/a&gt; y &lt;a href=&quot;utf8#Utility-functions&quot;&gt;utf8 :: downgrade ($ utf8string [, FAIL_OK])&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f608ce8dd6d68e4a0eca5a70c40d0ca13048d16" translate="yes" xml:space="preserve">
          <source>Sometimes a change affects code paths which you cannot test on the OSes which are directly available to you and it would be wise to have users on other OSes test the change before you commit it to blead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c72f071a765fd3018bc7af5d49df36cbd9aae7b" translate="yes" xml:space="preserve">
          <source>Sometimes greed is not good. At times, we would like quantifiers to match a</source>
          <target state="translated">A veces la codicia no es buena.A veces,nos gustaría que los cuantificadores coincidieran con una</target>
        </trans-unit>
        <trans-unit id="0aa27e840004256e29009bb974e009bb34e90abf" translate="yes" xml:space="preserve">
          <source>Sometimes instead of zeroing the allocated heap by using Newxz() you should consider &quot;poisoning&quot; the data. This means writing a bit pattern into it that should be illegal as pointers (and floating point numbers), and also hopefully surprising enough as integers, so that any code attempting to use the data without forethought will break sooner rather than later. Poisoning can be done using the Poison() macros, which have similar arguments to Zero():</source>
          <target state="translated">A veces,en lugar de poner a cero el montón asignado mediante el uso de Newxz()debería considerar &quot;envenenar&quot; los datos.Esto significa escribir un patrón de bits en él que debería ser ilegal como punteros (y números en coma flotante),y también esperemos que lo suficientemente sorprendente como números enteros,de modo que cualquier código que intente utilizar los datos sin premeditación se romperá más pronto que tarde.El envenenamiento puede hacerse usando las macros Poison(),que tienen argumentos similares a Zero():</target>
        </trans-unit>
        <trans-unit id="cae5675054ecaa30b3d68d273e86faefe7bf19e0" translate="yes" xml:space="preserve">
          <source>Sometimes it is advantageous to construct a pattern from the</source>
          <target state="translated">A veces es ventajoso construir un patrón a partir de la</target>
        </trans-unit>
        <trans-unit id="fa5de12a356ae81ac7e15fb6c4fdf4f42322289c" translate="yes" xml:space="preserve">
          <source>Sometimes it may be necessary to make more than one pass over the input files. If this is the case you have several options. You can make the first pass using &lt;b&gt;Pod::Parser&lt;/b&gt; and override your methods to store the intermediate results in memory somewhere for the &lt;b&gt;end_pod()&lt;/b&gt; method to process. You could use &lt;b&gt;Pod::Parser&lt;/b&gt; for several passes with an appropriate state variable to control the operation for each pass. If your input source can't be reset to start at the beginning, you can store it in some other structure as a string or an array and have that structure implement a &lt;b&gt;getline()&lt;/b&gt; method (which is all that &lt;b&gt;parse_from_filehandle()&lt;/b&gt; uses to read input).</source>
          <target state="translated">A veces puede ser necesario realizar m&amp;aacute;s de una pasada sobre los archivos de entrada. Si este es el caso, tiene varias opciones. Puede hacer la primera pasada usando &lt;b&gt;Pod :: Parser&lt;/b&gt; y anular sus m&amp;eacute;todos para almacenar los resultados intermedios en la memoria en alg&amp;uacute;n lugar para que el m&amp;eacute;todo &lt;b&gt;end_pod () los&lt;/b&gt; procese. Puede usar &lt;b&gt;Pod :: Parser&lt;/b&gt; para varias pasadas con una variable de estado apropiada para controlar la operaci&amp;oacute;n de cada pasada. Si su fuente de entrada no se puede restablecer para comenzar desde el principio, puede almacenarla en alguna otra estructura como una cadena o una matriz y hacer que esa estructura implemente un m&amp;eacute;todo &lt;b&gt;getline ()&lt;/b&gt; (que es todo lo que &lt;b&gt;parse_from_filehandle ()&lt;/b&gt; usa para leer entrada).</target>
        </trans-unit>
        <trans-unit id="f6006f7823a5727b8006f191fa888a2e039ea099" translate="yes" xml:space="preserve">
          <source>Sometimes minimal matching can help a lot. Imagine you'd like to match everything between &quot;foo&quot; and &quot;bar&quot;. Initially, you write something like this:</source>
          <target state="translated">A veces una mínima coincidencia puede ayudar mucho.Imagina que te gustaría emparejar todo lo que está entre &quot;foo&quot; y &quot;bar&quot;.Inicialmente,escribes algo como esto:</target>
        </trans-unit>
        <trans-unit id="7e0fb1495abd7611e5570cce2cb4d1976ffa0113" translate="yes" xml:space="preserve">
          <source>Sometimes older versions of the module you're installing live in other directories in @INC. Because Perl loads the first version of a module it finds, not the newest, you might accidentally get one of these older versions even after installing a brand new version. To delete</source>
          <target state="translated">A veces las versiones antiguas del módulo que estás instalando viven en otros directorios en @INC.Debido a que Perl carga la primera versión de un módulo que encuentra,no la más reciente,puede que accidentalmente obtenga una de estas versiones antiguas incluso después de instalar una versión nueva.Para borrar</target>
        </trans-unit>
        <trans-unit id="eb753520a2d796d4f761ee04ddf336bdbe0915a3" translate="yes" xml:space="preserve">
          <source>Sometimes ops are executed within an inner runops loop, such as tie, sort or overload code. In this case, something like</source>
          <target state="translated">A veces las operaciones se ejecutan dentro de un bucle de runas internas,como atar,clasificar o sobrecargar el código.En este caso,algo como</target>
        </trans-unit>
        <trans-unit id="147ec757892c0aed445b0fb45a48e27c978e8a0c" translate="yes" xml:space="preserve">
          <source>Sometimes running a test under certain conditions will cause the test script to die. A certain function or method isn't implemented (such as &lt;code&gt;&lt;a href=&quot;../functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; on MacOS), some resource isn't available (like a net connection) or a module isn't available. In these cases it's necessary to skip tests, or declare that they are supposed to fail but will work in the future (a todo test).</source>
          <target state="translated">A veces, ejecutar una prueba en determinadas condiciones har&amp;aacute; que el script de prueba falle. Una determinada funci&amp;oacute;n o m&amp;eacute;todo no est&amp;aacute; implementado (como &lt;code&gt;&lt;a href=&quot;../functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; en MacOS), alg&amp;uacute;n recurso no est&amp;aacute; disponible (como una conexi&amp;oacute;n de red) o un m&amp;oacute;dulo no est&amp;aacute; disponible. En estos casos, es necesario omitir las pruebas o declarar que se supone que fallar&amp;aacute;n pero que funcionar&amp;aacute;n en el futuro (una prueba de tareas pendientes).</target>
        </trans-unit>
        <trans-unit id="7390e59acad33d69c3848b5a344152fa281f8af4" translate="yes" xml:space="preserve">
          <source>Sometimes running a test under certain conditions will cause the test script to die. A certain function or method isn't implemented (such as &lt;code&gt;fork()&lt;/code&gt; on MacOS), some resource isn't available (like a net connection) or a module isn't available. In these cases it's necessary to skip tests, or declare that they are supposed to fail but will work in the future (a todo test).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a525fd22c2b653fcabe0c32c53b3975d5455dc" translate="yes" xml:space="preserve">
          <source>Sometimes the Test::Builder test counter is incremented without it printing any test output, for example, when &lt;code&gt;current_test()&lt;/code&gt; is changed. In these cases, Test::Builder doesn't know the result of the test, so its type is 'unknown'. These details for these tests are filled in. They are considered ok, but the name and actual_ok is left &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A veces, el contador de prueba Test :: Builder se incrementa sin que imprima ning&amp;uacute;n resultado de prueba, por ejemplo, cuando se cambia &lt;code&gt;current_test()&lt;/code&gt; . En estos casos, Test :: Builder no conoce el resultado de la prueba, por lo que su tipo es 'desconocido'. Estos detalles para estas pruebas se completan. Se consideran correctos, pero el nombre y actual_ok no se &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f02b8eb27bf0ac9011c417f61209efd72c4a3f25" translate="yes" xml:space="preserve">
          <source>Sometimes the Test::Builder test counter is incremented without it printing any test output, for example, when &lt;code&gt;current_test()&lt;/code&gt; is changed. In these cases, Test::Builder doesn't know the result of the test, so its type is 'unknown'. These details for these tests are filled in. They are considered ok, but the name and actual_ok is left &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd534b46a8017bb548267c02f58ed840dafad837" translate="yes" xml:space="preserve">
          <source>Sometimes the Test::More interface isn't quite enough. Fortunately, Test::More is built on top of &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; which provides a single, unified backend for any test library to use. This means two test libraries which both use &amp;lt;Test::Builder&amp;gt; &lt;b&gt;can&lt;/b&gt; be used together in the same program&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
