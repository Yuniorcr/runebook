<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="f98e934e3e323aad56091ee9d3930f3ae8c104b6" translate="yes" xml:space="preserve">
          <source>This facet is used when an event needs to convey errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4863e39f3d637a78fc09d7f47d55d55f765845fe" translate="yes" xml:space="preserve">
          <source>This facet is used when the event needs to give instructions to the Test2 internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdf2c23c1dbe14f4057ac7c561201a88d7beb7e" translate="yes" xml:space="preserve">
          <source>This facet represents messages intended for humans that will help them either understand a result, or diagnose a failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b436b8e968978315244cf53329a37437a8e57692" translate="yes" xml:space="preserve">
          <source>This facet tells the system that a plan has been set. The &lt;code&gt;details&lt;/code&gt; field of this is usually left empty, but when present explains why the plan is what it is, this is most useful if the plan is to skip-all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31882b218e30926e9578b39c27a5a21498d0f3ba" translate="yes" xml:space="preserve">
          <source>This fails because the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; makes STDERR go to where STDOUT was going at the time of the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;. The backticks then make STDOUT go to a string, but don't change STDERR (which still goes to the old STDOUT).</source>
          <target state="translated">Esto falla porque &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; hace que STDERR vaya a donde iba STDOUT en el momento de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; . Las comillas invertidas luego hacen que STDOUT vaya a una cadena, pero no cambien STDERR (que todav&amp;iacute;a va al antiguo STDOUT).</target>
        </trans-unit>
        <trans-unit id="a78c35501bcdeef5fb990dd2af9d2dc008f91164" translate="yes" xml:space="preserve">
          <source>This fails because the &lt;code&gt;open()&lt;/code&gt; makes STDERR go to where STDOUT was going at the time of the &lt;code&gt;open()&lt;/code&gt;. The backticks then make STDOUT go to a string, but don't change STDERR (which still goes to the old STDOUT).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d57b0a4260007b8d7df0d0cf0818de49b401fd" translate="yes" xml:space="preserve">
          <source>This failure does not seem to cause any problems. With older gcc versions, &quot;parse error&quot; is reported instead of &quot;missing binary operator&quot;.</source>
          <target state="translated">Esta falla no parece causar ningún problema.Con las versiones antiguas de gcc,se informa de un &quot;error de análisis&quot; en lugar de un &quot;operador binario ausente&quot;.</target>
        </trans-unit>
        <trans-unit id="10989604ee7346d15c921f024379a02bc163f4ba" translate="yes" xml:space="preserve">
          <source>This feature (introduced in Perl 5.10) significantly extends the power of Perl's pattern matching. By referring to some other capture group anywhere in the pattern with the construct &lt;code&gt;(?&lt;i&gt;group-ref&lt;/i&gt;)&lt;/code&gt;, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e96692d6e8677f9247e8d718c35a2f5314dd78a" translate="yes" xml:space="preserve">
          <source>This feature (introduced in Perl 5.10) significantly extends the power of Perl's pattern matching. By referring to some other capture group anywhere in the pattern with the construct &lt;code&gt;(?group-ref)&lt;/code&gt;, the</source>
          <target state="translated">Esta caracter&amp;iacute;stica (introducida en Perl 5.10) ampl&amp;iacute;a significativamente el poder de la coincidencia de patrones de Perl. Al referirse a alg&amp;uacute;n otro grupo de captura en cualquier parte del patr&amp;oacute;n con la construcci&amp;oacute;n &lt;code&gt;(?group-ref)&lt;/code&gt; , el</target>
        </trans-unit>
        <trans-unit id="39313d94f9ceb03c0da32836d49794a646f76b32" translate="yes" xml:space="preserve">
          <source>This feature allows code like this to work :</source>
          <target state="translated">Esta característica permite que un código como este funcione:</target>
        </trans-unit>
        <trans-unit id="3ea6b65f631960dbd85e9aa9e98d367d0a330dd1" translate="yes" xml:space="preserve">
          <source>This feature allows the use of &lt;a href=&quot;perlobj#Indirect-Object-Syntax&quot;&gt;indirect object syntax&lt;/a&gt; for method calls, e.g. &lt;code&gt;new Foo 1, 2;&lt;/code&gt;. It is enabled by default, but can be turned off to disallow indirect object syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d279f2466dab661314717405c1c291df785e033f" translate="yes" xml:space="preserve">
          <source>This feature hasn't been tested with multiple threads, but it will only show the backtrace of the thread doing the backtracing.</source>
          <target state="translated">Esta característica no ha sido probada con múltiples hilos,pero sólo mostrará el rastro del hilo que hace el rastreo.</target>
        </trans-unit>
        <trans-unit id="3f31330eeb1eb16a4131ea44941bd450e02ba159" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.16 onwards.</source>
          <target state="translated">Esta función está disponible desde el Perl 5.16 en adelante.</target>
        </trans-unit>
        <trans-unit id="a0eb6c955c276bb211d5f6e97040a35b64f681c9" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.18 onwards.</source>
          <target state="translated">Esta función está disponible desde el Perl 5.18 en adelante.</target>
        </trans-unit>
        <trans-unit id="dc734671a99ea7c893dbf1eee20f1120694c5664" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.18 onwards. From Perl 5.18 to 5.24, it was classed as experimental, and Perl emitted a warning for its usage, except when explicitly disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5350c7db9e5ccded478eeb543bf7a26b7856c3e9" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.20 onwards.</source>
          <target state="translated">Esta función está disponible a partir de Perl 5.20.</target>
        </trans-unit>
        <trans-unit id="912ee35f2cf624d52ab346e73c3923159bdb7d37" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.20 onwards. In Perl 5.20 and 5.22, it was classed as experimental, and Perl emitted a warning for its usage, except when explicitly disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d594f14a3251cf1780c8a95d14833fb1764cbcb5" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.22 onwards.</source>
          <target state="translated">Esta función está disponible desde el Perl 5.22 en adelante.</target>
        </trans-unit>
        <trans-unit id="812da9afcec2dd5dbb225d365cc307499de91303" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.22 onwards. Starting in Perl 5.28, &lt;code&gt;use v5.28&lt;/code&gt; will enable the feature. Before 5.28, it was still experimental and would emit a warning in the &quot;experimental::bitwise&quot; category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f5953cd1a4e50648fa5b5a07b6072cdf30f093" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.26 onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c28ac324833990916ac9b2e82a500932e6c840" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.32 onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd060361bef60c9e8d128e54b15bdf49a0df3f0" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.10.</source>
          <target state="translated">Esta función está disponible a partir de Perl 5.10.</target>
        </trans-unit>
        <trans-unit id="f16229bb3e38370fa369bac03ef842b45e6ac174" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.12; was almost fully implemented in Perl 5.14; and extended in Perl 5.16 to cover &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n est&amp;aacute; disponible a partir de Perl 5.12; se implement&amp;oacute; casi por completo en Perl 5.14; y extendido en Perl 5.16 para cubrir &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5524e6a39157c705251929d1a0f3ddb30671307" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.12; was almost fully implemented in Perl 5.14; and extended in Perl 5.16 to cover &lt;code&gt;quotemeta&lt;/code&gt;; was extended further in Perl 5.26 to cover &lt;a href=&quot;perlop#Range-Operators&quot;&gt;the range operator&lt;/a&gt;; and was extended again in Perl 5.28 to cover &lt;a href=&quot;perlfunc#split&quot;&gt;special-cased whitespace splitting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fa1f4ec8b7292a36ec1d671af80c0ba1c4dbf6" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.16.</source>
          <target state="translated">Esta función está disponible a partir de Perl 5.16.</target>
        </trans-unit>
        <trans-unit id="0c0f06ce5a1bc9813d47f25141700a05f2802346" translate="yes" xml:space="preserve">
          <source>This feature is available under this name from Perl 5.32 onwards. In previous versions, it was simply on all the time. To disallow (or warn on) indirect object syntax on older Perls, see the &lt;a href=&quot;indirect&quot;&gt;indirect&lt;/a&gt; CPAN module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf7997500a8320557eaa4d36e75775cc5a5b761" translate="yes" xml:space="preserve">
          <source>This feature is available under this name starting with Perl 5.16. In previous versions, it was simply on all the time, and this pragma knew nothing about it.</source>
          <target state="translated">Esta característica está disponible bajo este nombre a partir de Perl 5.16.En versiones anteriores,simplemente estaba encendida todo el tiempo,y este pragmatismo no sabía nada al respecto.</target>
        </trans-unit>
        <trans-unit id="b957d6504ae997d3a3efef291b5e1aad2b736b3a" translate="yes" xml:space="preserve">
          <source>This feature is enabled by 'importing' the non-existent symbol 'verbose'. You would typically enable it by saying</source>
          <target state="translated">Esta característica se activa al &quot;importar&quot; el símbolo inexistente &quot;verboso&quot;.Normalmente se activa diciendo</target>
        </trans-unit>
        <trans-unit id="02d76db5faed0f26a8be3e80c39fd86b2f9e9ac8" translate="yes" xml:space="preserve">
          <source>This feature is implemented as a new op type, &lt;code&gt;OP_CUSTOM&lt;/code&gt; . The Perl core does not &quot;know&quot; anything special about this op type, and so it will not be involved in any optimizations. This also means that you can define your custom ops to be any op structure -- unary, binary, list and so on -- you like.</source>
          <target state="translated">Esta funci&amp;oacute;n se implementa como un nuevo tipo de &lt;code&gt;OP_CUSTOM&lt;/code&gt; , OP_CUSTOM . El n&amp;uacute;cleo de Perl no &quot;sabe&quot; nada especial acerca de este tipo de operaci&amp;oacute;n, por lo que no estar&amp;aacute; involucrado en ninguna optimizaci&amp;oacute;n. Esto tambi&amp;eacute;n significa que puede definir sus operaciones personalizadas para que sean cualquier estructura de operaciones (unaria, binaria, lista, etc.) que desee.</target>
        </trans-unit>
        <trans-unit id="aa7a3b666f950bccfb4edd15bc8cc86185353e0d" translate="yes" xml:space="preserve">
          <source>This feature is implemented as a new op type, &lt;code&gt;OP_CUSTOM&lt;/code&gt;. The Perl core does not &quot;know&quot; anything special about this op type, and so it will not be involved in any optimizations. This also means that you can define your custom ops to be any op structure -- unary, binary, list and so on -- you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a96f74e82c64c1fcb6aeb933d3cba439c5534f0" translate="yes" xml:space="preserve">
          <source>This feature is not available when the left-hand side is prefixed by &lt;code&gt;Is_&lt;/code&gt;, nor for any form that is marked as &quot;Discouraged&quot; in &lt;a href=&quot;perluniprops#Discouraged&quot;&gt;&quot;Discouraged&quot; in perluniprops&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d9a13d27e32567256bd5ed07966300b2843571" translate="yes" xml:space="preserve">
          <source>This feature is useful when processing a file format that encapsulates a compressed data stream (e.g. gzip, zip) and there is useful data immediately after the deflation stream.</source>
          <target state="translated">Esta característica es útil cuando se procesa un formato de archivo que encapsula una corriente de datos comprimidos (por ejemplo,gzip,zip)y hay datos útiles inmediatamente después de la corriente de desinflado.</target>
        </trans-unit>
        <trans-unit id="70ff4f5cd1e98da8a085f691d09087dfafce10bc" translate="yes" xml:space="preserve">
          <source>This feature is useful when processing a file format that encapsulates a compressed data stream (e.g. gzip, zip).</source>
          <target state="translated">Esta característica es útil cuando se procesa un formato de archivo que encapsula un flujo de datos comprimido (por ejemplo,gzip,zip).</target>
        </trans-unit>
        <trans-unit id="def031dfec2b62faefb35716ef0923bb4937a5cd" translate="yes" xml:space="preserve">
          <source>This feature makes these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1209b27a133e6af72a5c8528b176699143400cab" translate="yes" xml:space="preserve">
          <source>This feature requires configuration option &lt;b&gt;permute&lt;/b&gt;, see section &lt;a href=&quot;#Configuring-Getopt%3A%3ALong&quot;&gt;&quot;Configuring Getopt::Long&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4da939b7443e26e164efdaa4d6f81b9bc175434" translate="yes" xml:space="preserve">
          <source>This feature requires configuration option &lt;b&gt;permute&lt;/b&gt;, see section &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuring Getopt::Long&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n requiere la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;b&gt;permute&lt;/b&gt; , consulte la secci&amp;oacute;n &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuraci&amp;oacute;n de Getopt :: Long&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17e7c4a42ab4fd0bc0d9658f7d9d343681a4a3e3" translate="yes" xml:space="preserve">
          <source>This feature supported the legacy &lt;code&gt;$[&lt;/code&gt; variable. See &lt;a href=&quot;perlvar#%24%5B&quot;&gt;&quot;$[&quot; in perlvar&lt;/a&gt;. It was on by default but disabled under &lt;code&gt;use v5.16&lt;/code&gt; (see &lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;&quot;IMPLICIT LOADING&quot;&lt;/a&gt;, below) and unavailable since perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84829a17ad80817afc9eefb1b49f97bfdfe8fac" translate="yes" xml:space="preserve">
          <source>This feature supports the legacy &lt;code&gt;$[&lt;/code&gt; variable. See &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$[ in perlvar&lt;/a&gt; and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt;. It is on by default but disabled under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (see &lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;IMPLICIT LOADING&lt;/a&gt;, below).</source>
          <target state="translated">Esta funci&amp;oacute;n es compatible con la variable &lt;code&gt;$[&lt;/code&gt; . Vea &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$ [en perlvar&lt;/a&gt; y &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt; . Es activado por defecto, pero bajo discapacitados &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (ver &lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;CARGA IMPLICITO&lt;/a&gt; , m&amp;aacute;s adelante).</target>
        </trans-unit>
        <trans-unit id="00aefaa433583952978113c93d5aa269ecab2168" translate="yes" xml:space="preserve">
          <source>This feature was inspired by, and small portions of code copied from, &lt;a href=&quot;ExtUtils::MakeMaker::BigHelper&quot;&gt;ExtUtils::MakeMaker::BigHelper&lt;/a&gt;. Hopefully this feature will render that module mainly obsolete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaa07991a8c1bc153311bc6ab0dcadf92aec838" translate="yes" xml:space="preserve">
          <source>This feature, available starting in v5.12, matches any character that is &lt;b&gt;not&lt;/b&gt; a newline. It is a short-hand for writing &lt;code&gt;[^\n]&lt;/code&gt;, and is identical to the &lt;code&gt;.&lt;/code&gt; metasymbol, except under the &lt;code&gt;/s&lt;/code&gt; flag, which changes the meaning of &lt;code&gt;.&lt;/code&gt;, but not &lt;code&gt;\N&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n, disponible a partir de la v5.12, coincide con cualquier car&amp;aacute;cter que &lt;b&gt;no sea&lt;/b&gt; una nueva l&amp;iacute;nea. Es un m&amp;eacute;todo abreviado para escribir &lt;code&gt;[^\n]&lt;/code&gt; y es id&amp;eacute;ntico al &lt;code&gt;.&lt;/code&gt; metas&amp;iacute;mbolo, excepto bajo la marca &lt;code&gt;/s&lt;/code&gt; , que cambia el significado de &lt;code&gt;.&lt;/code&gt; , Pero no &lt;code&gt;\N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e4badd2bd0b3314de1d21b3c6a19a2f1bd377e8" translate="yes" xml:space="preserve">
          <source>This feature, available starting in v5.12, matches any character that is &lt;b&gt;not&lt;/b&gt; a newline. It is a short-hand for writing &lt;code&gt;[^\n]&lt;/code&gt;, and is identical to the &lt;code&gt;.&lt;/code&gt; metasymbol, except under the &lt;code&gt;/s&lt;/code&gt; flag, which changes the meaning of &lt;code&gt;.&lt;/code&gt;, but not &lt;code&gt;\N&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86eab6101dbb39be1f4756f21ad94b3dc3f5b53a" translate="yes" xml:space="preserve">
          <source>This field defaults to the time the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object was created if this option is not specified.</source>
          <target state="translated">Este campo tiene como valor predeterminado la hora en que se cre&amp;oacute; el objeto &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; si no se especifica esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0ae6e594e4f58006926409640dc519990e005708" translate="yes" xml:space="preserve">
          <source>This field defaults to the time the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object was created if this option is not specified and the &lt;code&gt;$input&lt;/code&gt; parameter is not a filename.</source>
          <target state="translated">Este campo tiene como valor predeterminado la hora en que se cre&amp;oacute; el objeto &lt;code&gt;IO::Compress::Zip&lt;/code&gt; si no se especifica esta opci&amp;oacute;n y el par&amp;aacute;metro &lt;code&gt;$input&lt;/code&gt; no es un nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="29150647b17fb2eaf032ae7f9cf1edf0d8a40273" translate="yes" xml:space="preserve">
          <source>This field describes resources related to this distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faabe301b626421e79d9a93a3746c1a4c23e996c" translate="yes" xml:space="preserve">
          <source>This field explicitly &lt;b&gt;does not&lt;/b&gt; indicate whether installation may be safely performed without using a Makefile or Build file, as there may be special files to install or custom installation targets (e.g. for dual-life modules that exist on CPAN as well as in the Perl core). This field only defines whether or not prerequisites are exactly as given in the metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b737c95cac471ad0db737bd55f2afa0ecc00e9d6" translate="yes" xml:space="preserve">
          <source>This field gives the version of the distribution to which the metadata structure refers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ed5ad05bf9538c83d6f4c31b8d8168c6ea1afe" translate="yes" xml:space="preserve">
          <source>This field has been renamed to &lt;a href=&quot;#no_index&quot;&gt;&quot;no_index&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d61de930b74d19121949eaba54d44d9e597bc04" translate="yes" xml:space="preserve">
          <source>This field indicated 'module' or 'script' but was considered meaningless, since many distributions are hybrids of several kinds of things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a131922fb04db9781571b4e2c9fc5802f7ed1d" translate="yes" xml:space="preserve">
          <source>This field indicates the tool that was used to create this metadata. There are no defined semantics for this field, but it is traditional to use a string in the form &quot;Generating::Package version 1.23&quot; or the author's name, if the file was generated by hand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81dca640acbfe709e984ed290704a109d285fb13" translate="yes" xml:space="preserve">
          <source>This field indicates the version of the CPAN Meta Spec that should be used to interpret the metadata. Consumers must check this key as soon as possible and abort further metadata processing if the meta-spec version is not supported by the consumer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b23162f25251f9c8794e4f7fc74132947318185" translate="yes" xml:space="preserve">
          <source>This field is basically meaningless, and tools (like Module::Build or MakeMaker) will likely stop generating it in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1537025bf1561c07253d5a4a656431e7bfecfa5" translate="yes" xml:space="preserve">
          <source>This field is required. It must contain a Unix-style relative file path from the root of the distribution directory to a file that contains or generates the package. It may be given as &lt;code&gt;META.yml&lt;/code&gt; or &lt;code&gt;META.json&lt;/code&gt; to claim a package for indexing without needing a &lt;code&gt;*.pm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47519bc5424cf5de4e08e39bba85f5f5e7d4927" translate="yes" xml:space="preserve">
          <source>This field is the name of the distribution. This is often created by taking the &quot;main package&quot; in the distribution and changing &lt;code&gt;::&lt;/code&gt; to &lt;code&gt;-&lt;/code&gt;, but the name may be completely unrelated to the packages within the distribution. For example, &lt;a href=&quot;LWP::UserAgent&quot;&gt;LWP::UserAgent&lt;/a&gt; is distributed as part of the distribution name &quot;libwww-perl&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1736869f31835444fcd2554056bb1bdc04ff6bd" translate="yes" xml:space="preserve">
          <source>This field points at a &lt;code&gt;reg_data&lt;/code&gt; structure, which is defined as follows</source>
          <target state="translated">Este campo apunta a una estructura &lt;code&gt;reg_data&lt;/code&gt; , que se define de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="990821d4ec37cddf0c064311fa9c677b83df34b2" translate="yes" xml:space="preserve">
          <source>This field points at a &lt;code&gt;regexp_engine&lt;/code&gt; structure which contains pointers to the subroutines that are to be used for performing a match. It is the compiling routine's responsibility to populate this field before returning the regexp object.</source>
          <target state="translated">Este campo apunta a una estructura &lt;code&gt;regexp_engine&lt;/code&gt; que contiene punteros a las subrutinas que se utilizar&amp;aacute;n para realizar una coincidencia. Es responsabilidad de la rutina de compilaci&amp;oacute;n completar este campo antes de devolver el objeto regexp.</target>
        </trans-unit>
        <trans-unit id="d3115586186f239f2cdb97a74488a09390946c64" translate="yes" xml:space="preserve">
          <source>This field provides a general contact list independent of other structured fields provided within the &lt;a href=&quot;#resources&quot;&gt;&quot;resources&quot;&lt;/a&gt; field, such as &lt;code&gt;bugtracker&lt;/code&gt;. The addressee(s) can be contacted for any purpose including but not limited to (security) problems with the distribution, questions about the distribution or bugs in the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29c3b5fab49e3420f92d746ba1cbdbe08c72d5d" translate="yes" xml:space="preserve">
          <source>This field provides the release status of this distribution. If the &lt;code&gt;version&lt;/code&gt; field contains an underscore character, then &lt;code&gt;release_status&lt;/code&gt;&lt;b&gt;must not&lt;/b&gt; be &quot;stable.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5405199dbad0bce0901c037dfa0366548623a8d9" translate="yes" xml:space="preserve">
          <source>This field should be set to a true value if the distribution performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its configuration. This field should be set to a false value to indicate that prerequisites included in metadata may be considered final and valid for static analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da956943782a68bad0050c69ab023b35da3d16ff" translate="yes" xml:space="preserve">
          <source>This file adds no new information not already present in other files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee1cf43e9a6c3ca6d1e4006823b69dbad7f2bcb" translate="yes" xml:space="preserve">
          <source>This file came from the &quot;IO-stringy&quot; Perl5 toolkit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423f1e020ff559262836a01099aa9f00246b3cb0" translate="yes" xml:space="preserve">
          <source>This file contains instructions how to build Perl for Haiku and lists known problems.</source>
          <target state="translated">Este archivo contiene instrucciones para construir Perl para Haiku y enumera los problemas conocidos.</target>
        </trans-unit>
        <trans-unit id="3f97544476d7e0ff75b590bf2fb66c36a8e55e0a" translate="yes" xml:space="preserve">
          <source>This file contains most of the documentation of the perl public API, as generated by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddfb6f3949b158a34147e69be5f3f78a6a15fb6" translate="yes" xml:space="preserve">
          <source>This file contains notes for building perl on the Stratus OpenVOS operating system. Perl is a scripting or macro language that is popular on many systems. See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlbook&quot;&gt;perlbook&lt;/a&gt; for a number of good books on Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e77d17e03a82d35fe5f118c6d17cc03a2f5d43" translate="yes" xml:space="preserve">
          <source>This file contains notes for building perl on the Stratus OpenVOS operating system. Perl is a scripting or macro language that is popular on many systems. See &lt;a href=&quot;perlbook&quot;&gt;perlbook&lt;/a&gt; for a number of good books on Perl.</source>
          <target state="translated">Este archivo contiene notas para construir perl en el sistema operativo Stratus OpenVOS. Perl es un lenguaje de secuencias de comandos o macro que es popular en muchos sistemas. Consulte &lt;a href=&quot;perlbook&quot;&gt;perlbook&lt;/a&gt; para ver una serie de buenos libros sobre Perl.</target>
        </trans-unit>
        <trans-unit id="1b8ecba533b9b274e408d86f1a2361d08ce45153" translate="yes" xml:space="preserve">
          <source>This file contains the documentation of the perl public API generated by</source>
          <target state="translated">Este archivo contiene la documentación de la API pública de perl generada por</target>
        </trans-unit>
        <trans-unit id="772ef66d2f091024ffe5331d4173bb5adc436597" translate="yes" xml:space="preserve">
          <source>This file gives instructions for building Perl 5.7 and above, and also Perl modules for NetWare. Before you start, you may want to read the README file found in the top level directory into which the Perl source code distribution was extracted. Make sure you read and understand the terms under which the software is being distributed.</source>
          <target state="translated">Este archivo da instrucciones para construir Perl 5.7 y superior,y también módulos Perl para NetWare.Antes de empezar,puede que quiera leer el archivo README que se encuentra en el directorio de nivel superior en el que se extrajo la distribución del código fuente de Perl.Asegúrese de leer y comprender los términos bajo los cuales se distribuye el software.</target>
        </trans-unit>
        <trans-unit id="6ec203908c78957c98ea92f12965f186f5810be8" translate="yes" xml:space="preserve">
          <source>This file gives the instructions for building Perl5.8 and above for WinCE. Please read and understand the terms under which this software is distributed.</source>
          <target state="translated">Este archivo da las instrucciones para la construcción de Perl5.8 y superior para WinCE.Por favor,lea y entienda los términos bajo los cuales se distribuye este software.</target>
        </trans-unit>
        <trans-unit id="cf6acf338e7fac3c001977fe9f2038807c39d850" translate="yes" xml:space="preserve">
          <source>This file is the autogenerated documentation of functions in the Perl interpreter that are documented using Perl's internal documentation format but are not marked as part of the Perl API. In other words, &lt;b&gt;they are not for use in extensions&lt;/b&gt;!</source>
          <target state="translated">Este archivo es la documentaci&amp;oacute;n autogenerada de funciones en el int&amp;eacute;rprete de Perl que est&amp;aacute;n documentadas usando el formato de documentaci&amp;oacute;n interno de Perl pero que no est&amp;aacute;n marcadas como parte de la API de Perl. En otras palabras, &amp;iexcl; &lt;b&gt;no se deben usar en extensiones&lt;/b&gt; !</target>
        </trans-unit>
        <trans-unit id="37bc1fa4735275726caf451da3d6c18e093591a1" translate="yes" xml:space="preserve">
          <source>This file lists everyone who's contributed to Perl. If you submit a patch, you should add your name to this file as part of the patch.</source>
          <target state="translated">Este archivo contiene una lista de todos los que han contribuido a Perl.Si envías un parche,deberías añadir tu nombre a este archivo como parte del parche.</target>
        </trans-unit>
        <trans-unit id="bfb66abe74ae898df9c2dbe0e11c53cf1576bcaf" translate="yes" xml:space="preserve">
          <source>This file resides somewhere deep in the location you installed your perl library, find it out by</source>
          <target state="translated">Este archivo reside en algún lugar en lo profundo de la ubicación en la que instalaste tu biblioteca de perl,averígualo por</target>
        </trans-unit>
        <trans-unit id="6cb5bba8cb2fb8c111c0a512a6843cebdb2655ae" translate="yes" xml:space="preserve">
          <source>This file will get parsed, and produce a maybe empty &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; array for the current architecture. That will be extended by $BSLOADLIBS, which was computed by ExtUtils::Liblist::ext(). If this array still is empty, we do nothing, else we write a .bs file with an &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; array.</source>
          <target state="translated">Este archivo se analizar&amp;aacute; y producir&amp;aacute; una matriz &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; quiz&amp;aacute;s vac&amp;iacute;a para la arquitectura actual. Eso se ampliar&amp;aacute; con $ BSLOADLIBS, que fue calculado por ExtUtils :: Liblist :: ext (). Si esta matriz a&amp;uacute;n est&amp;aacute; vac&amp;iacute;a, no hacemos nada, de lo contrario escribimos un archivo .bs con una matriz &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77507ae6fec16ecb1a49a0d13053514b63919993" translate="yes" xml:space="preserve">
          <source>This filter ensures that all data written to the DBM file is null terminated. This is useful when you have a perl script that needs to interoperate with a DBM file that a C program also uses. A fairly common issue is for the C application to include the terminating null in a string when it writes to the DBM file. This filter will ensure that all data written to the DBM file can be read by the C application.</source>
          <target state="translated">Este filtro asegura que todos los datos escritos en el archivo DBM son nulos.Esto es útil cuando tienes un script perl que necesita interoperar con un archivo DBM que un programa C también utiliza.Un problema bastante común es que la aplicación C incluya el nulo de terminación en una cadena cuando escribe en el archivo DBM.Este filtro asegurará que todos los datos escritos en el archivo DBM puedan ser leídos por la aplicación C.</target>
        </trans-unit>
        <trans-unit id="1a16c760c71ffbcc7dbae1135b5e99738b98c9c4" translate="yes" xml:space="preserve">
          <source>This filter will compress all data before it is written to the database and uncompressed it on reading.</source>
          <target state="translated">Este filtro comprimirá todos los datos antes de que se escriban en la base de datos y los descomprima al leerlos.</target>
        </trans-unit>
        <trans-unit id="915eb343b20bf6c5f1c528d637992be8d7bcc44e" translate="yes" xml:space="preserve">
          <source>This final example contains both ordinary and pattern code expressions. It detects whether a binary string &lt;code&gt;1101010010001...&lt;/code&gt; has a Fibonacci spacing 0,1,1,2,3,5,... of the &lt;code&gt;'1'&lt;/code&gt;'s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff45bc95d2be91a9f62c2d432c6510d29da26205" translate="yes" xml:space="preserve">
          <source>This final example contains both ordinary and pattern code expressions. It detects whether a binary string &lt;code&gt;1101010010001...&lt;/code&gt; has a Fibonacci spacing 0,1,1,2,3,5,... of the &lt;code&gt;1&lt;/code&gt; 's:</source>
          <target state="translated">Este &amp;uacute;ltimo ejemplo contiene expresiones de c&amp;oacute;digo tanto ordinarias como de patrones. Detecta si una cadena binaria &lt;code&gt;1101010010001...&lt;/code&gt; tiene un espaciado de Fibonacci 0,1,1,2,3,5, ... de los &lt;code&gt;1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4dfd467bd9194695ec17711b8f65393c531e176b" translate="yes" xml:space="preserve">
          <source>This finishes implementation of a primitive symbolic calculator in 50 lines of Perl code. Since the numeric values of subexpressions are not cached, the calculator is very slow.</source>
          <target state="translated">Esto termina la implementación de una calculadora simbólica primitiva en 50 líneas de código Perl.Como los valores numéricos de las subexpresiones no están en caché,la calculadora es muy lenta.</target>
        </trans-unit>
        <trans-unit id="432b2214978806677872de825506327a25e6c8da" translate="yes" xml:space="preserve">
          <source>This first trivial example will call a Perl subroutine,</source>
          <target state="translated">Este primer ejemplo trivial se llamará subrutina Perl,</target>
        </trans-unit>
        <trans-unit id="7a73aefe087a5a3cae31e7663f998536b4f2db63" translate="yes" xml:space="preserve">
          <source>This flag has 2 effects:</source>
          <target state="translated">Esta bandera tiene dos efectos:</target>
        </trans-unit>
        <trans-unit id="caa34b07e62e9949dde06d4f7ad8cedfd3b7de3f" translate="yes" xml:space="preserve">
          <source>This flag has an important effect on Perl's treatment of the string: if UTF-8 data is not properly distinguished, regular expressions, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; and other string handling operations will have undesirable (wrong) results.</source>
          <target state="translated">Esta bandera tiene un efecto importante en el tratamiento de Perl de la cadena: si los datos UTF-8 no se distinguen correctamente, las expresiones regulares, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; y otras operaciones de manejo de cadenas tendr&amp;aacute;n resultados no deseados (incorrectos).</target>
        </trans-unit>
        <trans-unit id="c9629c786021db29caecd61cf856ee5127e01fba" translate="yes" xml:space="preserve">
          <source>This flag has an important effect on Perl's treatment of the string: if UTF-8 data is not properly distinguished, regular expressions, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;substr&lt;/code&gt; and other string handling operations will have undesirable (wrong) results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a176da4e70ce1acc6541f9df33982a6b757fc468" translate="yes" xml:space="preserve">
          <source>This flag is set to true if the API is tracing through subroutine calls.</source>
          <target state="translated">Este indicador se establece en true si la API está rastreando a través de llamadas a subrutinas.</target>
        </trans-unit>
        <trans-unit id="201e9afdfb172b15efef161ffd6b8fd219c793ac" translate="yes" xml:space="preserve">
          <source>This flag is supported in Sun WorkShop Compilers 5.0 and onwards (now marketed under the name Forte) when used on Solaris 7 or later on UltraSparc systems.</source>
          <target state="translated">Esta bandera es soportada en los compiladores de Sun WorkShop 5.0 en adelante (ahora comercializados bajo el nombre de Forte)cuando se usa en Solaris 7 o posterior en sistemas UltraSparc.</target>
        </trans-unit>
        <trans-unit id="b160cdb384c536dc3f048d4a9c7c790cc3b24bae" translate="yes" xml:space="preserve">
          <source>This flag tells Perl to interpret the supplied string as a vector of integers, one for each character in the string. Perl applies the format to each integer in turn, then joins the resulting strings with a separator (a dot &lt;code&gt;.&lt;/code&gt; by default). This can be useful for displaying ordinal values of characters in arbitrary strings:</source>
          <target state="translated">Esta bandera le dice a Perl que interprete la cadena proporcionada como un vector de enteros, uno para cada car&amp;aacute;cter de la cadena. Perl aplica el formato a cada n&amp;uacute;mero entero por turno, luego une las cadenas resultantes con un separador (un punto &lt;code&gt;.&lt;/code&gt; Por defecto). Esto puede resultar &amp;uacute;til para mostrar valores ordinales de caracteres en cadenas arbitrarias:</target>
        </trans-unit>
        <trans-unit id="f881a1e5bd78a37c63f807e7bc9fe5e3e92898af" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; ' '&lt;/code&gt; is now special-cased solely in the parser. RXf_SPLIT is still #defined, so you can test for it. This is how it used to work:</source>
          <target state="translated">Esta bandera se elimin&amp;oacute; en perl 5.18.0. &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; ' '&lt;/code&gt; ahora est&amp;aacute; en may&amp;uacute;sculas especiales &amp;uacute;nicamente en el analizador. RXf_SPLIT todav&amp;iacute;a est&amp;aacute; #definido, por lo que puede probarlo. As&amp;iacute; es como sol&amp;iacute;a funcionar:</target>
        </trans-unit>
        <trans-unit id="149e3a434b8c79c17c15e7dd1bfeeec79cac366d" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. &lt;code&gt;split ' '&lt;/code&gt; is now special-cased solely in the parser. RXf_SPLIT is still #defined, so you can test for it. This is how it used to work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d833b586ef20499906978002bb10914b6b58edd4" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. It is still #defined, so you can set it, but doing so will have no effect. This is how it used to work:</source>
          <target state="translated">Esta bandera fue retirada en perl 5.18.0.Todavía está #definida,por lo que puede fijarla,pero hacerlo no tendrá ningún efecto.Así es como solía funcionar:</target>
        </trans-unit>
        <trans-unit id="dc95d1efdd1713c3cca7c0b3c4bdefdda1fde08a" translate="yes" xml:space="preserve">
          <source>This flag, if given, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt; . This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="translated">Esta bandera, si se proporciona, suprime la URL cuando se proporciona el texto de anclaje, por lo que este ejemplo se formatear&amp;aacute; como &lt;code&gt;foo&lt;/code&gt; . Esto puede producir una salida menos desordenada en los casos en que las URL no son particularmente importantes.</target>
        </trans-unit>
        <trans-unit id="2c97210a38063d077fd5dfe5b874dc5c9ec99795" translate="yes" xml:space="preserve">
          <source>This flag, if given, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt;. This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dbb07c9842c891feb553c44a3898bc7209b8ed" translate="yes" xml:space="preserve">
          <source>This flag, used in the length slot of hash entries and magic structures, specifies the structure contains an &lt;code&gt;SV*&lt;/code&gt; pointer where a &lt;code&gt;char*&lt;/code&gt; pointer is to be expected. (For information only--not to be used).</source>
          <target state="translated">Esta bandera, utilizada en la ranura de longitud de las entradas hash y estructuras m&amp;aacute;gicas, especifica que la estructura contiene un puntero &lt;code&gt;SV*&lt;/code&gt; donde se espera un puntero &lt;code&gt;char*&lt;/code&gt; . (Solo para informaci&amp;oacute;n, no debe usarse).</target>
        </trans-unit>
        <trans-unit id="6617f4f7a980e05c925f274014a2ec6bb8531a4e" translate="yes" xml:space="preserve">
          <source>This fools Perl into not matching the ligatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbab49144d33f97cf4910c662167d2afe655dc3e" translate="yes" xml:space="preserve">
          <source>This forces the &lt;code&gt;AUTOLOAD&lt;/code&gt; for &lt;code&gt;SO_LINGER&lt;/code&gt; to take place before SO_LINGER is encountered later in &lt;code&gt;My&lt;/code&gt; package.</source>
          <target state="translated">Esto obliga a que se lleve a cabo &lt;code&gt;AUTOLOAD&lt;/code&gt; para &lt;code&gt;SO_LINGER&lt;/code&gt; antes de que SO_LINGER se encuentre m&amp;aacute;s adelante en &lt;code&gt;My&lt;/code&gt; paquete.</target>
        </trans-unit>
        <trans-unit id="b15b4ab4a7170566f869487aafa326bf0ce9445d" translate="yes" xml:space="preserve">
          <source>This forces the short and the long members to be little-endian, and is just fine if you don't have too many struct members. But we could also use the byte-order modifier on a group and write the following:</source>
          <target state="translated">Esto obliga a los miembros cortos y largos a ser poco entusiasta,y está bien si no tienes demasiados miembros estructurales.Pero también podríamos usar el modificador de orden de bytes en un grupo y escribir lo siguiente:</target>
        </trans-unit>
        <trans-unit id="de46dfb71b9966e3e11ff89ec998704c30ddf969" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvIV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319008616c679e138429b5bd14ecb2239c8ff654" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvNV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748f2a390c701e3448b1a19dc8793fdea5346721" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvTRUE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad206f71367b2c3bbee0a58f60190a76076a07f1" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvUV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4f84b6cad0b1ebbd95d56cd730e6ae5313c6f1" translate="yes" xml:space="preserve">
          <source>This form of the pragma allows essentially seamless handling of locales with Unicode. The collation order will be by Unicode code point order. &lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt; can be used to get Unicode rules collation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f05df3e2fa93dbc3244d6e8aa705438a4243e3" translate="yes" xml:space="preserve">
          <source>This form of the pragma allows essentially seamless handling of locales with Unicode. The collation order will be by Unicode code point order. It is strongly recommended that when you need to order and sort strings that you use the standard module &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; which gives much better results in many instances than you can get with the old-style locale handling.</source>
          <target state="translated">Esta forma del pragma permite un manejo esencialmente fluido de configuraciones regionales con Unicode. El orden de clasificaci&amp;oacute;n ser&amp;aacute; por orden de puntos de c&amp;oacute;digo Unicode. Se recomienda encarecidamente que, cuando necesite ordenar y ordenar cadenas, utilice el m&amp;oacute;dulo est&amp;aacute;ndar &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate,&lt;/a&gt; que ofrece resultados mucho mejores en muchos casos de los que puede obtener con el manejo de localizaciones al estilo antiguo.</target>
        </trans-unit>
        <trans-unit id="cdc9f2e82b133c2773ec210a8571ca6b553d5115" translate="yes" xml:space="preserve">
          <source>This formality is needed when properties are not binary; that is, if they can take on more values than just &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; . For example, the &lt;code&gt;Bidi_Class&lt;/code&gt; property (see &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidirectional Character Types&lt;/a&gt; below), can take on several different values, such as &lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; , &lt;code&gt;Whitespace&lt;/code&gt; , and others. To match these, one needs to specify both the property name (&lt;code&gt;Bidi_Class&lt;/code&gt; ), AND the value being matched against (&lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; ,</source>
          <target state="translated">Esta formalidad es necesaria cuando las propiedades no son binarias; es decir, si pueden asumir m&amp;aacute;s valores que solo &lt;code&gt;True&lt;/code&gt; y &lt;code&gt;False&lt;/code&gt; . Por ejemplo, la propiedad &lt;code&gt;Bidi_Class&lt;/code&gt; (consulte &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Tipos de caracteres bidireccionales a&lt;/a&gt; continuaci&amp;oacute;n) puede adoptar varios valores diferentes, como &lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; , &lt;code&gt;Whitespace&lt;/code&gt; y otros. Para hacer coincidir estos, es necesario especificar tanto el nombre de la propiedad ( &lt;code&gt;Bidi_Class&lt;/code&gt; ) como el valor con el que se compara ( &lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="6c29258146f5f20ab2294915f5c82cbdb06ae407" translate="yes" xml:space="preserve">
          <source>This formality is needed when properties are not binary; that is, if they can take on more values than just &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt;. For example, the &lt;code&gt;Bidi_Class&lt;/code&gt; property (see &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;&quot;Bidirectional Character Types&quot;&lt;/a&gt; below), can take on several different values, such as &lt;code&gt;Left&lt;/code&gt;, &lt;code&gt;Right&lt;/code&gt;, &lt;code&gt;Whitespace&lt;/code&gt;, and others. To match these, one needs to specify both the property name (&lt;code&gt;Bidi_Class&lt;/code&gt;), AND the value being matched against (&lt;code&gt;Left&lt;/code&gt;, &lt;code&gt;Right&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b05c6c31caa81ea454aca24f6c1d1188903888" translate="yes" xml:space="preserve">
          <source>This formatting code is syntactically simple, but semantically complex. What it means is that each space in the printable content of this code signifies a non-breaking space.</source>
          <target state="translated">Este código de formato es sintácticamente simple,pero semánticamente complejo.Lo que significa que cada espacio en el contenido imprimible de este código significa un espacio no rompible.</target>
        </trans-unit>
        <trans-unit id="d77c232922b63b050101d5932a616e0ed5728461" translate="yes" xml:space="preserve">
          <source>This free toolkit contains the same compiler and linker that ship with Visual C++ .NET 2003 Professional, but doesn't contain everything necessary to build Perl.</source>
          <target state="translated">Este kit de herramientas gratuitas contiene el mismo compilador y enlazador que se envía con Visual C++.NET 2003 Professional,pero no contiene todo lo necesario para construir Perl.</target>
        </trans-unit>
        <trans-unit id="5c5a6423b0a65bc38b33d48cf33a85a24bf291a8" translate="yes" xml:space="preserve">
          <source>This free version of Visual C++ 2005 Professional contains the same compiler and linker that ship with the full version, but doesn't contain everything necessary to build Perl.</source>
          <target state="translated">Esta versión gratuita de Visual C++2005 Professional contiene el mismo compilador y enlazador que la versión completa,pero no contiene todo lo necesario para construir Perl.</target>
        </trans-unit>
        <trans-unit id="eb31e64d6cc8d22ff5f69477b5a67be71c8242ad" translate="yes" xml:space="preserve">
          <source>This function (not exported) lets you reset the sequence numbers (note that they're numbered arbitrarily, their goal being to be human readable). Its purpose is mostly to support testing, i.e. to compare the concise output from two identical anonymous subroutines (but different instances). Without the reset, B::Concise, seeing that they're separate optrees, generates different sequence numbers in the output.</source>
          <target state="translated">Esta función (no exportada)permite restablecer los números de secuencia (obsérvese que están numerados de forma arbitraria,siendo su objetivo ser legibles para los humanos).Su finalidad es sobre todo apoyar las pruebas,es decir,comparar el resultado conciso de dos subrutinas anónimas idénticas (pero con instancias diferentes).Sin el reinicio,B::Concise,viendo que son optrees separadas,genera diferentes números de secuencia en la salida.</target>
        </trans-unit>
        <trans-unit id="1f57c1588a54710c722f648f2f8000721f89bfc3" translate="yes" xml:space="preserve">
          <source>This function accepts any UV as input. To forbid or warn on non-Unicode code points, or those that may be problematic, see &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n acepta cualquier UV como entrada. Para prohibir o advertir sobre puntos de c&amp;oacute;digo que no son Unicode, o aquellos que pueden ser problem&amp;aacute;ticos, consulte &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f691de76bb17beb8b2cbb40c7e4e7d2820166ad" translate="yes" xml:space="preserve">
          <source>This function accepts any code point from 0..&lt;code&gt;IV_MAX&lt;/code&gt; as input. &lt;code&gt;IV_MAX&lt;/code&gt; is typically 0x7FFF_FFFF in a 32-bit word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc1cbc95f41c6ca77822a286a66032b96a97b23" translate="yes" xml:space="preserve">
          <source>This function accepts two arguments, adds them, and prints their sum. Its return value is the numuber of characters it printed, but you probably didn't care about that. But &lt;code&gt;Memoize&lt;/code&gt; doesn't understand that. If you memoize this function, you will get the result you expect the first time you ask it to print the sum of 2 and 3, but subsequent calls will return 1 (the return value of &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;) without actually printing anything.</source>
          <target state="translated">Esta funci&amp;oacute;n acepta dos argumentos, los agrega e imprime su suma. Su valor de retorno es el n&amp;uacute;mero de caracteres que imprimi&amp;oacute;, pero probablemente eso no le import&amp;oacute;. Pero &lt;code&gt;Memoize&lt;/code&gt; no lo entiende. Si memoriza esta funci&amp;oacute;n, obtendr&amp;aacute; el resultado esperado la primera vez que le pida que imprima la suma de 2 y 3, pero las llamadas posteriores devolver&amp;aacute;n 1 (el valor de retorno de &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; ) sin imprimir nada.</target>
        </trans-unit>
        <trans-unit id="d8b9fe9891651290ed3a76f635027aadcf27a76a" translate="yes" xml:space="preserve">
          <source>This function accepts two arguments, adds them, and prints their sum. Its return value is the numuber of characters it printed, but you probably didn't care about that. But &lt;code&gt;Memoize&lt;/code&gt; doesn't understand that. If you memoize this function, you will get the result you expect the first time you ask it to print the sum of 2 and 3, but subsequent calls will return 1 (the return value of &lt;code&gt;print&lt;/code&gt;) without actually printing anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8ff2980a7098008fca7a80ae815b328b64b56a" translate="yes" xml:space="preserve">
          <source>This function adheres to the POSIX syntax for command line options, with GNU extensions. In general, this means that options have long names instead of single letters, and are introduced with a double dash &quot;--&quot;. Support for bundling of command line options, as was the case with the more traditional single-letter approach, is provided but not enabled by default.</source>
          <target state="translated">Esta función se adhiere a la sintaxis POSIX para las opciones de línea de comando,con extensiones GNU.En general,esto significa que las opciones tienen nombres largos en lugar de letras simples,y se introducen con un doble guión &quot;--&quot;.El soporte para la agrupación de opciones de línea de comando,como fue el caso con el enfoque más tradicional de una sola letra,se proporciona pero no se habilita por defecto.</target>
        </trans-unit>
        <trans-unit id="ecc6287822eead2b98d6d43c71be2ea5a869ec7f" translate="yes" xml:space="preserve">
          <source>This function allows one to violate the abstraction of variables and get or set the refcount of a variable, and in generally is really only useful in code that is testing refcount behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55f008cc8679ba993acc354409c0dcb4424edfc" translate="yes" xml:space="preserve">
          <source>This function applies some optimisations to the optree in top-down order. It is called before the peephole optimizer, which processes ops in execution order. Note that finalize_optree() also does a top-down scan, but is called *after* the peephole optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0b646247c6327383124f41d35ef99ac00aaf8b" translate="yes" xml:space="preserve">
          <source>This function assigns the prototype of the named core function to &lt;code&gt;sv&lt;/code&gt; , or to a new mortal SV if &lt;code&gt;sv&lt;/code&gt; is NULL. It returns the modified &lt;code&gt;sv&lt;/code&gt; , or NULL if the core function has no prototype. &lt;code&gt;code&lt;/code&gt; is a code as returned by &lt;code&gt;keyword()&lt;/code&gt; . It must not be equal to 0.</source>
          <target state="translated">Esta funci&amp;oacute;n asigna el prototipo de la funci&amp;oacute;n principal nombrada a &lt;code&gt;sv&lt;/code&gt; , oa un nuevo SV mortal si &lt;code&gt;sv&lt;/code&gt; es NULL. Devuelve el &lt;code&gt;sv&lt;/code&gt; modificado , o NULL si la funci&amp;oacute;n principal no tiene prototipo. &lt;code&gt;code&lt;/code&gt; es un c&amp;oacute;digo devuelto por la &lt;code&gt;keyword()&lt;/code&gt; . No debe ser igual a 0.</target>
        </trans-unit>
        <trans-unit id="d51d61d384048f31db1722374f5b372c545260fb" translate="yes" xml:space="preserve">
          <source>This function assigns the prototype of the named core function to &lt;code&gt;sv&lt;/code&gt;, or to a new mortal SV if &lt;code&gt;sv&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;. It returns the modified &lt;code&gt;sv&lt;/code&gt;, or &lt;code&gt;NULL&lt;/code&gt; if the core function has no prototype. &lt;code&gt;code&lt;/code&gt; is a code as returned by &lt;code&gt;keyword()&lt;/code&gt;. It must not be equal to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2917be492c6121d8b92df9a8721147dc2a9433ef" translate="yes" xml:space="preserve">
          <source>This function bears the same relationship to the CORE function &lt;code&gt;sysopen&lt;/code&gt; as &lt;code&gt;vmsopen&lt;/code&gt; does to &lt;code&gt;open&lt;/code&gt;. Its first three arguments are the name, access flags, and permissions for the file. Like &lt;code&gt;vmsopen&lt;/code&gt;, it takes up to 8 additional string arguments which specify file characteristics. Its return value is identical to that of &lt;code&gt;vmsopen&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df224a5aaa78b74e3701bf43347f5a463966d33" translate="yes" xml:space="preserve">
          <source>This function behaves the same way that scalar(%hash) behaved prior to Perl 5.25. Specifically if the hash is tied, then it calls the SCALAR tied hash method, if untied then if the hash is empty it return 0, otherwise it returns a string containing the number of used buckets in the hash, followed by a slash, followed by the total number of buckets in the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c8f38efd4e3476b651d12afb352ad397950bd5" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as in a locale, as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Esta funci&amp;oacute;n se comporta de la misma manera bajo varios pragmas, como en un entorno local, como lo hace &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8378e0b6c78c094cc27c1f818ab7aa1e8291a68d" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as in a locale, as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Esta funci&amp;oacute;n se comporta de la misma manera bajo varios pragmas, como en un entorno local, como lo hace &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf27edd1f3ed7033638bb2d9262acb5626e2202" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as within &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does, with the single exception of &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; of LATIN CAPITAL LETTER SHARP S (U+1E9E) within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . The foldcase of this character would normally be &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , but as explained in the &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; section, case changes that cross the 255/256 boundary are problematic under locales, and are hence prohibited. Therefore, this function under locale returns instead the string &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , which is the LATIN SMALL LETTER LONG S. Since that character itself folds to &lt;code&gt;&quot;s&quot;&lt;/code&gt; , the string of two of them together should be equivalent to a single U+1E9E when foldcased.</source>
          <target state="translated">Esta funci&amp;oacute;n se comporta de la misma manera bajo varios pragmas, como dentro de &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , como lo hace &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; , con la &amp;uacute;nica excepci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; de LATIN CAPITAL LETTER SHARP S (U + 1E9E) dentro del &amp;aacute;mbito de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . El pliegue de este car&amp;aacute;cter normalmente ser&amp;iacute;a &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , pero como se explica en la secci&amp;oacute;n &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; , los cambios de may&amp;uacute;sculas y min&amp;uacute;sculas que cruzan el l&amp;iacute;mite 255/256 son problem&amp;aacute;ticos en las configuraciones regionales y, por lo tanto, est&amp;aacute;n prohibidos. Por lo tanto, esta funci&amp;oacute;n en la configuraci&amp;oacute;n regional devuelve en su lugar la cadena &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , que es la LETRA LATINA MIN&amp;Uacute;SCULA LARGA S. Dado que ese car&amp;aacute;cter en s&amp;iacute; se pliega a &lt;code&gt;&quot;s&quot;&lt;/code&gt; , la cadena de dos de ellos juntos debe ser equivalente a un solo U + 1E9E cuando se pliega.</target>
        </trans-unit>
        <trans-unit id="ceceba872ecbef53671fa2bb946f4d1ad71c1d4b" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as within &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does, with the single exception of &lt;code&gt;&lt;a href=&quot;fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; of LATIN CAPITAL LETTER SHARP S (U+1E9E) within the scope of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . The foldcase of this character would normally be &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , but as explained in the &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; section, case changes that cross the 255/256 boundary are problematic under locales, and are hence prohibited. Therefore, this function under locale returns instead the string &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , which is the LATIN SMALL LETTER LONG S. Since that character itself folds to &lt;code&gt;&quot;s&quot;&lt;/code&gt; , the string of two of them together should be equivalent to a single U+1E9E when foldcased.</source>
          <target state="translated">Esta funci&amp;oacute;n se comporta de la misma manera bajo varios pragmas, como dentro de &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , como lo hace &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; , con la &amp;uacute;nica excepci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; de LATIN CAPITAL LETTER SHARP S (U + 1E9E) dentro del &amp;aacute;mbito de &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . El pliegue de este car&amp;aacute;cter normalmente ser&amp;iacute;a &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , pero como se explica en la secci&amp;oacute;n &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; , los cambios de may&amp;uacute;sculas y min&amp;uacute;sculas que cruzan el l&amp;iacute;mite 255/256 son problem&amp;aacute;ticos en las configuraciones regionales y, por lo tanto, est&amp;aacute;n prohibidos. Por lo tanto, esta funci&amp;oacute;n en la configuraci&amp;oacute;n regional devuelve en su lugar la cadena &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , que es la LETRA LATINA MIN&amp;Uacute;SCULA LARGA S. Dado que ese car&amp;aacute;cter en s&amp;iacute; se pliega a &lt;code&gt;&quot;s&quot;&lt;/code&gt; , la cadena de dos de ellos juntos debe ser equivalente a un solo U + 1E9E cuando se pliega.</target>
        </trans-unit>
        <trans-unit id="3cd562e4f2bd434b520cfc039a6795314edcac57" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmas, such as in a locale, as &lt;a href=&quot;#lc-EXPR&quot;&gt;&lt;code&gt;lc&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0500dee2324da9704afaaade800515e656abcf2" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmas, such as within &lt;a href=&quot;feature#The-%27unicode_strings%27-feature&quot;&gt;&lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt;&lt;/a&gt;, as &lt;a href=&quot;#lc-EXPR&quot;&gt;&lt;code&gt;lc&lt;/code&gt;&lt;/a&gt; does, with the single exception of &lt;a href=&quot;#fc-EXPR&quot;&gt;&lt;code&gt;fc&lt;/code&gt;&lt;/a&gt; of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e622f55ce5e0f86a0059d75a25d61e3419fef9f" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmata, such as in a locale, as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Esta funci&amp;oacute;n se comporta de la misma manera bajo varios pragmata, como en un entorno local, como lo hace &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a06484c004f74f9c8853b354936ff3f59e84875a" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmata, such as in a locale, as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">Esta funci&amp;oacute;n se comporta de la misma manera bajo varios pragmata, como en un entorno local, como lo hace &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d07fce4b805ea45a197ef238496fb301033d2545" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , or &lt;code&gt;TIEHASH&lt;/code&gt; ). Typically these are arguments such as might be passed to the &lt;code&gt;dbm_open()&lt;/code&gt; function of C. The object returned by the constructor is also returned by the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="translated">Esta funci&amp;oacute;n vincula una variable a una clase de paquete que proporcionar&amp;aacute; la implementaci&amp;oacute;n de la variable. VARIABLE es el nombre de la variable a encantar. CLASSNAME es el nombre de una clase que implementa objetos del tipo correcto. Cualquier argumento adicional se pasa al m&amp;eacute;todo constructor apropiado de la clase (es &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , &lt;code&gt;TIEHASH&lt;/code&gt; o TIEHASH ). Normalmente, estos son argumentos como los que se pueden pasar a la funci&amp;oacute;n &lt;code&gt;dbm_open()&lt;/code&gt; de C. El objeto devuelto por el constructor tambi&amp;eacute;n es devuelto por la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; , lo que ser&amp;iacute;a &amp;uacute;til si desea acceder a otros m&amp;eacute;todos en CLASSNAME.</target>
        </trans-unit>
        <trans-unit id="c3bc0e801ef7f17e4d79ee445885b2be27f25c2b" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , or &lt;code&gt;TIEHASH&lt;/code&gt; ). Typically these are arguments such as might be passed to the &lt;code&gt;dbm_open()&lt;/code&gt; function of C. The object returned by the constructor is also returned by the &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="translated">Esta funci&amp;oacute;n vincula una variable a una clase de paquete que proporcionar&amp;aacute; la implementaci&amp;oacute;n de la variable. VARIABLE es el nombre de la variable a encantar. CLASSNAME es el nombre de una clase que implementa objetos del tipo correcto. Cualquier argumento adicional se pasa al m&amp;eacute;todo constructor apropiado de la clase (es &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , &lt;code&gt;TIEHASH&lt;/code&gt; o TIEHASH ). Normalmente, estos son argumentos como los que se pueden pasar a la funci&amp;oacute;n &lt;code&gt;dbm_open()&lt;/code&gt; de C. El objeto devuelto por el constructor tambi&amp;eacute;n es devuelto por la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; , lo que ser&amp;iacute;a &amp;uacute;til si desea acceder a otros m&amp;eacute;todos en CLASSNAME.</target>
        </trans-unit>
        <trans-unit id="6ec28b6239b28c7a96697e70b1eb97107ed2b3c3" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt;, &lt;code&gt;TIEHANDLE&lt;/code&gt;, &lt;code&gt;TIEARRAY&lt;/code&gt;, or &lt;code&gt;TIEHASH&lt;/code&gt;). Typically these are arguments such as might be passed to the &lt;a href=&quot;http://man.he.net/man3/dbm_open&quot;&gt;dbm_open(3)&lt;/a&gt; function of C. The object returned by the constructor is also returned by the &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174d0316fff2fa450076f65b703c67678039564b" translate="yes" xml:space="preserve">
          <source>This function call is functionally identical to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37cdb55fc25f73489ad091a40f3985d29053240" translate="yes" xml:space="preserve">
          <source>This function can cause reliability issues if you are likely to pass in empty strings that are not null terminated, because it will run strlen on the string and potentially run past valid memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5132f8607896a5505c904bfd8891d2794b3208e8" translate="yes" xml:space="preserve">
          <source>This function can take a hash of options:</source>
          <target state="translated">Esta función puede tomar un hachazo de opciones:</target>
        </trans-unit>
        <trans-unit id="f0cccb23235ebb22439bd8ff2e5a998bf5aa962e" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;
%hash&lt;/code&gt; , respectively.</source>
          <target state="translated">Esta funci&amp;oacute;n no se puede usar en una matriz completa o hash para averiguar cu&amp;aacute;ntos elementos tienen. Para eso, use &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %hash&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="0ba6657c5fa298f8f6fa2444117335de3f819a9a" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;
%hash&lt;/code&gt; , respectively.</source>
          <target state="translated">Esta funci&amp;oacute;n no se puede usar en una matriz completa o hash para averiguar cu&amp;aacute;ntos elementos tienen. Para eso, use &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt; %hash&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="1d80cd513c1eb2f06188d940dc75b413064ad04e" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;scalar @array&lt;/code&gt; and &lt;code&gt;scalar keys %hash&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46229c4291d3a22177a19f68cea8c921f320b75" translate="yes" xml:space="preserve">
          <source>This function causes Perl to wait for the completion of an I/O operation on the file handle specified as its argument. It is used with handles opened for asynchronous I/O, and performs its task by calling the CRTL routine fwait().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118dd1a89ee26e341a24a616a4886c6624f3f97c" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (with all the restrictions that &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n provoca un volcado de memoria inmediato. Consulte tambi&amp;eacute;n el &lt;a href=&quot;../perlrun&quot;&gt;modificador de&lt;/a&gt; l&amp;iacute;nea de comandos &lt;b&gt;-u&lt;/b&gt; en perlrun , que hace lo mismo. Principalmente, esto es para que pueda usar el programa &lt;b&gt;undump&lt;/b&gt; (no &lt;b&gt;incluido&lt;/b&gt; ) para convertir su volcado de &lt;b&gt;memoria&lt;/b&gt; en un binario ejecutable despu&amp;eacute;s de haber inicializado todas sus variables al comienzo del programa. Cuando se ejecuta el nuevo binario, comenzar&amp;aacute; ejecutando un &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (con todas las restricciones que sufre &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; ). Piense en ello como un goto con un volcado de n&amp;uacute;cleo intermedio y una reencarnaci&amp;oacute;n. Si se omite &lt;code&gt;LABEL&lt;/code&gt; , reinicia el programa desde arriba. El &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; El formulario, disponible a partir de Perl 5.18.0, permite calcular un nombre en tiempo de ejecuci&amp;oacute;n, siendo por lo dem&amp;aacute;s id&amp;eacute;ntico a &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2644b0d090106df2bac79cc1278fe935e270aa17" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (with all the restrictions that &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n provoca un volcado de memoria inmediato. Consulte tambi&amp;eacute;n el &lt;a href=&quot;perlrun&quot;&gt;modificador de&lt;/a&gt; l&amp;iacute;nea de comandos &lt;b&gt;-u&lt;/b&gt; en perlrun , que hace lo mismo. Principalmente, esto es para que pueda usar el programa &lt;b&gt;undump&lt;/b&gt; (no &lt;b&gt;incluido&lt;/b&gt; ) para convertir su volcado de &lt;b&gt;memoria&lt;/b&gt; en un binario ejecutable despu&amp;eacute;s de haber inicializado todas sus variables al comienzo del programa. Cuando se ejecuta el nuevo binario, comenzar&amp;aacute; ejecutando un &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (con todas las restricciones que sufre &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; ). Piense en ello como un goto con un volcado de n&amp;uacute;cleo intermedio y una reencarnaci&amp;oacute;n. Si se omite &lt;code&gt;LABEL&lt;/code&gt; , reinicia el programa desde arriba. El &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; El formulario, disponible a partir de Perl 5.18.0, permite calcular un nombre en tiempo de ejecuci&amp;oacute;n, siendo por lo dem&amp;aacute;s id&amp;eacute;ntico a &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26c8dfb8fe670903069c0f17a57b74ae3b1595ea" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;perlrun#-u&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;goto LABEL&lt;/code&gt; (with all the restrictions that &lt;a href=&quot;#goto-LABEL&quot;&gt;&lt;code&gt;goto&lt;/code&gt;&lt;/a&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;dump EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;dump LABEL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc06b6c797a2d8e55ea244af674579a07a667a16" translate="yes" xml:space="preserve">
          <source>This function causes the contents of stdio buffers for the specified file handle to be flushed. If &lt;code&gt;undef&lt;/code&gt; is used as the argument to &lt;code&gt;flush&lt;/code&gt;, all currently open file handles are flushed. Like the CRTL fflush() routine, it does not flush any underlying RMS buffers for the file, so the data may not be flushed all the way to the disk. &lt;code&gt;flush&lt;/code&gt; returns a true value if successful, and &lt;code&gt;undef&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8630b301b33e076db45af073be1b800df9e17ac" translate="yes" xml:space="preserve">
          <source>This function causes the file handle to be reopened with the CRTL's carriage control processing disabled; its effect is the same as that of the &lt;code&gt;b&lt;/code&gt; access mode in &lt;code&gt;vmsopen&lt;/code&gt;. After the file is reopened, the file pointer is positioned as close to its position before the call as possible (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8952b46dfeb17de53351ddf4d21ae7d55c07b2d8" translate="yes" xml:space="preserve">
          <source>This function combines &lt;code&gt;perl_inc()&lt;/code&gt; , &lt;code&gt;ccflags()&lt;/code&gt; and &lt;code&gt;ccdlflags()&lt;/code&gt; into one.</source>
          <target state="translated">Esta funci&amp;oacute;n combina &lt;code&gt;perl_inc()&lt;/code&gt; , &lt;code&gt;ccflags()&lt;/code&gt; y &lt;code&gt;ccdlflags()&lt;/code&gt; en uno.</target>
        </trans-unit>
        <trans-unit id="fdb27a1411185bddb95e30d045e37f8e2d566456" translate="yes" xml:space="preserve">
          <source>This function combines &lt;code&gt;perl_inc()&lt;/code&gt;, &lt;code&gt;ccflags()&lt;/code&gt; and &lt;code&gt;ccdlflags()&lt;/code&gt; into one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86046dee569875e1ad9a6f7dd87a2c295e238ac4" translate="yes" xml:space="preserve">
          <source>This function considers Perl's extended UTF-8 to be valid. That means that code points above Unicode, surrogates, and non-character code points are considered valid by this function. Use &lt;code&gt;&lt;a href=&quot;#is_strict_utf8_string&quot;&gt;&quot;is_strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#is_c9strict_utf8_string&quot;&gt;&quot;is_c9strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; to restrict what code points are considered valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5339a84b7a169eedebef1ec60274699210a516" translate="yes" xml:space="preserve">
          <source>This function deletes the file named in its argument, returning a true value if successful and &lt;code&gt;undef&lt;/code&gt; if not. It differs from the CORE Perl function &lt;code&gt;unlink&lt;/code&gt; in that it does not try to reset file protection if the original protection does not give you delete access to the file (cf. &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;). In other words, &lt;code&gt;remove&lt;/code&gt; is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3221a438c3aad48b5c48a805755ad197928b0f99" translate="yes" xml:space="preserve">
          <source>This function detects things that can't be modified, such as &lt;code&gt;$x+1&lt;/code&gt; , and generates errors for them. For example, &lt;code&gt;$x+1 = 2&lt;/code&gt; would cause it to be called with an op of type OP_ADD and a &lt;code&gt;type&lt;/code&gt; argument of OP_SASSIGN.</source>
          <target state="translated">Esta funci&amp;oacute;n detecta cosas que no se pueden modificar, como &lt;code&gt;$x+1&lt;/code&gt; , y genera errores para ellas. Por ejemplo, &lt;code&gt;$x+1 = 2&lt;/code&gt; har&amp;iacute;a que se llamara con una operaci&amp;oacute;n de tipo OP_ADD y un argumento de &lt;code&gt;type&lt;/code&gt; OP_SASSIGN.</target>
        </trans-unit>
        <trans-unit id="439b917328feb1c4b646d8fdc7cd70b863c018c7" translate="yes" xml:space="preserve">
          <source>This function detects things that can't be modified, such as &lt;code&gt;$x+1&lt;/code&gt;, and generates errors for them. For example, &lt;code&gt;$x+1 = 2&lt;/code&gt; would cause it to be called with an op of type &lt;code&gt;OP_ADD&lt;/code&gt; and a &lt;code&gt;type&lt;/code&gt; argument of &lt;code&gt;OP_SASSIGN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ac83507e6cd72323712112c6adca5c1d64b54a" translate="yes" xml:space="preserve">
          <source>This function differs from &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; only in that the latter returns FALSE if the final few bytes of the string don't form a complete code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50025265ce70752e52bdd20aeddabe5be1d58395" translate="yes" xml:space="preserve">
          <source>This function does not use a typemap. Instead, we declare it as accepting one SV* (scalar) parameter, and returning an SV* value, and we take care of populating these scalars within the code. Because we are only returning one value, we don't need a &lt;code&gt;PPCODE:&lt;/code&gt; directive - instead, we use &lt;code&gt;CODE:&lt;/code&gt; and &lt;code&gt;OUTPUT:&lt;/code&gt; directives.</source>
          <target state="translated">Esta funci&amp;oacute;n no utiliza un mapa de tipos. En su lugar, lo declaramos aceptando un par&amp;aacute;metro SV * (escalar) y devolviendo un valor SV *, y nos encargamos de rellenar estos escalares dentro del c&amp;oacute;digo. Debido a que solo estamos devolviendo un valor, no necesitamos una directiva &lt;code&gt;PPCODE:&lt;/code&gt; - en su lugar, usamos las directivas &lt;code&gt;CODE:&lt;/code&gt; y &lt;code&gt;OUTPUT:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6180191f0bc721d501520e66b164a9ef20a22d11" translate="yes" xml:space="preserve">
          <source>This function enables/disables error popups associated with hardware errors (Disk not ready etc.) and software exceptions.</source>
          <target state="translated">Esta función habilita/deshabilita las ventanas emergentes de error asociadas a los errores de hardware (el disco no está listo,etc.)y a las excepciones de software.</target>
        </trans-unit>
        <trans-unit id="41bdfd24b44f813aba413307b45bfa39cd26febb" translate="yes" xml:space="preserve">
          <source>This function executes code in &lt;code&gt;INIT&lt;/code&gt; blocks, and then executes the main program. The code to be executed is that established by the prior call to &lt;a href=&quot;#perl_parse&quot;&gt;&quot;perl_parse&quot;&lt;/a&gt;. If the interpreter's &lt;code&gt;PL_exit_flags&lt;/code&gt; word does not have the &lt;code&gt;PERL_EXIT_DESTRUCT_END&lt;/code&gt; flag set, then this function will also execute code in &lt;code&gt;END&lt;/code&gt; blocks. If it is desired to make any further use of the interpreter after calling this function, then &lt;code&gt;END&lt;/code&gt; blocks should be postponed to &lt;a href=&quot;#perl_destruct&quot;&gt;&quot;perl_destruct&quot;&lt;/a&gt; time by setting that flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4b4452d2c9e5e96e8d371d230a62875ce95c48" translate="yes" xml:space="preserve">
          <source>This function finalizes the optree. Should be called directly after the complete optree is built. It does some additional checking which can't be done in the normal &lt;code&gt;ck_&lt;/code&gt;xxx functions and makes the tree thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467712b5ef786ba52bfac5af598e2fd6afe41fb8" translate="yes" xml:space="preserve">
          <source>This function finalizes the optree. Should be called directly after the complete optree is built. It does some additional checking which can't be done in the normal ck_xxx functions and makes the tree thread-safe.</source>
          <target state="translated">Esta función finaliza el &quot;optree&quot;.Debe ser llamada directamente después de que se construya el optree completo.Hace algunas comprobaciones adicionales que no se pueden hacer en las funciones normales ck_xxx y hace que el árbol sea seguro.</target>
        </trans-unit>
        <trans-unit id="7cd5d3b31c2df3a00c1280faae47ff4437247a8e" translate="yes" xml:space="preserve">
          <source>This function flushes buffered data for the specified file handle from stdio and RMS buffers all the way to disk. If successful, it returns a true value; otherwise, it returns &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529aa240cc0116c0500e7c8811796b1b622bb45e" translate="yes" xml:space="preserve">
          <source>This function has a &lt;code&gt;Perl_&lt;/code&gt; prefix; i.e. it is defined as &lt;code&gt;Perl_av_fetch&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n tiene un prefijo &lt;code&gt;Perl_&lt;/code&gt; ; es decir, se define como &lt;code&gt;Perl_av_fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4c8d849318248096464684b55db85c231aca3e7" translate="yes" xml:space="preserve">
          <source>This function has been removed as of Perl 5.28; instead convert to call the appropriate one of: &lt;a href=&quot;perlapi#toFOLD_utf8_safe&quot;&gt;&lt;code&gt;toFOLD_utf8_safe&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;perlapi#toLOWER_utf8_safe&quot;&gt;&lt;code&gt;toLOWER_utf8_safe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlapi#toTITLE_utf8_safe&quot;&gt;&lt;code&gt;toTITLE_utf8_safe&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;perlapi#toUPPER_utf8_safe&quot;&gt;&lt;code&gt;toUPPER_utf8_safe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85078501581a34823dfc08b6eb6329a48edc2495" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2628b175c2d24277a0337127204502b1f61bdf17" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c51dcb297acb53b80b70f8503b77e24545682a3" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3e1ad9d7e5fb833c930cfb00998df7f1bf55df" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b2efde841e51b0d07c870aace74a6c62be34c7" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f87547ea1196015dca7f56e89130f54f22cb1b" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240378f462e5da48f4331015b535ca56fa0b083e" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412915ed27530298d8a82ed72e52493d1ab3961d" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e068961c23381692cac045933729a7a9c74746fc" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4c7171fd4bdb2f80bf1e964ba7860700e8f9a2" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9dbf17740431b5f7d9b88f2d682c1cef413410" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75d86010bc99e5342b8fc4788506149d555a48d" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.26. This is identical to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;lc()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#lc&quot;&gt;&quot;lc&quot; in perlfunc&lt;/a&gt;, see &lt;a href=&quot;perlfunc#lc&quot;&gt;&quot;lc&quot; in perlfunc&lt;/a&gt;, or the equivalent &lt;code&gt;\L&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9587cdcdc501560277392db1334d4cacc9432bf" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.26. This is similar to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;uc()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#uc&quot;&gt;&quot;uc&quot; in perlfunc&lt;/a&gt;, or the equivalent &lt;code&gt;\U&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de86eb1f3f7a618ab133b8ece7ae081d7566d329" translate="yes" xml:space="preserve">
          <source>This function has documentation using the &lt;code&gt;apidoc&lt;/code&gt; feature which we'll look at in a second. Some functions have 'd' but not 'A'; docs are good.</source>
          <target state="translated">Esta funci&amp;oacute;n tiene documentaci&amp;oacute;n que usa la caracter&amp;iacute;stica &lt;code&gt;apidoc&lt;/code&gt; que veremos en un segundo. Algunas funciones tienen 'd' pero no 'A'; los docs son buenos.</target>
        </trans-unit>
        <trans-unit id="e5896913a59161466d623bf299d08ae7f2567fac" translate="yes" xml:space="preserve">
          <source>This function has no direct relation to the usage of &lt;a href=&quot;#sysread-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;sysread&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#syswrite-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;syswrite&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#sysseek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;sysseek&lt;/code&gt;&lt;/a&gt;. A handle opened with this function can be used with buffered IO just as one opened with &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; can be used with unbuffered IO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757b97be8a26d052ae34b876bf766ef81984a348" translate="yes" xml:space="preserve">
          <source>This function initialises the interpreter, and parses and compiles the script specified by the command-line arguments. This includes executing code in &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;UNITCHECK&lt;/code&gt;, and &lt;code&gt;CHECK&lt;/code&gt; blocks. It does not execute &lt;code&gt;INIT&lt;/code&gt; blocks or the main program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ade2373bef2bb276b87f95d3a360655ec661c9a" translate="yes" xml:space="preserve">
          <source>This function invalidates isa caches on the old stash, on all subpackages nested inside it, and on the subclasses of all those, including non-existent packages that have corresponding entries in &lt;code&gt;stash&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n invalida los cach&amp;eacute;s de isa en el antiguo alijo, en todos los subpaquetes anidados en su interior y en las subclases de todos esos, incluidos los paquetes inexistentes que tienen las entradas correspondientes en el &lt;code&gt;stash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="163806a2e1a58620114c112d76abd153644c2699" translate="yes" xml:space="preserve">
          <source>This function invalidates isa caches on the old stash, on all subpackages nested inside it, and on the subclasses of all those, including non-existent packages that have corresponding entries in &lt;code&gt;stash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcc501ee8274fe4e362635b1b12b9fad07e4cc1" translate="yes" xml:space="preserve">
          <source>This function is a deprecated synonym for &lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;&quot;uvoffuni_to_utf8_flags&quot;&lt;/a&gt;, which itself, while not deprecated, should be used only in isolated circumstances. These functions were useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21846dd58e70501c7ae85693ffbb155deb7ba64" translate="yes" xml:space="preserve">
          <source>This function is a deprecated synonym for &lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;uvoffuni_to_utf8_flags&lt;/a&gt;, which itself, while not deprecated, should be used only in isolated circumstances. These functions were useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want.</source>
          <target state="translated">Esta funci&amp;oacute;n es un sin&amp;oacute;nimo obsoleto de &lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;uvoffuni_to_utf8_flags&lt;/a&gt; , que en s&amp;iacute; mismo, aunque no est&amp;aacute; obsoleto, debe usarse solo en circunstancias aisladas. Estas funciones eran &amp;uacute;tiles para el c&amp;oacute;digo que quer&amp;iacute;a manejar plataformas EBCDIC y ASCII con propiedades Unicode, pero a partir de Perl v5.20, las distinciones entre las plataformas se han hecho invisibles para la mayor&amp;iacute;a del c&amp;oacute;digo, por lo que es poco probable que esta funci&amp;oacute;n sea lo que usted quiere.</target>
        </trans-unit>
        <trans-unit id="2913484e77586e8d68e21770c7b4063c930b583c" translate="yes" xml:space="preserve">
          <source>This function is a good candidate for memoization. If you memoize the `fib' function above, it will compute fib(14) exactly once, the first time it needs to, and then save the result in a table. Then if you ask for fib(14) again, it gives you the result out of the table. While computing fib(14), instead of computing fib(12) twice, it does it once; the second time it needs the value it gets it from the table. It doesn't compute fib(11) four times; it computes it once, getting it from the table the next three times. Instead of making 1,200 recursive calls to `fib', it makes 15. This makes the function about 150 times faster.</source>
          <target state="translated">Esta función es un buen candidato para la memorización.Si memorizas la función &quot;fib&quot; de arriba,calculará la fib(14)exactamente una vez,la primera vez que lo necesite,y luego guardará el resultado en una tabla.Luego,si preguntas por fib(14)de nuevo,te da el resultado fuera de la tabla.Mientras calcula fib(14),en lugar de calcular fib(12)dos veces,lo hace una vez;la segunda vez necesita el valor que obtiene de la tabla.No calcula fib(11)cuatro veces;lo hace una vez,obteniéndolo de la tabla las tres veces siguientes.En lugar de hacer 1.200 llamadas recursivas a &quot;fibrilación&quot;,hace 15.Esto hace que la función sea unas 150 veces más rápida.</target>
        </trans-unit>
        <trans-unit id="8abb1909fce4e7f9c7aa7be2b9644d4d00810b89" translate="yes" xml:space="preserve">
          <source>This function is a part of the public API. All such functions should also have 'd', very few do not.</source>
          <target state="translated">Esta función es parte de la API pública.Todas estas funciones también deberían tener una &quot;d&quot;,muy pocas no la tienen.</target>
        </trans-unit>
        <trans-unit id="752724e6180b12da8e6cd0e0935f30eed783f92d" translate="yes" xml:space="preserve">
          <source>This function is a stand-in replacement for &lt;a href=&quot;../../scalar/util#%24addr-%3d-refaddr(-%24ref-)&quot;&gt;Scalar::Util::refaddr&lt;/a&gt;, that is, it returns the reference address of its argument as a numeric value. The only difference is that &lt;code&gt;refaddr()&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when given a non-reference while &lt;code&gt;id()&lt;/code&gt; returns its argument unchanged.</source>
          <target state="translated">Esta funci&amp;oacute;n es un sustituto de &lt;a href=&quot;../../scalar/util#%24addr-%3d-refaddr(-%24ref-)&quot;&gt;Scalar :: Util :: refaddr&lt;/a&gt; , es decir, devuelve la direcci&amp;oacute;n de referencia de su argumento como un valor num&amp;eacute;rico. La &amp;uacute;nica diferencia es que &lt;code&gt;refaddr()&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; cuando se le da una no referencia, mientras que &lt;code&gt;id()&lt;/code&gt; devuelve su argumento sin cambios.</target>
        </trans-unit>
        <trans-unit id="6c49d7b5a023a1bdb0c62afc7b7daf87c9518dbf" translate="yes" xml:space="preserve">
          <source>This function is a stand-in replacement for &lt;a href=&quot;Scalar::Util#refaddr&quot;&gt;Scalar::Util::refaddr&lt;/a&gt;, that is, it returns the reference address of its argument as a numeric value. The only difference is that &lt;code&gt;refaddr()&lt;/code&gt; returns &lt;code&gt;undef&lt;/code&gt; when given a non-reference while &lt;code&gt;id()&lt;/code&gt; returns its argument unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e7b319f75480a4bb2f70f5a0776fcd6fd1010a" translate="yes" xml:space="preserve">
          <source>This function is affected by the &lt;code&gt;$RAND&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32d82df863c1cbf51247765161ee50be4e23d2c" translate="yes" xml:space="preserve">
          <source>This function is deprecated due to the possibility that malformed input could cause reading beyond the end of the input buffer. Use &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;&quot;isUTF8_CHAR&quot;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0d9ec972199a89df14d600a89c7347e29e2743" translate="yes" xml:space="preserve">
          <source>This function is deprecated due to the possibility that malformed input could cause reading beyond the end of the input buffer. Use &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt; instead.</source>
          <target state="translated">Esta funci&amp;oacute;n est&amp;aacute; en desuso debido a la posibilidad de que una entrada con formato incorrecto provoque una lectura m&amp;aacute;s all&amp;aacute; del final del b&amp;uacute;fer de entrada. Utilice &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="28ce789b612136fafacb486bd5bb357e8d0e4268" translate="yes" xml:space="preserve">
          <source>This function is disabled if the global variable $KEEP_ALL is true and an unlink on open file is supported. If the unlink is to be deferred to the END block, the file is still registered for removal.</source>
          <target state="translated">Esta función se desactiva si la variable global $KEEP_ALL es verdadera y se admite un desvío en un archivo abierto.Si el desvío debe ser diferido hasta el bloque END,el archivo sigue registrado para ser eliminado.</target>
        </trans-unit>
        <trans-unit id="8ff75df81e21a36cc9176732a80e9ccf2b68ffdf" translate="yes" xml:space="preserve">
          <source>This function is disabled if the global variable $KEEP_ALL is true.</source>
          <target state="translated">Esta función se desactiva si la variable global $KEEP_ALL es verdadera.</target>
        </trans-unit>
        <trans-unit id="37256aba6c6729bd5a917fd025e81cedb9d0b6bb" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the libc strtod() function, and is available even on platforms that lack plain strtod(). Its return value is the best available precision depending on platform capabilities and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ac1505f98d117f842948a2e4dbeafd3ff53890" translate="yes" xml:space="preserve">
          <source>This function is expected to be called in a Perl compilation context, and some aspects of the subroutine are taken from global variables associated with compilation. In particular, &lt;code&gt;PL_compcv&lt;/code&gt; represents the subroutine that is currently being compiled. It must be non-null when this function is called, and some aspects of the subroutine being constructed are taken from it. The constructed subroutine may actually be a reuse of the &lt;code&gt;PL_compcv&lt;/code&gt; object, but will not necessarily be so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3c45f3e25d0a4f2eec52ed9b0f4d623aa7d540" translate="yes" xml:space="preserve">
          <source>This function is expected to be used to signal to perl that this SV is about to be written to, and any extra book-keeping needs to be taken care of. Hence, it croaks on read-only values.</source>
          <target state="translated">Se espera que esta función se utilice para señalar a perl que este SV está a punto de escribirse,y que hay que ocuparse de cualquier contabilidad extra.Por lo tanto,se muere en los valores de sólo lectura.</target>
        </trans-unit>
        <trans-unit id="046e9e5d6bd1398867e1dee81f27fefb4c212d31" translate="yes" xml:space="preserve">
          <source>This function is expensive in time and memory.</source>
          <target state="translated">Esta función es costosa en tiempo y memoria.</target>
        </trans-unit>
        <trans-unit id="45313cfa765e7987f87b6f11b5766c14f7fa9aff" translate="yes" xml:space="preserve">
          <source>This function is expensive, it must scan all of the buckets to determine which are used, and the count is NOT cached. In a large hash this could be a lot of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e275fe5def47eb8b770fec4e729d202771a5b5a" translate="yes" xml:space="preserve">
          <source>This function is explicitly exported.</source>
          <target state="translated">Esta función se exporta explícitamente.</target>
        </trans-unit>
        <trans-unit id="1653892f2f39d308f9b0a291eb56cee425def2a1" translate="yes" xml:space="preserve">
          <source>This function is for code that needs to know what the precise malformation(s) are when an error is found, and wants the corresponding warning and/or error messages to be returned to the caller rather than be displayed. All messages that would have been displayed if all lexcial warnings are enabled will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4cfc2833ee86dd51e2c0f635f6cf283876c7c4" translate="yes" xml:space="preserve">
          <source>This function is for code that needs to know what the precise malformation(s) are when an error is found. If you also need to know the generated warning messages, use &lt;a href=&quot;#utf8n_to_uvchr_msgs&quot;&gt;&quot;utf8n_to_uvchr_msgs&quot;&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32340b4b7db192c6b9924268289f95c5bca2f985" translate="yes" xml:space="preserve">
          <source>This function is for code that wants any warning and/or error messages to be returned to the caller rather than be displayed. All messages that would have been displayed if all lexical warnings are enabled will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c07c7fe871db128f73a62dda492de37210f641" translate="yes" xml:space="preserve">
          <source>This function is internal to Perl because khw thinks that any XS code that would want this is probably operating too close to the internals. Presenting a valid use case could change that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baae2ca89cb1960ad8e6c66b2b2c6b874d4b3266" translate="yes" xml:space="preserve">
          <source>This function is like &lt;a href=&quot;#eval&quot;&gt;eval&lt;/a&gt; with a string argument, except it always parses its argument, or &lt;code&gt;$_&lt;/code&gt; if EXPR is omitted, as a string of bytes. A string containing characters whose ordinal value exceeds 255 results in an error. Source filters activated within the evaluated code apply to the code itself.</source>
          <target state="translated">Esta funci&amp;oacute;n es como &lt;a href=&quot;#eval&quot;&gt;eval&lt;/a&gt; con un argumento de cadena, excepto que siempre analiza su argumento, o &lt;code&gt;$_&lt;/code&gt; si se omite EXPR, como una cadena de bytes. Una cadena que contiene caracteres cuyo valor ordinal excede 255 da como resultado un error. Los filtros de origen activados dentro del c&amp;oacute;digo evaluado se aplican al c&amp;oacute;digo en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="4699e383ec11b8d15b996f85aefd9a02e9b5bdaf" translate="yes" xml:space="preserve">
          <source>This function is like &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; with a string argument, except it always parses its argument, or &lt;code&gt;$_&lt;/code&gt; if EXPR is omitted, as a string of bytes. A string containing characters whose ordinal value exceeds 255 results in an error. Source filters activated within the evaluated code apply to the code itself.</source>
          <target state="translated">Esta funci&amp;oacute;n es como &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; con un argumento de cadena, excepto que siempre analiza su argumento, o &lt;code&gt;$_&lt;/code&gt; si se omite EXPR, como una cadena de bytes. Una cadena que contiene caracteres cuyo valor ordinal excede 255 da como resultado un error. Los filtros de origen activados dentro del c&amp;oacute;digo evaluado se aplican al c&amp;oacute;digo en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="caeb1cd5a4880a4de69d7c039879029a5a9067db" translate="yes" xml:space="preserve">
          <source>This function is like them, but the input is a strict Unicode (as opposed to native) code point. Only in very rare circumstances should code not be using the native code point.</source>
          <target state="translated">Esta función es como ellos,pero la entrada es un punto de código Unicode estricto (en contraposición al nativo).Sólo en muy raras circunstancias el código no debería usar el punto de código nativo.</target>
        </trans-unit>
        <trans-unit id="3a6987023b3feeacf2b107686c8afb184bf9785b" translate="yes" xml:space="preserve">
          <source>This function is most useful in the idiom</source>
          <target state="translated">Esta función es más útil en el idioma</target>
        </trans-unit>
        <trans-unit id="6e46549cf4ac0adc9c0ac53e027f514166435b55" translate="yes" xml:space="preserve">
          <source>This function is no longer recommended for use, but is maintained for compatibility with existing code. If you do not want to have it exported to your namespace, use this form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba0cefbbfd398911c6a8851cb85930170c481ec" translate="yes" xml:space="preserve">
          <source>This function is not exported by default, so you'll have to ask for it via:</source>
          <target state="translated">Esta función no se exporta por defecto,así que tendrás que pedirla por medio:</target>
        </trans-unit>
        <trans-unit id="1fe47a845128e2d640eed3a78c38850805c099b0" translate="yes" xml:space="preserve">
          <source>This function is now largely obsolete, mostly because it's very hard to convert a core file into an executable. As of Perl 5.30, it must be invoked as &lt;code&gt;CORE::dump()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6a1a85d5fc88c0e9364254a35bb1ced4455307" translate="yes" xml:space="preserve">
          <source>This function is now largely obsolete, mostly because it's very hard to convert a core file into an executable. That's why you should now invoke it as &lt;code&gt;CORE::dump()&lt;/code&gt; , if you don't want to be warned against a possible typo.</source>
          <target state="translated">Esta funci&amp;oacute;n ahora est&amp;aacute; obsoleta en gran medida, principalmente porque es muy dif&amp;iacute;cil convertir un archivo principal en un ejecutable. Es por eso que ahora deber&amp;iacute;a invocarlo como &lt;code&gt;CORE::dump()&lt;/code&gt; , si no quiere que se le advierta contra un posible error tipogr&amp;aacute;fico.</target>
        </trans-unit>
        <trans-unit id="5839521ffabe37be44c9b142d6f0e122410904e4" translate="yes" xml:space="preserve">
          <source>This function is only available under the &lt;code&gt;&lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; feature, a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration, or with a &lt;code&gt;CORE::&lt;/code&gt; prefix. See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; for more information.</source>
          <target state="translated">Esta funci&amp;oacute;n solo est&amp;aacute; disponible bajo la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; , una &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16 (o superior) o con un prefijo &lt;code&gt;CORE::&lt;/code&gt; . Consulte la &lt;a href=&quot;../feature&quot;&gt;funci&amp;oacute;n&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2ce5a3cfad478a3c3fe7a7e04e3ec1df865cc5b4" translate="yes" xml:space="preserve">
          <source>This function is only available under the &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; feature, a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration, or with a &lt;code&gt;CORE::&lt;/code&gt; prefix. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; for more information.</source>
          <target state="translated">Esta funci&amp;oacute;n solo est&amp;aacute; disponible bajo la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; , una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16 (o superior) o con un prefijo &lt;code&gt;CORE::&lt;/code&gt; . Consulte la &lt;a href=&quot;feature&quot;&gt;funci&amp;oacute;n&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="20d8dc8fedc07f301a7cc15f9e5b8989eceaa3db" translate="yes" xml:space="preserve">
          <source>This function is only used by &lt;code&gt;sv_true()&lt;/code&gt; and friends, and only if the latter's argument is neither &lt;code&gt;SvPOK&lt;/code&gt;, &lt;code&gt;SvIOK&lt;/code&gt; nor &lt;code&gt;SvNOK&lt;/code&gt;. If the flags contain &lt;code&gt;SV_GMAGIC&lt;/code&gt;, then it does an &lt;code&gt;mg_get()&lt;/code&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43d0a24f1f599b09639816ea4bcc88309ead9ce" translate="yes" xml:space="preserve">
          <source>This function is only used by sv_true() and friends, and only if the latter's argument is neither SvPOK, SvIOK nor SvNOK. If the flags contain SV_GMAGIC, then it does an mg_get() first.</source>
          <target state="translated">Esta función sólo es utilizada por sv_true()y amigos,y sólo si el argumento de estos últimos no es ni SvPOK,ni SvIOK ni SvNOK.Si las banderas contienen SV_GMAGIC,entonces hace un mg_get()primero.</target>
        </trans-unit>
        <trans-unit id="0b5776fa05d807fc6265ae0f0ad2309322f8e80a" translate="yes" xml:space="preserve">
          <source>This function is part of the experimental development API, and may change or disappear without notice.</source>
          <target state="translated">Esta función forma parte de la API de desarrollo experimental,y puede cambiar o desaparecer sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="df4b28e7c0c75c36faca5ca1d70518986b2de4c0" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;basename(1)&lt;/code&gt; . It does &lt;b&gt;NOT&lt;/b&gt; always return the file name portion of a path as you might expect. To be safe, if you want the file name portion of a path use &lt;code&gt;fileparse()&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n se proporciona por compatibilidad con el comando de shell de Unix &lt;code&gt;basename(1)&lt;/code&gt; . No &lt;b&gt;NO&lt;/b&gt; siempre devuelven la parte del nombre de archivo de una ruta como se podr&amp;iacute;a esperar. Para estar seguro, si desea la parte del nombre de archivo de una ruta, use &lt;code&gt;fileparse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="652405f4a5d205fef6e05d3e71213e7a84c66d2a" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;basename(1)&lt;/code&gt;. It does &lt;b&gt;NOT&lt;/b&gt; always return the file name portion of a path as you might expect. To be safe, if you want the file name portion of a path use &lt;code&gt;fileparse()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb4ec1fbe8c66b8f2020144f5701828bedcfe14" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;dirname(1)&lt;/code&gt; and has inherited some of its quirks. In spite of its name it does &lt;b&gt;NOT&lt;/b&gt; always return the directory name as you might expect. To be safe, if you want the directory name of a path use &lt;code&gt;fileparse()&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n se proporciona por compatibilidad con el comando de shell de Unix &lt;code&gt;dirname(1)&lt;/code&gt; y ha heredado algunas de sus peculiaridades. A pesar de su nombre, &lt;b&gt;NO&lt;/b&gt; siempre devuelve el nombre del directorio como cabr&amp;iacute;a esperar. Para estar seguro, si desea el nombre de directorio de una ruta, use &lt;code&gt;fileparse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e38b64af2f6199864b86fbb0e715f9bad1e1c8ab" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;dirname(1)&lt;/code&gt; and has inherited some of its quirks. In spite of its name it does &lt;b&gt;NOT&lt;/b&gt; always return the directory name as you might expect. To be safe, if you want the directory name of a path use &lt;code&gt;fileparse()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43d447b561f6a59c989012be7a2b442524af3a6" translate="yes" xml:space="preserve">
          <source>This function is rarely used since you will usually get the value of a constant by having that constant imported into your package by listing the constant name in the &lt;code&gt;use Win32API::File&lt;/code&gt; statement and then simply using the constant name in your code [perhaps followed by &lt;code&gt;()&lt;/code&gt;]. This function is useful for verifying constant names not in Perl code, for example, after prompting a user to type in a constant name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2335958f876fe8dc65dba75c5931c4ccbae47d62" translate="yes" xml:space="preserve">
          <source>This function is similar to a &lt;a href=&quot;#eval-EXPR&quot;&gt;string eval&lt;/a&gt;, except it always parses its argument (or &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if EXPR is omitted) as a string of independent bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02937778415d96c12ca24363d4faada4d7809ec7" translate="yes" xml:space="preserve">
          <source>This function is slightly neater and more convenient than the otherwise-equivalent code</source>
          <target state="translated">Esta función es ligeramente más limpia y más conveniente que el código equivalente de otro modo</target>
        </trans-unit>
        <trans-unit id="824fffad4b877549e966fe37c98ad5fa083fe68c" translate="yes" xml:space="preserve">
          <source>This function is the implementation of the &lt;a href=&quot;#LINKLIST&quot;&gt;&quot;LINKLIST&quot;&lt;/a&gt; macro. It should not be called directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253b045013c433366a31c2cad960bf3283fd7d39" translate="yes" xml:space="preserve">
          <source>This function is the implementation of the &lt;a href=&quot;#LINKLIST&quot;&gt;LINKLIST&lt;/a&gt; macro. It should not be called directly.</source>
          <target state="translated">Esta funci&amp;oacute;n es la implementaci&amp;oacute;n de la macro &lt;a href=&quot;#LINKLIST&quot;&gt;LINKLIST&lt;/a&gt; . No debe llamarse directamente.</target>
        </trans-unit>
        <trans-unit id="2a063dac587bf0c596a82a9c061b8f58b0075f3f" translate="yes" xml:space="preserve">
          <source>This function is the reason for &lt;code&gt;Test&lt;/code&gt; 's existence. It's the basic function that handles printing &quot;&lt;code&gt;ok&lt;/code&gt; &quot; or &quot;&lt;code&gt;not ok&lt;/code&gt; &quot;, along with the current test number. (That's what &lt;code&gt;Test::Harness&lt;/code&gt; wants to see.)</source>
          <target state="translated">Esta funci&amp;oacute;n es la raz&amp;oacute;n de la existencia de &lt;code&gt;Test&lt;/code&gt; . Es la funci&amp;oacute;n b&amp;aacute;sica que maneja imprimir &quot; &lt;code&gt;ok&lt;/code&gt; &quot; o &quot; &lt;code&gt;not ok&lt;/code&gt; &quot;, junto con el n&amp;uacute;mero de prueba actual. (Eso es lo que &lt;code&gt;Test::Harness&lt;/code&gt; quiere ver).</target>
        </trans-unit>
        <trans-unit id="6652ee7354b55bf19e0dd58db709c8e76f2ecef3" translate="yes" xml:space="preserve">
          <source>This function is the reason for &lt;code&gt;Test&lt;/code&gt;'s existence. It's the basic function that handles printing &quot;&lt;code&gt;ok&lt;/code&gt;&quot; or &quot;&lt;code&gt;not ok&lt;/code&gt;&quot;, along with the current test number. (That's what &lt;code&gt;Test::Harness&lt;/code&gt; wants to see.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077b1426e82943be7223b00766173ba5b1d4acf4" translate="yes" xml:space="preserve">
          <source>This function is used to create an in-memory gzip file with the minimum possible gzip header (exactly 10 bytes).</source>
          <target state="translated">Esta función se utiliza para crear un archivo gzip en memoria con el mínimo posible de encabezamiento gzip (exactamente 10 bytes).</target>
        </trans-unit>
        <trans-unit id="4e0a2ccd31b9bdd8066d5b9d22011351f1760ec7" translate="yes" xml:space="preserve">
          <source>This function is used to uncompress an in-memory gzip file.</source>
          <target state="translated">Esta función se utiliza para descomprimir un archivo gzip en memoria.</target>
        </trans-unit>
        <trans-unit id="a3560ca8857460f655d69dd6b49d96a0f7f4a536" translate="yes" xml:space="preserve">
          <source>This function is useful for producing a directory tree identical to the intended distribution tree.</source>
          <target state="translated">Esta función es útil para producir un árbol de directorios idéntico al árbol de distribución previsto.</target>
        </trans-unit>
        <trans-unit id="1163bbaebdc07bcad37b6297e8e95d441a65c0d1" translate="yes" xml:space="preserve">
          <source>This function is useful in two cases: a) finding the trailing text after a JSON object or b) parsing multiple JSON objects separated by non-JSON text (such as commas).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f19b2798743cc5e3f86e0124b7ddc89a4b3ff92" translate="yes" xml:space="preserve">
          <source>This function is very slow. Why? To compute fib(14), it first wants to compute fib(13) and fib(12), and add the results. But to compute fib(13), it first has to compute fib(12) and fib(11), and then it comes back and computes fib(12) all over again even though the answer is the same. And both of the times that it wants to compute fib(12), it has to compute fib(11) from scratch, and then it has to do it again each time it wants to compute fib(13). This function does so much recomputing of old results that it takes a really long time to run---fib(14) makes 1,200 extra recursive calls to itself, to compute and recompute things that it already computed.</source>
          <target state="translated">Esta función es muy lenta.¿Por qué? Para calcular la fib(14),primero quiere calcular la fib(13)y la fib(12),y añadir los resultados.Pero para calcular fib(13),primero tiene que calcular fib(12)y fib(11),y luego regresa y calcula fib(12)de nuevo aunque la respuesta sea la misma.Y las dos veces que quiere calcular la fib(12),tiene que calcular la fib(11)desde cero,y luego tiene que hacerlo de nuevo cada vez que quiere calcular la fib(13).Esta función hace tanto recálculo de los resultados antiguos que tarda mucho tiempo en ejecutarse...la fibrilación (14)hace 1.200 llamadas extra recursivas a sí misma,para calcular y recálcular cosas que ya ha calculado.</target>
        </trans-unit>
        <trans-unit id="658ccab5957d9fcb5acf02b75800173326f8ac18" translate="yes" xml:space="preserve">
          <source>This function is visible to extensions included in the Perl core.</source>
          <target state="translated">Esta función es visible para las extensiones incluidas en el núcleo de Perl.</target>
        </trans-unit>
        <trans-unit id="8ab6ba31d01a4a2d9764121a075a301c39db9fb7" translate="yes" xml:space="preserve">
          <source>This function is wrapped by the macro &lt;code&gt;HvFILL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bced169d4ae2df2074f45ec48dfe76cbdcf9e8fb" translate="yes" xml:space="preserve">
          <source>This function isn't exported out of the Perl core.</source>
          <target state="translated">Esta función no se exporta desde el núcleo de Perl.</target>
        </trans-unit>
        <trans-unit id="c4db11cb4bc493fbed9591c0f0b07c2a5d596564" translate="yes" xml:space="preserve">
          <source>This function looks at the sequence of bytes between &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt;, which are assumed to be encoded in ASCII/Latin1, and returns how many of them would change should the string be translated into UTF-8. Due to the nature of UTF-8, each of these would occupy two bytes instead of the single one in the input string. Thus, this function returns the precise number of bytes the string would expand by when translated to UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b0e9309a1e4a7388d6c16c7d9a1708e320c5c8" translate="yes" xml:space="preserve">
          <source>This function makes use of the fact that the presence of tainted data anywhere within an expression renders the entire expression tainted. It would be inefficient for every operator to test every argument for taintedness. Instead, the slightly more efficient and conservative approach is used that if any tainted value has been accessed within the same expression, the whole expression is considered tainted.</source>
          <target state="translated">Esta función aprovecha el hecho de que la presencia de datos contaminados en cualquier lugar de una expresión hace que toda la expresión esté contaminada.Sería ineficaz que cada operador probara cada argumento de la contaminación.En cambio,se utiliza el enfoque ligeramente más eficiente y conservador de que si se ha accedido a cualquier valor manchado dentro de la misma expresión,se considera que toda la expresión está manchada.</target>
        </trans-unit>
        <trans-unit id="2fa84a514560c863f7089eb7ca24d6683d764569" translate="yes" xml:space="preserve">
          <source>This function may redirect error popups associated with hardware errors (Disk not ready etc.) and software exceptions to the file POPUPLOG.OS2 at the root directory of the specified drive. Overrides OS2::Error() specified by individual programs. Given argument undef will disable redirection.</source>
          <target state="translated">Esta función puede redirigir las ventanas emergentes de error asociadas a errores de hardware (Disco no listo,etc.)y excepciones de software al archivo POPUPLOG.OS2 en el directorio raíz de la unidad especificada.Anula OS2::Error()especificado por programas individuales.Dado el argumento undef desactivará la redirección.</target>
        </trans-unit>
        <trans-unit id="359169950ca6c9680b4088bbfb715818c6d49e24" translate="yes" xml:space="preserve">
          <source>This function may return the pathname in Unicode if it cannot be represented in the system codepage. Use Win32::GetANSIPathName() before passing the path to a system call or another program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1496d823153f206625abfb243ff632e61577c117" translate="yes" xml:space="preserve">
          <source>This function modifies and queries the program's underlying locale. Users of this function should read &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;, whch provides a comprehensive discussion of Perl locale handling, knowledge of which is necessary to properly use this function. It contains &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;a section devoted to this function&lt;/a&gt;. The discussion here is merely a summary reference for &lt;code&gt;setlocale()&lt;/code&gt;. Note that Perl itself is almost entirely unaffected by the locale except within the scope of &lt;code&gt;&quot;use locale&quot;&lt;/code&gt;. (Exceptions are listed in &lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;&quot;Not within the scope of &quot;use locale&quot;&quot; in perllocale&lt;/a&gt;, and locale-dependent functions within the POSIX module ARE always affected by the current locale.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a86c3308b6ed4c9bad7b6ede75664c2fe49a26e" translate="yes" xml:space="preserve">
          <source>This function must only be called during parsing of a subroutine; after &lt;a href=&quot;#start_subparse&quot;&gt;&quot;start_subparse&quot;&lt;/a&gt; has been called. It might allocate lexical variables on the pad for the current subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c43d91069a9273330810504102211439262d63" translate="yes" xml:space="preserve">
          <source>This function never returns; &lt;code&gt;croak&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; and friends.</source>
          <target state="translated">Esta funci&amp;oacute;n nunca regresa; &lt;code&gt;croak&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; y amigos.</target>
        </trans-unit>
        <trans-unit id="50a0a533f960128e3a086dc96db9b1aafa52d5a7" translate="yes" xml:space="preserve">
          <source>This function normally returns a list. Suppose you memoize it and merge the caches:</source>
          <target state="translated">Esta función normalmente devuelve una lista.Supongamos que la memoriza y fusiona los cachés:</target>
        </trans-unit>
        <trans-unit id="3b85997713311e08de3e59dac5499d89e1dccd03" translate="yes" xml:space="preserve">
          <source>This function only exists if Perl has been compiled to use ithreads.</source>
          <target state="translated">Esta función sólo existe si Perl ha sido compilado para utilizar hilos.</target>
        </trans-unit>
        <trans-unit id="61fee0518a7d8b237d34517bc719658c6b719ec4" translate="yes" xml:space="preserve">
          <source>This function only operates on officially approved (not provisional) named sequences.</source>
          <target state="translated">Esta función sólo funciona con secuencias de nombre oficialmente aprobadas (no provisionales).</target>
        </trans-unit>
        <trans-unit id="e59aa3c08f27111519b6ecd9388b33347100905a" translate="yes" xml:space="preserve">
          <source>This function only works on &lt;code&gt;new()&lt;/code&gt; and it assumes &lt;code&gt;new()&lt;/code&gt; will return just a single object which isa &lt;code&gt;$class&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n solo funciona en &lt;code&gt;new()&lt;/code&gt; y asume que &lt;code&gt;new()&lt;/code&gt; devolver&amp;aacute; solo un objeto que es &lt;code&gt;$class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="984502da18bc523751c7d6b5905d4dbe46c6f445" translate="yes" xml:space="preserve">
          <source>This function only works on &lt;code&gt;new()&lt;/code&gt; and it assumes &lt;code&gt;new()&lt;/code&gt; will return just a single object which isa &lt;code&gt;$class&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb7d023997a73d6817733ba90181d612a2b1cdc" translate="yes" xml:space="preserve">
          <source>This function opens either the</source>
          <target state="translated">Esta función abre el</target>
        </trans-unit>
        <trans-unit id="441aca7229169cbbddd3f285c046a735dc532182" translate="yes" xml:space="preserve">
          <source>This function performs syntax checking on a prototype, &lt;code&gt;proto&lt;/code&gt; . If &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; is true, any illegal characters or mismatched brackets will trigger illegalproto warnings, declaring that they were detected in the prototype for &lt;code&gt;name&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n realiza una verificaci&amp;oacute;n de sintaxis en un prototipo, &lt;code&gt;proto&lt;/code&gt; . Si &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; es verdadero, cualquier car&amp;aacute;cter ilegal o corchetes que no coincidan generar&amp;aacute; advertencias de prototipo ilegal, declarando que se detectaron en el prototipo del &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdadd704268c26b65382b6957bee64f00d111837" translate="yes" xml:space="preserve">
          <source>This function performs syntax checking on a prototype, &lt;code&gt;proto&lt;/code&gt;. If &lt;code&gt;warn&lt;/code&gt; is true, any illegal characters or mismatched brackets will trigger illegalproto warnings, declaring that they were detected in the prototype for &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91930e6b34fa8d1a9857a2f7de94cb11275f2880" translate="yes" xml:space="preserve">
          <source>This function performs the work of the legacy functions gethostbyname(), getservbyname(), inet_aton() and pack_sockaddr_in().</source>
          <target state="translated">Esta función realiza el trabajo de las funciones heredadas gethostbyname(),getservbyname(),inet_aton()y pack_sockaddr_in().</target>
        </trans-unit>
        <trans-unit id="b69a639ae94b0e84e8a91026a470893dc8e2e4fa" translate="yes" xml:space="preserve">
          <source>This function performs the work of the legacy functions unpack_sockaddr_in(), inet_ntoa(), gethostbyaddr() and getservbyport().</source>
          <target state="translated">Esta función realiza el trabajo de las funciones heredadas unpack_sockaddr_in(),inet_ntoa(),gethostbyaddr()y getservbyport().</target>
        </trans-unit>
        <trans-unit id="3d1364c8524baa88f5749c97cf4b3c3b92b20d7d" translate="yes" xml:space="preserve">
          <source>This function places an advisory lock on a shared variable or referenced object contained in</source>
          <target state="translated">Esta función coloca un candado de aviso en una variable compartida u objeto referenciado contenido en</target>
        </trans-unit>
        <trans-unit id="0a506b1319a241ed6545a1f6f58a9a222f9ce6e0" translate="yes" xml:space="preserve">
          <source>This function process get magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16532d91a655b7f55374b1ff4cdf45a2891edbdc" translate="yes" xml:space="preserve">
          <source>This function reads the environment and generates an appropriate argument hash from it. If given any arguments in &lt;code&gt;%extra_args&lt;/code&gt;, these will override the environmental defaults. In accepts &lt;code&gt;harness_class&lt;/code&gt; (which defaults to &lt;code&gt;TAP::Harness&lt;/code&gt;), and any argument the harness class accepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f7d1c76b617d33ccfffcd0313dd243dca9de11" translate="yes" xml:space="preserve">
          <source>This function returns FALSE for strings containing any code points above the Unicode max of 0x10FFFF or surrogate code points, but accepts non-character code points per &lt;a href=&quot;http://www.unicode.org/versions/corrigendum9.html&quot;&gt;Corrigendum #9&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d7a81a9a245d7438fa448545d3c2bf90157fa3" translate="yes" xml:space="preserve">
          <source>This function returns FALSE for strings containing any code points above the Unicode max of 0x10FFFF, surrogate code points, or non-character code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13aa5d944aea63735721eab1c7c43ad176915f14" translate="yes" xml:space="preserve">
          <source>This function returns a string of &lt;code&gt;boot_$ModuleName&lt;/code&gt; prototypes for each @modules.</source>
          <target state="translated">Esta funci&amp;oacute;n devuelve una cadena de prototipos &lt;code&gt;boot_$ModuleName&lt;/code&gt; para cada @modules.</target>
        </trans-unit>
        <trans-unit id="4f9139a43ab3e4540adae4f5d5020617b2e643b8" translate="yes" xml:space="preserve">
          <source>This function returns a string of calls to &lt;code&gt;newXS()&lt;/code&gt; that glue the module</source>
          <target state="translated">Esta funci&amp;oacute;n devuelve una cadena de llamadas a &lt;code&gt;newXS()&lt;/code&gt; que pegan el m&amp;oacute;dulo</target>
        </trans-unit>
        <trans-unit id="621ba7bc642c79bf406939acb2b7c2b8df3903c7" translate="yes" xml:space="preserve">
          <source>This function returns an encoded version of the string ($str) given as argument.</source>
          <target state="translated">Esta función devuelve una versión codificada de la cadena ($str)dada como argumento.</target>
        </trans-unit>
        <trans-unit id="44086926e42f35072b303b091e9d9e0a7ca33b91" translate="yes" xml:space="preserve">
          <source>This function returns empty-list if given anything other than a formally valid language tag.</source>
          <target state="translated">Esta función devuelve la lista vacía si se le da algo más que una etiqueta de lenguaje formalmente válida.</target>
        </trans-unit>
        <trans-unit id="df38023076a41559f21264db80802e81879d618e" translate="yes" xml:space="preserve">
          <source>This function returns the count of used buckets in the hash. It is expensive to calculate and the value is NOT cached, so avoid use of this function in production code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865f16a5f2b57a820e8bf84b966f732abf36eb70" translate="yes" xml:space="preserve">
          <source>This function returns the plain text version of the string given as argument. The lines of the result are &quot;\n&quot; terminated, even if the $str argument contains &quot;\r\n&quot; terminated lines.</source>
          <target state="translated">Esta función devuelve la versión en texto plano de la cadena dada como argumento.Las líneas del resultado son &quot;\n&quot; terminadas,incluso si el argumento $str contiene líneas terminadas &quot;\r\n&quot;.</target>
        </trans-unit>
        <trans-unit id="a5ab5fe7ba11e207b5f81eca8f934ec6da3fef9c" translate="yes" xml:space="preserve">
          <source>This function returns the string that results from decoding the scalar value</source>
          <target state="translated">Esta función devuelve la cadena que resulta de la decodificación del valor escalar</target>
        </trans-unit>
        <trans-unit id="3d6da7152ac538ef94012168e86ee3522aaad549" translate="yes" xml:space="preserve">
          <source>This function returns the string with the first character modified if it is a control character. It converts it to ^X format first, so that &quot;\cG&quot; becomes &quot;^G&quot;. This is used internally by &lt;a href=&quot;#SAFENAME&quot;&gt;B::GV::SAFENAME&lt;/a&gt;, but you can call it directly.</source>
          <target state="translated">Esta funci&amp;oacute;n devuelve la cadena con el primer car&amp;aacute;cter modificado si es un car&amp;aacute;cter de control. Primero lo convierte al formato ^ X, de modo que &quot;\ cG&quot; se convierte en &quot;^ G&quot;. Esto lo usa internamente &lt;a href=&quot;#SAFENAME&quot;&gt;B :: GV :: SAFENAME&lt;/a&gt; , pero puede llamarlo directamente.</target>
        </trans-unit>
        <trans-unit id="58003204cd5bf3cc0d766f8388948446f273cd60" translate="yes" xml:space="preserve">
          <source>This function returns the total number of buckets the hash holds, or would hold if the array were created. (When a hash is freshly created the array may not be allocated even though this value will be non-zero.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4a068b79e8f40c3a9e262ab52eb09f9c93a717" translate="yes" xml:space="preserve">
          <source>This function sets the default device and directory for the process. It is identical to the built-in chdir() operator, except that the change persists after Perl exits. It returns a true value on success, and &lt;code&gt;undef&lt;/code&gt; if it encounters an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3960f619466a09edf20242d0c7f969690cbc6219" translate="yes" xml:space="preserve">
          <source>This function should be as efficient as possible to keep your programs running as fast as possible.</source>
          <target state="translated">Esta función debe ser lo más eficiente posible para mantener sus programas funcionando lo más rápido posible.</target>
        </trans-unit>
        <trans-unit id="3a1ef4b3781258f0fdbabb5991f2b0a7c13aaadc" translate="yes" xml:space="preserve">
          <source>This function should have been named wantlist() instead.</source>
          <target state="translated">Esta función debería haberse llamado wantlist()en su lugar.</target>
        </trans-unit>
        <trans-unit id="0b507d2e008bacdbb9e54edf21d0bbb50fdaab83" translate="yes" xml:space="preserve">
          <source>This function should not be called if you are using the object oriented interface since the it will interfere with the object destructor deleting the file.</source>
          <target state="translated">Esta función no debe llamarse si se utiliza la interfaz orientada a objetos,ya que interferirá con el destructor de objetos para borrar el archivo.</target>
        </trans-unit>
        <trans-unit id="c82575cb1cd9500578e180e36936964e6acbcd65" translate="yes" xml:space="preserve">
          <source>This function should not have a compatibility macro to define, say, &lt;code&gt;Perl_parse&lt;/code&gt; to &lt;code&gt;parse&lt;/code&gt; . It must be called as &lt;code&gt;Perl_parse&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n no deber&amp;iacute;a tener una macro de compatibilidad para definir, digamos, &lt;code&gt;Perl_parse&lt;/code&gt; para &lt;code&gt;parse&lt;/code&gt; . Debe llamarse &lt;code&gt;Perl_parse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63eb3b3ba108688ddd872a95b52c197f8b6499d3" translate="yes" xml:space="preserve">
          <source>This function should only be used to display the actual OS name to the user; it should not be used to determine the class of operating systems this system belongs to. The Win32::GetOSName(), Win32::GetOSVersion, Win32::GetProductInfo() and Win32::GetSystemMetrics() functions provide the base information to check for certain capabilities, or for families of OS releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd99feaf61a2bec56d635937abeb8d24fef9d878" translate="yes" xml:space="preserve">
          <source>This function simply calls the Microsoft C library _getdcwd() function.</source>
          <target state="translated">Esta función simplemente llama a la función de la biblioteca C de Microsoft _getdcwd().</target>
        </trans-unit>
        <trans-unit id="7c73c162d2f4a3c57002d94f30e626af9a64555c" translate="yes" xml:space="preserve">
          <source>This function simply returns a string defining the same &lt;code&gt;EXTERN_C&lt;/code&gt; macro as</source>
          <target state="translated">Esta funci&amp;oacute;n simplemente devuelve una cadena que define la misma macro &lt;code&gt;EXTERN_C&lt;/code&gt; que</target>
        </trans-unit>
        <trans-unit id="9ab2ac7d8042c579036bf811ff64ad55b40d9830" translate="yes" xml:space="preserve">
          <source>This function skips over the automatic calls to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; made on the behalf of the debugger. If the stack frame requested was a sub called by &lt;code&gt;DB::sub&lt;/code&gt; , the return value will be the frame for the call to &lt;code&gt;DB::sub&lt;/code&gt; , since that has the correct line number/etc. for the call site. If</source>
          <target state="translated">Esta funci&amp;oacute;n omite las llamadas autom&amp;aacute;ticas a &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; realizadas en nombre del depurador. Si el marco de pila solicitado fue un sub llamado por &lt;code&gt;DB::sub&lt;/code&gt; , el valor de retorno ser&amp;aacute; el marco para la llamada a &lt;code&gt;DB::sub&lt;/code&gt; , ya que tiene el n&amp;uacute;mero de l&amp;iacute;nea correcto / etc. para el sitio de la llamada. Si</target>
        </trans-unit>
        <trans-unit id="f1861ae5b3c09bcddcc47e8c0460228b36a9717f" translate="yes" xml:space="preserve">
          <source>This function skips over the automatic calls to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; made on the behalf of the debugger. If the stack frame requested was a sub called by &lt;code&gt;DB::sub&lt;/code&gt;, the return value will be the frame for the call to &lt;code&gt;DB::sub&lt;/code&gt;, since that has the correct line number/etc. for the call site. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110e361d90fd374a271ccdacfa1a475088fcdc8e" translate="yes" xml:space="preserve">
          <source>This function takes a codeblock as its only argument, and it has a prototype. It will execute the codeblock, intercepting any generated events in the process. It will return an array reference with all the generated event objects. All events should be subclasses of &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1ed900c36dd5852fb31f0242bde189d87ee34e" translate="yes" xml:space="preserve">
          <source>This function takes a list of 0 or more language tags that constitute a given user's Accept-Language list, and returns a list of tags for</source>
          <target state="translated">Esta función toma una lista de 0 o más etiquetas de idiomas que constituyen la lista de idiomas de aceptación de un usuario determinado,y devuelve una lista de etiquetas para</target>
        </trans-unit>
        <trans-unit id="bddbbd4becb2f5cc5272150e5ca82b4b58f7fa5f" translate="yes" xml:space="preserve">
          <source>This function takes a scalar argument and returns a boolean value indicating whether the argument meets the &quot;lax&quot; rules for a version number. Leading and trailing spaces are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c08de34d39f2e0da8affe01dbc6fa96a8b507f" translate="yes" xml:space="preserve">
          <source>This function takes a scalar argument and returns a boolean value indicating whether the argument meets the &quot;strict&quot; rules for a version number. Leading and trailing spaces are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e20c9e90738e4e12b4b244ae6847d7d7fb0c7dd" translate="yes" xml:space="preserve">
          <source>This function takes a variable number of arguments, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; style. The argument list should end with &lt;code&gt;...&lt;/code&gt; , like this:</source>
          <target state="translated">Esta funci&amp;oacute;n toma un n&amp;uacute;mero variable de argumentos, estilo &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; . La lista de argumentos deber&amp;iacute;a terminar con &lt;code&gt;...&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="cf2eecbd5d099ce08ffbe9b809327bd3414ba65b" translate="yes" xml:space="preserve">
          <source>This function takes no arguments, and as far as &lt;code&gt;Memoize&lt;/code&gt; is concerned, it always returns the same result. &lt;code&gt;Memoize&lt;/code&gt; is wrong, of course, and the memoized version of this function will call &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; once to get the current time, and it will return that same time every time you call it after that.</source>
          <target state="translated">Esta funci&amp;oacute;n no toma argumentos y, en lo que respecta a &lt;code&gt;Memoize&lt;/code&gt; , siempre devuelve el mismo resultado. &lt;code&gt;Memoize&lt;/code&gt; es incorrecto, por supuesto, y la versi&amp;oacute;n memorizada de esta funci&amp;oacute;n llamar&amp;aacute; a la &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; una vez para obtener la hora actual, y volver&amp;aacute; a la misma hora cada vez que la llame despu&amp;eacute;s de eso.</target>
        </trans-unit>
        <trans-unit id="559b31c7b52a11340d8d10694e3f1b4f8fecacfa" translate="yes" xml:space="preserve">
          <source>This function takes no arguments, and as far as &lt;code&gt;Memoize&lt;/code&gt; is concerned, it always returns the same result. &lt;code&gt;Memoize&lt;/code&gt; is wrong, of course, and the memoized version of this function will call &lt;code&gt;time&lt;/code&gt; once to get the current time, and it will return that same time every time you call it after that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a28d0d2b0d75e1d681cb10ebfe192aa26bfeab" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is an empty string, it is interpreted as referring to the &lt;code&gt;main&lt;/code&gt; package. If CLASSNAME is omitted, the current package is used. Because a &lt;a href=&quot;#bless-REF%2CCLASSNAME&quot;&gt;&lt;code&gt;bless&lt;/code&gt;&lt;/a&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the method doing the blessing. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edb4f65abb2fc47967dac5333a9e803321aac25" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is omitted, the current package is used. Because a &lt;code&gt;&lt;a href=&quot;bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the function doing the blessing. See &lt;a href=&quot;../perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="translated">Esta funci&amp;oacute;n le dice a la cosa referenciada por REF que ahora es un objeto en el paquete CLASSNAME. Si se omite CLASSNAME, se utiliza el paquete actual. Debido a que una &lt;code&gt;&lt;a href=&quot;bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; es a menudo lo &amp;uacute;ltimo en un constructor, devuelve la referencia por conveniencia. Utilice siempre la versi&amp;oacute;n de dos argumentos si una clase derivada puede heredar la funci&amp;oacute;n que hace la bendici&amp;oacute;n. Consulte &lt;a href=&quot;../perlobj&quot;&gt;perlobj&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la bendici&amp;oacute;n (y las bendiciones) de los objetos.</target>
        </trans-unit>
        <trans-unit id="264717bee5831f635e17b82abeba8fa8b801090b" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is omitted, the current package is used. Because a &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the function doing the blessing. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="translated">Esta funci&amp;oacute;n le dice a la cosa referenciada por REF que ahora es un objeto en el paquete CLASSNAME. Si se omite CLASSNAME, se utiliza el paquete actual. Debido a que una &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; es a menudo lo &amp;uacute;ltimo en un constructor, devuelve la referencia por conveniencia. Utilice siempre la versi&amp;oacute;n de dos argumentos si una clase derivada puede heredar la funci&amp;oacute;n que hace la bendici&amp;oacute;n. Consulte &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la bendici&amp;oacute;n (y las bendiciones) de los objetos.</target>
        </trans-unit>
        <trans-unit id="5d01eea1f06346371db6a328408650ca1c6b5ca7" translate="yes" xml:space="preserve">
          <source>This function uses the &lt;code&gt;load&lt;/code&gt; function or the &lt;code&gt;autoload_remote&lt;/code&gt; function from Module::Load under the hood.</source>
          <target state="translated">Esta funci&amp;oacute;n utiliza la funci&amp;oacute;n de &lt;code&gt;load&lt;/code&gt; o la funci&amp;oacute;n &lt;code&gt;autoload_remote&lt;/code&gt; de Module :: Load under the hood.</target>
        </trans-unit>
        <trans-unit id="f87dbe6925db468abc769225ebccdc2e0259cd96" translate="yes" xml:space="preserve">
          <source>This function was copied from &lt;code&gt;Sub::Name::subname&lt;/code&gt; and renamed to the naming convention of this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511fcaf3db3ec5f256e19c49e3e9d50ebc6f2024" translate="yes" xml:space="preserve">
          <source>This function was inspired by &lt;code&gt;sub_fullname&lt;/code&gt; from &lt;a href=&quot;Sub::Identify&quot;&gt;Sub::Identify&lt;/a&gt;. The remaining functions that &lt;code&gt;Sub::Identify&lt;/code&gt; implements can easily be emulated using regexp operations, such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde06d7625f57e7da1a76d11827641ea58931d51" translate="yes" xml:space="preserve">
          <source>This function was useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want. If you do need this precise functionality, use instead &lt;code&gt;&lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n era &amp;uacute;til para el c&amp;oacute;digo que quer&amp;iacute;a manejar plataformas EBCDIC y ASCII con propiedades Unicode, pero a partir de Perl v5.20, las distinciones entre las plataformas se han hecho invisibles para la mayor&amp;iacute;a del c&amp;oacute;digo, por lo que es poco probable que esta funci&amp;oacute;n sea lo que usted quiere. Si necesita esta funcionalidad precisa, utilice en su lugar &lt;code&gt;&lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72cf5666687c9403c19f9817bf07791c2373d1e9" translate="yes" xml:space="preserve">
          <source>This function was useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want. If you do need this precise functionality, use instead &lt;code&gt;&lt;a href=&quot;perlapi#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;perlapi#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e428d7e7165fe610c2ec2aae0a7a0abdc81b5d5a" translate="yes" xml:space="preserve">
          <source>This function will calculate and return the binary digest of the bytes of the given file. The function will croak if it fails to open or read the file.</source>
          <target state="translated">Esta función calculará y devolverá el resumen binario de los bytes del archivo dado.La función se quebrará si no puede abrir o leer el archivo.</target>
        </trans-unit>
        <trans-unit id="fd596d51482a44fe07dfcd21f50a65f8052fad22" translate="yes" xml:space="preserve">
          <source>This function will collect the data described in &lt;a href=&quot;#The-hash-structure&quot;&gt;&quot;The hash structure&quot;&lt;/a&gt; below, and return that as a hash reference. It optionally accepts an option to include more entries from %ENV. See &lt;a href=&quot;#environment&quot;&gt;&quot;environment&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e710ca7b4ebf9ab0536802088bacbcbd1c5ec7fb" translate="yes" xml:space="preserve">
          <source>This function will concatenate all arguments, calculate the MD5 digest of this &quot;message&quot;, and return it in binary form. The returned string will be 16 bytes long.</source>
          <target state="translated">Esta función concatenará todos los argumentos,calculará el resumen MD5 de este &quot;mensaje&quot; y lo devolverá en forma binaria.La cadena devuelta tendrá una longitud de 16 bytes.</target>
        </trans-unit>
        <trans-unit id="c489f76d5438c6d22b3cb418ff3f520db9ae337f" translate="yes" xml:space="preserve">
          <source>This function will convert to UTF-8 (and not warn) even code points that aren't legal Unicode or are problematic, unless &lt;code&gt;flags&lt;/code&gt; contains one or more of the following flags:</source>
          <target state="translated">Esta funci&amp;oacute;n convertir&amp;aacute; a UTF-8 (y no advertir&amp;aacute;) incluso los puntos de c&amp;oacute;digo que no son Unicode legales o son problem&amp;aacute;ticos, a menos que los &lt;code&gt;flags&lt;/code&gt; contengan uno o m&amp;aacute;s de los siguientes indicadores:</target>
        </trans-unit>
        <trans-unit id="bfa2e2cbe1081798fb5dd07961b2589448f68e0d" translate="yes" xml:space="preserve">
          <source>This function will croak if it can't connect to the syslog daemon.</source>
          <target state="translated">Esta función se quebrará si no se puede conectar con el demonio del syslog.</target>
        </trans-unit>
        <trans-unit id="387cb216c9e75c1a719a69623bb869c50aab490e" translate="yes" xml:space="preserve">
          <source>This function will croak if the determined encoding isn't recognized by the Encode module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fb41e9972ce033692cb3bc009110bcfa6b3909" translate="yes" xml:space="preserve">
          <source>This function will not be confused by overloading or blessing. In internals terms, this extracts the regexp pointer out of the PERL_MAGIC_qr structure so it cannot be fooled.</source>
          <target state="translated">Esta función no se confundirá con la sobrecarga o la bendición.En términos internos,esto extrae el puntero regexp de la estructura PERL_MAGIC_qr para que no pueda ser engañado.</target>
        </trans-unit>
        <trans-unit id="e051c29d133cbded6b7972c7afb22f014eeabf3e" translate="yes" xml:space="preserve">
          <source>This function will return an ANSI folder path if the long name cannot be represented in the system codepage. Use Win32::GetLongPathName() on the result of Win32::GetFolderPath() if you want the Unicode version of the folder name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf7565f2d5b49ccdcf0417e04e7ffb7876b15d0" translate="yes" xml:space="preserve">
          <source>This function will split up your program into files that the AutoLoader module can handle. It is used by both the standard perl libraries and by the MakeMaker utility, to automatically configure libraries for autoloading.</source>
          <target state="translated">Esta función dividirá su programa en archivos que el módulo AutoLoader pueda manejar.Es utilizada tanto por las bibliotecas de perl estándar como por la utilidad MakeMaker,para configurar automáticamente las bibliotecas para el autocargamento.</target>
        </trans-unit>
        <trans-unit id="7095163faacd01b9504e393cc3471c37894d46cb" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;a href=&quot;#chroot-FILENAME&quot;&gt;&lt;code&gt;chroot&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5d34127b41d73e4ad33707ae6e0f3468fa3088" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;code&gt;&lt;a href=&quot;chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n funciona como la llamada al sistema con el mismo nombre: hace que el directorio nombrado sea el nuevo directorio ra&amp;iacute;z para todos los nombres de ruta adicionales que comienzan con un &lt;code&gt;/&lt;/code&gt; por su proceso y todos sus hijos. (No cambia su directorio de trabajo actual, que no se ve afectado). Por razones de seguridad, esta llamada est&amp;aacute; restringida al superusuario. Si se omite FILENAME, hace un &lt;code&gt;&lt;a href=&quot;chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4f0880e6d532a1f27ed2ddbef9335a9b1af6165" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Esta funci&amp;oacute;n funciona como la llamada al sistema con el mismo nombre: hace que el directorio nombrado sea el nuevo directorio ra&amp;iacute;z para todos los nombres de ruta adicionales que comienzan con un &lt;code&gt;/&lt;/code&gt; por su proceso y todos sus hijos. (No cambia su directorio de trabajo actual, que no se ve afectado). Por razones de seguridad, esta llamada est&amp;aacute; restringida al superusuario. Si se omite FILENAME, hace un &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b573658383b8e6308fcb8df540075814ffcb1eb9" translate="yes" xml:space="preserve">
          <source>This function writes an EOF to a file handle, if the device driver supports this operation. Its primary use is to send an EOF to a subprocess through a pipe opened for writing without closing the pipe. It returns a true value if successful, and &lt;code&gt;undef&lt;/code&gt; if it encounters an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6e36bc13a174b6b1778b35a2d60399ce6095bb" translate="yes" xml:space="preserve">
          <source>This function, if given a language tag, returns all language tags that are alternate forms of this language tag. (I.e., tags which refer to the same language.) This is meant to handle legacy tags caused by the minor changes in language tag standards over the years; and the x-/i- alternation is also dealt with.</source>
          <target state="translated">Esta función,si se le da una etiqueta de idioma,devuelve todas las etiquetas de idioma que son formas alternativas de esta etiqueta de idioma.(Es decir,etiquetas que se refieren al mismo idioma.)Esto tiene por objeto manejar las etiquetas de legado causadas por los pequeños cambios en las normas de etiquetas de idiomas a lo largo de los años;y también se trata la alternancia x-/i-.</target>
        </trans-unit>
        <trans-unit id="b8a93fcdf2125a7d09fd995b425967c3b4164e45" translate="yes" xml:space="preserve">
          <source>This function, if given a language tag, returns an encoding of it such that:</source>
          <target state="translated">Esta función,si se le da una etiqueta de idioma,devuelve una codificación de tal manera que:</target>
        </trans-unit>
        <trans-unit id="ab422ba4ddb7cdb9c2c2585a4c8bf7188aa9975a" translate="yes" xml:space="preserve">
          <source>This function, which is included in the two export tags listed above, takes one or two arguments. The first is the glob pattern. The second is a set of flags ORed together. The available flags are listed below under &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX FLAGS&lt;/a&gt;. If the second argument is omitted, &lt;code&gt;GLOB_CSH&lt;/code&gt; (or &lt;code&gt;GLOB_CSH|GLOB_NOCASE&lt;/code&gt; on VMS and DOSish systems) is used by default.</source>
          <target state="translated">Esta funci&amp;oacute;n, que se incluye en las dos etiquetas de exportaci&amp;oacute;n enumeradas anteriormente, toma uno o dos argumentos. El primero es el patr&amp;oacute;n glob. El segundo es un conjunto de banderas colocadas en OR juntas. Las banderas disponibles se enumeran a continuaci&amp;oacute;n en &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX FLAGS&lt;/a&gt; . Si se omite el segundo argumento, &lt;code&gt;GLOB_CSH&lt;/code&gt; (o &lt;code&gt;GLOB_CSH|GLOB_NOCASE&lt;/code&gt; en sistemas VMS y DOSish) se usa por defecto.</target>
        </trans-unit>
        <trans-unit id="270550ffed57f85638e08b5ab27b3fa6e1378d46" translate="yes" xml:space="preserve">
          <source>This function, which is included in the two export tags listed above, takes one or two arguments. The first is the glob pattern. The second, if given, is a set of flags ORed together. The available flags and the default set of flags are listed below under &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;&quot;POSIX FLAGS&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7607d86adf25319082630a8f720c18a028dc2b55" translate="yes" xml:space="preserve">
          <source>This functionality is disabled for setuid scripts and for scripts run with &lt;b&gt;-T&lt;/b&gt;.</source>
          <target state="translated">Esta funcionalidad est&amp;aacute; deshabilitada para scripts setuid y para scripts que se ejecutan con &lt;b&gt;-T&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="f8830a83703c17da0879b0b7888f8216be9d6342" translate="yes" xml:space="preserve">
          <source>This functionality is disabled for setuid scripts, for scripts run with &lt;a href=&quot;#-T&quot;&gt;&quot;-T&quot;&lt;/a&gt;, and for scripts run on a Perl built without &lt;code&gt;-DDEBUGGING&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7553b3094129fa58516257b0cce463898fb85b" translate="yes" xml:space="preserve">
          <source>This generates a compile-time error if you access a variable that was neither explicitly declared (using any of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
vars&lt;/code&gt; ) nor fully qualified. (Because this is to avoid variable suicide problems and subtle dynamic scoping issues, a merely &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; variable isn't good enough.) See &lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;, &lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;, &lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;, &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;, and &lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt;.</source>
          <target state="translated">Esto genera un error en tiempo de compilaci&amp;oacute;n si accede a una variable que no fue declarada expl&amp;iacute;citamente (usando cualquiera de &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; ) ni completamente calificada. (Debido a que esto es para evitar problemas de suicidio variables y problemas sutiles de alcance din&amp;aacute;mico, una variable meramente &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; no es lo suficientemente buena.) Vea &lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; , &lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt; , &lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt; , &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; y &lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04dcf622c7ae471e31f3e87386651dc0f523184a" translate="yes" xml:space="preserve">
          <source>This generates a compile-time error if you access a variable that was neither explicitly declared (using any of &lt;code&gt;my&lt;/code&gt;, &lt;code&gt;our&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt;, or &lt;code&gt;use vars&lt;/code&gt;) nor fully qualified. (Because this is to avoid variable suicide problems and subtle dynamic scoping issues, a merely &lt;code&gt;local&lt;/code&gt; variable isn't good enough.) See &lt;a href=&quot;perlfunc#my&quot;&gt;&quot;my&quot; in perlfunc&lt;/a&gt;, &lt;a href=&quot;perlfunc#our&quot;&gt;&quot;our&quot; in perlfunc&lt;/a&gt;, &lt;a href=&quot;perlfunc#state&quot;&gt;&quot;state&quot; in perlfunc&lt;/a&gt;, &lt;a href=&quot;perlfunc#local&quot;&gt;&quot;local&quot; in perlfunc&lt;/a&gt;, and &lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74c9a11ba157a546c0c89330b1cb3bdd1614525" translate="yes" xml:space="preserve">
          <source>This generates a runtime error if you use symbolic references (see &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;).</source>
          <target state="translated">Esto genera un error de tiempo de ejecuci&amp;oacute;n si usa referencias simb&amp;oacute;licas (ver &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b0f601577dbb5896904df9ff737e1fa0298974a" translate="yes" xml:space="preserve">
          <source>This gets interpreted as:</source>
          <target state="translated">Esto se interpreta como:</target>
        </trans-unit>
        <trans-unit id="70bf742be7e750bec7fa9fb8e4b6fe30ec9b5f65" translate="yes" xml:space="preserve">
          <source>This gives nasty overhead when you are trying to dynamically require modules at runtime, since you will need to change the module notation (&lt;code&gt;Acme::Comment&lt;/code&gt; ) to a file notation fitting the particular platform you are on.</source>
          <target state="translated">Esto genera una sobrecarga desagradable cuando intentas requerir m&amp;oacute;dulos din&amp;aacute;micamente en tiempo de ejecuci&amp;oacute;n, ya que necesitar&amp;aacute;s cambiar la notaci&amp;oacute;n del m&amp;oacute;dulo ( &lt;code&gt;Acme::Comment&lt;/code&gt; ) a una notaci&amp;oacute;n de archivo que se ajuste a la plataforma en particular en la que te encuentras.</target>
        </trans-unit>
        <trans-unit id="216bc650b215bdce0b527db5f48a8452f5403d9b" translate="yes" xml:space="preserve">
          <source>This gives nasty overhead when you are trying to dynamically require modules at runtime, since you will need to change the module notation (&lt;code&gt;Acme::Comment&lt;/code&gt;) to a file notation fitting the particular platform you are on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c019885847002a06e56f60b480505499d5d7585" translate="yes" xml:space="preserve">
          <source>This gives the name of the extension (</source>
          <target state="translated">Esto da el nombre de la extensión (</target>
        </trans-unit>
        <trans-unit id="6663727bf6f9219b6a90ea1ea6946a59c195f810" translate="yes" xml:space="preserve">
          <source>This gives the short display label for each define, as used by &lt;code&gt;B::Concise&lt;/code&gt; and &lt;code&gt;perl -Dx&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342a7def02667aaf341bdacadaf48888e393c3fe" translate="yes" xml:space="preserve">
          <source>This gives the value of every &lt;code&gt;OPp&lt;/code&gt; define, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccb3b61d1478918319c14eea9dc5937ac460bf4" translate="yes" xml:space="preserve">
          <source>This gives you the chance to set some default values to your fields. The only argument is &lt;code&gt;$self&lt;/code&gt; with its indexes already set from the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b221eef709fb6d96fbb9db3f118edc097a1ba2d" translate="yes" xml:space="preserve">
          <source>This global modifies the argument given to &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; by &lt;code&gt;Params::Check::check()&lt;/code&gt; and is useful if you have a custom wrapper function around &lt;code&gt;Params::Check::check()&lt;/code&gt; . The value must be an integer, indicating the number of wrapper functions inserted between the real function call and &lt;code&gt;Params::Check::check()&lt;/code&gt; .</source>
          <target state="translated">Este global modifica el argumento dado a &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; por &lt;code&gt;Params::Check::check()&lt;/code&gt; y es &amp;uacute;til si tiene una funci&amp;oacute;n de envoltura personalizada alrededor de &lt;code&gt;Params::Check::check()&lt;/code&gt; . El valor debe ser un n&amp;uacute;mero entero, indicando el n&amp;uacute;mero de funciones contenedoras insertadas entre la llamada de funci&amp;oacute;n real y &lt;code&gt;Params::Check::check()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2793ac5b9f6e0e35f292e46fa45362370f25c5a" translate="yes" xml:space="preserve">
          <source>This global modifies the argument given to &lt;code&gt;caller()&lt;/code&gt; by &lt;code&gt;Params::Check::check()&lt;/code&gt; and is useful if you have a custom wrapper function around &lt;code&gt;Params::Check::check()&lt;/code&gt;. The value must be an integer, indicating the number of wrapper functions inserted between the real function call and &lt;code&gt;Params::Check::check()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8923baf9a118df6243078227c2bc3261ab6c170" translate="yes" xml:space="preserve">
          <source>This globally overrides the default behavior of calling &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; inside a thread, and effectively causes such calls to behave the same as &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; . In other words, with this setting, calling &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; causes only the thread to terminate.</source>
          <target state="translated">Esto anula globalmente el comportamiento predeterminado de llamar a &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; dentro de un hilo, y efectivamente hace que tales llamadas se comporten de la misma manera que &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; . En otras palabras, con esta configuraci&amp;oacute;n, llamar a &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; hace que solo termine el hilo.</target>
        </trans-unit>
        <trans-unit id="60974177d65f638974a74bbf69a2aed83266d31c" translate="yes" xml:space="preserve">
          <source>This globally overrides the default behavior of calling &lt;code&gt;exit()&lt;/code&gt; inside a thread, and effectively causes such calls to behave the same as &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt;. In other words, with this setting, calling &lt;code&gt;exit()&lt;/code&gt; causes only the thread to terminate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1a7a9bddd9acdc92fdc5c3e015da338283422a" translate="yes" xml:space="preserve">
          <source>This guarantees that STDOUT (where the test results appear) and STDERR (where the diagnostics appear) will stay in sync. The harness will display any diagnostics your tests emit on STDERR.</source>
          <target state="translated">Esto garantiza que STDOUT (donde aparecen los resultados de las pruebas)y STDERR (donde aparecen los diagnósticos)se mantendrán en sincronía.El arnés mostrará cualquier diagnóstico que sus pruebas emitan en el STDERR.</target>
        </trans-unit>
        <trans-unit id="e0e3e5ed908d1238444298278d7f13a68bf8c54c" translate="yes" xml:space="preserve">
          <source>This guide assumes you have obtained a prebuilt archive from os4depot.net.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a4c1ea9375fac79bda6e86d1c0d58e79a8f06c" translate="yes" xml:space="preserve">
          <source>This had Test::Builder2 conditionals. This was fixed by removing the conditionals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06edcd446459b13f358d5f7a1e7f44f85855880a" translate="yes" xml:space="preserve">
          <source>This happened because the presence of overloading was checked too early, before any tie()d access was attempted. If the class of the value FETCH()ed from the tied variable does not change, a simple workaround for code that is to run on older Perl versions is to access the value (via &lt;code&gt;() = $foo&lt;/code&gt; or some such) immediately after tie()ing, so that after this call the</source>
          <target state="translated">Esto sucedi&amp;oacute; porque la presencia de sobrecarga se verific&amp;oacute; demasiado pronto, antes de que se intentara cualquier acceso tie () d. Si la clase del valor FETCH () ed de la variable vinculada no cambia, una soluci&amp;oacute;n alternativa simple para el c&amp;oacute;digo que se ejecutar&amp;aacute; en versiones anteriores de Perl es acceder al valor (a trav&amp;eacute;s de &lt;code&gt;() = $foo&lt;/code&gt; o algo as&amp;iacute;) inmediatamente despu&amp;eacute;s del empate () ing, para que despu&amp;eacute;s de esta llamada al</target>
        </trans-unit>
        <trans-unit id="4f907111d1d29806bed6e772fe053aff55cf72f3" translate="yes" xml:space="preserve">
          <source>This happens because Berkeley DB uses dynamic memory to allocate buffers which will subsequently be written to the database file. Being dynamic, the memory could have been used for anything before DB malloced it. As Berkeley DB doesn't clear the memory once it has been allocated, the unused portions will contain random junk. In the case where a Perl script gets written to the database, the random junk will correspond to an area of dynamic memory that happened to be used during the compilation of the script.</source>
          <target state="translated">Esto sucede porque la base de datos de Berkeley utiliza la memoria dinámica para asignar los buffers que posteriormente se escribirán en el archivo de la base de datos.Al ser dinámica,la memoria podría haber sido utilizada para cualquier cosa antes de que la DB la malogre.Como la Berkeley DB no borra la memoria una vez que ha sido asignada,las partes no utilizadas contendrán basura aleatoria.En el caso de que un script Perl se escriba en la base de datos,la basura aleatoria corresponderá a un área de memoria dinámica que fue utilizada durante la compilación del script.</target>
        </trans-unit>
        <trans-unit id="a1a0c21f8deaf9e9c72ad918fbfe929256d08e89" translate="yes" xml:space="preserve">
          <source>This happens because is_deeply will unoverload all arguments unconditionally. It is probably best not to use is_deeply with overloading. For legacy reasons this is not likely to ever be fixed. If you would like a much better tool for this you should see &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt; Specifically &lt;a href=&quot;Test2::Tools::Compare&quot;&gt;Test2::Tools::Compare&lt;/a&gt; has an &lt;code&gt;is()&lt;/code&gt; function that works like &lt;code&gt;is_deeply&lt;/code&gt; with many improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2287d497a37220b85075e14fb44f3c5f11c4109c" translate="yes" xml:space="preserve">
          <source>This happens because you can't really share arbitrary data structures with foreign processes.</source>
          <target state="translated">Esto sucede porque no se pueden compartir estructuras de datos arbitrarias con procesos extranjeros.</target>
        </trans-unit>
        <trans-unit id="3663fa9d53c5bc8b1c430a10078b98451ddfbf78" translate="yes" xml:space="preserve">
          <source>This happens only if your perl is compiled to use stdio instead of perlio, which is the default. Some (maybe all?) stdios set error and eof flags that you may need to clear. The &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module defines &lt;code&gt;clearerr()&lt;/code&gt; that you can use. That is the technically correct way to do it. Here are some less reliable workarounds:</source>
          <target state="translated">Esto sucede solo si su perl est&amp;aacute; compilado para usar stdio en lugar de perlio, que es el predeterminado. Algunas (&amp;iquest;tal vez todas?) Stdios establecen errores y eof indicadores que es posible que deba borrar. El m&amp;oacute;dulo &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; define &lt;code&gt;clearerr()&lt;/code&gt; que puede usar. Esa es la forma t&amp;eacute;cnicamente correcta de hacerlo. Aqu&amp;iacute; hay algunas soluciones menos confiables:</target>
        </trans-unit>
        <trans-unit id="40e2474ab2464f5a6d8b366f637789f861001327" translate="yes" xml:space="preserve">
          <source>This happens to avoid shell interpolation problems when whitespace is present in directory names.</source>
          <target state="translated">Esto sucede para evitar problemas de interpolación de la concha cuando el espacio blanco está presente en los nombres de los directorios.</target>
        </trans-unit>
        <trans-unit id="76f62e127c6c53c05eb19f5eae3fcd84ce29184a" translate="yes" xml:space="preserve">
          <source>This has a significant advantage in space over reading the whole file in. You can find a proof of this method in</source>
          <target state="translated">Esto tiene una ventaja significativa en el espacio sobre la lectura de todo el archivo.Puedes encontrar una prueba de este método en</target>
        </trans-unit>
        <trans-unit id="a19e57e2a77c7fc3b4122f04d13e6469dce9f91c" translate="yes" xml:space="preserve">
          <source>This has been recorded in &lt;a href=&quot;http://search.cpan.org/perldoc/rt.cpan.org&quot;&gt;rt.cpan.org&lt;/a&gt; as bug #37532: Unable to interleave STDOUT and STDERR.</source>
          <target state="translated">Esto se ha registrado en &lt;a href=&quot;http://search.cpan.org/perldoc/rt.cpan.org&quot;&gt;rt.cpan.org&lt;/a&gt; como error # 37532: No se puede intercalar STDOUT y STDERR.</target>
        </trans-unit>
        <trans-unit id="cbcdc01d42c333e20ff9808a5f68276ca909022c" translate="yes" xml:space="preserve">
          <source>This has been recorded in &lt;a href=&quot;rt.cpan.org&quot;&gt;rt.cpan.org&lt;/a&gt; as bug #37532: Unable to interleave STDOUT and STDERR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f70dda08cfaadcd6df63c157b5e4187c1620e22" translate="yes" xml:space="preserve">
          <source>This has been retracted by Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52d89b3c166d4a363c55e83875dec4c4067987e" translate="yes" xml:space="preserve">
          <source>This has several advantages. Accessors make it easier to change the implementation of an object later while still preserving the original API.</source>
          <target state="translated">Esto tiene varias ventajas.Los accesos facilitan el cambio de la implementación de un objeto más tarde,conservando la API original.</target>
        </trans-unit>
        <trans-unit id="7b634ed56e8ae46f559d18b25ae1aeeee821eed7" translate="yes" xml:space="preserve">
          <source>This has the advantage of being backward compatible with older versions of Perl that did not use PerlIO or where &lt;code&gt;:raw&lt;/code&gt; was buggy (as it was before Perl 5.14).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b1eddfb5655aec91f3e8e1f2978f9657ae01a0" translate="yes" xml:space="preserve">
          <source>This has the effect of storing the cache in a &lt;code&gt;DB_File&lt;/code&gt; database whose name is in &lt;code&gt;$filename&lt;/code&gt; . The cache will persist after the program has exited. Next time the program runs, it will find the cache already populated from the previous run of the program. Or you can forcibly populate the cache by constructing a batch program that runs in the background and populates the cache file. Then when you come to run your real program the memoized function will be fast because all its results have been precomputed.</source>
          <target state="translated">Esto tiene el efecto de almacenar el cach&amp;eacute; en una &lt;code&gt;DB_File&lt;/code&gt; datos DB_File cuyo nombre est&amp;aacute; en &lt;code&gt;$filename&lt;/code&gt; . La cach&amp;eacute; persistir&amp;aacute; despu&amp;eacute;s de que el programa haya salido. La pr&amp;oacute;xima vez que se ejecute el programa, encontrar&amp;aacute; el cach&amp;eacute; ya poblado de la ejecuci&amp;oacute;n anterior del programa. O puede llenar el cach&amp;eacute; a la fuerza mediante la construcci&amp;oacute;n de un programa por lotes que se ejecuta en segundo plano y llena el archivo del cach&amp;eacute;. Entonces, cuando llegue a ejecutar su programa real, la funci&amp;oacute;n memorizada ser&amp;aacute; r&amp;aacute;pida porque todos sus resultados se han calculado previamente.</target>
        </trans-unit>
        <trans-unit id="04a5233be538e5070a6cd575007f00f78a717378" translate="yes" xml:space="preserve">
          <source>This has the effect of storing the cache in a &lt;code&gt;DB_File&lt;/code&gt; database whose name is in &lt;code&gt;$filename&lt;/code&gt;. The cache will persist after the program has exited. Next time the program runs, it will find the cache already populated from the previous run of the program. Or you can forcibly populate the cache by constructing a batch program that runs in the background and populates the cache file. Then when you come to run your real program the memoized function will be fast because all its results have been precomputed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f55042605688b1e566dc7078adcb80b2ae71090" translate="yes" xml:space="preserve">
          <source>This has the interesting effect of creating a function local to another function, something not normally supported in Perl.</source>
          <target state="translated">Esto tiene el interesante efecto de crear una función local a otra función,algo que normalmente no se admite en Perl.</target>
        </trans-unit>
        <trans-unit id="04baccbdc9b9fcde7962a296b34a3f02d1708cbd" translate="yes" xml:space="preserve">
          <source>This hash is filled with the variables that &lt;code&gt;perl -V&lt;/code&gt; fills its report with, and it has the same variables that &lt;code&gt;Config::myconfig&lt;/code&gt; returns from &lt;code&gt;%Config&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1797c70a1d197e558ba86167569174dbeb96a8a" translate="yes" xml:space="preserve">
          <source>This hash should map POD files (or scripts containing POD) to the man file names under the &lt;code&gt;blib/man1/&lt;/code&gt; directory, as in the following example:</source>
          <target state="translated">Este hash debe asignar archivos POD (o scripts que contengan POD) a los nombres de archivo man en el &lt;code&gt;blib/man1/&lt;/code&gt; , como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="e9df8c379bbf80ee5fdd7c982a32f28e6ec7e7ad" translate="yes" xml:space="preserve">
          <source>This holds a hash-of-lists. Each list contains the functions in the category the key denotes.</source>
          <target state="translated">Esto es un hachazo de listas.Cada lista contiene las funciones de la categoría que la tecla denota.</target>
        </trans-unit>
        <trans-unit id="80d4d81772f7d6d67760a370f3b5798c816acf17" translate="yes" xml:space="preserve">
          <source>This holds a string of the last error that happened during a call to &lt;code&gt;can_load&lt;/code&gt; . It is useful to inspect this when &lt;code&gt;can_load&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;can_load&lt;/code&gt; una cadena del &amp;uacute;ltimo error que ocurri&amp;oacute; durante una llamada a can_load . Es &amp;uacute;til inspeccionar esto cuando &lt;code&gt;can_load&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c00c9aa453b6f56e16b0531efee3c7be9faa87b6" translate="yes" xml:space="preserve">
          <source>This holds a string of the last error that happened during a call to &lt;code&gt;can_load&lt;/code&gt;. It is useful to inspect this when &lt;code&gt;can_load&lt;/code&gt; returns &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807ff9f1a614524ec64299d0ff11753e548d2db4" translate="yes" xml:space="preserve">
          <source>This holds the cache of the &lt;code&gt;can_load&lt;/code&gt; function. If you explicitly want to remove the current cache, you can set this variable to &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Esto contiene el cach&amp;eacute; de la funci&amp;oacute;n &lt;code&gt;can_load&lt;/code&gt; . Si desea eliminar expl&amp;iacute;citamente la memoria cach&amp;eacute; actual, puede establecer esta variable en &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e89b434a4ec5c18b43a734833827829de3493ad4" translate="yes" xml:space="preserve">
          <source>This holds the cache of the &lt;code&gt;can_load&lt;/code&gt; function. If you explicitly want to remove the current cache, you can set this variable to &lt;code&gt;undef&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f00ade254acd4a91c287efc124310fc7902663e" translate="yes" xml:space="preserve">
          <source>This idea is from &lt;a href=&quot;JSON::XS::Boolean&quot;&gt;JSON::XS::Boolean&lt;/a&gt; written by Marc Lehmann &amp;lt;schmorp[at]schmorp.de&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab611b7e6d978fe2070f07754881b8d06390403" translate="yes" xml:space="preserve">
          <source>This identical to the numerical values of the &lt;code&gt;$!&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">&amp;iexcl;Es id&amp;eacute;ntico a los valores num&amp;eacute;ricos de &lt;code&gt;$!&lt;/code&gt; , vea &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ ERRNO en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34f444d7282d48c73e6ca1798c5dd4a12fb69b6c" translate="yes" xml:space="preserve">
          <source>This identical to the numerical values of the &lt;code&gt;$!&lt;/code&gt;, see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;&quot;$ERRNO&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cd5f270d1b0fd37802c6a7f69eb1401eb75d55" translate="yes" xml:space="preserve">
          <source>This implementation has been moved into the core executable, but you can still load this module for backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebbc38db38088437ee3de434676f2c9849a55f6" translate="yes" xml:space="preserve">
          <source>This implementation never has to fetch the context using a function call, since it is always passed as an extra argument. Depending on your needs for simplicity or efficiency, you may mix the previous two approaches freely.</source>
          <target state="translated">Esta implementación nunca tiene que buscar el contexto mediante una llamada a la función,ya que siempre se pasa como un argumento extra.Dependiendo de sus necesidades de simplicidad o eficiencia,puede mezclar los dos enfoques anteriores libremente.</target>
        </trans-unit>
        <trans-unit id="7b6dd1dd5bc3b526c6e18c4c4cf7662fc526f6c1" translate="yes" xml:space="preserve">
          <source>This implements the C library function of the same name, which on most systems returns the current login from</source>
          <target state="translated">Esto implementa la función de la biblioteca C del mismo nombre,que en la mayoría de los sistemas devuelve el login actual de</target>
        </trans-unit>
        <trans-unit id="9b00dbaf392453f8a0c495715d87f8a967ac3280" translate="yes" xml:space="preserve">
          <source>This implicit use of &lt;code&gt;$_&lt;/code&gt; greatly simplifies the filter.</source>
          <target state="translated">Este uso impl&amp;iacute;cito de &lt;code&gt;$_&lt;/code&gt; simplifica enormemente el filtro.</target>
        </trans-unit>
        <trans-unit id="5b50085de4def35b6bdec8ddfe646e562a42bf85" translate="yes" xml:space="preserve">
          <source>This implicitly turns on &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; .</source>
          <target state="translated">Esto activa impl&amp;iacute;citamente la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'unicode_strings' .</target>
        </trans-unit>
        <trans-unit id="b69024702c53c81b289a2bb57c31bbc3bad62a98" translate="yes" xml:space="preserve">
          <source>This implicitly turns on &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1913f881cf8f6c8733392373df598260e9eff553" translate="yes" xml:space="preserve">
          <source>This implies, among other things, that any magic eventually carried by those variables is locally lost. In other words, saying &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; */&lt;/code&gt; will not have any effect on the internal value of the input record separator.</source>
          <target state="translated">Esto implica, entre otras cosas, que cualquier magia eventualmente llevada por esas variables se pierde localmente. En otras palabras, decir &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; */&lt;/code&gt; no tendr&amp;aacute; ning&amp;uacute;n efecto en el valor interno del separador de registros de entrada.</target>
        </trans-unit>
        <trans-unit id="42b1909506cafaa0cc94a703a39c522d8ca507d2" translate="yes" xml:space="preserve">
          <source>This implies, among other things, that any magic eventually carried by those variables is locally lost. In other words, saying &lt;code&gt;local */&lt;/code&gt; will not have any effect on the internal value of the input record separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853b46dcbc0a00c897209b2e5eda11d1bef5190a" translate="yes" xml:space="preserve">
          <source>This imports all the symbols from YourModule's &lt;code&gt;@EXPORT&lt;/code&gt; into the namespace of the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="translated">Esto importa todos los s&amp;iacute;mbolos de @EXPORT de &lt;code&gt;@EXPORT&lt;/code&gt; en el espacio de nombres de la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a144efc90828bfe698b691d8656be8a5e2096e11" translate="yes" xml:space="preserve">
          <source>This imports all the symbols from YourModule's &lt;code&gt;@EXPORT&lt;/code&gt; into the namespace of the &lt;code&gt;use&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc30f208dc0886e9e09f0ad72a7741fdb1114419" translate="yes" xml:space="preserve">
          <source>This imports only the symbols listed by the caller into their namespace. All listed symbols must be in your &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; , else an error occurs. The advanced export features of Exporter are accessed like this, but with list entries that are syntactically distinct from symbol names.</source>
          <target state="translated">Esto importa solo los s&amp;iacute;mbolos enumerados por la persona que llama en su espacio de nombres. Todos los s&amp;iacute;mbolos enumerados deben estar en su &lt;code&gt;@EXPORT&lt;/code&gt; o &lt;code&gt;@EXPORT_OK&lt;/code&gt; , de lo contrario se producir&amp;aacute; un error. Se accede a las funciones de exportaci&amp;oacute;n avanzadas de Exporter de esta manera, pero con entradas de lista que son sint&amp;aacute;cticamente distintas de los nombres de los s&amp;iacute;mbolos.</target>
        </trans-unit>
        <trans-unit id="afea1b722b6f3bdd005efaf9802f6bb5f9cce5e7" translate="yes" xml:space="preserve">
          <source>This imports only the symbols listed by the caller into their namespace. All listed symbols must be in your &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt;, else an error occurs. The advanced export features of Exporter are accessed like this, but with list entries that are syntactically distinct from symbol names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54334948064b9890996f54ddad24e2c8dcfde1a" translate="yes" xml:space="preserve">
          <source>This incantation is a bit much to remember, but Perl will display it for you if you say &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt; .</source>
          <target state="translated">Este encantamiento es demasiado para recordar, pero Perl lo mostrar&amp;aacute; si dice &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f6ca02a3e63f679a0818fa93fda109eb7890118" translate="yes" xml:space="preserve">
          <source>This incantation is a bit much to remember, but Perl will display it for you if you say &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5270d55bdd99c39c88df6b66aa86ef8a427ec941" translate="yes" xml:space="preserve">
          <source>This includes everything before the &amp;lt;title&amp;gt; opening tag including the Document type and including the opening &amp;lt;title&amp;gt; tag. The following call will set it to be a simple HTML file:</source>
          <target state="translated">Esto incluye todo lo que est&amp;aacute; antes de la etiqueta de apertura &amp;lt;title&amp;gt;, incluido el tipo de documento y la etiqueta &amp;lt;title&amp;gt; de apertura. La siguiente llamada lo configurar&amp;aacute; como un archivo HTML simple:</target>
        </trans-unit>
        <trans-unit id="343b5c0e7585a333dd6568f5785911c3539473ec" translate="yes" xml:space="preserve">
          <source>This indicates a &quot;beta&quot; release that is substantially complete, but has an elevated risk of bugs and requires additional testing. The distribution should not be installed over a stable release without an explicit request or other confirmation from a user. This release status may also be used for &quot;release candidate&quot; versions of a distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c991cc788c5d46f7b04a0e2e0cd76cdc76b3e4de" translate="yes" xml:space="preserve">
          <source>This indicates an &quot;alpha&quot; release that is under active development, but has been released for early feedback or testing and may be missing features or may have serious bugs. The distribution should not be installed over a stable release without an explicit request or other confirmation from a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648180ea592e3e8122f6f7de36a2066e615d2ead" translate="yes" xml:space="preserve">
          <source>This indicates an ordinary, &quot;final&quot; release that should be indexed by PAUSE or other indexers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4643de8eedeed9698ffe2974d9db63ab9e6ea1" translate="yes" xml:space="preserve">
          <source>This indicates how numbers should be formatted for human readability, for example the character used as the decimal point.</source>
          <target state="translated">Esto indica cómo deben formatearse los números para que sean legibles para el ser humano,por ejemplo el carácter utilizado como punto decimal.</target>
        </trans-unit>
        <trans-unit id="6005230475219b0a5021d5218cbbce15d92f7c81" translate="yes" xml:space="preserve">
          <source>This indicates that Configure is being run with a broken Korn shell (even though you think you are using a Bourne shell by using &quot;sh Configure&quot; or &quot;./Configure&quot;). The Korn shell bug has been reported to Compaq as of February 1999 but in the meanwhile, the reason ksh is being used is that you have the environment variable BIN_SH set to 'xpg4'. This causes /bin/sh to delegate its duties to /bin/posix/sh (a ksh). Unset the environment variable and rerun Configure.</source>
          <target state="translated">Esto indica que Configure se está ejecutando con una cáscara de Korn rota (aunque piense que está usando una cáscara de Bourne usando &quot;sh Configure&quot; o &quot;./Configure&quot;).El error de la cáscara Korn ha sido reportado a Compaq desde febrero de 1999,pero mientras tanto,la razón por la que se está usando ksh es que tienes la variable de entorno BIN_SH establecida en 'xpg4'.Esto hace que /bin/sh delegue sus funciones a /bin/posix/sh (un ksh).Desconecta la variable de entorno y vuelve a ejecutar Configurar.</target>
        </trans-unit>
        <trans-unit id="062f44d9692db42f54456303d55718a170b1e245" translate="yes" xml:space="preserve">
          <source>This indicates the ordering of letters for comparison and sorting. In Latin alphabets, for example, &quot;b&quot;, generally follows &quot;a&quot;.</source>
          <target state="translated">Esto indica el orden de las letras para comparar y clasificar.En los alfabetos latinos,por ejemplo,la &quot;b&quot;,generalmente sigue a la &quot;a&quot;.</target>
        </trans-unit>
        <trans-unit id="e6751de1d4a71c579b34f21fa42d3fbd6eb68764" translate="yes" xml:space="preserve">
          <source>This indicates, for example if a character is an uppercase letter.</source>
          <target state="translated">Esto indica,por ejemplo,si un personaje es una letra mayúscula.</target>
        </trans-unit>
        <trans-unit id="101fd7bbc198ec8e6a1a44073eec5c4b13e975cb" translate="yes" xml:space="preserve">
          <source>This information is extracted from the second block that is emitted by &lt;code&gt;perl -V&lt;/code&gt;, and usually looks something like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3774451696e560d0b4cade6d2971bc678079e1" translate="yes" xml:space="preserve">
          <source>This information is not available anywhere else, including &lt;code&gt;%Config&lt;/code&gt;, but it is the information that is only known to the perl binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823a07d7a67d58cd28a477488a1be20465227d53" translate="yes" xml:space="preserve">
          <source>This information is offered in good faith and in the hope that it may be of use, but is not guaranteed to be correct, up to date, or suitable for any particular purpose whatsoever. The authors accept no liability in respect of this information or its use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ba19f7444dcdb1f5fd5e30a3ff4c300dd9b51b" translate="yes" xml:space="preserve">
          <source>This information should not be considered complete; it includes possibly transient information about idiosyncrasies of some of the ports, almost all of which are in a state of constant evolution. Thus, this material should be considered a perpetual work in progress (&lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt; ).</source>
          <target state="translated">Esta informaci&amp;oacute;n no debe considerarse completa; incluye informaci&amp;oacute;n posiblemente transitoria sobre idiosincrasias de algunos de los puertos, casi todos en constante evoluci&amp;oacute;n. Por lo tanto, este material debe considerarse un trabajo en progreso perpetuo ( &lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="38a169aa69428d16b9cbc521c5975e7287809e94" translate="yes" xml:space="preserve">
          <source>This information should not be considered complete; it includes possibly transient information about idiosyncrasies of some of the ports, almost all of which are in a state of constant evolution. Thus, this material should be considered a perpetual work in progress (&lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f308a14f85f6b55bddba54f6f0dccb1fe994f0d" translate="yes" xml:space="preserve">
          <source>This inserts the contents of the default MANIFEST.SKIP file</source>
          <target state="translated">Esto inserta el contenido del archivo MANIFEST.SKIP por defecto</target>
        </trans-unit>
        <trans-unit id="a183a2a7c1e850deb76aa146e5c8c7d75a1d8b67" translate="yes" xml:space="preserve">
          <source>This inserts the contents of the specified external file</source>
          <target state="translated">Esto inserta el contenido del archivo externo especificado</target>
        </trans-unit>
        <trans-unit id="710127152df45ef23f215433723e52cbd88020a4" translate="yes" xml:space="preserve">
          <source>This install method only has the power to install the distribution if there are no dependencies in the way. To install an object along with all its dependencies, use CPAN::Shell-&amp;gt;install.</source>
          <target state="translated">Este m&amp;eacute;todo de instalaci&amp;oacute;n solo tiene el poder de instalar la distribuci&amp;oacute;n si no hay dependencias en el camino. Para instalar un objeto junto con todas sus dependencias, use CPAN :: Shell-&amp;gt; install.</target>
        </trans-unit>
        <trans-unit id="081204399b94282349e76c93ee84e633b6e3ee15" translate="yes" xml:space="preserve">
          <source>This instance of this layer supports the &quot;fast &lt;code&gt;gets&lt;/code&gt; &quot; interface. Normally set based on &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; for the class and by the existence of the function(s) in the table. However a class that normally provides that interface may need to avoid it on a particular instance. The &quot;pending&quot; layer needs to do this when it is pushed above a layer which does not support the interface. (Perl's &lt;code&gt;sv_gets()&lt;/code&gt; does not expect the streams fast &lt;code&gt;gets&lt;/code&gt; behaviour to change during one &quot;get&quot;.)</source>
          <target state="translated">Esta instancia de esta capa es compatible con el &quot;r&amp;aacute;pido &lt;code&gt;gets&lt;/code&gt; &quot; interfaz. Normalmente se establece en base a &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; para la clase y por la existencia de las funciones en la tabla. Sin embargo, una clase que normalmente proporciona esa interfaz puede necesitar evitarla en una instancia en particular. La capa &quot;pendiente&quot; necesita hacer esto cuando se coloca por encima de una capa que no admite la interfaz. (De Perl &lt;code&gt;sv_gets()&lt;/code&gt; no espera que los flujos r&amp;aacute;pida &lt;code&gt;gets&lt;/code&gt; un comportamiento a los cambios durante una &quot;obtener&quot;.)</target>
        </trans-unit>
        <trans-unit id="2d3ee171a0ea9e5033b09ded45e89dff7d3a16e0" translate="yes" xml:space="preserve">
          <source>This instance of this layer supports the &quot;fast &lt;code&gt;gets&lt;/code&gt;&quot; interface. Normally set based on &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; for the class and by the existence of the function(s) in the table. However a class that normally provides that interface may need to avoid it on a particular instance. The &quot;pending&quot; layer needs to do this when it is pushed above a layer which does not support the interface. (Perl's &lt;code&gt;sv_gets()&lt;/code&gt; does not expect the streams fast &lt;code&gt;gets&lt;/code&gt; behaviour to change during one &quot;get&quot;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3d641c3fb98c37692677f17bfddfa4c0c2f88d" translate="yes" xml:space="preserve">
          <source>This integer normally starts off at a value of &lt;code&gt;1&lt;/code&gt; when a package stash is instantiated. Calling it on packages whose stashes do not exist at all will return &lt;code&gt;0&lt;/code&gt; . If a package stash is completely deleted (not a normal occurrence, but it can happen if someone does something like &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %PkgName::&lt;/code&gt; ), the number will be reset to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; , depending on how completely the package was wiped out.</source>
          <target state="translated">Este n&amp;uacute;mero entero normalmente comienza con un valor de &lt;code&gt;1&lt;/code&gt; cuando se crea una instancia de un alijo de paquete. Llamarlo en paquetes cuyos escondites no existen en absoluto devolver&amp;aacute; &lt;code&gt;0&lt;/code&gt; . Si el alijo de un paquete se elimina por completo (no es algo normal, pero puede suceder si alguien hace algo como &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %PkgName::&lt;/code&gt; , el n&amp;uacute;mero se restablecer&amp;aacute; a &lt;code&gt;0&lt;/code&gt; o &lt;code&gt;1&lt;/code&gt; , dependiendo de qu&amp;eacute; tan completamente se haya eliminado el paquete.</target>
        </trans-unit>
        <trans-unit id="26a092c71773214e0148af04c00b7d1197971d15" translate="yes" xml:space="preserve">
          <source>This integer normally starts off at a value of &lt;code&gt;1&lt;/code&gt; when a package stash is instantiated. Calling it on packages whose stashes do not exist at all will return &lt;code&gt;0&lt;/code&gt;. If a package stash is completely deleted (not a normal occurrence, but it can happen if someone does something like &lt;code&gt;undef %PkgName::&lt;/code&gt;), the number will be reset to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;, depending on how completely the package was wiped out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc3d65756a4115c5abb43c54741c957341c1c84" translate="yes" xml:space="preserve">
          <source>This interface allows sequential retrieval from the database. See &lt;a href=&quot;dbopen&quot;&gt;dbopen&lt;/a&gt; for full details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737a7a5efcfd42959d110feeee676008fd682bf1" translate="yes" xml:space="preserve">
          <source>This interface allows sequential retrieval from the database. See &lt;a href=&quot;http://search.cpan.org/perldoc/dbopen&quot;&gt;dbopen&lt;/a&gt; for full details.</source>
          <target state="translated">Esta interfaz permite la recuperaci&amp;oacute;n secuencial de la base de datos. Consulte &lt;a href=&quot;http://search.cpan.org/perldoc/dbopen&quot;&gt;dbopen&lt;/a&gt; para obtener todos los detalles.</target>
        </trans-unit>
        <trans-unit id="cd749bb331e8a5d590f7e5603f780fdc41010317" translate="yes" xml:space="preserve">
          <source>This interface is based on the work and comments of (in no particular order): Larry Wall, Robert Sanders, Dean Roehrich, Jeff Okamoto, Anno Siegel, Thomas Neumann, Paul Marquess, Charles Bailey, myself and others.</source>
          <target state="translated">Esta interfaz se basa en el trabajo y los comentarios de (sin ningún orden en particular):Larry Wall,Robert Sanders,Dean Roehrich,Jeff Okamoto,Anno Siegel,Thomas Neumann,Paul Marquess,Charles Bailey,yo mismo y otros.</target>
        </trans-unit>
        <trans-unit id="491fa4fd719b046d8f39f03410b7b5fb6254dca4" translate="yes" xml:space="preserve">
          <source>This interface is handled slightly differently in &lt;b&gt;DB_File&lt;/b&gt;. Here is an equivalent call using &lt;b&gt;DB_File&lt;/b&gt;:</source>
          <target state="translated">Esta interfaz se maneja de forma ligeramente diferente en &lt;b&gt;DB_File&lt;/b&gt; . Aqu&amp;iacute; hay una llamada equivalente usando &lt;b&gt;DB_File&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="2be334b179b8dd94d5ef9fce8dd2b0dd67fa87fa" translate="yes" xml:space="preserve">
          <source>This interface lets you treat the DCL symbol table as a Perl associative array, in which the key of each element is the symbol name, and the value of the element is that symbol's value. Case is not significant in the key string, as DCL converts symbol names to uppercase, but it is significant in the value string. All of the usual operations on associative arrays are supported. Reading an element retrieves the current value of the symbol, assigning to it defines a new symbol (or overwrites the old value of an existing symbol), and deleting an element deletes the corresponding symbol. Setting an element to &lt;code&gt;undef&lt;/code&gt;, or &lt;code&gt;undef&lt;/code&gt;ing it directly, sets the corresponding symbol to the null string. You may also read the special keys ':GLOBAL' and ':LOCAL' to find out whether a default symbol table has been specified for this hash (see the next paragraph), or set either or these keys to specify a default symbol table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d69eea5115951977bf6e8780a64dd29c4226c4" translate="yes" xml:space="preserve">
          <source>This interpolation combines with the facts that the opening and closing parentheses are optional (except when necessary for precedence) and lists may end with an optional comma to mean that multiple commas within lists are legal syntax. The list &lt;code&gt;1,,3&lt;/code&gt; is a concatenation of two lists, &lt;code&gt;1,&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; , the first of which ends with that optional comma. &lt;code&gt;1,,3&lt;/code&gt; is &lt;code&gt;(1,),(3)&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; (And similarly for &lt;code&gt;1,,,3&lt;/code&gt; is &lt;code&gt;(1,),(,),3&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; and so on.) Not that we'd advise you to use this obfuscation.</source>
          <target state="translated">Esta interpolaci&amp;oacute;n se combina con el hecho de que los par&amp;eacute;ntesis de apertura y cierre son opcionales (excepto cuando sea necesario para la precedencia) y las listas pueden terminar con una coma opcional para indicar que varias comas dentro de las listas son sintaxis legal. La lista &lt;code&gt;1,,3&lt;/code&gt; ,, 3 es una concatenaci&amp;oacute;n de dos listas, &lt;code&gt;1,&lt;/code&gt; y &lt;code&gt;3&lt;/code&gt; , la primera de las cuales termina con esa coma opcional. &lt;code&gt;1,,3&lt;/code&gt; es &lt;code&gt;(1,),(3)&lt;/code&gt; es &lt;code&gt;1,3&lt;/code&gt; (Y de manera similar para &lt;code&gt;1,,,3&lt;/code&gt; es &lt;code&gt;(1,),(,),3&lt;/code&gt; es &lt;code&gt;1,3&lt;/code&gt; y as&amp;iacute; sucesivamente.) No es que nosotros ' Le aconsejo que utilice esta ofuscaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="30e99ba80e0a8b5fc3da6de61b068c8145e301f2" translate="yes" xml:space="preserve">
          <source>This interpolation combines with the facts that the opening and closing parentheses are optional (except when necessary for precedence) and lists may end with an optional comma to mean that multiple commas within lists are legal syntax. The list &lt;code&gt;1,,3&lt;/code&gt; is a concatenation of two lists, &lt;code&gt;1,&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt;, the first of which ends with that optional comma. &lt;code&gt;1,,3&lt;/code&gt; is &lt;code&gt;(1,),(3)&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; (And similarly for &lt;code&gt;1,,,3&lt;/code&gt; is &lt;code&gt;(1,),(,),3&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; and so on.) Not that we'd advise you to use this obfuscation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7fca560bcccd2ead2613d40d2441ab2644441f" translate="yes" xml:space="preserve">
          <source>This introduces another problem: what if you just know that your data is UTF-16, but you don't know which endianness? Byte Order Marks, or &lt;code&gt;BOM&lt;/code&gt; 's, are a solution to this. A special character has been reserved in Unicode to function as a byte order marker: the character with the code point &lt;code&gt;U+FEFF&lt;/code&gt; is the &lt;code&gt;BOM&lt;/code&gt; .</source>
          <target state="translated">Esto introduce otro problema: &amp;iquest;qu&amp;eacute; pasa si solo sabe que sus datos son UTF-16, pero no sabe qu&amp;eacute; endianidad? Las marcas de orden de bytes, o &lt;code&gt;BOM&lt;/code&gt; , son una soluci&amp;oacute;n para esto. Se ha reservado un car&amp;aacute;cter especial en Unicode para que funcione como marcador de orden de bytes: el car&amp;aacute;cter con el punto de c&amp;oacute;digo &lt;code&gt;U+FEFF&lt;/code&gt; es la &lt;code&gt;BOM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e0886084063bb71aaf0bbd76b1515a17e11d962" translate="yes" xml:space="preserve">
          <source>This introduces another problem: what if you just know that your data is UTF-16, but you don't know which endianness? Byte Order Marks, or &lt;code&gt;BOM&lt;/code&gt;'s, are a solution to this. A special character has been reserved in Unicode to function as a byte order marker: the character with the code point &lt;code&gt;U+FEFF&lt;/code&gt; is the &lt;code&gt;BOM&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d98b577e394b09ee4f02d9918217111200cab8f" translate="yes" xml:space="preserve">
          <source>This introductory document does not aim to be complete. It does not even aim to be entirely accurate. In some cases perfection has been sacrificed in the goal of getting the general idea across. You are</source>
          <target state="translated">Este documento introductorio no pretende ser completo.Ni siquiera pretende ser totalmente exacto.En algunos casos se ha sacrificado la perfección en el objetivo de transmitir la idea general.Usted es</target>
        </trans-unit>
        <trans-unit id="2b646e06b5c6dfedf386d47b899ec3f8734e765d" translate="yes" xml:space="preserve">
          <source>This is &lt;b&gt;not&lt;/b&gt; the reverse of PerlIO_exportFILE().</source>
          <target state="translated">Este &lt;b&gt;no&lt;/b&gt; es el reverso de PerlIO_exportFILE ().</target>
        </trans-unit>
        <trans-unit id="a5d69879cdfbe586062188f3d7ff676e78424d35" translate="yes" xml:space="preserve">
          <source>This is &lt;b&gt;very&lt;/b&gt; similar to previous, only the first two ops differ. This subroutine rendering is more representative, insofar as a single main program will have many subs.</source>
          <target state="translated">Esto es &lt;b&gt;muy&lt;/b&gt; similar al anterior, solo las dos primeras operaciones difieren. Esta representaci&amp;oacute;n de subrutinas es m&amp;aacute;s representativa, en la medida en que un solo programa principal tendr&amp;aacute; muchos subs.</target>
        </trans-unit>
        <trans-unit id="13a9fc12865137f8c322a100d88693c3b3008c0d" translate="yes" xml:space="preserve">
          <source>This is Perl, so it does the exact right thing. It sees that you want to push &lt;code&gt;Athens&lt;/code&gt; onto an array that doesn't exist, so it helpfully makes a new, empty, anonymous array for you, installs it into &lt;code&gt;%table&lt;/code&gt; , and then pushes &lt;code&gt;Athens&lt;/code&gt; onto it. This is called 'autovivification'--bringing things to life automatically. Perl saw that the key wasn't in the hash, so it created a new hash entry automatically. Perl saw that you wanted to use the hash value as an array, so it created a new empty array and installed a reference to it in the hash automatically. And as usual, Perl made the array one element longer to hold the new city name.</source>
          <target state="translated">Esto es Perl, por lo que hace exactamente lo correcto. Ve que desea insertar &lt;code&gt;Athens&lt;/code&gt; en una matriz que no existe, por lo que, de manera &amp;uacute;til, crea una matriz nueva, vac&amp;iacute;a y an&amp;oacute;nima, la instala en &lt;code&gt;%table&lt;/code&gt; y luego la inserta en &lt;code&gt;Athens&lt;/code&gt; . A esto se le llama &quot;autovivificaci&amp;oacute;n&quot;: hacer que las cosas cobren vida autom&amp;aacute;ticamente. Perl vio que la clave no estaba en el hash, por lo que cre&amp;oacute; una nueva entrada de hash autom&amp;aacute;ticamente. Perl vio que deseaba usar el valor hash como una matriz, por lo que cre&amp;oacute; una nueva matriz vac&amp;iacute;a e instal&amp;oacute; una referencia a ella en el hash autom&amp;aacute;ticamente. Y como de costumbre, Perl hizo que la matriz fuera un elemento m&amp;aacute;s larga para contener el nombre de la nueva ciudad.</target>
        </trans-unit>
        <trans-unit id="6952ffbc36ae125eed2db7e1e92d83483c6c0a22" translate="yes" xml:space="preserve">
          <source>This is Perl, so it does the exact right thing. It sees that you want to push &lt;code&gt;Athens&lt;/code&gt; onto an array that doesn't exist, so it helpfully makes a new, empty, anonymous array for you, installs it into &lt;code&gt;%table&lt;/code&gt;, and then pushes &lt;code&gt;Athens&lt;/code&gt; onto it. This is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d199012301aebd153320803c30f339cb29b9c3f4" translate="yes" xml:space="preserve">
          <source>This is TRUE if the image store data in network order. This means that it was created with nstore() or similar.</source>
          <target state="translated">Esto es VERDADERO si la imagen almacena los datos en orden de red.Esto significa que fue creada con nstore()o similar.</target>
        </trans-unit>
        <trans-unit id="e89180d701e5f3ba4c51e57a43f46491189b4827" translate="yes" xml:space="preserve">
          <source>This is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701541b651d14d9ce17a8309970ae17dc9d55c05" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to display Pod source as itself! Pretty Zen, huh?</source>
          <target state="translated">¡Esta es una clase de &quot;plug-in&quot; que permite a Perldoc mostrar la fuente de la vaina como tal! Bastante Zen,¿eh?</target>
        </trans-unit>
        <trans-unit id="a75770ef9b0c598ca7fde366202ade0c04715297" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Man and &lt;code&gt;groff&lt;/code&gt; for reading Pod pages.</source>
          <target state="translated">Esta es una clase de &quot;complemento&quot; que permite a Perldoc usar Pod :: Man y &lt;code&gt;groff&lt;/code&gt; para leer p&amp;aacute;ginas de Pod.</target>
        </trans-unit>
        <trans-unit id="81393ce7a71c653a02bafc9503ad7f009bece819" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Man as a formatter class.</source>
          <target state="translated">Esta es una clase &quot;plug-in&quot; que permite a Perldoc usar Pod::Man como una clase de formato.</target>
        </trans-unit>
        <trans-unit id="62907aa2e6a91bf9a0b7a6c6e963db493d7938e3" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::Checker as a &quot;formatter&quot; class (or if that is not available, then Pod::Checker), to check for errors in a given Pod file.</source>
          <target state="translated">Se trata de una clase &quot;plug-in&quot; que permite a Perldoc utilizar Pod::Simple::Checker como clase &quot;formateadora&quot; (o si no está disponible,entonces Pod::Checker),para comprobar si hay errores en un archivo Pod determinado.</target>
        </trans-unit>
        <trans-unit id="55e3a501ab6032afe89831dc532a3a24c547307d" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::RTF as a formatter class.</source>
          <target state="translated">Esta es una clase &quot;plug-in&quot; que permite a Perldoc usar Pod::Simple::RTF como clase formateadora.</target>
        </trans-unit>
        <trans-unit id="68678eb1c55adc089ba0d404634d06ee4b438a50" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::XMLOutStream as a formatter class.</source>
          <target state="translated">Esta es una clase &quot;plug-in&quot; que permite a Perldoc usar Pod::Simple::XMLOutStream como clase de formato.</target>
        </trans-unit>
        <trans-unit id="e1aa800043dc8a94d0d283dacfd5ba2b12a78539" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Text as a formatter class.</source>
          <target state="translated">Esta es una clase &quot;plug-in&quot; que permite a Perldoc usar Pod::Text como una clase de formato.</target>
        </trans-unit>
        <trans-unit id="dddce66063ab47a1230107d6a866110ade33c3fe" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Tk::Pod as a formatter class.</source>
          <target state="translated">Esta es una clase &quot;plug-in&quot; que permite a Perldoc usar Tk::Pod como una clase de formato.</target>
        </trans-unit>
        <trans-unit id="4275fe3ef141a55b62b40502070bf737ec2ea8ca" translate="yes" xml:space="preserve">
          <source>This is a &quot;postponed&quot; regular subexpression. It behaves in</source>
          <target state="translated">Esta es una subexpresión regular &quot;pospuesta&quot;.Se comporta en</target>
        </trans-unit>
        <trans-unit id="a9ec1e3198488308c3643ad69f8d075d9b8f92de" translate="yes" xml:space="preserve">
          <source>This is a 'catch-all' method which returns true if any tests have currently failed, any TODO tests unexpectedly succeeded, or any parse errors occurred.</source>
          <target state="translated">Este es un método de &quot;atrapar todo&quot; que devuelve verdadero si alguna prueba ha fallado,alguna prueba de TODO ha tenido éxito inesperadamente,o ha ocurrido algún error de análisis.</target>
        </trans-unit>
        <trans-unit id="73b5aab0cb506ed2e80764625faba5043cd5b8ed" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;autodie::exception&quot;&gt;autodie::exception&lt;/a&gt; class for failures from the &lt;code&gt;system&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b6bdcb215a6cedd90d3fc776185364f2309aa9" translate="yes" xml:space="preserve">
          <source>This is a CPAN module that has better error handling and more facilities than Open3.</source>
          <target state="translated">Este es un módulo CPAN que tiene mejor manejo de errores y más facilidades que el Open3.</target>
        </trans-unit>
        <trans-unit id="5fa45cb9d444efdc2948972c4c5c733896db4c76" translate="yes" xml:space="preserve">
          <source>This is a Map that describes all the prerequisites of the distribution. The keys are phases of activity, such as &lt;code&gt;configure&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; or &lt;code&gt;runtime&lt;/code&gt;. Values are Maps in which the keys name the type of prerequisite relationship such as &lt;code&gt;requires&lt;/code&gt;, &lt;code&gt;recommends&lt;/code&gt;, or &lt;code&gt;suggests&lt;/code&gt; and the value provides a set of prerequisite relations. The set of relations &lt;b&gt;must&lt;/b&gt; be specified as a Map of package names to version ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d2a521ae98c293152277e05794dfa3dbb364fa" translate="yes" xml:space="preserve">
          <source>This is a Perl binding for the cross-platform wxWidgets toolkit ( &lt;a href=&quot;http://www.wxwidgets.org&quot;&gt;http://www.wxwidgets.org&lt;/a&gt; ). It works under Unix, Win32 and Mac OS X, using native widgets (Gtk under Unix). The interface follows the C++ interface closely, but the documentation is a little sparse for someone who doesn't know the library, mostly just referring you to the C++ documentation.</source>
          <target state="translated">Este es un enlace de Perl para el kit de herramientas de wxWidgets multiplataforma ( &lt;a href=&quot;http://www.wxwidgets.org&quot;&gt;http://www.wxwidgets.org&lt;/a&gt; ). Funciona bajo Unix, Win32 y Mac OS X, usando widgets nativos (Gtk bajo Unix). La interfaz sigue de cerca la interfaz de C ++, pero la documentaci&amp;oacute;n es un poco escasa para alguien que no conoce la biblioteca, en su mayor&amp;iacute;a solo refiri&amp;eacute;ndote a la documentaci&amp;oacute;n de C ++.</target>
        </trans-unit>
        <trans-unit id="6e701c73247f5ad9d23c7f590ac02f35efc27631" translate="yes" xml:space="preserve">
          <source>This is a Perl-friendly wrapper around &lt;code&gt;CreateFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbed9dcb1af92fb7554f193074365e1398ba923" translate="yes" xml:space="preserve">
          <source>This is a Perl-friendly wrapper for the &lt;code&gt;GetFileSize&lt;/code&gt; (below) API call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ff8d67a4c545a99f2af8806bef343c9f8c2fa8" translate="yes" xml:space="preserve">
          <source>This is a String describing the feature. Every optional feature should provide a description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64369b0966513691c61b8897fc5c7b37a7f32789" translate="yes" xml:space="preserve">
          <source>This is a big step forward, and can give a threaded program quite a performance boost over non-threaded programs. Threads that block performing I/O, for example, won't block threads that are doing other things. Each process still has only one thread running at once, though, regardless of how many CPUs a system might have.</source>
          <target state="translated">Este es un gran paso adelante,y puede dar a un programa con hilos un gran impulso de rendimiento sobre los programas sin hilos.Los hilos que bloquean la ejecución de E/S,por ejemplo,no bloquearán los hilos que están haciendo otras cosas.Sin embargo,cada proceso sólo tiene un hilo ejecutándose a la vez,independientemente de cuántas CPU tenga el sistema.</target>
        </trans-unit>
        <trans-unit id="e1c71251d2a2ccec8dd46781a0eb70dbaafe4b05" translate="yes" xml:space="preserve">
          <source>This is a bit tricky. You can't simply write the command like this:</source>
          <target state="translated">Esto es un poco difícil.No puedes simplemente escribir el comando así:</target>
        </trans-unit>
        <trans-unit id="9988691445fe26ab65af265f99fd095c701fd79e" translate="yes" xml:space="preserve">
          <source>This is a bundled copy of &lt;a href=&quot;Object::HashBase&quot;&gt;Object::HashBase&lt;/a&gt;. This file was generated using the &lt;code&gt;/home/exodist/perl5/perlbrew/perls/main/bin/hashbase_inc.pl&lt;/code&gt; script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5816967d821cb6be38c83ea72dd77eb458d174" translate="yes" xml:space="preserve">
          <source>This is a case of convergent evolution with Joshua Pritikin's &lt;a href=&quot;../test&quot;&gt;Test&lt;/a&gt; module. I was largely unaware of its existence when I'd first written my own &lt;code&gt;ok()&lt;/code&gt; routines. This module exists because I can't figure out how to easily wedge test names into Test's interface (along with a few other problems).</source>
          <target state="translated">Este es un caso de evoluci&amp;oacute;n convergente con el m&amp;oacute;dulo &lt;a href=&quot;../test&quot;&gt;Test de&lt;/a&gt; Joshua Pritikin . En gran parte, desconoc&amp;iacute;a su existencia cuando escrib&amp;iacute; por primera vez mis propias rutinas &lt;code&gt;ok()&lt;/code&gt; . Este m&amp;oacute;dulo existe porque no puedo descifrar c&amp;oacute;mo encajar f&amp;aacute;cilmente los nombres de las pruebas en la interfaz de Test (junto con algunos otros problemas).</target>
        </trans-unit>
        <trans-unit id="54c770ad3f7a82f2269261b07541b2b2f66f381b" translate="yes" xml:space="preserve">
          <source>This is a case of convergent evolution with Joshua Pritikin's &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; module. I was largely unaware of its existence when I'd first written my own &lt;code&gt;ok()&lt;/code&gt; routines. This module exists because I can't figure out how to easily wedge test names into Test's interface (along with a few other problems).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fc5a87a825ec27b25306a412b0a1048b673845" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object and returns a reference to the new interior sequence object. It should be given two keyword arguments. The &lt;code&gt;-ldelim&lt;/code&gt; keyword indicates the corresponding left-delimiter of the interior sequence (e.g. '&amp;lt;'). The &lt;code&gt;-name&lt;/code&gt; keyword indicates the name of the corresponding interior sequence command, such as &lt;code&gt;I&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; or &lt;code&gt;C&lt;/code&gt; . The &lt;code&gt;-file&lt;/code&gt; and &lt;code&gt;-line&lt;/code&gt; keywords indicate the filename and line number corresponding to the beginning of the interior sequence. If the &lt;code&gt;$ptree&lt;/code&gt; argument is given, it must be the last argument, and it must be either string, or else an array-ref suitable for passing to &lt;b&gt;Pod::ParseTree::new&lt;/b&gt; (or it may be a reference to a Pod::ParseTree object).</source>
          <target state="translated">Este es un m&amp;eacute;todo de clase que construye un objeto &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; y devuelve una referencia al nuevo objeto de secuencia interior. Se le deben dar dos argumentos de palabra clave. La palabra clave &lt;code&gt;-ldelim&lt;/code&gt; indica el delimitador izquierdo correspondiente de la secuencia interior (por ejemplo, '&amp;lt;'). El &lt;code&gt;-name&lt;/code&gt; palabra clave indica el nombre de la correspondiente comando de secuencia de interior, tales como &lt;code&gt;I&lt;/code&gt; o &lt;code&gt;B&lt;/code&gt; o &lt;code&gt;C&lt;/code&gt; . Las palabras clave &lt;code&gt;-file&lt;/code&gt; y &lt;code&gt;-line&lt;/code&gt; indican el nombre del archivo y el n&amp;uacute;mero de l&amp;iacute;nea correspondiente al comienzo de la secuencia interior. Si el &lt;code&gt;$ptree&lt;/code&gt; se proporciona el argumento, debe ser el &amp;uacute;ltimo argumento, y debe ser una cadena, o bien una referencia de matriz adecuada para pasar a &lt;b&gt;Pod :: ParseTree :: new&lt;/b&gt; (o puede ser una referencia a un objeto Pod :: ParseTree) .</target>
        </trans-unit>
        <trans-unit id="29f55cb5b171aa91fa3174d7342b227ed1f417e9" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object and returns a reference to the new paragraph object. It may be given one or two keyword arguments. The &lt;code&gt;-text&lt;/code&gt; keyword indicates the corresponding text of the POD paragraph. The &lt;code&gt;-name&lt;/code&gt; keyword indicates the name of the corresponding POD command, such as &lt;code&gt;head1&lt;/code&gt; or &lt;code&gt;item&lt;/code&gt; (it should</source>
          <target state="translated">Este es un m&amp;eacute;todo de clase que construye un objeto &lt;code&gt;Pod::Paragraph&lt;/code&gt; y devuelve una referencia al nuevo objeto de p&amp;aacute;rrafo. Se le puede dar uno o dos argumentos de palabra clave. La palabra clave &lt;code&gt;-text&lt;/code&gt; indica el texto correspondiente del p&amp;aacute;rrafo POD. La palabra clave &lt;code&gt;-name&lt;/code&gt; indica el nombre del comando POD correspondiente, como &lt;code&gt;head1&lt;/code&gt; o &lt;code&gt;item&lt;/code&gt; (debe</target>
        </trans-unit>
        <trans-unit id="331988b0033be159e38f1f3db9e7086fd5ac78d2" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::Parse_tree&lt;/code&gt; object and returns a reference to the new parse-tree. If a single-argument is given, it must be a reference to an array, and is used to initialize the root (top) of the parse tree.</source>
          <target state="translated">Este es un m&amp;eacute;todo de clase que construye un objeto &lt;code&gt;Pod::Parse_tree&lt;/code&gt; y devuelve una referencia al nuevo &amp;aacute;rbol de an&amp;aacute;lisis. Si se proporciona un solo argumento, debe ser una referencia a una matriz y se usa para inicializar la ra&amp;iacute;z (parte superior) del &amp;aacute;rbol de an&amp;aacute;lisis.</target>
        </trans-unit>
        <trans-unit id="135e61a3e6ed1b5dcdd255926dda22779c807d83" translate="yes" xml:space="preserve">
          <source>This is a classic race condition: you take two steps to do something which must be done in one. That's why computer hardware provides an atomic test-and-set instruction. In theory, this &quot;ought&quot; to work:</source>
          <target state="translated">Es una condición de carrera clásica:das dos pasos para hacer algo que debe hacerse en uno.Es por eso que el hardware de la computadora proporciona una instrucción de prueba y ajuste atómico.En teoría,esto &quot;debería&quot; funcionar:</target>
        </trans-unit>
        <trans-unit id="06ed0aa0bcc2d08b1ae41c2e1fbf2ac9199a80b7" translate="yes" xml:space="preserve">
          <source>This is a cleanup variable for try test programs. Internal Configure use only.</source>
          <target state="translated">Esta es una variable de limpieza para los programas de prueba.Sólo para uso de la configuración interna.</target>
        </trans-unit>
        <trans-unit id="15d31d32837b2199fecd9abd8b0259d5c2027995" translate="yes" xml:space="preserve">
          <source>This is a collection of words of wisdom for a Perl porter; some of it is only useful to the pumpkin holder, but most of it applies to anyone wanting to go about Perl development.</source>
          <target state="translated">Esta es una colección de palabras de sabiduría para un porteador de Perl;algunas de ellas sólo son útiles para el porta calabazas,pero la mayor parte se aplica a cualquiera que quiera dedicarse al desarrollo de Perl.</target>
        </trans-unit>
        <trans-unit id="50e9aa2a5393c1306b4554160b04a4a7e4b9e963" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;fail()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;. This can be used to write clearer and shorter code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4ec84482d25e756661a254bc11b6d3a2c40470" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;pass()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;. You can use this if you do not plan to do anything with the context after sending the event. This helps write more clear and compact code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778151eacaa3efa499054aa859852387460cc393" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;send_ev2()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70a20942ca880b385d3fc824ba90f3bd360b8ca" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;send_event()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12519510bc7bbd2ae4104e8caa159039e5db37c2" translate="yes" xml:space="preserve">
          <source>This is a combination of the previous two forms. It is valid only when not under &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; (normal identifier rules apply when under &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt;). The form is a sigil, followed by text in braces, where the first character is any one of the characters in the range &lt;code&gt;[\x80-\xFF]&lt;/code&gt; followed by ASCII word characters up to the trailing brace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a03e08bc2123708a34ec2db4804cf0d2100751" translate="yes" xml:space="preserve">
          <source>This is a common error when trying to build perl on Solaris 2.6 with a gcc installation from Solaris 2.5 or 2.5.1. The Solaris header files changed, so you need to update your gcc installation. You can either rerun the fixincludes script from gcc or take the opportunity to update your gcc installation.</source>
          <target state="translated">Este es un error común cuando se intenta construir perl en Solaris 2.6 con una instalación gcc de Solaris 2.5 o 2.5.1.Los archivos de encabezado de Solaris cambiaron,por lo que es necesario actualizar la instalación de gcc.Puede volver a ejecutar el script fixincludes desde gcc o aprovechar la oportunidad para actualizar su instalación de gcc.</target>
        </trans-unit>
        <trans-unit id="d6d389ed280acec1d0e8a48d7b965ec940a7e391" translate="yes" xml:space="preserve">
          <source>This is a convenience wrapper around &lt;code&gt;package_versions_from_directory&lt;/code&gt; to generate a CPAN META &lt;code&gt;provides&lt;/code&gt; data structure. It takes key/value pairs. Valid option keys include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e4e2616b1e858820e63e7f00c945ce3c9f307d" translate="yes" xml:space="preserve">
          <source>This is a copy of &lt;a href=&quot;IO::Scalar&quot;&gt;IO::Scalar&lt;/a&gt; which ships with &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; to support scalar references as filehandles on Perl 5.6. Newer versions of Perl simply use &lt;code&gt;open()&lt;/code&gt;'s built in support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff129a99820711b57abb25f1b58ba7136b7e8cde" translate="yes" xml:space="preserve">
          <source>This is a difficult question to answer, and the best answer is only a guess.</source>
          <target state="translated">Es una pregunta difícil de responder,y la mejor respuesta es sólo una suposición.</target>
        </trans-unit>
        <trans-unit id="b8d839dd828060570d067675a559441bcbad521a" translate="yes" xml:space="preserve">
          <source>This is a drop in replacement for Test::Simple which you can switch to once you get the hang of basic testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01f884a06c4ddeafbc3fcceec68d66b7b226e93" translate="yes" xml:space="preserve">
          <source>This is a factory class that takes a &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; and runs it through all the registered &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s to see which one should handle the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999f0dc4cf91e26f969aecc31f8b8b85ae8a6af3" translate="yes" xml:space="preserve">
          <source>This is a factory class that takes a &lt;a href=&quot;source&quot;&gt;TAP::Parser::Source&lt;/a&gt; and runs it through all the registered &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s to see which one should handle the source.</source>
          <target state="translated">Esta es una clase de f&amp;aacute;brica que toma un &lt;a href=&quot;source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt; y lo ejecuta a trav&amp;eacute;s de todos los &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; registrados para ver cu&amp;aacute;l debe manejar la fuente.</target>
        </trans-unit>
        <trans-unit id="c43e76a8b7a7a6439251d5db4f28f61ba4f7ca79" translate="yes" xml:space="preserve">
          <source>This is a fancy bracketed character class that can be used for more readable and less error-prone classes, and to perform set operations, such as intersection. An example is</source>
          <target state="translated">Se trata de una clase de caracteres entre corchetes de fantasía que puede utilizarse para clases más legibles y menos propensas a errores,y para realizar operaciones de conjunto,como la intersección.Un ejemplo es</target>
        </trans-unit>
        <trans-unit id="bd5b0b089eff91377cede66c47419fc9845c1784" translate="yes" xml:space="preserve">
          <source>This is a fixed variant of T_HVREF that decrements the refcount appropriately when returning an HV*. Introduced in perl 5.15.4.</source>
          <target state="translated">Esta es una variante fija del T_HVREF que disminuye el recuento apropiadamente cuando se devuelve un HV*.Introducido en el perl 5.15.4.</target>
        </trans-unit>
        <trans-unit id="2afb142501471156b20b535936f7b6ddbbaafcb0" translate="yes" xml:space="preserve">
          <source>This is a fully ported Perl for OS/390 Version 2 Release 3, 5, 6, 7, 8, and 9. It may work on other versions or releases, but those are the ones we have tested it on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926e4c62112da36d18d2c1c89330bc60c9162eb2" translate="yes" xml:space="preserve">
          <source>This is a fully ported Perl for OS/390 Version 2 Release 3, 5, 6, 7, 8, and 9. It may work on other versions or releases, but those are the ones we've tested it on.</source>
          <target state="translated">Este es un Perl completamente portado para OS/390 Versión 2 Lanzamiento 3,5,6,7,8,y 9.Puede que funcione en otras versiones o lanzamientos,pero esas son las que hemos probado.</target>
        </trans-unit>
        <trans-unit id="372ffff7fde6d07d99e54e14755b9d58626070f2" translate="yes" xml:space="preserve">
          <source>This is a function which adds a string, &lt;code&gt;ptr&lt;/code&gt; , of length &lt;code&gt;len&lt;/code&gt; onto the end of the PV stored in &lt;code&gt;sv&lt;/code&gt; . The first thing we do in line 6 is make sure that the SV &lt;b&gt;has&lt;/b&gt; a valid PV, by calling the &lt;code&gt;SvPV_force&lt;/code&gt; macro to force a PV. As a side effect, &lt;code&gt;tlen&lt;/code&gt; gets set to the current value of the PV, and the PV itself is returned to &lt;code&gt;junk&lt;/code&gt; .</source>
          <target state="translated">Esta es una funci&amp;oacute;n que agrega una cadena, &lt;code&gt;ptr&lt;/code&gt; , de longitud &lt;code&gt;len&lt;/code&gt; al final del PV almacenado en &lt;code&gt;sv&lt;/code&gt; . Lo primero que hacemos en la l&amp;iacute;nea 6 es asegurarnos de que el SV &lt;b&gt;tenga&lt;/b&gt; un PV v&amp;aacute;lido, llamando a la macro &lt;code&gt;SvPV_force&lt;/code&gt; para forzar un PV. Como efecto secundario, &lt;code&gt;tlen&lt;/code&gt; se establece en el valor actual del PV y el PV en s&amp;iacute; mismo se devuelve a la &lt;code&gt;junk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="708079f015a020d71bf13eeb81d726c588386d85" translate="yes" xml:space="preserve">
          <source>This is a function which adds a string, &lt;code&gt;ptr&lt;/code&gt;, of length &lt;code&gt;len&lt;/code&gt; onto the end of the PV stored in &lt;code&gt;sv&lt;/code&gt;. The first thing we do in line 6 is make sure that the SV &lt;b&gt;has&lt;/b&gt; a valid PV, by calling the &lt;code&gt;SvPV_force&lt;/code&gt; macro to force a PV. As a side effect, &lt;code&gt;tlen&lt;/code&gt; gets set to the current value of the PV, and the PV itself is returned to &lt;code&gt;junk&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2774055b00e3419620eb5d95ca0978a88958d21c" translate="yes" xml:space="preserve">
          <source>This is a fundamental limitation of the way hashes are constructed in Perl. The error messages produced when this happens will often be quite cryptic -- in the worst case there may be none at all, and you'll only later find that something is broken.</source>
          <target state="translated">Esta es una limitación fundamental de la forma en que se construyen los hashes en Perl.Los mensajes de error que se producen cuando esto ocurre a menudo serán bastante crípticos...en el peor de los casos puede que no haya ninguno en absoluto,y sólo más tarde se encontrará que algo está roto.</target>
        </trans-unit>
        <trans-unit id="2c83f909cdae2425d7ef8f9b618e80ba6342629e" translate="yes" xml:space="preserve">
          <source>This is a generic event that lets you customize all fields in the event API. This is useful if you have need for a custom event that does not make sense as a published reusable event subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5634f9ec91b3e104474c739e05fd80458193ebf9" translate="yes" xml:space="preserve">
          <source>This is a get-or-set method for the compartment's operator mask.</source>
          <target state="translated">Este es un método de &quot;get-or-set&quot; para la máscara del operador del compartimento.</target>
        </trans-unit>
        <trans-unit id="e894d85c5e9df5228e61b20283457ef4058bfbeb" translate="yes" xml:space="preserve">
          <source>This is a good introduction and will direct you towards other man pages that may interest you.</source>
          <target state="translated">Esta es una buena introducción y te dirigirá hacia otras páginas de hombres que pueden interesarte.</target>
        </trans-unit>
        <trans-unit id="8c7d928409a2a83d36eb046953e31000e8fced30" translate="yes" xml:space="preserve">
          <source>This is a hash reference which contains a template as explained in the &lt;code&gt;SYNOPSIS&lt;/code&gt; and &lt;code&gt;Template&lt;/code&gt; section.</source>
          <target state="translated">Esta es una referencia de hash que contiene una plantilla como se explica en la secci&amp;oacute;n &lt;code&gt;SYNOPSIS&lt;/code&gt; y &lt;code&gt;Template&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abdb64e67c36b80a4a66af77ecfc2b1aa4e68e20" translate="yes" xml:space="preserve">
          <source>This is a hash used internally to track named capture groups and their offsets. The keys are the names of the buffers the values are dualvars, with the IV slot holding the number of buffers with the given name and the pv being an embedded array of I32. The values may also be contained independently in the data array in cases where named backreferences are used.</source>
          <target state="translated">Este es un hash usado internamente para rastrear grupos de captura con nombre y sus compensaciones.Las claves son los nombres de los buffers los valores son dualvars,con la ranura IV que contiene el número de buffers con el nombre dado y el pv que es una matriz incrustada de I32.Los valores también pueden estar contenidos independientemente en la matriz de datos en los casos en que se utilicen referencias retrospectivas con nombre.</target>
        </trans-unit>
        <trans-unit id="b6914fc9df9304338ddc0f7d1b0a521a431d05b1" translate="yes" xml:space="preserve">
          <source>This is a hash with all the known defines as keys. The value is either 0, which means unknown or unset, or 1, which means defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee128cd6218c9f00f0c878c04ed7c1d2ba1c0dcc" translate="yes" xml:space="preserve">
          <source>This is a hashref of module/version pairs. The version indicates the minimum version to load. If no version is provided, any version is assumed to be good enough.</source>
          <target state="translated">Este es un hashref de pares módulo/versión.La versión indica la versión mínima a cargar.Si no se proporciona ninguna versión,se asume que cualquier versión es lo suficientemente buena.</target>
        </trans-unit>
        <trans-unit id="ea245b58697360367e48479db117e287399d341e" translate="yes" xml:space="preserve">
          <source>This is a hashref registering what modules/utilities were known to fail for fetching files (mostly because they weren't installed).</source>
          <target state="translated">Este es un hashref que registra los módulos/utilidades que se sabe que fallan para recuperar archivos (principalmente porque no están instalados).</target>
        </trans-unit>
        <trans-unit id="13f36e17edc5b55eec70028ba183b328e8dbca62" translate="yes" xml:space="preserve">
          <source>This is a helper macro to avoid preprocessor issues, replaced by nothing unless under DEBUGGING, where it expands to an assert of its argument, followed by a comma (hence the comma operator). If we just used a straight assert(), we would get a comma with nothing before it when not DEBUGGING.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db9d2be56e4bd29861b900e47f6610d6d79219d" translate="yes" xml:space="preserve">
          <source>This is a helper module for &lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils::Typemaps&lt;/a&gt; for quick one-liners, specifically for inclusion of shared typemaps that live on CPAN into an XS file (see SYNOPSIS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b603fea48d1504287b31a7673d8ab99f976baa7" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.0 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7928f53e6ee2a874629878e189efee32c672b7" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.1 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9efdce05ccbe2b0c93e1405a345d20446d5db1" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.2 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f6f354bd0c338955bb1fb9445b4d1cdbc435b5" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.3 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578907e068f231060c64ecb50b7600e276be1ad5" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.4 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1fab382e0a7925a5c811854a65acd65148efbd" translate="yes" xml:space="preserve">
          <source>This is a hook called by &lt;code&gt;Test2::IPC::Driver-&amp;gt;abort()&lt;/code&gt;. This is your chance to cleanup when an abort happens. You cannot prevent the abort, but you can gracefully except it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06620991ffe068dc2736a15c53466ae907b72fa9" translate="yes" xml:space="preserve">
          <source>This is a list of cpan modules that have been known to have been broken by the upgrade at one point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a5d6041426b672058c7972e6b8efdd8d6854bf" translate="yes" xml:space="preserve">
          <source>This is a list of optionally locally applied patches. Default is an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb7a0a93db9a83c1c6303ceaf2e042280cc43c1" translate="yes" xml:space="preserve">
          <source>This is a list of questions and answers about Unicode in Perl, intended to be read after &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;.</source>
          <target state="translated">Esta es una lista de preguntas y respuestas sobre Unicode en Perl, pensada para ser le&amp;iacute;da despu&amp;eacute;s de &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36d9a4f8cf6a08db2c492aa7d56c16aa12a7c5d3" translate="yes" xml:space="preserve">
          <source>This is a little bit more complex in the case of UTF-8, see what &lt;code&gt;Perl_reg_numbered_buff_length&lt;/code&gt; does with &lt;a href=&quot;perlapi#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;.</source>
          <target state="translated">Esto es un poco m&amp;aacute;s compleja en el caso de UTF-8, ver lo que &lt;code&gt;Perl_reg_numbered_buff_length&lt;/code&gt; hace con &lt;a href=&quot;perlapi#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4901f78af354a736c130e92964e260be63c159d4" translate="yes" xml:space="preserve">
          <source>This is a macro that evaluates to a string constant of the UTF-8 bytes that define the Unicode BYTE ORDER MARK (U+FEFF) for the platform that perl is compiled on. This allows code to use a mnemonic for this character that works on both ASCII and EBCDIC platforms. &lt;code&gt;sizeof(BOM_UTF8) - 1&lt;/code&gt; can be used to get its length in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bb2f1fa60e6e4aabfb57df2cd30391606718c5" translate="yes" xml:space="preserve">
          <source>This is a macro that evaluates to a string constant of the UTF-8 bytes that define the Unicode REPLACEMENT CHARACTER (U+FFFD) for the platform that perl is compiled on. This allows code to use a mnemonic for this character that works on both ASCII and EBCDIC platforms. &lt;code&gt;sizeof(REPLACEMENT_CHARACTER_UTF8) - 1&lt;/code&gt; can be used to get its length in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ee3c54bcb807a66fe7b80e3caf8861bbb44a5c" translate="yes" xml:space="preserve">
          <source>This is a message from your shell telling you that the command 'ar' was not found. You need to check your PATH environment variable to make sure that it includes the directory with the 'ar' command. This is a common problem on Solaris, where 'ar' is in the /usr/ccs/bin/ directory.</source>
          <target state="translated">Este es un mensaje de su proyectil diciéndole que el comando 'ar' no fue encontrado.Necesitas revisar tu variable de entorno PATH para asegurarte de que incluye el directorio con el comando 'ar'.Este es un problema común en Solaris,donde 'ar' está en el directorio /usr/ccs/bin/.</target>
        </trans-unit>
        <trans-unit id="7be9582165bd5c245d33269d0775adef5b86c2d1" translate="yes" xml:space="preserve">
          <source>This is a misleadingly-named synonym for &lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt;. On ASCII-ish platforms, the name isn't misleading: the ASCII-range characters are exactly the UTF-8 invariants. But EBCDIC machines have more invariants than just the ASCII characters, so &lt;code&gt;is_invariant_string&lt;/code&gt; is preferred.</source>
          <target state="translated">Este es un sin&amp;oacute;nimo de nombre enga&amp;ntilde;oso para &lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt; . En las plataformas ASCII-ish, el nombre no es enga&amp;ntilde;oso: los caracteres del rango ASCII son exactamente los invariantes UTF-8. Pero las m&amp;aacute;quinas EBCDIC tienen m&amp;aacute;s invariantes que solo los caracteres ASCII, por &lt;code&gt;is_invariant_string&lt;/code&gt; se prefiere is_invariant_string .</target>
        </trans-unit>
        <trans-unit id="c69da4ed0205aa990de29ccffe5609edc6392c10" translate="yes" xml:space="preserve">
          <source>This is a misleadingly-named synonym for &lt;a href=&quot;#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot;&lt;/a&gt;. On ASCII-ish platforms, the name isn't misleading: the ASCII-range characters are exactly the UTF-8 invariants. But EBCDIC machines have more invariants than just the ASCII characters, so &lt;code&gt;is_utf8_invariant_string&lt;/code&gt; is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de824f4204bca39b6173554bd682eeaf59e1fe59" translate="yes" xml:space="preserve">
          <source>This is a no-op on Win32.</source>
          <target state="translated">Esto es un no-operación en Win32.</target>
        </trans-unit>
        <trans-unit id="7c97b390951ae9bd8a25bf05c714cdf4d686ebf3" translate="yes" xml:space="preserve">
          <source>This is a noop provided for completeness.</source>
          <target state="translated">Este es un noop provisto para completar.</target>
        </trans-unit>
        <trans-unit id="cad6dd9d37300229c43fc4982c7046b422a38ba9" translate="yes" xml:space="preserve">
          <source>This is a perl-friendly wrapper for the SetFilePointer API (below). &lt;code&gt;$ivOffset&lt;/code&gt; can be a 64 bit integer or &lt;code&gt;Math::BigInt&lt;/code&gt; object if your Perl doesn't have 64 bit integers. The return value is the new offset and will likewise be a 64 bit integer or a &lt;code&gt;Math::BigInt&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b98a2fdc86ae4c3444a314c0304e18f2968e2d" translate="yes" xml:space="preserve">
          <source>This is a placeholder option.</source>
          <target state="translated">Esta es una opción de marcador de posición.</target>
        </trans-unit>
        <trans-unit id="7c861f566285d766324a3adafaf95c9b329a80f7" translate="yes" xml:space="preserve">
          <source>This is a port of Perl 5.22.1, it is a fresh port and not in any way compatible with my previous ports of Perl 5.8 and 5.16.3. This means you will need to reinstall / rebuild any third party modules you have installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309f4be6a68d1ca1ce9f563923f5229fee286990" translate="yes" xml:space="preserve">
          <source>This is a ported perl for the POSIX subsystem in BS2000 VERSION OSD V3.1A or later. It may work on other versions, but we started porting and testing it with 3.1A and are currently using Version V4.0A.</source>
          <target state="translated">Este es un perl portado para el subsistema POSIX en BS2000 VERSION OSD V3.1A o posterior.Puede que funcione en otras versiones,pero empezamos a portarlo y probarlo con la 3.1A y actualmente estamos usando la versión V4.0A.</target>
        </trans-unit>
        <trans-unit id="639c8df7e83fc87480520c466044037ac91d5b6f" translate="yes" xml:space="preserve">
          <source>This is a protocol used by some firewall ftp proxies. It is used to authorise the user to send data out. If both arguments are not specified then &lt;code&gt;authorize&lt;/code&gt; uses &lt;code&gt;Net::Netrc&lt;/code&gt; to do a lookup.</source>
          <target state="translated">Este es un protocolo utilizado por algunos servidores proxy ftp de firewall. Se utiliza para autorizar al usuario a enviar datos. Si no se especifican ambos argumentos, &lt;code&gt;authorize&lt;/code&gt; utiliza &lt;code&gt;Net::Netrc&lt;/code&gt; para realizar una b&amp;uacute;squeda.</target>
        </trans-unit>
        <trans-unit id="82750308b15340e2bc5e38d801e8c14df884ca99" translate="yes" xml:space="preserve">
          <source>This is a quick reference to Perl's regular expressions. For full information see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; and &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, as well as the &lt;a href=&quot;#SEE-ALSO&quot;&gt;&quot;SEE ALSO&quot;&lt;/a&gt; section in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b9db060b8091b2af5afc80f2eb9e19755899c4" translate="yes" xml:space="preserve">
          <source>This is a quick reference to Perl's regular expressions. For full information see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; and &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, as well as the &lt;a href=&quot;#SEE-ALSO&quot;&gt;SEE ALSO&lt;/a&gt; section in this document.</source>
          <target state="translated">Esta es una referencia r&amp;aacute;pida a las expresiones regulares de Perl. Para obtener informaci&amp;oacute;n completa, consulte &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; y &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; , as&amp;iacute; como la secci&amp;oacute;n &lt;a href=&quot;#SEE-ALSO&quot;&gt;VEA TAMBI&amp;Eacute;N&lt;/a&gt; en este documento.</target>
        </trans-unit>
        <trans-unit id="d47823b6d4d1bf90c0ec374b8fb409bfdb682e4b" translate="yes" xml:space="preserve">
          <source>This is a re-implementation of stdio-like buffering written as a PerlIO layer. As such it will call whatever layer is below it for its operations, typically &lt;code&gt;:unix&lt;/code&gt; .</source>
          <target state="translated">Esta es una reimplementaci&amp;oacute;n del almacenamiento en b&amp;uacute;fer tipo stdio escrito como una capa PerlIO. Como tal, llamar&amp;aacute; a cualquier capa que est&amp;eacute; debajo de ella para sus operaciones, generalmente &lt;code&gt;:unix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c07aa2f3524b873fd324bdd6f2f6fa2ff3e120b7" translate="yes" xml:space="preserve">
          <source>This is a re-implementation of stdio-like buffering written as a PerlIO layer. As such it will call whatever layer is below it for its operations, typically &lt;code&gt;:unix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e930eeb8d1107d985a15ebeb47b4f046e00dd2" translate="yes" xml:space="preserve">
          <source>This is a real error, and the partial sequence is all we're going to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72833b07fdaaa27353877ad8c40f0425a069181" translate="yes" xml:space="preserve">
          <source>This is a reference card for people who are familiar with the C library and who want to do things the Perl way; to tell them which functions they ought to use instead of the more normal C functions.</source>
          <target state="translated">Esta es una tarjeta de referencia para las personas que están familiarizadas con la biblioteca C y que quieren hacer las cosas a la manera de Perl;para decirles qué funciones deben utilizar en lugar de las funciones C más normales.</target>
        </trans-unit>
        <trans-unit id="c471b4ac155563a00fba4ae9a0887cfc3abb5085" translate="yes" xml:space="preserve">
          <source>This is a reference to a hash of named arguments which need checking.</source>
          <target state="translated">Esto es una referencia a un hachís de argumentos con nombre que necesitan ser comprobados.</target>
        </trans-unit>
        <trans-unit id="3afd1b8fae5b72ccc5141dfe79c691921d5825d2" translate="yes" xml:space="preserve">
          <source>This is a replacement for an earlier Pod::Text module written by Tom Christiansen. It has a revamped interface, since it now uses Pod::Parser, but an interface roughly compatible with the old Pod::Text::pod2text() function is still available. Please change to the new calling convention, though.</source>
          <target state="translated">Este es un reemplazo de un módulo de texto anterior de Pod::Text escrito por Tom Christiansen.Tiene una interfaz renovada,ya que ahora usa Pod::Parser,pero una interfaz más o menos compatible con la antigua función Pod::Text::pod2text()todavía está disponible.Por favor,cambie a la nueva convención de llamadas,sin embargo.</target>
        </trans-unit>
        <trans-unit id="c47cbb12fb76c06a9104b6dcce71cb1371c44a36" translate="yes" xml:space="preserve">
          <source>This is a replacement for an earlier Pod::Text module written by Tom Christiansen. It has a revamped interface, since it now uses Pod::Simple, but an interface roughly compatible with the old Pod::Text::pod2text() function is still available. Please change to the new calling convention, though.</source>
          <target state="translated">Este es un reemplazo de un módulo de texto anterior de Pod::Text escrito por Tom Christiansen.Tiene una interfaz renovada,ya que ahora usa Pod::Simple,pero una interfaz más o menos compatible con la antigua función Pod::Text::pod2text()sigue disponible.Por favor,cambien a la nueva convención de llamadas,sin embargo.</target>
        </trans-unit>
        <trans-unit id="3b47b707c5aa2685e694887a6a732f13742fa45a" translate="yes" xml:space="preserve">
          <source>This is a runtime equivalent to &lt;code&gt;\N{...}&lt;/code&gt; .</source>
          <target state="translated">Este es un tiempo de ejecuci&amp;oacute;n equivalente a &lt;code&gt;\N{...}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7df2ed11242941585186bf8621f08062eb4ee123" translate="yes" xml:space="preserve">
          <source>This is a runtime equivalent to &lt;code&gt;\N{...}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9da988cd5eab1bf4131dbddff40049241ae791" translate="yes" xml:space="preserve">
          <source>This is a safer version of &lt;a href=&quot;#UTF8SKIP&quot;&gt;&quot;&lt;code&gt;UTF8SKIP&lt;/code&gt;&quot;&lt;/a&gt;, but still not as safe as &lt;a href=&quot;#UTF8_SAFE_SKIP&quot;&gt;&quot;&lt;code&gt;UTF8_SAFE_SKIP&lt;/code&gt;&quot;&lt;/a&gt;. This version doesn't blindly assume that the input string pointed to by &lt;code&gt;s&lt;/code&gt; is well-formed, but verifies that there isn't a NUL terminating character before the expected end of the next character in &lt;code&gt;s&lt;/code&gt;. The length &lt;code&gt;UTF8_CHK_SKIP&lt;/code&gt; returns stops just before any such NUL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a879136a0009e169d98349a2353c9b002b70d9" translate="yes" xml:space="preserve">
          <source>This is a set of four-letter (capitalized) codes from ISO 15924 such as 'Phnx' for Phoenician. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">Este es un conjunto de códigos de cuatro letras (en mayúsculas)de la ISO 15924 como 'Phnx' para el fenicio.También incluye adiciones a este conjunto incluidas en el registro de idiomas de la IANA.</target>
        </trans-unit>
        <trans-unit id="6ef813cd850a9f27ba1c4663d4e71f25b5053fb3" translate="yes" xml:space="preserve">
          <source>This is a set of three-digit numeric codes from ISO 15924 such as 115 for Phoenician.</source>
          <target state="translated">Este es un conjunto de códigos numéricos de tres dígitos de la ISO 15924 como el 115 para el fenicio.</target>
        </trans-unit>
        <trans-unit id="349f283b1feb640d3ec35d62b03e25d6ddada207" translate="yes" xml:space="preserve">
          <source>This is a set of three-letter (uppercase) codes from ISO 4217 such as EUR for Euro.</source>
          <target state="translated">Es un conjunto de códigos de tres letras (mayúsculas)de la ISO 4217 como el EUR para el Euro.</target>
        </trans-unit>
        <trans-unit id="17d4b87831fc36eb513ece10122e95f8dc8ba998" translate="yes" xml:space="preserve">
          <source>This is a short description of the purpose of the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6241a7679be2105aef445a1326e4d5af9e0ed08e" translate="yes" xml:space="preserve">
          <source>This is a short tutorial on writing a simple module with MakeMaker. It's really not that hard.</source>
          <target state="translated">Este es un breve tutorial sobre cómo escribir un módulo simple con MakeMaker.No es tan difícil.</target>
        </trans-unit>
        <trans-unit id="53100bf0748f5ba489bc4dc460d2dfa8f3afc641" translate="yes" xml:space="preserve">
          <source>This is a short way of setting &lt;code&gt;gnu_compat&lt;/code&gt;&lt;code&gt;bundling&lt;/code&gt;&lt;code&gt;permute&lt;/code&gt;&lt;code&gt;no_getopt_compat&lt;/code&gt; . With &lt;code&gt;gnu_getopt&lt;/code&gt; , command line handling should be fully compatible with GNU getopt_long().</source>
          <target state="translated">Esta es una forma corta de establecer &lt;code&gt;gnu_compat&lt;/code&gt; &lt;code&gt;bundling&lt;/code&gt; &lt;code&gt;permute&lt;/code&gt; &lt;code&gt;no_getopt_compat&lt;/code&gt; . Con &lt;code&gt;gnu_getopt&lt;/code&gt; , el manejo de la l&amp;iacute;nea de comandos deber&amp;iacute;a ser totalmente compatible con GNU getopt_long ().</target>
        </trans-unit>
        <trans-unit id="c6c30e1d8e68a2b36cd4e4515119a97629e3b7f3" translate="yes" xml:space="preserve">
          <source>This is a short way of setting &lt;code&gt;gnu_compat&lt;/code&gt;&lt;code&gt;bundling&lt;/code&gt;&lt;code&gt;permute&lt;/code&gt;&lt;code&gt;no_getopt_compat&lt;/code&gt;. With &lt;code&gt;gnu_getopt&lt;/code&gt;, command line handling should be reasonably compatible with GNU getopt_long().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af9997becadfe87d824ab8762ffccd7719bb2b4" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;end&quot;&lt;/code&gt;</source>
          <target state="translated">Este es un atajo para &lt;code&gt;$token-&amp;gt;type() eq &quot;end&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="588934f1b5f409b7ed4ee0102675e3e7a80e417d" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;start&quot;&lt;/code&gt;</source>
          <target state="translated">Este es un atajo para &lt;code&gt;$token-&amp;gt;type() eq &quot;start&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf3172ad5af1d75bb916c8179d00c2eb32b1726b" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;text&quot;&lt;/code&gt;</source>
          <target state="translated">Este es un atajo para &lt;code&gt;$token-&amp;gt;type() eq &quot;text&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14414929d404b298096e05330ae3a552582cc596" translate="yes" xml:space="preserve">
          <source>This is a shortcut method for creating a new parser object, setting the output handle to STDOUT, and then processing the specified file (or filehandle, or in-memory document). This is handy for one-liners like this:</source>
          <target state="translated">Este es un método abreviado para crear un nuevo objeto analizador,establecer el manejador de salida en STDOUT,y luego procesar el archivo especificado (o el manejador de archivo,o el documento en memoria).Esto es útil para las líneas simples como esta:</target>
        </trans-unit>
        <trans-unit id="dcc6d2562c6f7206f328c3550bdc5e8e52460de3" translate="yes" xml:space="preserve">
          <source>This is a side-effect of &lt;code&gt;$^W&lt;/code&gt; being dynamically scoped.</source>
          <target state="translated">Este es un efecto secundario de que &lt;code&gt;$^W&lt;/code&gt; tenga un alcance din&amp;aacute;mico.</target>
        </trans-unit>
        <trans-unit id="8fa6df25c130c949bab77362ff50f938867d104d" translate="yes" xml:space="preserve">
          <source>This is a simple base class used by &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; to store objects that represent the current bit of test output data from TAP (usually a single line). Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Esta es una clase base simple utilizada por &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; para almacenar objetos que representan el bit actual de datos de salida de prueba de TAP (generalmente una sola l&amp;iacute;nea). A menos que est&amp;eacute; subclasificando, probablemente no necesitar&amp;aacute; usar este m&amp;oacute;dulo directamente.</target>
        </trans-unit>
        <trans-unit id="70e0073b6d6a8609dc729e6d6d928dac9be45307" translate="yes" xml:space="preserve">
          <source>This is a simple base class used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; to store objects that represent the current bit of test output data from TAP (usually a single line). Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7185e61c4885f8a233ed21b8b5981172205d46a1" translate="yes" xml:space="preserve">
          <source>This is a simple factory class which returns a &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass representing the current bit of test data from TAP (usually a single line). It is used primarily by &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt;. Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6a517a000eee7c9d8650e790b06bace86ece1d" translate="yes" xml:space="preserve">
          <source>This is a simple factory class which returns a &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass representing the current bit of test data from TAP (usually a single line). It is used primarily by &lt;a href=&quot;grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt;. Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Esta es una clase de f&amp;aacute;brica simple que devuelve una subclase &lt;a href=&quot;result&quot;&gt;TAP :: Parser :: Result que&lt;/a&gt; representa el bit actual de datos de prueba de TAP (generalmente una sola l&amp;iacute;nea). Es utilizado principalmente por &lt;a href=&quot;grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt; . A menos que est&amp;eacute; subclasificando, probablemente no necesitar&amp;aacute; usar este m&amp;oacute;dulo directamente.</target>
        </trans-unit>
        <trans-unit id="ae7e075e46130a389abcce2b8eca77b2b0799334" translate="yes" xml:space="preserve">
          <source>This is a simple iterator base class that defines &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt;'s iterator API. Iterators are typically created from &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s.</source>
          <target state="translated">Esta es una clase base de iterador simple que define la API de iterador de &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . Los iteradores se crean normalmente a partir de &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="4069d913ee16241ecc681da22f86977bd49afb8f" translate="yes" xml:space="preserve">
          <source>This is a simple iterator base class that defines &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;'s iterator API. Iterators are typically created from &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef2b28fd5eff705f1f406ac6e66e9bba64a8d81" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for arrays of scalar content, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Este es un contenedor de iterador simple para matrices de contenido escalar, utilizado por &lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . A menos que est&amp;eacute; escribiendo un complemento o una subclase, probablemente no necesitar&amp;aacute; usar este m&amp;oacute;dulo directamente.</target>
        </trans-unit>
        <trans-unit id="b6d417eccb38d31c23ab96e3cf68e4a816b76541" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for arrays of scalar content, used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6211175f40b02f3bcb25615dc63d424f5b04b85e" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for executing external processes, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Este es un contenedor de iterador simple para ejecutar procesos externos, utilizado por &lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . A menos que est&amp;eacute; escribiendo un complemento o una subclase, probablemente no necesitar&amp;aacute; usar este m&amp;oacute;dulo directamente.</target>
        </trans-unit>
        <trans-unit id="6c2b745b6dbe4af61d1702703c27d1890df50b85" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for executing external processes, used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f74f820359ec13407ecd95ebc00861df2faa4a" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for reading from filehandles, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">Este es un contenedor de iterador simple para leer desde identificadores de archivos, utilizado por &lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt; . A menos que est&amp;eacute; escribiendo un complemento o una subclase, probablemente no necesitar&amp;aacute; usar este m&amp;oacute;dulo directamente.</target>
        </trans-unit>
        <trans-unit id="50c897102f8db883c5b03ed2150ab040040eb6e3" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for reading from filehandles, used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6d528be7b9b50f443385c12d7c3581d3c5b271" translate="yes" xml:space="preserve">
          <source>This is a simple test harness which allows tests to be run and results automatically aggregated and output to STDOUT.</source>
          <target state="translated">Se trata de un simple arnés de pruebas que permite que las pruebas se ejecuten y los resultados se agreguen automáticamente y se envíen a STDOUT.</target>
        </trans-unit>
        <trans-unit id="94c2e1c3d42721757938806d86cea256f2130297" translate="yes" xml:space="preserve">
          <source>This is a small simple module which simplifies the manipulation of @INC at compile time.</source>
          <target state="translated">Este es un pequeño y simple módulo que simplifica la manipulación del @INC en tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="9fc66897af3216d370b7d29148cefcd6ce1895da" translate="yes" xml:space="preserve">
          <source>This is a somewhat misleadingly-named synonym for &lt;a href=&quot;#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot;&lt;/a&gt;. &lt;code&gt;is_utf8_invariant_string&lt;/code&gt; is preferred, as it indicates under what conditions the string is invariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed45414649005cf46b9b142e78787c7d0efdd654" translate="yes" xml:space="preserve">
          <source>This is a standard message issued by OS/2 applications. *nix applications die in silence. It is considered to be a feature. One can easily disable this by appropriate sighandlers.</source>
          <target state="translated">Este es un mensaje estándar emitido por las aplicaciones OS/2.*Las aplicaciones de Nix mueren en silencio.Se considera una característica.Uno puede deshabilitarlo fácilmente con los dispositivos apropiados.</target>
        </trans-unit>
        <trans-unit id="ae30c10c2c1eb9a5c4373e69ebda02e4f56fd6ac" translate="yes" xml:space="preserve">
          <source>This is a static function and is defined as &lt;code&gt;STATIC S_whatever&lt;/code&gt; , and usually called within the sources as &lt;code&gt;whatever(...)&lt;/code&gt; .</source>
          <target state="translated">Esta es una funci&amp;oacute;n est&amp;aacute;tica y se define como &lt;code&gt;STATIC S_whatever&lt;/code&gt; , y generalmente se llama dentro de las fuentes como &lt;code&gt;whatever(...)&lt;/code&gt; que sea ​​(...) .</target>
        </trans-unit>
        <trans-unit id="93db2ec99a46178540e6d933d3db3e813cba4109" translate="yes" xml:space="preserve">
          <source>This is a statically linked &lt;code&gt;a.out&lt;/code&gt; -style executable. It cannot load dynamic Perl extensions. The executable supplied in binary distributions has a lot of extensions prebuilt, thus the above restriction is important only if you use custom-built extensions. This executable is a VIO application.</source>
          <target state="translated">Este es un ejecutable de estilo &lt;code&gt;a.out&lt;/code&gt; vinculado est&amp;aacute;ticamente . No puede cargar extensiones din&amp;aacute;micas de Perl. El ejecutable suministrado en distribuciones binarias tiene muchas extensiones precompiladas, por lo que la restricci&amp;oacute;n anterior es importante solo si usa extensiones personalizadas. Este ejecutable es una aplicaci&amp;oacute;n VIO.</target>
        </trans-unit>
        <trans-unit id="6050386124f32e151c85ac19e4bf7f179cc7ee17" translate="yes" xml:space="preserve">
          <source>This is a statically linked &lt;code&gt;a.out&lt;/code&gt;-style executable. It cannot load dynamic Perl extensions. The executable supplied in binary distributions has a lot of extensions prebuilt, thus the above restriction is important only if you use custom-built extensions. This executable is a VIO application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc094e72af8b9d6622201511120df9125d5e32ff" translate="yes" xml:space="preserve">
          <source>This is a string combining version, subversion and perl_patchlevel (if perl_patchlevel is non-zero). It is typically something like 'version 7 subversion 1' or 'version 7 subversion 1 patchlevel 11224' It is computed here to avoid duplication of code in</source>
          <target state="translated">Esta es una cadena que combina versión,subversión y perl_patchlevel (si perl_patchlevel es distinto de cero).Típicamente es algo como &quot;versión 7 subversión 1&quot; o &quot;versión 7 subversión 1 patchlevel 11224&quot; Se calcula aquí para evitar la duplicación de código en</target>
        </trans-unit>
        <trans-unit id="344924719b1bae83eead5b685f2904260f7cb31e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a YAML block is encountered.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si se encuentra un bloque YAML.</target>
        </trans-unit>
        <trans-unit id="cf06d3cd2a668f16a1a9ea1434ebed8459984ced" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a bail out line is encountered.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si se encuentra una l&amp;iacute;nea de rescate.</target>
        </trans-unit>
        <trans-unit id="1c79fb77a91aa29bad4fe0d58e746157c12b1af2" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a comment line is encountered.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si se encuentra una l&amp;iacute;nea de comentario.</target>
        </trans-unit>
        <trans-unit id="f5e73059f9980ac5f029fc80717ab9da6cff6341" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a plan line is encountered.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si se encuentra una l&amp;iacute;nea del plan.</target>
        </trans-unit>
        <trans-unit id="dc05d4de16b8c5b025bf96846c216318ce2e7788" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a pragma is encountered.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si se encuentra un pragma.</target>
        </trans-unit>
        <trans-unit id="173909c91c915dbe5ae4e1761f6ce3015f27ac8e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a test line is encountered.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si se encuentra una l&amp;iacute;nea de prueba.</target>
        </trans-unit>
        <trans-unit id="d99a6f5c44525e8196b8a9f8f432a4c8297fe174" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a version line is encountered.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si se encuentra una l&amp;iacute;nea de versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f9dc0dfab2b15f7dcded6106f389d289ed7b45a8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if the parser does not recognize the token line. For example:</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt; . Se devolver&amp;aacute; un token de esta clase si el analizador no reconoce la l&amp;iacute;nea del token. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ed4cd1012a41fb5a1a7060605167f8be93252008" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../simple&quot;&gt;Pod::Simple&lt;/a&gt; and inherits all its methods.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;../simple&quot;&gt;Pod :: Simple&lt;/a&gt; y hereda todos sus m&amp;eacute;todos.</target>
        </trans-unit>
        <trans-unit id="01955ea22dd8df7278eac44c179e1001f2515492" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for AIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1e32adacf76af516c3dc09a8537a0753efa981" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for DOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b129a643b34901e62e29707350a374de0680ca" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for QNX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6e1e6b486dea407e580c0e2cc2d98b00f22af0" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for VOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799835149ca383aa8b305d5ede1d01edcaa0b5f8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for the AT&amp;amp;T U/WIN UNIX on Windows environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340bbc2ea6963bffbbe6941993555f290666f4a1" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Win32&quot;&gt;ExtUtils::MM_Win32&lt;/a&gt; containing changes necessary to get MakeMaker playing nice with command.com and other Win9Xisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53215134f5cbc383cac750029f65d6450131026" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple&quot;&gt;Pod::Simple&lt;/a&gt; and inherits all its methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfa4855e0a827a4f18e0ec314a0ed35780940c3" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::Methody&quot;&gt;Pod::Simple::Methody&lt;/a&gt; and inherits all its methods. And since, that in turn is a subclass of &lt;a href=&quot;Pod::Simple&quot;&gt;Pod::Simple&lt;/a&gt;, you can use any of its methods. This means you can output to a string instead of a file, or you can parse from an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b62d9459ef18f1f9c6c03ce30dfa6880d75c6b4" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::Methody&quot;&gt;Pod::Simple::Methody&lt;/a&gt; and inherits all its methods. The implementation is entirely different than &lt;a href=&quot;Pod::Simple::HTML&quot;&gt;Pod::Simple::HTML&lt;/a&gt;, but it largely preserves the same interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70cd484c0a00bbdef362df23c2f73605109ad33" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::PullParser&quot;&gt;Pod::Simple::PullParser&lt;/a&gt; and inherits all its methods (and options).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5da5a6e2b57264768645b40fe22cfe9caefff93" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::PullParserToken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt; and inherits all its methods, and adds these methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107e81f4b7474c7feada5a435bb6963d4db8b587" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a YAML block is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc8b3158257a5918480b25430da2f5fef788dee" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a bail out line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2ba624d979718ad574a041ef9fc50c38c57f03" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a comment line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a263d9e5f13e496a231697a80b724925ad6b4f7" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a plan line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453ae9574c31155ff549670fec7286c3d2e506ee" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a pragma is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b32ff46cc448ac4738c305e0535bec308e1368" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a test line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853461077f357c4d07d54dbd6052fe8b4b619b06" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a version line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f89869b3ae635a087404851a64447d99201105d" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if the parser does not recognize the token line. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81afca9fe5e8caf5fd548b6ee9f92134f9dc21dc" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;methody&quot;&gt;Pod::Simple::Methody&lt;/a&gt; and inherits all its methods. The implementation is entirely different than &lt;a href=&quot;html&quot;&gt;Pod::Simple::HTML&lt;/a&gt;, but it largely preserves the same interface.</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;methody&quot;&gt;Pod :: Simple :: Methody&lt;/a&gt; y hereda todos sus m&amp;eacute;todos. La implementaci&amp;oacute;n es completamente diferente a &lt;a href=&quot;html&quot;&gt;Pod :: Simple :: HTML&lt;/a&gt; , pero conserva en gran medida la misma interfaz.</target>
        </trans-unit>
        <trans-unit id="5a42087b4a78a20207066122ca4141600c24be72" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;pullparser&quot;&gt;Pod::Simple::PullParser&lt;/a&gt; and inherits all its methods (and options).</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;pullparser&quot;&gt;Pod :: Simple :: PullParser&lt;/a&gt; y hereda todos sus m&amp;eacute;todos (y opciones).</target>
        </trans-unit>
        <trans-unit id="ea32c34eae791ae221ac4a3cce2869532666d30e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;pullparsertoken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt; and inherits all its methods, and adds these methods:</source>
          <target state="translated">Esta es una subclase de &lt;a href=&quot;pullparsertoken&quot;&gt;Pod :: Simple :: PullParserToken&lt;/a&gt; y hereda todos sus m&amp;eacute;todos y agrega estos m&amp;eacute;todos:</target>
        </trans-unit>
        <trans-unit id="aa9cce04d90d56b725964eab73e0fca5ac743d29" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for AIX.</source>
          <target state="translated">Esta es una subclase de ExtUtils::MM_Unix que contiene la funcionalidad para AIX.</target>
        </trans-unit>
        <trans-unit id="0d4a1a4cfdafa1cb09a4fb89fe42af2c7616286a" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for DOS.</source>
          <target state="translated">Esta es una subclase de ExtUtils::MM_Unix que contiene funcionalidad para DOS.</target>
        </trans-unit>
        <trans-unit id="1586bedfb51abdc0ca225f9c3db5c388bf3fe7c7" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for QNX.</source>
          <target state="translated">Esta es una subclase de ExtUtils::MM_Unix que contiene la funcionalidad para QNX.</target>
        </trans-unit>
        <trans-unit id="c6edbaa56530abda8144785f91c81fc02ebf9b90" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for VOS.</source>
          <target state="translated">Esta es una subclase de ExtUtils::MM_Unix que contiene la funcionalidad para VOS.</target>
        </trans-unit>
        <trans-unit id="2e5c7251645932dc8d1dc7c962cbf2e45c3f4094" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for the AT&amp;amp;T U/WIN UNIX on Windows environment.</source>
          <target state="translated">Esta es una subclase de ExtUtils :: MM_Unix que contiene funcionalidad para el entorno AT&amp;amp;T U / WIN UNIX en Windows.</target>
        </trans-unit>
        <trans-unit id="93a42e55d1097c11d0072e86d7f542b3230e6bcf" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Win32 containing changes necessary to get MakeMaker playing nice with command.com and other Win9Xisms.</source>
          <target state="translated">Esta es una subclase de ExtUtils::MM_Win32 que contiene los cambios necesarios para que MakeMaker juegue bien con command.com y otros Win9Xisms.</target>
        </trans-unit>
        <trans-unit id="e0b4c6da331b58235bc356124916aaee144c5df3" translate="yes" xml:space="preserve">
          <source>This is a subclass of Test::Builder that overrides many of the methods so that they don't output anything. It also keeps track of its own set of test results so that you can use Test::Builder based modules to perform tests on other Test::Builder based modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8a82ae7e4bcc23be8b85858941e5009748ca04" translate="yes" xml:space="preserve">
          <source>This is a suggestion to the OS to let this thread yield CPU time to other threads. What actually happens is highly dependent upon the underlying thread implementation.</source>
          <target state="translated">Esta es una sugerencia para el sistema operativo para que este hilo le dé tiempo de CPU a otros hilos.Lo que sucede en realidad depende en gran medida de la implementación del hilo subyacente.</target>
        </trans-unit>
        <trans-unit id="a6edb8217d2751ef4a763256a458a4449c4b36b5" translate="yes" xml:space="preserve">
          <source>This is a superclass for &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;-based modules. It provides a handful of common functionality and a method of getting at the underlying &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object.</source>
          <target state="translated">Esta es una superclase para m&amp;oacute;dulos basados ​​en &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; . Proporciona algunas funciones comunes y un m&amp;eacute;todo para &lt;a href=&quot;../builder&quot;&gt;acceder al&lt;/a&gt; objeto Test :: Builder subyacente .</target>
        </trans-unit>
        <trans-unit id="86dcc93cd0bd00d838160a4be7abd927dfe38deb" translate="yes" xml:space="preserve">
          <source>This is a superclass for &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt;-based modules. It provides a handful of common functionality and a method of getting at the underlying &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55903e986f0ab6ec743472dc06cf20bffa759a05" translate="yes" xml:space="preserve">
          <source>This is a synonym for (! foldEQ())</source>
          <target state="translated">Este es un sinónimo de (! foldEQ())</target>
        </trans-unit>
        <trans-unit id="53444e6b25598bcd7a21f4559d1c88a0a3357fc9" translate="yes" xml:space="preserve">
          <source>This is a synonym for (! foldEQ_locale())</source>
          <target state="translated">Este es un sinónimo de (! foldEQ_locale())</target>
        </trans-unit>
        <trans-unit id="fcc6c9fb8ee9fa78c05691f7ab1cdadcae007699" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;a href=&quot;#UTF8SKIP&quot;&gt;&quot;&lt;code&gt;UTF8SKIP&lt;/code&gt;&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e385b7e36cb7a0ced0df625995ab1044114a0c" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;a href=&quot;#my_strtod&quot;&gt;&quot;my_strtod&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a79d3b8039acc12b5d9216412b8358571878c3" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;(! foldEQ())&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d7c8aad7ed8e1a708d44906c3480702f1f0148" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;(! foldEQ_locale())&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc9211f34524643d77b88ccf3fbe69c0926ca68" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;\p{Present_In=*}&lt;/code&gt;</source>
          <target state="translated">Este es un sin&amp;oacute;nimo de &lt;code&gt;\p{Present_In=*}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef2cd0a3571852b5da355e5994ba81184e031c06" translate="yes" xml:space="preserve">
          <source>This is a template for a function suitable for the &lt;code&gt;uf_val&lt;/code&gt; field in a &lt;code&gt;ufuncs&lt;/code&gt; structure for this call. The &lt;code&gt;uf_set&lt;/code&gt; and &lt;code&gt;uf_index&lt;/code&gt; fields are irrelevant.</source>
          <target state="translated">Esta es una plantilla para una funci&amp;oacute;n adecuada para el campo &lt;code&gt;uf_val&lt;/code&gt; en una estructura &lt;code&gt;ufuncs&lt;/code&gt; para esta llamada. Los campos &lt;code&gt;uf_set&lt;/code&gt; y &lt;code&gt;uf_index&lt;/code&gt; son irrelevantes.</target>
        </trans-unit>
        <trans-unit id="9a3d72bf731a4c00183b3bacd2aaed590afe1490" translate="yes" xml:space="preserve">
          <source>This is a term used for characters occupying more than one byte.</source>
          <target state="translated">Este es un término usado para los caracteres que ocupan más de un byte.</target>
        </trans-unit>
        <trans-unit id="da67b166e535d5aab2dfd4a4bef7fa2c7dc18440" translate="yes" xml:space="preserve">
          <source>This is a useful alternative to the &lt;code&gt;verbose&lt;/code&gt; key.</source>
          <target state="translated">Esta es una alternativa &amp;uacute;til a la clave &lt;code&gt;verbose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="618f9f0ef250e390bb1ce0844593906ed698aa6a" translate="yes" xml:space="preserve">
          <source>This is a user-pragma. If you're very lucky some code you're using will know that you asked for less CPU usage or ram or fat or... we just can't know. Consult your documentation on everything you're currently using.</source>
          <target state="translated">Esto es un pragmatismo de usuario.Si tienes mucha suerte,algún código que estés usando sabrá que pediste menos uso de la CPU o de la RAM o de la grasa o...simplemente no podemos saberlo.Consulta la documentación sobre todo lo que estás usando actualmente.</target>
        </trans-unit>
        <trans-unit id="549c7013b9e1e79516da2acbe0f4cbcc8a435b4f" translate="yes" xml:space="preserve">
          <source>This is a very low-level subtest tool. This is useful for writing tools which produce subtests. This is not intended for people simply writing tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9072caacce10e18c36561023f1a3fb675f058f90" translate="yes" xml:space="preserve">
          <source>This is a very scary API function. Please do not use this unless you need to. This is here for &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; and backwards compatibility. This has you directly manipulate the hash instead of returning a new one for performance reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd131d8c6fe42fe0bb5d3832bf575939c9777d0" translate="yes" xml:space="preserve">
          <source>This is a very simple HTTP/1.1 client, designed for doing simple requests without the overhead of a large framework like &lt;a href=&quot;LWP::UserAgent&quot;&gt;LWP::UserAgent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e767810034132a2b4c4370f6987205b3130d0d" translate="yes" xml:space="preserve">
          <source>This is a work in progress. Not much progress by now :-)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65d4664502f4836edff6c3f42d466dce62c114e" translate="yes" xml:space="preserve">
          <source>This is achieved by creating separate watchdog process which spawns the specified program in a separate process session and supervises it: optionally feeds it with input, stores its exit code, stdout and stderr, terminates it in case it runs longer than specified.</source>
          <target state="translated">Esto se logra creando un proceso de vigilancia separado que genera el programa especificado en una sesión de proceso separada y lo supervisa:opcionalmente lo alimenta con la entrada,almacena su código de salida,stdout y stderr,lo termina en caso de que se ejecute más tiempo del especificado.</target>
        </trans-unit>
        <trans-unit id="bb7efcdf0700fbaadbdc0f648a8badbdf9664612" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::Checker (or Pod::Checker) subclass, and inherits all its options.</source>
          <target state="translated">Esto es en realidad una subclase de Pod::Simple::Checker (o Pod::Checker),y hereda todas sus opciones.</target>
        </trans-unit>
        <trans-unit id="e4a943560ee56b7076fa64d64bd3da44e85a30ca" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::RTF subclass, and inherits all its options.</source>
          <target state="translated">Esto es en realidad una subclase de Pod::Simple::RTF,y hereda todas sus opciones.</target>
        </trans-unit>
        <trans-unit id="92b8d72a94a8da6c54d9f33ab092eb620ca878de" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::XMLOutStream subclass, and inherits all its options.</source>
          <target state="translated">Esto es en realidad una subclase de Pod::Simple::XMLOutStream,y hereda todas sus opciones.</target>
        </trans-unit>
        <trans-unit id="8eda3362231deb25dfd89db58202611c06a3d40c" translate="yes" xml:space="preserve">
          <source>This is all very powerful, of course, and should be used only in moderation to make the world a better place.</source>
          <target state="translated">Todo esto es muy poderoso,por supuesto,y debe ser usado sólo con moderación para hacer del mundo un lugar mejor.</target>
        </trans-unit>
        <trans-unit id="a0a76465b05604833b1a2e0c25409dcb3ddad85c" translate="yes" xml:space="preserve">
          <source>This is also a no-op on Win32.</source>
          <target state="translated">Esto también es un no-operación en Win32.</target>
        </trans-unit>
        <trans-unit id="a906c4fc08f6c0cd00609aae3ea9167c7850d130" translate="yes" xml:space="preserve">
          <source>This is also helpful for the case where a package lives within a differently named file:</source>
          <target state="translated">Esto también es útil para el caso en que un paquete vive dentro de un archivo con un nombre diferente:</target>
        </trans-unit>
        <trans-unit id="783e4cc092057905b6553d7a8d798ecf7ac0db31" translate="yes" xml:space="preserve">
          <source>This is also invalid:</source>
          <target state="translated">Esto también es inválido:</target>
        </trans-unit>
        <trans-unit id="c1d7e1e2839d2377297de367eca0902f0ba00891" translate="yes" xml:space="preserve">
          <source>This is also the logical inverse of Perl_isfinite().</source>
          <target state="translated">Este es también el inverso lógico de Perl_isfinito().</target>
        </trans-unit>
        <trans-unit id="b3fd8f0524f7cd7ff14e2f99856ad3f41ff313f3" translate="yes" xml:space="preserve">
          <source>This is also used to store the name of an autoloaded subroutine in an XS AUTOLOAD routine. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;&quot;Autoloading with XSUBs&quot; in perlguts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c778320b203a5e38261d5a20fb7ed1b70340a749" translate="yes" xml:space="preserve">
          <source>This is also used to store the name of an autoloaded subroutine in an XS AUTOLOAD routine. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Autoloading with XSUBs in perlguts&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n se utiliza para almacenar el nombre de una subrutina autocargada en una rutina XS AUTOLOAD. Consulte &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Carga autom&amp;aacute;tica con XSUB en perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dda58eafcf63f43293998602056ada9565deb26" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt; . Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy seek() to reset things. The &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; doesn't change the position, but it</source>
          <target state="translated">Esto tambi&amp;eacute;n es &amp;uacute;til para aplicaciones que emulan &lt;code&gt;tail -f&lt;/code&gt; . Una vez que presiona EOF en su lectura y luego duerme por un tiempo, (probablemente) tenga que pegar una b&amp;uacute;squeda ficticia () para restablecer las cosas. La &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; no cambia la posici&amp;oacute;n, pero</target>
        </trans-unit>
        <trans-unit id="545e9279207dbe359d514df130705d9c342445f3" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt; . Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy seek() to reset things. The &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; doesn't change the position, but it</source>
          <target state="translated">Esto tambi&amp;eacute;n es &amp;uacute;til para aplicaciones que emulan &lt;code&gt;tail -f&lt;/code&gt; . Una vez que presiona EOF en su lectura y luego duerme por un tiempo, (probablemente) tenga que pegar una b&amp;uacute;squeda ficticia () para restablecer las cosas. La &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; no cambia la posici&amp;oacute;n, pero</target>
        </trans-unit>
        <trans-unit id="a52e0f7ca96a5fbe75f9443a3f0c72752cfbabc6" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt;. Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy &lt;a href=&quot;#seek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;seek&lt;/code&gt;&lt;/a&gt; to reset things. The &lt;a href=&quot;#seek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;seek&lt;/code&gt;&lt;/a&gt; doesn't change the position, but it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e213b7894a106692ed41475e921810e2f2ef96" translate="yes" xml:space="preserve">
          <source>This is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c90f14631981742f71c6736d15ae2f064f77f93" translate="yes" xml:space="preserve">
          <source>This is an (almost) drop-in replacement for the system &lt;a href=&quot;setlocale(3)&quot;&gt;&lt;code&gt;setlocale(3)&lt;/code&gt;&lt;/a&gt;, taking the same parameters, and returning the same information, except that it returns the correct underlying &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale. Regular &lt;code&gt;setlocale&lt;/code&gt; will instead return &lt;code&gt;C&lt;/code&gt; if the underlying locale has a non-dot decimal point character, or a non-empty thousands separator for displaying floating point numbers. This is because perl keeps that locale category such that it has a dot and empty separator, changing the locale briefly during the operations where the underlying one is required. &lt;code&gt;Perl_setlocale&lt;/code&gt; knows about this, and compensates; regular &lt;code&gt;setlocale&lt;/code&gt; doesn't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd976a317a3ec6f0b4a27e94361a936461d6f366" translate="yes" xml:space="preserve">
          <source>This is an (almost) drop-in replacement for the system &lt;code&gt;&lt;a href=&quot;http://man.he.net/man3/nl_langinfo&quot;&gt;nl_langinfo(3)&lt;/a&gt;&lt;/code&gt;, taking the same &lt;code&gt;item&lt;/code&gt; parameter values, and returning the same information. But it is more thread-safe than regular &lt;code&gt;nl_langinfo()&lt;/code&gt;, and hides the quirks of Perl's locale handling from your code, and can be used on systems that lack a native &lt;code&gt;nl_langinfo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6f47fb722d0ea7678e717327e932adc89f5068" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;omf&lt;/code&gt; -style executable which is dynamically linked to</source>
          <target state="translated">Este es un ejecutable estilo &lt;code&gt;omf&lt;/code&gt; que est&amp;aacute; vinculado din&amp;aacute;micamente a</target>
        </trans-unit>
        <trans-unit id="dabefce59e417333ca600bd4dd8db5a16251cbf7" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;omf&lt;/code&gt;-style executable which is dynamically linked to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d756c24376672373a010de25a2097378db4129a" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Esta es una interfaz XS para la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; de Perl .</target>
        </trans-unit>
        <trans-unit id="af496b01592b41744cf75154ff216cf0d89995f5" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Esta es una interfaz XS para la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; de Perl .</target>
        </trans-unit>
        <trans-unit id="0f224ebf8b5ff108eba2dd2634ead001d06cfcd1" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;die&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4572b24f1be3de6a2a765b1a1cc604739ba54f5" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;warn&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444ad3c538b41852126460958182410c9e29526a" translate="yes" xml:space="preserve">
          <source>This is an abstract base class for &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; handlers / handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6cd5c9b47acd371c49a0cb03b008b70d97eb82" translate="yes" xml:space="preserve">
          <source>This is an advisory and may not be called in the case where tests are being supplied to Test::Harness by an iterator.</source>
          <target state="translated">Este es un aviso y no puede ser llamado en el caso de que se suministren pruebas para Probar::Aprovechar por un iterador.</target>
        </trans-unit>
        <trans-unit id="d19e78208159ce9aa0dcbe21965a831175a968be" translate="yes" xml:space="preserve">
          <source>This is an alias to &lt;code&gt;_to_bytes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a8c80d2e7e01dabcc4dbb94c6ee5f84830f182" translate="yes" xml:space="preserve">
          <source>This is an alternate constructor for a CPAN::Meta::Requirements object. It takes a hash of module names and version requirement strings and returns a new CPAN::Meta::Requirements object. As with add_string_requirement, a version can be a Perl &quot;v-string&quot;. Optionally, you can supply a hash-reference of options, exactly as with the &lt;a href=&quot;#new&quot;&gt;&quot;new&quot;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e308dd432d69b5157566a6a8a06cea4450cd898c" translate="yes" xml:space="preserve">
          <source>This is an architecture-independent macro to copy one structure to another.</source>
          <target state="translated">Se trata de una macro independiente de la arquitectura para copiar una estructura a otra.</target>
        </trans-unit>
        <trans-unit id="142891d3e046c25d09b04f0976a954076a30931f" translate="yes" xml:space="preserve">
          <source>This is an array ref holding blacklisted modules/utilities for fetching files with.</source>
          <target state="translated">Este es un arreglo que contiene módulos/utilidades de la lista negra para buscar archivos.</target>
        </trans-unit>
        <trans-unit id="491c41877d76840e5259e347f3a17d7e2c10b8de" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output sent to STDOUT the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;&quot;full_buffer&quot;&lt;/a&gt; apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df12371f4d4ec63415fcab8f4e275a767f08fe3d" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output sent to STDOUT the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; apply.</source>
          <target state="translated">Esta es una referencia de matriz que contiene toda la salida enviada a STDOUT el comando generado. Se aplican las notas de &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65d3c0310d92313bd54c100e1d80d7755b1697de" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output the command generated. Note that buffers are only available if you have &lt;a href=&quot;IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; installed, or if your system is able to work with &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; -- see below). Otherwise, this element will be &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8a9ac748db8e604ab1a3be03c2cd4ff11d70fa" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output the command generated. Note that buffers are only available if you have &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; installed, or if your system is able to work with &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt; -- see below). Otherwise, this element will be &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Esta es una referencia de matriz que contiene toda la salida que gener&amp;oacute; el comando. Tenga en cuenta que los b&amp;uacute;feres solo est&amp;aacute;n disponibles si tiene instalado &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt; , o si su sistema puede trabajar con &lt;a href=&quot;open3&quot;&gt;IPC :: Open3&lt;/a&gt; (ver m&amp;aacute;s abajo). De lo contrario, este elemento ser&amp;aacute; &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e51b6f86f1f86cad28f13e9b83a9b2933429150" translate="yes" xml:space="preserve">
          <source>This is an arrayreference containing all the output sent to STDERR the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;&quot;full_buffer&quot;&lt;/a&gt; apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18758c49f12c582c5080bf3c3ccaff6f97f99da" translate="yes" xml:space="preserve">
          <source>This is an arrayreference containing all the output sent to STDERR the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; apply.</source>
          <target state="translated">Esta es una referencia de matriz que contiene toda la salida enviada a STDERR el comando generado. Se aplican las notas de &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35261ed11f8f6da05d71e00af479e064b704d1d3" translate="yes" xml:space="preserve">
          <source>This is an error because the region is opened by &quot;thing&quot;, and the &quot;=end&quot; tries to close &quot;hting&quot; [sic].</source>
          <target state="translated">Esto es un error porque la región se abre con &quot;cosa&quot;,y el &quot;=fin&quot; trata de cerrar &quot;hting&quot; [sic].</target>
        </trans-unit>
        <trans-unit id="8d3257f4ef00c0a5618b58e5b8a2d35eebd0a3ad" translate="yes" xml:space="preserve">
          <source>This is an experimental feature and is available from Perl 5.31.6 when enabled by &lt;code&gt;use feature 'isa'&lt;/code&gt;. It emits a warning in the &lt;code&gt;experimental::isa&lt;/code&gt; category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79a05e5e946ef4d9b0147040712489ddfe70bec" translate="yes" xml:space="preserve">
          <source>This is an experimental feature and the interface may change.</source>
          <target state="translated">Esta es una característica experimental y la interfaz puede cambiar.</target>
        </trans-unit>
        <trans-unit id="038057198b05cf435f922989a902c34a0ad8bec5" translate="yes" xml:space="preserve">
          <source>This is an experimental feature available starting in 5.18, and is subject to change as we gain field experience with it. Any attempt to use it will raise a warning, unless disabled via</source>
          <target state="translated">Esta es una característica experimental disponible a partir del 5.18,y está sujeta a cambios a medida que ganemos experiencia de campo con ella.Cualquier intento de usarla levantará una advertencia,a menos que se desactive a través de</target>
        </trans-unit>
        <trans-unit id="52d334621bd62974acc022322ae25fb3c75cd6d1" translate="yes" xml:space="preserve">
          <source>This is an extremely simple, extremely basic module for writing tests suitable for CPAN modules and other pursuits. If you wish to do more complicated testing, use the Test::More module (a drop-in replacement for this one).</source>
          <target state="translated">Este es un módulo extremadamente simple,extremadamente básico para escribir pruebas adecuadas para los módulos CPAN y otras actividades.Si desea hacer pruebas más complicadas,use el módulo Test::More (un sustituto de éste).</target>
        </trans-unit>
        <trans-unit id="3bd2379bc5006f607adb4e525b61ae72a1758dea" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;a href=&quot;#format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;). Eventually, when a &lt;a href=&quot;#write-FILEHANDLE&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; is done, the contents of &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; are written to some filehandle. You could also read &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; and then set &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Note that a format typically does one &lt;a href=&quot;#formline-PICTURE%2CLIST&quot;&gt;&lt;code&gt;formline&lt;/code&gt;&lt;/a&gt; per line of form, but the &lt;a href=&quot;#formline-PICTURE%2CLIST&quot;&gt;&lt;code&gt;formline&lt;/code&gt;&lt;/a&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;a href=&quot;#format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc193a250bf3f7bae0644ab68952c14087e27f56" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;code&gt;$^A&lt;/code&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in English). Eventually, when a &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is done, the contents of &lt;code&gt;$^A&lt;/code&gt; are written to some filehandle. You could also read &lt;code&gt;$^A&lt;/code&gt; and then set &lt;code&gt;$^A&lt;/code&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt; . Note that a format typically does one &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; per line of form, but the &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; compiler.</source>
          <target state="translated">Esta es una funci&amp;oacute;n interna utilizada por &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; s, aunque tambi&amp;eacute;n puede llamarla. &lt;a href=&quot;../perlform&quot;&gt;Formatea&lt;/a&gt; (ver perlform ) una lista de valores de acuerdo al contenido de PICTURE, colocando la salida en el acumulador de salida de formato, &lt;code&gt;$^A&lt;/code&gt; (o &lt;code&gt;$ACCUMULATOR&lt;/code&gt; en ingl&amp;eacute;s). Finalmente, cuando se realiza una &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; , el contenido de &lt;code&gt;$^A&lt;/code&gt; se escribe en alg&amp;uacute;n identificador de archivo. Tambi&amp;eacute;n puede leer &lt;code&gt;$^A&lt;/code&gt; y luego establecer &lt;code&gt;$^A&lt;/code&gt; nuevo en &lt;code&gt;&quot;&quot;&lt;/code&gt; . Tenga en cuenta que un formato normalmente hace una &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; por l&amp;iacute;nea de la forma, pero la &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; a la funci&amp;oacute;n en s&amp;iacute; no le importa cu&amp;aacute;ntas l&amp;iacute;neas nuevas est&amp;aacute;n integradas en la IMAGEN. Esto significa que los tokens &lt;code&gt;~&lt;/code&gt; y &lt;code&gt;~~&lt;/code&gt; tratan toda la IMAGEN como una sola l&amp;iacute;nea. Por lo tanto, es posible que deba utilizar varias l&amp;iacute;neas de formulario para implementar un formato de registro &amp;uacute;nico, al igual que el compilador de &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o .</target>
        </trans-unit>
        <trans-unit id="cd310f7276a510d01ce03cf67c2975df5756cafc" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;code&gt;$^A&lt;/code&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in English). Eventually, when a &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is done, the contents of &lt;code&gt;$^A&lt;/code&gt; are written to some filehandle. You could also read &lt;code&gt;$^A&lt;/code&gt; and then set &lt;code&gt;$^A&lt;/code&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt; . Note that a format typically does one &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; per line of form, but the &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; compiler.</source>
          <target state="translated">Esta es una funci&amp;oacute;n interna utilizada por &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; s, aunque tambi&amp;eacute;n puede llamarla. &lt;a href=&quot;perlform&quot;&gt;Formatea&lt;/a&gt; (ver perlform ) una lista de valores de acuerdo al contenido de PICTURE, colocando la salida en el acumulador de salida de formato, &lt;code&gt;$^A&lt;/code&gt; (o &lt;code&gt;$ACCUMULATOR&lt;/code&gt; en ingl&amp;eacute;s). Finalmente, cuando se realiza una &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; , el contenido de &lt;code&gt;$^A&lt;/code&gt; se escribe en alg&amp;uacute;n identificador de archivo. Tambi&amp;eacute;n puede leer &lt;code&gt;$^A&lt;/code&gt; y luego establecer &lt;code&gt;$^A&lt;/code&gt; nuevo en &lt;code&gt;&quot;&quot;&lt;/code&gt; . Tenga en cuenta que un formato normalmente hace una &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; por l&amp;iacute;nea de la forma, pero la &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; a la funci&amp;oacute;n en s&amp;iacute; no le importa cu&amp;aacute;ntas l&amp;iacute;neas nuevas est&amp;aacute;n integradas en la IMAGEN. Esto significa que los tokens &lt;code&gt;~&lt;/code&gt; y &lt;code&gt;~~&lt;/code&gt; tratan toda la IMAGEN como una sola l&amp;iacute;nea. Por lo tanto, es posible que deba utilizar varias l&amp;iacute;neas de formulario para implementar un formato de registro &amp;uacute;nico, al igual que el compilador de &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o .</target>
        </trans-unit>
        <trans-unit id="10fae8cad46b6999dd334a3e0cee274316414176" translate="yes" xml:space="preserve">
          <source>This is an internal module for controlling the debug level (a.k.a. trace level) of Pod::Simple. This is of interest only to Pod::Simple developers.</source>
          <target state="translated">Este es un módulo interno para controlar el nivel de depuración (también conocido como nivel de trazas)del Pod::Simple.Esto es de interés sólo para los desarrolladores de Pod::Simple.</target>
        </trans-unit>
        <trans-unit id="91ad54ddf5b339889a4d7e36baa90c6c5e3e7226" translate="yes" xml:space="preserve">
          <source>This is an internal routine that turns scalars into objects.</source>
          <target state="translated">Esta es una rutina interna que convierte los escalares en objetos.</target>
        </trans-unit>
        <trans-unit id="8cdba91d1ae6fc951cd637b385ae75d511979603" translate="yes" xml:space="preserve">
          <source>This is an introduction to the use of performance and optimization techniques which can be used with particular reference to perl programs. While many perl developers have come from other languages, and can use their prior knowledge where appropriate, there are many other people who might benefit from a few perl specific pointers. If you want the condensed version, perhaps the best advice comes from the renowned Japanese Samurai, Miyamoto Musashi, who said:</source>
          <target state="translated">Esta es una introducción al uso de las técnicas de rendimiento y optimización que se pueden utilizar con especial referencia a los programas de perl.Aunque muchos desarrolladores de perl han venido de otros lenguajes,y pueden usar sus conocimientos previos cuando sea apropiado,hay muchas otras personas que podrían beneficiarse de unos pocos punteros específicos de perl.Si quieres la versión condensada,quizás el mejor consejo viene del renombrado samurai japonés,Miyamoto Musashi,quien dijo:</target>
        </trans-unit>
        <trans-unit id="ebf9799eb4583d152aed8c96794440fad527a142" translate="yes" xml:space="preserve">
          <source>This is an obscure but effective optimization that used to live in &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; directly. Not implementing it should never result in incorrect use of typemaps, just less efficient code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1366a76cfef4230c6beae74ce2285fa6d6be94b2" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _a.</source>
          <target state="translated">Este es un viejo sinónimo de _a.</target>
        </trans-unit>
        <trans-unit id="18fb271daf0d1e76d3278d9f0bd4670eecfaa747" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _exe.</source>
          <target state="translated">Este es un viejo sinónimo de _exe.</target>
        </trans-unit>
        <trans-unit id="e951b381a4c4d96fa5592d033afe7d8fa718b152" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _o.</source>
          <target state="translated">Este es un viejo sinónimo de _o.</target>
        </trans-unit>
        <trans-unit id="cb104080e92edd7dc3925f96e9fda2c7d309ad5a" translate="yes" xml:space="preserve">
          <source>This is an old synonym for p_ in</source>
          <target state="translated">Este es un viejo sinónimo de p_en</target>
        </trans-unit>
        <trans-unit id="b5fc26e5565eebc6d4044fbce473b9eb67351b9f" translate="yes" xml:space="preserve">
          <source>This is an optimal representation of a failed assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4cfcf0ffea37b688372b80ff163b43d18f9321" translate="yes" xml:space="preserve">
          <source>This is an optimal representation of a passing assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff524bb64d56edc3bbefa9dc9ce6f39390a4745" translate="yes" xml:space="preserve">
          <source>This is an unnecessary synonym for &lt;a href=&quot;#SvUVX&quot;&gt;&quot;SvUVX&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d749cd3a1da6fa9f5e91de2edcf596acd57750" translate="yes" xml:space="preserve">
          <source>This is an upper limit on the amount of memory that &lt;code&gt;Tie::File&lt;/code&gt; will consume at any time while managing the file. This is used for two things: managing the</source>
          <target state="translated">Este es un l&amp;iacute;mite superior en la cantidad de memoria que &lt;code&gt;Tie::File&lt;/code&gt; consumir&amp;aacute; en cualquier momento mientras administra el archivo. Esto se usa para dos cosas: administrar el</target>
        </trans-unit>
        <trans-unit id="50601fd9eec31dfdb13471caa9bb11bc5c6a291d" translate="yes" xml:space="preserve">
          <source>This is another step where the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant. The RE engine scans the string from left to right and converts it into a finite automaton.</source>
          <target state="translated">Este es otro paso en el que la presencia del modificador &lt;code&gt;/x&lt;/code&gt; es relevante. El motor RE escanea la cadena de izquierda a derecha y la convierte en un aut&amp;oacute;mata finito.</target>
        </trans-unit>
        <trans-unit id="6bc6e3e8d1b2d61b10ef0d4362b29339c92de71f" translate="yes" xml:space="preserve">
          <source>This is bad because splice is already O(N), and since you do it N times, you just invented a quadratic algorithm; that is, O(N**2). This does not scale, although Perl is so efficient that you probably won't notice this until you have rather largish arrays.</source>
          <target state="translated">Esto es malo porque el empalme ya es O(N),y como lo haces N veces,acabas de inventar un algoritmo cuadrático;es decir,O(N**2).Esto no escala,aunque Perl es tan eficiente que probablemente no lo notarás hasta que tengas arreglos más bien grandes.</target>
        </trans-unit>
        <trans-unit id="3c8339d12c8a36725299f222df00f24cfd8f69bf" translate="yes" xml:space="preserve">
          <source>This is basically shorthand for saying:</source>
          <target state="translated">Esto es básicamente una forma de decir:</target>
        </trans-unit>
        <trans-unit id="df105f720cfd558cf78bf5414610fa1937dfed89" translate="yes" xml:space="preserve">
          <source>This is because math with overloaded operators follows the first (dominating) operand, and the operation of that is called and returns thus the result. So, Math::BigInt::bdiv() will always return a Math::BigInt, regardless whether the result should be a Math::BigFloat or the second operant is one.</source>
          <target state="translated">Esto se debe a que las matemáticas con operadores sobrecargados siguen al primer operando (dominante),y la operación de éste se llama y devuelve así el resultado.Así,Math::BigInt::bdiv()siempre devolverá un Math::BigInt,independientemente de si el resultado debe ser un Math::BigFloat o el segundo operando es uno.</target>
        </trans-unit>
        <trans-unit id="9d0c7a7cdf189de0cf4679b172df320157dc1c04" translate="yes" xml:space="preserve">
          <source>This is because named subroutines are created at compile time so their lexical variables get assigned to the parent lexicals from the first execution of the parent block. If a parent scope is entered a second time, its lexicals are created again, while the nested subs still reference the old ones.</source>
          <target state="translated">Esto se debe a que las subrutinas con nombre se crean en tiempo de compilación para que sus variables léxicas se asignen a los léxicos padres desde la primera ejecución del bloque padre.Si se introduce un ámbito padre por segunda vez,sus léxicos se crean de nuevo,mientras que las subrutinas anidadas siguen haciendo referencia a los antiguos.</target>
        </trans-unit>
        <trans-unit id="c5db892d6d5c6549aeb31514ada7ecd4f892effe" translate="yes" xml:space="preserve">
          <source>This is best demonstrated by example. Normally copy-on-write will prevent the substitution from operator from using this hack, but if you can craft a string for which copy-on-write is not possible, you can see it in play. In the current implementation, the final byte of a string buffer is used as a copy-on-write reference count. If the buffer is not big enough, then copy-on-write is skipped. First have a look at an empty string:</source>
          <target state="translated">Esto se demuestra mejor con el ejemplo.Normalmente la copia en escritura evitará que el operador sustituto utilice este hack,pero si puedes crear una cadena para la cual la copia en escritura no es posible,puedes verla en juego.En la implementación actual,el último byte de una memoria intermedia para cadenas se utiliza como un recuento de referencia de copia en escritura.Si el búfer no es lo suficientemente grande,entonces se omite la copia sobre escritura.Primero eche un vistazo a una cadena vacía:</target>
        </trans-unit>
        <trans-unit id="110ec42eab0899b77be520515c85d69e76f3210b" translate="yes" xml:space="preserve">
          <source>This is best explained using the following example:</source>
          <target state="translated">Esto se explica mejor con el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="f18232fd55c0dd0336666ad63ee77513a795d985" translate="yes" xml:space="preserve">
          <source>This is called &lt;b&gt;AFTER&lt;/b&gt; your event has been passed to the formatter. This should normally return undef, only change this if your event should cause the test to exit immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d13eb30802d08c5a4630281699a434fbfa155eb" translate="yes" xml:space="preserve">
          <source>This is called &lt;b&gt;BEFORE&lt;/b&gt; your event is passed to the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d099fbd21a2722c14b492d9b8d41121c1c7ad0" translate="yes" xml:space="preserve">
          <source>This is called after the event has been sent to the formatter in order to ensure the event is seen and understood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccb22d8b75566be2249f3211df19f165abb3a07" translate="yes" xml:space="preserve">
          <source>This is called an &quot;array slice&quot;.</source>
          <target state="translated">Esto se llama una &quot;rebanada de la matriz&quot;.</target>
        </trans-unit>
        <trans-unit id="891aecbf1a8602556b6b3c6e2627cb164d6eebbc" translate="yes" xml:space="preserve">
          <source>This is called at the end of a lexical scope, just after unwinding the stack.</source>
          <target state="translated">Se llama así al final del léxico,justo después de desenrollar la pila.</target>
        </trans-unit>
        <trans-unit id="7256e74371eb8bec49de48cf27c3c7d965b76d10" translate="yes" xml:space="preserve">
          <source>This is called at the end of a lexical scope, just before unwinding the stack.</source>
          <target state="translated">Esto se llama al final del léxico,justo antes de desenrollar la pila.</target>
        </trans-unit>
        <trans-unit id="39c51821499fb79c1bf1a7b16255cbfad901f488" translate="yes" xml:space="preserve">
          <source>This is called by -&amp;gt;new to initialize newly-constructed language handles. If you define an init method in your class, remember that it's usually considered a good idea to call $lh-&amp;gt;SUPER::init in it (presumably at the beginning), so that all classes get a chance to initialize a new object however they see fit.</source>
          <target state="translated">Esto es llamado por -&amp;gt; new para inicializar identificadores de lenguaje reci&amp;eacute;n construidos. Si define un m&amp;eacute;todo init en su clase, recuerde que generalmente se considera una buena idea llamar a $ lh-&amp;gt; SUPER :: init en &amp;eacute;l (presumiblemente al principio), para que todas las clases tengan la oportunidad de inicializar un nuevo objeto. ellos lo ven oportuno.</target>
        </trans-unit>
        <trans-unit id="e4805289702db36154b2249d52aefe1a17a7d5f2" translate="yes" xml:space="preserve">
          <source>This is called by send after it does any IPC handling. You can use this to bypass the IPC process, but in general you should avoid using this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b963d05b2faeedd3e7684268626d977cadc59512" translate="yes" xml:space="preserve">
          <source>This is called in the parent process when it is complete and waiting for all child processes and threads to complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9664c006f22f51b95f420aa8dd1316340a796c" translate="yes" xml:space="preserve">
          <source>This is called just after starting a new lexical scope. Note that Perl code like</source>
          <target state="translated">Esto se llama justo después de empezar un nuevo ámbito léxico.Tengan en cuenta que el código Perl como</target>
        </trans-unit>
        <trans-unit id="1b4b72a19d24ff4c03ca59dfaf92e37705fe82d9" translate="yes" xml:space="preserve">
          <source>This is called just before starting to compile an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;
FILE&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, after the eval has been set up.</source>
          <target state="translated">Esto se llama justo antes de comenzar a compilar una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , despu&amp;eacute;s de que se haya configurado la eval.</target>
        </trans-unit>
        <trans-unit id="e905c8b1f7afa99e8dea0f4bbd692d727b21d405" translate="yes" xml:space="preserve">
          <source>This is called just before starting to compile an &lt;code&gt;eval STRING&lt;/code&gt;, &lt;code&gt;do FILE&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt;, after the eval has been set up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bc4c621adbf8f868c20e693d52ccd14e7f8bee" translate="yes" xml:space="preserve">
          <source>This is called just like any other method, with the object as the first argument. It does not receive any additional arguments. However, the &lt;code&gt;$_[0]&lt;/code&gt; variable will be read-only in the destructor, so you cannot assign a value to it.</source>
          <target state="translated">Esto se llama como cualquier otro m&amp;eacute;todo, con el objeto como primer argumento. No recibe argumentos adicionales. Sin embargo, la variable &lt;code&gt;$_[0]&lt;/code&gt; ser&amp;aacute; de solo lectura en el destructor, por lo que no puede asignarle un valor.</target>
        </trans-unit>
        <trans-unit id="a2a0ca9ad6271402577255f9f1a63a32921a68ca" translate="yes" xml:space="preserve">
          <source>This is called when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; occurs. See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below.</source>
          <target state="translated">Esto se llama cuando ocurre el &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; . Vea &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The Untie Gotcha a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e84adc942d2fd7506d95b14fe0cd63bb7b960df2" translate="yes" xml:space="preserve">
          <source>This is called when &lt;code&gt;untie&lt;/code&gt; occurs. See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&quot;The &lt;code&gt;untie&lt;/code&gt; Gotcha&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85277e9fbb24fb6a920480ff94a71d2b7d6a947a" translate="yes" xml:space="preserve">
          <source>This is called when a stash is assigned to a new location in the symbol table.</source>
          <target state="translated">Se llama así cuando se asigna un alijo a una nueva ubicación en la tabla de símbolos.</target>
        </trans-unit>
        <trans-unit id="89a93e1f017cbb5b7b2446a6eb7bdd8163601a7e" translate="yes" xml:space="preserve">
          <source>This is called when a stash is deleted from the symbol table.</source>
          <target state="translated">Se llama así cuando se elimina un alijo de la tabla de símbolos.</target>
        </trans-unit>
        <trans-unit id="b2997f38c0b7e9990683c7e251969c88bfd04c59" translate="yes" xml:space="preserve">
          <source>This is called when the hash is evaluated in scalar context, and in 5.28 onwards, by &lt;code&gt;keys&lt;/code&gt; in boolean context. In order to mimic the behaviour of untied hashes, this method must return a value which when used as boolean, indicates whether the tied hash is considered empty. If this method does not exist, perl will make some educated guesses and return true when the hash is inside an iteration. If this isn't the case, FIRSTKEY is called, and the result will be a false value if FIRSTKEY returns the empty list, true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92909fe70994d8eb483f136285b4a0530d9ad33d" translate="yes" xml:space="preserve">
          <source>This is called when the hash is evaluated in scalar context. In order to mimic the behaviour of untied hashes, this method should return a false value when the tied hash is considered empty. If this method does not exist, perl will make some educated guesses and return true when the hash is inside an iteration. If this isn't the case, FIRSTKEY is called, and the result will be a false value if FIRSTKEY returns the empty list, true otherwise.</source>
          <target state="translated">Se denomina así cuando el hachís se evalúa en un contexto escalar.Con el fin de imitar el comportamiento de los hashes desatados,este método debe devolver un valor falso cuando el hash atado se considera vacío.Si este método no existe,Perl hará algunas conjeturas educadas y devolverá verdadero cuando el hash esté dentro de una iteración.Si no es así,se llama a FIRSTKEY,y el resultado será un valor falso si FIRSTKEY devuelve la lista vacía,verdadero en caso contrario.</target>
        </trans-unit>
        <trans-unit id="75a78a913b495a7f524d17a56a48057715c5e55f" translate="yes" xml:space="preserve">
          <source>This is caused by the fact that a block by itself acts as a loop that executes once, see &lt;a href=&quot;#Basic-BLOCKs&quot;&gt;&quot;Basic BLOCKs&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b19ffb80b780fe42418c60b4b551943190ef11" translate="yes" xml:space="preserve">
          <source>This is caused by the fact that a block by itself acts as a loop that executes once, see &lt;a href=&quot;#Basic-BLOCKs&quot;&gt;Basic BLOCKs&lt;/a&gt;.</source>
          <target state="translated">Esto se debe al hecho de que un bloque por s&amp;iacute; mismo act&amp;uacute;a como un bucle que se ejecuta una vez, consulte &lt;a href=&quot;#Basic-BLOCKs&quot;&gt;BLOQUES B&amp;aacute;sicos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52af186e7022d7cef4d799cfdb6b5d984aef07fe" translate="yes" xml:space="preserve">
          <source>This is commonly used to suppress the creation of man pages. MAN3PODS takes a hash ref not a string, but the above worked by accident in old versions of MakeMaker.</source>
          <target state="translated">Esto se utiliza comúnmente para suprimir la creación de páginas de hombre.MAN3PODS toma un hash ref no una cadena,pero lo anterior funcionó por accidente en las viejas versiones de MakeMaker.</target>
        </trans-unit>
        <trans-unit id="e5f528c0702057989be1850bcd519b0dfbd35566" translate="yes" xml:space="preserve">
          <source>This is complete documentation about all aspects of references. For a shorter, tutorial introduction to just the essential features, see &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;.</source>
          <target state="translated">Esta es una documentaci&amp;oacute;n completa sobre todos los aspectos de las referencias. Para una introducci&amp;oacute;n tutorial m&amp;aacute;s corta a las caracter&amp;iacute;sticas esenciales, vea &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49ca539e3859d247b8a2739f333e60f8db59abef" translate="yes" xml:space="preserve">
          <source>This is completely general, but the most computationally expensive strategy. Choose one or the other character set and transform to that for every sort comparision. Here's a complete example that transforms to ASCII sort order:</source>
          <target state="translated">Esto es completamente general,pero es la estrategia más costosa desde el punto de vista computacional.Elegir uno u otro conjunto de caracteres y transformarse a eso para cada tipo de comparación.Aquí hay un ejemplo completo que se transforma al orden de clasificación ASCII:</target>
        </trans-unit>
        <trans-unit id="53bdad63238a05204a8a287f80428f65796d2cf9" translate="yes" xml:space="preserve">
          <source>This is completely general, but the most computationally expensive strategy. Choose one or the other character set and transform to that for every sort comparison. Here's a complete example that transforms to ASCII sort order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94195eae88e55c65702824bf560045165c39578d" translate="yes" xml:space="preserve">
          <source>This is converted to a tree similar to this one:</source>
          <target state="translated">Esto se convierte en un árbol similar a este:</target>
        </trans-unit>
        <trans-unit id="6748d7a69c27bb3281328ef679799289a62c1105" translate="yes" xml:space="preserve">
          <source>This is currently supported by pod2text (Pod::Text), pod2man (Pod::Man), and any other pod2xxx or Pod::Xxxx translators that use Pod::Parser 1.093 or later, or Pod::Tree 1.02 or later.</source>
          <target state="translated">Esto está actualmente soportado por pod2text (Pod::Texto),pod2man (Pod::Hombre),y cualquier otro traductor pod2xxx o Pod::Xxxx que use Pod::Parser 1.093 o posterior,o Pod::Árbol 1.02 o posterior.</target>
        </trans-unit>
        <trans-unit id="34e3a39567aab8112767c4a4aa9742d8df037b43" translate="yes" xml:space="preserve">
          <source>This is different from finding out the package an object is blessed into, which might not be the current package. For that, use &lt;code&gt;blessed&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt;, part of the Standard Library since Perl 5.8:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593812f69db240f293446ffb5751455ff8815826" translate="yes" xml:space="preserve">
          <source>This is different from finding out the package an object is blessed into, which might not be the current package. For that, use &lt;code&gt;blessed&lt;/code&gt; from &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;, part of the Standard Library since Perl 5.8:</source>
          <target state="translated">Esto es diferente de averiguar el paquete en el que se ha bendecido un objeto, que podr&amp;iacute;a no ser el paquete actual. Para eso, use &lt;code&gt;blessed&lt;/code&gt; de &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; , parte de la biblioteca est&amp;aacute;ndar desde Perl 5.8:</target>
        </trans-unit>
        <trans-unit id="fb97ecda4c6d5be858b3ffd4a4b01f62707feb1c" translate="yes" xml:space="preserve">
          <source>This is different than printing the array without the interpolation:</source>
          <target state="translated">Esto es diferente a imprimir la matriz sin la interpolación:</target>
        </trans-unit>
        <trans-unit id="2e89efe08d07d2fc445ecb0a49388c2db1540bc9" translate="yes" xml:space="preserve">
          <source>This is disabled by default.</source>
          <target state="translated">Esto está desactivado por defecto.</target>
        </trans-unit>
        <trans-unit id="a9b83c7f438982c73dfeaa8ce24f6687d2ff66f7" translate="yes" xml:space="preserve">
          <source>This is discussed in more detail in &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;; see the entry on</source>
          <target state="translated">Esto se discute con m&amp;aacute;s detalle en &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; ; ver la entrada en</target>
        </trans-unit>
        <trans-unit id="d40247f5c8bc9b3099a9637c357fd1f201252c74" translate="yes" xml:space="preserve">
          <source>This is documented because it is used by &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt;, but it's not intended for general consumption. May be removed at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fae6a858b50aa10f361d29a97f6c807c02664b" translate="yes" xml:space="preserve">
          <source>This is documented in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;, and although it's not the easiest thing to read, it does work. In each of these examples, we call the function inside the braces used to dereference a reference. If we have more than one return value, we can construct and dereference an anonymous array. In this case, we call the function in list context.</source>
          <target state="translated">Esto est&amp;aacute; documentado en &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; , y aunque no es lo m&amp;aacute;s f&amp;aacute;cil de leer, funciona. En cada uno de estos ejemplos, llamamos a la funci&amp;oacute;n dentro de las llaves utilizadas para desreferenciar una referencia. Si tenemos m&amp;aacute;s de un valor de retorno, podemos construir y desreferenciar una matriz an&amp;oacute;nima. En este caso, llamamos a la funci&amp;oacute;n en contexto de lista.</target>
        </trans-unit>
        <trans-unit id="cc9f74e233591efd345d524b870503e793053031" translate="yes" xml:space="preserve">
          <source>This is done by using hostname lookup and the &lt;code&gt;local_netmask&lt;/code&gt; entry in the configuration data.</source>
          <target state="translated">Esto se hace mediante la b&amp;uacute;squeda de nombre de host y la entrada &lt;code&gt;local_netmask&lt;/code&gt; en los datos de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="454855df818209bc8493bdfbab3f2ca7ae6dfdc7" translate="yes" xml:space="preserve">
          <source>This is done for a breakpoint in the current file.</source>
          <target state="translated">Esto se hace para un punto de ruptura en el archivo actual.</target>
        </trans-unit>
        <trans-unit id="c9cb4520228cecded3e0a1cfc382595df81ccf66" translate="yes" xml:space="preserve">
          <source>This is done primarily to avoid the problems Test::Builder had by exposing its singleton. We do not want anyone to replace this singleton, rebless it, or directly muck with its internals. If you need to do something and cannot because of the restrictions placed here, then please report it as an issue. If possible, we will create a way for you to implement your functionality without exposing things that should not be exposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a47be7db788c450b66cdea2d395c9b71203ef53" translate="yes" xml:space="preserve">
          <source>This is due to a bug in the C library's printf routine. printf(&quot;'%e'&quot;, 0. ) produces '0.000000e+0', but ANSI requires '0.000000e+00'. QNX has acknowledged the bug.</source>
          <target state="translated">Esto se debe a un error en la rutina de impresión de la biblioteca C.printf(&quot;'%e'&quot;,0.)produce &quot;0.000000e+0&quot;,pero ANSI requiere &quot;0.000000e+00&quot;.QNX ha reconocido el error.</target>
        </trans-unit>
        <trans-unit id="71e4fa6fb5f00ffdde6cecd71fb22bb161db5777" translate="yes" xml:space="preserve">
          <source>This is due to the performance optimisation of using &lt;code&gt;MULTICALL&lt;/code&gt; for the code block, which means that fresh SVs do not get allocated for each call to the block. Instead, the same SV is re-assigned for each iteration, and all the closures will share the value seen on the final iteration.</source>
          <target state="translated">Esto se debe a la optimizaci&amp;oacute;n del rendimiento de usar &lt;code&gt;MULTICALL&lt;/code&gt; para el bloque de c&amp;oacute;digo, lo que significa que no se asignan SV nuevos para cada llamada al bloque. En cambio, se reasigna el mismo SV para cada iteraci&amp;oacute;n, y todos los cierres compartir&amp;aacute;n el valor visto en la iteraci&amp;oacute;n final.</target>
        </trans-unit>
        <trans-unit id="50a12de62b1d872f1cb83dc14807dc4865d7fade" translate="yes" xml:space="preserve">
          <source>This is easier that you might expect if you realise that all the &lt;code&gt;IO::Compress::*&lt;/code&gt; objects are derived from &lt;code&gt;IO::File&lt;/code&gt; and that all the &lt;code&gt;IO::Uncompress::*&lt;/code&gt; modules can read from an &lt;code&gt;IO::File&lt;/code&gt; filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447f198b012c8346529f18f6ac62c32d7efbbdb9" translate="yes" xml:space="preserve">
          <source>This is elaborately and painstakingly described in the</source>
          <target state="translated">Esto se describe de forma elaborada y meticulosa en la</target>
        </trans-unit>
        <trans-unit id="821291d0776e9b5b0d39c1a20f26c0a1d006ccf3" translate="yes" xml:space="preserve">
          <source>This is enabled by default.</source>
          <target state="translated">Esto está habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="05dc6a6637a3cd1c406048840a442a226332304e" translate="yes" xml:space="preserve">
          <source>This is equivalent to putting &lt;code&gt;?:&lt;/code&gt; at the beginning of every capturing group:</source>
          <target state="translated">Esto es equivalente a poner &lt;code&gt;?:&lt;/code&gt; Al comienzo de cada grupo de captura:</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">Esto equivale al siguiente código:</target>
        </trans-unit>
        <trans-unit id="db66d69de876b62af8e4e583ee35fa7336ce738e" translate="yes" xml:space="preserve">
          <source>This is especially handy for the handles that Perl has already opened for you.</source>
          <target state="translated">Esto es especialmente útil para las manijas que Perl ya ha abierto para usted.</target>
        </trans-unit>
        <trans-unit id="f8d05739ccb676f898da1bfecdf838eee060521a" translate="yes" xml:space="preserve">
          <source>This is especially noticeable in scripts like Makefiles and test suites, which often assume &lt;code&gt;/&lt;/code&gt; as a path separator for subdirectories.</source>
          <target state="translated">Esto es especialmente notable en scripts como Makefiles y suites de prueba, que a menudo asumen &lt;code&gt;/&lt;/code&gt; como un separador de ruta para subdirectorios.</target>
        </trans-unit>
        <trans-unit id="55e960bba2c8937bb3441980100a3402c2c9ceb2" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; again, which has the effect of changing their error messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f527eac137b06210e13666ef8269894d061c4071" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again, which has the effect of changing their error messages:</source>
          <target state="translated">Esto es especialmente significativo, dado que los ganchos &lt;code&gt;__DIE__&lt;/code&gt; pueden llamar a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; nuevamente, lo que tiene el efecto de cambiar sus mensajes de error:</target>
        </trans-unit>
        <trans-unit id="e72ff779e72b05ba7f524c22b987a33b6ce734c7" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again, which has the effect of changing their error messages:</source>
          <target state="translated">Esto es especialmente significativo, dado que los ganchos &lt;code&gt;__DIE__&lt;/code&gt; pueden llamar a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; nuevamente, lo que tiene el efecto de cambiar sus mensajes de error:</target>
        </trans-unit>
        <trans-unit id="881721fff940bf0d898fd3674c7f0d11e0a2ff4e" translate="yes" xml:space="preserve">
          <source>This is especially true if trying to catch &lt;code&gt;SIGALRM&lt;/code&gt; in a thread. To handle alarms in threads, set up a signal handler in the main thread, and then use &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;&quot;THREAD SIGNALLING&quot;&lt;/a&gt; to relay the signal to the thread:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818858cb9601e6ed62390539756668bab6bf2c4d" translate="yes" xml:space="preserve">
          <source>This is especially true if trying to catch &lt;code&gt;SIGALRM&lt;/code&gt; in a thread. To handle alarms in threads, set up a signal handler in the main thread, and then use &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING&lt;/a&gt; to relay the signal to the thread:</source>
          <target state="translated">Esto es especialmente cierto si se intenta capturar &lt;code&gt;SIGALRM&lt;/code&gt; en un hilo. Para manejar alarmas en subprocesos, configure un manejador de se&amp;ntilde;ales en el subproceso principal, y luego use &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALING&lt;/a&gt; para transmitir la se&amp;ntilde;al al subproceso:</target>
        </trans-unit>
        <trans-unit id="3baa440856e5960eab1aef2ecf34be88a790df5d" translate="yes" xml:space="preserve">
          <source>This is essentially a helper to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6dde33455dcaab484709ef3e2e047ba6858d2a" translate="yes" xml:space="preserve">
          <source>This is essentially a linear encoding of a nondeterministic finite-state machine (aka syntax charts or &quot;railroad normal form&quot; in parsing technology).</source>
          <target state="translated">Se trata esencialmente de una codificación lineal de una máquina no determinista de estados finitos (también conocida como gráficos de sintaxis o &quot;forma normal de ferrocarril&quot; en la tecnología de análisis sintáctico).</target>
        </trans-unit>
        <trans-unit id="c2c33667b47416ed635e9db2747270d43c9fb79e" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to</source>
          <target state="translated">Esto es exactamente equivalente a</target>
        </trans-unit>
        <trans-unit id="2888d5ca02740e184f93a1ad103d7f0d59cf4bf3" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to writing &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt; . You may see this idiom in the wild combined with a call to &lt;code&gt;can&lt;/code&gt; :</source>
          <target state="translated">Esto es exactamente equivalente a escribir &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt; . Puede ver este modismo en la naturaleza combinado con una llamada a &lt;code&gt;can&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0addd03d3f0285338de29174c6b972eb46d8e3c5" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to writing &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt;. You may see this idiom in the wild combined with a call to &lt;code&gt;can&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0020f4d9923684685bbbcf57921ec11fb0aac1" translate="yes" xml:space="preserve">
          <source>This is exactly the problem the</source>
          <target state="translated">Este es exactamente el problema que el</target>
        </trans-unit>
        <trans-unit id="1323ae3621b03444ef40592d920a99e3788e04fe" translate="yes" xml:space="preserve">
          <source>This is exactly the same as:</source>
          <target state="translated">Esto es exactamente lo mismo que:</target>
        </trans-unit>
        <trans-unit id="5350516b52a22254c5df97eb2c2d9b4520e43a69" translate="yes" xml:space="preserve">
          <source>This is fairly secure because &lt;code&gt;/\w+/&lt;/code&gt; doesn't normally match shell metacharacters, nor are dot, dash, or at going to mean something special to the shell. Use of &lt;code&gt;/.+/&lt;/code&gt; would have been insecure in theory because it lets everything through, but Perl doesn't check for that. The lesson is that when untainting, you must be exceedingly careful with your patterns. Laundering data using regular expression is the</source>
          <target state="translated">Esto es bastante seguro porque &lt;code&gt;/\w+/&lt;/code&gt; normalmente no coincide con los metacaracteres del shell, ni tampoco el punto, el gui&amp;oacute;n o al significan algo especial para el shell. El uso de &lt;code&gt;/.+/&lt;/code&gt; habr&amp;iacute;a sido inseguro en teor&amp;iacute;a porque deja pasar todo, pero Perl no lo comprueba. La lecci&amp;oacute;n es que cuando no se mancha, debe tener mucho cuidado con sus patrones. El lavado de datos utilizando expresiones regulares es el</target>
        </trans-unit>
        <trans-unit id="4d2e8c2e8c603b9443a2fa3515b87175734dfedd" translate="yes" xml:space="preserve">
          <source>This is faster than using the &lt;b&gt;-exec&lt;/b&gt; switch of</source>
          <target state="translated">Esto es m&amp;aacute;s r&amp;aacute;pido que usar el &lt;b&gt;modificador -exec&lt;/b&gt; de</target>
        </trans-unit>
        <trans-unit id="9163849a1830b363f8878e26cd69e4bcbea10076" translate="yes" xml:space="preserve">
          <source>This is fine for systems programming when sendmail is known to be available. But it is not fine for many non-Unix systems, and even some Unix systems that may not have sendmail installed. If a portable solution is needed, see the various distributions on CPAN that deal with it. &lt;a href=&quot;Mail::Mailer&quot;&gt;&lt;code&gt;Mail::Mailer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;Mail::Send&quot;&gt;&lt;code&gt;Mail::Send&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;MailTools&lt;/code&gt; distribution are commonly used, and provide several mailing methods, including &lt;code&gt;mail&lt;/code&gt;, &lt;code&gt;sendmail&lt;/code&gt;, and direct SMTP (via &lt;a href=&quot;Net::SMTP&quot;&gt;&lt;code&gt;Net::SMTP&lt;/code&gt;&lt;/a&gt;) if a mail transfer agent is not available. &lt;a href=&quot;Mail::Sendmail&quot;&gt;&lt;code&gt;Mail::Sendmail&lt;/code&gt;&lt;/a&gt; is a standalone module that provides simple, platform-independent mailing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa28f8ff665fed944de016ad1db63136902800f" translate="yes" xml:space="preserve">
          <source>This is fine for systems programming when sendmail is known to be available. But it is not fine for many non-Unix systems, and even some Unix systems that may not have sendmail installed. If a portable solution is needed, see the various distributions on CPAN that deal with it. &lt;code&gt;Mail::Mailer&lt;/code&gt; and &lt;code&gt;Mail::Send&lt;/code&gt; in the &lt;code&gt;MailTools&lt;/code&gt; distribution are commonly used, and provide several mailing methods, including &lt;code&gt;mail&lt;/code&gt; , &lt;code&gt;sendmail&lt;/code&gt; , and direct SMTP (via &lt;code&gt;Net::SMTP&lt;/code&gt; ) if a mail transfer agent is not available. &lt;code&gt;Mail::Sendmail&lt;/code&gt; is a standalone module that provides simple, platform-independent mailing.</source>
          <target state="translated">Esto est&amp;aacute; bien para la programaci&amp;oacute;n de sistemas cuando se sabe que sendmail est&amp;aacute; disponible. Pero no est&amp;aacute; bien para muchos sistemas que no son Unix, e incluso algunos sistemas Unix que pueden no tener sendmail instalado. Si se necesita una soluci&amp;oacute;n port&amp;aacute;til, consulte las diversas distribuciones en CPAN que se ocupan de ella. &lt;code&gt;Mail::Mailer&lt;/code&gt; y &lt;code&gt;Mail::Send&lt;/code&gt; en la distribuci&amp;oacute;n de &lt;code&gt;MailTools&lt;/code&gt; se utilizan com&amp;uacute;nmente y proporcionan varios m&amp;eacute;todos de env&amp;iacute;o, incluidos &lt;code&gt;mail&lt;/code&gt; , &lt;code&gt;sendmail&lt;/code&gt; y SMTP directo (a trav&amp;eacute;s de &lt;code&gt;Net::SMTP&lt;/code&gt; ) si no hay un agente de transferencia de correo disponible. &lt;code&gt;Mail::Sendmail&lt;/code&gt; es un m&amp;oacute;dulo independiente que proporciona env&amp;iacute;o de correo sencillo e independiente de la plataforma.</target>
        </trans-unit>
        <trans-unit id="3aabced6833bcc3911383da0e252138fb5ec6985" translate="yes" xml:space="preserve">
          <source>This is fine if you are just looking for a single character. However, if you are trying to count multiple character substrings within a larger string, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; won't work. What you can do is wrap a while() loop around a global pattern match. For example, let's count negative integers:</source>
          <target state="translated">Esto est&amp;aacute; bien si solo busca un solo car&amp;aacute;cter. Sin embargo, si est&amp;aacute; intentando contar varias subcadenas de caracteres dentro de una cadena m&amp;aacute;s grande, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; no funcionar&amp;aacute;. Lo que puede hacer es envolver un bucle while () alrededor de una coincidencia de patr&amp;oacute;n global. Por ejemplo, contemos enteros negativos:</target>
        </trans-unit>
        <trans-unit id="03d778e077bb45a64c448d2b3e047900fa7a45f9" translate="yes" xml:space="preserve">
          <source>This is fine if you are just looking for a single character. However, if you are trying to count multiple character substrings within a larger string, &lt;code&gt;tr///&lt;/code&gt; won't work. What you can do is wrap a while() loop around a global pattern match. For example, let's count negative integers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe90dbc3c5695d7e2fdf0f285c383fc23541d231" translate="yes" xml:space="preserve">
          <source>This is for Test2 API and related packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfd669832389228af06dec1239a8521733d9cc4" translate="yes" xml:space="preserve">
          <source>This is for backwards compatibility, and may be deprecated in the future.</source>
          <target state="translated">Esto es para la compatibilidad hacia atrás,y puede ser desaprobado en el futuro.</target>
        </trans-unit>
        <trans-unit id="0e1feb67b0818a9b1deb572f5e23a9f9edab3c53" translate="yes" xml:space="preserve">
          <source>This is for clustering, not capturing; it groups subexpressions like &quot;()&quot;, but doesn't make backreferences as &quot;()&quot; does. So</source>
          <target state="translated">Esto es para agrupar,no para capturar;agrupa subexpresiones como &quot;()&quot;,pero no hace retro-referencias como lo hace &quot;()&quot;.Así que</target>
        </trans-unit>
        <trans-unit id="04947ad410e88320dbe79a5cb81a4af421f2255b" translate="yes" xml:space="preserve">
          <source>This is for clustering, not capturing; it groups subexpressions like &lt;code&gt;&quot;()&quot;&lt;/code&gt;, but doesn't make backreferences as &lt;code&gt;&quot;()&quot;&lt;/code&gt; does. So</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0c739b12ea8f303fae64c2fc3f585b7a17c56e" translate="yes" xml:space="preserve">
          <source>This is for heuristics which attempt to create directory structures that mirror those of the installed perl.</source>
          <target state="translated">Esto es para los heurísticos que intentan crear estructuras de directorio que reflejen las del perl instalado.</target>
        </trans-unit>
        <trans-unit id="f8b7de1b28f0c9aa17d5f75d5f2141f8c81f40ef" translate="yes" xml:space="preserve">
          <source>This is for unsigned integers. It is equivalent to using T_UV but explicitly casts the variable to type &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; . The default type for &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; is T_UV.</source>
          <target state="translated">Esto es para enteros sin signo. Es equivalente a usar T_UV, pero convierte expl&amp;iacute;citamente la variable para que escriba &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; . El tipo predeterminado para &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; sin firmar es T_UV.</target>
        </trans-unit>
        <trans-unit id="5749c6a5070ee50c1f99db6f471f9cdfac379662" translate="yes" xml:space="preserve">
          <source>This is for unsigned integers. It is equivalent to using T_UV but explicitly casts the variable to type &lt;code&gt;unsigned int&lt;/code&gt;. The default type for &lt;code&gt;unsigned int&lt;/code&gt; is T_UV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f20cedd41a4e00c24f8fc66e090f062e1c8652" translate="yes" xml:space="preserve">
          <source>This is free software. You may modify and/or redistribute this code under the same terms as Perl 5.10 itself, or, at your option, any later version of Perl 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223ca8fc8e06498b8700fcaf3a5b924a9287e801" translate="yes" xml:space="preserve">
          <source>This is free software; you can redistribute it and/or modify it under the same terms as the Perl 5 programming language system itself.</source>
          <target state="translated">Este es un software libre;puedes redistribuirlo y/o modificarlo bajo los mismos términos que el propio sistema del lenguaje de programación Perl 5.</target>
        </trans-unit>
        <trans-unit id="b876192e43b0c3f007bf98e622b2f335f00b0f03" translate="yes" xml:space="preserve">
          <source>This is functionally identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; function for suspending the execution of the current for process for certain number of seconds, see &lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;. There is one significant difference, however: &lt;code&gt;POSIX::sleep()&lt;/code&gt; returns the number of &lt;b&gt;unslept&lt;/b&gt; seconds, while the &lt;code&gt;CORE::sleep()&lt;/code&gt; returns the number of slept seconds.</source>
          <target state="translated">Esto es funcionalmente id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para suspender la ejecuci&amp;oacute;n de la corriente para el proceso durante un cierto n&amp;uacute;mero de segundos, ver &lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt; . Sin embargo, hay una diferencia significativa: &lt;code&gt;POSIX::sleep()&lt;/code&gt; devuelve el n&amp;uacute;mero de segundos sin &lt;b&gt;dormir&lt;/b&gt; , mientras que &lt;code&gt;CORE::sleep()&lt;/code&gt; devuelve el n&amp;uacute;mero de segundos dormidos.</target>
        </trans-unit>
        <trans-unit id="bbf2660e26252d7fe7043cdc5fb90594bfb18a79" translate="yes" xml:space="preserve">
          <source>This is functionally identical to Perl's builtin &lt;code&gt;sleep()&lt;/code&gt; function for suspending the execution of the current for process for certain number of seconds, see &lt;a href=&quot;perlfunc#sleep&quot;&gt;&quot;sleep&quot; in perlfunc&lt;/a&gt;. There is one significant difference, however: &lt;code&gt;POSIX::sleep()&lt;/code&gt; returns the number of &lt;b&gt;unslept&lt;/b&gt; seconds, while the &lt;code&gt;CORE::sleep()&lt;/code&gt; returns the number of slept seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb4b681258fa0233585a271cede9e357d7bbce9" translate="yes" xml:space="preserve">
          <source>This is generally meant to be called from inside Bracket Notation (which is discussed later), as in</source>
          <target state="translated">Por lo general,esto se llama desde el interior de la notación de corchetes (de la que se hablará más adelante),como en</target>
        </trans-unit>
        <trans-unit id="487a457dae8e51eb07ff40b59ced8f82c47ea01f" translate="yes" xml:space="preserve">
          <source>This is generally not recommended, but large testing systems often have weird internal needs.</source>
          <target state="translated">Por lo general,esto no se recomienda,pero los grandes sistemas de prueba suelen tener necesidades internas extrañas.</target>
        </trans-unit>
        <trans-unit id="abeb233860c7acca6119cb787cba71a4bde24872" translate="yes" xml:space="preserve">
          <source>This is grandfathered (for \1 to \9) for the RHS of a substitute to avoid shocking the &lt;b&gt;sed&lt;/b&gt; addicts, but it's a dirty habit to get into. That's because in PerlThink, the righthand side of an &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; is a double-quoted string. &lt;code&gt;\1&lt;/code&gt; in the usual double-quoted string means a control-A. The customary Unix meaning of &lt;code&gt;\1&lt;/code&gt; is kludged in for &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;. However, if you get into the habit of doing that, you get yourself into trouble if you then add an &lt;code&gt;/e&lt;/code&gt; modifier.</source>
          <target state="translated">Esto est&amp;aacute; protegido (de \ 1 a \ 9) para el RHS de un sustituto para evitar escandalizar a los adictos a &lt;b&gt;sed&lt;/b&gt; , pero es un h&amp;aacute;bito sucio. Eso es porque en PerlThink, el lado derecho de una &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; es una cadena entre comillas dobles. &lt;code&gt;\1&lt;/code&gt; en la cadena habitual entre comillas dobles significa un control-A. El significado habitual de Unix de &lt;code&gt;\1&lt;/code&gt; se modifica para &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; . Sin embargo, si adquiere el h&amp;aacute;bito de hacerlo, se mete en problemas si luego agrega un modificador &lt;code&gt;/e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f03f0363c9fb43987481968ea231e7a1a5d22aaa" translate="yes" xml:space="preserve">
          <source>This is grandfathered (for \1 to \9) for the RHS of a substitute to avoid shocking the &lt;b&gt;sed&lt;/b&gt; addicts, but it's a dirty habit to get into. That's because in PerlThink, the righthand side of an &lt;code&gt;s///&lt;/code&gt; is a double-quoted string. &lt;code&gt;\1&lt;/code&gt; in the usual double-quoted string means a control-A. The customary Unix meaning of &lt;code&gt;\1&lt;/code&gt; is kludged in for &lt;code&gt;s///&lt;/code&gt;. However, if you get into the habit of doing that, you get yourself into trouble if you then add an &lt;code&gt;/e&lt;/code&gt; modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b17cc705ed9e94610433e56fe234d47d65c2826" translate="yes" xml:space="preserve">
          <source>This is handy for output formats that don't have anything quite like an &quot;S&amp;lt;...&amp;gt;&quot; code, but which do have a code for non-breaking space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33e8e516c4662a8793090c4f24cce78089ad98d" translate="yes" xml:space="preserve">
          <source>This is handy when you want to do a list assignment in a Boolean context, because most list functions return a null list when finished, which when assigned produces a 0, which is interpreted as FALSE.</source>
          <target state="translated">Esto es útil cuando se quiere hacer una asignación de lista en un contexto booleano,porque la mayoría de las funciones de lista devuelven una lista nula al terminar,que cuando se asigna produce un 0,que se interpreta como FALSO.</target>
        </trans-unit>
        <trans-unit id="260dc37b9db5709300e390ddfe39e24b64c85308" translate="yes" xml:space="preserve">
          <source>This is here for backwards compatibility only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2cfb1906a45c414c7c96fc609271f7955af896" translate="yes" xml:space="preserve">
          <source>This is how it works now:</source>
          <target state="translated">Así es como funciona ahora:</target>
        </trans-unit>
        <trans-unit id="57a7770321f001633ec82b62ab1060f627617660" translate="yes" xml:space="preserve">
          <source>This is how you add a global init callback. Global callbacks happen for every context for any hub or stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5549f5f96f9ae515ac59159e1ec8e9b00ca6c3" translate="yes" xml:space="preserve">
          <source>This is how you add a global release callback. Global callbacks happen for every context for any hub or stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b14ec31d0ca231ad81e0d297fc944474a8c2ffd" translate="yes" xml:space="preserve">
          <source>This is how you add a release callback for all contexts created for a given hub. These callbacks will not run for other hubs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bd6a385ed391a50e1e6dfd6905efadad76fde5" translate="yes" xml:space="preserve">
          <source>This is how you add an init callback for all contexts created for a given hub. These callbacks will not run for other hubs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571f913a0d93b0bc29621a81946f5e000acc80d1" translate="yes" xml:space="preserve">
          <source>This is how you add release callbacks directly to a context. The callback will &lt;b&gt;ALWAYS&lt;/b&gt; be added to the context that gets returned, it does not matter if a new one is generated, or if an existing one is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b45755b9a2299dd81f964dd03d663b8bf8ee2f" translate="yes" xml:space="preserve">
          <source>This is how you specify an init hook that will only run if your call to &lt;code&gt;context()&lt;/code&gt; generates a new context. The callback will be ignored if &lt;code&gt;context()&lt;/code&gt; is returning an existing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbdb31e7c27bacbcb7fe1d4ef14ea6d653940f1" translate="yes" xml:space="preserve">
          <source>This is identical in operation to directories(), except that it includes all the intermediate directories back up to the specified directories.</source>
          <target state="translated">Su funcionamiento es idéntico al de los directorios(),excepto que incluye todos los directorios intermedios hasta los directorios especificados.</target>
        </trans-unit>
        <trans-unit id="e351930a2f0204ac9b6b12368a795bebdda09c11" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; function for returning the absolute value of the numerical argument, see &lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver el valor absoluto del argumento num&amp;eacute;rico, ver &lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="695d548bdbb7db69858dd0c63a58915988364e1a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; function, returning the absolute value of its numerical argument.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , que devuelve el valor absoluto de su argumento num&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="f9120a2adefbe5ba2e37ba001760405e7d0a7dbe" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; function, either for arming or disarming the &lt;code&gt;SIGARLM&lt;/code&gt; timer.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; incorporada de Perl () , ya sea para armar o desarmar el temporizador &lt;code&gt;SIGARLM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48a476413067dd99ab4121abaa36c23eb2d9f153" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; function, returning the arcus tangent defined by its two numerical arguments, the</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n incorporada &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; Perl , que devuelve el arco tangente definido por sus dos argumentos num&amp;eacute;ricos, el</target>
        </trans-unit>
        <trans-unit id="a05756bd65e3a6ef14f82f8385fe7e460811d0b5" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; function, allowing one to change the working (default) directory, see &lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , lo que le permite a uno cambiar el directorio de trabajo (predeterminado), ver &lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e888ff11c427adcd230a49c55dda839ea4139d83" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; function, allowing one to change file and directory permissions, see &lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , lo que le permite cambiar los permisos de archivos y directorios, consulte &lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43527baa97f98b6bb9f0a7d166453b7ea32ff963" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; function, allowing one to change file and directory owners and groups, see &lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , lo que permite cambiar los propietarios y grupos de archivos y directorios, consulte &lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="137a34ed8adb7ab17d656d13fbf0961186414eb0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir()&lt;/a&gt;&lt;/code&gt; function for closing a directory handle, see &lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para cerrar un identificador de directorio, vea &lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e039818d97c69012826d73ac04fb7fe2694eb5b3" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; function, for returning the cosine of its numerical argument, see &lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , para devolver el coseno de su argumento num&amp;eacute;rico, ver &lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7986353e4fd90f34533ad5983c9c0772e03e142" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; function for exiting the program, see &lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para salir del programa, ver &lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2c5c838eac2ca99b87036128b4be02041ba664e" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp()&lt;/a&gt;&lt;/code&gt; function for returning the exponent (</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n incorporada &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp()&lt;/a&gt;&lt;/code&gt; Perl para devolver el exponente (</target>
        </trans-unit>
        <trans-unit id="0f8afa6cc9b9bce42a0f876c4312c43a9b501d34" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , consulte &lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0526f440f4487b3f67fbf7e27396c04e1d2573cc" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; function for duplicating the current process, see &lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt; and &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; if you are in Windows.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para duplicar el proceso actual, vea &lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt; y &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; si est&amp;aacute; en Windows.</target>
        </trans-unit>
        <trans-unit id="f40ae5570bc527bc5a1dd6d93c31c6aa0f593934" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , consulte &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35d7514c028c77e7ca42538761981fea1a5e7fde" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid()&lt;/a&gt;&lt;/code&gt; function for returning group entries by group identifiers, see &lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver entradas de grupo por identificadores de grupo, consulte &lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60e26e2d8720ed0149b7b87c377d73417035968a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam()&lt;/a&gt;&lt;/code&gt; function for returning group entries by group names, see &lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver entradas de grupo por nombres de grupo, consulte &lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d15624acd39757d16036f7262ed6bcece3061f3a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin()&lt;/a&gt;&lt;/code&gt; function for returning the user name associated with the current session, see &lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver el nombre de usuario asociado con la sesi&amp;oacute;n actual, consulte &lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="186fcd1d3a57037edb361be5db32f5f007ca9211" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp()&lt;/a&gt;&lt;/code&gt; function for returning the process group identifier of the current process, see &lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver el identificador de grupo de procesos del proceso actual, consulte &lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1809496150480256c93f1aafd87f931437ce086" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; function for returning the process identifier of the parent process of the current process , see &lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver el identificador de proceso del proceso padre del proceso actual, ver &lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="457ce51591f9cb379a5adb26605bff1ac3f4ef40" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam()&lt;/a&gt;&lt;/code&gt; function for returning user entries by user names, see &lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver entradas de usuario por nombre de usuario, consulte &lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="099bdffd8de12dde36332facd7fd521fe7604dc8" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid()&lt;/a&gt;&lt;/code&gt; function for returning user entries by user identifiers, see &lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver entradas de usuario por identificadores de usuario, consulte &lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2f87263d58fd06391e632ecc597293fca726096" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; function for converting seconds since the epoch to a date in Greenwich Mean Time, see &lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para convertir segundos desde la &amp;eacute;poca a una fecha en el tiempo medio de Greenwich, consulte &lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3c0f6e328c0a9e84f4089fb4367baf98b6b1c72" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , consulte &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b121ee200825f5ba836e4ff9ea046596d9a0669c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; function for sending signals to processes (often to terminate them), see &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para enviar se&amp;ntilde;ales a los procesos (a menudo para terminarlos), vea &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b81f62db22691a94ae2b3fa4ba9674d2bf0b3fd0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link()&lt;/a&gt;&lt;/code&gt; function for creating hard links into files, see &lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para crear enlaces f&amp;iacute;sicos en archivos, ver &lt;a href=&quot;functions/link&quot;&gt;enlace&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44d5f3c7d27301e5eb1acf76c204cabece604701" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; function for converting seconds since the epoch to a date see &lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para convertir segundos desde la &amp;eacute;poca en una fecha, ver &lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e0909781f3283ef9c3e20db724f85b91f439d90" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log()&lt;/a&gt;&lt;/code&gt; function, returning the natural (</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , que devuelve el (</target>
        </trans-unit>
        <trans-unit id="e971f99436b45984924e279dba0a0153fd2a323c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; function for creating directories, see &lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para crear directorios, vea &lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b41549ebc9ad587ccb819b0a3ec0f8792362c7d3" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; function for reading directory entries, see &lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para leer entradas de directorio, consulte &lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35438e0216a544df5038b4544cbb587885a54611" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; function for renaming files, see &lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para renombrar archivos, vea &lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5d513c94dc874928c142ca043089cff6c9b7ef0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir()&lt;/a&gt;&lt;/code&gt; function for rewinding directory entry streams, see &lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para rebobinar los flujos de entrada del directorio, consulte &lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb204757196695331f28a45173a4730e85e7f0fb" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir()&lt;/a&gt;&lt;/code&gt; function for removing (empty) directories, see &lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para eliminar directorios (vac&amp;iacute;os), consulte &lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f5d85ea0b853465bcc33fe450ea49c14a87d8b77" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; function for returning the sine of the numerical argument, see &lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n incorporada &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; Perl para devolver el seno del argumento num&amp;eacute;rico, ver &lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="919e7a21c6ecbb020823d058dd90c7b0a9eb3a55" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt()&lt;/a&gt;&lt;/code&gt; function. for returning the square root of the numerical argument, see &lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt()&lt;/a&gt;&lt;/code&gt; incorporada de Perl . para devolver la ra&amp;iacute;z cuadrada del argumento num&amp;eacute;rico, consulte &lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0eaf8f167427908f7febf3b312f3b5eb7b5e1919" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; function for returning information about files and directories.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver informaci&amp;oacute;n sobre archivos y directorios.</target>
        </trans-unit>
        <trans-unit id="41d6fd8cbb0b29357e5142e667be5a61001f2978" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , consulte &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3273b4b3b0615a180eb23eebf260bd07416587ce" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; function for returning the number of seconds since the epoch (whatever it is for the system), see &lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver el n&amp;uacute;mero de segundos desde la &amp;eacute;poca (lo que sea para el sistema), ver &lt;a href=&quot;functions/time&quot;&gt;tiempo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c38ab013e5c6afb6168a48634dc91f08bf30d4f9" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask()&lt;/a&gt;&lt;/code&gt; function for setting (and querying) the file creation permission mask, see &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para configurar (y consultar) la m&amp;aacute;scara de permiso de creaci&amp;oacute;n de archivos, consulte &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88df1d410534e354bba714dca11791a1312464a8" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; function for removing files, see &lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para eliminar archivos, consulte &lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb3ad24016b3eaa5941feee2fcd750ab1532552" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; function for changing the time stamps of files and directories, see &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para cambiar las marcas de tiempo de archivos y directorios, consulte &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2c58755bc175c3890516b5d42561515cbd4c528" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , consulte &lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f13c2b63ac14ab4bd5f10ae515b06359ca5e4d21" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;abs()&lt;/code&gt; function for returning the absolute value of the numerical argument, see &lt;a href=&quot;perlfunc#abs&quot;&gt;&quot;abs&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeba6e922a9db20d2f88f41c166aa3a545a6731a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;abs()&lt;/code&gt; function, returning the absolute value of its numerical argument (except that &lt;code&gt;POSIX::abs()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9272bd8809bf23877d5d262cbbf69c42040e282" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;alarm()&lt;/code&gt; function, either for arming or disarming the &lt;code&gt;SIGARLM&lt;/code&gt; timer, except that &lt;code&gt;POSIX::alarm()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3051de63b274bf89d617977e27b1e44500fb09" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;atan2()&lt;/code&gt; function, returning the arcus tangent defined by its two numerical arguments, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1ff0f865c69120ee10570db31d0b1d2c0c062f" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;chdir()&lt;/code&gt; function, allowing one to change the working (default) directory -- see &lt;a href=&quot;perlfunc#chdir&quot;&gt;&quot;chdir&quot; in perlfunc&lt;/a&gt; -- with the exception that &lt;code&gt;POSIX::chdir()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f676f007cd841319686436bdb4f53d41b3e4ebac" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;chmod()&lt;/code&gt; function, allowing one to change file and directory permissions -- see &lt;a href=&quot;perlfunc#chmod&quot;&gt;&quot;chmod&quot; in perlfunc&lt;/a&gt; -- with the exception that &lt;code&gt;POSIX::chmod()&lt;/code&gt; can only change one file at a time (rather than a list of files):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041ab8f9027b39ef8749ecf23de9f449349be363" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;chown()&lt;/code&gt; function, allowing one to change file and directory owners and groups, see &lt;a href=&quot;perlfunc#chown&quot;&gt;&quot;chown&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f95aa5daddf7fe2d2d73fca7e7d94eeb6c29f6" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;closedir()&lt;/code&gt; function for closing a directory handle, see &lt;a href=&quot;perlfunc#closedir&quot;&gt;&quot;closedir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0812d720d3d8b9aac1e21c57a80f20bcf2f9c3ab" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;cos()&lt;/code&gt; function, for returning the cosine of its numerical argument, see &lt;a href=&quot;perlfunc#cos&quot;&gt;&quot;cos&quot; in perlfunc&lt;/a&gt;. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6faa18c6cf2e2bdf15486fb7413251a6c95a308" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;exit()&lt;/code&gt; function for exiting the program, see &lt;a href=&quot;perlfunc#exit&quot;&gt;&quot;exit&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a090250e226891fdf51f2235b04607999ab01e5b" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;exp()&lt;/code&gt; function for returning the exponent (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586ed7b1cf8385f5f84201e041a4c9b38b7cf920" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;fcntl()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#fcntl&quot;&gt;&quot;fcntl&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59914e126bdf7d613799ed2b869017e992d88d81" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;fork()&lt;/code&gt; function for duplicating the current process, see &lt;a href=&quot;perlfunc#fork&quot;&gt;&quot;fork&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; if you are in Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bcde2f841642aa747906d112793663d02a4ef4" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getc()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#getc&quot;&gt;&quot;getc&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf81bd9cceb40440442cab792009031a27722e2d" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getgrgid()&lt;/code&gt; function for returning group entries by group identifiers, see &lt;a href=&quot;perlfunc#getgrgid&quot;&gt;&quot;getgrgid&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f12c9c925dd97923ec1ba9d2494d7e7cc8c09b5" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getgrnam()&lt;/code&gt; function for returning group entries by group names, see &lt;a href=&quot;perlfunc#getgrnam&quot;&gt;&quot;getgrnam&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061d771b45fe6fdb91ab663f301fc5a4200fb6c2" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getlogin()&lt;/code&gt; function for returning the user name associated with the current session, see &lt;a href=&quot;perlfunc#getlogin&quot;&gt;&quot;getlogin&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6c96531c8f8c469ecd59a4d48093daaf34500a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getpgrp()&lt;/code&gt; function for returning the process group identifier of the current process, see &lt;a href=&quot;perlfunc#getpgrp&quot;&gt;&quot;getpgrp&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbc6cb1c29cf9bd86eed81cc69e1c840c81478c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getppid()&lt;/code&gt; function for returning the process identifier of the parent process of the current process , see &lt;a href=&quot;perlfunc#getppid&quot;&gt;&quot;getppid&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56bed142f19ad2080bf45ae8481e1ee1fb488e1" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getpwnam()&lt;/code&gt; function for returning user entries by user names, see &lt;a href=&quot;perlfunc#getpwnam&quot;&gt;&quot;getpwnam&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acc60524b9abec089e2c6f8c95b08eb6714a8db" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getpwuid()&lt;/code&gt; function for returning user entries by user identifiers, see &lt;a href=&quot;perlfunc#getpwuid&quot;&gt;&quot;getpwuid&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179770df8af708d05f10bcd98500a9e7e79703eb" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;gmtime()&lt;/code&gt; function for converting seconds since the epoch to a date in Greenwich Mean Time, see &lt;a href=&quot;perlfunc#gmtime&quot;&gt;&quot;gmtime&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a268d454fa73c16bee33c404cb94d081cc9c3644" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;index()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#index&quot;&gt;&quot;index&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc3cee015e8a57d47d2c57b6b03b7fdf0cfd74c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;kill()&lt;/code&gt; function for sending signals to processes (often to terminate them), see &lt;a href=&quot;perlfunc#kill&quot;&gt;&quot;kill&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0e4e90b9f46713a350fa47e616a04d2e30537a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;link()&lt;/code&gt; function for creating hard links into files, see &lt;a href=&quot;perlfunc#link&quot;&gt;&quot;link&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e011fd93298aca0de0c1a897aa121a02b4277007" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;localtime()&lt;/code&gt; function for converting seconds since the epoch to a date see &lt;a href=&quot;perlfunc#localtime&quot;&gt;&quot;localtime&quot; in perlfunc&lt;/a&gt; except that &lt;code&gt;POSIX::localtime()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2226cccc38cb9670469353b71c92d291f37e36" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;log()&lt;/code&gt; function, returning the natural (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa3dae63b59e4b6788fcb579b64e550147a8385" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;mkdir()&lt;/code&gt; function for creating directories, see &lt;a href=&quot;perlfunc#mkdir&quot;&gt;&quot;mkdir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8372bc5819fbb2b69c11355ff429f873a1d19d34" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;readdir()&lt;/code&gt; function for reading directory entries, see &lt;a href=&quot;perlfunc#readdir&quot;&gt;&quot;readdir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc44a32d8bf4a587e48ef68a6399c088ca095e76" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;rename()&lt;/code&gt; function for renaming files, see &lt;a href=&quot;perlfunc#rename&quot;&gt;&quot;rename&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9807c8d4769fe887205ad2c319e1b6b6f530cfa0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;rewinddir()&lt;/code&gt; function for rewinding directory entry streams, see &lt;a href=&quot;perlfunc#rewinddir&quot;&gt;&quot;rewinddir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca175f2947c71a8d62582ef5092aec4bf6d13dff" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;rmdir()&lt;/code&gt; function for removing (empty) directories, see &lt;a href=&quot;perlfunc#rmdir&quot;&gt;&quot;rmdir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5ced0975ffedcd4b86d361ab8c812058cf8570" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;sin()&lt;/code&gt; function for returning the sine of the numerical argument, see &lt;a href=&quot;perlfunc#sin&quot;&gt;&quot;sin&quot; in perlfunc&lt;/a&gt;. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5b6569126a0ff525866fa62adee3690d41b326" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;sqrt()&lt;/code&gt; function. for returning the square root of the numerical argument, see &lt;a href=&quot;perlfunc#sqrt&quot;&gt;&quot;sqrt&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc889395d59d965a8ac912064a8cc9050755ed00" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;stat()&lt;/code&gt; function for returning information about files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8832a10bfda45b41af5380174e01f618872f3ff" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;system()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#system&quot;&gt;&quot;system&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5066c0194994f20427059d8e1f43ba7326ce9f4a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;time()&lt;/code&gt; function for returning the number of seconds since the epoch (whatever it is for the system), see &lt;a href=&quot;perlfunc#time&quot;&gt;&quot;time&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a23c736c7514772cb5de8b72d105ced2014902" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;umask()&lt;/code&gt; function for setting (and querying) the file creation permission mask, see &lt;a href=&quot;perlfunc#umask&quot;&gt;&quot;umask&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3d6c3a129925b0029f640eeed5c30997e2fe6b" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;unlink()&lt;/code&gt; function for removing files, see &lt;a href=&quot;perlfunc#unlink&quot;&gt;&quot;unlink&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c122efad471753582acea85c0f5c56e9dd6cb21b" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;utime()&lt;/code&gt; function for changing the time stamps of files and directories, see &lt;a href=&quot;perlfunc#utime&quot;&gt;&quot;utime&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5374f3dbfc8104dc52a46f4e1cac38e75ea3732" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;wait()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#wait&quot;&gt;&quot;wait&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33a2624a3bac1d7979963b70993ae442f03646c" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;_exit()&lt;/code&gt; . It exits the program immediately which means among other things buffered I/O is &lt;b&gt;not&lt;/b&gt; flushed.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de C &lt;code&gt;_exit()&lt;/code&gt; . Sale del programa inmediatamente, lo que significa, entre otras cosas, que las E / S almacenadas en b&amp;uacute;fer &lt;b&gt;no se&lt;/b&gt; vac&amp;iacute;an.</target>
        </trans-unit>
        <trans-unit id="00e254fcf98c61ec0f416895b5a730cc21dd60c2" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;_exit()&lt;/code&gt;. It exits the program immediately which means among other things buffered I/O is &lt;b&gt;not&lt;/b&gt; flushed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80c449f3b57bbebcb07635c9eb453473b86c188" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;abort()&lt;/code&gt; . It terminates the process with a &lt;code&gt;SIGABRT&lt;/code&gt; signal unless caught by a signal handler or if the handler does not return normally (it e.g. does a &lt;code&gt;longjmp&lt;/code&gt; ).</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;abort()&lt;/code&gt; . Termina el proceso con una se&amp;ntilde;al &lt;code&gt;SIGABRT&lt;/code&gt; a menos que sea capturado por un manejador de se&amp;ntilde;ales o si el manejador no regresa normalmente (por ejemplo, hace un &lt;code&gt;longjmp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="20cdd3c3d411f66ac2cf90136127302421076da0" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;abort()&lt;/code&gt;. It terminates the process with a &lt;code&gt;SIGABRT&lt;/code&gt; signal unless caught by a signal handler or if the handler does not return normally (it e.g. does a &lt;code&gt;longjmp&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d259a90ce3ab2f4e634cfbde2a7c2b688963f261" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acos()&lt;/code&gt; , returning the arcus cosine of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de C &lt;code&gt;acos()&lt;/code&gt; , que devuelve el arco coseno de su argumento num&amp;eacute;rico. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e673d5033a6bd97125eca8bcd1d7b8d61c4bb0ee" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acos()&lt;/code&gt;, returning the arcus cosine of its numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccee1e25346b17fb481ba7f4de4b0b4f50758bcf" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acosh()&lt;/code&gt; , returning the hyperbolic arcus cosine of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;acosh()&lt;/code&gt; , que devuelve el arco coseno hiperb&amp;oacute;lico de su argumento num&amp;eacute;rico [C99]. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="222701acaff9ce2c807037cd58cb7be89c8e135d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acosh()&lt;/code&gt;, returning the hyperbolic arcus cosine of its numerical argument [C99]. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8333095da54e7a945d4144cea8a756431c8956dd" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asctime()&lt;/code&gt; . It returns a string of the form</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;asctime()&lt;/code&gt; . Devuelve una cadena de la forma</target>
        </trans-unit>
        <trans-unit id="48d0b6399063cccc6c529b55c31cc0b8ab41e44e" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asctime()&lt;/code&gt;. It returns a string of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83275b8475bd60ebbcd493cefc6cdd7a1783a9d1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asin()&lt;/code&gt; , returning the arcus sine of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;asin()&lt;/code&gt; , que devuelve el arcus sine de su argumento num&amp;eacute;rico. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54c609704a8db4a3b622bf9cc7b83ccb3470173b" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asin()&lt;/code&gt;, returning the arcus sine of its numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c416500eafa9e5a5d6b613f8969a9c043a063d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asinh()&lt;/code&gt; , returning the hyperbolic arcus sine of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;asinh()&lt;/code&gt; , que devuelve el arcus seno hiperb&amp;oacute;lico de su argumento num&amp;eacute;rico [C99]. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f3336a617e3723139602480ac46beceda806087" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asinh()&lt;/code&gt;, returning the hyperbolic arcus sine of its numerical argument [C99]. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e5aa7da9f697f4c8ff8dc1fb698909d946bb08" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atan()&lt;/code&gt; , returning the arcus tangent of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;atan()&lt;/code&gt; , que devuelve el arco tangente de su argumento num&amp;eacute;rico. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00b11961b84c9839acb25a23858dc26ef9cc84ec" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atan()&lt;/code&gt;, returning the arcus tangent of its numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f0cbd1a192e343ff198d459f44a118616c801d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atanh()&lt;/code&gt; , returning the hyperbolic arcus tangent of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;atanh()&lt;/code&gt; , que devuelve el arco tangente hiperb&amp;oacute;lico de su argumento num&amp;eacute;rico [C99]. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aacbec97967534e4e0da192e27504c8b78773bf1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atanh()&lt;/code&gt;, returning the hyperbolic arcus tangent of its numerical argument [C99]. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1019f8f1ad013c7cb1f6add559add30196a2727" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ceil()&lt;/code&gt; , returning the smallest integer value greater than or equal to the given numerical argument.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;ceil()&lt;/code&gt; , que devuelve el valor entero m&amp;aacute;s peque&amp;ntilde;o mayor o igual que el argumento num&amp;eacute;rico dado.</target>
        </trans-unit>
        <trans-unit id="09aef5268ee130db39b796423ddf5bc05a67f7d9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ceil()&lt;/code&gt;, returning the smallest integer value greater than or equal to the given numerical argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09fd6d4a60edcd6b29ae2efeeb92f7f1a3032dc" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;clock()&lt;/code&gt; , returning the amount of spent processor time in microseconds.</source>
          <target state="translated">Es id&amp;eacute;ntico al &lt;code&gt;clock()&lt;/code&gt; funci&amp;oacute;n C () , que devuelve la cantidad de tiempo de procesador gastado en microsegundos.</target>
        </trans-unit>
        <trans-unit id="bb64ec4bf06850ca41b665cf03b415935ba00a08" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;clock()&lt;/code&gt;, returning the amount of spent processor time in microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed50101b37aabb6ccd0f72bf1cd12dc057e125c6" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;cosh()&lt;/code&gt; , for returning the hyperbolic cosine of its numeric argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;cosh()&lt;/code&gt; , para devolver el coseno hiperb&amp;oacute;lico de su argumento num&amp;eacute;rico. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3eb4801a049bd3b441ac59627ccf364d2f377e67" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;cosh()&lt;/code&gt;, for returning the hyperbolic cosine of its numeric argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f87a9c64391c986e35e0df3a461ddde69989f77" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ctime()&lt;/code&gt; and equivalent to &lt;code&gt;asctime(&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;(...))&lt;/code&gt; , see &lt;a href=&quot;#asctime&quot;&gt;asctime&lt;/a&gt; and &lt;a href=&quot;#localtime&quot;&gt;localtime&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n C &lt;code&gt;ctime()&lt;/code&gt; y equivalente a &lt;code&gt;asctime(&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;(...))&lt;/code&gt; , ver &lt;a href=&quot;#asctime&quot;&gt;asctime&lt;/a&gt; y &lt;a href=&quot;#localtime&quot;&gt;localtime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d3b737efaa2b1ca101fca77dad87f1948da80de" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ctime()&lt;/code&gt; and equivalent to &lt;code&gt;asctime(localtime(...))&lt;/code&gt;, see &lt;a href=&quot;#asctime&quot;&gt;&quot;asctime&quot;&lt;/a&gt; and &lt;a href=&quot;#localtime&quot;&gt;&quot;localtime&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a7a8b5298975e8b4638f6e08f625101ddd94f1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;difftime()&lt;/code&gt; , for returning the time difference (in seconds) between two times (as returned by &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt;), see &lt;a href=&quot;#time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n C &lt;code&gt;difftime()&lt;/code&gt; , para devolver la diferencia de tiempo (en segundos) entre dos tiempos (como lo devuelve &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; ), ver &lt;a href=&quot;#time&quot;&gt;tiempo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="697a72690b71691d80d753e57df20f9ff5b09479" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;difftime()&lt;/code&gt;, for returning the time difference (in seconds) between two times (as returned by &lt;code&gt;time()&lt;/code&gt;), see &lt;a href=&quot;#time&quot;&gt;&quot;time&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3400f6cf25b03ffea13db374eb3a67b922b12f5c" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;floor()&lt;/code&gt; , returning the largest integer value less than or equal to the numerical argument.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;floor()&lt;/code&gt; , que devuelve el valor entero m&amp;aacute;s grande menor o igual que el argumento num&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="7b9055c370577838fb2e4da609111c91973145a3" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;floor()&lt;/code&gt;, returning the largest integer value less than or equal to the numerical argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40ee9ab2883fdc4ea6712b24d8986ecec5f39fc" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;fmod()&lt;/code&gt; .</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de C &lt;code&gt;fmod()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3287da7f52ceaee5a8201c36c4596dffd105daf4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;fmod()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7a8f7914876d99686857a5b212ffa67a406bf2" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ldexp()&lt;/code&gt; for multiplying floating point numbers with powers of two.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;ldexp()&lt;/code&gt; para multiplicar n&amp;uacute;meros de coma flotante con potencias de dos.</target>
        </trans-unit>
        <trans-unit id="5967c218ae5e6977bcfb278510b90089a48661b4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;log10()&lt;/code&gt; , returning the 10-base logarithm of the numerical argument. You can also use</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;log10()&lt;/code&gt; , que devuelve el logaritmo de base 10 del argumento num&amp;eacute;rico. Tambi&amp;eacute;n puedes usar</target>
        </trans-unit>
        <trans-unit id="08dc53f13307f9a7669daa41059fc0f3ab144475" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;log10()&lt;/code&gt;, returning the 10-base logarithm of the numerical argument. You can also use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d960a256a04c197a9681bc6a5b2df4621c6abcef" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mblen()&lt;/code&gt; .</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de C &lt;code&gt;mblen()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72da259370ed7368b03117d248a4d69905a2aec8" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mbstowcs()&lt;/code&gt; .</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de C &lt;code&gt;mbstowcs()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9cb9e5092c37fe36ba32ebf9a50fb911920ee05" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mbtowc()&lt;/code&gt; .</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de C &lt;code&gt;mbtowc()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34c30fa04962ce474f9dd2f58f200b70edfa44f9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;perror()&lt;/code&gt; , which outputs to the standard error stream the specified message followed by &lt;code&gt;&quot;: &quot;&lt;/code&gt; and the current error string. Use the &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; function and the &lt;code&gt;$!&lt;/code&gt; variable instead, see &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; and &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n de C &lt;code&gt;perror()&lt;/code&gt; , que env&amp;iacute;a al flujo de error est&amp;aacute;ndar el mensaje especificado seguido de &lt;code&gt;&quot;: &quot;&lt;/code&gt; y la cadena de error actual. Utilice la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;$!&lt;/code&gt; en su lugar, vea &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; y &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ ERRNO en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e999e8bd354cec8599d88611d60fa296f4268ab9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;perror()&lt;/code&gt;, which outputs to the standard error stream the specified message followed by &lt;code&gt;&quot;: &quot;&lt;/code&gt; and the current error string. Use the &lt;code&gt;warn()&lt;/code&gt; function and the &lt;code&gt;$!&lt;/code&gt; variable instead, see &lt;a href=&quot;perlfunc#warn&quot;&gt;&quot;warn&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;&quot;$ERRNO&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc1118a61c7aca10633514f234f4da1ee0e5bc3" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;setsid()&lt;/code&gt; for setting the session identifier of the current process.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;setsid()&lt;/code&gt; para configurar el identificador de sesi&amp;oacute;n del proceso actual.</target>
        </trans-unit>
        <trans-unit id="cd2e30a5d85631fe96db821f94473755dc93c4ea" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;sinh()&lt;/code&gt; for returning the hyperbolic sine of the numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b9a9e6d01fce018b50fa102ad5992e876d6995" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;sinh()&lt;/code&gt; for returning the hyperbolic sine of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;sinh()&lt;/code&gt; para devolver el seno hiperb&amp;oacute;lico del argumento num&amp;eacute;rico. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5620e4c58d5e806939f06354c891f33af057e241" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;strcoll()&lt;/code&gt; for collating (comparing) strings transformed using the &lt;code&gt;strxfrm()&lt;/code&gt; function. Not really needed since Perl can do this transparently, see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;strcoll()&lt;/code&gt; para recopilar (comparar) cadenas transformadas usando la funci&amp;oacute;n &lt;code&gt;strxfrm()&lt;/code&gt; . No es realmente necesario ya que Perl puede hacer esto de forma transparente, consulte &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c1de6e40d16de1b4908183780ee818a15a66a41" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tan()&lt;/code&gt; , returning the tangent of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;tan()&lt;/code&gt; , que devuelve la tangente del argumento num&amp;eacute;rico. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f498da9b7b8a82d92561bf26d0e1756b0d1ee8f4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tan()&lt;/code&gt;, returning the tangent of the numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53070d8b102022984bacaa431429b0ea23b53bf" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tanh()&lt;/code&gt; , returning the hyperbolic tangent of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;tanh()&lt;/code&gt; , que devuelve la tangente hiperb&amp;oacute;lica del argumento num&amp;eacute;rico. Consulte tambi&amp;eacute;n &lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="619493a33623a4d1d100c28c84312cd640352776" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tanh()&lt;/code&gt;, returning the hyperbolic tangent of the numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4339b3026b6818ba331f4b8dad83033d79b015ba" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tcgetpgrp()&lt;/code&gt; for returning the process group identifier of the foreground process group of the controlling terminal.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;tcgetpgrp()&lt;/code&gt; para devolver el identificador del grupo de procesos del grupo de procesos en primer plano del terminal de control.</target>
        </trans-unit>
        <trans-unit id="10385672619fbe5424be8d41f4c81323dffb2c77" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ttyname()&lt;/code&gt; for returning the name of the current terminal.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n de C &lt;code&gt;ttyname()&lt;/code&gt; para devolver el nombre de la terminal actual.</target>
        </trans-unit>
        <trans-unit id="61c4adb4504ab133429c5dcca9e634dda0234fa4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tzset()&lt;/code&gt; for setting the current timezone based on the environment variable &lt;code&gt;TZ&lt;/code&gt; , to be used by &lt;code&gt;ctime()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;mktime()&lt;/code&gt; , and &lt;code&gt;strftime()&lt;/code&gt; functions.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n C &lt;code&gt;tzset()&lt;/code&gt; para configurar la zona horaria actual, basado en la variable de entorno &lt;code&gt;TZ&lt;/code&gt; , para ser utilizado por &lt;code&gt;ctime()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;mktime()&lt;/code&gt; , y &lt;code&gt;strftime()&lt;/code&gt; funciones.</target>
        </trans-unit>
        <trans-unit id="c8d5049412005d34781dc9061461ec11720e4de6" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tzset()&lt;/code&gt; for setting the current timezone based on the environment variable &lt;code&gt;TZ&lt;/code&gt;, to be used by &lt;code&gt;ctime()&lt;/code&gt;, &lt;code&gt;localtime()&lt;/code&gt;, &lt;code&gt;mktime()&lt;/code&gt;, and &lt;code&gt;strftime()&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eac2e9b93151c25128e8b44336e559f1ca26691" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;wcstombs()&lt;/code&gt; .</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n de C &lt;code&gt;wcstombs()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6531eaab1a3fcd3d02f83fe194ba892352425032" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;wctomb()&lt;/code&gt; .</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C &lt;code&gt;wctomb()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b638e3d48a14e811a63d8a3b93348f1843f5897" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;, see &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;, or the equivalent &lt;code&gt;\L&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="translated">Es id&amp;eacute;ntica a la funci&amp;oacute;n C, excepto que puede aplicarse a un solo car&amp;aacute;cter oa una cadena completa, y actualmente funciona como si la configuraci&amp;oacute;n regional fuera siempre &quot;C&quot;. Considere usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; , vea &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt; , vea &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt; , o el operador &lt;code&gt;\L&lt;/code&gt; equivalente dentro de cadenas de comillas dobles.</target>
        </trans-unit>
        <trans-unit id="30976c7fff7754f905b7e098aaebc37d849842e9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except the order of arguments is consistent with Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; with the added restriction of only one path, not a list of paths. Does the same thing as the &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; function but changes the owner of a symbolic link instead of the file the symbolic link points to.</source>
          <target state="translated">Esto es id&amp;eacute;ntico a la funci&amp;oacute;n C, excepto que el orden de los argumentos es consistente con el &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; incorporado de Perl con la restricci&amp;oacute;n agregada de solo una ruta, no una lista de rutas. Hace lo mismo que la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; pero cambia el propietario de un enlace simb&amp;oacute;lico en lugar del archivo al que apunta el enlace simb&amp;oacute;lico.</target>
        </trans-unit>
        <trans-unit id="f2df656889ea7332cb6bc09e8c0d267a915a4923" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except the order of arguments is consistent with Perl's builtin &lt;code&gt;chown()&lt;/code&gt; with the added restriction of only one path, not a list of paths. Does the same thing as the &lt;code&gt;chown()&lt;/code&gt; function but changes the owner of a symbolic link instead of the file the symbolic link points to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec15e827312e3918cb71e034a41abdc4f73a598" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_FUNCS attribute available via MakeMaker, from which it is usually taken. Its value is a reference to an associative array, in which each key is the name of a package, and each value is an a reference to an array of function names which should be exported by the extension. For instance, one might say &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ],
Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt; . The function names should be identical to those in the XSUB code; &lt;code&gt;Mksymlists&lt;/code&gt; will alter the names written to the linker option file to match the changes made by</source>
          <target state="translated">Es id&amp;eacute;ntico al atributo DL_FUNCS disponible a trav&amp;eacute;s de MakeMaker, del que normalmente se toma. Su valor es una referencia a una matriz asociativa, en la que cada clave es el nombre de un paquete, y cada valor es una referencia a una matriz de nombres de funciones que la extensi&amp;oacute;n debe exportar. Por ejemplo, se podr&amp;iacute;a decir &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ], Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt; . Los nombres de las funciones deben ser id&amp;eacute;nticos a los del c&amp;oacute;digo XSUB; &lt;code&gt;Mksymlists&lt;/code&gt; alterar&amp;aacute; los nombres escritos en el archivo de opciones del vinculador para que coincidan con los cambios realizados por</target>
        </trans-unit>
        <trans-unit id="05f95b67712ddc6756ad05c6f1a80aa7067863ef" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_FUNCS attribute available via MakeMaker, from which it is usually taken. Its value is a reference to an associative array, in which each key is the name of a package, and each value is an a reference to an array of function names which should be exported by the extension. For instance, one might say &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ], Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt;. The function names should be identical to those in the XSUB code; &lt;code&gt;Mksymlists&lt;/code&gt; will alter the names written to the linker option file to match the changes made by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310f96db114f72f372da9166d69a4cc6f2cae9b1" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_VARS attribute available via MakeMaker, and, like DL_FUNCS, it is usually specified via MakeMaker. Its value is a reference to an array of variable names which should be exported by the extension.</source>
          <target state="translated">Es idéntico al atributo DL_VARS disponible a través de MakeMaker,y,al igual que DL_FUNCS,suele especificarse a través de MakeMaker.Su valor es una referencia a una matriz de nombres de variables que deben ser exportados por la extensión.</target>
        </trans-unit>
        <trans-unit id="b412f9ab149e41469d7ba2eef653a9c88721e439" translate="yes" xml:space="preserve">
          <source>This is identical to the macro &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt;.</source>
          <target state="translated">Es id&amp;eacute;ntica a la macro &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1adbe800aa3e5b1f98201baedb59f2c206a1c29e" translate="yes" xml:space="preserve">
          <source>This is identical to the macro &lt;a href=&quot;perlapi#isUTF8_CHAR&quot;&gt;&quot;isUTF8_CHAR&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cee0007e2daab07905e6dc7537e69cd21d5b2ba" translate="yes" xml:space="preserve">
          <source>This is ignored by most formatters, but some may use it for building indexes. It always renders as empty-string. Example: &lt;code&gt;X&amp;lt;absolutizing relative URLs&amp;gt;&lt;/code&gt;</source>
          <target state="translated">La mayor&amp;iacute;a de los formateadores ignoran esto, pero algunos pueden usarlo para crear &amp;iacute;ndices. Siempre se muestra como una cadena vac&amp;iacute;a. Ejemplo: &lt;code&gt;X&amp;lt;absolutizing relative URLs&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be9929994c9a23587b60ac75552db3fe41c07468" translate="yes" xml:space="preserve">
          <source>This is implemented as a macro.</source>
          <target state="translated">Esto se implementa como una macro.</target>
        </trans-unit>
        <trans-unit id="667c85db18e1907f43da9d70ad90da9e90ed961a" translate="yes" xml:space="preserve">
          <source>This is important because miniperl, used to build XS modules in the core, can not load XS.</source>
          <target state="translated">Esto es importante porque el miniperl,usado para construir módulos XS en el núcleo,no puede cargar XS.</target>
        </trans-unit>
        <trans-unit id="144222a27e6ef028e4173cd0825a23a1090abbf3" translate="yes" xml:space="preserve">
          <source>This is in contrast to many other dynamic languages, where the operation is determined by the type of the first argument. It also means that Perl has two versions of some operators, one for numeric and one for string comparison. For example &lt;code&gt;$x == $y&lt;/code&gt; compares two numbers for equality, and &lt;code&gt;$x &lt;a href=&quot;functions/eq&quot;&gt;eq&lt;/a&gt; $y&lt;/code&gt; compares two strings.</source>
          <target state="translated">Esto contrasta con muchos otros lenguajes din&amp;aacute;micos, donde la operaci&amp;oacute;n est&amp;aacute; determinada por el tipo del primer argumento. Tambi&amp;eacute;n significa que Perl tiene dos versiones de algunos operadores, una para la comparaci&amp;oacute;n num&amp;eacute;rica y otra para la comparaci&amp;oacute;n de cadenas. Por ejemplo, &lt;code&gt;$x == $y&lt;/code&gt; compara dos n&amp;uacute;meros para la igualdad, y &lt;code&gt;$x &lt;a href=&quot;functions/eq&quot;&gt;eq&lt;/a&gt; $y&lt;/code&gt; compara dos cadenas.</target>
        </trans-unit>
        <trans-unit id="3bc5ead38c3990127ff9d0720451c4bddc83a1e1" translate="yes" xml:space="preserve">
          <source>This is in contrast to many other dynamic languages, where the operation is determined by the type of the first argument. It also means that Perl has two versions of some operators, one for numeric and one for string comparison. For example &lt;code&gt;$x == $y&lt;/code&gt; compares two numbers for equality, and &lt;code&gt;$x eq $y&lt;/code&gt; compares two strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d09a7649982765a4ac03ceb6ff657832053b721" translate="yes" xml:space="preserve">
          <source>This is independent of other methods (except that it operates after any verbatim input stripping is done).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc4ce8a710f4fb316b8dc52b8dcce601b6a9b9f" translate="yes" xml:space="preserve">
          <source>This is indexed by op name and then bit number (0..7). For single bit flags, it returns the name of the define (if any) for that bit:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4362971c4874b5e0e3d89683d64eb2597dab60" translate="yes" xml:space="preserve">
          <source>This is intended as a shortcut that lets you release your context and return a value in one statement. This function will get your context, and an optional return value. It will release your context, then return your value. Scalar context is always assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fded423d74ecd2cac30cc09f0fef74a562c96a" translate="yes" xml:space="preserve">
          <source>This is intended for authors of modules which do lots of class introspection, as it allows them to very quickly check if anything important about the local properties of a given class have changed since the last time they looked. It does not increment on method/&lt;code&gt;@ISA&lt;/code&gt; changes in superclasses.</source>
          <target state="translated">Esto est&amp;aacute; destinado a los autores de m&amp;oacute;dulos que hacen mucha introspecci&amp;oacute;n de clases, ya que les permite comprobar muy r&amp;aacute;pidamente si algo importante sobre las propiedades locales de una clase determinada ha cambiado desde la &amp;uacute;ltima vez que miraron. No se incrementa en los cambios de m&amp;eacute;todo / &lt;code&gt;@ISA&lt;/code&gt; en superclases.</target>
        </trans-unit>
        <trans-unit id="f3febce058bf2848f33dea0d5ca24d955e2c8d64" translate="yes" xml:space="preserve">
          <source>This is intended to be a human readable summary of the event. This should ideally only be one line long, but you can use multiple lines if necessary. This is intended for human consumption. You do not need to make it easy for machines to understand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0be3b75ce6b3c6941246d7312f0a73c8b3d2d9" translate="yes" xml:space="preserve">
          <source>This is intended to be called in an &lt;code&gt;END { ... }&lt;/code&gt; block. This will look at test state and set $?. This will also call any end callbacks, and wait on child processes/threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8048e3a62929d8c0b743c4d8a83b98f6eb0f81fb" translate="yes" xml:space="preserve">
          <source>This is intended to largely replace the deprecated pseudo-hashes.</source>
          <target state="translated">Esto tiene por objeto sustituir en gran medida a los pseudo-hachís depreciados.</target>
        </trans-unit>
        <trans-unit id="db4b800255fcc3a17f2b811fc2b88aebde232685" translate="yes" xml:space="preserve">
          <source>This is invalid because every &quot;=end&quot; command must have a formatname parameter.</source>
          <target state="translated">Esto es inválido porque cada comando &quot;=fin&quot; debe tener un parámetro de nombre de formato.</target>
        </trans-unit>
        <trans-unit id="61a2277b2bd23db81a91f83c4d1f3dd9feb9a041" translate="yes" xml:space="preserve">
          <source>This is just a basic proof of concept. It should be seriously expanded to support configurable coloration via options passed to the constructor, and &lt;b&gt;pod2text&lt;/b&gt; should be taught about those.</source>
          <target state="translated">Esta es solo una prueba de concepto b&amp;aacute;sica. Deber&amp;iacute;a ampliarse seriamente para admitir la coloraci&amp;oacute;n configurable a trav&amp;eacute;s de opciones pasadas al constructor, y &lt;b&gt;pod2text&lt;/b&gt; deber&amp;iacute;a aprender sobre ellas.</target>
        </trans-unit>
        <trans-unit id="68c9d184917794ed93e7fda1e4971f91e0c45375" translate="yes" xml:space="preserve">
          <source>This is just a beta release -- there are a good number of things still left to do. Notably, support for EBCDIC platforms is still half-done, an untested.</source>
          <target state="translated">Esto es sólo una versión beta...hay un buen número de cosas que aún quedan por hacer.Notablemente,el soporte para las plataformas EBCDIC está aún a medio hacer,sin probar.</target>
        </trans-unit>
        <trans-unit id="219ed1315313e10e560072058c3673015172eb8a" translate="yes" xml:space="preserve">
          <source>This is just a quick start guide. For a more in-depth tutorial on regexes, see &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; and for the reference page, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Esta es solo una gu&amp;iacute;a de inicio r&amp;aacute;pido. Para un tutorial m&amp;aacute;s detallado sobre expresiones regulares, vea &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; y para la p&amp;aacute;gina de referencia, vea &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="285e57010c635f262d70613679ce183fe2c1fc6d" translate="yes" xml:space="preserve">
          <source>This is just a restatement of the previous section. Unless you are completely certain you know what you are doing, avoid mixing filtered &amp;amp; non-filtered data.</source>
          <target state="translated">Esta es solo una reformulaci&amp;oacute;n de la secci&amp;oacute;n anterior. A menos que est&amp;eacute; completamente seguro de que sabe lo que est&amp;aacute; haciendo, evite mezclar datos filtrados y no filtrados.</target>
        </trans-unit>
        <trans-unit id="0eb6c125a87601bb415e7dd8ac4261d5f4ccd383" translate="yes" xml:space="preserve">
          <source>This is just a shorthand for a typeglob assignment at compile time:</source>
          <target state="translated">Esto es sólo una abreviatura de una tarea tipográfica en tiempo de compilación:</target>
        </trans-unit>
        <trans-unit id="15b35232b5a8087ae488ff75565de5703f14864d" translate="yes" xml:space="preserve">
          <source>This is just a tutorial. For the full story on Perl regular expressions, see the &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; regular expressions reference page.</source>
          <target state="translated">Esto es solo un tutorial. Para conocer la historia completa sobre las expresiones regulares de Perl, consulte la p&amp;aacute;gina de referencia de expresiones regulares de &lt;a href=&quot;perlre&quot;&gt;Perl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9456d5890fbed572d26379cc56324c8cfe828e36" translate="yes" xml:space="preserve">
          <source>This is just a wrapper around Perl's normal &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; function. It's provided so that you can use &quot;sprintf&quot; in Bracket Notation:</source>
          <target state="translated">Esto es solo un &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; funci&amp;oacute;n sprintf normal de Perl . Se proporciona para que pueda usar &quot;sprintf&quot; en la notaci&amp;oacute;n entre corchetes:</target>
        </trans-unit>
        <trans-unit id="b4ff27b6bada60e402e6197635d038979041e1aa" translate="yes" xml:space="preserve">
          <source>This is just a wrapper around Perl's normal &lt;code&gt;sprintf&lt;/code&gt; function. It's provided so that you can use &quot;sprintf&quot; in Bracket Notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77266324e65b81993bcee36043a748db86e77bf5" translate="yes" xml:space="preserve">
          <source>This is just an alias for $ctx-&amp;gt;new.</source>
          <target state="translated">Este es solo un alias para $ ctx-&amp;gt; new.</target>
        </trans-unit>
        <trans-unit id="4341fe03623ad4301c3243c214057adf6cd69228" translate="yes" xml:space="preserve">
          <source>This is just an alias for $md5-&amp;gt;new.</source>
          <target state="translated">Este es solo un alias para $ md5-&amp;gt; new.</target>
        </trans-unit>
        <trans-unit id="99b8f0dcbd7ef8ebc2a3383d96beb914e7c2ab77" translate="yes" xml:space="preserve">
          <source>This is just an alias for &lt;code&gt;to_bytes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb98ec9f418273dc2ca6cd9acdcab91a8675d3b" translate="yes" xml:space="preserve">
          <source>This is just like get_title, except that it returns just the modulename, if the title seems to be of the form &quot;SomeModuleName -- description&quot;.</source>
          <target state="translated">Esto es como get_title,excepto que devuelve sólo el nombre del módulo,si el título parece ser de la forma &quot;SomeModuleName --description&quot;.</target>
        </trans-unit>
        <trans-unit id="3efe951774b37c8f5ed5c70b61d80e43335a5d14" translate="yes" xml:space="preserve">
          <source>This is just like the &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, except that it matches only once between calls to the &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; operator. This is a useful optimization when you want to see only the first occurrence of something in each file of a set of files, for instance. Only &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; patterns local to the current package are reset.</source>
          <target state="translated">Esto es como el &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, excepto que solo coincide una vez entre las llamadas al operador &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; . &amp;Eacute;sta es una optimizaci&amp;oacute;n &amp;uacute;til cuando, por ejemplo, desea ver solo la primera aparici&amp;oacute;n de algo en cada archivo de un conjunto de archivos. Solo &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; los patrones locales del paquete actual se restablecen.</target>
        </trans-unit>
        <trans-unit id="d73aff15bc3ff484da433da10ce9913b15e17a51" translate="yes" xml:space="preserve">
          <source>This is just like the &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, except that it matches only once between calls to the &lt;code&gt;reset()&lt;/code&gt; operator. This is a useful optimization when you want to see only the first occurrence of something in each file of a set of files, for instance. Only &lt;code&gt;m??&lt;/code&gt; patterns local to the current package are reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380457e35227699cc7301b94acae78bea6e5c126" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for &quot;=cut&quot; lines, not code lines. The same caveats apply. &quot;=cut&quot; lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0695e20ad7060a9368dde02cbfce95268dbd1b5b" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for &quot;=pod&quot; lines, not code lines. The same caveats apply. &quot;=pod&quot; lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2022f30d9b2a5b27c04280f1ebd50a51bbc345d3" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for lines that are seemingly blank but have whitespace (&quot; &quot; and/or &quot;\t&quot;) on them, not code lines. The same caveats apply. These lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f273b15a0cb3300a978b7939f344dd1d08639d" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&quot;a&quot;&lt;/code&gt; , but some elements are the empty string, and should not be adjusted. The one internal Perl property accessible by &lt;code&gt;prop_invmap&lt;/code&gt; is of this type: &quot;Perl_Decimal_Digit&quot; returns an inversion map which gives the numeric values that are represented by the Unicode decimal digit characters. Characters that don't represent decimal digits map to the empty string, like so:</source>
          <target state="translated">Esto es como &lt;code&gt;&quot;a&quot;&lt;/code&gt; , pero algunos elementos son la cadena vac&amp;iacute;a y no deben ajustarse. La &amp;uacute;nica propiedad interna de Perl accesible por &lt;code&gt;prop_invmap&lt;/code&gt; es de este tipo: &quot;Perl_Decimal_Digit&quot; devuelve un mapa de inversi&amp;oacute;n que da los valores num&amp;eacute;ricos que est&amp;aacute;n representados por los caracteres de d&amp;iacute;gitos decimales Unicode. Los caracteres que no representan d&amp;iacute;gitos decimales se asignan a la cadena vac&amp;iacute;a, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="0c85507fc9c8edf048dedc4d8b1c473489d69c9b" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&quot;a&quot;&lt;/code&gt;, but some elements are the empty string, and should not be adjusted. The one internal Perl property accessible by &lt;code&gt;prop_invmap&lt;/code&gt; is of this type: &quot;Perl_Decimal_Digit&quot; returns an inversion map which gives the numeric values that are represented by the Unicode decimal digit characters. Characters that don't represent decimal digits map to the empty string, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1dd5dc0a1e329de530690bfade7652c51e667a" translate="yes" xml:space="preserve">
          <source>This is like accept_targets, except that it specifies also that the content of sections for this target should be treated as Pod text even if the target name in &quot;=for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed31723489424c54355ea43ef7bfdd64197f0ef8" translate="yes" xml:space="preserve">
          <source>This is like the &quot;over-bullet&quot; event structure; but note that the contents are &quot;item-number&quot; instead of &quot;item-bullet&quot;, and note that they will have a &quot;number&quot; attribute, which some formatters/processors may ignore (since, for example, there's no need for it in HTML when producing an &quot;&amp;lt;UL&amp;gt;&amp;lt;LI&amp;gt;...&amp;lt;/LI&amp;gt;...&amp;lt;/UL&amp;gt;&quot; structure), but which any processor may use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2c127a4acabd567283fc3055323b13e8a32015" translate="yes" xml:space="preserve">
          <source>This is like the SMTP transport, but uses TLS security. You can authenticate with this module as well, using any mechanisms your server supports after STARTTLS.</source>
          <target state="translated">Esto es como el transporte SMTP,pero utiliza la seguridad del TLS.Puedes autenticarte con este módulo también,usando cualquier mecanismo que tu servidor soporte después de STARTTLS.</target>
        </trans-unit>
        <trans-unit id="5a91727b3a107b517a647724e9523d6e1a6aa45f" translate="yes" xml:space="preserve">
          <source>This is mainly used by legacy &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; tests which set the plan to &lt;code&gt;no plan&lt;/code&gt;, a construct that predates the much better &lt;code&gt;done_testing()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbc2d6ed341b1ef3ce37675e465b3be11154914" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;a href=&quot;#select-RBITS%2CWBITS%2CEBITS%2CTIMEOUT&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee19061e56d9213c77400710440b7c20343ebe03" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">Esto es principalmente &amp;uacute;til para construir mapas de bits para operaciones de manejo de tty POSIX &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; y de bajo nivel. Si FILEHANDLE es una expresi&amp;oacute;n, el valor se toma como un identificador de archivo indirecto, generalmente su nombre.</target>
        </trans-unit>
        <trans-unit id="4451800d0e0114802550054b61665e033a2b00a5" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">Esto es principalmente &amp;uacute;til para construir mapas de bits para operaciones de manejo de tty POSIX &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; y de bajo nivel. Si FILEHANDLE es una expresi&amp;oacute;n, el valor se toma como un identificador de archivo indirecto, generalmente su nombre.</target>
        </trans-unit>
        <trans-unit id="37ce9a12e2723922e8bd944d2d5d67e411bc7f1f" translate="yes" xml:space="preserve">
          <source>This is merely a synonym for &lt;code&gt;as_string&lt;/code&gt; .</source>
          <target state="translated">Esto es simplemente un sin&amp;oacute;nimo de &lt;code&gt;as_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff1814bfd6950f7490c26d111f974fff43e1eff" translate="yes" xml:space="preserve">
          <source>This is merely a synonym for &lt;code&gt;as_string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dab1c8c1fba88ee26cb0159afceae84eeab9c5c" translate="yes" xml:space="preserve">
          <source>This is more portable than the raw &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, but not as illustrative:</source>
          <target state="translated">Esto es m&amp;aacute;s port&amp;aacute;til que el &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; sin procesar , pero no tan ilustrativo:</target>
        </trans-unit>
        <trans-unit id="358b6febc6a20347552685e4650bab012743d763" translate="yes" xml:space="preserve">
          <source>This is more portable than the raw &lt;code&gt;ioctl&lt;/code&gt;, but not as illustrative:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a905466f9a6fe7fba1c2ba03bc5e341bea7a9afa" translate="yes" xml:space="preserve">
          <source>This is most likely the same as &lt;code&gt;$Config{osname}&lt;/code&gt;, and was the name known when perl was built. It might be different if perl was cross-compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ef392975ecd504b3ac95743d2709331ec1fc38" translate="yes" xml:space="preserve">
          <source>This is neither a specimen of simplicity nor a paragon of portability but it illustrates the point: We are able to sneak behind the scenes and access Perl's otherwise well-guarded memory! (Important note: Perl's &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; does</source>
          <target state="translated">Esto no es ni una muestra de simplicidad ni un modelo de portabilidad, pero ilustra el punto: &amp;iexcl;Podemos escabullirnos detr&amp;aacute;s de escena y acceder a la memoria de Perl, que de otro modo estar&amp;iacute;a bien guardada! (Nota importante: de Perl &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; hace</target>
        </trans-unit>
        <trans-unit id="3f30d05de7dd225aaab947f0992ea2b7121ca260" translate="yes" xml:space="preserve">
          <source>This is neither a specimen of simplicity nor a paragon of portability but it illustrates the point: We are able to sneak behind the scenes and access Perl's otherwise well-guarded memory! (Important note: Perl's &lt;code&gt;syscall&lt;/code&gt; does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ebf1cbe04784f38db52da63b8ec5a60455457d" translate="yes" xml:space="preserve">
          <source>This is normally all you need to know. However, many options are available:</source>
          <target state="translated">Esto es normalmente todo lo que necesitas saber.Sin embargo,hay muchas opciones disponibles:</target>
        </trans-unit>
        <trans-unit id="d00bfe25391751730fea233731dd8b0f5f6ab569" translate="yes" xml:space="preserve">
          <source>This is not &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;, which tells you how to use the debugger. This manpage describes low-level details concerning the debugger's internals, which range from difficult to impossible to understand for anyone who isn't incredibly intimate with Perl's guts. Caveat lector.</source>
          <target state="translated">Esto no es &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; , que le dice c&amp;oacute;mo usar el depurador. Esta p&amp;aacute;gina de manual describe detalles de bajo nivel relacionados con las partes internas del depurador, que var&amp;iacute;an de dif&amp;iacute;ciles a imposibles de entender para cualquiera que no sea muy &amp;iacute;ntimo con las entra&amp;ntilde;as de Perl. Lector de advertencia.</target>
        </trans-unit>
        <trans-unit id="33bd7c44464b83d74ae2002b960a112388650681" translate="yes" xml:space="preserve">
          <source>This is not a general purpose Unicode to byte encoding interface: use the &lt;code&gt;Encode&lt;/code&gt; extension for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f404a9e2e0db79bb4f43c8d7bbb05496d430ba62" translate="yes" xml:space="preserve">
          <source>This is not a general purpose Unicode to byte encoding interface: use the Encode extension for that.</source>
          <target state="translated">No se trata de una interfaz de codificación de Unicode a byte de propósito general:use la extensión Encode para eso.</target>
        </trans-unit>
        <trans-unit id="7457d8ee09385437d0b615e7e131b4e9c0b973a9" translate="yes" xml:space="preserve">
          <source>This is not a general purpose byte encoding to Unicode interface: use the Encode extension for that.</source>
          <target state="translated">No se trata de una codificación de bytes de propósito general para la interfaz de Unicode:use la extensión Encode para eso.</target>
        </trans-unit>
        <trans-unit id="4bba8250f7720ad535561da71f3cfe66f5ce3b19" translate="yes" xml:space="preserve">
          <source>This is not actually a Unicode-specified obsolescence, but applies to certain Perl extensions that are present for backwards compatibility, but are discouraged from being used. These are not obsolete, but their meanings are not stable. Future Unicode versions could force any of these extensions to be removed without warning, replaced by another property with the same name that means something different. An '&lt;b&gt;X&lt;/b&gt;' flags each such entry in the table. Use the equivalent shown instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d116bb6d0c3c84c2243b689bc93fe4a6155eb5cb" translate="yes" xml:space="preserve">
          <source>This is not as short as before, but it makes it more obvious that we intend to have little-endian byte-order for a whole group, not only for individual template codes. It can also be more readable and easier to maintain.</source>
          <target state="translated">Esto no es tan corto como antes,pero hace más evidente que pretendemos tener un orden de bytes poco significativo para todo un grupo,no sólo para los códigos de plantilla individuales.También puede ser más legible y más fácil de mantener.</target>
        </trans-unit>
        <trans-unit id="21c82389f9ec1dc190c296dba01242b89223a846" translate="yes" xml:space="preserve">
          <source>This is not ideal, but it seems to be the best compromise. If it doesn't work for you, please let me know the details of how it broke.</source>
          <target state="translated">Esto no es ideal,pero parece ser el mejor compromiso.Si no funciona para usted,por favor,hágame saber los detalles de cómo se rompió.</target>
        </trans-unit>
        <trans-unit id="a8f2331f9105fa67d4e126b8930145be58fae503" translate="yes" xml:space="preserve">
          <source>This is not ok:</source>
          <target state="translated">Esto no está bien:</target>
        </trans-unit>
        <trans-unit id="909f3f0de148a4f0a784930ff89af77cea3c7576" translate="yes" xml:space="preserve">
          <source>This is not really a &quot;severe&quot; error, but it is supposed to be raised by default even if warnings are not enabled, and currently the only way to do that in Perl is to mark it as serious.</source>
          <target state="translated">No se trata realmente de un error &quot;grave&quot;,pero se supone que debe ser planteado por defecto aunque las advertencias no estén habilitadas,y actualmente la única forma de hacerlo en Perl es marcarlo como grave.</target>
        </trans-unit>
        <trans-unit id="2b98cc8fd878d4e526c57ff147de3c4320ff2bb7" translate="yes" xml:space="preserve">
          <source>This is not required, but is recommended in case any code is called which may reset or alter &lt;code&gt;$@&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cb1cc350f7652ef06061348fb3eea6152592f9" translate="yes" xml:space="preserve">
          <source>This is not the normal way to consume lexed text. For that, use &lt;a href=&quot;#lex_read_to&quot;&gt;&quot;lex_read_to&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197111743c19bce55304223ee2f18830ead89426" translate="yes" xml:space="preserve">
          <source>This is not the normal way to consume lexed text. For that, use &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt;.</source>
          <target state="translated">Esta no es la forma normal de consumir texto lexado. Para eso, use &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f9e6c0b666a1af0815bd174af9f121c2162997f" translate="yes" xml:space="preserve">
          <source>This is not the right answer at all, but the sum looks correct. I wonder if it's anything to do with operator precedence? We'll try a couple of other possibilities with our sum:</source>
          <target state="translated">Esta no es la respuesta correcta en absoluto,pero la suma parece correcta.Me pregunto si tiene algo que ver con la precedencia del operador.Intentaremos un par de posibilidades más con nuestra suma:</target>
        </trans-unit>
        <trans-unit id="8a04fbe62aa8087e67610ad69a72c7364e385eaa" translate="yes" xml:space="preserve">
          <source>This is not the sigil you use in front of an array name to get the last index, like &lt;code&gt;$#array&lt;/code&gt; . That's still how you get the last index of an array in Perl. The two have nothing to do with each other.</source>
          <target state="translated">Este no es el sigilo que usa delante de un nombre de matriz para obtener el &amp;uacute;ltimo &amp;iacute;ndice, como &lt;code&gt;$#array&lt;/code&gt; . As&amp;iacute; es como se obtiene el &amp;uacute;ltimo &amp;iacute;ndice de una matriz en Perl. Los dos no tienen nada que ver con si mismos.</target>
        </trans-unit>
        <trans-unit id="0152b6d921fb917b16faa5b33711753db7914ad7" translate="yes" xml:space="preserve">
          <source>This is not the sigil you use in front of an array name to get the last index, like &lt;code&gt;$#array&lt;/code&gt;. That's still how you get the last index of an array in Perl. The two have nothing to do with each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71eefb6bc615d22ea75cd4d866e05c590f48f94" translate="yes" xml:space="preserve">
          <source>This is not to say that Perl threads are completely different from everything that's ever come before. They're not. Perl's threading model owes a lot to other thread models, especially POSIX. Just as Perl is not C, though, Perl threads are not POSIX threads. So if you find yourself looking for mutexes, or thread priorities, it's time to step back a bit and think about what you want to do and how Perl can do it.</source>
          <target state="translated">Esto no quiere decir que los hilos de Perl sean completamente diferentes de todo lo que ha venido antes.No lo son.El modelo de hilos de Perl debe mucho a otros modelos de hilos,especialmente al POSIX.Así como Perl no es C,sin embargo,los hilos de Perl no son hilos POSIX.Así que si te encuentras buscando mutexes,o prioridades de hilos,es hora de dar un paso atrás y pensar en lo que quieres hacer y cómo puede hacerlo Perl.</target>
        </trans-unit>
        <trans-unit id="1490fa72c1eafb91d46399cb68efda52398b105d" translate="yes" xml:space="preserve">
          <source>This is not very useful, and perl currently optimizes this away.</source>
          <target state="translated">Esto no es muy útil,y Perl actualmente lo optimiza.</target>
        </trans-unit>
        <trans-unit id="719ad110f9ecd2d06449f518fe559ae60b466e21" translate="yes" xml:space="preserve">
          <source>This is now the recommended interface to install().</source>
          <target state="translated">Esta es ahora la interfaz recomendada para instalar().</target>
        </trans-unit>
        <trans-unit id="8dd3c5aefc65986cd4924a120675ce7dc9b1881f" translate="yes" xml:space="preserve">
          <source>This is of paramount importance, since it's the documentation of what goes where in the Perl source. Read it over a couple of times and it might start to make sense - don't worry if it doesn't yet, because the best way to study it is to read it in conjunction with poking at Perl source, and we'll do that later on.</source>
          <target state="translated">Esto es de suma importancia,ya que es la documentación de lo que va donde en la fuente de Perl.Léelo un par de veces y puede que empiece a tener sentido,no te preocupes si aún no lo tiene,porque la mejor manera de estudiarlo es leerlo junto con la fuente de Perl,y lo haremos más tarde.</target>
        </trans-unit>
        <trans-unit id="5903d2508c471509c3a8871c1121aaa61b5835b7" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadd54f30e37dbf502c0a6893df00ea6b04ab979" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">Esto suele ser &amp;uacute;til si necesita verificar la versi&amp;oacute;n actual de Perl antes de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; m&amp;oacute;dulos de biblioteca que no funcionan con versiones anteriores de Perl. (Tratamos de no hacer esto m&amp;aacute;s de lo necesario).</target>
        </trans-unit>
        <trans-unit id="96345383ecfecda78d417eea671d77452c1d163e" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">Esto suele ser &amp;uacute;til si necesita verificar la versi&amp;oacute;n actual de Perl antes de &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; m&amp;oacute;dulos de biblioteca que no funcionan con versiones anteriores de Perl. (Tratamos de no hacer esto m&amp;aacute;s de lo necesario).</target>
        </trans-unit>
        <trans-unit id="b7065d0815c75fb916f5ccef644a97fc5f9a5ab5" translate="yes" xml:space="preserve">
          <source>This is one of the cases we mentioned earlier in which references could spring into existence when in an lvalue context. Before this statement, &lt;code&gt;$array[$x]&lt;/code&gt; may have been undefined. If so, it's automatically defined with a hash reference so that we can look up &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; in it. Likewise &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; will automatically get defined with an array reference so that we can look up &lt;code&gt;[0]&lt;/code&gt; in it. This process is called</source>
          <target state="translated">Este es uno de los casos que mencionamos anteriormente en el que las referencias podr&amp;iacute;an surgir en un contexto de valor l. Antes de esta declaraci&amp;oacute;n, &lt;code&gt;$array[$x]&lt;/code&gt; puede no haber sido definido. Si es as&amp;iacute;, se define autom&amp;aacute;ticamente con una referencia de hash para que podamos buscar &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; en &amp;eacute;l. Del mismo modo, &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; se definir&amp;aacute; autom&amp;aacute;ticamente con una referencia de matriz para que podamos buscar &lt;code&gt;[0]&lt;/code&gt; en ella. Este proceso se llama</target>
        </trans-unit>
        <trans-unit id="6a3344e74e174252dc0aef67360fb712feea83d3" translate="yes" xml:space="preserve">
          <source>This is one of the only places where giving a prototype to a closure makes much sense. If you wanted to impose scalar context on the arguments of these functions (probably not a wise idea for this particular example), you could have written it this way instead:</source>
          <target state="translated">Este es uno de los únicos lugares donde dar un prototipo de cierre tiene mucho sentido.Si se quisiera imponer un contexto escalar a los argumentos de estas funciones (probablemente no sea una idea inteligente para este ejemplo en particular),se podría haber escrito de esta manera en su lugar:</target>
        </trans-unit>
        <trans-unit id="36e82904f13aaec8c8bc429b12fde4bbb0fe088f" translate="yes" xml:space="preserve">
          <source>This is only needed when converting a metadata fragment that does not include a &lt;code&gt;meta-spec&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8815273ee560d0448d9c01c105592b19a9f70fd8" translate="yes" xml:space="preserve">
          <source>This is only present when &lt;code&gt;netorder&lt;/code&gt; is FALSE. It is the $Config{byteorder} string of the perl that created this image. It is a string like &quot;1234&quot; (32 bit little endian) or &quot;87654321&quot; (64 bit big endian). This must match the current perl for the image to be readable by Storable.</source>
          <target state="translated">Esto solo est&amp;aacute; presente cuando &lt;code&gt;netorder&lt;/code&gt; es FALSE. Es la cadena $ Config {byteorder} del perl que cre&amp;oacute; esta imagen. Es una cadena como &quot;1234&quot; (little endian de 32 bits) o &quot;87654321&quot; (big endian de 64 bits). Debe coincidir con el perl actual para que Storable pueda leer la imagen.</target>
        </trans-unit>
        <trans-unit id="84ff724c95d2598efdb8d7d443f2851d8e9c24b5" translate="yes" xml:space="preserve">
          <source>This is only required on some platforms which do not handle dependent libraries automatically. For example the Socket Perl extension library (</source>
          <target state="translated">Esto sólo se requiere en algunas plataformas que no manejan automáticamente las bibliotecas dependientes.Por ejemplo,la biblioteca de extensión Socket Perl (</target>
        </trans-unit>
        <trans-unit id="3167fd37c36e8874785bfe9f3f3013cce7f288bd" translate="yes" xml:space="preserve">
          <source>This is open source software. The code repository is available for public review and contribution under the terms of the license.</source>
          <target state="translated">Esto es software de código abierto.El repositorio de código está disponible para su revisión y contribución pública bajo los términos de la licencia.</target>
        </trans-unit>
        <trans-unit id="bcfe5a91a20366b07a20b45c08c83d2cb3335747" translate="yes" xml:space="preserve">
          <source>This is our final regexp. To recap, we built a regexp by</source>
          <target state="translated">Este es nuestro último regexp.Para recapitular,construimos un regexp por</target>
        </trans-unit>
        <trans-unit id="55cbe19c15cda5405c9b99032930566aa6e4cd4b" translate="yes" xml:space="preserve">
          <source>This is parsed as:</source>
          <target state="translated">Esto se analiza como:</target>
        </trans-unit>
        <trans-unit id="4f7853da7a16df56ba94a3f89eeeb6c41db7cabc" translate="yes" xml:space="preserve">
          <source>This is partially implemented now.</source>
          <target state="translated">Esto está parcialmente implementado ahora.</target>
        </trans-unit>
        <trans-unit id="2a6f22dd0203804895067e4cd94d48784411f916" translate="yes" xml:space="preserve">
          <source>This is particularly useful for dynamic patterns, such as those read in from a configuration file, taken from an argument, or specified in a table somewhere. Consider the case where some patterns want to be case-sensitive and some do not: The case-insensitive ones merely need to include &lt;code&gt;(?i)&lt;/code&gt; at the front of the pattern. For example:</source>
          <target state="translated">Esto es particularmente &amp;uacute;til para patrones din&amp;aacute;micos, como los que se leen desde un archivo de configuraci&amp;oacute;n, se toman de un argumento o se especifican en una tabla en alg&amp;uacute;n lugar. Considere el caso en el que algunos patrones quieren distinguir entre may&amp;uacute;sculas y min&amp;uacute;sculas y otros no: los que no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas simplemente necesitan incluir &lt;code&gt;(?i)&lt;/code&gt; al principio del patr&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a9a8ef21b0f21974a251d0cd49767a5e49f56bc4" translate="yes" xml:space="preserve">
          <source>This is particularly useful for dynamically-generated patterns, such as those read in from a configuration file, taken from an argument, or specified in a table somewhere. Consider the case where some patterns want to be case-sensitive and some do not: The case-insensitive ones merely need to include &lt;code&gt;(?i)&lt;/code&gt; at the front of the pattern. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa59114ea7716b61a1b0ecf212fbfdac38cd5ec" translate="yes" xml:space="preserve">
          <source>This is particularly useful if you have More Than One Way (tm) to solve a problem in a program, and only wish to continue down a path if all modules could be loaded, and not load them if they couldn't.</source>
          <target state="translated">Esto es particularmente útil si tienes más de un camino (tm)para resolver un problema en un programa,y sólo deseas continuar por un camino si todos los módulos pueden ser cargados,y no cargarlos si no pueden.</target>
        </trans-unit>
        <trans-unit id="7f5141125aa28c42d6dec636c32fcbaa85fe78c3" translate="yes" xml:space="preserve">
          <source>This is particularly useful when applied to code references returned from reval().</source>
          <target state="translated">Esto es particularmente útil cuando se aplica a las referencias de código devueltas de reval().</target>
        </trans-unit>
        <trans-unit id="3afdcef939cf6d1f8b0ef2be038cdb0c7d7984fa" translate="yes" xml:space="preserve">
          <source>This is powerful, and slightly dangerous, in that it's possible to intend (with the utmost sincerity) to use a hard reference, and accidentally use a symbolic reference instead. To protect against that, you can say</source>
          <target state="translated">Esto es poderoso,y ligeramente peligroso,ya que es posible intentar (con la mayor sinceridad)usar una referencia dura,y accidentalmente usar una referencia simbólica en su lugar.Para protegerse contra eso,se puede decir</target>
        </trans-unit>
        <trans-unit id="1d61b3fe5532441244041a6185a4d7b90b80ec48" translate="yes" xml:space="preserve">
          <source>This is primarily meant for the use of modules such as FTP where passwords are sent, but we do not want to display them in the debugging information.</source>
          <target state="translated">Esto es principalmente para el uso de módulos como el FTP donde se envían las contraseñas,pero no queremos mostrarlas en la información de depuración.</target>
        </trans-unit>
        <trans-unit id="01c91853268ed50e9d0a33c6896652af44de4d99" translate="yes" xml:space="preserve">
          <source>This is primarily of use for people who repackage Perl modules.</source>
          <target state="translated">Esto es principalmente de utilidad para las personas que reempacan los módulos de Perl.</target>
        </trans-unit>
        <trans-unit id="831dab0bf255edc5ba7e605462344bdbe78142e8" translate="yes" xml:space="preserve">
          <source>This is primarily used inside &lt;code&gt;(?{...})&lt;/code&gt; blocks for examining text recently matched. For example, to effectively capture text to a variable (in addition to &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc.), replace &lt;code&gt;(...)&lt;/code&gt; with</source>
          <target state="translated">Esto se usa principalmente dentro de los bloques &lt;code&gt;(?{...})&lt;/code&gt; para examinar el texto coincidente recientemente. Por ejemplo, para capturar texto de manera efectiva en una variable (adem&amp;aacute;s de &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc.), reemplace &lt;code&gt;(...)&lt;/code&gt; con</target>
        </trans-unit>
        <trans-unit id="785aba462ddf893b4d7d212c5fc066f6e4b29bd8" translate="yes" xml:space="preserve">
          <source>This is primarily used inside &lt;code&gt;(?{...})&lt;/code&gt; blocks for examining text recently matched. For example, to effectively capture text to a variable (in addition to &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc.), replace &lt;code&gt;(...)&lt;/code&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471731e21edc337b491a7b40340da72650201ff9" translate="yes" xml:space="preserve">
          <source>This is primarily used when you need to make several actions atomic (against some signals anyway).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43405231d7a3fc726c046090388674dddde66ec5" translate="yes" xml:space="preserve">
          <source>This is primarily useful for install scripts.</source>
          <target state="translated">Esto es principalmente útil para instalar scripts.</target>
        </trans-unit>
        <trans-unit id="71555351eedbd86160cbba934f94d326494c3535" translate="yes" xml:space="preserve">
          <source>This is printf() equivalent. printf is #defined to this function, so it is (currently) legal to use &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; in perl sources.</source>
          <target state="translated">Esto es equivalente a printf (). printf est&amp;aacute; #definido para esta funci&amp;oacute;n, por lo que (actualmente) es legal usar &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; en fuentes de Perl.</target>
        </trans-unit>
        <trans-unit id="5a921444f0499fb36eee87f18490349a0c0c08e2" translate="yes" xml:space="preserve">
          <source>This is printf() equivalent. printf is #defined to this function, so it is (currently) legal to use &lt;code&gt;printf(fmt,...)&lt;/code&gt; in perl sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea35349c6ed8d6a98b7de634d09f57721480861" translate="yes" xml:space="preserve">
          <source>This is private to the Perl core and subject to change. Should be left null.</source>
          <target state="translated">Esto es privado del núcleo de Perl y está sujeto a cambios.Debe dejarse sin efecto.</target>
        </trans-unit>
        <trans-unit id="a42a74dee5bfb28b5a2d265ff8a638902c0a2d41" translate="yes" xml:space="preserve">
          <source>This is probably not what you want to use, you probably wanted &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;&quot;sv_usepvn_flags&quot;&lt;/a&gt; or &lt;a href=&quot;#sv_setpvn&quot;&gt;&quot;sv_setpvn&quot;&lt;/a&gt; or &lt;a href=&quot;#sv_setpvs&quot;&gt;&quot;sv_setpvs&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa02440d9fac9b73c470e7ca881854b6795009" translate="yes" xml:space="preserve">
          <source>This is probably not what you want to use, you probably wanted &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt; or &lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt; or &lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt;.</source>
          <target state="translated">Probablemente esto no sea lo que desea usar, probablemente quisiera &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt; o &lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt; o &lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="697287005f5cb5ed6d011d9e5061126f21f55b05" translate="yes" xml:space="preserve">
          <source>This is provided as a more readable version of &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">Esto se proporciona como una versi&amp;oacute;n m&amp;aacute;s legible de &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cabb9b2376d3134de9c8bd807fc2548baba2fca" translate="yes" xml:space="preserve">
          <source>This is quite different, however, from not even trusting the writer of the code not to try to do something evil. That's the kind of trust needed when someone hands you a program you've never seen before and says, &quot;Here, run this.&quot; For that kind of safety, you might want to check out the Safe module, included standard in the Perl distribution. This module allows the programmer to set up special compartments in which all system operations are trapped and namespace access is carefully controlled. Safe should not be considered bullet-proof, though: it will not prevent the foreign code to set up infinite loops, allocate gigabytes of memory, or even abusing perl bugs to make the host interpreter crash or behave in unpredictable ways. In any case it's better avoided completely if you're really concerned about security.</source>
          <target state="translated">Esto es muy diferente,sin embargo,de no confiar en el escritor del código para no tratar de hacer algo malo.Ese es el tipo de confianza que se necesita cuando alguien te da un programa que nunca has visto antes y te dice,&quot;Toma,ejecuta esto&quot;.Para ese tipo de seguridad,tal vez quieras revisar el módulo de seguridad,incluido de forma estándar en la distribución Perl.Este módulo permite al programador establecer compartimentos especiales en los que se atrapan todas las operaciones del sistema y se controla cuidadosamente el acceso al espacio de nombres.Sin embargo,Safe no debe considerarse a prueba de balas:no impedirá que el código extranjero establezca bucles infinitos,asigne gigabytes de memoria o incluso que abuse de los bugs de perl para hacer que el intérprete anfitrión se bloquee o se comporte de forma impredecible.En cualquier caso,es mejor evitarlo completamente si realmente te preocupa la seguridad.</target>
        </trans-unit>
        <trans-unit id="50d419167936516f6bf9a1f029bd288bcc5eb141" translate="yes" xml:space="preserve">
          <source>This is quite typical for .xs files: usually the .xs file provides an interface to an existing C function. Then this C function is defined somewhere (either in an external library, or in the first part of .xs file), and a Perl interface to this function (i.e. &quot;Perl glue&quot;) is described in the second part of .xs file. The situation in &lt;a href=&quot;#EXAMPLE-1&quot;&gt;&quot;EXAMPLE 1&quot;&lt;/a&gt;, &lt;a href=&quot;#EXAMPLE-2&quot;&gt;&quot;EXAMPLE 2&quot;&lt;/a&gt;, and &lt;a href=&quot;#EXAMPLE-3&quot;&gt;&quot;EXAMPLE 3&quot;&lt;/a&gt;, when all the work is done inside the &quot;Perl glue&quot;, is somewhat of an exception rather than the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc844a09760bd8a2dc9b577b36da09548b575605" translate="yes" xml:space="preserve">
          <source>This is quite typical for .xs files: usually the .xs file provides an interface to an existing C function. Then this C function is defined somewhere (either in an external library, or in the first part of .xs file), and a Perl interface to this function (i.e. &quot;Perl glue&quot;) is described in the second part of .xs file. The situation in &lt;a href=&quot;#EXAMPLE-1&quot;&gt;EXAMPLE 1&lt;/a&gt;, &lt;a href=&quot;#EXAMPLE-2&quot;&gt;EXAMPLE 2&lt;/a&gt;, and &lt;a href=&quot;#EXAMPLE-3&quot;&gt;EXAMPLE 3&lt;/a&gt;, when all the work is done inside the &quot;Perl glue&quot;, is somewhat of an exception rather than the rule.</source>
          <target state="translated">Esto es bastante t&amp;iacute;pico de los archivos .xs: normalmente el archivo .xs proporciona una interfaz para una funci&amp;oacute;n C existente. Luego, esta funci&amp;oacute;n C se define en alg&amp;uacute;n lugar (ya sea en una biblioteca externa o en la primera parte del archivo .xs), y una interfaz Perl para esta funci&amp;oacute;n (es decir, &quot;pegamento Perl&quot;) se describe en la segunda parte del archivo .xs. La situaci&amp;oacute;n del &lt;a href=&quot;#EXAMPLE-1&quot;&gt;EJEMPLO 1&lt;/a&gt; , &lt;a href=&quot;#EXAMPLE-2&quot;&gt;EJEMPLO 2&lt;/a&gt; y &lt;a href=&quot;#EXAMPLE-3&quot;&gt;EJEMPLO 3&lt;/a&gt; , cuando todo el trabajo se realiza dentro del &quot;pegamento Perl&quot;, es una excepci&amp;oacute;n en lugar de la regla.</target>
        </trans-unit>
        <trans-unit id="c3a982ed6685f74bf9f57db540f3caed5035dcd6" translate="yes" xml:space="preserve">
          <source>This is quite useful as it usually improves readability. While this works fine for an &lt;code&gt;SV *&lt;/code&gt; , it's unfortunately not as easy to have &lt;code&gt;AV *&lt;/code&gt; or &lt;code&gt;HV *&lt;/code&gt; as a return value. You</source>
          <target state="translated">Esto es bastante &amp;uacute;til ya que generalmente mejora la legibilidad. Si bien esto funciona bien para un &lt;code&gt;SV *&lt;/code&gt; , desafortunadamente no es tan f&amp;aacute;cil tener &lt;code&gt;AV *&lt;/code&gt; o &lt;code&gt;HV *&lt;/code&gt; como valor de retorno. T&amp;uacute;</target>
        </trans-unit>
        <trans-unit id="02c1d462530bf64748def6c496de1d6240bfa91b" translate="yes" xml:space="preserve">
          <source>This is quite useful as it usually improves readability. While this works fine for an &lt;code&gt;SV *&lt;/code&gt;, it's unfortunately not as easy to have &lt;code&gt;AV *&lt;/code&gt; or &lt;code&gt;HV *&lt;/code&gt; as a return value. You</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9aa2c2c409f58ba99139ca42f157f4afdf7a29" translate="yes" xml:space="preserve">
          <source>This is rarely used. It's one way to get around using an E&amp;lt;...&amp;gt; code sometimes. For example, instead of &quot;&lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt;&quot; (for &quot;N&amp;lt;3&quot;) you could write &quot;&lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &quot; (the &quot;Z&amp;lt;&amp;gt;&quot; breaks up the &quot;N&quot; and the &quot;&amp;lt;&quot; so they can't be considered the part of a (fictitious) &quot;N&amp;lt;...&amp;gt;&quot; code).</source>
          <target state="translated">Rara vez se usa. Es una forma de moverse usando un c&amp;oacute;digo E &amp;lt;...&amp;gt; a veces. Por ejemplo, en lugar de &quot; &lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt; &quot; (para &quot;N &amp;lt;3&quot;) podr&amp;iacute;as escribir &quot; &lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &quot; (la &quot;Z &amp;lt;&amp;gt;&quot; divide la &quot;N&quot; y la &quot;&amp;lt;&quot; para que no puede considerarse parte de un c&amp;oacute;digo (ficticio) &quot;N &amp;lt;...&amp;gt;&quot;).</target>
        </trans-unit>
        <trans-unit id="3c3972509e727368d3c5e9a50516482551fe729d" translate="yes" xml:space="preserve">
          <source>This is rarely used. It's one way to get around using an E&amp;lt;...&amp;gt; code sometimes. For example, instead of &quot;&lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt;&quot; (for &quot;N&amp;lt;3&quot;) you could write &quot;&lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt;&quot; (the &quot;Z&amp;lt;&amp;gt;&quot; breaks up the &quot;N&quot; and the &quot;&amp;lt;&quot; so they can't be considered the part of a (fictitious) &quot;N&amp;lt;...&amp;gt;&quot; code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c569493cb06e371332b5d2d180bdd4a7a876b1d" translate="yes" xml:space="preserve">
          <source>This is required by some servers. For example if you are connecting to an INN server and you have transfer permission your connection will be connected to the transfer daemon, not the NNTP daemon. Issuing this command will cause the transfer daemon to hand over control to the NNTP daemon.</source>
          <target state="translated">Esto es requerido por algunos servidores.Por ejemplo,si te conectas a un servidor INN y tienes permiso de transferencia,tu conexión se conectará al demonio de transferencia,no al demonio NNTP.Emitir este comando hará que el demonio de transferencia entregue el control al demonio NNTP.</target>
        </trans-unit>
        <trans-unit id="cbdfb46249e842a142c962c6d9643c65a18e64d0" translate="yes" xml:space="preserve">
          <source>This is required since on many unix systems &lt;code&gt;/tmp&lt;/code&gt; is not owned by root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aba726220151e0bdd8e20f672a38f3cb853c543" translate="yes" xml:space="preserve">
          <source>This is required since on many unix systems C is not owned by root.</source>
          <target state="translated">Esto es necesario ya que en muchos sistemas Unix el C no es propiedad de la raíz.</target>
        </trans-unit>
        <trans-unit id="53e759494f9bf8d7efd9149cfc161ebbf71db524" translate="yes" xml:space="preserve">
          <source>This is safer than and replaces the &quot;no_plan&quot; plan.</source>
          <target state="translated">Esto es más seguro que el plan &quot;no_plan&quot; y lo reemplaza.</target>
        </trans-unit>
        <trans-unit id="ce8477bd1dd658eb92098ae32e26b04afeab44b4" translate="yes" xml:space="preserve">
          <source>This is same as &lt;code&gt;new()&lt;/code&gt;, except that &lt;code&gt;generated_by&lt;/code&gt; and &lt;code&gt;meta-spec&lt;/code&gt; fields will be generated if not provided. This means the metadata structure is assumed to otherwise follow the latest &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ebcb8463dd98d519e70a00c26fec5b1949c87c" translate="yes" xml:space="preserve">
          <source>This is seldom necessary, though, because this is done automatically, like when you access an array:</source>
          <target state="translated">Sin embargo,esto rara vez es necesario,porque se hace automáticamente,como cuando se accede a una matriz:</target>
        </trans-unit>
        <trans-unit id="5b39df7c425593c524473bd917a5316f755e7f35" translate="yes" xml:space="preserve">
          <source>This is set to &lt;code&gt;true&lt;/code&gt; in</source>
          <target state="translated">Esto se establece en &lt;code&gt;true&lt;/code&gt; en</target>
        </trans-unit>
        <trans-unit id="bda100b399c447a02432db64ae424bebb5a77bb3" translate="yes" xml:space="preserve">
          <source>This is set to a true value. It allows the tests to determine if they are being executed through the harness or by any other means.</source>
          <target state="translated">Esto está fijado en un valor real.Permite que las pruebas determinen si se están ejecutando a través del arnés o por cualquier otro medio.</target>
        </trans-unit>
        <trans-unit id="784e1d59cc78e03dfce5c4eb5ddb5046b2ae8797" translate="yes" xml:space="preserve">
          <source>This is similar in spirit to, but not the same as, &lt;a href=&quot;http://man.he.net/man1/grep&quot;&gt;grep(1)&lt;/a&gt; and its relatives. In particular, it is not limited to using regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8825b383410611d9ab88c7c6da41a37ab67b7bd2" translate="yes" xml:space="preserve">
          <source>This is similar in spirit to, but not the same as, grep(1) and its relatives. In particular, it is not limited to using regular expressions.</source>
          <target state="translated">Esto es similar en espíritu,pero no es lo mismo que en el caso de Grep(1)y sus parientes.En particular,no se limita a utilizar expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="031672016e4d502c018309428e47661800aac1a9" translate="yes" xml:space="preserve">
          <source>This is similar to</source>
          <target state="translated">Esto es similar a</target>
        </trans-unit>
        <trans-unit id="3e6ba00cc4274369aaec7e06e964eb77cd40c12d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$&amp;amp;&lt;/code&gt; (&lt;code&gt;$MATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Esto es similar a &lt;code&gt;$&amp;amp;&lt;/code&gt; ( &lt;code&gt;$MATCH&lt;/code&gt; ) excepto que no incurre en la penalizaci&amp;oacute;n de rendimiento asociada con esa variable.</target>
        </trans-unit>
        <trans-unit id="b7e216fa4594cbacfaf20854b0ab30d1c8d5c1e2" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$&amp;amp;&lt;/code&gt; (&lt;code&gt;$MATCH&lt;/code&gt;) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e9006abb746eec00ddbe6c7b21cfe4ec62c97b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$'&lt;/code&gt; (&lt;code&gt;$POSTMATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Esto es similar a &lt;code&gt;$'&lt;/code&gt; ( &lt;code&gt;$POSTMATCH&lt;/code&gt; ) excepto que no incurre en la penalizaci&amp;oacute;n de rendimiento asociada con esa variable.</target>
        </trans-unit>
        <trans-unit id="6fd5c8a1ee96062bbcb6f2a27266f07276bffe2f" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$'&lt;/code&gt; (&lt;code&gt;$POSTMATCH&lt;/code&gt;) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e38c00b725c5a13563494b1438770078513b03" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$`&lt;/code&gt; ($PREMATCH) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">Esto es similar a &lt;code&gt;$`&lt;/code&gt; ($ PREMATCH) excepto que no incurre en la penalizaci&amp;oacute;n de rendimiento asociada con esa variable.</target>
        </trans-unit>
        <trans-unit id="b7b04635104076e8869c03a97df7510eda62d809" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt;, but just returns either a code reference or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate that no further methods of this name exist.</source>
          <target state="translated">Esto es similar a &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; , pero solo devuelve una referencia de c&amp;oacute;digo o &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; para indicar que no existen m&amp;aacute;s m&amp;eacute;todos con este nombre.</target>
        </trans-unit>
        <trans-unit id="c76a101755f29c4620b6ee3b21e4e2a7b2d96005" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;next::method&lt;/code&gt;, but just returns either a code reference or &lt;code&gt;undef&lt;/code&gt; to indicate that no further methods of this name exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73fed07cf9661cd5a76d43367f7870e1dfd1e63" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;string_vianame&lt;/code&gt; . The main difference is that under most circumstances, &lt;code&gt;vianame&lt;/code&gt; returns an ordinal code point, whereas &lt;code&gt;string_vianame&lt;/code&gt; returns a string. For example,</source>
          <target state="translated">Esto es similar a &lt;code&gt;string_vianame&lt;/code&gt; . La principal diferencia es que en la mayor&amp;iacute;a de circunstancias, &lt;code&gt;vianame&lt;/code&gt; devuelve un punto de c&amp;oacute;digo ordinal, mientras que &lt;code&gt;string_vianame&lt;/code&gt; devuelve una cadena. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="035b09da2ed8ab563a4781cdc8cd00f1a372a968" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;string_vianame&lt;/code&gt;. The main difference is that under most circumstances, &lt;code&gt;vianame&lt;/code&gt; returns an ordinal code point, whereas &lt;code&gt;string_vianame&lt;/code&gt; returns a string. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82735301d82a0dc4313bb1d53ad031d27f023c2f" translate="yes" xml:space="preserve">
          <source>This is similar to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; function for returning a string that has the arguments formatted as requested, see &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">Esto es similar a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; incorporada de Perl para devolver una cadena que tiene los argumentos formateados seg&amp;uacute;n lo solicitado, vea &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a0b7112ac62ec6b0732258b7ebbd4369edb185a" translate="yes" xml:space="preserve">
          <source>This is similar to Perl's builtin &lt;code&gt;sprintf()&lt;/code&gt; function for returning a string that has the arguments formatted as requested, see &lt;a href=&quot;perlfunc#sprintf&quot;&gt;&quot;sprintf&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9fc002d8f7d1fdb8d39dcb8cc96f69462055b3" translate="yes" xml:space="preserve">
          <source>This is similar to calling the &lt;code&gt;x&lt;/code&gt; command on each applicable var.</source>
          <target state="translated">Esto es similar a llamar al comando &lt;code&gt;x&lt;/code&gt; en cada var aplicable.</target>
        </trans-unit>
        <trans-unit id="c882c2e2c2f32205e6402773c4c5a8648cf274ab" translate="yes" xml:space="preserve">
          <source>This is similar to the &quot;cut group&quot; operator &lt;code&gt;::&lt;/code&gt; from Perl 6. Like &lt;code&gt;(*PRUNE)&lt;/code&gt; , this verb always matches, and when backtracked into on failure, it causes the regex engine to try the next alternation in the innermost enclosing group (capturing or otherwise) that has alternations. The two branches of a &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; do not count as an alternation, as far as &lt;code&gt;(*THEN)&lt;/code&gt; is concerned.</source>
          <target state="translated">Esto es similar al operador &quot;cortar grupo&quot; &lt;code&gt;::&lt;/code&gt; de Perl 6. Como &lt;code&gt;(*PRUNE)&lt;/code&gt; , este verbo siempre coincide, y cuando se retrocede en caso de falla, hace que el motor de expresiones regulares intente la siguiente alternancia en el grupo envolvente m&amp;aacute;s interno ( capturando o no) que tiene alternancias. Las dos ramas de un &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; no cuentan como una alternancia, en lo que respecta a &lt;code&gt;(*THEN)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="789212497ee1cf1f776a732c31bef719dc8f5cde" translate="yes" xml:space="preserve">
          <source>This is similar to the &quot;cut group&quot; operator &lt;code&gt;::&lt;/code&gt; from Raku. Like &lt;code&gt;(*PRUNE)&lt;/code&gt;, this verb always matches, and when backtracked into on failure, it causes the regex engine to try the next alternation in the innermost enclosing group (capturing or otherwise) that has alternations. The two branches of a &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-pattern&lt;/i&gt;|&lt;i&gt;no-pattern&lt;/i&gt;)&lt;/code&gt; do not count as an alternation, as far as &lt;code&gt;(*THEN)&lt;/code&gt; is concerned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b23340a8a44f500f9fdd2f514353aafef1f1600" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup()&lt;/code&gt; , for duplicating a file descriptor.</source>
          <target state="translated">Esto es similar a la funci&amp;oacute;n C &lt;code&gt;dup()&lt;/code&gt; , para duplicar un descriptor de archivo.</target>
        </trans-unit>
        <trans-unit id="ae6596049dbd554c0142eb69dbcbdccd65d36765" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup()&lt;/code&gt;, for duplicating a file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc59e25f670eb40f71d53b45961566d88e8da8a1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup2()&lt;/code&gt; , for duplicating a file descriptor to an another known file descriptor.</source>
          <target state="translated">Esto es similar a la funci&amp;oacute;n C &lt;code&gt;dup2()&lt;/code&gt; , para duplicar un descriptor de archivo en otro descriptor de archivo conocido.</target>
        </trans-unit>
        <trans-unit id="f1e6999776f77cce2c537978df0c9c5950783832" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup2()&lt;/code&gt;, for duplicating a file descriptor to an another known file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ae23dd5fc0059c09ec24ea0c5ef5acb6d58fa1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;mkfifo()&lt;/code&gt; for creating FIFO special files.</source>
          <target state="translated">Esto es similar a la funci&amp;oacute;n de C &lt;code&gt;mkfifo()&lt;/code&gt; para crear archivos especiales FIFO.</target>
        </trans-unit>
        <trans-unit id="cb82e089ae466005cc0dc383a964501667069da5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;nice()&lt;/code&gt; , for changing the scheduling preference of the current process. Positive arguments mean a more polite process, negative values a more needy process. Normal (non-root) user processes can only change towards being more polite.</source>
          <target state="translated">Esto es similar a la funci&amp;oacute;n de C &lt;code&gt;nice()&lt;/code&gt; , para cambiar la preferencia de programaci&amp;oacute;n del proceso actual. Los argumentos positivos significan un proceso m&amp;aacute;s cort&amp;eacute;s, los valores negativos un proceso m&amp;aacute;s necesitado. Los procesos de usuario normales (no root) solo pueden cambiar para ser m&amp;aacute;s educados.</target>
        </trans-unit>
        <trans-unit id="9a0808a5ff368707577d5e1f0e5bcb31b1f6ad15" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;nice()&lt;/code&gt;, for changing the scheduling preference of the current process. Positive arguments mean a more polite process, negative values a more needy process. Normal (non-root) user processes can only change towards being more polite.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
