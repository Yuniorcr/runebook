<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="a53ebba1ad04ff1655f21eedec8c4884b4f0921f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]&amp;lt;&lt;/code&gt; - the argument is left-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e132cbaaef31011a1629babcdb2722d2ebad1dd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846683b8124bfad974b84f7fc9e39451ea401d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0188d46c969099ec650ba736f85a9eff66c95ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;em&gt;followed by&lt;/em&gt; \n</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt; &lt;em&gt;seguido de&lt;/em&gt; \ n</target>
        </trans-unit>
        <trans-unit id="e1e0c067924632f3f30abfaccf8c2bbb3ddf0077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u{&lt;/code&gt; ( HEX_DIGIT &lt;code&gt;_&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt; )&lt;sup&gt;1..6&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u{&lt;/code&gt; (HEX_DIGIT &lt;code&gt;_&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt; ) &lt;sup&gt;1..6 &lt;/sup&gt; &lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7bfa60964b39253167d48d4743520e2dbebadd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</target>
        </trans-unit>
        <trans-unit id="776836237567e80ae21f14d79d75a578ed148885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; OCT_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; OCT_DIGIT HEX_DIGIT</target>
        </trans-unit>
        <trans-unit id="00300a7210e800449737f4642ef57d12724ef0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; - el argumento est&amp;aacute; alineado al centro en columnas de &lt;code&gt;width&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01c21f9f1ecd54e3162bbf94eb10f3ea34601934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_first&lt;/code&gt; is declared first and &lt;code&gt;_second&lt;/code&gt; is declared second, so &lt;code&gt;main&lt;/code&gt; will print &lt;code&gt;Declared second!&lt;/code&gt; and then &lt;code&gt;Declared first!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_first&lt;/code&gt; se declara primero y &lt;code&gt;_second&lt;/code&gt; se declara segundo, por lo que &lt;code&gt;main&lt;/code&gt; imprimir&amp;aacute; &lt;code&gt;Declared second!&lt;/code&gt; y luego &lt;code&gt;Declared first!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ead7d5541adaf8ebdf41a6d508ba49b3657a05af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.clone_from(&amp;amp;b)&lt;/code&gt; is equivalent to &lt;code&gt;a = b.clone()&lt;/code&gt; in functionality, but can be overridden to reuse the resources of &lt;code&gt;a&lt;/code&gt; to avoid unnecessary allocations.</source>
          <target state="translated">&lt;code&gt;a.clone_from(&amp;amp;b)&lt;/code&gt; es equivalente a &lt;code&gt;a = b.clone()&lt;/code&gt; en funcionalidad, pero se puede anular para reutilizar los recursos de &lt;code&gt;a&lt;/code&gt; para evitar asignaciones innecesarias.</target>
        </trans-unit>
        <trans-unit id="bffa81ddece0c699f61e73446e0e7a7aa7574e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is an address of the remote host. Anything which implements &lt;a href=&quot;trait.tosocketaddrs&quot;&gt;&lt;code&gt;ToSocketAddrs&lt;/code&gt;&lt;/a&gt; trait can be supplied for the address; see this trait documentation for concrete examples.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; es una direcci&amp;oacute;n del host remoto. Cualquier cosa que implemente el rasgo &lt;a href=&quot;trait.tosocketaddrs&quot;&gt; &lt;code&gt;ToSocketAddrs&lt;/code&gt; &lt;/a&gt; se puede proporcionar para la direcci&amp;oacute;n; consulte esta documentaci&amp;oacute;n de caracter&amp;iacute;sticas para obtener ejemplos concretos.</target>
        </trans-unit>
        <trans-unit id="e907f6b793f616d0554d1ef812dbaab556e6f22f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by(n)&lt;/code&gt; will return &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(())&lt;/code&gt;&lt;/a&gt; if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(k)&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050a75bfb5226a182a624df4e6beaa31f13e9244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by(n)&lt;/code&gt; will return [&lt;code&gt;Ok(())&lt;/code&gt;] if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or [&lt;code&gt;Err(k)&lt;/code&gt;] if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1090bbbf988d5db8fe1e7d4310304d4eab0a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by&lt;/code&gt; is the reverse version of &lt;a href=&quot;trait.iterator#method.advance_by&quot;&gt;&lt;code&gt;advance_by&lt;/code&gt;&lt;/a&gt;. This method will eagerly skip &lt;code&gt;n&lt;/code&gt; elements starting from the back by calling &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;&lt;code&gt;next_back&lt;/code&gt;&lt;/a&gt; up to &lt;code&gt;n&lt;/code&gt; times until &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88702021128bb05d1549ac38f9e0418e729d6a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_by(n)&lt;/code&gt; will return &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(())&lt;/code&gt;&lt;/a&gt; if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(k)&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab3df060974d3be2ff9687905004b7556deccac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_by(n)&lt;/code&gt; will return [&lt;code&gt;Ok(())&lt;/code&gt;] if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or [&lt;code&gt;Err(k)&lt;/code&gt;] if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc47904170ab5b0947d6455163b2615103c6272c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_n_and_return_first&lt;/code&gt; is the equivalent of:</source>
          <target state="translated">&lt;code&gt;advance_n_and_return_first&lt;/code&gt; es el equivalente de:</target>
        </trans-unit>
        <trans-unit id="7334bdce0fb332ca2b9eb380c9d263285a648deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; must be a power of two,</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; debe ser una potencia de dos,</target>
        </trans-unit>
        <trans-unit id="81f86fa079c8f6138b2948bc3a466198e0c28aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; must not be zero,</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; no debe ser cero,</target>
        </trans-unit>
        <trans-unit id="2e5d8088472d9b9ae5fe911581a8175e25768bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; representation hint was incorrectly declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fab09c70c7b6a56c907190780229e35909a10b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;false&lt;/code&gt;, given that no matter what else happens, the result will also be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;all()&lt;/code&gt; est&amp;aacute; en cortocircuito; en otras palabras, dejar&amp;aacute; de procesar tan pronto como encuentre un &lt;code&gt;false&lt;/code&gt; , dado que pase lo que pase, el resultado tambi&amp;eacute;n ser&amp;aacute; &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1fdfe232439033a2e4566ec9bed261742cfd878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if they all return &lt;code&gt;true&lt;/code&gt;, then so does &lt;code&gt;all()&lt;/code&gt;. If any of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;all()&lt;/code&gt; toma un cierre que devuelve &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; . Aplica este cierre a cada elemento del iterador, y si todos devuelven &lt;code&gt;true&lt;/code&gt; , tambi&amp;eacute;n lo hace &lt;code&gt;all()&lt;/code&gt; . Si alguno de ellos devuelve &lt;code&gt;false&lt;/code&gt; , devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b1ea7e4ca546145c30e0a3fd9f9951b3652afa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; with a comma separated list of configuration predicates. It is false if at least one predicate is false. If there are no predicates, it is true.</source>
          <target state="translated">&lt;code&gt;all()&lt;/code&gt; con una lista de predicados de configuraci&amp;oacute;n separados por comas. Es falso si al menos un predicado es falso. Si no hay predicados, es cierto.</target>
        </trans-unit>
        <trans-unit id="93f015cbe9a59d008db093f857475ae77d4f61b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46b8ce0cfccf0e88b3ec867444fdf83d7309de1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow(C)&lt;/code&gt; overrides the check for &lt;code&gt;C&lt;/code&gt; so that violations will go unreported,</source>
          <target state="translated">&lt;code&gt;allow(C)&lt;/code&gt; anula la verificaci&amp;oacute;n de &lt;code&gt;C&lt;/code&gt; para que las violaciones no se informen,</target>
        </trans-unit>
        <trans-unit id="fab10c9c448596fc24766cf727d854d069d7fbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;, given that no matter what else happens, the result will also be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;any()&lt;/code&gt; est&amp;aacute; en cortocircuito; en otras palabras, dejar&amp;aacute; de procesar tan pronto como encuentre un &lt;code&gt;true&lt;/code&gt; , dado que pase lo que pase, el resultado tambi&amp;eacute;n ser&amp;aacute; &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45232bdd9c1061a33a2956e0f63f7a3b670af6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if any of them return &lt;code&gt;true&lt;/code&gt;, then so does &lt;code&gt;any()&lt;/code&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;any()&lt;/code&gt; toma un cierre que devuelve &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; . Aplica este cierre a cada elemento del iterador, y si alguno de ellos devuelve &lt;code&gt;true&lt;/code&gt; , tambi&amp;eacute;n lo hace &lt;code&gt;any()&lt;/code&gt; . Si todos devuelven &lt;code&gt;false&lt;/code&gt; , devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8003eeaf86431d6298a4799cddebf1b8310bb6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; with a comma separated list of configuration predicates. It is true if at least one predicate is true. If there are no predicates, it is false.</source>
          <target state="translated">&lt;code&gt;any()&lt;/code&gt; con una lista de predicados de configuraci&amp;oacute;n separados por comas. Es cierto si al menos un predicado es verdadero. Si no hay predicados, es falso.</target>
        </trans-unit>
        <trans-unit id="d8252602ecba2599bff29ba4c7c605c0da224c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6f7408dc17f99f8be4ae7d8fca02fa880f9bdb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFICADOR&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cf8b787affc576d7693662632771a998f7ba8558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; - perform primitive casting, disambiguate the specific trait containing an item, or rename items in &lt;code&gt;use&lt;/code&gt; and &lt;code&gt;extern crate&lt;/code&gt; statements</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; : realizar fundici&amp;oacute;n primitiva, eliminar la ambig&amp;uuml;edad del rasgo espec&amp;iacute;fico que contiene un elemento o cambiar el nombre de los elementos en &lt;code&gt;use&lt;/code&gt; y declaraciones de &lt;code&gt;extern crate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5a842f96b8effc1941cd326a25a8d858aa23f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; can also be used with the &lt;code&gt;_&lt;/code&gt; placeholder when the destination type can be inferred. Note that this can cause inference breakage and usually such code should use an explicit type for both clarity and stability. This is most useful when converting pointers using &lt;code&gt;as *const _&lt;/code&gt; or &lt;code&gt;as *mut _&lt;/code&gt; though the &lt;a href=&quot;primitive.pointer#method.cast&quot;&gt;&lt;code&gt;cast&lt;/code&gt;&lt;/a&gt; method is recommended over &lt;code&gt;as *const _&lt;/code&gt; and it is &lt;a href=&quot;primitive.pointer#method.cast-1&quot;&gt;the same&lt;/a&gt; for &lt;code&gt;as *mut _&lt;/code&gt;: those methods make the intent clearer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f0afcb81a37e616f60078d990af59d18446e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; can be seen as the primitive for &lt;code&gt;From&lt;/code&gt; and &lt;code&gt;Into&lt;/code&gt;: &lt;code&gt;as&lt;/code&gt; only works with primitives (&lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, pointers, ...) whereas &lt;code&gt;From&lt;/code&gt; and &lt;code&gt;Into&lt;/code&gt; also works with types like &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Vec&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaa965c6322de30e3e4c0f88de200e922739361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; can be used to explicitly perform &lt;a href=&quot;../type-coercions&quot;&gt;coercions&lt;/a&gt;, as well as the following additional casts. Here &lt;code&gt;*T&lt;/code&gt; means either &lt;code&gt;*const T&lt;/code&gt; or &lt;code&gt;*mut T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; puede usarse para realizar expl&amp;iacute;citamente &lt;a href=&quot;../type-coercions&quot;&gt;coacciones&lt;/a&gt; , as&amp;iacute; como las siguientes conversiones adicionales. Aqu&amp;iacute; &lt;code&gt;*T&lt;/code&gt; medios ya sea &lt;code&gt;*const T&lt;/code&gt; o &lt;code&gt;*mut T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6fedd67841708883a0821ef41026220a4d6e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; is also used to rename imports in &lt;a href=&quot;keyword.use&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keyword.crate&quot;&gt;&lt;code&gt;extern crate&lt;/code&gt;&lt;/a&gt; statements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd35a3eaa74331985536515255fb948db60d6b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; is most commonly used to turn primitive types into other primitive types, but it has other uses that include turning pointers into addresses, addresses into pointers, and pointers into other pointers.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; se usa m&amp;aacute;s com&amp;uacute;nmente para convertir tipos primitivos en otros tipos primitivos, pero tiene otros usos que incluyen convertir punteros en direcciones, direcciones en punteros y punteros en otros punteros.</target>
        </trans-unit>
        <trans-unit id="a09afe36b467f7c38f3053b22ca1b3f46bf36da9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async fn&lt;/code&gt;/&lt;code&gt;impl trait&lt;/code&gt; return type cannot contain a projection or &lt;code&gt;Self&lt;/code&gt; that references lifetimes from a parent scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4180a92bc7b5e3193a04834544243fe6b863130a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async fn&lt;/code&gt;s are not yet supported in traits in Rust.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80980b9623b77cdece74aa97b22fddf4ef8e3eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async fn&lt;/code&gt;s return an &lt;code&gt;impl Future&lt;/code&gt;, making the following two examples equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b25451b9f27f4533a477c955598a0c5b93298d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; - return a &lt;code&gt;Future&lt;/code&gt; instead of blocking the current thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe59ee1c3316fa2333f095e6a45aeae3f61dac28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; is a keyword from the 2018 edition onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb8cd323a72522cf21c08e8f67bfc8b7e7d8d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; non-&lt;code&gt;move&lt;/code&gt; closures with parameters are currently not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32595b725bf6d6a52b6031ce1217209e5a16592d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; with non-move is currently not supported with the current version, you can use successfully by using move:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebc63ea105c8a2c9ae440a603c2bdafa5e5de4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092a940caffbe0906d5be7e67de7db15d3d8c3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt;&lt;code&gt;move&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba0f7539d49254147a21268fd587007ed43c552e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; - suspend execution until the result of a &lt;code&gt;Future&lt;/code&gt; is ready</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54a0afad477bc8d263345346554d4199d4ced24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; is a keyword from the 2018 edition onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0475a9c790352afea85606e3a2f0253eafd3d770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&quot;&lt;/code&gt; ( ASCII_FOR_STRING | BYTE_ESCAPE | STRING_CONTINUE )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b&quot;&lt;/code&gt; (ASCII_FOR_STRING | BYTE_ESCAPE | STRING_CONTINUE) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="357cc0ea4f6c2e9ad4f7141bf09487897efa2375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b'&lt;/code&gt; ( ASCII_FOR_CHAR | BYTE_ESCAPE ) &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b'&lt;/code&gt; (ASCII_FOR_CHAR | BYTE_ESCAPE) &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4b35ff15cc54c4c0deeedc5a4e82da6015895f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0613c183b879d81b0e8fae69d3fd046a9b6a2887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; formateo.</target>
        </trans-unit>
        <trans-unit id="89206d3ef618fadc40cb3722fac94c14af954f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; must be byte positions within the string slice.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; y &lt;code&gt;end&lt;/code&gt; deben ser posiciones de bytes dentro del segmento de cadena.</target>
        </trans-unit>
        <trans-unit id="4a2c09c340ed2826d14ffd0dbef2f7454022fbb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; must lie on UTF-8 sequence boundaries.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; y &lt;code&gt;end&lt;/code&gt; deben encontrarse en los l&amp;iacute;mites de la secuencia UTF-8.</target>
        </trans-unit>
        <trans-unit id="3a3e233163d179b69b52a9ca206e309212607ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; must come before &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt; debe llegar antes del &lt;code&gt;end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ec197dab27c5ca976338f815679b8fee1395bf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; must not exceed &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdce75ceab50c820ea00390df58dce8a3fe576b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; | &lt;code&gt;expr&lt;/code&gt; | &lt;code&gt;ident&lt;/code&gt; | &lt;code&gt;item&lt;/code&gt; | &lt;code&gt;lifetime&lt;/code&gt; | &lt;code&gt;literal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; | &lt;code&gt;expr&lt;/code&gt; | &lt;code&gt;ident&lt;/code&gt; | &lt;code&gt;item&lt;/code&gt; | &lt;code&gt;lifetime&lt;/code&gt; | &lt;code&gt;literal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e23d2e85acbaa31cd6476f62fbdac21e846aa86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt;: a &lt;a href=&quot;expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; : una &lt;a href=&quot;expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6af537efa449f86652366dbccb6b304bc9b013d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; implements various traits, such as &lt;a href=&quot;ops/trait.bitand&quot;&gt;&lt;code&gt;BitAnd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.bitor&quot;&gt;&lt;code&gt;BitOr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.not&quot;&gt;&lt;code&gt;Not&lt;/code&gt;&lt;/a&gt;, etc., which allow us to perform boolean operations using &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; implementa varios rasgos, como &lt;a href=&quot;ops/trait.bitand&quot;&gt; &lt;code&gt;BitAnd&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ops/trait.bitor&quot;&gt; &lt;code&gt;BitOr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ops/trait.not&quot;&gt; &lt;code&gt;Not&lt;/code&gt; &lt;/a&gt; , etc., que nos permiten realizar operaciones booleanas usando &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; y &lt;code&gt;!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c868f2edb1830849f09690bfbf6074c6cf7e4a4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; o &lt;code&gt;char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a69c0189a6ed72034cc572024f62efafca7e9350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;br&quot;...&quot;&lt;/code&gt;, &lt;code&gt;br#&quot;...&quot;#&lt;/code&gt;, &lt;code&gt;br##&quot;...&quot;##&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;br&quot;...&quot;&lt;/code&gt; , &lt;code&gt;br#&quot;...&quot;#&lt;/code&gt; , &lt;code&gt;br##&quot;...&quot;##&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="3495df73aacf73612f41eef0eae4d64842977c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;br&lt;/code&gt; RAW_BYTE_STRING_CONTENT</source>
          <target state="translated">&lt;code&gt;br&lt;/code&gt; RAW_BYTE_STRING_CONTENT</target>
        </trans-unit>
        <trans-unit id="1415f75d8141c087ecbb64adf109fe5800330af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; - exit a loop immediately</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; - salir de un bucle inmediatamente</target>
        </trans-unit>
        <trans-unit id="c4163b08d828dcfb747f95cc2ffb4d2aedbbb408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; keywords can be used as normal inside closures as long as they are also contained within a loop. To halt the execution of a closure you should instead use a return statement. Example:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; palabras clave break y &lt;code&gt;continue&lt;/code&gt; se pueden usar como cierres internos normales siempre que tambi&amp;eacute;n est&amp;eacute;n incluidas en un bucle. Para detener la ejecuci&amp;oacute;n de un cierre, debe usar una declaraci&amp;oacute;n de retorno. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="879c6cd1cd83ed4c5e732ee5de34df4cca12090e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and loop values</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; valores de ruptura y bucle</target>
        </trans-unit>
        <trans-unit id="1c8d47f15ad7f4c5aad4feabd00f8d968cb73853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; expresiones</target>
        </trans-unit>
        <trans-unit id="33c055593df1011bf377fb4e1c055eda6704fcde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; keywords were used in a condition of a &lt;code&gt;while&lt;/code&gt; loop without a label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef76ab866ec310493cb4db41e682cd8d8b9ce839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; must include a label when used in the condition of a &lt;code&gt;while&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; o &lt;code&gt;continue&lt;/code&gt; debe incluir una etiqueta cuando se utiliza en la condici&amp;oacute;n de un &lt;code&gt;while&lt;/code&gt; de bucle.</target>
        </trans-unit>
        <trans-unit id="367aea6a45bacadea76f3d04aaf6f94a411b972d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;return&lt;/code&gt; expressions also have type &lt;code&gt;!&lt;/code&gt;. For example we are allowed to write:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; expresiones break , &lt;code&gt;continue&lt;/code&gt; y &lt;code&gt;return&lt;/code&gt; tambi&amp;eacute;n tienen tipo &lt;code&gt;!&lt;/code&gt; . Por ejemplo, se nos permite escribir:</target>
        </trans-unit>
        <trans-unit id="aa523fa95169e180a28c499ce226b2602b4f994e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="56c451f1ed7f4e9f32871e1b89f15458878ceff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;'s File Location</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; Ubicaci&amp;oacute;n del archivo de c</target>
        </trans-unit>
        <trans-unit id="6621293517f69acbfc27071a2e1bc022f97cb122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;'s Module Path</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; Ruta del m&amp;oacute;dulo de c</target>
        </trans-unit>
        <trans-unit id="a9ec0f562729ffc6b7935d10cab9335e027674fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_once&lt;/code&gt; was called, but has not yet completed,</source>
          <target state="translated">&lt;code&gt;call_once&lt;/code&gt; fue llamado, pero a&amp;uacute;n no se ha completado,</target>
        </trans-unit>
        <trans-unit id="3ddd88f28edefd6a01cc85e1dd075eae23df30a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_once&lt;/code&gt; was not called at all,</source>
          <target state="translated">&lt;code&gt;call_once&lt;/code&gt; no fue llamado en absoluto,</target>
        </trans-unit>
        <trans-unit id="fc7e7debfc26cbb9d1a6b86d7f8f085262ebce65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capacity&lt;/code&gt; needs to be the capacity that the pointer was allocated with.</source>
          <target state="translated">&lt;code&gt;capacity&lt;/code&gt; debe ser la capacidad con la que se asign&amp;oacute; el puntero.</target>
        </trans-unit>
        <trans-unit id="ec326518d31ce666e8a53c21a4b0c6e6f5844a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capacity&lt;/code&gt; needs to be the correct value.</source>
          <target state="translated">&lt;code&gt;capacity&lt;/code&gt; debe ser el valor correcto.</target>
        </trans-unit>
        <trans-unit id="cab51cc0e82e607d6f82dfb31ce92c9ad2949a60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg!&lt;/code&gt;, unlike &lt;code&gt;#[cfg]&lt;/code&gt;, does not remove any code and only evaluates to true or false. For example, all blocks in an if/else expression need to be valid when &lt;code&gt;cfg!&lt;/code&gt; is used for the condition, regardless of what &lt;code&gt;cfg!&lt;/code&gt; is evaluating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45d1df9ba27e19707e079c2120795b398f3983f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cfg&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca23ba2a4dbea64080c773166d35b0ed16d74a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg_attr&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;em&gt;CfgAttrs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cfg_attr&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;em&gt;CfgAttrs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3bf2408893e79c0578315d534c26bc24b41dfe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chain()&lt;/code&gt; will return a new iterator which will first iterate over values from the first iterator and then over values from the second iterator.</source>
          <target state="translated">&lt;code&gt;chain()&lt;/code&gt; devolver&amp;aacute; un nuevo iterador que primero iterar&amp;aacute; sobre los valores del primer iterador y luego sobre los valores del segundo iterador.</target>
        </trans-unit>
        <trans-unit id="17bb725af33a5fe3bf725eb329cd8d2300796541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char::Searcher&lt;/code&gt; is a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because searching for a &lt;a href=&quot;../../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; only requires looking at one at a time, which behaves the same from both ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad66e7abb0a2d2a54689cb041c669b7c7fc9711e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char::Searcher&lt;/code&gt; is a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because searching for a &lt;code&gt;char&lt;/code&gt; only requires looking at one at a time, which behaves the same from both ends.</source>
          <target state="translated">&lt;code&gt;char::Searcher&lt;/code&gt; es un &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; porque la b&amp;uacute;squeda de un &lt;code&gt;char&lt;/code&gt; solo requiere mirar uno a la vez, lo que se comporta igual desde ambos extremos.</target>
        </trans-unit>
        <trans-unit id="5e26a30a33af896db21fcd418384804b3ae0828c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt; casts to the value of the code point, then uses a numeric cast if needed.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; se convierte en el valor del punto de c&amp;oacute;digo, luego usa una conversi&amp;oacute;n num&amp;eacute;rica si es necesario.</target>
        </trans-unit>
        <trans-unit id="b719e31245d824b02c35e8d26f7746c620db22a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt; is always four bytes in size. This is a different representation than a given character would have as part of a &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; siempre tiene un tama&amp;ntilde;o de cuatro bytes. Esta es una representaci&amp;oacute;n diferente a la que tendr&amp;iacute;a un personaje dado como parte de una &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="8d274791f61f08274ced2ead9795968e9729f1af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt; and &lt;a href=&quot;types/never&quot;&gt;&lt;code&gt;!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; y &lt;a href=&quot;types/never&quot;&gt; &lt;code&gt;!&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f5961c50e551eb8e946337181297787628d3f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, and &lt;a href=&quot;types/never&quot;&gt;&lt;code&gt;!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898b1df644fa14ac00e90b9a7df56f8b6e1ec80e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collect()&lt;/code&gt; can also create instances of types that are not typical collections. For example, a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; can be built from &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s, and an iterator of &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt; items can be collected into &lt;code&gt;Result&amp;lt;Collection&amp;lt;T&amp;gt;, E&amp;gt;&lt;/code&gt;. See the examples below for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cbac6d455a56de8f9eacec13e52059b85da18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collect()&lt;/code&gt; can take anything iterable, and turn it into a relevant collection. This is one of the more powerful methods in the standard library, used in a variety of contexts.</source>
          <target state="translated">&lt;code&gt;collect()&lt;/code&gt; puede tomar cualquier elemento iterable y convertirlo en una colecci&amp;oacute;n relevante. Este es uno de los m&amp;eacute;todos m&amp;aacute;s poderosos de la biblioteca est&amp;aacute;ndar, utilizado en una variedad de contextos.</target>
        </trans-unit>
        <trans-unit id="5c2669bb73e6b1d612983f6cd72c4c2b94cc9b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_and_swap&lt;/code&gt; also takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Notice that even when using &lt;a href=&quot;enum.ordering#variant.AcqRel&quot;&gt;&lt;code&gt;AcqRel&lt;/code&gt;&lt;/a&gt;, the operation might fail and hence just perform an &lt;code&gt;Acquire&lt;/code&gt; load, but not have &lt;code&gt;Release&lt;/code&gt; semantics. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; if it happens, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;compare_and_swap&lt;/code&gt; tambi&amp;eacute;n toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de la memoria de esta operaci&amp;oacute;n. Tenga en cuenta que incluso cuando se usa &lt;a href=&quot;enum.ordering#variant.AcqRel&quot;&gt; &lt;code&gt;AcqRel&lt;/code&gt; &lt;/a&gt; , la operaci&amp;oacute;n puede fallar y, por lo tanto, solo realiza una carga de &lt;code&gt;Acquire&lt;/code&gt; , pero no tiene sem&amp;aacute;ntica de &lt;code&gt;Release&lt;/code&gt; . El uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; si sucede, y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c70454249551e449cd2620beb6dbde2a2f60204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_and_swap&lt;/code&gt; is equivalent to &lt;code&gt;compare_exchange&lt;/code&gt; with the following mapping for memory orderings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cb46067d05005c09189fd7ad4b55c4a4dc4519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. &lt;code&gt;success&lt;/code&gt; describes the required ordering for the read-modify-write operation that takes place if the comparison with &lt;code&gt;current&lt;/code&gt; succeeds. &lt;code&gt;failure&lt;/code&gt; describes the required ordering for the load operation that takes place when the comparison fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb78629997fe1d57ec115a672b2032c050ad20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering if the operation succeeds while the second describes the required ordering when the operation fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="translated">&lt;code&gt;compare_exchange&lt;/code&gt; toma dos argumentos de &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; para describir el ordenamiento de la memoria de esta operaci&amp;oacute;n. El primero describe el orden requerido si la operaci&amp;oacute;n tiene &amp;eacute;xito, mientras que el segundo describe el orden requerido cuando la operaci&amp;oacute;n falla. El uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; como pedido exitoso hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga exitosa sea &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; . El pedido fallido solo puede ser &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; y debe ser equivalente o m&amp;aacute;s d&amp;eacute;bil que el pedido correcto .</target>
        </trans-unit>
        <trans-unit id="f4120646c25c94698cab6250543b4a59091cae8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange_weak&lt;/code&gt; is allowed to fail spuriously even when the comparison succeeds, which allows the compiler to generate better assembly code when the compare and swap is used in a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f436ebff6de47f6fd9ab5ee448eac03f8646b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange_weak&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. &lt;code&gt;success&lt;/code&gt; describes the required ordering for the read-modify-write operation that takes place if the comparison with &lt;code&gt;current&lt;/code&gt; succeeds. &lt;code&gt;failure&lt;/code&gt; describes the required ordering for the load operation that takes place when the comparison fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45f64040fa6d1dde8548ee9d2d6b5ff234606cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange_weak&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering if the operation succeeds while the second describes the required ordering when the operation fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="translated">&lt;code&gt;compare_exchange_weak&lt;/code&gt; toma dos argumentos de &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; para describir el ordenamiento de la memoria de esta operaci&amp;oacute;n. El primero describe el orden requerido si la operaci&amp;oacute;n tiene &amp;eacute;xito, mientras que el segundo describe el orden requerido cuando la operaci&amp;oacute;n falla. El uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; como pedido exitoso hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga exitosa sea &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; . El pedido fallido solo puede ser &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; y debe ser equivalente o m&amp;aacute;s d&amp;eacute;bil que el pedido correcto .</target>
        </trans-unit>
        <trans-unit id="86e1cf70d1ca30178a0d573e5ad551798d54df2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler_fence&lt;/code&gt; does not emit any machine code, but restricts the kinds of memory re-ordering the compiler is allowed to do. Specifically, depending on the given &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; semantics, the compiler may be disallowed from moving reads or writes from before or after the call to the other side of the call to &lt;code&gt;compiler_fence&lt;/code&gt;. Note that it does &lt;strong&gt;not&lt;/strong&gt; prevent the &lt;em&gt;hardware&lt;/em&gt; from doing such re-ordering. This is not a problem in a single-threaded, execution context, but when other threads may modify memory at the same time, stronger synchronization primitives such as &lt;a href=&quot;fn.fence&quot;&gt;&lt;code&gt;fence&lt;/code&gt;&lt;/a&gt; are required.</source>
          <target state="translated">&lt;code&gt;compiler_fence&lt;/code&gt; no emite ning&amp;uacute;n c&amp;oacute;digo de m&amp;aacute;quina, pero restringe los tipos de reordenamiento de memoria que el compilador puede hacer. Espec&amp;iacute;ficamente, dependiendo de la sem&amp;aacute;ntica de &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; dada , es posible que el compilador no pueda mover lecturas o escrituras desde antes o despu&amp;eacute;s de la llamada al otro lado de la llamada a &lt;code&gt;compiler_fence&lt;/code&gt; . Tenga en cuenta que esto &lt;strong&gt;no&lt;/strong&gt; impide que el &lt;em&gt;hardware&lt;/em&gt; realice dicho reordenamiento. Esto no es un problema en un contexto de ejecuci&amp;oacute;n de un solo subproceso, pero cuando otros subprocesos pueden modificar la memoria al mismo tiempo, se requieren primitivas de sincronizaci&amp;oacute;n m&amp;aacute;s fuertes, como &lt;a href=&quot;fn.fence&quot;&gt; &lt;code&gt;fence&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cad798660616379b0e659fc9aea1fbd6cc6514d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler_fence&lt;/code&gt; is generally only useful for preventing a thread from racing &lt;em&gt;with itself&lt;/em&gt;. That is, if a given thread is executing one piece of code, and is then interrupted, and starts executing code elsewhere (while still in the same thread, and conceptually still on the same core). In traditional programs, this can only occur when a signal handler is registered. In more low-level code, such situations can also arise when handling interrupts, when implementing green threads with pre-emption, etc. Curious readers are encouraged to read the Linux kernel's discussion of &lt;a href=&quot;https://www.kernel.org/doc/Documentation/memory-barriers.txt&quot;&gt;memory barriers&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;compiler_fence&lt;/code&gt; generalmente solo es &amp;uacute;til para evitar que un hilo compita &lt;em&gt;consigo mismo&lt;/em&gt; . Es decir, si un hilo dado est&amp;aacute; ejecutando un fragmento de c&amp;oacute;digo, y luego se interrumpe y comienza a ejecutar c&amp;oacute;digo en otro lugar (mientras todav&amp;iacute;a est&amp;aacute; en el mismo hilo y conceptualmente todav&amp;iacute;a en el mismo n&amp;uacute;cleo). En los programas tradicionales, esto solo puede ocurrir cuando se registra un manejador de se&amp;ntilde;ales. En c&amp;oacute;digo de nivel m&amp;aacute;s bajo, estas situaciones tambi&amp;eacute;n pueden surgir al manejar interrupciones, al implementar hilos verdes con preferencia, etc. Se anima a los lectores curiosos a leer la discusi&amp;oacute;n del kernel de Linux sobre las &lt;a href=&quot;https://www.kernel.org/doc/Documentation/memory-barriers.txt&quot;&gt;barreras&lt;/a&gt; de memoria .</target>
        </trans-unit>
        <trans-unit id="c02e4bab50b4f981a1c7e7e32d74e516ea367f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complex NT&lt;/code&gt;: a repetition matching non-terminal, specified via repetition operators (&lt;code&gt;\*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;complex NT&lt;/code&gt; : un juego de repetici&amp;oacute;n no terminal, especificado a trav&amp;eacute;s de operadores de repetici&amp;oacute;n ( &lt;code&gt;\*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="625dff55b9d5044ee08ccc327a4052dd8e812f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat_idents&lt;/code&gt; is not stable enough for use and is subject to change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3869485a500fc75cacbdba4b9f8c404da090dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; ) &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFICADOR&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; ) &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Tipo&lt;/em&gt;&lt;/a&gt; &lt;code&gt;=&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expresi&amp;oacute;n&lt;/em&gt;&lt;/a&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e1549ff374b5ebdcea81375e3f343804f5b3c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; - define constant items or constant raw pointers</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; : define elementos constantes o punteros crudos constantes</target>
        </trans-unit>
        <trans-unit id="340758aa22cfd73950ac0e13e516bd1cec191c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; mean different things. A &lt;code&gt;const&lt;/code&gt; is a compile-time constant, an alias for a literal value. This property means you can match it directly within a pattern.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; y &lt;code&gt;static&lt;/code&gt; significan cosas diferentes. Una &lt;code&gt;const&lt;/code&gt; es una constante en tiempo de compilaci&amp;oacute;n, un alias para un valor literal. Esta propiedad significa que puede emparejarla directamente dentro de un patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9f6a1bc6096f9736ea70cf62ff2965d0e325818d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; items looks remarkably similar to &lt;code&gt;static&lt;/code&gt; items, which introduces some confusion as to which one should be used at which times. To put it simply, constants are inlined wherever they're used, making using them identical to simply replacing the name of the &lt;code&gt;const&lt;/code&gt; with its value. Static variables, on the other hand, point to a single location in memory, which all accesses share. This means that, unlike with constants, they can't have destructors, and act as a single value across the entire codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61e289f776ced5df93e5b0a37771110bf9fc3d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; items looks remarkably similar to &lt;code&gt;static&lt;/code&gt; items, which introduces some confusion as to which one should be used at which times. To put it simply, constants are inlined wherever they're used, making using them identical to simply replacing the name of the const with its value. Static variables on the other hand point to a single location in memory, which all accesses share. This means that, unlike with constants, they can't have destructors, and act as a single value across the entire codebase.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; elementos const tienen un aspecto notablemente similar a &lt;code&gt;static&lt;/code&gt; elementos est&amp;aacute;ticos , lo que introduce cierta confusi&amp;oacute;n en cuanto a cu&amp;aacute;l debe usarse y en qu&amp;eacute; momento. En pocas palabras, las constantes est&amp;aacute;n alineadas dondequiera que se usen, lo que hace que usarlas sea id&amp;eacute;ntico a simplemente reemplazar el nombre de la constante con su valor. Las variables est&amp;aacute;ticas, por otro lado, apuntan a una &amp;uacute;nica ubicaci&amp;oacute;n en la memoria, que comparten todos los accesos. Esto significa que, a diferencia de las constantes, no pueden tener destructores y act&amp;uacute;an como un valor &amp;uacute;nico en todo el c&amp;oacute;digo base.</target>
        </trans-unit>
        <trans-unit id="27f67751d6c2a0da9be462a3eb2622352c2bd588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFICADOR &lt;/a&gt; &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Tipo&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;=&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expresi&amp;oacute;n&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="841cbcdeeab66fb4722b7b0400f1bb8e2de851cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;code&gt;extern&lt;/code&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;unsafe&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;( &lt;code&gt;extern&lt;/code&gt; &lt;em&gt;Abi &lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6edbd1e6db32e0b534caaa28cd5a2bec38d70299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;container[index]&lt;/code&gt; is actually syntactic sugar for &lt;code&gt;*container.index(index)&lt;/code&gt;, but only when used as an immutable value. If a mutable value is requested, &lt;a href=&quot;trait.indexmut&quot;&gt;&lt;code&gt;IndexMut&lt;/code&gt;&lt;/a&gt; is used instead. This allows nice things such as &lt;code&gt;let value = v[index]&lt;/code&gt; if the type of &lt;code&gt;value&lt;/code&gt; implements &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;container[index]&lt;/code&gt; es en realidad az&amp;uacute;car sint&amp;aacute;ctico para &lt;code&gt;*container.index(index)&lt;/code&gt; , pero solo cuando se usa como un valor inmutable. Si se solicita un valor mutable, &lt;a href=&quot;trait.indexmut&quot;&gt; &lt;code&gt;IndexMut&lt;/code&gt; &lt;/a&gt; se utiliza en su lugar. Esto permite cosas agradables como &lt;code&gt;let value = v[index]&lt;/code&gt; si el tipo de &lt;code&gt;value&lt;/code&gt; implementa &lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7922f6af9504dc9e782af79c29fcec29f07a47bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;container[index]&lt;/code&gt; is actually syntactic sugar for &lt;code&gt;*container.index_mut(index)&lt;/code&gt;, but only when used as a mutable value. If an immutable value is requested, the &lt;a href=&quot;trait.index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; trait is used instead. This allows nice things such as &lt;code&gt;v[index] = value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;container[index]&lt;/code&gt; es en realidad az&amp;uacute;car sint&amp;aacute;ctico para &lt;code&gt;*container.index_mut(index)&lt;/code&gt; , pero solo cuando se usa como un valor mutable. Si se solicita un valor inmutable, en su lugar se utiliza el rasgo de &lt;a href=&quot;trait.index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; . Esto permite cosas agradables como &lt;code&gt;v[index] = value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ffabd242f9d8704e26604953ecba9b24de0815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; - continue to the next loop iteration</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; : contin&amp;uacute;a con la siguiente iteraci&amp;oacute;n del ciclo</target>
        </trans-unit>
        <trans-unit id="0696cb116b57c6eb9b11a807f253157cd13a3a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; expresiones</target>
        </trans-unit>
        <trans-unit id="0beeb61ae0d4aaed192160e85d023c0240a1ddb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2138b0c04148fc58311ffc550ac7f06c1bdc9071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy&lt;/code&gt; is semantically equivalent to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memmove&quot;&gt;&lt;code&gt;memmove&lt;/code&gt;&lt;/a&gt;, but with the argument order swapped. Copying takes place as if the bytes were copied from &lt;code&gt;src&lt;/code&gt; to a temporary array and then copied from the array to &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; es sem&amp;aacute;nticamente equivalente a &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memmove&quot;&gt; &lt;code&gt;memmove&lt;/code&gt; &lt;/a&gt; de C , pero con el orden de los argumentos intercambiado. La copia tiene lugar como si los bytes se hubieran copiado de &lt;code&gt;src&lt;/code&gt; a una matriz temporal y luego se hubieran copiado de la matriz a &lt;code&gt;dst&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5280138888afc90db0844cf27c061078c4fda42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy_nonoverlapping&lt;/code&gt; is semantically equivalent to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memcpy&quot;&gt;&lt;code&gt;memcpy&lt;/code&gt;&lt;/a&gt;, but with the argument order swapped.</source>
          <target state="translated">&lt;code&gt;copy_nonoverlapping&lt;/code&gt; es sem&amp;aacute;nticamente equivalente a &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memcpy&quot;&gt; &lt;code&gt;memcpy&lt;/code&gt; &lt;/a&gt; de C , pero con el orden de los argumentos intercambiado.</target>
        </trans-unit>
        <trans-unit id="3f3b0484871a409017a3046e83cc932f818725ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; is in units of T; e.g., a &lt;code&gt;count&lt;/code&gt; of 3 represents a pointer offset of &lt;code&gt;3 * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; est&amp;aacute; en unidades de T; por ejemplo, una &lt;code&gt;count&lt;/code&gt; de 3 representa un desplazamiento de puntero de &lt;code&gt;3 * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="39e364d3d805cbae7765e75b78c4fcbd794d85ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; - link an external crate or a macro variable representing the crate in which the macro is defined</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; : vincule una caja externa o una macro variable que represente la caja en la que se define la macro</target>
        </trans-unit>
        <trans-unit id="a63bcddfba903216c2dd02c2cd1c9eca5434e078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; can also be used as in conjunction with &lt;code&gt;pub&lt;/code&gt; to signify that the item it's attached to is public only to other members of the same crate it's in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1b1a11c74c128aef1900df332f0bcea17de4bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; is also used as in conjunction with &lt;code&gt;pub&lt;/code&gt; to signify that the item it's attached to is public only to other members of the same crate it's in.</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; tambi&amp;eacute;n se usa junto con &lt;code&gt;pub&lt;/code&gt; para indicar que el elemento al que est&amp;aacute; adjunto es p&amp;uacute;blico solo para otros miembros de la misma caja en la que se encuentra.</target>
        </trans-unit>
        <trans-unit id="598d8f9c01b86300cde6cf04124a56a86445bb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; is also used to represent the absolute path of a module, where &lt;code&gt;crate&lt;/code&gt; refers to the root of the current crate. For instance, &lt;code&gt;crate::foo::bar&lt;/code&gt; refers to the name &lt;code&gt;bar&lt;/code&gt; inside the module &lt;code&gt;foo&lt;/code&gt;, from anywhere else in the same crate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffb90a99ca4ad20d943dc5f20252cb967816477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; resolves the path relative to the current crate. &lt;code&gt;crate&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;crate&lt;/code&gt; resuelve la ruta relativa a la caja actual. &lt;code&gt;crate&lt;/code&gt; solo se puede usar como el primer segmento, sin un &lt;code&gt;::&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f017b1a8225840fa63dd258af080a13ba8cd6e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for boths reads and writes for &lt;code&gt;len * mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; many bytes, and it must be properly aligned. This means in particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c034eb8868ff6752497cc351dd650ef13f0403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for reads for &lt;code&gt;len * mem::size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; many bytes, and it must be properly aligned. This means in particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d2a0f578efcf7eb330b7937555c08fdecc6ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be non-null and aligned even for zero-length slices. One reason for this is that enum layout optimizations may rely on references (including slices of any length) being aligned and non-null to distinguish them from other data. You can obtain a pointer that is usable as &lt;code&gt;data&lt;/code&gt; for zero-length slices using &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt;&lt;code&gt;NonNull::dangling()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d894a77e0c2b3d3320a6b0b693417d5746924d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be non-null and aligned, even for zero-length slices. One reason for this is that enum layout optimizations may rely on references (including slices of any length) being aligned and non-null to distinguish them from other data. You can obtain a pointer that is usable as &lt;code&gt;data&lt;/code&gt; for zero-length slices using &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt;&lt;code&gt;NonNull::dangling()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; deben ser no nulos y estar alineados, incluso para cortes de longitud cero. Una raz&amp;oacute;n de esto es que las optimizaciones de dise&amp;ntilde;o de enumeraci&amp;oacute;n pueden depender de que las referencias (incluidas las secciones de cualquier longitud) est&amp;eacute;n alineadas y no sean nulas para distinguirlas de otros datos. Puede obtener un puntero que se puede utilizar como &lt;code&gt;data&lt;/code&gt; para cortes de longitud cero utilizando &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt; &lt;code&gt;NonNull::dangling()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1180afb66886fd8d65c4d5fa126deb1f675d85db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must point to &lt;code&gt;len&lt;/code&gt; consecutive properly initialized values of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19de63111f9469b121b61357f666702da60da31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;#method.to_string-4&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a46b1bd3f31c790051e2f9d596618ff2ad86f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;../../string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b1548ac86b04e80d77460f971c9cb004e87b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;../string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e85dfd2fefb1e456711204d8c749fd02db9ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;string/trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8ec98a724df9476a349e1a8736e2ca8608def1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default fn &lt;a href=&quot;trait.tostring#tymethod.to_string&quot;&gt;to_string&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2198-2205&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d4673a84f7b28e406f0fc9af95309afee4bdc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimited sequence&lt;/code&gt;: a sequence of token trees with appropriate open- and close-delimiters at the start and end of the sequence.</source>
          <target state="translated">&lt;code&gt;delimited sequence&lt;/code&gt; : una secuencia de &amp;aacute;rboles de tokens con delimitadores de apertura y cierre apropiados al principio y al final de la secuencia.</target>
        </trans-unit>
        <trans-unit id="7a79f15887cb90c07b9ee24e25d320935f6738e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiter token&lt;/code&gt;: a token that is meant to divide the end of one fragment and the start of the next fragment.</source>
          <target state="translated">&lt;code&gt;delimiter token&lt;/code&gt; : un token que est&amp;aacute; destinado a dividir el final de un fragmento y el comienzo del siguiente fragmento.</target>
        </trans-unit>
        <trans-unit id="f73c7ab087b23c5e5dec3f19d99f0f663fa6e00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deny(C)&lt;/code&gt; signals an error after encountering a violation of &lt;code&gt;C&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;deny(C)&lt;/code&gt; se&amp;ntilde;ala un error despu&amp;eacute;s de encontrar una violaci&amp;oacute;n de &lt;code&gt;C&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="9b817753a2a3c36dba0b52cb148a1d21d3330091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated = &quot;message&quot;&lt;/code&gt; &amp;mdash; Includes the given string in the deprecation message.</source>
          <target state="translated">&lt;code&gt;deprecated = &quot;message&quot;&lt;/code&gt; : incluye la cadena dada en el mensaje de obsolescencia.</target>
        </trans-unit>
        <trans-unit id="8feb3b2ad69d6c31751b70259c15452b126e5e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt; &amp;mdash; Issues a generic message.</source>
          <target state="translated">&lt;code&gt;deprecated&lt;/code&gt; : emite un mensaje gen&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="0e6b5724fa0485aeadd8c4027a06e4f3e95b6c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;derive&lt;/code&gt; was applied on something which is not a struct, a union or an enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62cbd52bbe281b1702d615a7e288f1d94adb2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc&lt;/code&gt; &amp;mdash; Specifies documentation. See &lt;a href=&quot;https://doc.rust-lang.org/rustdoc/the-doc-attribute.html&quot;&gt;The Rustdoc Book&lt;/a&gt; for more information. &lt;a href=&quot;comments#doc-comments&quot;&gt;Doc comments&lt;/a&gt; are transformed into &lt;code&gt;doc&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;code&gt;doc&lt;/code&gt; : especifica la documentaci&amp;oacute;n. Consulte &lt;a href=&quot;https://doc.rust-lang.org/rustdoc/the-doc-attribute.html&quot;&gt;The Rustdoc Book&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n. &lt;a href=&quot;comments#doc-comments&quot;&gt;Los comentarios de los documentos&lt;/a&gt; se transforman en atributos de &lt;code&gt;doc&lt;/code&gt; umentos .</target>
        </trans-unit>
        <trans-unit id="43933bacc6b89a9f817b7115ae0c9b2c7936ef8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for writes of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; debe ser &lt;a href=&quot;../ptr/index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para escrituras de &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="c931f48276f8f024284b0c801c02fcd5f796845c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for both reads and writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b028ef783ca568905a249a0d460a81e83c0bc5a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for writes of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; debe ser &lt;a href=&quot;index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para escrituras de &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="de4ab832bf8bb7436095248fbd5bba34d72eb11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for writes.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; debe ser &lt;a href=&quot;index#safety&quot;&gt;v&amp;aacute;lido&lt;/a&gt; para escrituras.</target>
        </trans-unit>
        <trans-unit id="96e81d94a5cf609b14de81727277d5527705074d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be properly aligned.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; debe estar correctamente alineado.</target>
        </trans-unit>
        <trans-unit id="5d9e5a1b33f89214de414f25bebe0ad6bc131388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be properly aligned. Use &lt;a href=&quot;fn.write_unaligned&quot;&gt;&lt;code&gt;write_unaligned&lt;/code&gt;&lt;/a&gt; if this is not the case.</source>
          <target state="translated">&lt;code&gt;dst&lt;/code&gt; debe estar correctamente alineado. Utilice &lt;a href=&quot;fn.write_unaligned&quot;&gt; &lt;code&gt;write_unaligned&lt;/code&gt; &lt;/a&gt; si este no es el caso.</target>
        </trans-unit>
        <trans-unit id="261b3932be37ec0055eca3cd7989a210c36349b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must point to a properly initialized value of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acc52d89a95930039e7e1e99b5e670f54ac7ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dylib&lt;/code&gt; &amp;mdash; Indicates a dynamic library. This is the default if &lt;code&gt;kind&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;code&gt;dylib&lt;/code&gt; : indica una biblioteca din&amp;aacute;mica. Este es el valor por defecto si &lt;code&gt;kind&lt;/code&gt; no se especifica.</target>
        </trans-unit>
        <trans-unit id="034a6ce0d70ca3e940a1fc63bf893f750f9f1711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn 'static + Trait&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dyn 'static + Trait&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea02327924e29324ada9c0424537a40b3b2305cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn Trait&lt;/code&gt; metadata is invalid if it is not a pointer to a vtable for &lt;code&gt;Trait&lt;/code&gt; that matches the actual dynamic trait the pointer or reference points to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e340fb4a4b0caa32b7d2e8ad15494aa86512dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn Trait&lt;/code&gt; types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827f9f7bd5f1051a386e0868226b58eb2eda3f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt; - dynamic dispatch to a trait object</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt; : env&amp;iacute;o din&amp;aacute;mico a un objeto de rasgo</target>
        </trans-unit>
        <trans-unit id="3cb07d7d8980667939a3bf4535c9ef1196022493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt; is a prefix of a &lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;'s type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a10f1bed70878fd0ba7e8e9181ab78c7bfe373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1be40e01959ab68fc84f5e952837b0e0708fd058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6bb65230c2b93b9d2d927f2b34828791b16e81e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddba4749cbc07e8be9397562ec53f287ea168934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerexp&quot;&gt;&lt;code&gt;LowerExp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerexp&quot;&gt; &lt;code&gt;LowerExp&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd1452095a075a24ee1ad4d6d68ffe669400e190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; formateo.</target>
        </trans-unit>
        <trans-unit id="7f6a572ec5fe3819e41313ce8ae770420befd475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;else&lt;/code&gt; - fallback for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;if let&lt;/code&gt; control flow constructs</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; - alternativa para &lt;code&gt;if&lt;/code&gt; y &lt;code&gt;if let&lt;/code&gt; flujo de control se construya</target>
        </trans-unit>
        <trans-unit id="d4a4fa94d46ab690b56f979c2b91a7554583ffa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;else&lt;/code&gt; expressions are optional. When no else expressions are supplied it is assumed to evaluate to the unit type &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b8fd749dd504215bb0cdf1bb6624abc4dc8440" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty fragment&lt;/code&gt;: The class of invisible Rust syntax that separates tokens, i.e. whitespace, or (in some lexical contexts), the empty token sequence.</source>
          <target state="translated">&lt;code&gt;empty fragment&lt;/code&gt; : la clase de sintaxis de Rust invisible que separa los tokens, es decir, espacios en blanco, o (en algunos contextos l&amp;eacute;xicos), la secuencia de token vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="4355176137b0192fb3f628dd27ea1caed4fe3f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; - define an enumeration</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; - define una enumeraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="ea8832e95d01a4faaf4212c64c70282a2c070cf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea3e56fd591be6044f03d9bd0d61079d7ba5b448" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enumerate()&lt;/code&gt; keeps its count as a &lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;. If you want to count by a different sized integer, the &lt;a href=&quot;#method.zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; function provides similar functionality.</source>
          <target state="translated">&lt;code&gt;enumerate()&lt;/code&gt; mantiene su cuenta como &lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; . Si desea contar por un n&amp;uacute;mero entero de diferente tama&amp;ntilde;o, la funci&amp;oacute;n &lt;a href=&quot;#method.zip&quot;&gt; &lt;code&gt;zip&lt;/code&gt; &lt;/a&gt; proporciona una funcionalidad similar.</target>
        </trans-unit>
        <trans-unit id="1ef32b716e27a370dccaad4614513fb26deef1bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enumerate()&lt;/code&gt; keeps its count as a &lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;. If you want to count by a different sized integer, the &lt;a href=&quot;trait.iterator#method.zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; function provides similar functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd2e5af21d049a4452c5fb8ab4704b5f8208c2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exec&lt;/code&gt; not returning has the same implications as calling &lt;a href=&quot;../../../process/fn.exit&quot;&gt;&lt;code&gt;process::exit&lt;/code&gt;&lt;/a&gt; &amp;ndash; no destructors on the current stack or any other thread&amp;rsquo;s stack will be run. Therefore, it is recommended to only call &lt;code&gt;exec&lt;/code&gt; at a point where it is fine to not run any destructors. Note, that the &lt;code&gt;execvp&lt;/code&gt; syscall independently guarantees that all memory is freed and all file descriptors with the &lt;code&gt;CLOEXEC&lt;/code&gt; option (set by default on all file descriptors opened by the standard library) are closed.</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; que no regresa tiene las mismas implicaciones que llamar a &lt;a href=&quot;../../../process/fn.exit&quot;&gt; &lt;code&gt;process::exit&lt;/code&gt; &lt;/a&gt; : no se ejecutar&amp;aacute;n destructores en la pila actual o la pila de cualquier otro hilo. Por lo tanto, se recomienda llamar a &lt;code&gt;exec&lt;/code&gt; solo en un punto en el que est&amp;eacute; bien no ejecutar ning&amp;uacute;n destructor. Tenga en cuenta que &lt;code&gt;execvp&lt;/code&gt; syscall garantiza independientemente que se libere toda la memoria y que se &lt;code&gt;CLOEXEC&lt;/code&gt; todos los descriptores de archivo con la opci&amp;oacute;n CLOEXEC (establecida de forma predeterminada en todos los descriptores de archivo abiertos por la biblioteca est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="ab28125fd037c386267b67a9a34848916b30f004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export_name&lt;/code&gt; attributes may not contain null characters (&lt;code&gt;\0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;export_name&lt;/code&gt; atributos export_name no pueden contener caracteres nulos ( &lt;code&gt;\0&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5c417cae1cabbe8c4d775d30bddeccbba842d7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr.0&lt;/code&gt;, &lt;code&gt;expr.1&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;expr.0&lt;/code&gt; , &lt;code&gt;expr.1&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="a1abeb015eeec94ebb32cf39bdbed03229503438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr&lt;/code&gt; and &lt;code&gt;stmt&lt;/code&gt; may only be followed by one of: &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, or &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; y &lt;code&gt;stmt&lt;/code&gt; solamente puede ser seguido por uno de: &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , o &lt;code&gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a909b8761907098afd07f60822603767fd676c6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr&lt;/code&gt;: an &lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; : una &lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;expresi&amp;oacute;n&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77cc4ba05cbcfdd985069e0752d2e3e53bb2f4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr[..]&lt;/code&gt;, &lt;code&gt;expr[a..]&lt;/code&gt;, &lt;code&gt;expr[..b]&lt;/code&gt;, &lt;code&gt;expr[a..b]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;expr[..]&lt;/code&gt; , &lt;code&gt;expr[a..]&lt;/code&gt; , &lt;code&gt;expr[..b]&lt;/code&gt; , &lt;code&gt;expr[a..b]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52b26b6f9ae54748308286769ddeb2d2987b5340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;ABI&quot; { ... }&lt;/code&gt; blocks declare functions with ABI &quot;ABI&quot;. The default here is &quot;C&quot;, i.e., functions declared in an &lt;code&gt;extern {...}&lt;/code&gt; block have &quot;C&quot; ABI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43776c58871f631946b9d5f6b5d715885ee8184c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;C&quot;&lt;/code&gt; -- This is the same as &lt;code&gt;extern fn foo()&lt;/code&gt;; whatever the default your C compiler supports.</source>
          <target state="translated">&lt;code&gt;extern &quot;C&quot;&lt;/code&gt; - Esto es lo mismo que &lt;code&gt;extern fn foo()&lt;/code&gt; ; cualquiera que sea el valor predeterminado que admita su compilador de C.</target>
        </trans-unit>
        <trans-unit id="5b334c4a5aeb36c61ea7f5a6818b2713eb85d492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;Rust&quot;&lt;/code&gt; -- The default ABI when you write a normal &lt;code&gt;fn foo()&lt;/code&gt; in any Rust code.</source>
          <target state="translated">&lt;code&gt;extern &quot;Rust&quot;&lt;/code&gt; - El ABI predeterminado cuando escribe un &lt;code&gt;fn foo()&lt;/code&gt; normal en cualquier c&amp;oacute;digo de Rust.</target>
        </trans-unit>
        <trans-unit id="735f8df84f7dac6186d48a60dde78f9b38763118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;aapcs&quot;&lt;/code&gt; -- The default for ARM.</source>
          <target state="translated">&lt;code&gt;extern &quot;aapcs&quot;&lt;/code&gt; : el valor predeterminado para ARM.</target>
        </trans-unit>
        <trans-unit id="2c0970f24833633c0d00ee34ad271a2a4c723a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;cdecl&quot;&lt;/code&gt; -- The default for x86_32 C code.</source>
          <target state="translated">&lt;code&gt;extern &quot;cdecl&quot;&lt;/code&gt; : el valor predeterminado para el c&amp;oacute;digo C x86_32.</target>
        </trans-unit>
        <trans-unit id="d3e9d24e2f4403852a174e00b796145c7f315402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;fastcall&quot;&lt;/code&gt; -- The &lt;code&gt;fastcall&lt;/code&gt; ABI -- corresponds to MSVC's &lt;code&gt;__fastcall&lt;/code&gt; and GCC and clang's &lt;code&gt;__attribute__((fastcall))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;fastcall&quot;&lt;/code&gt; - El ABI de &lt;code&gt;fastcall&lt;/code&gt; - corresponde a &lt;code&gt;__fastcall&lt;/code&gt; y GCC de MSVC y al &lt;code&gt;__attribute__((fastcall))&lt;/code&gt; clang ((fastcall))</target>
        </trans-unit>
        <trans-unit id="f3f0cebe929c94d3119bff41cd45a3d2c03bccd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;platform-intrinsic&quot;&lt;/code&gt; -- Specific platform intrinsics -- like, for example, &lt;code&gt;sqrt&lt;/code&gt; -- have this ABI. You should never have to deal with it.</source>
          <target state="translated">&lt;code&gt;extern &quot;platform-intrinsic&quot;&lt;/code&gt; : elementos intr&amp;iacute;nsecos de plataforma espec&amp;iacute;ficos, como, por ejemplo, &lt;code&gt;sqrt&lt;/code&gt; , tienen esta ABI. Nunca deber&amp;iacute;as tener que lidiar con eso.</target>
        </trans-unit>
        <trans-unit id="4e9f664c97a6a9cf351469a86c8d20269aa52712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#236-238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67c908dae180a926945fb06ebde6ea9dc390669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call-1&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1055-1057&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40a25b1dd82d7760c6614b5fc2b757a225487bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#246-248&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e32c01fe2be88693306f1ecc9a8c919b9be1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut-1&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#268-270&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fec7d49f7b35bb51cf1aee7f23297673d17ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_mut-2&quot;&gt;call_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args: A&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1048-1050&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655db096f8c466c5514d23293ea6c7054302f1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#258-260&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2065a21ba0e09d1ff858f6bff973de9663ff1f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-1&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#279-281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a18da09fffc67f7b2c132690ca260193a47cdb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-2&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1041-1043&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c412e0b3a6707ce3be771b1b0d8a4b52a8c66e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-3&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a10e2e6a113444245e8f62845faccf3791b6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;#method.call_once-3&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#321-323&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4812237c365475580f32cc03a95b8039099f9738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fn#tymethod.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1055-1057&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae792767c60daff89ea3225e05693ebdf1c77bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args: A&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1048-1050&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d50a90ab82c680013374390a4ec710968724b19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#307-309&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb668b8e18b4b6fcbb28c5e73c0d407969cd322a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, _args: &lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;) -&amp;gt; R&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#321-323&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade2cf695a43004fb29865be9619b537d565bc51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;../ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;F&amp;gt; as &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1041-1043&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509a0610edb5841305c650ae89da273b6ded7f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fn#tymethod.call&quot;&gt;call&lt;/a&gt;(&amp;amp;self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#236-238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7df0d23e0b7a4fb5b06f606f4e2599459b64e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#246-248&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d876b7a16aecbe27172467a230d278d15bb11ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnmut#tymethod.call_mut&quot;&gt;call_mut&lt;/a&gt;(&amp;amp;mut self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#268-270&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6528250955eeacf7b289a8df27f8570fbbc35b9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#258-260&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9630d859ad4cbb2bea4bace68f4178cd38dfefc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot; fn &lt;a href=&quot;ops/trait.fnonce#tymethod.call_once&quot;&gt;call_once&lt;/a&gt;(self, args: A) -&amp;gt; &amp;lt;F as &lt;a href=&quot;ops/trait.fnonce&quot;&gt;FnOnce&lt;/a&gt;&amp;lt;A&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.fnonce#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/function.rs.html#279-281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428786e953acb8b96029b0dccd4c593f0d095153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot;&lt;/code&gt; -- The ABI of the Fn::call trait functions.</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-call&quot;&lt;/code&gt; - La ABI de las funciones de rasgo Fn :: call.</target>
        </trans-unit>
        <trans-unit id="d661ceb0aed3aa193f98f99dda38ad58d52f5a1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-intrinsic&quot;&lt;/code&gt; -- The ABI of rustc intrinsics.</source>
          <target state="translated">&lt;code&gt;extern &quot;rust-intrinsic&quot;&lt;/code&gt; - El ABI de rustc intrinsic.</target>
        </trans-unit>
        <trans-unit id="8c1c12cdae3f4c1ed808e5f5f909374b6fe94167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;stdcall&quot;&lt;/code&gt; -- The default for the Win32 API on x86_32.</source>
          <target state="translated">&lt;code&gt;extern &quot;stdcall&quot;&lt;/code&gt; : el valor predeterminado para la API de Win32 en x86_32.</target>
        </trans-unit>
        <trans-unit id="582098149272d3e61d4dbad6f8da32061f8d22d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;system&quot;&lt;/code&gt; -- Usually the same as &lt;code&gt;extern &quot;C&quot;&lt;/code&gt;, except on Win32, in which case it's &lt;code&gt;&quot;stdcall&quot;&lt;/code&gt;, or what you should use to link to the Windows API itself</source>
          <target state="translated">&lt;code&gt;extern &quot;system&quot;&lt;/code&gt; : por lo general, lo mismo que &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; , excepto en Win32, en cuyo caso es &lt;code&gt;&quot;stdcall&quot;&lt;/code&gt; , o lo que debe usar para vincular a la API de Windows.</target>
        </trans-unit>
        <trans-unit id="569db8c0e4f6efa7eb6a5332cb6d307342fdd23c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;sysv64&quot;&lt;/code&gt; -- The default for C code on non-Windows x86_64.</source>
          <target state="translated">&lt;code&gt;extern &quot;sysv64&quot;&lt;/code&gt; : el valor predeterminado para el c&amp;oacute;digo C en x86_64 que no son de Windows.</target>
        </trans-unit>
        <trans-unit id="153147a056a8508db6fa16a89d5f9f14114c629e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;vectorcall&quot;&lt;/code&gt; -- The &lt;code&gt;vectorcall&lt;/code&gt; ABI -- corresponds to MSVC's &lt;code&gt;__vectorcall&lt;/code&gt; and clang's &lt;code&gt;__attribute__((vectorcall))&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern &quot;vectorcall&quot;&lt;/code&gt; - El &lt;code&gt;vectorcall&lt;/code&gt; ABI - corresponde al &lt;code&gt;__vectorcall&lt;/code&gt; de MSVC y al &lt;code&gt;__attribute__((vectorcall))&lt;/code&gt; clang ((vectorcall))</target>
        </trans-unit>
        <trans-unit id="a787bb78fff68ce38f6681f8b3b78c7d578cf9c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;win64&quot;&lt;/code&gt; -- The default for C code on x86_64 Windows.</source>
          <target state="translated">&lt;code&gt;extern &quot;win64&quot;&lt;/code&gt; : el valor predeterminado para el c&amp;oacute;digo C en Windows x86_64.</target>
        </trans-unit>
        <trans-unit id="153d6d8fe757226499396ffcefb6e51783cd0ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern crate&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;extern crate&lt;/code&gt; declaraciones de cajas externas</target>
        </trans-unit>
        <trans-unit id="95b8f128f80d62929b887ea9b46a530971f6a396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; - link an external crate, function, or variable</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; : vincular una caja, funci&amp;oacute;n o variable externa</target>
        </trans-unit>
        <trans-unit id="22fc48f7e4b779695041bd9e280cac32de319ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; blocks</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; bloques externos</target>
        </trans-unit>
        <trans-unit id="681614578876835068081e0c5a8a64ca3637d9f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used in two different contexts within FFI. The first is in the form of external blocks, for declaring function interfaces that Rust code can call foreign code by.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; se utiliza en dos contextos diferentes dentro de FFI. El primero tiene la forma de bloques externos, para declarar interfaces de funci&amp;oacute;n por las que el c&amp;oacute;digo Rust puede llamar al c&amp;oacute;digo externo.</target>
        </trans-unit>
        <trans-unit id="8bfd6b1bcda6eb33f7e94c519a6cd4fc28e3475e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58b6ac8604fa45768a7e53ca42728a3ba2b55999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;&lt;code&gt;crate&lt;/code&gt;&lt;em&gt;CrateRef&lt;/em&gt;&lt;em&gt;AsClause&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt;&lt;code&gt;crate&lt;/code&gt;&lt;em&gt;CrateRef&lt;/em&gt;&lt;em&gt;AsClause&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34e5016203ba56bf279e73ecef5551a33aa074d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f32&lt;/code&gt; | &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; | &lt;code&gt;f64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec2140d9054ef990bc25506d73da564cfaf9a368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f32&lt;/code&gt;, &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; , &lt;code&gt;f64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4711a5f48e98b2dde4c760b6dc9bc8f0b89eb745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - Boolean false literal</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; - Booleano falso literal</target>
        </trans-unit>
        <trans-unit id="2b3d6551e1901ed6879f8189236628146c6e0b8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; casts to &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; casts to &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; conversiones falsas a &lt;code&gt;0&lt;/code&gt; , conversiones &lt;code&gt;true&lt;/code&gt; a &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd0cdf4b97c132b2c5d1c766846cf8e2d6b30d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is the logical opposite of &lt;a href=&quot;keyword.true&quot;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7178d13c12363318fa78ea24f5512ec134b9cf53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;feature&lt;/code&gt; &amp;mdash; Used to enable unstable or experimental compiler features. See &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/index.html&quot;&gt;The Unstable Book&lt;/a&gt; for features implemented in &lt;code&gt;rustc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;feature&lt;/code&gt; : se utiliza para habilitar caracter&amp;iacute;sticas de compilador inestables o experimentales. Consulte &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/index.html&quot;&gt;The Unstable Book&lt;/a&gt; para conocer las caracter&amp;iacute;sticas implementadas en &lt;code&gt;rustc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aa9e9cd828ae38380f8bd8601a8c31b914c4db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_add&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_add&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c59e533b3d06a5d947c681280ea9e78733da4a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_and&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_and&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el ordenamiento de memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1d9ace641701080aaea3228bb93bb99a39b32d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_max&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_max&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de la memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cd82f562fc0ea950b7943c47003a6708273f1d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_min&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_min&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de la memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31c1ac608c51edf9a6a68131d1c3f36902e7f133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_nand&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_nand&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c02b89baa32a94ffc60d1b1d20326ac55aa3b73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_or&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_or&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de la memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="831e311e7133bfc96d832f51d13479a90fa5f6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_sub&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_sub&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el orden de la memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="678e4e22af7936d0f120f5f8f5890cfe9fe36c3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for loads and failed updates while the second describes the required ordering when the operation finally succeeds. Beware that this is different from the two modes in &lt;a href=&quot;#method.compare_exchange&quot;&gt;&lt;code&gt;compare_exchange&lt;/code&gt;&lt;/a&gt;!</source>
          <target state="translated">&lt;code&gt;fetch_update&lt;/code&gt; toma dos argumentos &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; para describir el ordenamiento de la memoria de esta operaci&amp;oacute;n. El primero describe el orden requerido para cargas y actualizaciones fallidas, mientras que el segundo describe el orden requerido cuando la operaci&amp;oacute;n finalmente tiene &amp;eacute;xito. &amp;iexcl;Tenga en cuenta que esto es diferente de los dos modos en &lt;a href=&quot;#method.compare_exchange&quot;&gt; &lt;code&gt;compare_exchange&lt;/code&gt; &lt;/a&gt; !</target>
        </trans-unit>
        <trans-unit id="254e216689dbf965118d4c3344befd71b2609d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicbool#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicBool::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3093439a4889127e656a75cc6bfc25c103ff87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici16#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI16::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d183030f03026790e737234e42cfcafd573feb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici32#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI32::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d47bf7feedd6e7142df4367288c814d841abb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici64#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI64::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd04d4cb029cf57c89de44702b6c5bce0ea2ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomici8#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicI8::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd90df1e4d3aa12ce79deddbf57734c47d9a607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicisize#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicIsize::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d07bbf486b315e029b543060e37d43845798b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicptr#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicPtr::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d94fad7c9dea97518418c161bf1cc50fa751492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu16#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU16::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52a7609c74dc1eb320af3da138c4895397d54e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu32#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU32::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc0c32d541c80d93bc979fb39be47ce546104fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu64#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU64::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278e82c49bf8bea540134252919c7e966b4da42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicu8#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicU8::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee00032edab463aa5ee17506231eb2916ba4515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for when the operation finally succeeds while the second describes the required ordering for loads. These correspond to the success and failure orderings of &lt;a href=&quot;struct.atomicusize#method.compare_exchange&quot;&gt;&lt;code&gt;AtomicUsize::compare_exchange&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a93055d2678cf2b8c8cb6f50fb72a30b7ce3724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_xor&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch_xor&lt;/code&gt; toma un argumento &lt;a href=&quot;enum.ordering&quot;&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;/a&gt; que describe el ordenamiento de memoria de esta operaci&amp;oacute;n. Todos los modos de pedido son posibles. Tenga en cuenta que el uso de &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; hace que la tienda sea parte de esta operaci&amp;oacute;n &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; , y el uso de &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; hace que la carga se &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a53d4e55ecb9010d2ca250bb8469bf3338d388d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter_map&lt;/code&gt; can be used to make chains of &lt;a href=&quot;trait.iterator#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; more concise. The example below shows how a &lt;code&gt;map().filter().map()&lt;/code&gt; can be shortened to a single call to &lt;code&gt;filter_map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76488373fdd9cdeeb3a1412d0e027eed75bc39dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as the closure returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; est&amp;aacute; en cortocircuito; en otras palabras, dejar&amp;aacute; de procesarse tan pronto como el cierre vuelva a ser &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed4493e45dcee50fa0f542cf4d41d7d6d6298031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if any of them return &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;find()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(element)&lt;/code&gt;&lt;/a&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; toma un cierre que devuelve &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; . Aplica este cierre a cada elemento del iterador, y si alguno de ellos devuelve &lt;code&gt;true&lt;/code&gt; , entonces &lt;code&gt;find()&lt;/code&gt; devuelve &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(element)&lt;/code&gt; &lt;/a&gt; . Si todos devuelven &lt;code&gt;false&lt;/code&gt; , devuelve &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f27ba1c533216075116e91c889637e3dd866059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fmt::Display&lt;/code&gt; vs &lt;code&gt;fmt::Debug&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fmt::Display&lt;/code&gt; vs &lt;code&gt;fmt::Debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1351b60959f86467ca672d58a9d279e40c09252a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.access_mode&quot;&gt;access_mode&lt;/a&gt;(&amp;amp;mut self, access: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/fs.rs.html#263-266&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2931222c9dc09a9e9695b3faa5630e47b54e0a67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2f6dd556f49261647cf5d2bae806fcae183806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-1&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a47dc3282fc5f9645146a9f3b4a75d89bf7b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-10&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e2669953f6223501a028ea7834a20c4981d511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-100&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af7749af1b873cb53d2f0bca1850856c2846453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-101&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1fb13c480dfed17cc455a718ed6fca703de917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-102&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d054b0396218e604d396f1b15490ca60a1c61ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-103&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb418c4e1a12a9a187907c6b8a4bd9d29f337cef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-104&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149ec42a2cb068e42b9bf578d93720ccbd7e379a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-105&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59e88f39f32b29850c5741784152ba0acaeeeea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-106&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b5046a23bf101db818f397dc2222ba6ab5a3aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-107&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0995661b17371b1c38e3b3e7be979cee7bd23a95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-108&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c81020c9f799450c10d3f782a53972774b5e5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-109&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b0415a9b2eb2f25413bdce1617d17e18ecaf5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-11&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af348bc4de4609cdb750ab3cdf27e988d6eb312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-12&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adf33b9baf64eb1d119d86fb18303aab0f6708d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-13&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06c3314b721332703fc84f1d76ec8d0fb2e1662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-14&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc75bc9bc40f1c3d43e181fb34402f7443e47b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-15&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451690856e64cbd10b06a01284afaf43c061adcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-16&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de71af1082516588868328eb58d795f2f3fc43f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-17&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8e890ef56becc80d44d3179f29ce2cbb6dcef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-18&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdea44acf76d0f75ce724e6ca0a23f6cfd13bd08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-19&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eec71eb2b0001dce0263f81a0fed995bf8e2c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-2&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e2632aee741c70e638232fbaf51043b203dfe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-20&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e061bf992d23a656556059c1ff1b713b42e7a45a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-21&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc9cedc26a627f9e7eaeb61b795f786f9de0e20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-22&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121d5b92693ddd77d1670043b4ba4dfd4aa840be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-23&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728dd2e1a465a885f0f621ec90f249780d50903b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-24&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72a497aa42c6a7d806c861780c6650036a1d73c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-25&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#212-214&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaea05baa28d976af875b5d4dba72ef6cf134067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-26&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#878-880&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12e6f797d500840f891ecea79a42059eaa25758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-27&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#367-369&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0f9ef4208c3a1659f8b322900e72d9cab95a62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-27&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#373-375&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543cc37c4c74e54f3f74a003cd73e03f1502a32b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-27&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#377-379&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f280eab6c6b2c712f8547857e82d3f2abda5abd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-28&quot;&gt;add&lt;/a&gt;(self, dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#532-534&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c934409776de01eee5946220febab643102f5b88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-28&quot;&gt;add&lt;/a&gt;(self, dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#538-540&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0c9dfb09d23d57ca1c459b5ab89d81732ecc89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-28&quot;&gt;add&lt;/a&gt;(self, dur: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../time/struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#542-544&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efa13f007cf0716e184fd8bf1f6437e04f7ba6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-29&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95984cf87e43b74c4ba1bd6b1331160bca92b8f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-3&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79be5983cd3c2cb1d0fbbdbac6a0f70e24d0de5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-30&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ca0b4ecb4e2592512a3bd440a9d56f949740bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-31&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3517529a0f5a8c723f3516ead6cda2b4c67592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-32&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059e66e9156c1dc7b2630c2eb7c63bd22ba48eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-33&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d89750c775c91ea0e08ef1a550efd800a1fcdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-34&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f83997a71b7d3297fdf41a502639ddb65e6f49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-35&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b90623b2d38e8c697cdbe4d1f0a414fca7aa1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-36&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34c0ed1cc8ab983a0ee32c43dd9282661d9576f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-37&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2009-2012&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874bcb20103ec31ce539b2ff567ff9cfe101875f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-38&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac811bd320eba9fcf09df7ba2f96fcdfa8300d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-39&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322cebba3be27dfeca25e56928984ba8153ad92b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-4&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fd5959337d8a46be917da753bbcb5ce311a94d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-40&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364c73b8d0f4d0ad13f7713642941c1f49db93bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-41&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1bf4a82a513ab20461d8c85a54b7b671e91adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-42&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec8b28e381d6d9de03e13252ec8a250af7ae3ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-43&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cff7c481970b94b57774646c65c3f939aed185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-44&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f581546379ba8ad8edb7d4e612a2549f10674c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-45&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f2832beababf38bcb0f47cbad117c2c94c6537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-46&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a248e1d55ea3360c16f3a16a4ede36102e6c7f15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-47&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d133186fafb9b2a3454a43d84180bc71f9fca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-48&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69650170aca1c6a31d55af84a77d2c8ffc0b05cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-49&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6a27ae46067557ba371b84dd1468b296f1dd5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-5&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3085c82c0e3cb1d41278eca39b9c8d3a1c5d672d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-50&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4d387d34c18250992d227fa90703a341b3c5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-51&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c15f839e06147bed1735d57f65075468003585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-52&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1722d02c89475a8dca30c8902185510a6d39268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-53&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435410f7c49d39fb09051e06188f7a62bd8ae1b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-54&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acbca0043b7a4b50dcb7a8c71e5adff533cf6e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-55&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc8426c295d806e060754a6a95c72b3b93f71ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-56&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d166c8420cf49ad5377301065b714750f5a61a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-57&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b39094f40be0daf6d382262dda56c63088ff19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-58&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8dc7d3e14c76e4766452b13275d94f57053db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-59&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3543785f135c48ac44c9d5786190e277656510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-6&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65053c623b682cc57792466977054ff768df39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-60&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe2fc6ad9b919bf2eecf09e87b0fb68876faa5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-61&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0c0a36f6f9985d7987b4ebba0012857f5a5f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-62&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c265d41ca908b7470aa00658142f58d1001e3224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-63&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aab6e095e550c6ef6e44e784b2da1ba97fd0fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-64&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b8c91719656a16d5cfdfe9dcae2f47d7299d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-65&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cac1bb5f69f5822f9819784beac93d55d8ad02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-66&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fec5c38951d0eea8cde3006b05c60f12453c4d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-67&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4ed479bbfa9bd5d8146b68936a37915e5e70d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-68&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1ab536a0dcc7f36971ff6071f3cc0a3ff4c5fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-69&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52695bb7706ed4391967d8a26cb65283e41e3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-7&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fde8718b5be0584ffa5e02963275f57c6e5c94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-70&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e49fb71202620cbf80859ffeefd8ccfb309e736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-71&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51273d4cd139bc79595cf823798a21a5296c22f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-72&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bf761223e3f2d35916d9a2adaf9c976441248b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-73&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f3e2082b92a03a3e2cbfb1c6dd73d7ced1cbac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-74&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06565401ab4db05211de457a33c052d5329e154a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-75&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e101d6af297a0bbabf37ddb512dd9fc431d5054b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-76&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cd61c67944e1c65ac66af9b6e9478cf2050309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-77&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc28989818fbe85bbb673c398e3844342d810b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-78&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bb69f2b600103660af9d4906d830a10549e062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-79&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4888095d1e90b5144464a9ec8e6cd7df751cfd17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-8&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a45b04fccc4e22e640840625784f72e4546057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-80&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baeea318c0b02ec623d4e4512739969abb45f6ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-81&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad232cc4e351882ab64787e4594bf415245d95c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-82&quot;&gt;add&lt;/a&gt;(self, rhs: &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#431-434&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3852d52a42771a0b93a1b50c82f034df42496c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-83&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#442-445&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9bdc684b05d8d89c94c0f806a4eed1ed42a5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-84&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4be94e166ff74b15313358f533e25704089b381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-85&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8de1e654afb120723212bbbbb339bf4eed5263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-86&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a048b82e45700bc1f155f0079cb35d091bab2ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-87&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b788d4becd05049a797cbbc4f218f799e8a8d8eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-88&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da7332dba22cbca6ad9196e71398cd03544d4e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-89&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d292b12ae4c07fc3f29c22d8e3933bb55939a130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-9&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983b5ba926d154e5750e6c86e5b61114e1d0346a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-90&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54fa387a1ef8ffc9298e68563f0218424a56766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-91&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e864894d1aefa801105110da5870e2c6e33a7ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-92&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b71f0ebfb424e343dbba31ee8a6b9468b9b6b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-93&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dc978521aa8f591e9c4d04e2a94f1449df81eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-94&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6605939993934bbd8404c63cc5d414b9306de43b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-95&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce7df6b239d3c1a26627f099f6b7cf70e3ecffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-96&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e38c986ff80aea25254b941d9ad03163413d5e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-97&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3295edc890e612dd0d01608f662d1d15218d3e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-98&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a061e3980e869f9b567f023bdc910359175ed8c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add-99&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2d6d8ddd89f78b6cf7c10f8ad23bcb6f17858d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb27ad0b8bdfad38394cd86628a8c8f02825250e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-1&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334562f63a073ad8b43956a270c9e9e42a19d781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-10&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d275a6fc41ee8950da475e8dadd206a7b57d308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-11&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb52519db802979ec0e44086c205af1027aebf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-12&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d8bca8f0269c46429750c5f3f1964f19ff6739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-13&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b195d03099e5091334c3741c5bebf7efae37a072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-14&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723669b7aee784654221fcfe8edf06148bb27cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-15&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be240cfc527f08344e6ecc64b6f5bbc4d4269a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-16&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8869c0698c5c2ce0fcabc9f63ba19a3e706c7447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-17&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7072a4d6be7a528f806a35946d619aba87bbe2d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-18&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b960f01359f34867c784c6a7d3abe295459ab312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-19&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0455f498e684c28a77742da21656724dae2150d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-2&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec6886c57cc51939283e15a49c3e6c37226bc37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-20&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76165ecaf06025de6ba298fbc13e1ccb8917fb07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-21&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29efef58c8a1ae901e540c813e2c342c58f97d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-22&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ce04a46440c1ef63bb08389e22592d21c0e340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-23&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41bd94a25b9bb6301a174a324bb191788f033b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-24&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7cc8cafbcaf01169a7e7af94a0a9afb7fd64bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-25&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a78c3b41325fb457bb2f29f002c4a0ccfb3ba3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-26&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#885-887&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6f07b60967bd62cd65fc7fba7913ab93aa9c3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-27&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#374-376&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9af63ce8daed04c18cd4099c26bbbfac0de418" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-27&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#380-382&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f0b1928ad2fb89333e894cec2d941d5eed9d6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-27&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#384-386&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ca9803b6100ddbf99395923d3cd9e77e060673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-28&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#539-541&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2122ca36318c27520723a74bbd41a3f1e483a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-28&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#545-547&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca637fa14e7f105dcf99b4ebb85244d7a24de7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-28&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../time/struct.duration&quot;&gt;Duration&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#549-551&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4f79dfd0c5bab9fc4ba84a06da8223cb5db46d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-29&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a92e4208c41b26baafc322e87f0a35799af2cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-3&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899a742ef7414f8f763c50d8f9a41ad0b7756f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-30&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.f64&quot;&gt;f64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ca2ece405ca3bd2596d1acd22fcb722d297d2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-31&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b6e2e354ab3880001524d2a77f9854dfaf25b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-32&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3d2f81c9f26450e3d1f72aa88373ea3f6c32da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-33&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bd74bfb257d5fc7c0933265a16654545b5ccea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-34&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a89da78a9b36426742081b0ef02487f9ba2d655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-35&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d6056fb02c367d3552318f5623fc828e7a5d27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-36&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35c359b8133636e63c368eb758e0d3b790fa447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-37&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2021-2023&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f771f6b8de6b439b3797205b340b2700e75e01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-38&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ecaf65f541efd14b9243da22a6a33ff74b5459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-39&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f5f3a6baca65dd6e3da2260e7d599124fc1bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-4&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446cae21b16c9192468aea899e581578cdc2f9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-40&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182524b13416d910feb99e655f5ccfc67665712f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-41&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8541b2541a402e698fe5f517e0370a8ad1e65bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-42&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107b2ce5e18341b4cd744cfa20660f86a64b3cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-43&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bca3ca5e8c20d18534025b7c2f403ca02629a9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-44&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c83e53cc6d6bf8abb407b0f1139b663eba4dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-45&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bc830571bad666339eb5810693b3f00d5c11ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-46&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e67503a7a6b745988fe2382ddd6913f8c0403c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-47&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4444911403232e20585ea4c6a1cc41dec36cac1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-48&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c30cd98a99543fa892f0f2d46c063af81f8c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-49&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8359816a9a54c1654556c222e89e2d78d89f7ba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-5&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e402f0b39c70244e917cc54768d3cee3f3b889" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-50&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87de7ec6488d96377260fd2aa38a2348fa449a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-51&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84796cf9432561ba8b1ff7fae8e564989ab7eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-52&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec0d5e41835271733f9fa2e7b582d5a5d1c192f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-53&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9107530be80baa39bc1c8bad6d1c1305e40ecb0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-54&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dceee170ff92ba9c5e716d13b12772c6c7c6acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-55&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98f502beda4727171706474c4c5daf38881a9d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-56&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#450-461&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d382c92051d1a966c95a3244e566f956464bd265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-57&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../borrow/enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#466-477&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872ed53df58f8fa149a03f4ad41fd5bfd4c18b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-6&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc251ce08849a695483095d85dce053d733ddbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-7&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461f828c292246b9d26a1acf7c053145271a27cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-8&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937baee1a6f9708599d508f82502c6c69b9f1d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.add_assign-9&quot;&gt;add_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#731&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5074fbef1fb0e0b322daaab26dfdbe13cc0d71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_back_by-1&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/double_ended.rs.html#354-356&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688a6c2b3e709ec59b7c4b870b2bcd757afb6b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_back_by-2&quot;&gt;advance_back_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#173-175&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629de39a6b1660a5f5f8fafe108ca3d9da7a3655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_by-1&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#3297-3299&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba777c4cb1c36d5d905786e18ecb5024c331872f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.advance_by-2&quot;&gt;advance_by&lt;/a&gt;(&amp;amp;mut self, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;, &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#128-130&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfba64f8a8d05d3e7ee2c222fda4f4035eb8282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.all-1&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../str/struct.bytes&quot;&gt;Bytes&lt;/a&gt;&amp;lt;'_&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#239-244&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922873c7e65946ccbd1f82696ed99de38ec4fd04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.all-2&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#211-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63184d43f17930347d463c02ba55a795243a8698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.all-3&quot;&gt;all&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#211-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8945bd6ae9d2637b8414a3c72305ee2116e91c32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.alloc-1&quot;&gt;alloc&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#205-207&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12abf1210323206557902931f11825948a0cc4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.alloc_zeroed-2&quot;&gt;alloc_zeroed&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#210-212&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bf59b159a1ae3ec56a694e9d61f5b33a78f9ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.allocate-1&quot;&gt;allocate&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#205-207&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17aeb792ce86003c347ad9804d7671298318a773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.allocate_zeroed-2&quot;&gt;allocate_zeroed&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#210-212&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980fe1a200090ef2237c5c0802437e3bb5e6c1b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.any-1&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../str/struct.bytes&quot;&gt;Bytes&lt;/a&gt;&amp;lt;'_&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#247-252&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0f548d27f42c853e7d99ea8d55e35a14d91dc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.any-2&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.iter&quot;&gt;Iter&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#228-239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86535d31e2a3704279c12ad1281f9b0716da2d1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.any-3&quot;&gt;any&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;(&amp;lt;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;../slice/struct.itermut&quot;&gt;IterMut&lt;/a&gt;&amp;lt;'a, T&amp;gt;: &lt;a href=&quot;../marker/trait.sized&quot;&gt;Sized&lt;/a&gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter/macros.rs.html#228-239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83368767fa23b3000d85cd9841edb01778aa711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.arg0&quot;&gt;arg0&lt;/a&gt;&amp;lt;S&amp;gt;(&amp;amp;mut self, arg: S) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S: &lt;a href=&quot;../../../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#140-146&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639b879dac5387f22a5af36b261828c03187c9f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.arg0&quot;&gt;arg0&lt;/a&gt;&amp;lt;S&amp;gt;(&amp;amp;mut self, arg: S) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S: &lt;a href=&quot;../../../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#156-162&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94015d9d9b17754557425f90e8a69478a38199b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_bytes&quot;&gt;as_bytes&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../../../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../../../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys_common/os_str_bytes.rs.html#283-285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a9806433a2241b20524668bcbfb211a6bd64e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2251-2253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4172915e94b38f35815de6c2273e292e834eed80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-1&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;U&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#525-527&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b497d795ba5d7eae3972861f8f185685ff1274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-2&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#612-614&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e382f9f706fe2e3ace08a4c8aa3f2debea7e67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-3&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2680-2682&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367795eb6cc965adb3637b65c526bdc3b57b8764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-4&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2666-2668&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f587ad7d3e9662de22aea3a692ccbe6207186f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-5&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1111-1113&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fb1cdda254297e4097a105b90f71c30774e081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut-6&quot;&gt;as_mut&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array/mod.rs.html#116-118&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd29c1ab353027837df0655dee9367d73ca99a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_mut_slice&quot;&gt;as_mut_slice&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;mut [T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array/mod.rs.html#66-68&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684c11bacec38a175b22b288904da6b449bdb91d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_pthread_t&quot;&gt;as_pthread_t&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawpthread&quot;&gt;RawPthread&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/thread.rs.html#32-34&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243136b7215adc115be56829224c585372835cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#126-128&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3738bfd456bb1ea9b04fc9cc84379a42cd5b8bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-1&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#159-161&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d97c60a0046866c26f06bc30d8ecd696feecbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-10&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#198-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1a1ffa141e9ce4e769adf0717e7734b18d155c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-10&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#214-216&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee8ddad3b43e7bf242526993c1ab7e79718d8e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-11&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#184-186&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f950661847d3c2e86f6003e316ce64ca7a6b420b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-11&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#200-202&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e88c8140f2c34a1c3d24cd09bb39d3545da95ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-12&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#191-193&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bfe1a2185bb1b76a52b8f0994e9b72a99a668b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-12&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#207-209&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a853d49b9ec6a2c36514f42ccadba0a14ee1724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-13&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#107-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e856d111fa4d95a1fcac5e5e38a407f58da47e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-14&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#180-182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e74839cc78e17a1c821bb5adc122af174a420a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-15&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#166-168&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babb90afb0ab0bda5ab1b9ab0c6943b031b09555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-16&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#173-175&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60860d2c7f11b5e2b98e453f0072106eb7b422f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-2&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#145-147&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dc54e1eed362ce9936c5fe48eb87de301bda3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-3&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#152-154&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94162fad919a56e21a7ca9af63d65c99703dab10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-4&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#788-790&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7124e445988a72dc86636d578ea1e22b4770181f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-4&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net/raw_fd.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26ef1c449d6778744eed3df6da4a8939bf7a4f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-5&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#781-783&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e45aee54bf3368424a8710767415494a8df731f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-5&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net/raw_fd.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cf09b7d48fb880af35eb0771e0195e3ed97b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-6&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#795-797&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e283325f627d6a4b8f67e3b95a7ae06a4651df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-6&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net/raw_fd.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd793c94ec4df91b251d35a3939f09e3bf39447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-7&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1751-1753&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e69712a88249f14f4d422685b6c4931af5e787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-7&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net/datagram.rs.html#880-882&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5359f33a1ffc1982ffa1359b384e1a88be8f3c6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-8&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1080-1082&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b0406e19bcc221c6e242fc7ac5be9525b6a859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-8&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net/listener.rs.html#243-245&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d61adb0f6b144ba6d75a5725f8e3d1afda7844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-9&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#760-762&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b53c5759a3014b663ed7c814d6f8fec57f69dbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_fd-9&quot;&gt;as_raw_fd&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net/stream.rs.html#656-658&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf12dad93587bddee7d17fef5c11871b8bcddc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#62-64&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4174464f2f33388b8e3575014c7acc037943282a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-1&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#83-85&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8b63378f126d5243fc46dcb0786706ae36ea58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-10&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#97-99&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dea93d371101c0ac65081ded960198ccbda1b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-11&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/thread.rs.html#11-13&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4baa684642961e6a742dfda17a2e0a435b85f477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-2&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#69-71&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1ecbe8b35415fe3de38396df2c4bcf933d7af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-3&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#76-78&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c6abbeb63418e9de8c5492be3359cccc719ae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-4&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/process.rs.html#21-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cc0ad4ca61a5cf4eff5bccaa83acbb5fd1d5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-5&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/process.rs.html#49-51&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2815f6a53bac0a60ade0d37d67793496d52c2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-6&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/process.rs.html#35-37&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfc7f6ea599458910ca8214f505aae807be2576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-7&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/process.rs.html#42-44&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5c67b409fb9d4767e2e9a25d6927c8ca7ed7e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-8&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#104-106&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30aa67e835bb9d8515867e1d8dcb6c2b48cd033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_handle-9&quot;&gt;as_raw_handle&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#90-92&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0bf8daaec2ed10e66b352027a0d387431bd5fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_socket&quot;&gt;as_raw_socket&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#170-172&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a7d79b918c1b9c39b8c7e27e0efcbfb698e9e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_socket-1&quot;&gt;as_raw_socket&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#164-166&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8bfabf3ed20ad2ceca33d47fc5a6731bb1fb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_socket-2&quot;&gt;as_raw_socket&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#176-178&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6efe9f0f0cfc9720effabc8b0d78fa234ca857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_raw_stat&quot;&gt;as_raw_stat&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../raw/struct.stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/os/linux/fs.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3125b961913829730d89c1b0df20de5e01adaa46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2419-2421&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4941b306ef420d605f78518279b99378a1a10857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-1&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2259-2261&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a346b0516391707e723e258baf778e94c20d93b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-10&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1641-1643&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5941c8bb1e21c81a253d9e99568a8d863271224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-10&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#760-762&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd8e3c5bce26bd528afe131450a64b894897cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-11&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1119-1121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836cd546f798d29c786e4a24bc31dc6abcc661ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-11&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#809-811&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e29c14899ce1479318d5f9e346c995e16b1273" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-12&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2484-2486&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd798d2001ac13382389025ec5f6dc343a480e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-12&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2597-2599&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f3b93abe1db1a5ed904e0d1027e8210704ac68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-12&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2598-2600&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6473ae2ed1cdfc1d1e4360b0bbd2a8617f51df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-13&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1641-1643&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3282b5302c5a7354a3e1cd77e0e035e370a1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-13&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2575-2577&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7351043fc9e517387f854391802b0771c27d55ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-13&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2576-2578&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae1651599933d13f283ee8787cf2e69829feb51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-14&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1119-1121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273063c8564b55b844ad01ce7dc1f7765746033d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-14&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2589-2591&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d8dda7ad5eb4d57ad8ee84fc73aeebfb832992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-14&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2590-2592&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773237a51ff54ee0ef66a72c8868902f70bb7166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-15&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2568-2570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab17b654ebe2088e0844728088e102c2c2b74232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-15&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2569-2571&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b537358d48e4e25ebc9af66d89d0484bdb2c0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-15&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2582-2584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789b77bd16f1ddd5db9aea4b786d102d7efe88c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-16&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2612-2614&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1d0dae66eb1cba00153f0c664fc899b8bcaed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-16&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2613-2615&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0eaca3f23fc2cb459e45e47e789cdaaf9a6296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-16&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#532-534&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beee8bb893498b9aa210da4ed34db778c97dbc2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-17&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2597-2599&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bc0885559719e387898a6c6226649a27e8659b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-17&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2604-2606&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200d653a363dbb921287d12d8505e6bcef4ffa84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-17&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2605-2607&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e8d768eb21dd2fc16a5298c3f2776bae454d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-18&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#525-527&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15f95816a07c501865d7a25fc9196b26fc70391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-18&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2575-2577&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713dc986889f52d19a0c48ead77f9d8ca851f96e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-19&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#760-762&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391dacfc3d8f065333b2f359ea9dda80a8ad84b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-19&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2589-2591&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5767fc8027f2de6826c054e45da4a219192906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-2&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#620-622&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1441cafd6a97a0ce483666fce0049a68bd6ec9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-20&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#809-811&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601cead3415432a0359ffa44267d1c35a3d98793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-20&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#753-755&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410673e336b7f54ad5e90e84ab2a1eef81e7d37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-21&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2582-2584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a398b7a4f8de2139304a4c94ad851addeb8506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-21&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2583-2585&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e6b579eaf1a682e946742da7316d13855a8e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-21&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#802-804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12870d589cb59b4f0e750cade2361b84f6705234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-22&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2568-2570&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34ab58a85ae97cb269953c1b932b2a98f7376e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-22&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#532-534&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51b39a8052a4f88b3279fa811ff73b60ee4a05b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-23&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2612-2614&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9369f72b9ae31fd151ddff0ab1825817746d378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-23&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#753-755&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63282d6d06dc00cf45f75cb8d1cc36f00100119f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-24&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2604-2606&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30085e24c416a3d56e854298b92d15cd15522579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-24&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#802-804&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bed5924fb502bd331d9b194e605794eb9918869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-25&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/iter.rs.html#153-155&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73a36ea42960a14426a0e314d7072216d2c2af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-26&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#421-423&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d741402d08e7c83dc200b137cc287f442a778933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-27&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;U&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#495-497&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3ac5794fd5e9cded5218289da80330ab2a6969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-28&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;U&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#506-508&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8dcf0c62c5966f2eff8868250d7d9f6e12fefb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-29&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#3149-3151&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff058373131cb8933f5a620f5c717efb11d68904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-3&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2243-2245&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b1b2a72c203989aa27b21d6594e71599a0047a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-30&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert/mod.rs.html#605-607&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c915ec4d122500d10ef546e87c43cfe64041c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-31&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2931-2933&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b72f3138d0f7c83339b1abe8da65f3f2616e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-32&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2673-2675&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f97b693fdcb9f066a3f5db7899ae23a83d5d8ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-33&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2659-2661&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c70371099cda64071da20bf0042f1082c503286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-34&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#1104-1106&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808875c9102b479b4236271055c2b6df63a46af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-35&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#2180-2182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079400bdec44eaf397cf209aadc56b942974760a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-36&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;&lt;/a&gt;T&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#2326-2328&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c1cdbbb3280aefc6985d3c761df620627ab246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-37&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array/mod.rs.html#108-110&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22078a544ce1d5531ba4f111a243e21dba2cb3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-4&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1517-1519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f91311361d1a16d356277ef06cd60a58e9b973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-4&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1519-1521&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad45bc47ab7e6b2edec64d4fba0ad87ad27e449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-5&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1525-1527&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658da1e58224e0322821c2b7e8b98b446b949bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-5&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1527-1529&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9b3408f8d0ce2899359aab3460e3fc1d7b1019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-6&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1111-1113&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad16624b1ccb893e0d0def3db4a3125ba497cb67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-6&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#525-527&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356f34384844c320b5e5a63fd022356495bf25dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-7&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1095-1097&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422b87b56e25df73a84894ef0606de5d3057df39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-7&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1111-1113&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c635e55a4338e88179be4466e8d5dc7bc2a31d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-8&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1095-1097&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49c580e0367d83e9d7484ca1f5eaec7c3414e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-8&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1103-1105&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ea468ccbe8be13c33c3adca05cf5271dd6e9c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-9&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#1103-1105&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5089975748c2429a02e92b4534c0d89c41fd67d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-9&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2484-2486&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce7794d4cec61ec1b8f6ca244e2031c00ff7040" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_ref-9&quot;&gt;as_ref&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2485-2487&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0277539bb4a8712539a8cdf2aa6ec62721345469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.as_slice&quot;&gt;as_slice&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array/mod.rs.html#62-64&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52052d7118e29ef2f66c58276d5fcc60afd0729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.atime&quot;&gt;atime&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#681-683&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df563e7198fffa1dcdc623cacb0dc0e8ab84c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.atime&quot;&gt;atime&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#684-686&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c546fc020675cfcf57037e3c8d3c6f0a129115e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.atime_nsec&quot;&gt;atime_nsec&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#684-686&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196d66ca6c7a35b14528f7a964b324cd1738432a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.atime_nsec&quot;&gt;atime_nsec&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/fs.rs.html#687-689&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a758c73358a2968da2afe7459a8c75be601a02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.attributes&quot;&gt;attributes&lt;/a&gt;(&amp;amp;mut self, attributes: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/fs.rs.html#278-281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9155fd73b9fa593c4e93822fc6cd22cab9bff1e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backtrace&quot;&gt;backtrace&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;&lt;a href=&quot;../backtrace/struct.backtrace&quot;&gt;Backtrace&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#128-130&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cd0015a22cc7c743932a3be32272c54c899efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-1&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1311e8c92dc4ce40659cf0353ade09fedb89a4c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-10&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7862faff91cbc73516a8dbd3497ef4bfcc01a9ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-11&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c37379b183ad4387f32cc1b8f152d735a8d5cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-12&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7294f20b5042ebb1b3f3500be75631a5d6bd9fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-2&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0b4a4df2705dc656660fdf867cec7538de59b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-3&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8de3fdbaeec1db2d98839446b4e7e7e4dfacfd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-4&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e02e2bcb75043fdd55645ae891824ef8f9dd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-5&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887ce699a7b1f05f3e988c1910c414607bbd09c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-6&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d38ced9e0c50f4d00ef34ada090a689c92db49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-7&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91ac39f09f1157c1c5d747fd15a6a7a533cebec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-8&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a594804269e6c23322598e17ff609c3df7dee2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward-9&quot;&gt;backward&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#214-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c54aa32f30cff8351fc56781423b829e1614a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.char&quot;&gt;char&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#441-450&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6480b5cc6e3c1574930313c7494c886c7d26eb21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-1&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#307-325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc824c4a133fa4189a52bacb6985a0b97e251692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-10&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#258-263&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54177f1780fcea0e0c977dae3a0a8ebb7e5bdc8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-11&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2083a9baedf2e4ccddd43179b8adcb45f33d0ae9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-12&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#258-263&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05725614cd11b8b599b73e7acad06457d5f92612" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-2&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#307-325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfb4788cb0f9fe0a2075e1d6c64e73c7dfb1002" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-3&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#307-325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79258a1706c0c441bf8994a44ecb41befc31555b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-4&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#307-325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf40afadc8652eecc872c8943755bc52f193b703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-5&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#380-382&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc67f47a634ef17e668d841495e06e23335c99be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-6&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#307-325&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6079e23cedc06eac138b12475213107d715038" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-7&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#258-263&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4801b0c225425662f6dc85d5f37b9bd4ab919ded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-8&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#258-263&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3340a545f6ec526524173a9180f752b41184178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.backward_checked-9&quot;&gt;backward_checked&lt;/a&gt;(start: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#258-263&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692d8e193851a411cb719f0d9af5f66460202dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.before_exec&quot;&gt;before_exec&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../../../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt; + &lt;a href=&quot;../../../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; + 'static,&amp;nbsp;&lt;/code&gt;1.15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af7763153b8472ec1205c0f6a7c214159007e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.before_exec&quot;&gt;before_exec&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../../../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt; + &lt;a href=&quot;../../../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; + 'static,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#77-82&quot;&gt;[src]&lt;/a&gt;1.15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a2a7aef629b27b76135ab9bd2f8b9a36698049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcf6108bfc3addd519dc5ebc4e19bda7fae034d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-1&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f437905673755bae040d296ce62aabe1f6a4bb92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-10&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c38381fc6d7fb4c2a32b766956623ecd3b6d4c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-100&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d6f2e7648d4db5b793d0ad4f738d6c675c5ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-101&quot;&gt;bitand&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/hash_set/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/hash_set/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#1099-1101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d420645cdb624924a40adf978bcd76e2ec08a213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-101&quot;&gt;bitand&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#1099-1101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e0c6adebfb6c34e0ea4f832573520420991872" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-11&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876876a91e3635ebe97c7965aaf339125f525931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-12&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e192491f7ee7e6fa1f5ecef270f5809b9bdeb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-13&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccd38d67b520d1180a26fb27ebb0467b983924e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-14&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f3c6fde5a8a2ce455e14beeeddc793596e79a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-15&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4df115b8516e046891476730cc6400a6d04ee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-16&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667d9347cc82a4d01c819fe761365122644b39ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-17&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33422c24a0a936071ca2aae0d0a828490c1688b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-18&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695705d4b36ade4097733ab9d07e7efdded2a5c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-19&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8482075147413f67c381f23df6fccf0b318f5130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-2&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc23e7b8479d64ee5b9c8902d0d4fd42bf6654f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-20&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645d87c5d81a3ca8fe36463af4ce60a0a7646c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-21&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660863264f1675092db604e7ce64efefb6636faf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-22&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021dde839ffadeda8e22f2eaf5c6c455b111aebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-23&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ec3894412fdf1576fb477d6624b460c04da40a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-24&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#371-373&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c78925db0f239936f31533156c8c20a1b22ec90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-25&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0404262b2e7b70998dbf5989985a45d886231909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-26&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ede6aab54d3b99d9395e8dbaf86edcacc66215e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-27&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec05bae094ba3142ded08f4c5f7de1fa0206dae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-28&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672abaf4e7ca3149bf39bc9386f440378addfb41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-29&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b565a041296ff64e7445796c5adb5aae3e6673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-3&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77aecbfcadfc74ff0543ea51cdc44dd4b504ea3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-30&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ac78b07c0609318d88c556d7b742bad1f60d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-31&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e440be7fc5eb1a6763325ac4396255a143be611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-32&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe6868f2fcb892536fd84a82586e689c29650bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-33&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556eae77afaa68712a1ecd8a42da59005f717e7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-34&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b89cc538c0c6063a6f62c60fa2bee4dd63b13a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-35&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f3941b3a4ab8e2e63e8ac54d675be96b43a150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-36&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb336fe806fb4d485f46499a473eb5b6c24efccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-37&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4de6365002ea83a104ec406bb622d38464109d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-38&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5982e6bdaa39c94ea2e94eb4a6d7e22a6f0abcc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-39&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea22ae0e2e39359a565f3a00ae72aac7b35d470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-4&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b4d226382262596d66d2f1ddbbde780742de7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-40&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c181baf39cd93d6a8f3b173d1c689ce45dbf63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-41&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292c2865ccba86f0d22e11b4cc7d087be3314afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-42&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171ff09da4bf1eee7827986a0a6b940d962219c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-43&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c68080e1b260b51854fe9b38dd3d24caf69e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-44&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1754fa2cebffba429df26526b6e6990bdedf9e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-45&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6805e028c795c4fc0cfa958512b0c0b138f5625f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-46&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9984959c9d9ef6f4d4c94c35357470f6c41a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-47&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08b0c1960900307a98f6e9b07c63592bf77ff88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-48&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2877fb4fdefcce564b3eac1532ada316b5b140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-49&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1481592c16e3c3ea8f2796bde554eb578b610e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-5&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf83f07b4dd2cfafd09f8042d1b8e33b438a1e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-50&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5792d933621ef82787d7f029c70e0027808a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-51&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a31d5aae6bf868bac9780fa85b1976bdc3fafb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-52&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33720f908976e28328e031a2ed338f2011434f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-53&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc1938a4c9344e8a4d684e505b642bf32c658a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-54&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f785707cc7781278c70e2ec3c8df880fa5881b0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-55&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb409d4d4c182b01c16c677810b6259e072b347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-56&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc520c4e7f45c1996babf92f25c4790bdc55c533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-57&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a23fc400bde61035320eb5bc4e608ad7ef14a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-58&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac48ed08850e17af0856b662c2c19120be31ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-59&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d693c0aae2f3c67c14aa3d4a9904c5dbc6071f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-6&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e9792fb1c0bd65284c5fefd4f3a8eaa274ff29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-60&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a933477cce366dbf9d147c89f5f6584cf0359e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-61&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3c0cbe6ac7786b18b76950158cf0275cf60839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-62&quot;&gt;bitand&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f22a5cda609b5b7c47f437803b4f9265a8bdc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-63&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0efce19a6d0e6ca9a2468980e01ba92b8da67b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-64&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8d47edd945894bda7e2b9f4d239767c6344c69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-65&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5e39fdefe7e9cfe7ab417b43903f8d8f5e9840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-66&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc980e5bb9889729ff195634534228d09ae46a42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-67&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f190829f6693a7c11b6be30f66286ed36c351edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-68&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbad58603b0cce59d3e495983f2a4faaefa6d16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-69&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bcfdf79f684a0971267e9d53deefd2fa3ea13b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-7&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0c1f6654d3b4bdf0ed26466e87deee7088d8a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-70&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efb1d4df74be32feb4e91aef33d5aa430418d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-71&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015bad064008c2845829d460b290b9cc84926960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-72&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bdc73b1707c8a5ca9f0e6e5a2abfbb4fc8468b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-73&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a70ba25ffb72c8d573093c04803fdb46611adbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-74&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fa55c4651f6b72fc8f2f106b39b76cf15dbf7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-75&quot;&gt;bitand&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/struct.btreeset&quot;&gt;BTreeSet&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/struct.btreeset&quot;&gt;BTreeSet&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/set.rs.html#1238-1240&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e18721b71b685cd798ff93f53cc6cb95e2543aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-76&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc896d8639c7b499fb2090a94a84faaf49742e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-77&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65dc883e5222a68111813ca37a19d1de70f164c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-78&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7fba3ce10bb9e0a9ecda5b35942e08e75f7df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-79&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e91f1045a539ab0057cdd599a7282c93c2e3d0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-8&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee98f8390e0ffba604de055ffdbb4ef4f590656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-80&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7df6a25c2855251b5f8a94435f2e713a1c2fd59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-81&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba27595b75d54173682cdb7dab40f78c2b013dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-82&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f475d0e07151ccfde3f6d9fcd922ee2d556784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-83&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d27006993a41c1532bb8b1fbdc33929836ac299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-84&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1f889f6614a80c9f81cbb617ac92b11c422f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-85&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d820176d3e493f294e2bf5a425fa8f6cdf68e7f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-86&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5be7e8711e8ef115410b9876831a185a851c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-87&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e47eefbe68f3643ce06086d1c189b78802eb8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-88&quot;&gt;bitand&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1658b922cbd7455bb5f1972abd6abc91cf773f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-89&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f3e025e9c52cf430ec804caf64ec2fa11cff46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-9&quot;&gt;bitand&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#158&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f33cd89d839a6c00e1efff2fe83d0c22eca6b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-90&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c440ddc38c86a54eb4b4f9a721feee8889ea7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-91&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6612a06a53891705a9129d8d1791afdb7d16c2b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-92&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5336eee5f5d109dec1fff48d77f1827b2b37dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-93&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a9baca9047823542d9776ee2a4652efaaaee34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-94&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85750a9a9d8e0c9a659a7df818bb62017deb7206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-95&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088f7aece37cecf533bdcc798dba63b81b995c66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-96&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad87813efe9d343533ff7c899a75df1c34a42ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-97&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0118d6adb77581964221165c889b7e92181f50b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-98&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24083d53bf06299234deac9625215aea32d0fa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand-99&quot;&gt;bitand&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitand&quot;&gt;BitAnd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitand#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce63e3c3e374bac2486036b570d6973a0ceaf6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fba10e4ce1b9b73a7926313e999d50b44c60a32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-1&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cbda3e99f6404036cdc7ea30af2971604018bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-10&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0c0408983451d96bfb01ae9f78f530c6c9f354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-11&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169384428670af8876fa05b38a2e10e5b481977b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-12&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c760c81f68d86e52dd1a2f9a92a2a69f2c375966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-13&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c9d1064855fc0d68e6c492c4e9d4275f95390a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-14&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1569bc1c1d8df5cfc08782c801d26708a3866325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-15&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d237739bfcba001567288c9a1760e25375fd63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-16&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b82a76913e6699ecb2ae7d8d74122fcff22d998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-17&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffd185a4a2e84ac0405fe52b25680f1d2e7e815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-18&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07ba6808f47695493684626acf2e5dca3ed782f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-19&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd8e804ca94bae08909bf481bb9c53e89593185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-2&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1dd9e9506e9dc7bcd51dd67fbcbda9a13f280c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-20&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e1d58c3ac9037fc096e6fc25c43a156fe764aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-21&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0c38ed8c972658512f030d8774165d0d6e96cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-22&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dccf72561531854d74a765d56e8c75e1a0c950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-23&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8196a647d907ca36595b71638d490df52633e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-24&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#381-383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b295b2601d0f068793a1a4ff5e06c435a93a92a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-25&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9533683868a6b448b55208910a02324c3e77e20e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-26&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1257030621236cf471cd0e7aa48e9bbdadd1b7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-27&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff661e3b4a083f31010beade4fdee8e10ef2b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-28&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b793152f8128085cd979cd3fcb1971991a45060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-29&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177e53833f819f111878ec346f6a4d8d0eb3fd99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-3&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3e2adeb301695acf3cd24258aa41d064f21787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-30&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888192e2a266607d29c35b2b78d793796c0c6ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-31&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6948f2c3cf2874276d79886ad93d98041ecc25a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-32&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caa36f9b0053c11b4ec97c96cb5de0c27cedda6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-33&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c570aa2054c22e3dfd29c9f4edbf55d2b79f0b89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-34&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda40b92b6048ddcb1d7df1719c40b3eed8e7c01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-35&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c9993c8539c8e26f3ccfb3608e5e55c92406da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-36&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae87076a0925832fccd29c19cacea7e3a2ebf02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-37&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2542a3127b44072c0f78085cdb5fb68f088aee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-38&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ff589f09cf29acc1c43351ba7e1d657d4204cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-39&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb0270621deb17c46d6a7f567c0e8c56234d475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-4&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6c80167bc7232ff1bfa880a2c9d7f29e814d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-40&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0003d0473a17f18892cd3a7224d65a89a09939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-41&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bb2cc46e6dc56712c54a2f39de6f34e04e788b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-42&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa961a2e03cd0830267383f4bc641327c6f28d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-43&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d1cbcbc4bdb38f03100783f8ac6084477f7c88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-44&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92544f4d12173da8a782f130530e356c4359dfd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-45&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bd7e8f2e949edd4ef46415f2f3f734ffe01d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-46&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1520e46eef5fc24cd1d80d3504073ac3748da0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-47&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053f98a9e49207b557009144a06d51b5dde6906a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-48&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc33cf7d56dd61ebe8502ba030ab29e48af52005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-49&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a8e854ea1db9d81d34ded79ae531c80f241e3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-5&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abeaad155d2b643e35f40e2861c24c468335b11e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-6&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a9c938ce462ec02c8181b94d53622621fb8fab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-7&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a57458435a2d03262278aeaeb228f2137af7149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-8&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6852f54119ea0447087f8fc4003b4bf5cd079c09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitand_assign-9&quot;&gt;bitand_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#697&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65aea3b57b2ce971ea2c9b007c9c0329df79d001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc29e28dc93861fe5d1d67436b0e35f227456ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-1&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04635bf5a6af1f2690ecbcb131d1a9a577cb9658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-10&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6981eca839b47da024dbde95116abfe946b081cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-100&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8b550128ad6d0d6cac3b7b8626cd551950d3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-101&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bf83f38e8c1c736e0efb1ec19b96c8f0703970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-102&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4476cc7933513dbf2bd16eb3e8fabb26d087a2a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-103&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae5cb29b7f2ddc9c73153cbaefa591b88079537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-104&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632fbeb5963d5b3352f1392aba10913a63487cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-105&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb860c9b98def3e0f154d5522234ae0b05ae654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-106&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0239fa512ef8ae1e5db5a93f606eda9362ab10e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-107&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb2c0c68211df6336e6b0be9618d898848de662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-108&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba244fa6a6c070c98fda3ebb021ee59ec4401a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-109&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715007e867d7fed76eca27260c29a52139a9815a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-11&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c4a0719556dbcb00dca1fac249196b0417a5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-110&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22047defd8a7f1dd8da392fab6a09e7b1d123baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-111&quot;&gt;bitor&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/struct.btreeset&quot;&gt;BTreeSet&lt;/a&gt;&amp;lt;T&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/struct.btreeset&quot;&gt;BTreeSet&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/btree/set.rs.html#1261-1263&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585c62e5821d58e195ed8b6d906cf864f8fb755c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-112&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc9defbbdbd3a181030cc357eef13069ef267d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-113&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1eeb1376074c9e6aae00c495e53160d5feddc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-114&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f97909bb27cf0ab8f26f0bca22357c1e81e9a1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-115&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f867dc0f478dd4eaba1fcb9c9cc04f238ec9f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-116&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505d9317359bf15ec906b2f185122d6ac76a2470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-117&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1275f094c47f1f0e45a2dc581e3bb651c74398ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-118&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba6817f4aca87946825daf7f099a0d5b37faf6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-119&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fb608f440205ea38ed45888f3512e0b9d50ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-12&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df9b96375bb8c1af4bb4c0b01b2dc77198d6935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-120&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89aa39660fa37dd7145218b09e711510580bffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-121&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34316854d6571e9cf52e5928816d0d59eff1bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-122&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8461f0c047f4d5d6677005909705dffddc7f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-123&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a3a4dc303845426c27918ce7fb403c1709683b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-124&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa095b0c3558ab56c9f17de84c5dee622e4393f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-125&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bc2ab8d478f7873ef6cecf11f4b4cdd22a64f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-126&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628cee7e189de9e839635ad002b771e0f0537c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-127&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e818fa5b50c923f7e226e16aaf591f8846fc04dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-128&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b262a9f3a4beb9ed5728ef862481b4203d4037a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-129&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f6c4336f2d75569f6b2f072efc9280783cda9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-13&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865d00316ec2c6d44c7586db2d24773cd20b4bf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-130&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4820e0a898a534ef979944edba49869c7e7bfb94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-131&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51c6eef17ede1198dd845786c1236537af6bffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-132&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8265a2df9fdee19888d9109e76ba0b3e4919765" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-133&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6360a28ee2cf00d0d097e4d72af119f635da69ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-134&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73916b92b3be78fcae3cd924d510a3ab8fc010b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-135&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2063f1237cbca9964f665f7ea65e82f53060066e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-136&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199a073f1acd649c9a7c8b59a6f42079e8759d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-137&quot;&gt;bitor&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/hash_set/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/hash_set/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#1066-1068&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6c39b5a54d05d4eb2647a9e0911dd4f8dad7d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-137&quot;&gt;bitor&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#1066-1068&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12387326b2ccb904d967254524304cf5051291b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-14&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36d21785c75f4e5eaf20d4746b1d97d46674c59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-15&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7a0109a2bc8e41d98c72c018daa9b8503aaefe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-16&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd1778157bc0cb6bbfaf13af2165c9db01632d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-17&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c68a0a702e9ff750f5eaab9a987b1c9ffec86a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-18&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054f7773fb5f4773880bf6a14cfaa73938d9977b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-19&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169decb39a773035b8b75567803bd3303609a9b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-2&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e3f64d4cf30d3624b2122953cc31056ba8f00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-20&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36631695440a603c399a2fedfdea5810a9ab291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-21&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229b305b7db32ccf53ef118d1a16d3d23ec1e862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-22&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7430f52b52453710374b243612ebbf1dbd857ad2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-23&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce4b831518e13265eaa2c10f266f2127e0bd50c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-24&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179e0497788c723cbc076d05e1640c6ef98c3d9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-25&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbb85fbc5089426faa26f1a97d57d100b4c1c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-26&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d5bbe056a0f50b50ee69844be32a33889250d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-27&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07119219bec1962342bb1233e3fe83fda51d4a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-28&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec24d348f62d944fcf4b5afa8e0d2827c1cf748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-29&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7859fe6bfc1bc6d392a869b7c1633db65079551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-3&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1c53cf8352e2d2dabfda544626e5c965e708cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-30&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ba8e819927bc4ea7d796711e42580743dbe0a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-31&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57ffba26b1e0d3e4be289052853586436c22bd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-32&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea38f94a04d4ef996a53804d79af0c6630c846f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-33&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e54eb60c1b7fd8e943c3319ca27ddbfaf02fe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-34&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b611d928f2b6295d3ea406c5e54d535c04f62336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-35&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8b3c52282bba406a817257ac38a144ad355588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-36&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rhs: &lt;a href=&quot;../num/struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be93f44973bd5e2a9a3d9eb1ba1a4c78497eb956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-37&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ededd7a72c5e91e6beb521802edabe437207a3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-38&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6dc0398bcacb117e6e508bed1e446b2b019b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-39&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0861be5514f908bd5d7a113f88b7007614cfc772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-4&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac33451dd0a995b7ae2d69c484e0f8744d30ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-40&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c64b2b27113449c9119b82115b39b3c35564c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-41&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68a398ea72b435e41184bf9561fadc2c176495d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-42&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e802b4d3a9773b349a8e12489f2cb40d667f9e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-43&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6777ec98589aed7674c10da48a94c5f7d7ce1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-44&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5003014585faa3af1f947e14748857bdb840ac1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-45&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee7cac62aeeaf23265b9822a03aafc28cd3e724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-46&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f831f72849f4f43ba75f503a64def2619070e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-47&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../num/struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#128-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa560716aa34a0d05b991be3f733fbad7fd9bc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-48&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rhs: &lt;a href=&quot;../num/struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#105-109&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179a72ebec17413f33818bb66932c9582cca593e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-49&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f8348fe5e2298a7301f1bbf29bcfa287ffb223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-5&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fc72c41b2058f9cf759e7894e98d52a48c1aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-50&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ad3b84ff8f93b7619c4f1ad9cbf2d1ed3aff70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-51&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d199d894285e950c2a5174cc3773769356374f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-52&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3168beb9059b38076a3f0278b867ad4dfbf8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-53&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3adccb3db765187a7c719273d1abc955fec95c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-54&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d91b67a7e79199f53ab44d4193de406af776cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-55&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16486cef17221c5d597578f9aeb68fee87e69b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-56&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1faecd93460860370b16c636bf2cf435cc197135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-57&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe1069d87f2c8e356a08b44490d34859259add9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-58&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5216c73e055e5266a9300e3d4c00aec93210560f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-59&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaec7f5a163a0ab8082b3a0ffc5604dd7d7d934b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-6&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c21300d19f868beee8ff6f518f11465de9b7946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-60&quot;&gt;bitor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#350-352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40afd37020ff8efd7bcadd93d686b008f788c6f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-61&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6877c7936bf40740d86a8e6029c7e56b7c6b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-62&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa0a153e03be76053314f186a74b975b01e5b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-63&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf98e9ffb4abf3321b2dd76dbb5bd3985346d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-64&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815a934b30ec5aa341ec2997f252cd77cb27e8af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-65&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71d5a69b7f16b92a69f2b750cbdd927b02c3b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-66&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e8512cacd68fa30a80b0ea581e7cc8f7102b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-67&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6509e0ca335ad718624f7ea3c57551161dd663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-68&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbee0908d015257d0c4f9ada140461a0987a67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-69&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944e909a5e6cb2c103ae3fecb37eec90dfa04bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-7&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce09184b8e0e91105750b8b8db87731d3ebdf18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-70&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054202b24bf92d3a214d8f1aa89e35e65520425c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-71&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0379c41a228479cb2df4fd29679a2655928ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-72&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21df39c7a495c13067be25cea577a26983120b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-73&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93123b416e30dc1071eaf8286eaa21c4fdfbc91d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-74&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f184b25cd004c5aabb198c95d49714cd5765a10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-75&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cbf517b2502d6d3dad1a4ea680a3f31a90fec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-76&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9d093ffa9aedcfa13df396f5f6030616026479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-77&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b367d358e289d384e4abcc1639aee386a8e0c8ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-78&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df9040149610a72d64dd6c2dfab01bab4895064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-79&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add69589bc82e36af71ddc71b94bc12a4f9b011c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-8&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#116-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd8439d7226bbcce46cbfab115da0690230fb3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-80&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0adb795ca8e6ef37ea6fbd309f2374e1f95ba21b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-81&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa521c002c54193203a037c016237019a9c1da7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-82&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f575f8a9cbe16d6bf507a1078f59879d15096ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-83&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656fe48090426e25270d6c7ff2f112792cf54385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-84&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386ee6521a083854ff807f80839a743f217d3396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-85&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae10f6d31e77ef8b63ed451e2eb07587c743cef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-86&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412acf4cc64332f55ace15836dffa4576da47af3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-87&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dc8aab904b8928d7022dc17db8075d08818ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-88&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6cb651bd9cc9a55fffe77b30182e6fbd2c7e04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-89&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01da16cd5c08963f4fd453809a52ec954aaef984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-9&quot;&gt;bitor&lt;/a&gt;(self, rhs: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecccb1df0e443f3e90d026770ccefa6439a3e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-90&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace0029cf7400b6d1bfa2722ee7164f346f9a97a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-91&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346d84ef1bdd16da8ed7956b9903d5d03c610fa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-92&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22de598442c5f56f403151d0503c123de2582223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-93&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb43742e88f9f604f9b045451f6edf4d58faa6c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-94&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fdfbbb269da2b08d43ff866078d705de98d67c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-95&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a606a0846558cc2ec8df23e8accbcb0127428e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-96&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f31dcb1f90698a35792e7fa140da0b55dac5bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-97&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2c3c964fece46230f07247aae7e708094163dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-98&quot;&gt;bitor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a7250d85e9e96e5130acd94847498b8fabb0e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor-99&quot;&gt;bitor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitor&quot;&gt;BitOr&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d35a36b5ae03b823ddcedac27240dc72ec2afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fad369220417965df78eed29ac5ad4485ea93f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-1&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84316765057d5b3485b8878a7a44fe11b6af4e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-10&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92b2d858eafa36623b9897f1f86c26a92ff6010" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-11&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c3d7ae04a2d6bac7f55e0b8e55aac100881355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-12&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0b486d2566fd3291a923a53f06e47b8e8cf513" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-13&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cd67edea55136458844f1a950b1bf7dc26e1d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-14&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c511cdd1032d0a690c1a91f71d4252ccdb6d7db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-15&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a96668c4f050423017fd9dbbc2b961aa0331e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-16&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c82ee44184192401da3839d5966f5222750d182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-17&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2484fbb4d568c5fbdd22ec9971c4774c4395cd15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-18&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adaf7d70af4e3a633839d660a016bfb55d9ba476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-19&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64fe38ea03c93e29944d827e549b7b213476f5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-2&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae33cebfb3c0bc555e4a3b538279cda6861baea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-20&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edb8ca13754635279df4419ab3d1be7de1ed6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-21&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dde03bad7e27866a506780b56007a4c0b0f0f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-22&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c0036131300f9dad201b0e4906b544fdaf6617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-23&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1210bf27db4b927f0a03ace778d3808faaa245d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-24&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1baccba42038656fa0bebaaf13f8358de2ff209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-25&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a9b44e9fbc8c1f4d86db7c7c1c58c8f83af737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-26&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1658bcbc41ff16afbf0d798f27fbb412e637bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-27&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8601e2537bc82efaa43161e6dccef697c94974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-28&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3227a006e8be3db67a6de913b9d704fcf292507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-29&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772f72c247ceced021370dff90a74a3e7d5e7944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-3&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73fc37571667534ee8c6d4f971e3a84607d581b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-30&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47461d485f3e3c91499609852ed9d882bf670a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-31&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5bd1d8ff371ea30a4baa901dc072af76dd0be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-32&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc971f51c6c59d3a474a453542fefc1e47d7b40c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-33&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24d49bba32b8c64efb5f2abaab8e1c470ad6710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-34&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea2749e792e825eb45a2c1a0e0b867442f93e7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-35&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e845b4c89d98f2cd5c632997ee1e55c1d1fd611f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-36&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../num/struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#139-141&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3327f13f280184fa359377a81257dd2124d8e709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-37&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c16e233047711389b335ffb0dd730461078b187" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-38&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6ba52994a02f2537021fbf6e1655db760b6d91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-39&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e4d11856ff63513a0c928e3381ad9d781eb4a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-4&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c26f2ee8b39836ab6b55647c4ce45d8a3d1d11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-40&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff5c343aebd47c00ba4e6bdf40112c593b18f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-41&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18341342f3ae636a6989fdc9eec5c73c41a72f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-42&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcaf859473882f484b6f49c60637f6890025d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-43&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cac9c08b75c7a35ecaec049aeffa6b465a336e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-44&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6222d7db9cc4ca276ae9668246c47b179cf400a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-45&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8995613521c043ddaaa1c46503b40f43a7cb84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-46&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8a851fce3c54d2c4082cdf9c0c05ad8420ab12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-47&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7ff5b9311b64ec4e0b72d0e639837a2066c10e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-48&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#360-362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a84d4d93e937e2b43ad1e8f91ed8efdead48bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-49&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea617aded4b73422bfd40a8d647621790995045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-5&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6f3c2d3414519a090f0c8ef65e92c693996618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-50&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bc9959b558f71eabb67899e2ee91ec81b03821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-51&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7d8c210d8a6558e2176637d62818a6f3525cb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-52&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208d731bc0039482595b8e6f4ae933da64b19f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-53&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086c12eda3db6c9d698c2327f747bb0fc097731f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-54&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1e0d3f4f343fe45d849e9d107eae3bbdc4a1bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-55&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93b20d2c0a5b0c866f5949120539f9ba1b870c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-56&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36cfa02ca668ae6a3f1209a4297c73cb98ac517" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-57&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2214e5c89c00872952a5a68439ebdd88035fd37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-58&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3795def8aafa0c40e5c44e0c477f30994f49d12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-59&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9706a843f24b425f20a1a03846062a68d04bbf99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-6&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec1ca5ce9cd57bb1f61640abd308dc89085b2f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-60&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853055a3befc70ea16fd1a553193c4ae39357e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-61&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298b7063ddba0f6ceca3fb9c530256fee419617d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-62&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee299d6f8d911aeac55639e03b470da440e08ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-63&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdb3887eecaa08597dd8496b3aeeafe26ed04df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-64&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8530a539260be4d3bfbce69ddeae1a96dbc97474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-65&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9225867b0e300b8490b7a87529028960fcaa01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-66&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a746a59f29bd89a17f974e77ecb387caeb4d67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-67&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f7ad32db84a8e345f93f89b44311a01f74e2fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-68&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d2b444aa65b0b3b026a2dd74245694b532b7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-69&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd30c657066ca8dcfdfd56acfcda6c8ba8c4f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-7&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb3295ac43175009c081cda507d4bb0e7f85826" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-70&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6473db1cad8891d5a51fb1f50b799b6e67573759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-71&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6746cf4d44da609d5ca54dc8c4061d1496a878df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-72&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece2b45eb7c39b4bb91152dc84db127b2afb4947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-73&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#72-74&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8819c0f88a8a7e397830901970256a4c3d33ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-8&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, rhs: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/nonzero.rs.html#147-149&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4804d346af901021ceb4864173ec47d6b0cea9b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitor_assign-9&quot;&gt;bitor_assign&lt;/a&gt;(&amp;amp;mut self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#768&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2a45297db9d0770e8b91497523879befedff73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c19e8cfc08f7dc1f6c70a8d5c2ee795bc45ff1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-1&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3ab33d47301cdafdb271aff9a77f57be283feb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-10&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822f03d9e5d665861b7119af711aef156ebbc919" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-100&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b893b7fc37b747882e4839b0ad707ec6fc3eff24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-101&quot;&gt;bitxor&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/hash_set/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/hash_set/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#1132-1134&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ac0f8c6f1f8a563d2859ed17ea9f8557ca643e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-101&quot;&gt;bitxor&lt;/a&gt;(self, rhs: &amp;amp;&lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;) -&amp;gt; &lt;a href=&quot;../collections/struct.hashset&quot;&gt;HashSet&lt;/a&gt;&amp;lt;T, S&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/set.rs.html#1132-1134&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a81febb6d506fe61a3524ae5c42e469c210dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-11&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fc3e633f99f71a1e97f00c5261497ae552c219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-12&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fcb11762058528ef79119e626053fe59c4570b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-13&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb8ec15a324b34a038804ab7d89ad96413277f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-14&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ded1dd396fd0f016d6301ddb9bdb9fc65e3d3da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-15&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5edf1a78e75122b72397fdcb8ef1fbece9cfe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-16&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bde27899b4f1c7058bfb2f99628e138cb82a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-17&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1170b2e5639d083bf74c0e03a302c9652442b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-18&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f159b11555560d4bb2f0bb6685ff4135b44e9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-19&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e969a0739a1943cb9c7c1225b03d263bd394eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-2&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64fafb2ca1b444a5a523d5a6d605f9f0e92c470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-20&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e0426fe556b602d2cbfbd4d6ddc7bee1a646c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-21&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902b4ba6224e8d5f6c93c0186c58399a6bad507d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-22&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d98bd4f2178bf5f790dfbfd36367ea15e96e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-23&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162a9969a7305e65634de7c0e8aba90dd3a55f3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-24&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;) -&amp;gt; &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#329-331&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c103eaa50f47b0207f109f50b16a921d2bb3fe7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-25&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3e74f754418d09f591e85368566091d6203ecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-26&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257cc5b3e353b2edbfc00cb2d39f0700ce2353d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-27&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827d79bfdcc145ef21771e42aebc351f7ba12865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-28&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7517660185994e180894282322b25bb7c483891" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-29&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8167e4d4ec8f2f5101a0726d09bc31c67235500" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-3&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073a93b292c58e873e985532365b8596f4b9bd12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-30&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d468ae6ac8002bd1e65061ad1bbccf9f19503f1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-31&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814f543fc9932617aaba2a18ede336daa60d3be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-32&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81d30ff064f807db097c7883f5e55ddf63ec754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-33&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8594677fb2fff95031dcd992fb9f7e44f4e3e590" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-34&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb7f57a7c1ab509c1f703dc6235eaed4bbb81f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-35&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fe861ad3d74c8a48527cf09511bad40d3256ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-36&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382857f68086835d11c4cb230898180666621157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-37&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81728ebdaf501da13772dd714a8c6ede1040569f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-38&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98192650390f71f729dc0fcf1c49dacca0c88826" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-39&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7ad417ce6e829eb19016c199b6fdb9d2a5f8d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-4&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fde91c155d3d76e0b2812af3184c7323f3c809f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-40&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a86dc353dc1a87bfb7ab84db67d477b0338af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-41&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f3d093f113f76707e9f7e9573d652638fab90a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-42&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71618933368d38b17315a9f7bd690478b5a1efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-43&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc0894aaf24fcf61358c958970b6cd18c6c3a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-44&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d3f3b86d5cba6c5aa317006cd4e45aa14e5689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-45&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f917c235f2d5a417c68c51158d9e450c6f38b6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-46&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddd8ecce71ab2d165fb24f3536c5482d9a2ce3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-47&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46522b885b19cb26acc75cfe1ee01e96beda428a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-48&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f99a22d22a428b928c942d92716e9e0a9da29e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-49&quot;&gt;bitxor&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a776afd716af2fc83d80a2dafe6e645f14de65a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-5&quot;&gt;bitxor&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/bit.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eb1d899b45344e731e028b7d55fe4b996f5862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-50&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83133e3ad24011452b893a7e0da2146e617d07b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn &lt;a href=&quot;#method.bitxor-51&quot;&gt;bitxor&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;trait.bitxor&quot;&gt;BitXor&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.bitxor#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
