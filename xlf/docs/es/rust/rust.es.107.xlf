<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="b06fe916f5f193304938aca87ce9baf4fe4a81c0" translate="yes" xml:space="preserve">
          <source>Alignment::try_from</source>
          <target state="translated">Alignment::try_from</target>
        </trans-unit>
        <trans-unit id="7e4c9d31924344ef62791e3f5778cc0b64650841" translate="yes" xml:space="preserve">
          <source>Alignment::try_into</source>
          <target state="translated">Alignment::try_into</target>
        </trans-unit>
        <trans-unit id="f8d85378f8bd14502ad4a535bf35eace323f7be0" translate="yes" xml:space="preserve">
          <source>Alignment::type_id</source>
          <target state="translated">Alignment::type_id</target>
        </trans-unit>
        <trans-unit id="1f13dd31cf3795018ba8cb51097f5cee92e51d26" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;items&quot;&gt;item declarations&lt;/a&gt; accept outer attributes while &lt;a href=&quot;items/external-blocks&quot;&gt;external blocks&lt;/a&gt;, &lt;a href=&quot;items/functions&quot;&gt;functions&lt;/a&gt;, &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;, and &lt;a href=&quot;items/modules&quot;&gt;modules&lt;/a&gt; accept inner attributes.</source>
          <target state="translated">Todas las &lt;a href=&quot;items&quot;&gt;declaraciones de elementos&lt;/a&gt; aceptan atributos &lt;a href=&quot;items/external-blocks&quot;&gt;externos&lt;/a&gt; , mientras que los bloques , &lt;a href=&quot;items/functions&quot;&gt;funciones&lt;/a&gt; , &lt;a href=&quot;items/implementations&quot;&gt;implementaciones&lt;/a&gt; y &lt;a href=&quot;items/modules&quot;&gt;m&amp;oacute;dulos &lt;/a&gt;externos aceptan atributos internos.</target>
        </trans-unit>
        <trans-unit id="e7edfb23f380c12b821737c77295267e0d55adfa" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;if&lt;/code&gt; expressions start with the keyword &lt;code&gt;if&lt;/code&gt;, which is followed by a condition. In this case, the condition checks whether or not the variable &lt;code&gt;number&lt;/code&gt; has a value less than 5. The block of code we want to execute if the condition is true is placed immediately after the condition inside curly brackets. Blocks of code associated with the conditions in &lt;code&gt;if&lt;/code&gt; expressions are sometimes called &lt;em&gt;arms&lt;/em&gt;, just like the arms in &lt;code&gt;match&lt;/code&gt; expressions that we discussed in the &lt;a href=&quot;ch02-00-guessing-game-tutorial#comparing-the-guess-to-the-secret-number&quot;&gt;&amp;ldquo;Comparing the Guess to the Secret Number&amp;rdquo;&lt;/a&gt; section of Chapter 2.</source>
          <target state="translated">Todas las expresiones &lt;code&gt;if&lt;/code&gt; comienzan con la palabra clave &lt;code&gt;if&lt;/code&gt; , seguida de una condici&amp;oacute;n. En este caso, la condici&amp;oacute;n comprueba si el &lt;code&gt;number&lt;/code&gt; variable tiene un valor menor que 5. El bloque de c&amp;oacute;digo que queremos ejecutar si la condici&amp;oacute;n es verdadera se coloca inmediatamente despu&amp;eacute;s de la condici&amp;oacute;n entre corchetes. Los bloques de c&amp;oacute;digo asociados con las condiciones en las expresiones &lt;code&gt;if&lt;/code&gt; a veces se denominan &lt;em&gt;brazos&lt;/em&gt; , al igual que los brazos en las expresiones &lt;code&gt;match&lt;/code&gt; que discutimos en la secci&amp;oacute;n &lt;a href=&quot;ch02-00-guessing-game-tutorial#comparing-the-guess-to-the-secret-number&quot;&gt;&quot;Comparaci&amp;oacute;n de la conjetura con el n&amp;uacute;mero secreto&quot;&lt;/a&gt; del Cap&amp;iacute;tulo 2.</target>
        </trans-unit>
        <trans-unit id="6d770608aae868ce44cc837cd9b78c8161bf1b4b" translate="yes" xml:space="preserve">
          <source>All ASCII</source>
          <target state="translated">Todos los ASCII</target>
        </trans-unit>
        <trans-unit id="941b268ba2f8b2e2bf50827de379fcc106a7ae00" translate="yes" xml:space="preserve">
          <source>All Rust compiler versions support any edition that existed prior to that compiler&amp;rsquo;s release, and they can link crates of any supported editions together. Edition changes only affect the way the compiler initially parses code. Therefore, if you&amp;rsquo;re using Rust 2015 and one of your dependencies uses Rust 2018, your project will compile and be able to use that dependency. The opposite situation, where your project uses Rust 2018 and a dependency uses Rust 2015, works as well.</source>
          <target state="translated">Todas las versiones del compilador de Rust admiten cualquier edici&amp;oacute;n que existiera antes del lanzamiento de ese compilador, y pueden vincular cajas de cualquier edici&amp;oacute;n compatible. Los cambios de edici&amp;oacute;n solo afectan la forma en que el compilador analiza inicialmente el c&amp;oacute;digo. Por lo tanto, si est&amp;aacute; usando Rust 2015 y una de sus dependencias usa Rust 2018, su proyecto se compilar&amp;aacute; y podr&amp;aacute; usar esa dependencia. La situaci&amp;oacute;n opuesta, donde su proyecto usa Rust 2018 y una dependencia usa Rust 2015, tambi&amp;eacute;n funciona.</target>
        </trans-unit>
        <trans-unit id="7652c7eeda6497653864c68957d9fcd32bd3f053" translate="yes" xml:space="preserve">
          <source>All Unicode</source>
          <target state="translated">Todo Unicode</target>
        </trans-unit>
        <trans-unit id="47de5609df925352bb65b1c68fe6d11ef3c5f11f" translate="yes" xml:space="preserve">
          <source>All Unicode characters contained in the raw string body represent themselves, the characters &lt;code&gt;U+0022&lt;/code&gt; (double-quote) (except when followed by at least as many &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) characters as were used to start the raw string literal) or &lt;code&gt;U+005C&lt;/code&gt; (&lt;code&gt;\&lt;/code&gt;) do not have any special meaning.</source>
          <target state="translated">Todos los caracteres Unicode contenidos en el cuerpo de la cadena sin formato se representan a s&amp;iacute; mismos, los caracteres &lt;code&gt;U+0022&lt;/code&gt; (comillas dobles) (excepto cuando van seguidos de al menos tantos caracteres &lt;code&gt;U+0023&lt;/code&gt; ( &lt;code&gt;#&lt;/code&gt; ) como se utilizaron para iniciar el literal de cadena sin formato) o &lt;code&gt;U+005C&lt;/code&gt; ( &lt;code&gt;\&lt;/code&gt; ) no tienen ning&amp;uacute;n significado especial.</target>
        </trans-unit>
        <trans-unit id="8a1ba3bb13e8cd072a280ba55ff12cd4ec0faacf" translate="yes" xml:space="preserve">
          <source>All access to a static is safe, but there are a number of restrictions on statics:</source>
          <target state="translated">Todo acceso a la estática es seguro,pero hay una serie de restricciones en la estática:</target>
        </trans-unit>
        <trans-unit id="cc4193fdbde0490cb6df1ff9fd4927655f61fac3" translate="yes" xml:space="preserve">
          <source>All access to the inner value through methods is &lt;code&gt;unsafe&lt;/code&gt;.</source>
          <target state="translated">Todo acceso al valor interno a trav&amp;eacute;s de m&amp;eacute;todos &lt;code&gt;unsafe&lt;/code&gt; es seguro .</target>
        </trans-unit>
        <trans-unit id="ceb9b59e717209dd478129622af76401fc92a7ef" translate="yes" xml:space="preserve">
          <source>All accesses performed by functions in this module are &lt;em&gt;non-atomic&lt;/em&gt; in the sense of &lt;a href=&quot;../sync/atomic/index&quot;&gt;atomic operations&lt;/a&gt; used to synchronize between threads. This means it is undefined behavior to perform two concurrent accesses to the same location from different threads unless both accesses only read from memory. Notice that this explicitly includes &lt;a href=&quot;fn.read_volatile&quot;&gt;&lt;code&gt;read_volatile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fn.write_volatile&quot;&gt;&lt;code&gt;write_volatile&lt;/code&gt;&lt;/a&gt;: Volatile accesses cannot be used for inter-thread synchronization.</source>
          <target state="translated">Todos los accesos realizados por funciones en este m&amp;oacute;dulo son &lt;em&gt;no at&amp;oacute;micos&lt;/em&gt; en el sentido de &lt;a href=&quot;../sync/atomic/index&quot;&gt;operaciones at&amp;oacute;micas&lt;/a&gt; utilizadas para sincronizar entre subprocesos. Esto significa que es un comportamiento indefinido realizar dos accesos simult&amp;aacute;neos a la misma ubicaci&amp;oacute;n desde diferentes subprocesos a menos que ambos accesos solo lean desde la memoria. Tenga en cuenta que esto incluye expl&amp;iacute;citamente &lt;a href=&quot;fn.read_volatile&quot;&gt; &lt;code&gt;read_volatile&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;fn.write_volatile&quot;&gt; &lt;code&gt;write_volatile&lt;/code&gt; &lt;/a&gt; : los accesos vol&amp;aacute;tiles no se pueden utilizar para la sincronizaci&amp;oacute;n entre subprocesos.</target>
        </trans-unit>
        <trans-unit id="286be0b8b15ccf1efa39407656b792f78e80afd9" translate="yes" xml:space="preserve">
          <source>All amortized costs are for the potential need to resize when capacity is exhausted. If a resize occurs it will take &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) time. Our collections never automatically shrink, so removal operations aren't amortized. Over a sufficiently large series of operations, the average cost per operation will deterministically equal the given cost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3e246179e6158acb2b336b6eaaa6c3cd96b12d" translate="yes" xml:space="preserve">
          <source>All amortized costs are for the potential need to resize when capacity is exhausted. If a resize occurs it will take O(n) time. Our collections never automatically shrink, so removal operations aren't amortized. Over a sufficiently large series of operations, the average cost per operation will deterministically equal the given cost.</source>
          <target state="translated">Todos los costos amortizados corresponden a la posible necesidad de redimensionamiento cuando se agota la capacidad.Si se produce un cambio de tamaño,llevará O(n)tiempo.Nuestras colecciones nunca se encogen automáticamente,por lo que las operaciones de eliminación no se amortizan.A lo largo de una serie suficientemente grande de operaciones,el costo promedio por operación será determinantemente igual al costo dado.</target>
        </trans-unit>
        <trans-unit id="ad40505a1a509d19ac8713b0e6d72bf2f8406439" translate="yes" xml:space="preserve">
          <source>All associated functions must either have a &lt;code&gt;where Self: Sized&lt;/code&gt; bound, or</source>
          <target state="translated">Todas las funciones asociadas deben tener un l&amp;iacute;mite &lt;code&gt;where Self: Sized&lt;/code&gt; , o</target>
        </trans-unit>
        <trans-unit id="15061bca973f1e3bdfd6bc4220f487a4d9f0fa2e" translate="yes" xml:space="preserve">
          <source>All atomic types in this module are guaranteed to be &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-blocking_algorithm&quot;&gt;lock-free&lt;/a&gt; if they're available. This means they don't internally acquire a global mutex. Atomic types and operations are not guaranteed to be wait-free. This means that operations like &lt;code&gt;fetch_or&lt;/code&gt; may be implemented with a compare-and-swap loop.</source>
          <target state="translated">Se garantiza que todos los tipos at&amp;oacute;micos de este m&amp;oacute;dulo no tienen &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-blocking_algorithm&quot;&gt;bloqueos&lt;/a&gt; si est&amp;aacute;n disponibles. Esto significa que no adquieren internamente un mutex global. No se garantiza que los tipos y operaciones at&amp;oacute;micos est&amp;eacute;n libres de espera. Esto significa que operaciones como &lt;code&gt;fetch_or&lt;/code&gt; se pueden implementar con un bucle de comparaci&amp;oacute;n e intercambio.</target>
        </trans-unit>
        <trans-unit id="290ed2d52fa06b05e83bf6a12f1d4aa3dca7ba7c" translate="yes" xml:space="preserve">
          <source>All binaries installed with &lt;code&gt;cargo install&lt;/code&gt; are stored in the installation root&amp;rsquo;s &lt;em&gt;bin&lt;/em&gt; folder. If you installed Rust using &lt;em&gt;rustup.rs&lt;/em&gt; and don&amp;rsquo;t have any custom configurations, this directory will be &lt;em&gt;$HOME/.cargo/bin&lt;/em&gt;. Ensure that directory is in your &lt;code&gt;$PATH&lt;/code&gt; to be able to run programs you&amp;rsquo;ve installed with &lt;code&gt;cargo install&lt;/code&gt;.</source>
          <target state="translated">Todos los binarios instalados con &lt;code&gt;cargo install&lt;/code&gt; se almacenan en la carpeta &lt;em&gt;bin de&lt;/em&gt; la ra&amp;iacute;z de instalaci&amp;oacute;n . Si instal&amp;oacute; Rust usando &lt;em&gt;rustup.rs&lt;/em&gt; y no tiene ninguna configuraci&amp;oacute;n personalizada, este directorio ser&amp;aacute; &lt;em&gt;$ HOME / .cargo / bin&lt;/em&gt; . Aseg&amp;uacute;rese de que el directorio est&amp;eacute; en su &lt;code&gt;$PATH&lt;/code&gt; para poder ejecutar los programas que ha instalado con &lt;code&gt;cargo install&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33d170f2503ad727df2773d3d501af5a7c6f33f7" translate="yes" xml:space="preserve">
          <source>All boolean operators except for &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; which are banned since they are short-circuiting.</source>
          <target state="translated">Todos los operadores booleanos excepto &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; que est&amp;aacute;n prohibidos porque est&amp;aacute;n en cortocircuito.</target>
        </trans-unit>
        <trans-unit id="1797e85af758baa0954345dbaa6c305b8c789f74" translate="yes" xml:space="preserve">
          <source>All bytes read from this source will be appended to the specified buffer &lt;code&gt;buf&lt;/code&gt;. This function will continuously call &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; to append more data to &lt;code&gt;buf&lt;/code&gt; until &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; returns either &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(0)&lt;/code&gt;&lt;/a&gt; or an error of non-&lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind.</source>
          <target state="translated">Todos los bytes le&amp;iacute;dos de esta fuente se agregar&amp;aacute;n al b&amp;uacute;fer &lt;code&gt;buf&lt;/code&gt; especificado . Esta funci&amp;oacute;n llamar&amp;aacute; continuamente a &lt;a href=&quot;trait.read#tymethod.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; para agregar m&amp;aacute;s datos a &lt;code&gt;buf&lt;/code&gt; hasta que &lt;a href=&quot;trait.read#tymethod.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; devuelva &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok(0)&lt;/code&gt; &lt;/a&gt; o un error que no sea &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b662763d511d397b2cbc49f35a59edd0871bf65" translate="yes" xml:space="preserve">
          <source>All calls to &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; on the returned instance will return &lt;code&gt;Ok(buf.len())&lt;/code&gt; and the contents of the buffer will not be inspected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792e4e8c3b4454b76d09b3a55c5244a2a04987c6" translate="yes" xml:space="preserve">
          <source>All calls to &lt;code&gt;write&lt;/code&gt; on the returned instance will return &lt;code&gt;Ok(buf.len())&lt;/code&gt; and the contents of the buffer will not be inspected.</source>
          <target state="translated">Todas las llamadas a &lt;code&gt;write&lt;/code&gt; en la instancia devuelta devolver&amp;aacute;n &lt;code&gt;Ok(buf.len())&lt;/code&gt; y no se inspeccionar&amp;aacute; el contenido del b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="163ac7eae61cfe370b91ace9f314d434af91aec2" translate="yes" xml:space="preserve">
          <source>All characters contained in the raw string body represent their ASCII encoding, the characters &lt;code&gt;U+0022&lt;/code&gt; (double-quote) (except when followed by at least as many &lt;code&gt;U+0023&lt;/code&gt; (&lt;code&gt;#&lt;/code&gt;) characters as were used to start the raw string literal) or &lt;code&gt;U+005C&lt;/code&gt; (&lt;code&gt;\&lt;/code&gt;) do not have any special meaning.</source>
          <target state="translated">Todos los caracteres contenidos en el cuerpo de la cadena sin formato representan su codificaci&amp;oacute;n ASCII, los caracteres &lt;code&gt;U+0022&lt;/code&gt; (comillas dobles) (excepto cuando van seguidos de al menos tantos caracteres &lt;code&gt;U+0023&lt;/code&gt; ( &lt;code&gt;#&lt;/code&gt; ) como se utilizaron para iniciar el literal de cadena sin formato) o &lt;code&gt;U+005C&lt;/code&gt; ( &lt;code&gt;\&lt;/code&gt; ) no tienen ning&amp;uacute;n significado especial.</target>
        </trans-unit>
        <trans-unit id="43d6b6384605c36d010e25334a7b59d1666b30b5" translate="yes" xml:space="preserve">
          <source>All closure types implement &lt;a href=&quot;../special-types-and-traits#sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt;. Additionally, closure types implement the following traits if allowed to do so by the types of the captures it stores:</source>
          <target state="translated">Todos los tipos de cierre implementan &lt;a href=&quot;../special-types-and-traits#sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt; . Adem&amp;aacute;s, los tipos de cierre implementan los siguientes rasgos si as&amp;iacute; lo permiten los tipos de capturas que almacena:</target>
        </trans-unit>
        <trans-unit id="a34254512b20b7c3c4f4d4cb8623d62bc5f25917" translate="yes" xml:space="preserve">
          <source>All crates have a &lt;em&gt;prelude&lt;/em&gt; that automatically inserts names from a specific module, the &lt;em&gt;prelude module&lt;/em&gt;, into scope of each &lt;a href=&quot;items/modules&quot;&gt;module&lt;/a&gt; and an &lt;a href=&quot;items/extern-crates&quot;&gt;&lt;code&gt;extern crate&lt;/code&gt;&lt;/a&gt; into the crate root module. By default, the &lt;em&gt;standard prelude&lt;/em&gt; is used. The linked crate is &lt;a href=&quot;../std/index&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt; and the prelude module is &lt;a href=&quot;../std/prelude/index&quot;&gt;&lt;code&gt;std::prelude::v1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Todas las cajas tienen &lt;em&gt; preludio&lt;/em&gt; que inserta autom&amp;aacute;ticamente los nombres de un m&amp;oacute;dulo espec&amp;iacute;fico, el &lt;em&gt;m&amp;oacute;dulo de preludio&lt;/em&gt; , en el alcance de cada &lt;a href=&quot;items/modules&quot;&gt;m&amp;oacute;dulo&lt;/a&gt; y una &lt;a href=&quot;items/extern-crates&quot;&gt; &lt;code&gt;extern crate&lt;/code&gt; &lt;/a&gt; en el m&amp;oacute;dulo ra&amp;iacute;z de la caja. De forma predeterminada, se utiliza el &lt;em&gt;preludio est&amp;aacute;ndar&lt;/em&gt; . La caja vinculada es &lt;a href=&quot;../std/index&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt; y el m&amp;oacute;dulo prelude es &lt;a href=&quot;../std/prelude/index&quot;&gt; &lt;code&gt;std::prelude::v1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80e6d9f67f0a7d01f6edd0112ce6e32390cc7b99" translate="yes" xml:space="preserve">
          <source>All currently blocked and future &lt;a href=&quot;../io/trait.read&quot;&gt;reads&lt;/a&gt; will return &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(0)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Todas las &lt;a href=&quot;../io/trait.read&quot;&gt;lecturas&lt;/a&gt; actualmente bloqueadas y futuras devolver&amp;aacute;n &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok(0)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab960fd018156ee2b72c293b0f7c46b28b261211" translate="yes" xml:space="preserve">
          <source>All currently blocked and future &lt;a href=&quot;../io/trait.read&quot;&gt;reads&lt;/a&gt; will return &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d40cb983863467fc229fa6f4b9f265ef62418a" translate="yes" xml:space="preserve">
          <source>All currently blocked and future &lt;a href=&quot;../io/trait.write&quot;&gt;writes&lt;/a&gt; will return an error.</source>
          <target state="translated">Todas las &lt;a href=&quot;../io/trait.write&quot;&gt;escrituras&lt;/a&gt; actualmente bloqueadas y futuras devolver&amp;aacute;n un error.</target>
        </trans-unit>
        <trans-unit id="c24e8493495f5eda7feccf15dd8b5779f86db545" translate="yes" xml:space="preserve">
          <source>All data stored on the stack must have a known, fixed size. Data with an unknown size at compile time or a size that might change must be stored on the heap instead. The heap is less organized: when you put data on the heap, you request a certain amount of space. The memory allocator finds an empty spot in the heap that is big enough, marks it as being in use, and returns a &lt;em&gt;pointer&lt;/em&gt;, which is the address of that location. This process is called &lt;em&gt;allocating on the heap&lt;/em&gt; and is sometimes abbreviated as just &lt;em&gt;allocating&lt;/em&gt;. Pushing values onto the stack is not considered allocating. Because the pointer is a known, fixed size, you can store the pointer on the stack, but when you want the actual data, you must follow the pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ad10491502eb3084d1fb833cddef2d6e97c099" translate="yes" xml:space="preserve">
          <source>All data stored on the stack must have a known, fixed size. Data with an unknown size at compile time or a size that might change must be stored on the heap instead. The heap is less organized: when you put data on the heap, you request a certain amount of space. The operating system finds an empty spot in the heap that is big enough, marks it as being in use, and returns a &lt;em&gt;pointer&lt;/em&gt;, which is the address of that location. This process is called &lt;em&gt;allocating on the heap&lt;/em&gt; and is sometimes abbreviated as just &lt;em&gt;allocating&lt;/em&gt;. Pushing values onto the stack is not considered allocating. Because the pointer is a known, fixed size, you can store the pointer on the stack, but when you want the actual data, you must follow the pointer.</source>
          <target state="translated">Todos los datos almacenados en la pila deben tener un tama&amp;ntilde;o fijo conocido. En su lugar, los datos con un tama&amp;ntilde;o desconocido en el momento de la compilaci&amp;oacute;n o un tama&amp;ntilde;o que puede cambiar deben almacenarse en el mont&amp;oacute;n. El mont&amp;oacute;n est&amp;aacute; menos organizado: cuando pones datos en el mont&amp;oacute;n, solicitas una cierta cantidad de espacio. El sistema operativo encuentra un espacio vac&amp;iacute;o en el mont&amp;oacute;n que es lo suficientemente grande, lo marca como en uso y devuelve un &lt;em&gt;puntero&lt;/em&gt; , que es la direcci&amp;oacute;n de esa ubicaci&amp;oacute;n. Este proceso se denomina &lt;em&gt;asignaci&amp;oacute;n en el mont&amp;oacute;n&lt;/em&gt; y, a veces, se abrevia simplemente como &lt;em&gt;asignaci&amp;oacute;n&lt;/em&gt; . Insertar valores en la pila no se considera asignaci&amp;oacute;n. Debido a que el puntero es de un tama&amp;ntilde;o fijo conocido, puede almacenar el puntero en la pila, pero cuando desee los datos reales, debe seguir el puntero.</target>
        </trans-unit>
        <trans-unit id="c3ab61183db153bdcb93b3db49372bcfa15c64d0" translate="yes" xml:space="preserve">
          <source>All elements of arrays are always initialized, and access to an array is always bounds-checked in safe methods and operators.</source>
          <target state="translated">Todos los elementos de las matrices se inicializan siempre,y el acceso a una matriz se verifica siempre con métodos y operadores seguros.</target>
        </trans-unit>
        <trans-unit id="7fbb5676d98408c23a91ee3e50ae6931e19803d3" translate="yes" xml:space="preserve">
          <source>All elements of slices are always initialized, and access to a slice is always bounds-checked in safe methods and operators.</source>
          <target state="translated">Todos los elementos de las rebanadas se inicializan siempre,y el acceso a una rebanada se verifica siempre con métodos y operadores seguros.</target>
        </trans-unit>
        <trans-unit id="5797b6e64335a290bd1264b10ba82cdf81409cc5" translate="yes" xml:space="preserve">
          <source>All fields in a &lt;code&gt;union&lt;/code&gt; are all at the same place in memory which means borrowing one borrows the entire &lt;code&gt;union&lt;/code&gt;, for the same lifetime:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833e88d98de8f4240c961bc71bc4ebdf6caf04e8" translate="yes" xml:space="preserve">
          <source>All five array values appear in the terminal, as expected. Even though &lt;code&gt;index&lt;/code&gt; will reach a value of &lt;code&gt;5&lt;/code&gt; at some point, the loop stops executing before trying to fetch a sixth value from the array.</source>
          <target state="translated">Los cinco valores de la matriz aparecen en la terminal, como se esperaba. Aunque el &lt;code&gt;index&lt;/code&gt; alcanzar&amp;aacute; un valor de &lt;code&gt;5&lt;/code&gt; en alg&amp;uacute;n momento, el bucle deja de ejecutarse antes de intentar obtener un sexto valor de la matriz.</target>
        </trans-unit>
        <trans-unit id="9baa2527c7d6929ffc1c3e903b5bd7bcaaf4a17a" translate="yes" xml:space="preserve">
          <source>All four types of loop support &lt;a href=&quot;#break-expressions&quot;&gt;&lt;code&gt;break&lt;/code&gt; expressions&lt;/a&gt;, &lt;a href=&quot;#continue-expressions&quot;&gt;&lt;code&gt;continue&lt;/code&gt; expressions&lt;/a&gt;, and &lt;a href=&quot;#loop-labels&quot;&gt;labels&lt;/a&gt;. Only &lt;code&gt;loop&lt;/code&gt; supports &lt;a href=&quot;#break-and-loop-values&quot;&gt;evaluation to non-trivial values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11d83f6e553be6952611c97ac05bbc3817eeae9" translate="yes" xml:space="preserve">
          <source>All four types of loop support &lt;a href=&quot;loop-expr#break-expressions&quot;&gt;&lt;code&gt;break&lt;/code&gt; expressions&lt;/a&gt;, &lt;a href=&quot;loop-expr#continue-expressions&quot;&gt;&lt;code&gt;continue&lt;/code&gt; expressions&lt;/a&gt;, and &lt;a href=&quot;loop-expr#loop-labels&quot;&gt;labels&lt;/a&gt;. Only &lt;code&gt;loop&lt;/code&gt; supports &lt;a href=&quot;loop-expr#break-and-loop-values&quot;&gt;evaluation to non-trivial values&lt;/a&gt;.</source>
          <target state="translated">Los cuatro tipos de bucles admiten &lt;a href=&quot;loop-expr#break-expressions&quot;&gt;expresiones de &lt;/a&gt; &lt;code&gt;break&lt;/code&gt; , &lt;a href=&quot;loop-expr#continue-expressions&quot;&gt;expresiones &lt;/a&gt; &lt;code&gt;continue&lt;/code&gt; y &lt;a href=&quot;loop-expr#loop-labels&quot;&gt;etiquetas&lt;/a&gt; . Solo el &lt;code&gt;loop&lt;/code&gt; admite la &lt;a href=&quot;loop-expr#break-and-loop-values&quot;&gt;evaluaci&amp;oacute;n de valores no triviales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0615d0c10f128d4e7e9a656552c9285eca738194" translate="yes" xml:space="preserve">
          <source>All function items implement &lt;a href=&quot;../../std/ops/trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../std/ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../std/ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../special-types-and-traits#clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../special-types-and-traits#send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../special-types-and-traits#sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Todos los elementos de funci&amp;oacute;n implementan &lt;a href=&quot;../../std/ops/trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../std/ops/trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../std/ops/trait.fnonce&quot;&gt; &lt;code&gt;FnOnce&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../special-types-and-traits#clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../special-types-and-traits#send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../special-types-and-traits#sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36815ff2f54c1ef032403bd6365a096bb5c32000" translate="yes" xml:space="preserve">
          <source>All function parameters are in the scope of the entire function body, so are dropped last when evaluating the function. Each actual function parameter is dropped after any bindings introduced in that parameter's pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77d0720d55ff4ece3326614a73ddde6503e3179" translate="yes" xml:space="preserve">
          <source>All implementations of &lt;code&gt;Unsize&lt;/code&gt; are provided automatically by the compiler.</source>
          <target state="translated">Todas las implementaciones de &lt;code&gt;Unsize&lt;/code&gt; son proporcionadas autom&amp;aacute;ticamente por el compilador.</target>
        </trans-unit>
        <trans-unit id="94282a18d174676690037624bae4b4b406cb02ee" translate="yes" xml:space="preserve">
          <source>All iterators implement a trait named &lt;code&gt;Iterator&lt;/code&gt; that is defined in the standard library. The definition of the trait looks like this:</source>
          <target state="translated">Todos los iteradores implementan un rasgo llamado &lt;code&gt;Iterator&lt;/code&gt; que se define en la biblioteca est&amp;aacute;ndar. La definici&amp;oacute;n del rasgo se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="7da42c45b54f4237c99325204711121b9f08beec" translate="yes" xml:space="preserve">
          <source>All kinds of ASCII whitespace are considered:</source>
          <target state="translated">Se consideran todos los tipos de espacio blanco ASCII:</target>
        </trans-unit>
        <trans-unit id="3e530c202d9d3c48672f8f7b98a14e41befed3be" translate="yes" xml:space="preserve">
          <source>All kinds of whitespace are considered:</source>
          <target state="translated">Se consideran todo tipo de espacios en blanco:</target>
        </trans-unit>
        <trans-unit id="9c42bdece20642dd1d10ab718ff507235d349b8d" translate="yes" xml:space="preserve">
          <source>All layouts have an associated non-negative size and a power-of-two alignment.</source>
          <target state="translated">Todos los diseños tienen un tamaño asociado no negativo y una alineación de potencia de dos.</target>
        </trans-unit>
        <trans-unit id="ad65ecd6f4c6a3cd749629f3ba92add5fa618dd9" translate="yes" xml:space="preserve">
          <source>All layouts have an associated size and a power-of-two alignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7178a9053518ff1c5e401dc1d4bee4c24f25359b" translate="yes" xml:space="preserve">
          <source>All of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f70044558e382c5ebf59ec68e9d711cc2cb7b2" translate="yes" xml:space="preserve">
          <source>All of the coefficients get stored in registers, which means accessing the values is very fast. There are no bounds checks on the array access at runtime. All these optimizations that Rust is able to apply make the resulting code extremely efficient. Now that you know this, you can use iterators and closures without fear! They make code seem like it&amp;rsquo;s higher level but don&amp;rsquo;t impose a runtime performance penalty for doing so.</source>
          <target state="translated">Todos los coeficientes se almacenan en registros, lo que significa que acceder a los valores es muy r&amp;aacute;pido. No hay controles de l&amp;iacute;mites en el acceso a la matriz en tiempo de ejecuci&amp;oacute;n. Todas estas optimizaciones que Rust puede aplicar hacen que el c&amp;oacute;digo resultante sea extremadamente eficiente. Ahora que sabe esto, &amp;iexcl;puede usar iteradores y cierres sin miedo! Hacen que el c&amp;oacute;digo parezca de un nivel superior, pero no imponen una penalizaci&amp;oacute;n de rendimiento en tiempo de ejecuci&amp;oacute;n por hacerlo.</target>
        </trans-unit>
        <trans-unit id="17dabbf042cc2454dd1f0ba98c8b7c6f3be65ec5" translate="yes" xml:space="preserve">
          <source>All of the logic that manages the counts and value dropping is built into &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; and their implementations of the &lt;code&gt;Drop&lt;/code&gt; trait. By specifying that the relationship from a child to its parent should be a &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; reference in the definition of &lt;code&gt;Node&lt;/code&gt;, you&amp;rsquo;re able to have parent nodes point to child nodes and vice versa without creating a reference cycle and memory leaks.</source>
          <target state="translated">Toda la l&amp;oacute;gica que gestiona los recuentos y la ca&amp;iacute;da de valores est&amp;aacute; integrada en &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; y &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; y sus implementaciones de la &lt;code&gt;Drop&lt;/code&gt; rasgo Drop . Al especificar que la relaci&amp;oacute;n de un hijo a su padre debe ser una referencia &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; en la definici&amp;oacute;n de &lt;code&gt;Node&lt;/code&gt; , puede hacer que los nodos padres apunten a los nodos secundarios y viceversa sin crear un ciclo de referencia y p&amp;eacute;rdidas de memoria.</target>
        </trans-unit>
        <trans-unit id="469c3254d30ae896569972fb8c0f6e762f31a91d" translate="yes" xml:space="preserve">
          <source>All of the standard collections provide several iterators for performing bulk manipulation of their contents. The three primary iterators almost every collection should provide are &lt;code&gt;iter&lt;/code&gt;, &lt;code&gt;iter_mut&lt;/code&gt;, and &lt;code&gt;into_iter&lt;/code&gt;. Some of these are not provided on collections where it would be unsound or unreasonable to provide them.</source>
          <target state="translated">Todas las colecciones est&amp;aacute;ndar proporcionan varios iteradores para realizar una manipulaci&amp;oacute;n masiva de su contenido. Los tres iteradores principales que casi todas las colecciones deben proporcionar son &lt;code&gt;iter&lt;/code&gt; , &lt;code&gt;iter_mut&lt;/code&gt; e &lt;code&gt;into_iter&lt;/code&gt; . Algunos de estos no se proporcionan en colecciones donde no ser&amp;iacute;a correcto o irrazonable proporcionarlos.</target>
        </trans-unit>
        <trans-unit id="7c09f50beeaa399a934ba76d5cc5d913f4961d31" translate="yes" xml:space="preserve">
          <source>All of these are valid &lt;code&gt;String&lt;/code&gt; values.</source>
          <target state="translated">Todos estos son valores de &lt;code&gt;String&lt;/code&gt; v&amp;aacute;lidos .</target>
        </trans-unit>
        <trans-unit id="3488f647e2016335e532591f4617d056149f656a" translate="yes" xml:space="preserve">
          <source>All of these method calls are possible because we specified how the &lt;code&gt;next&lt;/code&gt; method works, and the standard library provides default implementations for other methods that call &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">Todas estas llamadas a m&amp;eacute;todos son posibles porque especificamos c&amp;oacute;mo el &lt;code&gt;next&lt;/code&gt; m&amp;eacute;todo, y la biblioteca est&amp;aacute;ndar proporciona implementaciones predeterminadas para otros m&amp;eacute;todos que llaman a &lt;code&gt;next&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a8409870b71900361c6e9ce41cc4d8b31f5a720" translate="yes" xml:space="preserve">
          <source>All options are initially set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Todas las opciones se establecen inicialmente en &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cec813890e4d07a2defc7bce522b39b7b6522a4d" translate="yes" xml:space="preserve">
          <source>All other arguments given to the &lt;code&gt;inline&lt;/code&gt; attribute will return this error. Example:</source>
          <target state="translated">Todos los dem&amp;aacute;s argumentos dados al &lt;code&gt;inline&lt;/code&gt; atributo en l&amp;iacute;nea devolver&amp;aacute;n este error. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="01957b2f8a375b806a015963a415dc2f430add14" translate="yes" xml:space="preserve">
          <source>All other arguments given to the &lt;code&gt;instruction_set&lt;/code&gt; attribute will return this error. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110d2b10be35d17317e6c561cf91a4fabbf8e826" translate="yes" xml:space="preserve">
          <source>All other characters are given hexadecimal Unicode escapes; see &lt;a href=&quot;#method.escape_unicode&quot;&gt;&lt;code&gt;escape_unicode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Todos los dem&amp;aacute;s caracteres reciben escapes Unicode hexadecimales; ver&lt;a href=&quot;#method.escape_unicode&quot;&gt; &lt;code&gt;escape_unicode&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f76ce538d07b9974a525f600e48b7f5dff4ae16c" translate="yes" xml:space="preserve">
          <source>All other fragment specifiers have no restrictions.</source>
          <target state="translated">Todos los demás especificadores de fragmentos no tienen restricciones.</target>
        </trans-unit>
        <trans-unit id="fef84ba857bf1c83a92f8d5a5b2d52afc2b3c691" translate="yes" xml:space="preserve">
          <source>All pointers (except for the null pointer) are valid for all operations of &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;size zero&lt;/a&gt;.</source>
          <target state="translated">Todos los punteros (excepto el puntero nulo) son v&amp;aacute;lidos para todas las operaciones de &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt; tama&amp;ntilde;o cero&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bcec8da89ce19312f810d6e8b0a4c1c994af8c3f" translate="yes" xml:space="preserve">
          <source>All pointers in Rust are explicit first-class values. They can be moved or copied, stored into data structs, and returned from functions.</source>
          <target state="translated">Todos los indicadores de Rust son valores explícitos de primera clase.Pueden ser movidos o copiados,almacenados en estructuras de datos y devueltos desde las funciones.</target>
        </trans-unit>
        <trans-unit id="6a33c45e166bf3f976aac4c7eec793b7d8946ca1" translate="yes" xml:space="preserve">
          <source>All programmers strive to make their code easy to understand, but sometimes extra explanation is warranted. In these cases, programmers leave notes, or &lt;em&gt;comments&lt;/em&gt;, in their source code that the compiler will ignore but people reading the source code may find useful.</source>
          <target state="translated">Todos los programadores se esfuerzan por hacer que su c&amp;oacute;digo sea f&amp;aacute;cil de entender, pero a veces se justifica una explicaci&amp;oacute;n adicional. En estos casos, los programadores dejan notas o&lt;em&gt; comentarios&lt;/em&gt; en su c&amp;oacute;digo fuente que el compilador ignorar&amp;aacute;, pero las personas que lean el c&amp;oacute;digo fuente pueden resultar &amp;uacute;tiles.</target>
        </trans-unit>
        <trans-unit id="aa0c879bcf5cab9e7f4749d5ede013d5bf918c1f" translate="yes" xml:space="preserve">
          <source>All programs have to manage the way they use a computer&amp;rsquo;s memory while running. Some languages have garbage collection that constantly looks for no longer used memory as the program runs; in other languages, the programmer must explicitly allocate and free the memory. Rust uses a third approach: memory is managed through a system of ownership with a set of rules that the compiler checks at compile time. None of the ownership features slow down your program while it&amp;rsquo;s running.</source>
          <target state="translated">Todos los programas tienen que administrar la forma en que usan la memoria de una computadora mientras se ejecutan. Algunos lenguajes tienen recolecci&amp;oacute;n de basura que busca constantemente memoria que ya no se usa mientras se ejecuta el programa; en otros lenguajes, el programador debe asignar y liberar expl&amp;iacute;citamente la memoria. Rust utiliza un tercer enfoque: la memoria se administra a trav&amp;eacute;s de un sistema de propiedad con un conjunto de reglas que el compilador verifica en el momento de la compilaci&amp;oacute;n. Ninguna de las caracter&amp;iacute;sticas de propiedad ralentiza su programa mientras se ejecuta.</target>
        </trans-unit>
        <trans-unit id="cf610b10a23cb06f62489f071586a11ed04b1ece" translate="yes" xml:space="preserve">
          <source>All reads from the returned reader will return &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(0)&lt;/code&gt;.</source>
          <target state="translated">Todas las lecturas del lector devuelto devolver&amp;aacute;n &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5edadac5bb39f603d58e3300e69ef3e103ed0e48" translate="yes" xml:space="preserve">
          <source>All reads from this reader will succeed by filling the specified buffer with the given byte.</source>
          <target state="translated">Todas las lecturas de este lector tendrán éxito al llenar el buffer especificado con el byte dado.</target>
        </trans-unit>
        <trans-unit id="8042ca5a8b0159faa7d15d89ddf16924d0bee8ca" translate="yes" xml:space="preserve">
          <source>All results of &lt;code&gt;next()&lt;/code&gt; need to be identical to the results of &lt;code&gt;next_back()&lt;/code&gt; in reverse order.</source>
          <target state="translated">Todos los resultados de &lt;code&gt;next()&lt;/code&gt; deben ser id&amp;eacute;nticos a los resultados de &lt;code&gt;next_back()&lt;/code&gt; en orden inverso.</target>
        </trans-unit>
        <trans-unit id="051b0a6da7e5a99366866472afe4cedd9c4ae587" translate="yes" xml:space="preserve">
          <source>All strings that adhere to the following &lt;a href=&quot;https://www.w3.org/TR/REC-xml/#sec-notation&quot;&gt;EBNF&lt;/a&gt; grammar will result in an &lt;a href=&quot;../result/enum.result#Ok.v&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; being returned:</source>
          <target state="translated">Todas las cadenas que se adhieran a la siguiente gram&amp;aacute;tica &lt;a href=&quot;https://www.w3.org/TR/REC-xml/#sec-notation&quot;&gt;EBNF&lt;/a&gt; dar&amp;aacute;n como resultado un &lt;a href=&quot;../result/enum.result#Ok.v&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt;se devuelva :</target>
        </trans-unit>
        <trans-unit id="ba6c1035e6000e531913744213ce54c88bb453f8" translate="yes" xml:space="preserve">
          <source>All strings that adhere to the following &lt;a href=&quot;https://www.w3.org/TR/REC-xml/#sec-notation&quot;&gt;EBNF&lt;/a&gt; grammar will result in an &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; being returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2330d9e11176797f3b69c4b492614aa87568d1" translate="yes" xml:space="preserve">
          <source>All strings that adhere to the following &lt;a href=&quot;https://www.w3.org/TR/REC-xml/#sec-notation&quot;&gt;EBNF&lt;/a&gt; grammar will result in an &lt;a href=&quot;result/enum.result#Ok.v&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; being returned:</source>
          <target state="translated">Todas las cadenas que se adhieran a la siguiente gram&amp;aacute;tica &lt;a href=&quot;https://www.w3.org/TR/REC-xml/#sec-notation&quot;&gt;EBNF&lt;/a&gt; dar&amp;aacute;n como resultado que se devuelva un &lt;a href=&quot;result/enum.result#Ok.v&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5099415fb85a9568ce08c4de6d590b1962a9de28" translate="yes" xml:space="preserve">
          <source>All strings that adhere to the following &lt;a href=&quot;https://www.w3.org/TR/REC-xml/#sec-notation&quot;&gt;EBNF&lt;/a&gt; grammar will result in an &lt;a href=&quot;result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; being returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19c4500c8b81bcefce226435a932d9bd67dd1d4" translate="yes" xml:space="preserve">
          <source>All supertraits must also be object safe.</source>
          <target state="translated">Todos los supertratos también deben ser seguros para los objetos.</target>
        </trans-unit>
        <trans-unit id="3834b26accc0c7926a85719d5492f93bbdde2cd6" translate="yes" xml:space="preserve">
          <source>All the Places Patterns Can Be Used</source>
          <target state="translated">Todos los patrones de los lugares pueden ser usados</target>
        </trans-unit>
        <trans-unit id="70ddc33f2c0eb4587fa8e2cac6e8f77be9184d95" translate="yes" xml:space="preserve">
          <source>All the code we&amp;rsquo;ve discussed so far has had Rust&amp;rsquo;s memory safety guarantees enforced at compile time. However, Rust has a second language hidden inside it that doesn&amp;rsquo;t enforce these memory safety guarantees: it&amp;rsquo;s called &lt;em&gt;unsafe Rust&lt;/em&gt; and works just like regular Rust, but gives us extra superpowers.</source>
          <target state="translated">Todo el c&amp;oacute;digo que hemos discutido hasta ahora ha tenido las garant&amp;iacute;as de seguridad de la memoria de Rust aplicadas en tiempo de compilaci&amp;oacute;n. Sin embargo, Rust tiene un segundo idioma oculto en su interior que no hace cumplir estas garant&amp;iacute;as de seguridad de la memoria: se llama &lt;em&gt;Rust inseguro&lt;/em&gt; y funciona como Rust normal, pero nos da superpoderes adicionales.</target>
        </trans-unit>
        <trans-unit id="5d094a6ebf518b356f6cc88f0daffccbeaa88d1a" translate="yes" xml:space="preserve">
          <source>All the floating point types, such as &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Todos los tipos de coma flotante, como &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49768c9761f944e57fd8b28ffb7ccca3ce0255bf" translate="yes" xml:space="preserve">
          <source>All the integer types, such as &lt;code&gt;u32&lt;/code&gt;.</source>
          <target state="translated">Todos los tipos de enteros, como &lt;code&gt;u32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7aad067d2eb4fd66349ef7460833027940768e31" translate="yes" xml:space="preserve">
          <source>All the traits in &lt;a href=&quot;fmt/index&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt; except &lt;a href=&quot;fmt/trait.pointer&quot;&gt;&lt;code&gt;Pointer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fmt/trait.write&quot;&gt;&lt;code&gt;fmt::Write&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Todos los rasgos en &lt;a href=&quot;fmt/index&quot;&gt; &lt;code&gt;std::fmt&lt;/code&gt; &lt;/a&gt; excepto &lt;a href=&quot;fmt/trait.pointer&quot;&gt; &lt;code&gt;Pointer&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;fmt/trait.write&quot;&gt; &lt;code&gt;fmt::Write&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fbc378a4bea0c74a504553c4655c69b13216d43" translate="yes" xml:space="preserve">
          <source>All tokens have an associated &lt;code&gt;Span&lt;/code&gt;. A &lt;code&gt;Span&lt;/code&gt; is an opaque value that cannot be modified but can be manufactured. &lt;code&gt;Span&lt;/code&gt;s represent an extent of source code within a program and are primarily used for error reporting. You can modify the &lt;code&gt;Span&lt;/code&gt; of any token.</source>
          <target state="translated">Todos los tokens tienen un &lt;code&gt;Span&lt;/code&gt; asociado . Un &lt;code&gt;Span&lt;/code&gt; es un valor opaco que no se puede modificar pero que se puede fabricar. &lt;code&gt;Span&lt;/code&gt; representan una extensi&amp;oacute;n del c&amp;oacute;digo fuente dentro de un programa y se utilizan principalmente para informar de errores. Puede modificar el &lt;code&gt;Span&lt;/code&gt; de cualquier token.</target>
        </trans-unit>
        <trans-unit id="c4b7c6a0fbafa4ae17e0c283d126acf9c731f848" translate="yes" xml:space="preserve">
          <source>All traits define an implicit type parameter &lt;code&gt;Self&lt;/code&gt; that refers to &quot;the type that is implementing this interface&quot;. Traits may also contain additional type parameters. These type parameters, including &lt;code&gt;Self&lt;/code&gt;, may be constrained by other traits and so forth &lt;a href=&quot;generics&quot;&gt;as usual&lt;/a&gt;.</source>
          <target state="translated">Todos los rasgos definen un par&amp;aacute;metro de tipo impl&amp;iacute;cito &lt;code&gt;Self&lt;/code&gt; que se refiere al &quot;tipo que est&amp;aacute; implementando esta interfaz&quot;. Los rasgos tambi&amp;eacute;n pueden contener par&amp;aacute;metros de tipo adicionales. Estos par&amp;aacute;metros de tipo, incluido el &lt;code&gt;Self&lt;/code&gt; , pueden estar limitados por otros rasgos y as&amp;iacute; sucesivamente, &lt;a href=&quot;generics&quot;&gt;como es habitual&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6af2c7840468532a887d826478745d410145630" translate="yes" xml:space="preserve">
          <source>All type parameters have an implicit bound of &lt;code&gt;Sized&lt;/code&gt;. The special syntax &lt;code&gt;?Sized&lt;/code&gt; can be used to remove this bound if it's not appropriate.</source>
          <target state="translated">Todos los par&amp;aacute;metros de tipo tienen un l&amp;iacute;mite impl&amp;iacute;cito de &lt;code&gt;Sized&lt;/code&gt; . La sintaxis especial &lt;code&gt;?Sized&lt;/code&gt; se puede utilizar para eliminar este l&amp;iacute;mite si no es apropiado.</target>
        </trans-unit>
        <trans-unit id="9fcb4ee73e3ea3e00af83f66cf487fb2ad10ff05" translate="yes" xml:space="preserve">
          <source>All types in a tuple struct aren't the same when using the &lt;code&gt;#[simd]&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687bde44d55450fc7926f1ddbef8c12777b88228" translate="yes" xml:space="preserve">
          <source>All user-defined composite types (&lt;code&gt;struct&lt;/code&gt;s, &lt;code&gt;enum&lt;/code&gt;s, and &lt;code&gt;union&lt;/code&gt;s) have a &lt;em&gt;representation&lt;/em&gt; that specifies what the layout is for the type. The possible representations for a type are:</source>
          <target state="translated">Todos los tipos compuestos definidos por el usuario ( &lt;code&gt;struct&lt;/code&gt; , &lt;code&gt;enum&lt;/code&gt; eraciones y &lt;code&gt;union&lt;/code&gt; es ) tienen una &lt;em&gt;representaci&amp;oacute;n&lt;/em&gt; que especifica cu&amp;aacute;l es el dise&amp;ntilde;o para el tipo. Las posibles representaciones de un tipo son:</target>
        </trans-unit>
        <trans-unit id="b66aa8bf38f6384faa05e5ba7a817e6473b9a5b6" translate="yes" xml:space="preserve">
          <source>All values have an alignment and size.</source>
          <target state="translated">Todos los valores tienen una alineación y un tamaño.</target>
        </trans-unit>
        <trans-unit id="6b3bc16295776314b52aa5587d61ce1888ff84c1" translate="yes" xml:space="preserve">
          <source>Alloc</source>
          <target state="translated">Alloc</target>
        </trans-unit>
        <trans-unit id="73c626eee3cffa40774dfe1fcb9f6b9bd69dc64f" translate="yes" xml:space="preserve">
          <source>Alloc::alloc</source>
          <target state="translated">Alloc::alloc</target>
        </trans-unit>
        <trans-unit id="58fa8f803498e5ec9addefde8bfd45a79dbec5ed" translate="yes" xml:space="preserve">
          <source>Alloc::alloc_array</source>
          <target state="translated">Alloc::alloc_array</target>
        </trans-unit>
        <trans-unit id="b50e7d6a8a9d06e47daea96c8b2aea5c45efb165" translate="yes" xml:space="preserve">
          <source>Alloc::alloc_excess</source>
          <target state="translated">Alloc::alloc_excess</target>
        </trans-unit>
        <trans-unit id="889b443e61594610d30213145f921f146db36832" translate="yes" xml:space="preserve">
          <source>Alloc::alloc_one</source>
          <target state="translated">Alloc::alloc_one</target>
        </trans-unit>
        <trans-unit id="a34261c2be453348710c37c58e7b9c83398884d8" translate="yes" xml:space="preserve">
          <source>Alloc::alloc_zeroed</source>
          <target state="translated">Alloc::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="7d3d2688c4fd76b53fe3390539a364662ab17d4b" translate="yes" xml:space="preserve">
          <source>Alloc::dealloc</source>
          <target state="translated">Alloc::dealloc</target>
        </trans-unit>
        <trans-unit id="640d5625de8ef766306d60749a2169115e55e156" translate="yes" xml:space="preserve">
          <source>Alloc::dealloc_array</source>
          <target state="translated">Alloc::dealloc_array</target>
        </trans-unit>
        <trans-unit id="7053fc65b9dd32b26e961ddd07f10fe845724b56" translate="yes" xml:space="preserve">
          <source>Alloc::dealloc_one</source>
          <target state="translated">Alloc::dealloc_one</target>
        </trans-unit>
        <trans-unit id="c1a3b352f967fd646042d5ec8feb84a7842b4835" translate="yes" xml:space="preserve">
          <source>Alloc::grow_in_place</source>
          <target state="translated">Alloc::grow_in_place</target>
        </trans-unit>
        <trans-unit id="b0c3031aac44345a0cd3601e017910c7886cd822" translate="yes" xml:space="preserve">
          <source>Alloc::realloc</source>
          <target state="translated">Alloc::realloc</target>
        </trans-unit>
        <trans-unit id="50682f5a6557029f4ae580a726dd0a2a8ee83c83" translate="yes" xml:space="preserve">
          <source>Alloc::realloc_array</source>
          <target state="translated">Alloc::realloc_array</target>
        </trans-unit>
        <trans-unit id="71b9b4276801f0c0a766cb281400a5a34452c7e1" translate="yes" xml:space="preserve">
          <source>Alloc::realloc_excess</source>
          <target state="translated">Alloc::realloc_excess</target>
        </trans-unit>
        <trans-unit id="caed8ad7c332dd652a64a2f5a64ee5adce448144" translate="yes" xml:space="preserve">
          <source>Alloc::shrink_in_place</source>
          <target state="translated">Alloc::shrink_in_place</target>
        </trans-unit>
        <trans-unit id="4bdde8e404d1e339cdf8e89ef42138d76fb64cb5" translate="yes" xml:space="preserve">
          <source>Alloc::usable_size</source>
          <target state="translated">Alloc::usable_size</target>
        </trans-unit>
        <trans-unit id="74f9a2a318fbafb57c2a318b7f97cd7f558235f5" translate="yes" xml:space="preserve">
          <source>AllocErr</source>
          <target state="translated">AllocErr</target>
        </trans-unit>
        <trans-unit id="81a1e8e44229166f6c5d59b8b5cdfbd7de11a910" translate="yes" xml:space="preserve">
          <source>AllocErr::borrow</source>
          <target state="translated">AllocErr::borrow</target>
        </trans-unit>
        <trans-unit id="cab0d29cfc07f03d441e5891d8fdae354b136ec1" translate="yes" xml:space="preserve">
          <source>AllocErr::borrow_mut</source>
          <target state="translated">AllocErr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c63e5f5e71fd2207c8a6514237ae70d9dca95cf3" translate="yes" xml:space="preserve">
          <source>AllocErr::cause</source>
          <target state="translated">AllocErr::cause</target>
        </trans-unit>
        <trans-unit id="09ff0aa0e6ca318ce203b20e17f08354650229f1" translate="yes" xml:space="preserve">
          <source>AllocErr::clone</source>
          <target state="translated">AllocErr::clone</target>
        </trans-unit>
        <trans-unit id="777d6911608c872b31c4bdb18d3b776c08a9b8f5" translate="yes" xml:space="preserve">
          <source>AllocErr::clone_from</source>
          <target state="translated">AllocErr::clone_from</target>
        </trans-unit>
        <trans-unit id="b678a089fb922c246660ee4daaf38a5251355da7" translate="yes" xml:space="preserve">
          <source>AllocErr::clone_into</source>
          <target state="translated">AllocErr::clone_into</target>
        </trans-unit>
        <trans-unit id="5df229543f81998e9da115264fa06013a927adb1" translate="yes" xml:space="preserve">
          <source>AllocErr::description</source>
          <target state="translated">AllocErr::description</target>
        </trans-unit>
        <trans-unit id="d2cf0a94fd5cf29c79c5284616875b84972fb312" translate="yes" xml:space="preserve">
          <source>AllocErr::eq</source>
          <target state="translated">AllocErr::eq</target>
        </trans-unit>
        <trans-unit id="5881f4abcdbf06d5924b4a78a521cc0027e69523" translate="yes" xml:space="preserve">
          <source>AllocErr::fmt</source>
          <target state="translated">AllocErr::fmt</target>
        </trans-unit>
        <trans-unit id="270a3da0beb21d444fb57d0c363b8a08cfe0f022" translate="yes" xml:space="preserve">
          <source>AllocErr::from</source>
          <target state="translated">AllocErr::from</target>
        </trans-unit>
        <trans-unit id="98b28dbbeacbc8b3f7530e8cbb0f5369608cd809" translate="yes" xml:space="preserve">
          <source>AllocErr::into</source>
          <target state="translated">AllocErr::into</target>
        </trans-unit>
        <trans-unit id="039711c278e014b513a0be997690fca2416f8474" translate="yes" xml:space="preserve">
          <source>AllocErr::ne</source>
          <target state="translated">AllocErr::ne</target>
        </trans-unit>
        <trans-unit id="ffa94c7186e9f5d1d7bf9c63828fb87e4a775ad5" translate="yes" xml:space="preserve">
          <source>AllocErr::source</source>
          <target state="translated">AllocErr::source</target>
        </trans-unit>
        <trans-unit id="0aeb755570b957275d6d9d5317212dc6a6535090" translate="yes" xml:space="preserve">
          <source>AllocErr::to_owned</source>
          <target state="translated">AllocErr::to_owned</target>
        </trans-unit>
        <trans-unit id="0e17e4e80e3c6af6ed45e6c032cf33d55d346e46" translate="yes" xml:space="preserve">
          <source>AllocErr::to_string</source>
          <target state="translated">AllocErr::to_string</target>
        </trans-unit>
        <trans-unit id="3e40fc0676c76a71ca131dafb97f38662652bfbf" translate="yes" xml:space="preserve">
          <source>AllocErr::try_from</source>
          <target state="translated">AllocErr::try_from</target>
        </trans-unit>
        <trans-unit id="34d1124cc06e84256717b819e1f63b955e0350bf" translate="yes" xml:space="preserve">
          <source>AllocErr::try_into</source>
          <target state="translated">AllocErr::try_into</target>
        </trans-unit>
        <trans-unit id="663b204a54c41c16c072ee135d91fa4be49de349" translate="yes" xml:space="preserve">
          <source>AllocErr::type_id</source>
          <target state="translated">AllocErr::type_id</target>
        </trans-unit>
        <trans-unit id="fc99a18ee7862835928c295e62957162ad4eb462" translate="yes" xml:space="preserve">
          <source>AllocError</source>
          <target state="translated">AllocError</target>
        </trans-unit>
        <trans-unit id="4893f8fbd4cad55fcdd644464bc1fe91c279e953" translate="yes" xml:space="preserve">
          <source>AllocRef</source>
          <target state="translated">AllocRef</target>
        </trans-unit>
        <trans-unit id="4893c8174f6c1eabc41e7843e70d7ebcff1b1f84" translate="yes" xml:space="preserve">
          <source>Allocate memory as described by the given &lt;code&gt;layout&lt;/code&gt;.</source>
          <target state="translated">Asigne memoria como se describe en el &lt;code&gt;layout&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="cd02c9bc4eedba216d90a16d722506e0ce680a8a" translate="yes" xml:space="preserve">
          <source>Allocate memory as described by the given &lt;code&gt;layout&lt;/code&gt;. &lt;a href=&quot;trait.globalalloc#tymethod.alloc&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Asigne memoria como se describe en el &lt;code&gt;layout&lt;/code&gt; dado . &lt;a href=&quot;trait.globalalloc#tymethod.alloc&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74c59d8374e4ee1d975ce714a71b5fcdbb7aacac" translate="yes" xml:space="preserve">
          <source>Allocate memory with the global allocator.</source>
          <target state="translated">Asignar la memoria con el asignador global.</target>
        </trans-unit>
        <trans-unit id="cfb8411e19f0f79e91b6b66f6609da2b9991a1e5" translate="yes" xml:space="preserve">
          <source>Allocate zero-initialized memory with the global allocator.</source>
          <target state="translated">Asignar la memoria cero inicial con el asignador global.</target>
        </trans-unit>
        <trans-unit id="1bfdf7915bd5c3db982b39e0a3309425f8ee260d" translate="yes" xml:space="preserve">
          <source>Allocates a block suitable for holding &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Asigna un bloque adecuados para la celebraci&amp;oacute;n de &lt;code&gt;n&lt;/code&gt; instancias de &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c63c156459af2e92bb9b73d7f0f9844433b5dc2f" translate="yes" xml:space="preserve">
          <source>Allocates a block suitable for holding &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;trait.alloc#method.alloc_array&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Asigna un bloque adecuados para la celebraci&amp;oacute;n de &lt;code&gt;n&lt;/code&gt; instancias de &lt;code&gt;T&lt;/code&gt; . &lt;a href=&quot;trait.alloc#method.alloc_array&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed375cd7b209e0c5769df096531bae03a872bbbb" translate="yes" xml:space="preserve">
          <source>Allocates a block suitable for holding an instance of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Asigna un bloque adecuado para contener una instancia de &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02c72ac7d36294390fedc764c2754fe1636d64b1" translate="yes" xml:space="preserve">
          <source>Allocates a block suitable for holding an instance of &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;trait.alloc#method.alloc_one&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Asigna un bloque adecuado para contener una instancia de &lt;code&gt;T&lt;/code&gt; . &lt;a href=&quot;trait.alloc#method.alloc_one&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76e23de7e691468d4d99aac266130e3bc34f2ea4" translate="yes" xml:space="preserve">
          <source>Allocates an empty &lt;code&gt;PathBuf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PathBuf&lt;/code&gt; un PathBuf vac&amp;iacute;o .</target>
        </trans-unit>
        <trans-unit id="3c08c70aff2d6ac267aff88abe6336b4c67e3719" translate="yes" xml:space="preserve">
          <source>Allocates memory in the given allocator then places &lt;code&gt;x&lt;/code&gt; into it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ce219d6c4b42c1f87ab6030532c065b1fec11f" translate="yes" xml:space="preserve">
          <source>Allocates memory on the heap and then places &lt;code&gt;x&lt;/code&gt; into it.</source>
          <target state="translated">Asigna memoria en el mont&amp;oacute;n y luego coloca &lt;code&gt;x&lt;/code&gt; en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="e910169c58168ed4f75b19228b519cfb61699e61" translate="yes" xml:space="preserve">
          <source>Allow generic type parameter to be a dynamically sized type</source>
          <target state="translated">Permitir que el parámetro de tipo genérico sea un tipo de tamaño dinámico</target>
        </trans-unit>
        <trans-unit id="40680c6330eab7e25541ffbe63efc1d14385635b" translate="yes" xml:space="preserve">
          <source>Allow users to add text content only when a post is in the &lt;code&gt;Draft&lt;/code&gt; state. Hint: have the state object responsible for what might change about the content but not responsible for modifying the &lt;code&gt;Post&lt;/code&gt;.</source>
          <target state="translated">Permita que los usuarios agreguen contenido de texto solo cuando una publicaci&amp;oacute;n est&amp;aacute; en estado &lt;code&gt;Draft&lt;/code&gt; . Sugerencia: haga que el objeto de estado sea responsable de lo que pueda cambiar en el contenido, pero no responsable de modificar la &lt;code&gt;Post&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb50b4ef5745cf62353aeff34203276011ef50f" translate="yes" xml:space="preserve">
          <source>Allowing Access from Multiple Threads with &lt;code id=&quot;allowing-access-from-multiple-threads-with-sync&quot;&gt;Sync&lt;/code&gt;</source>
          <target state="translated">Permitir el acceso desde varios subprocesos con &lt;code id=&quot;allowing-access-from-multiple-threads-with-sync&quot;&gt;Sync&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fae2d8f4c50be8a20cdea347ace493568595fcd3" translate="yes" xml:space="preserve">
          <source>Allowing Multiple Guesses with Looping</source>
          <target state="translated">Permitiendo múltiples conjeturas con el bucle</target>
        </trans-unit>
        <trans-unit id="7db289670d5f2b576ba5fbc25cdc4ef16295c536" translate="yes" xml:space="preserve">
          <source>Allowing Transference of Ownership Between Threads with &lt;code id=&quot;allowing-transference-of-ownership-between-threads-with-send&quot;&gt;Send&lt;/code&gt;</source>
          <target state="translated">Permitir la transferencia de propiedad entre subprocesos con &lt;code id=&quot;allowing-transference-of-ownership-between-threads-with-send&quot;&gt;Send&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb09e5f22f3b7d16947a2ecaccff480c6609f901" translate="yes" xml:space="preserve">
          <source>Almost always it is better to use &lt;code&gt;Vec&lt;/code&gt; or &lt;a href=&quot;../vec_deque/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;struct.linkedlist&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/a&gt;. In general, array-based containers are faster, more memory efficient and make better use of CPU cache.</source>
          <target state="translated">Casi siempre es mejor usar &lt;code&gt;Vec&lt;/code&gt; o &lt;a href=&quot;../vec_deque/struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&lt;/code&gt; en&lt;/a&gt; lugar de &lt;a href=&quot;struct.linkedlist&quot;&gt; &lt;code&gt;LinkedList&lt;/code&gt; &lt;/a&gt; . En general, los contenedores basados ​​en matrices son m&amp;aacute;s r&amp;aacute;pidos, m&amp;aacute;s eficientes en memoria y hacen un mejor uso de la cach&amp;eacute; de la CPU.</target>
        </trans-unit>
        <trans-unit id="96a3f97ad5d3ab3ce2ee9333276a6a44f6055cf9" translate="yes" xml:space="preserve">
          <source>Almost always it is better to use &lt;code&gt;Vec&lt;/code&gt; or &lt;code&gt;VecDeque&lt;/code&gt; instead of &lt;code&gt;LinkedList&lt;/code&gt;. In general, array-based containers are faster, more memory efficient and make better use of CPU cache.</source>
          <target state="translated">Casi siempre es mejor usar &lt;code&gt;Vec&lt;/code&gt; o &lt;code&gt;VecDeque&lt;/code&gt; en lugar de &lt;code&gt;LinkedList&lt;/code&gt; . En general, los contenedores basados ​​en matrices son m&amp;aacute;s r&amp;aacute;pidos, m&amp;aacute;s eficientes en memoria y hacen un mejor uso de la cach&amp;eacute; de la CPU.</target>
        </trans-unit>
        <trans-unit id="30066ada2ed0aa1faf9262f27c4ed17333b52206" translate="yes" xml:space="preserve">
          <source>Along the way, we&amp;rsquo;ll show how to make our command line tool use features of the terminal that many command line tools use. We&amp;rsquo;ll read the value of an environment variable to allow the user to configure the behavior of our tool. We&amp;rsquo;ll also print error messages to the standard error console stream (&lt;code&gt;stderr&lt;/code&gt;) instead of standard output (&lt;code&gt;stdout&lt;/code&gt;), so, for example, the user can redirect successful output to a file while still seeing error messages onscreen.</source>
          <target state="translated">A lo largo del camino, mostraremos c&amp;oacute;mo hacer que nuestra herramienta de l&amp;iacute;nea de comandos utilice las funciones del terminal que utilizan muchas herramientas de l&amp;iacute;nea de comandos. Leeremos el valor de una variable de entorno para permitir al usuario configurar el comportamiento de nuestra herramienta. Tambi&amp;eacute;n imprimiremos mensajes de error en el flujo de la consola de error est&amp;aacute;ndar ( &lt;code&gt;stderr&lt;/code&gt; ) en lugar de la salida est&amp;aacute;ndar ( &lt;code&gt;stdout&lt;/code&gt; ), por lo que, por ejemplo, el usuario puede redirigir la salida correcta a un archivo mientras sigue viendo mensajes de error en la pantalla.</target>
        </trans-unit>
        <trans-unit id="2cbf8cd5d5a46820a0f6ab73279f92ce571b3bc8" translate="yes" xml:space="preserve">
          <source>Along with being made public via &lt;code&gt;pub&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt; can also have an &lt;a href=&quot;keyword.extern&quot;&gt;&lt;code&gt;extern&lt;/code&gt;&lt;/a&gt; added for use in FFI.</source>
          <target state="translated">Adem&amp;aacute;s de hacerse p&amp;uacute;blico a trav&amp;eacute;s de &lt;code&gt;pub&lt;/code&gt; , &lt;code&gt;fn&lt;/code&gt; tambi&amp;eacute;n puede tener un &lt;a href=&quot;keyword.extern&quot;&gt; &lt;code&gt;extern&lt;/code&gt; o&lt;/a&gt; agregado para su uso en FFI.</target>
        </trans-unit>
        <trans-unit id="569f87a8387e1554badafba00588c85d0f8bf792" translate="yes" xml:space="preserve">
          <source>Along with the newtype pattern, Rust provides the ability to declare a &lt;em&gt;type alias&lt;/em&gt; to give an existing type another name. For this we use the &lt;code&gt;type&lt;/code&gt; keyword. For example, we can create the alias &lt;code&gt;Kilometers&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; like so:</source>
          <target state="translated">Junto con el patr&amp;oacute;n newtype, Rust brinda la capacidad de declarar un &lt;em&gt;alias de tipo&lt;/em&gt; para darle otro nombre a un tipo existente. Para esto usamos la palabra clave &lt;code&gt;type&lt;/code&gt; . Por ejemplo, podemos crear el alias &lt;code&gt;Kilometers&lt;/code&gt; para &lt;code&gt;i32&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="6444cb062f09d53622baea0cd17deb96b9dc9f75" translate="yes" xml:space="preserve">
          <source>Also discussed were the &lt;code&gt;Deref&lt;/code&gt; and &lt;code&gt;Drop&lt;/code&gt; traits, which enable a lot of the functionality of smart pointers. We explored reference cycles that can cause memory leaks and how to prevent them using &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n se discutieron los rasgos &lt;code&gt;Deref&lt;/code&gt; y &lt;code&gt;Drop&lt;/code&gt; , que permiten muchas de las funciones de los punteros inteligentes. Exploramos los ciclos de referencia que pueden causar p&amp;eacute;rdidas de memoria y c&amp;oacute;mo prevenirlos usando &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6fc1b2f8caf81c693f670285ed3e30e58c8f202" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;Iterator&lt;/code&gt; provides a default implementation of methods such as &lt;code&gt;nth&lt;/code&gt; and &lt;code&gt;fold&lt;/code&gt; which call &lt;code&gt;next&lt;/code&gt; internally. However, it is also possible to write a custom implementation of methods like &lt;code&gt;nth&lt;/code&gt; and &lt;code&gt;fold&lt;/code&gt; if an iterator can compute them more efficiently without calling &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que &lt;code&gt;Iterator&lt;/code&gt; proporciona una implementaci&amp;oacute;n predeterminada de m&amp;eacute;todos como &lt;code&gt;nth&lt;/code&gt; y &lt;code&gt;fold&lt;/code&gt; que llaman a &lt;code&gt;next&lt;/code&gt; internamente. Sin embargo, tambi&amp;eacute;n es posible escribir una implementaci&amp;oacute;n personalizada de m&amp;eacute;todos como &lt;code&gt;nth&lt;/code&gt; y &lt;code&gt;fold&lt;/code&gt; si un iterador puede calcularlos de manera m&amp;aacute;s eficiente sin llamar a &lt;code&gt;next&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a7fb665b167f214e0e11085759c66fc45c5b538" translate="yes" xml:space="preserve">
          <source>Also note that Cargo build scripts can learn about this feature through &lt;a href=&quot;http://doc.crates.io/environment-variables.html#environment-variables-cargo-sets-for-build-scripts&quot;&gt;environment variables&lt;/a&gt;. In a build script you can detect the linkage via:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que los scripts de construcci&amp;oacute;n de Cargo pueden aprender sobre esta funci&amp;oacute;n a trav&amp;eacute;s de &lt;a href=&quot;http://doc.crates.io/environment-variables.html#environment-variables-cargo-sets-for-build-scripts&quot;&gt;variables de entorno&lt;/a&gt; . En un script de construcci&amp;oacute;n, puede detectar el enlace a trav&amp;eacute;s de:</target>
        </trans-unit>
        <trans-unit id="0d1efc462e5f1fbd3ec91e9a65ca5ad80e9b3a5b" translate="yes" xml:space="preserve">
          <source>Also note that Cargo build scripts can learn about this feature through &lt;a href=&quot;https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-build-scripts&quot;&gt;environment variables&lt;/a&gt;. In a build script you can detect the linkage via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729f1c9440272260f81d5cd373556bbc830572f8" translate="yes" xml:space="preserve">
          <source>Also note that the values we get from the calls to &lt;code&gt;next&lt;/code&gt; are immutable references to the values in the vector. The &lt;code&gt;iter&lt;/code&gt; method produces an iterator over immutable references. If we want to create an iterator that takes ownership of &lt;code&gt;v1&lt;/code&gt; and returns owned values, we can call &lt;code&gt;into_iter&lt;/code&gt; instead of &lt;code&gt;iter&lt;/code&gt;. Similarly, if we want to iterate over mutable references, we can call &lt;code&gt;iter_mut&lt;/code&gt; instead of &lt;code&gt;iter&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que los valores que obtenemos de las llamadas a &lt;code&gt;next&lt;/code&gt; son referencias inmutables a los valores en el vector. El m&amp;eacute;todo &lt;code&gt;iter&lt;/code&gt; produce un iterador sobre referencias inmutables. Si queremos crear un iterador que se apropie de &lt;code&gt;v1&lt;/code&gt; y devuelva valores &lt;code&gt;into_iter&lt;/code&gt; , podemos llamar a into_iter en lugar de &lt;code&gt;iter&lt;/code&gt; . De manera similar, si queremos iterar sobre referencias mutables, podemos llamar a &lt;code&gt;iter_mut&lt;/code&gt; en lugar de &lt;code&gt;iter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9ce0f5a9623fa773f46d4f2d15f1add40c61350" translate="yes" xml:space="preserve">
          <source>Also note that unwinding into Rust code with a foreign exception (e.g. a an exception thrown from C++ code) is undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce251a63845ba69b5ad2fd9f201455284f4f01ee" translate="yes" xml:space="preserve">
          <source>Also note that we switched the type of the &lt;code&gt;t&lt;/code&gt; parameter from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;&amp;amp;T&lt;/code&gt;. Because the type might not be &lt;code&gt;Sized&lt;/code&gt;, we need to use it behind some kind of pointer. In this case, we&amp;rsquo;ve chosen a reference.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que cambiamos el tipo de la &lt;code&gt;t&lt;/code&gt; de par&amp;aacute;metros de &lt;code&gt;T&lt;/code&gt; a &lt;code&gt;&amp;amp;T&lt;/code&gt; . Debido a que es posible que el tipo no sea de &lt;code&gt;Sized&lt;/code&gt; , debemos usarlo detr&amp;aacute;s de alg&amp;uacute;n tipo de puntero. En este caso, hemos elegido una referencia.</target>
        </trans-unit>
        <trans-unit id="19148a1d1c1b97af52ac182d255aa33cc3c9304e" translate="yes" xml:space="preserve">
          <source>Also of note is the special syntax for &lt;code&gt;Fn&lt;/code&gt; traits (e.g. &lt;code&gt;Fn(usize, bool) -&amp;gt; usize&lt;/code&gt;). Those interested in the technical details of this can refer to &lt;a href=&quot;https://doc.rust-lang.org/nomicon/hrtb.html&quot;&gt;the relevant section in the &lt;em&gt;Rustonomicon&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n es de destacar la sintaxis especial para los rasgos &lt;code&gt;Fn&lt;/code&gt; (por ejemplo, &lt;code&gt;Fn(usize, bool) -&amp;gt; usize&lt;/code&gt; ). Aquellos interesados ​​en los detalles t&amp;eacute;cnicos de esto pueden consultar &lt;a href=&quot;https://doc.rust-lang.org/nomicon/hrtb.html&quot;&gt;la secci&amp;oacute;n correspondiente en el &lt;em&gt;Rustonomicon&lt;/em&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57bf42e074718d5ea685f5e68450e52bab2d09dc" translate="yes" xml:space="preserve">
          <source>Also verify that you didn't misspell the import name and that the import exists in the module from where you tried to import it. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba09134ec4e68053a65f33dbded8cc605eed58ef" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;ManuallyDrop&lt;/code&gt; prevents us from having to &quot;touch&quot; &lt;code&gt;v&lt;/code&gt; after transferring the ownership to &lt;code&gt;s&lt;/code&gt; &amp;mdash; the final step of interacting with &lt;code&gt;v&lt;/code&gt; to dispose of it without running its destructor is entirely avoided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4cb652a8b78bec628c1d26d0df6d4c9f7c28ed" translate="yes" xml:space="preserve">
          <source>Also, if the type of the expression to the left of the dot is a pointer, it is automatically dereferenced as many times as necessary to make the field access possible. In cases of ambiguity, we prefer fewer autoderefs to more.</source>
          <target state="translated">Además,si el tipo de la expresión a la izquierda del punto es un puntero,se desmarca automáticamente tantas veces como sea necesario para hacer posible el acceso al campo.En casos de ambigüedad,preferimos menos autoderechos a más.</target>
        </trans-unit>
        <trans-unit id="56542ee08fdcb89c559a45ec666da5ba100aa6fa" translate="yes" xml:space="preserve">
          <source>Also, it allocates temporary storage half the size of &lt;code&gt;self&lt;/code&gt;, but for short slices a non-allocating insertion sort is used instead.</source>
          <target state="translated">Adem&amp;aacute;s, asigna el almacenamiento temporal a la mitad del tama&amp;ntilde;o de &lt;code&gt;self&lt;/code&gt; , pero para los cortes cortos se usa en su lugar una ordenaci&amp;oacute;n de inserci&amp;oacute;n sin asignaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="71671f4bb484f8a1e973c0578cc13715a3aa2105" translate="yes" xml:space="preserve">
          <source>Also, note that because &lt;code&gt;back_of_house::Breakfast&lt;/code&gt; has a private field, the struct needs to provide a public associated function that constructs an instance of &lt;code&gt;Breakfast&lt;/code&gt; (we&amp;rsquo;ve named it &lt;code&gt;summer&lt;/code&gt; here). If &lt;code&gt;Breakfast&lt;/code&gt; didn&amp;rsquo;t have such a function, we couldn&amp;rsquo;t create an instance of &lt;code&gt;Breakfast&lt;/code&gt; in &lt;code&gt;eat_at_restaurant&lt;/code&gt; because we couldn&amp;rsquo;t set the value of the private &lt;code&gt;seasonal_fruit&lt;/code&gt; field in &lt;code&gt;eat_at_restaurant&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, tenga en cuenta que debido a que &lt;code&gt;back_of_house::Breakfast&lt;/code&gt; tiene un campo privado, la estructura debe proporcionar una funci&amp;oacute;n p&amp;uacute;blica asociada que construya una instancia de &lt;code&gt;Breakfast&lt;/code&gt; (aqu&amp;iacute; la hemos llamado &lt;code&gt;summer&lt;/code&gt; ). Si &lt;code&gt;Breakfast&lt;/code&gt; no tuviera dicha funci&amp;oacute;n, no podr&amp;iacute;amos crear una instancia de &lt;code&gt;Breakfast&lt;/code&gt; en &lt;code&gt;eat_at_restaurant&lt;/code&gt; porque no pudimos establecer el valor del campo privado &lt;code&gt;seasonal_fruit&lt;/code&gt; en &lt;code&gt;eat_at_restaurant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="477dbb63bb02aa6d30fe03da09f8465ff169a963" translate="yes" xml:space="preserve">
          <source>Also, note that the function body is wrapped in curly brackets, &lt;code&gt;{}&lt;/code&gt;. Rust requires these around all function bodies. It&amp;rsquo;s good style to place the opening curly bracket on the same line as the function declaration, adding one space in between.</source>
          <target state="translated">Adem&amp;aacute;s, tenga en cuenta que el cuerpo de la funci&amp;oacute;n est&amp;aacute; entre llaves, &lt;code&gt;{}&lt;/code&gt; . Rust los requiere en todos los cuerpos funcionales. Es un buen estilo colocar el corchete de apertura en la misma l&amp;iacute;nea que la declaraci&amp;oacute;n de funci&amp;oacute;n, agregando un espacio entre ellos.</target>
        </trans-unit>
        <trans-unit id="8c50010a52d6913ce8428bd39d3014c723f0db3d" translate="yes" xml:space="preserve">
          <source>Also, please be aware that this method is only for special circumstances and is usually not what you want. In case of doubt, use &lt;a href=&quot;#method.borrow_mut&quot;&gt;&lt;code&gt;borrow_mut&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Adem&amp;aacute;s, tenga en cuenta que este m&amp;eacute;todo es solo para circunstancias especiales y, por lo general, no es lo que desea. En caso de duda, utilice &lt;a href=&quot;#method.borrow_mut&quot;&gt; &lt;code&gt;borrow_mut&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2edbd5a08a0137666e61eca4932691fdf6681fd9" translate="yes" xml:space="preserve">
          <source>Also, since &lt;code&gt;bool&lt;/code&gt; implements the &lt;a href=&quot;marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt; trait, we don't have to worry about the move semantics (just like the integer and float primitives).</source>
          <target state="translated">Adem&amp;aacute;s, dado que &lt;code&gt;bool&lt;/code&gt; implementa el rasgo &lt;a href=&quot;marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; , no tenemos que preocuparnos por la sem&amp;aacute;ntica de movimiento (al igual que las primitivas integer y float).</target>
        </trans-unit>
        <trans-unit id="a9b0dcda2ee36870b49794f990ce3f2eb9803892" translate="yes" xml:space="preserve">
          <source>Alternatively there can be exactly two expressions inside the brackets, separated by a semi-colon. The expression after the &lt;code&gt;;&lt;/code&gt; must be a have type &lt;code&gt;usize&lt;/code&gt; and be a &lt;a href=&quot;../const_eval#constant-expressions&quot;&gt;constant expression&lt;/a&gt;, such as a &lt;a href=&quot;../tokens#literals&quot;&gt;literal&lt;/a&gt; or a &lt;a href=&quot;../items/constant-items&quot;&gt;constant item&lt;/a&gt;. &lt;code&gt;[a; b]&lt;/code&gt; creates an array containing &lt;code&gt;b&lt;/code&gt; copies of the value of &lt;code&gt;a&lt;/code&gt;. If the expression after the semi-colon has a value greater than 1 then this requires that the type of &lt;code&gt;a&lt;/code&gt; is &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Alternativamente, puede haber exactamente dos expresiones entre corchetes, separadas por un punto y coma. La expresi&amp;oacute;n despu&amp;eacute;s de &lt;code&gt;;&lt;/code&gt; debe ser de tipo &lt;code&gt;usize&lt;/code&gt; y ser una &lt;a href=&quot;../const_eval#constant-expressions&quot;&gt;expresi&amp;oacute;n constante&lt;/a&gt; , como un elemento &lt;a href=&quot;../tokens#literals&quot;&gt;literal&lt;/a&gt; o &lt;a href=&quot;../items/constant-items&quot;&gt;constante&lt;/a&gt; . &lt;code&gt;[a; b]&lt;/code&gt; crea una matriz que contiene &lt;code&gt;b&lt;/code&gt; copias del valor de &lt;code&gt;a&lt;/code&gt; . Si la expresi&amp;oacute;n despu&amp;eacute;s del punto y coma tiene un valor mayor que 1, esto requiere que el tipo de &lt;code&gt;a&lt;/code&gt; sea &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc6c67aa2ed479ece24dfe7dd6029027bbfca2b3" translate="yes" xml:space="preserve">
          <source>Alternatively there can be exactly two expressions inside the brackets, separated by a semi-colon. The expression after the &lt;code&gt;;&lt;/code&gt; must have type &lt;code&gt;usize&lt;/code&gt; and be a &lt;a href=&quot;../const_eval#constant-expressions&quot;&gt;constant expression&lt;/a&gt;, such as a &lt;a href=&quot;../tokens#literals&quot;&gt;literal&lt;/a&gt; or a &lt;a href=&quot;../items/constant-items&quot;&gt;constant item&lt;/a&gt;. &lt;code&gt;[a; b]&lt;/code&gt; creates an array containing &lt;code&gt;b&lt;/code&gt; copies of the value of &lt;code&gt;a&lt;/code&gt;. If the expression after the semi-colon has a value greater than 1 then this requires that the type of &lt;code&gt;a&lt;/code&gt; is &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2b342df42a5ce80106fad6cca3ec251f8df3e4" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt; has alignment 1 for all &lt;code&gt;T&lt;/code&gt;, so you can use it if you need to keep the field for some reason:</source>
          <target state="translated">Alternativamente, &lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt; tiene una alineaci&amp;oacute;n 1 para todos los &lt;code&gt;T&lt;/code&gt; , por lo que puede usarlo si necesita mantener el campo por alguna raz&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="38449305205a0baadf0d931713ad745060ac7795" translate="yes" xml:space="preserve">
          <source>Alternatively, a paren-less version of the attribute may be used to hint the compiler about inlining opportunity:</source>
          <target state="translated">Alternativamente,se puede utilizar una versión sin parangón del atributo para insinuar al compilador acerca de la oportunidad de inlining:</target>
        </trans-unit>
        <trans-unit id="d329c92752ab59bc5a187b9f641894d29c9fd208" translate="yes" xml:space="preserve">
          <source>Alternatively, define a trait locally and implement that instead:</source>
          <target state="translated">Alternativamente,definir un rasgo localmente e implementarlo en su lugar:</target>
        </trans-unit>
        <trans-unit id="30596c4d15742cc562b249b398f8c80c1a13a17f" translate="yes" xml:space="preserve">
          <source>Alternatively, if the type parameter was intentionally inserted, it must be used. A simple fix is shown below:</source>
          <target state="translated">Alternativamente,si el parámetro de tipo fue insertado intencionalmente,debe ser usado.A continuación se muestra una solución sencilla:</target>
        </trans-unit>
        <trans-unit id="7c8d494311629dbdec7e4dda72d552e11aace0ec" translate="yes" xml:space="preserve">
          <source>Alternatively, if we don't control the struct's definition, or mutable shared ownership is truly required, we can use &lt;code&gt;Rc&lt;/code&gt; and &lt;code&gt;RefCell&lt;/code&gt;:</source>
          <target state="translated">Alternativamente, si no controlamos la definici&amp;oacute;n de la estructura, o si realmente se requiere propiedad compartida mutable, podemos usar &lt;code&gt;Rc&lt;/code&gt; y &lt;code&gt;RefCell&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a59d2fc84eff79b213967bc64daab09652e8ccb" translate="yes" xml:space="preserve">
          <source>Alternatively, if your type implements &lt;code&gt;Clone&lt;/code&gt; and you need to own the value, consider borrowing and then cloning:</source>
          <target state="translated">Alternativamente, si su tipo implementa &lt;code&gt;Clone&lt;/code&gt; y necesita poseer el valor, considere pedir prestado y luego clonar:</target>
        </trans-unit>
        <trans-unit id="ed9c6950d0598f33adea6619e4f5e3230fd020da" translate="yes" xml:space="preserve">
          <source>Alternatively, move the other attributes to the contained type:</source>
          <target state="translated">Alternativamente,mueva los otros atributos al tipo contenido:</target>
        </trans-unit>
        <trans-unit id="b5cf6202d850db2d8b7a0068cf052fbe7d132528" translate="yes" xml:space="preserve">
          <source>Alternatively, split the pattern:</source>
          <target state="translated">Alternativamente,dividir el patrón:</target>
        </trans-unit>
        <trans-unit id="9b111c2948f7df0faec47eb57a97f3c7f99e8980" translate="yes" xml:space="preserve">
          <source>Alternatively, we can consider using the &lt;code&gt;Cell&lt;/code&gt; and &lt;code&gt;RefCell&lt;/code&gt; types to achieve interior mutability through a shared reference. Our example's &lt;code&gt;mutable&lt;/code&gt; function could be redefined as below:</source>
          <target state="translated">Alternativamente, podemos considerar el uso de los tipos &lt;code&gt;Cell&lt;/code&gt; y &lt;code&gt;RefCell&lt;/code&gt; para lograr mutabilidad interior a trav&amp;eacute;s de una referencia compartida. La funci&amp;oacute;n &lt;code&gt;mutable&lt;/code&gt; de nuestro ejemplo podr&amp;iacute;a redefinirse de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="754e721e3e9779de9d32c607142b98694b9bb365" translate="yes" xml:space="preserve">
          <source>Alternatively, we can move out of &lt;code&gt;fancy_num&lt;/code&gt; into a second &lt;code&gt;fancy_num&lt;/code&gt;:</source>
          <target state="translated">Alternativamente, podemos pasar de &lt;code&gt;fancy_num&lt;/code&gt; a un segundo &lt;code&gt;fancy_num&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="da767a10b83371c7ea419ae14469880fbc9efc2b" translate="yes" xml:space="preserve">
          <source>Alternatively, wrapping trait objects requires something like the following:</source>
          <target state="translated">Alternativamente,envolver los objetos de rasgo requiere algo como lo siguiente:</target>
        </trans-unit>
        <trans-unit id="3374923e7cf24250807b521def52524879dd69d5" translate="yes" xml:space="preserve">
          <source>Alternatively, wrapping trait objects requires something:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980127d7c92391c13b6615bd3076240a03531f1c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add the following line to your &lt;em&gt;~/.bash_profile&lt;/em&gt;:</source>
          <target state="translated">Alternativamente, puede agregar la siguiente l&amp;iacute;nea a su &lt;em&gt;~ / .bash_profile&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9de397b8421cd9e5ee08981bcb6e02a87c244a79" translate="yes" xml:space="preserve">
          <source>Alternatively, you can also use the struct pattern by using the correct field names and binding them to new identifiers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53009511a1501672faf73d204dc3eb7eb0e15f4c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create a newtype. A newtype is a wrapping tuple-struct. For example, &lt;code&gt;NewType&lt;/code&gt; is a newtype over &lt;code&gt;Foo&lt;/code&gt; in &lt;code&gt;struct NewType(Foo)&lt;/code&gt;. Example:</source>
          <target state="translated">Alternativamente, puede crear un nuevo tipo. Un nuevo tipo es una estructura de tupla envolvente. Por ejemplo, &lt;code&gt;NewType&lt;/code&gt; es un newtype sobre &lt;code&gt;Foo&lt;/code&gt; en la &lt;code&gt;struct NewType(Foo)&lt;/code&gt; . Ejemplo:</target>
        </trans-unit>
        <trans-unit id="f44934b9e6665fc0ff65386cfc3a7e7022fcb44e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can obtain a &lt;code&gt;&amp;amp;[&lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt; slice from a &lt;code&gt;CString&lt;/code&gt; with the &lt;a href=&quot;#method.as_bytes&quot;&gt;&lt;code&gt;as_bytes&lt;/code&gt;&lt;/a&gt; method. Slices produced in this way do &lt;em&gt;not&lt;/em&gt; contain the trailing nul terminator. This is useful when you will be calling an extern function that takes a &lt;code&gt;*const u8&lt;/code&gt; argument which is not necessarily nul-terminated, plus another argument with the length of the string &amp;mdash; like C's &lt;code&gt;strndup()&lt;/code&gt;. You can of course get the slice's length with its &lt;a href=&quot;../primitive.slice#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Alternativamente, puede obtener un &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;amp;[&lt;/code&gt; u8 &lt;code&gt;]&lt;/code&gt; de un &lt;code&gt;CString&lt;/code&gt; con el m&amp;eacute;todo &lt;a href=&quot;#method.as_bytes&quot;&gt; &lt;code&gt;as_bytes&lt;/code&gt; &lt;/a&gt; . Los cortes producidos de esta manera &lt;em&gt;no&lt;/em&gt; contienen el terminador nulo final. Esto es &amp;uacute;til cuando se va a llamar a una funci&amp;oacute;n que toma un extern &lt;code&gt;*const u8&lt;/code&gt; argumento de que no es necesariamente nulo-terminado, adem&amp;aacute;s de otra discusi&amp;oacute;n con la longitud de la cadena - como la de C &lt;code&gt;strndup()&lt;/code&gt; . Por supuesto, puede obtener la longitud del corte con su m&amp;eacute;todo &lt;a href=&quot;../primitive.slice#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14ed2547343b0251c75ea8d794d5d3f83b965f7e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can obtain a &lt;code&gt;&amp;amp;[&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u8.html&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt; slice from a &lt;code&gt;CString&lt;/code&gt; with the &lt;a href=&quot;struct.cstring#method.as_bytes&quot;&gt;&lt;code&gt;CString::as_bytes&lt;/code&gt;&lt;/a&gt; method. Slices produced in this way do &lt;em&gt;not&lt;/em&gt; contain the trailing nul terminator. This is useful when you will be calling an extern function that takes a &lt;code&gt;*const u8&lt;/code&gt; argument which is not necessarily nul-terminated, plus another argument with the length of the string &amp;mdash; like C's &lt;code&gt;strndup()&lt;/code&gt;. You can of course get the slice's length with its &lt;a href=&quot;../primitive.slice#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">Alternatives</target>
        </trans-unit>
        <trans-unit id="fb4db1dca17b4c832ac69c83b18f73ad9aa68bf9" translate="yes" xml:space="preserve">
          <source>Although Rust will let you bind &lt;code&gt;Sized&lt;/code&gt; to a trait, you won't be able to use it to form a trait object later:</source>
          <target state="translated">Aunque Rust te permitir&amp;aacute; vincular &lt;code&gt;Sized&lt;/code&gt; a un rasgo, no podr&amp;aacute;s usarlo para formar un objeto de rasgo m&amp;aacute;s adelante:</target>
        </trans-unit>
        <trans-unit id="18938413590ec4f421c089a648f9b8a820edd657" translate="yes" xml:space="preserve">
          <source>Although UDP is a connectionless protocol, this implementation provides an interface to set an address where data should be sent and received from. After setting a remote address with &lt;a href=&quot;#method.connect&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt;, data can be sent to and received from that address with &lt;a href=&quot;#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Aunque UDP es un protocolo sin conexi&amp;oacute;n, esta implementaci&amp;oacute;n proporciona una interfaz para establecer una direcci&amp;oacute;n desde donde se deben enviar y recibir los datos. Despu&amp;eacute;s de configurar una direcci&amp;oacute;n remota con &lt;a href=&quot;#method.connect&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; , los datos se pueden enviar y recibir desde esa direcci&amp;oacute;n con &lt;a href=&quot;#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="543c09d5bf5928a676597cb867e1ef6c78157058" translate="yes" xml:space="preserve">
          <source>Although UDP is a connectionless protocol, this implementation provides an interface to set an address where data should be sent and received from. After setting a remote address with &lt;a href=&quot;struct.udpsocket#method.connect&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt;, data can be sent to and received from that address with &lt;a href=&quot;struct.udpsocket#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.udpsocket#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6138cf1c64fdfba340547fa72a908d945fa65b3f" translate="yes" xml:space="preserve">
          <source>Although a &lt;code&gt;SystemTime&lt;/code&gt; cannot be directly inspected, the &lt;a href=&quot;constant.unix_epoch&quot;&gt;&lt;code&gt;UNIX_EPOCH&lt;/code&gt;&lt;/a&gt; constant is provided in this module as an anchor in time to learn information about a &lt;code&gt;SystemTime&lt;/code&gt;. By calculating the duration from this fixed point in time, a &lt;code&gt;SystemTime&lt;/code&gt; can be converted to a human-readable time, or perhaps some other string representation.</source>
          <target state="translated">Aunque un &lt;code&gt;SystemTime&lt;/code&gt; no se puede inspeccionar directamente, la constante &lt;a href=&quot;constant.unix_epoch&quot;&gt; &lt;code&gt;UNIX_EPOCH&lt;/code&gt; &lt;/a&gt; se proporciona en este m&amp;oacute;dulo como un ancla en el tiempo para obtener informaci&amp;oacute;n sobre un &lt;code&gt;SystemTime&lt;/code&gt; . Al calcular la duraci&amp;oacute;n a partir de este punto fijo en el tiempo, un &lt;code&gt;SystemTime&lt;/code&gt; se puede convertir en un tiempo legible por humanos, o quiz&amp;aacute;s en alguna otra representaci&amp;oacute;n de cadena.</target>
        </trans-unit>
        <trans-unit id="9bf2565395a043df30a2266cce3b26bdd4f8ff03" translate="yes" xml:space="preserve">
          <source>Although both Listing 7-11 and 7-13 accomplish the same task, Listing 7-11 is the idiomatic way to bring a function into scope with &lt;code&gt;use&lt;/code&gt;. Bringing the function&amp;rsquo;s parent module into scope with &lt;code&gt;use&lt;/code&gt; so we have to specify the parent module when calling the function makes it clear that the function isn&amp;rsquo;t locally defined while still minimizing repetition of the full path. The code in Listing 7-13 is unclear as to where &lt;code&gt;add_to_waitlist&lt;/code&gt; is defined.</source>
          <target state="translated">Aunque tanto el Listado 7-11 como el 7-13 realizan la misma tarea, el Listado 7-11 es la forma idiom&amp;aacute;tica de llevar una funci&amp;oacute;n al alcance con el &lt;code&gt;use&lt;/code&gt; . Llevar el m&amp;oacute;dulo principal de la funci&amp;oacute;n al alcance con el &lt;code&gt;use&lt;/code&gt; modo que tengamos que especificar el m&amp;oacute;dulo principal al llamar a la funci&amp;oacute;n, deja en claro que la funci&amp;oacute;n no est&amp;aacute; definida localmente y, al mismo tiempo, minimiza la repetici&amp;oacute;n de la ruta completa. El c&amp;oacute;digo del Listado 7-13 no est&amp;aacute; claro en cuanto a d&amp;oacute;nde se define &lt;code&gt;add_to_waitlist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af1566b2870173a676122bd4c9750a25b9287966" translate="yes" xml:space="preserve">
          <source>Although functional programming languages use cons lists frequently, the cons list isn&amp;rsquo;t a commonly used data structure in Rust. Most of the time when you have a list of items in Rust, &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; is a better choice to use. Other, more complex recursive data types &lt;em&gt;are&lt;/em&gt; useful in various situations, but by starting with the cons list, we can explore how boxes let us define a recursive data type without much distraction.</source>
          <target state="translated">Aunque los lenguajes de programaci&amp;oacute;n funcional usan listas de contras con frecuencia, la lista de contras no es una estructura de datos de uso com&amp;uacute;n en Rust. La mayor&amp;iacute;a de las veces, cuando tienes una lista de elementos en Rust, &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; es una mejor opci&amp;oacute;n para usar. Otros tipos de datos recursivos m&amp;aacute;s complejos &lt;em&gt;son&lt;/em&gt; &amp;uacute;tiles en diversas situaciones, pero al comenzar con la lista de contras, podemos explorar c&amp;oacute;mo los cuadros nos permiten definir un tipo de datos recursivos sin mucha distracci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d04af4e6b5ccd4c4682747098fc1db0b02dbd661" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;::&lt;/code&gt; token is allowed before the generics arguments, it is not required because there is no ambiguity like there is in &lt;em&gt;PathInExpression&lt;/em&gt;.</source>
          <target state="translated">Aunque el &lt;code&gt;::&lt;/code&gt; token est&amp;aacute; permitido antes de los argumentos gen&amp;eacute;ricos, no es necesario porque no hay ambig&amp;uuml;edad como en &lt;em&gt;PathInExpression&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7bf75499d3d552ee0a87d1fa70ed0a0e35bd067e" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;let&lt;/code&gt; is pointless here, it illustrates the meaning of &lt;code&gt;!&lt;/code&gt;. Since &lt;code&gt;x&lt;/code&gt; is never assigned a value (because &lt;code&gt;return&lt;/code&gt; returns from the entire function), &lt;code&gt;x&lt;/code&gt; can be given type &lt;code&gt;!&lt;/code&gt;. We could also replace &lt;code&gt;return 123&lt;/code&gt; with a &lt;code&gt;panic!&lt;/code&gt; or a never-ending &lt;code&gt;loop&lt;/code&gt; and this code would still be valid.</source>
          <target state="translated">Aunque el &lt;code&gt;let&lt;/code&gt; no tiene sentido aqu&amp;iacute;, ilustra el significado de &lt;code&gt;!&lt;/code&gt; . Dado que a &lt;code&gt;x&lt;/code&gt; nunca se le asigna un valor (porque el &lt;code&gt;return&lt;/code&gt; devuelve la funci&amp;oacute;n completa), &amp;iexcl; se le puede dar el tipo a &lt;code&gt;x&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; . &amp;iexcl;Tambi&amp;eacute;n podr&amp;iacute;amos reemplazar el &lt;code&gt;return 123&lt;/code&gt; con &lt;code&gt;panic!&lt;/code&gt; o un &lt;code&gt;loop&lt;/code&gt; fin y este c&amp;oacute;digo a&amp;uacute;n ser&amp;iacute;a v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="6e8ecdea30a2a1885eeb369d7e2426712a189f17" translate="yes" xml:space="preserve">
          <source>Although the SipHash algorithm is considered to be generally strong, it is not intended for cryptographic purposes. As such, all cryptographic uses of this implementation are &lt;em&gt;strongly discouraged&lt;/em&gt;.</source>
          <target state="translated">Aunque el algoritmo SipHash se considera generalmente s&amp;oacute;lido, no est&amp;aacute; dise&amp;ntilde;ado para fines criptogr&amp;aacute;ficos. Como tal, todos los usos criptogr&amp;aacute;ficos de esta implementaci&amp;oacute;n est&amp;aacute;n &lt;em&gt;fuertemente desaconsejados&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f07ca613351cf8dcbbc0ccd12d8ef0d4721b46b7" translate="yes" xml:space="preserve">
          <source>Although the number of keys and values is growable, each key can only have one value associated with it at a time. When you want to change the data in a hash map, you have to decide how to handle the case when a key already has a value assigned. You could replace the old value with the new value, completely disregarding the old value. You could keep the old value and ignore the new value, only adding the new value if the key &lt;em&gt;doesn&amp;rsquo;t&lt;/em&gt; already have a value. Or you could combine the old value and the new value. Let&amp;rsquo;s look at how to do each of these!</source>
          <target state="translated">Aunque la cantidad de claves y valores se puede aumentar, cada clave solo puede tener un valor asociado a la vez. Cuando desee cambiar los datos en un mapa hash, debe decidir c&amp;oacute;mo manejar el caso cuando una clave ya tiene un valor asignado. Puede reemplazar el valor anterior con el nuevo valor, sin tener en cuenta por completo el valor anterior. Puede mantener el valor anterior e ignorar el nuevo valor, solo agregando el nuevo valor si la clave &lt;em&gt;a&amp;uacute;n no&lt;/em&gt; tiene un valor. O puede combinar el valor anterior y el nuevo valor. &amp;iexcl;Veamos c&amp;oacute;mo hacer cada uno de estos!</target>
        </trans-unit>
        <trans-unit id="9186f195f5116d4c11a411254011d9afb8932670" translate="yes" xml:space="preserve">
          <source>Although this API is unstable, it is exposed via stable APIs on the &lt;a href=&quot;../../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d281e954555c8484110a6fecba9e6260dd297fe7" translate="yes" xml:space="preserve">
          <source>Although this code has the same behavior as Listing 9-5, it doesn&amp;rsquo;t contain any &lt;code&gt;match&lt;/code&gt; expressions and is cleaner to read. Come back to this example after you&amp;rsquo;ve read Chapter 13, and look up the &lt;code&gt;unwrap_or_else&lt;/code&gt; method in the standard library documentation. Many more of these methods can clean up huge nested &lt;code&gt;match&lt;/code&gt; expressions when you&amp;rsquo;re dealing with errors.</source>
          <target state="translated">Aunque este c&amp;oacute;digo tiene el mismo comportamiento que el Listado 9-5, no contiene ninguna expresi&amp;oacute;n &lt;code&gt;match&lt;/code&gt; y es m&amp;aacute;s f&amp;aacute;cil de leer. Regrese a este ejemplo despu&amp;eacute;s de haber le&amp;iacute;do el Cap&amp;iacute;tulo 13 y busque el m&amp;eacute;todo &lt;code&gt;unwrap_or_else&lt;/code&gt; en la documentaci&amp;oacute;n de la biblioteca est&amp;aacute;ndar. Muchos m&amp;aacute;s de estos m&amp;eacute;todos pueden limpiar enormes expresiones de &lt;code&gt;match&lt;/code&gt; anidadas cuando se trata de errores.</target>
        </trans-unit>
        <trans-unit id="db0fe462f2aa334b05d61f387c6225bd0bc5a2b6" translate="yes" xml:space="preserve">
          <source>Although this code works, duplicating code is tedious and error prone. We also have to update the code in multiple places when we want to change it.</source>
          <target state="translated">Aunque este código funciona,duplicar el código es tedioso y propenso a errores.También tenemos que actualizar el código en múltiples lugares cuando queremos cambiarlo.</target>
        </trans-unit>
        <trans-unit id="bf29b02a8b6e1719f55f981f1d8572dd8539b24f" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;i128::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e69f2a6bb8b46764f8352e784a84dd0afadb9d" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;i16::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2e6d7ac448ad026e808cfe3cdcdd25c692cbe9" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;i32::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad1997569aea8b22596a5906b14eaf599d36023" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;i64::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628ef478f32d02057364243517eb61194b2fa937" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;i8::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e48625fb423a49263c7f7ef3730f1cadc66a1e6" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;isize::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d04345ef80c5ecd03e51a7345f75034be31a60e" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;i128::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579ffa98c5f86f05f3788dc02042f9c6df508f9f" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;i16::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2d071c44ca8237c16fc626e1f05fe6f73717ea" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;i32::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c915462451daa99c7af198c86febdd1a22d7597" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;i64::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a387b30a94786833a9b0a30456b3027e1e9fbd" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;i8::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bf4822c610526f0cdddf4534d5b49b86f74f58" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause a compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;isize::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb42d33b9e27bf9b56623cf75d8b9afa2233265" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;u128::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7ac738426df2354794cb8df0537a30a74f6523" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;u16::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e75c91d3cf3b6547d6e61a6969491f50f5e1d3e" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;u32::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924beee0df8993e339f5ec14d80c789072c86cef" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;u64::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae4b957aed4f3be97f5bc6a6d75118ff06b3cad" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;u8::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ebde2d554567a7b7e90cd41cbc8b0acac4a1c2" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MAX&quot;&gt;&lt;code&gt;usize::MAX&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad32dc2d3be50a4f8c5fdf28af0d0fed17aa13dc" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;u128::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ce4a459f9d71da21dd5ea02e3b77c11475a92b" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;u16::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863866e2fa75d6344d5a22903dbb6eb4e36d7217" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;u32::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0557ca69022890678ed9741ea9a18e4b1b5c3ca" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;u64::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc8261189beb72f8e3ea2bfcc325eac36215e34" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;u8::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018037ac23dbb67a32f73854e405231a6ffce4dc" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;#associatedconstant.MIN&quot;&gt;&lt;code&gt;usize::MIN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094096c8e8871948579e001659d96f6f0cd91ded" translate="yes" xml:space="preserve">
          <source>Although using it won&amp;rsquo;t cause compilation warning, new code should use &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; instead and new &lt;code&gt;impl&lt;/code&gt;s can omit it.</source>
          <target state="translated">Aunque su uso no provocar&amp;aacute; una advertencia de compilaci&amp;oacute;n, el nuevo c&amp;oacute;digo deber&amp;iacute;a usar &lt;a href=&quot;../fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; en su&lt;/a&gt; lugar y las nuevas &lt;code&gt;impl&lt;/code&gt; s pueden omitirlo.</target>
        </trans-unit>
        <trans-unit id="929ca8c36977dca3461b8596285cdc531c6b81df" translate="yes" xml:space="preserve">
          <source>Although using these constants won&amp;rsquo;t cause compilation warnings, new code should use the associated constants directly on the primitive type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3c8369369ce1fe72325205b70eb3e2961e011c" translate="yes" xml:space="preserve">
          <source>Although you can&amp;rsquo;t remove previous versions of a crate, you can prevent any future projects from adding them as a new dependency. This is useful when a crate version is broken for one reason or another. In such situations, Cargo supports &lt;em&gt;yanking&lt;/em&gt; a crate version.</source>
          <target state="translated">Aunque no puede eliminar versiones anteriores de una caja, puede evitar que cualquier proyecto futuro las agregue como una nueva dependencia. Esto es &amp;uacute;til cuando una versi&amp;oacute;n de caja se rompe por una raz&amp;oacute;n u otra. En tales situaciones, Cargo admite &lt;em&gt;tirar&lt;/em&gt; una versi&amp;oacute;n de caja.</target>
        </trans-unit>
        <trans-unit id="a876dd4a0d144d06dda24f474bedf4412b3d4b86" translate="yes" xml:space="preserve">
          <source>Always empty bottom type for diverging functions</source>
          <target state="translated">Tipo de fondo siempre vacío para funciones divergentes</target>
        </trans-unit>
        <trans-unit id="30044213367fd946b86a46fbbf0f3c415f92d7bc" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;Err&lt;/code&gt; on arithmetic overflow.</source>
          <target state="translated">Siempre devuelve &lt;code&gt;Err&lt;/code&gt; en caso de desbordamiento aritm&amp;eacute;tico.</target>
        </trans-unit>
        <trans-unit id="81c2dadc15a7e41133f5895d6079a63549a2abb5" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;needle&lt;/code&gt; is an empty slice:</source>
          <target state="translated">Siempre devuelve &lt;code&gt;true&lt;/code&gt; si la &lt;code&gt;needle&lt;/code&gt; es un corte vac&amp;iacute;o:</target>
        </trans-unit>
        <trans-unit id="0d0ce480d587247832892434b17dbf1b556a5191" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;.add(count)&lt;/code&gt; instead when possible, because &lt;code&gt;add&lt;/code&gt; allows the compiler to optimize better.</source>
          <target state="translated">Siempre use &lt;code&gt;.add(count)&lt;/code&gt; lugar cuando sea posible, porque &lt;code&gt;add&lt;/code&gt; permite que el compilador optimice mejor.</target>
        </trans-unit>
        <trans-unit id="2dbc1421ee3e3a275bd2bb6e8f64943056afdc31" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;.offset(count)&lt;/code&gt; instead when possible, because &lt;code&gt;offset&lt;/code&gt; allows the compiler to optimize better. If you need to cross object boundaries, cast the pointer to an integer and do the arithmetic there.</source>
          <target state="translated">Siempre use &lt;code&gt;.offset(count)&lt;/code&gt; lugar cuando sea posible, porque el &lt;code&gt;offset&lt;/code&gt; permite que el compilador optimice mejor. Si necesita cruzar los l&amp;iacute;mites del objeto, convierta el puntero en un n&amp;uacute;mero entero y haga la aritm&amp;eacute;tica all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="701562825affe99f99fee809f333cf1e955284e4" translate="yes" xml:space="preserve">
          <source>Always use &lt;code&gt;.sub(count)&lt;/code&gt; instead when possible, because &lt;code&gt;sub&lt;/code&gt; allows the compiler to optimize better.</source>
          <target state="translated">Siempre use &lt;code&gt;.sub(count)&lt;/code&gt; lugar cuando sea posible, porque &lt;code&gt;sub&lt;/code&gt; permite que el compilador optimice mejor.</target>
        </trans-unit>
        <trans-unit id="9fda5d5730cef377a6f455b42dbcfb53fb2ca5ca" translate="yes" xml:space="preserve">
          <source>Among other causes, &lt;code&gt;ParseIntError&lt;/code&gt; can be thrown because of leading or trailing whitespace in the string e.g., when it is obtained from the standard input. Using the &lt;a href=&quot;../primitive.str#method.trim&quot;&gt;&lt;code&gt;str.trim()&lt;/code&gt;&lt;/a&gt; method ensures that no whitespace remains before parsing.</source>
          <target state="translated">Entre otras causas, &lt;code&gt;ParseIntError&lt;/code&gt; se puede lanzar debido a espacios en blanco iniciales o finales en la cadena, por ejemplo, cuando se obtiene de la entrada est&amp;aacute;ndar. El uso del m&amp;eacute;todo &lt;a href=&quot;../primitive.str#method.trim&quot;&gt; &lt;code&gt;str.trim()&lt;/code&gt; &lt;/a&gt; garantiza que no queden espacios en blanco antes del an&amp;aacute;lisis.</target>
        </trans-unit>
        <trans-unit id="f82aa4d4f03b38410c80f80025c8644ba744b247" translate="yes" xml:space="preserve">
          <source>Among other causes, this variant will be constructed when parsing a string that contains a letter.</source>
          <target state="translated">Entre otras causas,esta variante se construirá al analizar una cadena que contiene una letra.</target>
        </trans-unit>
        <trans-unit id="5a8bbd84610d1c777c353f8f16b14399af3b24f4" translate="yes" xml:space="preserve">
          <source>Among other causes, this variant will be constructed when parsing a string that contains a non-ASCII char.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d19d51f5faed38ee6324a9eb71c292315da9f7" translate="yes" xml:space="preserve">
          <source>Among other causes, this variant will be constructed when parsing an empty string.</source>
          <target state="translated">Entre otras causas,esta variante se construirá al analizar una cadena vacía.</target>
        </trans-unit>
        <trans-unit id="1692574d1eb8d1443991c925dc8e2acd8ed2cbd7" translate="yes" xml:space="preserve">
          <source>An &quot;or&quot; pattern was used where the variable bindings are not consistently bound across patterns.</source>
          <target state="translated">Se utilizó un patrón &quot;o&quot; en el que las uniones variables no se unen de forma consistente a través de los patrones.</target>
        </trans-unit>
        <trans-unit id="43d68d3a293f07f835d90c6279bf8faa22ceb0c8" translate="yes" xml:space="preserve">
          <source>An &amp;lsquo;abstract syntax tree&amp;rsquo;, or &amp;lsquo;AST&amp;rsquo;, is an intermediate representation of the structure of the program when the compiler is compiling it.</source>
          <target state="translated">Un '&amp;aacute;rbol de sintaxis abstracta', o 'AST', es una representaci&amp;oacute;n intermedia de la estructura del programa cuando el compilador lo est&amp;aacute; compilando.</target>
        </trans-unit>
        <trans-unit id="db2d4110f56313292c834e1861a95c89c601039f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../result/enum.result#Err.v&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned if the zero &lt;a href=&quot;../../../time/struct.duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; is passed to this method:</source>
          <target state="translated">Se devuelve un &lt;a href=&quot;../../../result/enum.result#Err.v&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; si se pasa la &lt;a href=&quot;../../../time/struct.duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; cero a este m&amp;eacute;todo:</target>
        </trans-unit>
        <trans-unit id="c2d78c88964f9736a45223d8f771f07ad6bd857e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned if the zero &lt;a href=&quot;../../../time/struct.duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; is passed to this method:</source>
          <target state="translated">Se devuelve un &lt;a href=&quot;../../../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; si se pasa la &lt;a href=&quot;../../../time/struct.duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; cero a este m&amp;eacute;todo:</target>
        </trans-unit>
        <trans-unit id="0a7f0956daf2ce936a64a4b1e04b5752d5af8c85" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../items/enumerations&quot;&gt;&lt;code&gt;enum&lt;/code&gt; item&lt;/a&gt; declares both the type and a number of &lt;em&gt;variants&lt;/em&gt;, each of which is independently named and has the syntax of a struct, tuple struct or unit-like struct.</source>
          <target state="translated">Un &lt;a href=&quot;../items/enumerations&quot;&gt;elemento de &lt;/a&gt; &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n declara tanto el tipo como una serie de &lt;em&gt;variantes&lt;/em&gt; , cada una de las cuales tiene un nombre independiente y tiene la sintaxis de una estructura, una estructura tupla o una estructura similar a una unidad.</target>
        </trans-unit>
        <trans-unit id="eccb90f6f9e2e1cba49165645ca18ce97f7c3bdc" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned if the zero &lt;a href=&quot;../time/struct.duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; is passed to this method:</source>
          <target state="translated">Se devuelve un &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; si se pasa la &lt;a href=&quot;../time/struct.duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; cero a este m&amp;eacute;todo:</target>
        </trans-unit>
        <trans-unit id="6c3aa2cd86bdd94aa99cad4f7b2a3826d70a323a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; will be returned if an error occurs while flushing the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a13d2042a47768129ce22a87e727826521c162e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;book/ch19-04-advanced-types#dynamically-sized-types-and-the-sized-trait&quot;&gt;unsized type&lt;/a&gt; is any type where the compiler does not know the length or alignment of at compile time. Any struct containing an unsized type is also unsized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6662b5b221b841136c3780ac238b4001369d2fd" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;items&quot;&gt;item&lt;/a&gt; that is not a member of an &lt;a href=&quot;items/implementations&quot;&gt;implementation&lt;/a&gt;, such as a &lt;em&gt;free function&lt;/em&gt; or a &lt;em&gt;free const&lt;/em&gt;. Contrast to an &lt;a href=&quot;#associated-item&quot;&gt;associated item&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee613500276e22e6ef67273653d1676ba809144c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;items&quot;&gt;item&lt;/a&gt; that is not a member of an &lt;a href=&quot;items/implementations&quot;&gt;implementation&lt;/a&gt;, such as a &lt;em&gt;free function&lt;/em&gt; or a &lt;em&gt;free const&lt;/em&gt;. Contrast to an &lt;a href=&quot;glossary#associated-item&quot;&gt;associated item&lt;/a&gt;.</source>
          <target state="translated">Un &lt;a href=&quot;items&quot;&gt;elemento&lt;/a&gt; que no es miembro de una &lt;a href=&quot;items/implementations&quot;&gt;implementaci&amp;oacute;n&lt;/a&gt; , como una &lt;em&gt;funci&amp;oacute;n gratuita&lt;/em&gt; o una &lt;em&gt;const libre&lt;/em&gt; . Contraste con un &lt;a href=&quot;glossary#associated-item&quot;&gt;elemento asociado&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcdff555d3629a9d75bb0e2e48e4c4243e57c8c2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;items/implementations&quot;&gt;implementation&lt;/a&gt; that applies to a nominal type, not to a trait-type pair. &lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;More&lt;/a&gt;.</source>
          <target state="translated">Una &lt;a href=&quot;items/implementations&quot;&gt;implementaci&amp;oacute;n&lt;/a&gt; que se aplica a un tipo nominal, no a un par rasgo-tipo. &lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;M&amp;aacute;s&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21e222f83548917bbd7accfb7becfb374f31ef4a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;patterns#identifier-patterns&quot;&gt;identifier pattern&lt;/a&gt; that binds by reference or mutable reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b301517253f81d6c23866ea49ad7c91ecb7227ac" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;std/keyword.async&quot;&gt;&lt;code&gt;async&lt;/code&gt;&lt;/a&gt; function used recursion without boxing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f864e2f214828c68972804234bf4534f4526fce2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;struct.atomicbool&quot;&gt;&lt;code&gt;AtomicBool&lt;/code&gt;&lt;/a&gt; initialized to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Un &lt;a href=&quot;struct.atomicbool&quot;&gt; &lt;code&gt;AtomicBool&lt;/code&gt; &lt;/a&gt; inicializado en &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d020d51655a42acae9fc5de2d1ee76334d13d2a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;#[inline(..)]&lt;/code&gt; attribute was incorrectly placed on something other than a function or method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36aa4d3dbc6bef64eda94b67a998204c02c9bc40" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Err&lt;/code&gt; will be returned if an error occurs while flushing the buffer.</source>
          <target state="translated">Se devolver&amp;aacute; un &lt;code&gt;Err&lt;/code&gt; si se produce un error al vaciar el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="93af004a9cc5d8031f1774a01ca4ad5a16a22376" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Instant&lt;/code&gt; is a wrapper around system-specific types and it may behave differently depending on the underlying operating system. For example, the following snippet is fine on Linux but panics on macOS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08eb1e2f2f021298ee3677019a6bda280ed6f694" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Ordering&lt;/code&gt; is the result of a comparison between two values.</source>
          <target state="translated">Un &lt;code&gt;Ordering&lt;/code&gt; es el resultado de una comparaci&amp;oacute;n entre dos valores.</target>
        </trans-unit>
        <trans-unit id="001eb435d69650fbb2db42365be5918489730c71" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RwLock&lt;/code&gt;, like &lt;a href=&quot;struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt;, will become poisoned on a panic. Note, however, that an &lt;code&gt;RwLock&lt;/code&gt; may only be poisoned if a panic occurs while it is locked exclusively (write mode). If a panic occurs in any reader, then the lock will not be poisoned.</source>
          <target state="translated">Un &lt;code&gt;RwLock&lt;/code&gt; , como &lt;a href=&quot;struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; , se envenena en p&amp;aacute;nico. Sin embargo, &lt;code&gt;RwLock&lt;/code&gt; que un RwLock solo puede envenenarse si se produce un p&amp;aacute;nico mientras est&amp;aacute; bloqueado exclusivamente (modo de escritura). Si se produce un p&amp;aacute;nico en cualquier lector, entonces la cerradura no se envenenar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="5247e633cc3100e9500337757cb3044553bdf55d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;enum&lt;/code&gt; with a discriminant must specify a &lt;code&gt;#[repr(inttype)]&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n con un discriminante debe especificar un &lt;code&gt;#[repr(inttype)]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8b1cbde5060ed31e602542132d6a281bf766f42" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;export_name&lt;/code&gt; attribute contains null characters (&lt;code&gt;\0&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ec5e4c1f77a0601ab37f0e8a98cf223a18e608" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if let&lt;/code&gt; expression is equivalent to a &lt;a href=&quot;match-expr&quot;&gt;&lt;code&gt;match&lt;/code&gt; expression&lt;/a&gt; as follows:</source>
          <target state="translated">Una expresi&amp;oacute;n &lt;code&gt;if let&lt;/code&gt; es equivalente a una &lt;a href=&quot;match-expr&quot;&gt;expresi&amp;oacute;n de &lt;/a&gt; &lt;code&gt;match&lt;/code&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="2ca624a02ac8519763d7ccacb2b0ad8dad16c279" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if let&lt;/code&gt; expression is semantically similar to an &lt;code&gt;if&lt;/code&gt; expression but in place of a condition expression it expects the keyword &lt;code&gt;let&lt;/code&gt; followed by a pattern, an &lt;code&gt;=&lt;/code&gt; and a &lt;a href=&quot;../glossary#scrutinee&quot;&gt;scrutinee&lt;/a&gt; expression. If the value of the scrutinee matches the pattern, the corresponding block will execute. Otherwise, flow proceeds to the following &lt;code&gt;else&lt;/code&gt; block if it exists. Like &lt;code&gt;if&lt;/code&gt; expressions, &lt;code&gt;if let&lt;/code&gt; expressions have a value determined by the block that is evaluated.</source>
          <target state="translated">Una expresi&amp;oacute;n &lt;code&gt;if let&lt;/code&gt; es sem&amp;aacute;nticamente similar a una expresi&amp;oacute;n &lt;code&gt;if&lt;/code&gt; pero, en lugar de una expresi&amp;oacute;n de condici&amp;oacute;n, espera la palabra clave &lt;code&gt;let&lt;/code&gt; seguida de un patr&amp;oacute;n, una &lt;code&gt;=&lt;/code&gt; y una expresi&amp;oacute;n &lt;a href=&quot;../glossary#scrutinee&quot;&gt;scrutinee&lt;/a&gt; . Si el valor del escrutinio coincide con el patr&amp;oacute;n, se ejecutar&amp;aacute; el bloque correspondiente. De lo contrario, el flujo procede al siguiente bloque &lt;code&gt;else&lt;/code&gt; si existe. Como las expresiones &lt;code&gt;if&lt;/code&gt; , las expresiones &lt;code&gt;if let&lt;/code&gt; tienen un valor determinado por el bloque que se eval&amp;uacute;a.</target>
        </trans-unit>
        <trans-unit id="eee510cf708477f86b4dc6237cd892de065d1aca" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; expression allows you to branch your code depending on conditions. You provide a condition and then state, &amp;ldquo;If this condition is met, run this block of code. If the condition is not met, do not run this block of code.&amp;rdquo;</source>
          <target state="translated">Una expresi&amp;oacute;n &lt;code&gt;if&lt;/code&gt; le permite ramificar su c&amp;oacute;digo seg&amp;uacute;n las condiciones. Proporciona una condici&amp;oacute;n y luego dice: &amp;ldquo;Si se cumple esta condici&amp;oacute;n, ejecute este bloque de c&amp;oacute;digo. Si no se cumple la condici&amp;oacute;n, no ejecute este bloque de c&amp;oacute;digo &quot;.</target>
        </trans-unit>
        <trans-unit id="23bc01de0e1b8681253f7b567d2d01b7869caf61" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; expression is a conditional branch in program control. The form of an &lt;code&gt;if&lt;/code&gt; expression is a condition expression, followed by a consequent block, any number of &lt;code&gt;else if&lt;/code&gt; conditions and blocks, and an optional trailing &lt;code&gt;else&lt;/code&gt; block. The condition expressions must have type &lt;code&gt;bool&lt;/code&gt;. If a condition expression evaluates to &lt;code&gt;true&lt;/code&gt;, the consequent block is executed and any subsequent &lt;code&gt;else if&lt;/code&gt; or &lt;code&gt;else&lt;/code&gt; block is skipped. If a condition expression evaluates to &lt;code&gt;false&lt;/code&gt;, the consequent block is skipped and any subsequent &lt;code&gt;else if&lt;/code&gt; condition is evaluated. If all &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else if&lt;/code&gt; conditions evaluate to &lt;code&gt;false&lt;/code&gt; then any &lt;code&gt;else&lt;/code&gt; block is executed. An if expression evaluates to the same value as the executed block, or &lt;code&gt;()&lt;/code&gt; if no block is evaluated. An &lt;code&gt;if&lt;/code&gt; expression must have the same type in all situations.</source>
          <target state="translated">Una expresi&amp;oacute;n &lt;code&gt;if&lt;/code&gt; es una rama condicional en el control del programa. La forma de una expresi&amp;oacute;n &lt;code&gt;if&lt;/code&gt; es una expresi&amp;oacute;n de condici&amp;oacute;n, seguida de un bloque consecuente, cualquier n&amp;uacute;mero de condiciones y bloques &lt;code&gt;else if&lt;/code&gt; , y un bloque &lt;code&gt;else&lt;/code&gt; final opcional . Las expresiones de condici&amp;oacute;n deben tener el tipo &lt;code&gt;bool&lt;/code&gt; . Si una expresi&amp;oacute;n de condici&amp;oacute;n se eval&amp;uacute;a como &lt;code&gt;true&lt;/code&gt; , el bloque consecuente se ejecuta y cualquier &lt;code&gt;else&lt;/code&gt; bloque posterior &lt;code&gt;else if&lt;/code&gt; o else se omite. Si una expresi&amp;oacute;n de condici&amp;oacute;n se eval&amp;uacute;a como &lt;code&gt;false&lt;/code&gt; , se omite el bloque consecuente y cualquier &lt;code&gt;else if&lt;/code&gt; posterior si se eval&amp;uacute;a la condici&amp;oacute;n. Si todo &lt;code&gt;if&lt;/code&gt; y &lt;code&gt;else if&lt;/code&gt; condiciones se eval&amp;uacute;an como &lt;code&gt;false&lt;/code&gt; , se ejecuta cualquier &lt;code&gt;else&lt;/code&gt; bloque. Una expresi&amp;oacute;n if se eval&amp;uacute;a con el mismo valor que el bloque ejecutado, o &lt;code&gt;()&lt;/code&gt; si no se eval&amp;uacute;a ning&amp;uacute;n bloque. Una expresi&amp;oacute;n &lt;code&gt;if&lt;/code&gt; debe tener el mismo tipo en todas las situaciones.</target>
        </trans-unit>
        <trans-unit id="f4cc3ee1616a9030743a2ead317eecbbfda11446" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; expression is missing an &lt;code&gt;else&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0d0db502cd02811b94f8110c6b6a57d9c4d08b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if&lt;/code&gt; expression without an &lt;code&gt;else&lt;/code&gt; block has the type &lt;code&gt;()&lt;/code&gt;, so this is a type error. To resolve it, add an &lt;code&gt;else&lt;/code&gt; block having the same type as the &lt;code&gt;if&lt;/code&gt; block.</source>
          <target state="translated">Una expresi&amp;oacute;n &lt;code&gt;if&lt;/code&gt; sin un bloque &lt;code&gt;else&lt;/code&gt; tiene el tipo &lt;code&gt;()&lt;/code&gt; , por lo que este es un error de tipo. Para resolverlo, agregue un bloque &lt;code&gt;else&lt;/code&gt; que tenga el mismo tipo que el bloque &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86c2bbd51b64dbea789df858c004c474818f64aa" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;impl Trait&lt;/code&gt; type expands to a recursive type.</source>
          <target state="translated">Un tipo de &lt;code&gt;impl Trait&lt;/code&gt; expande a un tipo recursivo.</target>
        </trans-unit>
        <trans-unit id="714f0cd77b96bfb041f113fa02745f0b3de0da54" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;impl Trait&lt;/code&gt; type must be expandable to a concrete type that contains no &lt;code&gt;impl Trait&lt;/code&gt; types. For example the following example tries to create an &lt;code&gt;impl Trait&lt;/code&gt; type &lt;code&gt;T&lt;/code&gt; that is equal to &lt;code&gt;[T, T]&lt;/code&gt;:</source>
          <target state="translated">Un tipo de &lt;code&gt;impl Trait&lt;/code&gt; debe poder expandirse a un tipo concreto que no contenga ning&amp;uacute;n tipo de &lt;code&gt;impl Trait&lt;/code&gt; . Por ejemplo, el siguiente ejemplo intenta crear un tipo de &lt;code&gt;impl Trait&lt;/code&gt; &lt;code&gt;T&lt;/code&gt; que es igual a &lt;code&gt;[T, T]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5f9bf65171254b99489d8d01742247cb5f9f2b96" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;impl Trait&lt;/code&gt; type must be expandable to a concrete type that contains no &lt;code&gt;impl Trait&lt;/code&gt; types. For example the previous example tries to create an &lt;code&gt;impl Trait&lt;/code&gt; type &lt;code&gt;T&lt;/code&gt; that is equal to &lt;code&gt;[T, T]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4fc89f6e27033dd75c8304209d0e35cd3688c5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;impl&lt;/code&gt; for a &lt;code&gt;#[marker]&lt;/code&gt; trait tried to override an associated item.</source>
          <target state="translated">Un &lt;code&gt;impl&lt;/code&gt; para un rasgo &lt;code&gt;#[marker]&lt;/code&gt; intent&amp;oacute; anular un elemento asociado.</target>
        </trans-unit>
        <trans-unit id="6d1073354ecc9c5e7785479d7d2a13da928ab63a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;x&lt;/code&gt; with value &lt;code&gt;0&lt;/code&gt; will return the bit width of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;x&lt;/code&gt; con valor &lt;code&gt;0&lt;/code&gt; devolver&amp;aacute; el n&amp;uacute;mero de bits de &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80f05b7296f4e1950e87afc07c23f9e722a69148" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;x&lt;/code&gt; with value &lt;code&gt;0&lt;/code&gt; will return the bit width of &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">Una &lt;code&gt;x&lt;/code&gt; con valor &lt;code&gt;0&lt;/code&gt; devolver&amp;aacute; el ancho de bits de &lt;code&gt;T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4ce321b8a11937b61aec381eab2e9acd0f2ae8bc" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;&lt;a href=&quot;../types/array&quot;&gt;array&lt;/a&gt; expression&lt;/em&gt; can be written by enclosing zero or more comma-separated expressions of uniform type in square brackets. This produces an array containing each of these values in the order they are written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534dc31a67cf35753f9f6ff5f73b65cd1ba58ab5" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;&lt;a href=&quot;../types/array&quot;&gt;array&lt;/a&gt; expression&lt;/em&gt; can be written by enclosing zero or more comma-separated expressions of uniform type in square brackets. This produces and array containing each of these values in the order they are written.</source>
          <target state="translated">Una &lt;em&gt;expresi&amp;oacute;n de &lt;/em&gt;&lt;em&gt;&lt;a href=&quot;../types/array&quot;&gt;matriz&lt;/a&gt;&lt;/em&gt; se puede escribir encerrando cero o m&amp;aacute;s expresiones separadas por comas de tipo uniforme entre corchetes. Esto produce una matriz que contiene cada uno de estos valores en el orden en que est&amp;aacute;n escritos.</target>
        </trans-unit>
        <trans-unit id="32616f8cb6d3bd819da208e9fcccc36635a05f1e" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;&lt;code&gt;extern crate&lt;/code&gt; declaration&lt;/em&gt; specifies a dependency on an external crate. The external crate is then bound into the declaring scope as the &lt;a href=&quot;../identifiers&quot;&gt;identifier&lt;/a&gt; provided in the &lt;code&gt;extern crate&lt;/code&gt; declaration. The &lt;code&gt;as&lt;/code&gt; clause can be used to bind the imported crate to a different name.</source>
          <target state="translated">Una &lt;em&gt;declaraci&amp;oacute;n de &lt;/em&gt;&lt;em&gt; &lt;code&gt;extern crate&lt;/code&gt; &lt;/em&gt; especifica una dependencia de una caja externa. Luego, la caja externa se vincula al &amp;aacute;mbito de declaraci&amp;oacute;n como el &lt;a href=&quot;../identifiers&quot;&gt;identificador&lt;/a&gt; proporcionado en la declaraci&amp;oacute;n de &lt;code&gt;extern crate&lt;/code&gt; . La cl&amp;aacute;usula &lt;code&gt;as&lt;/code&gt; se puede utilizar para vincular la caja importada a un nombre diferente.</target>
        </trans-unit>
        <trans-unit id="13494e1cedf4f5c5ecdcb7c07e83d0cd9827df20" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;absolute path&lt;/em&gt; starts from a crate root by using a crate name or a literal &lt;code&gt;crate&lt;/code&gt;.</source>
          <target state="translated">Una &lt;em&gt;ruta absoluta&lt;/em&gt; comienza desde la ra&amp;iacute;z de una caja usando un nombre de caja o una &lt;code&gt;crate&lt;/code&gt; literal .</target>
        </trans-unit>
        <trans-unit id="86fdc788150826ae707ba926f5a66e96063c57f9" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;assignment expression&lt;/em&gt; consists of a &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;place expression&lt;/a&gt; followed by an equals sign (&lt;code&gt;=&lt;/code&gt;) and a &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;value expression&lt;/a&gt;. Such an expression always has the &lt;a href=&quot;../types/tuple&quot;&gt;&lt;code&gt;unit&lt;/code&gt; type&lt;/a&gt;.</source>
          <target state="translated">Una &lt;em&gt;expresi&amp;oacute;n de asignaci&amp;oacute;n&lt;/em&gt; consta de una &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;expresi&amp;oacute;n de lugar&lt;/a&gt; seguida de un signo igual ( &lt;code&gt;=&lt;/code&gt; ) y una &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;expresi&amp;oacute;n de valor&lt;/a&gt; . Tal expresi&amp;oacute;n siempre tiene el &lt;a href=&quot;../types/tuple&quot;&gt;tipo de &lt;/a&gt; &lt;code&gt;unit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca56087cc708820efe9481bf7313fdab4a040e22" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;associated constant declaration&lt;/em&gt; declares a signature for associated constant definitions. It is written as &lt;code&gt;const&lt;/code&gt;, then an identifier, then &lt;code&gt;:&lt;/code&gt;, then a type, finished by a &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;em&gt;declaraci&amp;oacute;n de constante asociada&lt;/em&gt; declara una firma para las definiciones de constante asociadas. Se escribe &lt;code&gt;const&lt;/code&gt; , luego un identificador, luego &lt;code&gt;:&lt;/code&gt; , luego un tipo, terminado por a &lt;code&gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec29836d6b0ec5f807474f5934209d4fe8c7bb83" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;associated constant definition&lt;/em&gt; defines a constant associated with a type. It is written the same as a &lt;a href=&quot;constant-items&quot;&gt;constant item&lt;/a&gt;.</source>
          <target state="translated">Una &lt;em&gt;definici&amp;oacute;n de&lt;/em&gt; constante asociada define una constante asociada con un tipo. Se escribe igual que un &lt;a href=&quot;constant-items&quot;&gt;elemento constante&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9d2944c74176d8d6fa13f7d573ee85d9e742d32" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;associated function declaration&lt;/em&gt; declares a signature for an associated function definition. It is written as a function item, except the function body is replaced with a &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;em&gt;declaraci&amp;oacute;n de funci&amp;oacute;n asociada&lt;/em&gt; declara una firma para una definici&amp;oacute;n de funci&amp;oacute;n asociada. Est&amp;aacute; escrito como un elemento de funci&amp;oacute;n, excepto que el cuerpo de la funci&amp;oacute;n se reemplaza por a &lt;code&gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dce2c17d462060e477f166e6bcfabaf54ef17987" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;associated function definition&lt;/em&gt; defines a function associated with another type. It is written the same as a &lt;a href=&quot;../types/function-item&quot;&gt;function item&lt;/a&gt;.</source>
          <target state="translated">Una &lt;em&gt;definici&amp;oacute;n de&lt;/em&gt; funci&amp;oacute;n asociada define una funci&amp;oacute;n asociada con otro tipo. Se escribe igual que un &lt;a href=&quot;../types/function-item&quot;&gt;elemento de funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddd6d9f2bd71f652e6f6a519a466ea3ae43a3bff" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;associated type declaration&lt;/em&gt; declares a signature for associated type definitions. It is written as &lt;code&gt;type&lt;/code&gt;, then an &lt;a href=&quot;../identifiers&quot;&gt;identifier&lt;/a&gt;, and finally an optional list of trait bounds.</source>
          <target state="translated">Una &lt;em&gt;declaraci&amp;oacute;n de tipo asociada&lt;/em&gt; declara una firma para las definiciones de tipo asociadas. Se escribe como &lt;code&gt;type&lt;/code&gt; , luego un &lt;a href=&quot;../identifiers&quot;&gt;identificador&lt;/a&gt; y finalmente una lista opcional de l&amp;iacute;mites de rasgos.</target>
        </trans-unit>
        <trans-unit id="9bd2e844486eba2a5ee0638c6e470984a319e1bf" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;associated type definition&lt;/em&gt; defines a type alias on another type. It is written as &lt;code&gt;type&lt;/code&gt;, then an &lt;a href=&quot;../identifiers&quot;&gt;identifier&lt;/a&gt;, then an &lt;code&gt;=&lt;/code&gt;, and finally a &lt;a href=&quot;../types#type-expressions&quot;&gt;type&lt;/a&gt;.</source>
          <target state="translated">Una &lt;em&gt;definici&amp;oacute;n de tipo asociada&lt;/em&gt; define un alias de tipo en otro tipo. Se escribe como &lt;code&gt;type&lt;/code&gt; , luego un &lt;a href=&quot;../identifiers&quot;&gt;identificador&lt;/a&gt; , luego un &lt;code&gt;=&lt;/code&gt; y finalmente un &lt;a href=&quot;../types#type-expressions&quot;&gt;tipo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d29048068c2d4e137f184a7dcfb9e91e3a77ac3e" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;async block&lt;/em&gt; is a variant of a block expression which evaluates to a &lt;em&gt;future&lt;/em&gt;. The final expression of the block, if present, determines the result value of the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335c18325b2749c2db5132eb57bce1ffbfa512dc" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;attribute&lt;/em&gt; is a general, free-form metadatum that is interpreted according to name, convention, and language and compiler version. Attributes are modeled on Attributes in &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-335.htm&quot;&gt;ECMA-335&lt;/a&gt;, with the syntax coming from &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-334.htm&quot;&gt;ECMA-334&lt;/a&gt; (C#).</source>
          <target state="translated">Un &lt;em&gt;atributo&lt;/em&gt; es un metadato general de forma libre que se interpreta seg&amp;uacute;n el nombre, la convenci&amp;oacute;n y el idioma y la versi&amp;oacute;n del compilador. Los atributos se modelan sobre los atributos en &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-335.htm&quot;&gt;ECMA-335&lt;/a&gt; , con la sintaxis procedente de &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-334.htm&quot;&gt;ECMA-334&lt;/a&gt; (C #).</target>
        </trans-unit>
        <trans-unit id="7486c611897561f3f092f583b562152c09bc11bb" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;attribute&lt;/em&gt; is a general, free-form metadatum that is interpreted according to name, convention, language, and compiler version. Attributes are modeled on Attributes in &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-335.htm&quot;&gt;ECMA-335&lt;/a&gt;, with the syntax coming from &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-334.htm&quot;&gt;ECMA-334&lt;/a&gt; (C#).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f90d06fddc7c21886a0949a73d97b908062294c" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;enumerated type&lt;/em&gt; is a nominal, heterogeneous disjoint union type, denoted by the name of an &lt;a href=&quot;../items/enumerations&quot;&gt;&lt;code&gt;enum&lt;/code&gt; item&lt;/a&gt;. &lt;sup&gt;&lt;a href=&quot;#enumtype&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8d0e2999c5dfed50da51262f087365afa14a25" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;enumerated type&lt;/em&gt; is a nominal, heterogeneous disjoint union type, denoted by the name of an &lt;a href=&quot;../items/enumerations&quot;&gt;&lt;code&gt;enum&lt;/code&gt; item&lt;/a&gt;. &lt;sup&gt;&lt;a href=&quot;enum#enumtype&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">Un &lt;em&gt;tipo enumerado&lt;/em&gt; es un tipo de uni&amp;oacute;n disjunta heterog&amp;eacute;nea, nominal, denotado por el nombre de un &lt;a href=&quot;../items/enumerations&quot;&gt;elemento de &lt;/a&gt; &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n . &lt;sup&gt;&lt;a href=&quot;enum#enumtype&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="519b32460e4cf24cbf7584ec56a2b57870f1cdef" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;enumeration&lt;/em&gt;, also referred to as &lt;em&gt;enum&lt;/em&gt; is a simultaneous definition of a nominal &lt;a href=&quot;../types/enum&quot;&gt;enumerated type&lt;/a&gt; as well as a set of &lt;em&gt;constructors&lt;/em&gt;, that can be used to create or pattern-match values of the corresponding enumerated type.</source>
          <target state="translated">Una &lt;em&gt;enumeraci&amp;oacute;n&lt;/em&gt; , tambi&amp;eacute;n denominada &lt;em&gt;enum,&lt;/em&gt; es una definici&amp;oacute;n simult&amp;aacute;nea de un tipo &lt;a href=&quot;../types/enum&quot;&gt;enumerado&lt;/a&gt; nominal , as&amp;iacute; como un conjunto de &lt;em&gt;constructores&lt;/em&gt; , que se pueden utilizar para crear o valores de coincidencia de patr&amp;oacute;n del tipo enumerado correspondiente.</target>
        </trans-unit>
        <trans-unit id="670995bec677d5fc81f3189dbec41d6de7da346c" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;example term&lt;/em&gt; is an example of a term being defined.</source>
          <target state="translated">Un &lt;em&gt;t&amp;eacute;rmino de ejemplo&lt;/em&gt; es un ejemplo de un t&amp;eacute;rmino que se est&amp;aacute; definiendo.</target>
        </trans-unit>
        <trans-unit id="03f2bd4498afb61074c0d1568fbae87b71b0a6a3" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;expression statement&lt;/em&gt; is one that evaluates an &lt;a href=&quot;expressions&quot;&gt;expression&lt;/a&gt; and ignores its result. As a rule, an expression statement's purpose is to trigger the effects of evaluating its expression.</source>
          <target state="translated">Una &lt;em&gt;declaraci&amp;oacute;n de expresi&amp;oacute;n&lt;/em&gt; es aquella que eval&amp;uacute;a una &lt;a href=&quot;expressions&quot;&gt;expresi&amp;oacute;n&lt;/a&gt; e ignora su resultado. Como regla, el prop&amp;oacute;sito de una declaraci&amp;oacute;n de expresi&amp;oacute;n es desencadenar los efectos de evaluar su expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4c66d5e565f712d67ccd031da7fc185642328c03" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;extending pattern&lt;/em&gt; is either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111aa957a35f04452bf335357f4b5845abfce6b9" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;implementation&lt;/em&gt; is an item that associates items with an &lt;em&gt;implementing type&lt;/em&gt;. Implementations are defined with the keyword &lt;code&gt;impl&lt;/code&gt; and contain functions that belong to an instance of the type that is being implemented or to the type statically.</source>
          <target state="translated">Una &lt;em&gt;implementaci&amp;oacute;n&lt;/em&gt; es un elemento que asocia elementos con un &lt;em&gt;tipo de implementaci&amp;oacute;n&lt;/em&gt; . Las implementaciones se definen con la palabra clave &lt;code&gt;impl&lt;/code&gt; y contienen funciones que pertenecen a una instancia del tipo que se est&amp;aacute; implementando o al tipo est&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="26714676268e63e4c19e025e4e919231c94ab7b4" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;integer literal&lt;/em&gt; has one of four forms:</source>
          <target state="translated">Un &lt;em&gt;literal entero&lt;/em&gt; tiene una de cuatro formas:</target>
        </trans-unit>
        <trans-unit id="3b04f25de241c42aa4cc17d61d52253aec0db163" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;integer&lt;/em&gt; is a number without a fractional component. We used one integer type in Chapter 2, the &lt;code&gt;u32&lt;/code&gt; type. This type declaration indicates that the value it&amp;rsquo;s associated with should be an unsigned integer (signed integer types start with &lt;code&gt;i&lt;/code&gt;, instead of &lt;code&gt;u&lt;/code&gt;) that takes up 32 bits of space. Table 3-1 shows the built-in integer types in Rust. Each variant in the Signed and Unsigned columns (for example, &lt;code&gt;i16&lt;/code&gt;) can be used to declare the type of an integer value.</source>
          <target state="translated">Un &lt;em&gt;n&amp;uacute;mero entero&lt;/em&gt; es un n&amp;uacute;mero sin componente fraccionario. Usamos un tipo entero en el Cap&amp;iacute;tulo 2, el tipo &lt;code&gt;u32&lt;/code&gt; . Esta declaraci&amp;oacute;n de tipo indica que el valor con el que est&amp;aacute; asociado debe ser un entero sin signo (los tipos de entero con signo comienzan con &lt;code&gt;i&lt;/code&gt; , en lugar de &lt;code&gt;u&lt;/code&gt; ) que ocupa 32 bits de espacio. La tabla 3-1 muestra los tipos de enteros integrados en Rust. Cada variante de las columnas Firmado y No firmado (por ejemplo, &lt;code&gt;i16&lt;/code&gt; ) se puede utilizar para declarar el tipo de un valor entero.</target>
        </trans-unit>
        <trans-unit id="c86645edb5b5b0c86e3d214a4daf335142eb0487" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;item declaration statement&lt;/em&gt; has a syntactic form identical to an &lt;a href=&quot;items&quot;&gt;item declaration&lt;/a&gt; within a &lt;a href=&quot;items/modules&quot;&gt;module&lt;/a&gt;. Declaring an item within a statement block restricts its scope to the block containing the statement. The item is not given a &lt;a href=&quot;paths#canonical-paths&quot;&gt;canonical path&lt;/a&gt; nor are any sub-items it may declare. The exception to this is that associated items defined by &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt; are still accessible in outer scopes as long as the item and, if applicable, trait are accessible. It is otherwise identical in meaning to declaring the item inside a module.</source>
          <target state="translated">Una &lt;em&gt;declaraci&amp;oacute;n de art&amp;iacute;culo&lt;/em&gt; tiene una forma sint&amp;aacute;ctica id&amp;eacute;ntica a una &lt;a href=&quot;items&quot;&gt;declaraci&amp;oacute;n de art&amp;iacute;culo&lt;/a&gt; dentro de un &lt;a href=&quot;items/modules&quot;&gt;m&amp;oacute;dulo&lt;/a&gt; . Declarar un elemento dentro de un bloque de declaraci&amp;oacute;n restringe su alcance al bloque que contiene la declaraci&amp;oacute;n. El elemento no tiene una &lt;a href=&quot;paths#canonical-paths&quot;&gt;ruta can&amp;oacute;nica&lt;/a&gt; ni ning&amp;uacute;n subelemento que pueda declarar. La excepci&amp;oacute;n a esto es que los elementos asociados definidos por las &lt;a href=&quot;items/implementations&quot;&gt;implementaciones&lt;/a&gt; todav&amp;iacute;a son accesibles en &amp;aacute;mbitos externos siempre que el elemento y, si corresponde, el rasgo sean accesibles. Por lo dem&amp;aacute;s, tiene el mismo significado que declarar el elemento dentro de un m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="7cb6bea3f24f939f1296c8f5c8b195169146ee81" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;item&lt;/em&gt; is a component of a crate. Items are organized within a crate by a nested set of &lt;a href=&quot;items/modules&quot;&gt;modules&lt;/a&gt;. Every crate has a single &quot;outermost&quot; anonymous module; all further items within the crate have &lt;a href=&quot;paths&quot;&gt;paths&lt;/a&gt; within the module tree of the crate.</source>
          <target state="translated">Un &lt;em&gt;art&amp;iacute;culo&lt;/em&gt; es un componente de una caja. Los art&amp;iacute;culos se organizan dentro de una caja mediante un conjunto anidado de &lt;a href=&quot;items/modules&quot;&gt;m&amp;oacute;dulos&lt;/a&gt; . Cada caja tiene un &amp;uacute;nico m&amp;oacute;dulo an&amp;oacute;nimo &quot;m&amp;aacute;s externo&quot;; todos los dem&amp;aacute;s elementos dentro de la caja tienen &lt;a href=&quot;paths&quot;&gt;rutas&lt;/a&gt; dentro del &amp;aacute;rbol de m&amp;oacute;dulos de la caja.</target>
        </trans-unit>
        <trans-unit id="8df47e4537a8816a2744d87425d00def520f575a" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;octal literal&lt;/em&gt; starts with the character sequence &lt;code&gt;U+0030&lt;/code&gt;&lt;code&gt;U+006F&lt;/code&gt; (&lt;code&gt;0o&lt;/code&gt;) and continues as any mixture (with at least one digit) of octal digits and underscores.</source>
          <target state="translated">Un &lt;em&gt;literal octal&lt;/em&gt; comienza con la secuencia de caracteres &lt;code&gt;U+0030&lt;/code&gt; &lt;code&gt;U+006F&lt;/code&gt; ( &lt;code&gt;0o&lt;/code&gt; ) y contin&amp;uacute;a como cualquier combinaci&amp;oacute;n (con al menos un d&amp;iacute;gito) de d&amp;iacute;gitos octales y guiones bajos.</target>
        </trans-unit>
        <trans-unit id="a141d1e8af86d54f8339e504d3e1c56051728a15" translate="yes" xml:space="preserve">
          <source>An Example Program Using Structs</source>
          <target state="translated">Un programa de ejemplo usando estructuras</target>
        </trans-unit>
        <trans-unit id="5aefcb56dc6b861369f867948d8b3b7d49377bfe" translate="yes" xml:space="preserve">
          <source>An I/O Project: Building a Command Line Program</source>
          <target state="translated">Un proyecto de I/O:Construir un programa de línea de mando</target>
        </trans-unit>
        <trans-unit id="0827868381963388a6304543297f7f95e42e9164" translate="yes" xml:space="preserve">
          <source>An IP address, either IPv4 or IPv6.</source>
          <target state="translated">Una dirección IP,ya sea IPv4 o IPv6.</target>
        </trans-unit>
        <trans-unit id="ac4cbc9b22ca704cfdd900cac5407adcf23c5edb" translate="yes" xml:space="preserve">
          <source>An IPv4 address representing an unspecified address: 0.0.0.0</source>
          <target state="translated">Una dirección IPv4 que representa una dirección no especificada:0.0.0.0</target>
        </trans-unit>
        <trans-unit id="d2e22ab3badaaaa01e7375dd220a2065ca03f949" translate="yes" xml:space="preserve">
          <source>An IPv4 address representing the broadcast address: 255.255.255.255</source>
          <target state="translated">Una dirección IPv4 que representa la dirección de emisión:255.255.255.255</target>
        </trans-unit>
        <trans-unit id="5f0e70a5e365495e2ae4d74f302988b1f303a907" translate="yes" xml:space="preserve">
          <source>An IPv4 address with the address pointing to localhost: 127.0.0.1.</source>
          <target state="translated">Una dirección IPv4 con la dirección que apunta al localhost:127.0.0.1.</target>
        </trans-unit>
        <trans-unit id="c9d68f8900e66f00bfbfd5b6cf93e7f299173890" translate="yes" xml:space="preserve">
          <source>An IPv4 address.</source>
          <target state="translated">Una dirección IPv4.</target>
        </trans-unit>
        <trans-unit id="5bb8e3b87105ecbe9c8ed2a2e3a9821088df2706" translate="yes" xml:space="preserve">
          <source>An IPv4 socket address.</source>
          <target state="translated">Una dirección de socorro IPv4.</target>
        </trans-unit>
        <trans-unit id="a30848e04ae8ee9ab468ffa0929f622538606ceb" translate="yes" xml:space="preserve">
          <source>An IPv6 address representing localhost: &lt;code&gt;::1&lt;/code&gt;.</source>
          <target state="translated">Una direcci&amp;oacute;n IPv6 que representa localhost: &lt;code&gt;::1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e145c57ced7f65d6f3f83ddc10fbd40d1da4596" translate="yes" xml:space="preserve">
          <source>An IPv6 address representing the unspecified address: &lt;code&gt;::&lt;/code&gt;</source>
          <target state="translated">Una direcci&amp;oacute;n IPv6 que representa la direcci&amp;oacute;n no especificada: &lt;code&gt;::&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee7dda9f630704f82008f3562e22d445246045b1" translate="yes" xml:space="preserve">
          <source>An IPv6 address.</source>
          <target state="translated">Una dirección IPv6.</target>
        </trans-unit>
        <trans-unit id="51d9d6e575aa92d12e0b2c0fb0d5fdcf4923ff85" translate="yes" xml:space="preserve">
          <source>An IPv6 socket address.</source>
          <target state="translated">Una dirección de socorro IPv6.</target>
        </trans-unit>
        <trans-unit id="bb7fb098f948c20be5364a0797d6630c8f71fe36" translate="yes" xml:space="preserve">
          <source>An RAII implementation of a &quot;scoped lock&quot; of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.</source>
          <target state="translated">Una implementación de la RAII de una &quot;cerradura de alcance&quot; de un mutex.Cuando esta estructura se cae (se sale del alcance),la cerradura se desbloquea.</target>
        </trans-unit>
        <trans-unit id="445fdaee68caea7b120e9af421a1f499e812ae92" translate="yes" xml:space="preserve">
          <source>An additional advantage of using Cargo is that the commands are the same no matter which operating system you&amp;rsquo;re working on. So, at this point, we&amp;rsquo;ll no longer provide specific instructions for Linux and macOS versus Windows.</source>
          <target state="translated">Una ventaja adicional de usar Cargo es que los comandos son los mismos sin importar en qu&amp;eacute; sistema operativo est&amp;eacute; trabajando. Entonces, en este punto, ya no brindaremos instrucciones espec&amp;iacute;ficas para Linux y macOS frente a Windows.</target>
        </trans-unit>
        <trans-unit id="71d51fdd16cd827000271f90af417efeb9cea05f" translate="yes" xml:space="preserve">
          <source>An address associated with a Unix socket.</source>
          <target state="translated">Una dirección asociada a un enchufe Unix.</target>
        </trans-unit>
        <trans-unit id="13ebc470b9c08ca083e04f253e5b3a814fa55f28" translate="yes" xml:space="preserve">
          <source>An anchor in time which can be used to create new &lt;code&gt;SystemTime&lt;/code&gt; instances or learn about where in time a &lt;code&gt;SystemTime&lt;/code&gt; lies.</source>
          <target state="translated">Un ancla en el tiempo que se puede usar para crear nuevas instancias de &lt;code&gt;SystemTime&lt;/code&gt; o aprender sobre d&amp;oacute;nde se encuentra un &lt;code&gt;SystemTime&lt;/code&gt; en el tiempo .</target>
        </trans-unit>
        <trans-unit id="0b2bb6c8ec3576952f4aecc99eb5bbbbf4cbd659" translate="yes" xml:space="preserve">
          <source>An array is a fixed-size sequence of &lt;code&gt;N&lt;/code&gt; elements of type &lt;code&gt;T&lt;/code&gt;. The array type is written as &lt;code&gt;[T; N]&lt;/code&gt;. The size is a &lt;a href=&quot;../const_eval#constant-expressions&quot;&gt;constant expression&lt;/a&gt; that evaluates to a &lt;a href=&quot;numeric#machine-dependent-integer-types&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f427918d6366c3545d7bcd1528880b6655f86b" translate="yes" xml:space="preserve">
          <source>An array is a fixed-size sequence of &lt;code&gt;N&lt;/code&gt; elements of type &lt;code&gt;T&lt;/code&gt;. The array type is written as &lt;code&gt;[T; N]&lt;/code&gt;. The size is an expression that evaluates to a &lt;a href=&quot;numeric#machine-dependent-integer-types&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Una matriz es una secuencia de tama&amp;ntilde;o fijo de &lt;code&gt;N&lt;/code&gt; elementos de tipo &lt;code&gt;T&lt;/code&gt; . El tipo de matriz se escribe como &lt;code&gt;[T; N]&lt;/code&gt; . El tama&amp;ntilde;o es una expresi&amp;oacute;n que se eval&amp;uacute;a como &lt;a href=&quot;numeric#machine-dependent-integer-types&quot;&gt; &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d98f60a77f0bbfa809e448ded22428fbfae4e33e" translate="yes" xml:space="preserve">
          <source>An array is a single chunk of memory allocated on the stack. You can access elements of an array using indexing, like this:</source>
          <target state="translated">Una matriz es un único trozo de memoria asignado en la pila.Puedes acceder a los elementos de una matriz usando la indexación,así:</target>
        </trans-unit>
        <trans-unit id="a7bac5ec811f30188ce6fd849b796ac2d30ffddc" translate="yes" xml:space="preserve">
          <source>An array itself is not iterable:</source>
          <target state="translated">Un arreglo en sí mismo no es iterable:</target>
        </trans-unit>
        <trans-unit id="f510f3fd4950ebae5518ce0880fd83877599bc5e" translate="yes" xml:space="preserve">
          <source>An array or slice pattern required more elements than were present in the matched array.</source>
          <target state="translated">Un arreglo o patrón de rebanadas requería más elementos de los que estaban presentes en el arreglo emparejado.</target>
        </trans-unit>
        <trans-unit id="005f7187c479dcce2321a163ab284d4855025280" translate="yes" xml:space="preserve">
          <source>An array or slice pattern was matched against some other type.</source>
          <target state="translated">Una matriz o patrón de rebanadas se comparó con algún otro tipo.</target>
        </trans-unit>
        <trans-unit id="910b39cfa9beb5c32b52af8b271e7bb38ba1d4da" translate="yes" xml:space="preserve">
          <source>An array without a fixed length was pattern-matched.</source>
          <target state="translated">Un conjunto sin una longitud fija se ajustaba a un patrón.</target>
        </trans-unit>
        <trans-unit id="9f6ee782e8b3dacab5901a68a88743cdf8f6df8d" translate="yes" xml:space="preserve">
          <source>An array, sometimes also called a fixed-size array or an inline array, is a value describing a collection of elements, each selected by an index that can be computed at run time by the program. It occupies a contiguous region of memory.</source>
          <target state="translated">Una matriz,a veces también llamada matriz de tamaño fijo o matriz en línea,es un valor que describe un conjunto de elementos,cada uno de ellos seleccionado por un índice que puede ser calculado en tiempo de ejecución por el programa.Ocupa una región contigua de la memoria.</target>
        </trans-unit>
        <trans-unit id="f5926a4f64969381cfadf3083ad59aa47fe8cee7" translate="yes" xml:space="preserve">
          <source>An assignment operator was used on a non-place expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0369538fab9323882e54c1420899b941701d5cc4" translate="yes" xml:space="preserve">
          <source>An associated const has been referenced in a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653f3f2885d5dd5f232a75cd2c5ed4a07f552285" translate="yes" xml:space="preserve">
          <source>An associated const was implemented when another trait item was expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704af6b84f8ec0b7b57fdf7ea0ff93aa51a032a6" translate="yes" xml:space="preserve">
          <source>An associated const was implemented when another trait item was expected. Erroneous code example:</source>
          <target state="translated">Se implementó una const asociada cuando se esperaba otro rasgo.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="597e595feda6e78ec52004cc35588610f09289b1" translate="yes" xml:space="preserve">
          <source>An associated constant whose name does not match any of the associated constants in the trait was used when implementing the trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac10e51ff90ef78acbd226706348e7754e0cff2c" translate="yes" xml:space="preserve">
          <source>An associated function for a trait was defined to be a method (i.e., to take a &lt;code&gt;self&lt;/code&gt; parameter), but an implementation of the trait declared the same function to be static.</source>
          <target state="translated">Una funci&amp;oacute;n asociada para un rasgo se defini&amp;oacute; como un m&amp;eacute;todo (es decir, para tomar un par&amp;aacute;metro &lt;code&gt;self&lt;/code&gt; ), pero una implementaci&amp;oacute;n del rasgo declar&amp;oacute; que la misma funci&amp;oacute;n era est&amp;aacute;tica.</target>
        </trans-unit>
        <trans-unit id="825b9fd38095eee93e418cc09ae8f9ace5e1f868" translate="yes" xml:space="preserve">
          <source>An associated function for a trait was defined to be static, but an implementation of the trait declared the same function to be a method (i.e., to take a &lt;code&gt;self&lt;/code&gt; parameter).</source>
          <target state="translated">Una funci&amp;oacute;n asociada para un rasgo se defini&amp;oacute; como est&amp;aacute;tica, pero una implementaci&amp;oacute;n del rasgo declar&amp;oacute; que la misma funci&amp;oacute;n era un m&amp;eacute;todo (es decir, para tomar un par&amp;aacute;metro &lt;code&gt;self&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a1184c06942df2b68acc5d480218b30a08f0c9d0" translate="yes" xml:space="preserve">
          <source>An associated item is an item that is associated with another item. Associated items are defined in &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt; and declared in &lt;a href=&quot;items/traits&quot;&gt;traits&lt;/a&gt;. Only functions, constants, and type aliases can be associated. Contrast to a &lt;a href=&quot;#free-item&quot;&gt;free item&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1035c9277b00c3deebef8eabfe1b836a5766b141" translate="yes" xml:space="preserve">
          <source>An associated item is an item that is associated with another item. Associated items are defined in &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt; and declared in &lt;a href=&quot;items/traits&quot;&gt;traits&lt;/a&gt;. Only functions, constants, and type aliases can be associated. Contrast to a &lt;a href=&quot;glossary#free-item&quot;&gt;free item&lt;/a&gt;.</source>
          <target state="translated">Un art&amp;iacute;culo asociado es un art&amp;iacute;culo que est&amp;aacute; asociado con otro art&amp;iacute;culo. Los elementos asociados se definen en &lt;a href=&quot;items/implementations&quot;&gt;implementaciones&lt;/a&gt; y se declaran en &lt;a href=&quot;items/traits&quot;&gt;rasgos&lt;/a&gt; . Solo se pueden asociar funciones, constantes y alias de tipo. Contraste con un &lt;a href=&quot;glossary#free-item&quot;&gt;art&amp;iacute;culo gratuito&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ced942872757a981c250f3840769940a97d69e7c" translate="yes" xml:space="preserve">
          <source>An associated item wasn't found in the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d46370a3ccac2f9ec0235a03f2055e6765250fa" translate="yes" xml:space="preserve">
          <source>An associated type binding was done outside of the type parameter declaration and &lt;code&gt;where&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9116723797d95c7e68863b40ba3626f52a6ce11f" translate="yes" xml:space="preserve">
          <source>An associated type binding was done outside of the type parameter declaration and &lt;code&gt;where&lt;/code&gt; clause. Erroneous code example:</source>
          <target state="translated">Se realiz&amp;oacute; un enlace de tipo asociado fuera de la declaraci&amp;oacute;n del par&amp;aacute;metro de tipo y la cl&amp;aacute;usula &lt;code&gt;where&lt;/code&gt; . Ejemplo de c&amp;oacute;digo err&amp;oacute;neo:</target>
        </trans-unit>
        <trans-unit id="37ff7ecac0e044a097c6ebca208c9701778e86ec" translate="yes" xml:space="preserve">
          <source>An associated type value was specified more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247841afd59307a4cdd6a2a4e665f214e72f4dc2" translate="yes" xml:space="preserve">
          <source>An associated type was implemented when another trait item was expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d78cadc098f0f8d19a172d639f50a5e45d007b" translate="yes" xml:space="preserve">
          <source>An associated type was implemented when another trait item was expected. Erroneous code example:</source>
          <target state="translated">Se implementó un tipo asociado cuando se esperaba otro rasgo.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="907ca33cb695a944297042466b1a4f3511ae0a97" translate="yes" xml:space="preserve">
          <source>An associated type wasn't specified for a trait object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e68f500f344ba1542de979c138dbc82f1b75b2" translate="yes" xml:space="preserve">
          <source>An associated type whose name does not match any of the associated types in the trait was used when implementing the trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2d4322730aa4a674f88f33ea28a7a44379f38a" translate="yes" xml:space="preserve">
          <source>An asterisk &lt;code&gt;.*&lt;/code&gt;:</source>
          <target state="translated">Un asterisco &lt;code&gt;.*&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b4e5a645b1ce82ee08ed7b0b7215a18a0a85f802" translate="yes" xml:space="preserve">
          <source>An async function is roughly equivalent to a function that returns &lt;a href=&quot;../types/impl-trait&quot;&gt;&lt;code&gt;impl Future&lt;/code&gt;&lt;/a&gt; and with an &lt;a href=&quot;../expressions/block-expr#async-blocks&quot;&gt;&lt;code&gt;async move&lt;/code&gt; block&lt;/a&gt; as its body:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbf33b833d8349f917a7e3318533a910b1e01c0" translate="yes" xml:space="preserve">
          <source>An asynchronous, infinitely buffered channel. The &lt;a href=&quot;fn.channel&quot;&gt;&lt;code&gt;channel&lt;/code&gt;&lt;/a&gt; function will return a &lt;code&gt;(Sender, Receiver)&lt;/code&gt; tuple where all sends will be &lt;strong&gt;asynchronous&lt;/strong&gt; (they never block). The channel conceptually has an infinite buffer.</source>
          <target state="translated">Un canal asincr&amp;oacute;nico con b&amp;uacute;fer infinito. La funci&amp;oacute;n de &lt;a href=&quot;fn.channel&quot;&gt; &lt;code&gt;channel&lt;/code&gt; &lt;/a&gt; devolver&amp;aacute; una tupla &lt;code&gt;(Sender, Receiver)&lt;/code&gt; donde todos los env&amp;iacute;os ser&amp;aacute;n &lt;strong&gt;asincr&amp;oacute;nicos&lt;/strong&gt; (nunca se bloquean). El canal tiene conceptualmente un b&amp;uacute;fer infinito.</target>
        </trans-unit>
        <trans-unit id="f387b126eb53d62fa04e8482ab5a1aac01b56bf6" translate="yes" xml:space="preserve">
          <source>An atomic fence.</source>
          <target state="translated">Una valla atómica.</target>
        </trans-unit>
        <trans-unit id="a37a15efc349a5896258ef2d831759eaab050729" translate="yes" xml:space="preserve">
          <source>An atomic integer initialized to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Un entero at&amp;oacute;mico inicializado a &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae4be8bb4563b5c446bf4ec14a3a559fbf234d0d" translate="yes" xml:space="preserve">
          <source>An attempt to implement the &lt;code&gt;Copy&lt;/code&gt; trait for a struct failed because one of the fields does not implement &lt;code&gt;Copy&lt;/code&gt;. To fix this, you must implement &lt;code&gt;Copy&lt;/code&gt; for the mentioned field. Note that this may not be possible, as in the example of</source>
          <target state="translated">Un intento de implementar el rasgo &lt;code&gt;Copy&lt;/code&gt; para una estructura fall&amp;oacute; porque uno de los campos no implementa &lt;code&gt;Copy&lt;/code&gt; . Para solucionar esto, debe implementar &lt;code&gt;Copy&lt;/code&gt; para el campo mencionado. Tenga en cuenta que esto puede no ser posible, como en el ejemplo de</target>
        </trans-unit>
        <trans-unit id="2c5fbb1197d035a7f4fa92b6ea1f62d369096169" translate="yes" xml:space="preserve">
          <source>An attempt to implement the &lt;code&gt;Copy&lt;/code&gt; trait for an enum failed because one of the variants does not implement &lt;code&gt;Copy&lt;/code&gt;. To fix this, you must implement &lt;code&gt;Copy&lt;/code&gt; for the mentioned variant. Note that this may not be possible, as in the example of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71c2935e96e5f7fe3e3f35ad00fd7b30920019f" translate="yes" xml:space="preserve">
          <source>An attempt to index into a type which doesn't implement the &lt;code&gt;std::ops::Index&lt;/code&gt; trait was performed.</source>
          <target state="translated">Se realiz&amp;oacute; un intento de indexar en un tipo que no implementa el rasgo &lt;code&gt;std::ops::Index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51757a13968190cd3655b5b9aeefd9a5c033b3d1" translate="yes" xml:space="preserve">
          <source>An attempt to use index on a type which doesn't implement the &lt;code&gt;std::ops::Index&lt;/code&gt; trait was performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b97d7ea40069db8f20f10d06addb087be36d0ac" translate="yes" xml:space="preserve">
          <source>An attempt was made to access an associated constant through either a generic type parameter or &lt;code&gt;Self&lt;/code&gt;. This is not supported yet. An example causing this error is shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b710e02452ddf90fa51364201e945e5cc61639f6" translate="yes" xml:space="preserve">
          <source>An attempt was made to assign to a borrowed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdf1eb8c23bfc6042e5dd9af78ec4f5f794fefe" translate="yes" xml:space="preserve">
          <source>An attempt was made to constrain an associated type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8febb37ae18b2d657b2615e5b330d2a55118441d" translate="yes" xml:space="preserve">
          <source>An attempt was made to implement &lt;code&gt;Drop&lt;/code&gt; on a concrete specialization of a generic type. An example is shown below:</source>
          <target state="translated">Se intent&amp;oacute; implementar &lt;code&gt;Drop&lt;/code&gt; en una especializaci&amp;oacute;n concreta de tipo gen&amp;eacute;rico. A continuaci&amp;oacute;n se muestra un ejemplo:</target>
        </trans-unit>
        <trans-unit id="26819bff2d7a8100bea5239c764f0f0d26036cba" translate="yes" xml:space="preserve">
          <source>An attempt was made to implement &lt;code&gt;Drop&lt;/code&gt; on a specialization of a generic type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ba79d4404f5653d6f77e24331c8ba336aac40d" translate="yes" xml:space="preserve">
          <source>An attempt was made to implement &lt;code&gt;Drop&lt;/code&gt; on a specialization of a generic type. An example is shown below:</source>
          <target state="translated">Se intent&amp;oacute; implementar &lt;code&gt;Drop&lt;/code&gt; en una especializaci&amp;oacute;n de tipo gen&amp;eacute;rico. A continuaci&amp;oacute;n se muestra un ejemplo:</target>
        </trans-unit>
        <trans-unit id="c55e6f81b7dc27d46319cedb33bad7716f5297f4" translate="yes" xml:space="preserve">
          <source>An attempt was made to implement Drop on a trait, which is not allowed: only structs and enums can implement Drop. An example causing this error:</source>
          <target state="translated">Se intentó implementar el Drop en un rasgo,lo cual no está permitido:sólo las estructuras y los enums pueden implementar el Drop.Un ejemplo que causa este error:</target>
        </trans-unit>
        <trans-unit id="e153b913d67d75c58662cead8cf242032c80e00b" translate="yes" xml:space="preserve">
          <source>An attempt was made to mutate data using a non-mutable reference. This commonly occurs when attempting to assign to a non-mutable reference of a mutable reference (&lt;code&gt;&amp;amp;(&amp;amp;mut T)&lt;/code&gt;).</source>
          <target state="translated">Se intent&amp;oacute; mutar datos utilizando una referencia no mutable. Esto ocurre com&amp;uacute;nmente cuando se intenta asignar a una referencia no mutable de una referencia mutable ( &lt;code&gt;&amp;amp;(&amp;amp;mut T)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca0f2abce0a16f2ca7a56625ca020df6fd2125b3" translate="yes" xml:space="preserve">
          <source>An attempt was made to retrieve an associated type, but the type was ambiguous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb3222e10ca68a4902e2fef67ce06d659218b60" translate="yes" xml:space="preserve">
          <source>An attempt was made to retrieve an associated type, but the type was ambiguous. For example:</source>
          <target state="translated">Se intentó recuperar un tipo asociado,pero el tipo era ambiguo.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="89de6efbf294db50ea9580038de7bf4a99c6cc2d" translate="yes" xml:space="preserve">
          <source>An attempted conversion that consumes &lt;code&gt;self&lt;/code&gt;, which may or may not be expensive.</source>
          <target state="translated">Un intento de conversi&amp;oacute;n que se consume a &lt;code&gt;self&lt;/code&gt; , que puede ser costoso o no.</target>
        </trans-unit>
        <trans-unit id="2be91cd4a4fec9bf78dc3a63f6f2d68f35c2bdbd" translate="yes" xml:space="preserve">
          <source>An attempted implementation of a trait method has the wrong number of function parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8894f1f89d7bc71fd853d9276ef9750108ee20" translate="yes" xml:space="preserve">
          <source>An attempted implementation of a trait method has the wrong number of type or const parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863f680a55f734bd0dbbca55a32cd8aa13a2d823" translate="yes" xml:space="preserve">
          <source>An attribute is either active or inert. During attribute processing, &lt;em&gt;active attributes&lt;/em&gt; remove themselves from the thing they are on while &lt;em&gt;inert attributes&lt;/em&gt; stay on.</source>
          <target state="translated">Un atributo es activo o inerte. Durante el procesamiento de atributos, &lt;em&gt;los atributos activos se&lt;/em&gt; quitan a s&amp;iacute; mismos del objeto en el que se encuentran mientras que los &lt;em&gt;atributos inertes&lt;/em&gt; permanecen &lt;em&gt;activos&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="de85bca69e396a8c71433fa18f072a410a4fc345" translate="yes" xml:space="preserve">
          <source>An auto trait was declared with a method or an associated item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f22761bfa3bdfb0003204a934bf1010c9716a93" translate="yes" xml:space="preserve">
          <source>An empty buffer returned indicates that the stream has reached EOF.</source>
          <target state="translated">Un buffer vacío devuelto indica que la corriente ha llegado a EOF.</target>
        </trans-unit>
        <trans-unit id="dc01027756efda949405e0e59c0d834ec342e061" translate="yes" xml:space="preserve">
          <source>An empty iterator returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Un iterador vac&amp;iacute;o devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="442cf9396651f26f54eeff92f4dde433d7f72454" translate="yes" xml:space="preserve">
          <source>An empty iterator returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Un iterador vac&amp;iacute;o devuelve &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3ba001b1a53998b8d224cd77e4663359ef99e71" translate="yes" xml:space="preserve">
          <source>An empty iterator returns the one value of the type.</source>
          <target state="translated">Un iterador vacío devuelve el único valor del tipo.</target>
        </trans-unit>
        <trans-unit id="54261d577d85895bf8c09d3febd150e6fae82418" translate="yes" xml:space="preserve">
          <source>An empty iterator returns the zero value of the type.</source>
          <target state="translated">Un iterador vacío devuelve el valor cero del tipo.</target>
        </trans-unit>
        <trans-unit id="b0823d0a93b876d1ef3cd6f73de147b3c9881c3f" translate="yes" xml:space="preserve">
          <source>An empty sequence is lexicographically less than any non-empty sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f62854280c7cd5daf0c2b6b4a29d4a8c72ac30" translate="yes" xml:space="preserve">
          <source>An endpoint of a range of keys.</source>
          <target state="translated">Un punto final de un rango de claves.</target>
        </trans-unit>
        <trans-unit id="ee713135dbae7e11e49962ea65b30c33678861ed" translate="yes" xml:space="preserve">
          <source>An entity already exists, often a file.</source>
          <target state="translated">Una entidad ya existe,a menudo un archivo.</target>
        </trans-unit>
        <trans-unit id="2db4e2025a972767c9444bca8e88e9a77524203e" translate="yes" xml:space="preserve">
          <source>An entity was not found, often a file.</source>
          <target state="translated">No se encontró una entidad,a menudo un archivo.</target>
        </trans-unit>
        <trans-unit id="c5a4a196ff419cb4ace58ac8718f985652b454f9" translate="yes" xml:space="preserve">
          <source>An enum with the representation hint &lt;code&gt;repr(transparent)&lt;/code&gt; had zero or more than one variants.</source>
          <target state="translated">Una enumeraci&amp;oacute;n con la sugerencia de representaci&amp;oacute;n &lt;code&gt;repr(transparent)&lt;/code&gt; ten&amp;iacute;a cero o m&amp;aacute;s de una variante.</target>
        </trans-unit>
        <trans-unit id="3dc999ff5594fd4673ff8dbd7678f9024bdecf27" translate="yes" xml:space="preserve">
          <source>An enumeration of possible errors associated with a &lt;a href=&quot;type.trylockresult&quot;&gt;&lt;code&gt;TryLockResult&lt;/code&gt;&lt;/a&gt; which can occur while trying to acquire a lock, from the &lt;a href=&quot;struct.mutex#method.try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;struct.rwlock#method.try_read&quot;&gt;&lt;code&gt;try_read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.rwlock#method.try_write&quot;&gt;&lt;code&gt;try_write&lt;/code&gt;&lt;/a&gt; methods on an &lt;a href=&quot;struct.rwlock&quot;&gt;&lt;code&gt;RwLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Una enumeraci&amp;oacute;n de posibles errores asociados con un &lt;a href=&quot;type.trylockresult&quot;&gt; &lt;code&gt;TryLockResult&lt;/code&gt; &lt;/a&gt; que pueden ocurrir al intentar adquirir un bloqueo, desde el m&amp;eacute;todo &lt;a href=&quot;struct.mutex#method.try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt; en un &lt;a href=&quot;struct.mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; o los m&amp;eacute;todos &lt;a href=&quot;struct.rwlock#method.try_read&quot;&gt; &lt;code&gt;try_read&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;struct.rwlock#method.try_write&quot;&gt; &lt;code&gt;try_write&lt;/code&gt; &lt;/a&gt; en un &lt;a href=&quot;struct.rwlock&quot;&gt; &lt;code&gt;RwLock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09fd334e73fd76483600e0a3e0818465278a8c4f" translate="yes" xml:space="preserve">
          <source>An error indicating invalid UTF-8 when converting a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un error que indica UTF-8 no v&amp;aacute;lido al convertir un &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; en un &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e00442ed63dafefaa24c2855dc12cc641d5d806" translate="yes" xml:space="preserve">
          <source>An error indicating that a nul byte was not in the expected position.</source>
          <target state="translated">Un error que indica que un nulo byte no estaba en la posición esperada.</target>
        </trans-unit>
        <trans-unit id="607c0a59f40344c6d402da3d92f1e4d75c5c8d03" translate="yes" xml:space="preserve">
          <source>An error indicating that an interior nul byte was found.</source>
          <target state="translated">Un error que indica que se encontró un nulo byte interior.</target>
        </trans-unit>
        <trans-unit id="2239ba3f9f1a9c04aabf258d44bc7c635e911959" translate="yes" xml:space="preserve">
          <source>An error of the &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind is non-fatal and the read operation should be retried if there is nothing else to do.</source>
          <target state="translated">Un error del tipo &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; no es fatal y la operaci&amp;oacute;n de lectura debe reintentarse si no hay nada m&amp;aacute;s que hacer.</target>
        </trans-unit>
        <trans-unit id="ff800591cb202807f317ec28fbc572d02357615d" translate="yes" xml:space="preserve">
          <source>An error of the &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt;&lt;code&gt;ErrorKind::Interrupted&lt;/code&gt;&lt;/a&gt; kind is non-fatal and the write operation should be retried if there is nothing else to do.</source>
          <target state="translated">Un error del tipo &lt;a href=&quot;enum.errorkind#variant.Interrupted&quot;&gt; &lt;code&gt;ErrorKind::Interrupted&lt;/code&gt; &lt;/a&gt; no es fatal y la operaci&amp;oacute;n de escritura debe reintentarse si no hay nada m&amp;aacute;s que hacer.</target>
        </trans-unit>
        <trans-unit id="597ff1fa4b12094e64ed86609fbee72af9e8d564" translate="yes" xml:space="preserve">
          <source>An error returned by &lt;a href=&quot;struct.bufwriter#method.into_inner&quot;&gt;&lt;code&gt;BufWriter::into_inner&lt;/code&gt;&lt;/a&gt; which combines an error that happened while writing out the buffer, and the buffered writer object which may be used to recover from the condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ad7c556d901c0beffc94b348b6d4d9e1e99f53" translate="yes" xml:space="preserve">
          <source>An error returned by &lt;a href=&quot;struct.localkey#method.try_with&quot;&gt;&lt;code&gt;LocalKey::try_with&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un error devuelto por &lt;a href=&quot;struct.localkey#method.try_with&quot;&gt; &lt;code&gt;LocalKey::try_with&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a2bb23cc4bff912e225e8d82c808ebe1116d273" translate="yes" xml:space="preserve">
          <source>An error returned by &lt;a href=&quot;struct.refcell#method.try_borrow&quot;&gt;&lt;code&gt;RefCell::try_borrow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un error devuelto por &lt;a href=&quot;struct.refcell#method.try_borrow&quot;&gt; &lt;code&gt;RefCell::try_borrow&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49b49c608a0a48a5c64a8db743785c3d4f2cbc87" translate="yes" xml:space="preserve">
          <source>An error returned by &lt;a href=&quot;struct.refcell#method.try_borrow_mut&quot;&gt;&lt;code&gt;RefCell::try_borrow_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un error devuelto por &lt;a href=&quot;struct.refcell#method.try_borrow_mut&quot;&gt; &lt;code&gt;RefCell::try_borrow_mut&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a9d323634dc21ac2ba61947c9f4ada5b0523975" translate="yes" xml:space="preserve">
          <source>An error returned by &lt;code&gt;into_inner&lt;/code&gt; which combines an error that happened while writing out the buffer, and the buffered writer object which may be used to recover from the condition.</source>
          <target state="translated">Un error devuelto por &lt;code&gt;into_inner&lt;/code&gt; que combina un error que ocurri&amp;oacute; al escribir en el b&amp;uacute;fer y el objeto de escritura en b&amp;uacute;fer que puede usarse para recuperarse de la condici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="408e9c71ed3bc2aa80ae9ddbf31a37ecbe128d0c" translate="yes" xml:space="preserve">
          <source>An error returned from &lt;a href=&quot;struct.path#method.strip_prefix&quot;&gt;&lt;code&gt;Path::strip_prefix&lt;/code&gt;&lt;/a&gt; if the prefix was not found.</source>
          <target state="translated">Un error devuelto por &lt;a href=&quot;struct.path#method.strip_prefix&quot;&gt; &lt;code&gt;Path::strip_prefix&lt;/code&gt; &lt;/a&gt; si no se encontr&amp;oacute; el prefijo.</target>
        </trans-unit>
        <trans-unit id="788504f3aa85eadb6d0636b88bca37c397dba8e3" translate="yes" xml:space="preserve">
          <source>An error returned from the &lt;a href=&quot;struct.receiver#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt; function on a &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un error devuelto por la funci&amp;oacute;n &lt;a href=&quot;struct.receiver#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; &lt;/a&gt; en un &lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fec5ed88196e94f3e7939be6668b9ce8dfe54d0" translate="yes" xml:space="preserve">
          <source>An error returned from the &lt;a href=&quot;struct.sender#method.send&quot;&gt;&lt;code&gt;Sender::send&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;SyncSender::send&lt;/code&gt;&lt;/a&gt; function on &lt;strong&gt;channel&lt;/strong&gt;s.</source>
          <target state="translated">Un error devuelto por la funci&amp;oacute;n &lt;a href=&quot;struct.sender#method.send&quot;&gt; &lt;code&gt;Sender::send&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;SyncSender::send&lt;/code&gt; &lt;/a&gt; en el &lt;strong&gt;canal&lt;/strong&gt; s.</target>
        </trans-unit>
        <trans-unit id="b947bf8292263975edc2c833eac5521f6b3d5e94" translate="yes" xml:space="preserve">
          <source>An error returned from the &lt;code&gt;duration_since&lt;/code&gt; and &lt;code&gt;elapsed&lt;/code&gt; methods on &lt;code&gt;SystemTime&lt;/code&gt;, used to learn how far in the opposite direction a system time lies.</source>
          <target state="translated">Un error devuelto por los m&amp;eacute;todos &lt;code&gt;duration_since&lt;/code&gt; y &lt;code&gt;elapsed&lt;/code&gt; en &lt;code&gt;SystemTime&lt;/code&gt; , que se usa para saber qu&amp;eacute; tan lejos en la direcci&amp;oacute;n opuesta se encuentra la hora del sistema.</target>
        </trans-unit>
        <trans-unit id="3cc3caad00d427c67aa297b2ffd580ffa8825463" translate="yes" xml:space="preserve">
          <source>An error returned when an operation could not be completed because a call to &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; returned &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(0)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f86543e577fd1d558ef170de94a1b52743f0b" translate="yes" xml:space="preserve">
          <source>An error returned when an operation could not be completed because a call to &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; returned &lt;a href=&quot;type.result&quot;&gt;&lt;code&gt;Ok(0)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Se devolvi&amp;oacute; un error cuando no se pudo completar una operaci&amp;oacute;n porque una llamada a &lt;a href=&quot;trait.write#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; &lt;a href=&quot;type.result&quot;&gt; &lt;code&gt;Ok(0)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b05482ca3068a6de89ef72655084867c49191841" translate="yes" xml:space="preserve">
          <source>An error returned when an operation could not be completed because an &quot;end of file&quot; was reached prematurely.</source>
          <target state="translated">Un error regresó cuando una operación no pudo completarse porque se llegó prematuramente a un &quot;fin de archivo&quot;.</target>
        </trans-unit>
        <trans-unit id="9c4fdb1f9f1ace5ab60797b01c282f3c5da7046e" translate="yes" xml:space="preserve">
          <source>An error returned when parsing a &lt;code&gt;bool&lt;/code&gt; using &lt;a href=&quot;../primitive.bool#method.from_str&quot;&gt;&lt;code&gt;from_str&lt;/code&gt;&lt;/a&gt; fails</source>
          <target state="translated">Se devuelve un error cuando falla el an&amp;aacute;lisis de un &lt;code&gt;bool&lt;/code&gt; usando &lt;a href=&quot;../primitive.bool#method.from_str&quot;&gt; &lt;code&gt;from_str&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2cc322b72612b3329e40408b842ec85e5b854bf" translate="yes" xml:space="preserve">
          <source>An error returned when parsing a &lt;code&gt;bool&lt;/code&gt; using &lt;a href=&quot;trait.fromstr#tymethod.from_str&quot;&gt;&lt;code&gt;from_str&lt;/code&gt;&lt;/a&gt; fails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01956aad1d91d0a3eaa910ec372ba76608859bfc" translate="yes" xml:space="preserve">
          <source>An error that can be returned when decoding UTF-16 code points.</source>
          <target state="translated">Un error que puede ser devuelto cuando se decodifican los puntos de código UTF-16.</target>
        </trans-unit>
        <trans-unit id="3533bcb297f1b2a750fb10891e22e5dd49940449" translate="yes" xml:space="preserve">
          <source>An error when parsing a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Un error al analizar una &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8c4d17e195207f5a989ac26b5a78606dcbba09d" translate="yes" xml:space="preserve">
          <source>An error which can be returned when parsing a char.</source>
          <target state="translated">Un error que puede ser devuelto al analizar un carácter.</target>
        </trans-unit>
        <trans-unit id="6080f2ccd647721dacbdd21e9d94b2a3bec77e1f" translate="yes" xml:space="preserve">
          <source>An error which can be returned when parsing a float.</source>
          <target state="translated">Un error que puede ser devuelto cuando se analiza un flotador.</target>
        </trans-unit>
        <trans-unit id="8d76e3522dda33b8ed78bf99a4c5562182d54f08" translate="yes" xml:space="preserve">
          <source>An error which can be returned when parsing an IP address or a socket address.</source>
          <target state="translated">Un error que puede ser devuelto cuando se analiza una dirección IP o una dirección de socket.</target>
        </trans-unit>
        <trans-unit id="c7b106b5fd117686f0aceb67097fd3cef2a189bf" translate="yes" xml:space="preserve">
          <source>An error which can be returned when parsing an integer.</source>
          <target state="translated">Un error que puede ser devuelto cuando se analiza un número entero.</target>
        </trans-unit>
        <trans-unit id="0c10923efe360df9a8a2484a223be28df23ba6ae" translate="yes" xml:space="preserve">
          <source>An evaluation of a trait requirement overflowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7c5a9fd1d469b89a9d56899ca1f50026a1dd32" translate="yes" xml:space="preserve">
          <source>An example implementation for a domain in which two books are considered the same book if their ISBN matches, even if the formats differ:</source>
          <target state="translated">Un ejemplo de implementación para un dominio en el que dos libros se consideran el mismo libro si su ISBN coincide,aunque los formatos sean diferentes:</target>
        </trans-unit>
        <trans-unit id="68ff7c567c0520a3da56cf3b0e9741fe24004f8f" translate="yes" xml:space="preserve">
          <source>An example implementation of the trait:</source>
          <target state="translated">Un ejemplo de aplicación del rasgo:</target>
        </trans-unit>
        <trans-unit id="28b14342433cafd1cb0863789fedb01f7530bff9" translate="yes" xml:space="preserve">
          <source>An example is a generic struct holding a function pointer. In this case, the implementation of &lt;code&gt;Clone&lt;/code&gt; cannot be &lt;code&gt;derive&lt;/code&gt;d, but can be implemented as:</source>
          <target state="translated">Un ejemplo es una estructura gen&amp;eacute;rica que contiene un puntero de funci&amp;oacute;n. En este caso, la implementaci&amp;oacute;n de &lt;code&gt;Clone&lt;/code&gt; no se puede &lt;code&gt;derive&lt;/code&gt; , pero se puede implementar como:</target>
        </trans-unit>
        <trans-unit id="da1a4e43cf80966a8d5beb99e7207867287f3da9" translate="yes" xml:space="preserve">
          <source>An example of &lt;code&gt;use&lt;/code&gt; declarations:</source>
          <target state="translated">Un ejemplo de declaraciones de &lt;code&gt;use&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f512d81d83647ae47cd90bcb76d95f7b8768001b" translate="yes" xml:space="preserve">
          <source>An example of a &lt;code&gt;for&lt;/code&gt; loop over the contents of an array:</source>
          <target state="translated">Un ejemplo de un bucle &lt;code&gt;for&lt;/code&gt; sobre el contenido de una matriz:</target>
        </trans-unit>
        <trans-unit id="fee9699f2c385a5203b6e01e13cf6011f2fcd8a4" translate="yes" xml:space="preserve">
          <source>An example of a &lt;code&gt;match&lt;/code&gt; expression:</source>
          <target state="translated">Un ejemplo de una expresi&amp;oacute;n de &lt;code&gt;match&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cfd1afa80d53786d32ba47458c2ed4379f4003bf" translate="yes" xml:space="preserve">
          <source>An example of a &lt;code&gt;return&lt;/code&gt; expression:</source>
          <target state="translated">Un ejemplo de una expresi&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c5bf1e5202001a02f36098e504bd7cb0fe28030" translate="yes" xml:space="preserve">
          <source>An example of a &lt;code&gt;struct&lt;/code&gt; item and its use:</source>
          <target state="translated">Un ejemplo de un elemento de &lt;code&gt;struct&lt;/code&gt; y su uso:</target>
        </trans-unit>
        <trans-unit id="3c2199ab0dce170bc0714704fc232fd68c69b281" translate="yes" xml:space="preserve">
          <source>An example of a &lt;em&gt;recursive&lt;/em&gt; type and its use:</source>
          <target state="translated">Un ejemplo de un tipo &lt;em&gt;recursivo&lt;/em&gt; y su uso:</target>
        </trans-unit>
        <trans-unit id="0f62525fdcd99f7d466515d9585c0c13357e1b2b" translate="yes" xml:space="preserve">
          <source>An example of a common associated function is a &lt;code&gt;new&lt;/code&gt; function that returns a value of the type the associated function is associated with.</source>
          <target state="translated">Un ejemplo de una funci&amp;oacute;n asociada com&amp;uacute;n es una &lt;code&gt;new&lt;/code&gt; funci&amp;oacute;n que devuelve un valor del tipo con el que est&amp;aacute; asociada la funci&amp;oacute;n asociada.</target>
        </trans-unit>
        <trans-unit id="6a351aa1ff4672ddb51a26e9d5f1e845614b350b" translate="yes" xml:space="preserve">
          <source>An example of a for loop over a series of integers:</source>
          <target state="translated">Un ejemplo de un bucle de for sobre una serie de números enteros:</target>
        </trans-unit>
        <trans-unit id="9bcd2ce89adc17fbe7648c05a09884aa0d701978" translate="yes" xml:space="preserve">
          <source>An example of a module:</source>
          <target state="translated">Un ejemplo de un módulo:</target>
        </trans-unit>
        <trans-unit id="8e8435c013addb39ce3eb498c3c558d414e6f6ad" translate="yes" xml:space="preserve">
          <source>An example of a necessary use of parentheses is when calling a function pointer that is a member of a struct:</source>
          <target state="translated">Un ejemplo del uso necesario de paréntesis es cuando se llama a un puntero de función que es miembro de una estructura:</target>
        </trans-unit>
        <trans-unit id="056ff1cdb43a917deab8c9dc0f118b2d9dd496e8" translate="yes" xml:space="preserve">
          <source>An example of a non-&lt;code&gt;Send&lt;/code&gt; type is the reference-counting pointer &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;rc::Rc&lt;/code&gt;&lt;/a&gt;. If two threads attempt to clone &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;s that point to the same reference-counted value, they might try to update the reference count at the same time, which is &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; because &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; doesn't use atomic operations. Its cousin &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;sync::Arc&lt;/code&gt;&lt;/a&gt; does use atomic operations (incurring some overhead) and thus is &lt;code&gt;Send&lt;/code&gt;.</source>
          <target state="translated">Un ejemplo de un tipo que no es de &lt;code&gt;Send&lt;/code&gt; es el puntero de conteo de referencias &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;rc::Rc&lt;/code&gt; &lt;/a&gt; . Si dos subprocesos intentan clonar &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; s que apuntan al mismo valor contado de referencia, es posible que intenten actualizar el recuento de referencias al mismo tiempo, que es &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;un comportamiento indefinido&lt;/a&gt; porque &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; no usa operaciones at&amp;oacute;micas. Su primo &lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;sync::Arc&lt;/code&gt; &lt;/a&gt; usa operaciones at&amp;oacute;micas (incurriendo en algunos gastos generales) y por lo tanto es &lt;code&gt;Send&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e38ec369f62f9a0e9cf71faa19b5cb843376b06e" translate="yes" xml:space="preserve">
          <source>An example of a parenthesized expression:</source>
          <target state="translated">Un ejemplo de una expresión entre paréntesis:</target>
        </trans-unit>
        <trans-unit id="f06523b9f614521a822acb49c6502314b5223a29" translate="yes" xml:space="preserve">
          <source>An example of a trait object:</source>
          <target state="translated">Un ejemplo de un objeto de rasgo:</target>
        </trans-unit>
        <trans-unit id="f97a42d4af253ea16c2f098f9cd1358538ff9ccc" translate="yes" xml:space="preserve">
          <source>An example of a trait that can&amp;rsquo;t be derived is &lt;code&gt;Display&lt;/code&gt;, which handles formatting for end users. You should always consider the appropriate way to display a type to an end user. What parts of the type should an end user be allowed to see? What parts would they find relevant? What format of the data would be most relevant to them? The Rust compiler doesn&amp;rsquo;t have this insight, so it can&amp;rsquo;t provide appropriate default behavior for you.</source>
          <target state="translated">Un ejemplo de un rasgo que no se puede derivar es &lt;code&gt;Display&lt;/code&gt; , que maneja el formato para los usuarios finales. Siempre debe considerar la forma adecuada de mostrar un tipo a un usuario final. &amp;iquest;Qu&amp;eacute; partes del tipo deber&amp;iacute;a poder ver un usuario final? &amp;iquest;Qu&amp;eacute; partes encontrar&amp;iacute;an relevantes? &amp;iquest;Qu&amp;eacute; formato de los datos ser&amp;iacute;a m&amp;aacute;s relevante para ellos? El compilador de Rust no tiene esta informaci&amp;oacute;n, por lo que no puede proporcionarle el comportamiento predeterminado adecuado.</target>
        </trans-unit>
        <trans-unit id="b2a6dc626aff375aa4d434c66ea264d4dc08b800" translate="yes" xml:space="preserve">
          <source>An example of a trait whose methods are not object safe is the standard library&amp;rsquo;s &lt;code&gt;Clone&lt;/code&gt; trait. The signature for the &lt;code&gt;clone&lt;/code&gt; method in the &lt;code&gt;Clone&lt;/code&gt; trait looks like this:</source>
          <target state="translated">Un ejemplo de un rasgo cuyos m&amp;eacute;todos no son seguros para objetos es el rasgo &lt;code&gt;Clone&lt;/code&gt; la biblioteca est&amp;aacute;ndar . La firma para el m&amp;eacute;todo de &lt;code&gt;clone&lt;/code&gt; en el rasgo &lt;code&gt;Clone&lt;/code&gt; ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="5e81f6611106899f0be7f5a0792978a45ad55dd8" translate="yes" xml:space="preserve">
          <source>An example of a tuple type and its use:</source>
          <target state="translated">Un ejemplo de un tipo de tupla y su uso:</target>
        </trans-unit>
        <trans-unit id="363c341cbe13044b212571253c8a33caae78cd45" translate="yes" xml:space="preserve">
          <source>An example of an &lt;code&gt;as&lt;/code&gt; expression:</source>
          <target state="translated">Un ejemplo de una expresi&amp;oacute;n &lt;code&gt;as&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a2db905e306fb4833044bdd9885bb27ab8f76d7f" translate="yes" xml:space="preserve">
          <source>An example of an &lt;code&gt;enum&lt;/code&gt; item and its use:</source>
          <target state="translated">Un ejemplo de un elemento de &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n y su uso:</target>
        </trans-unit>
        <trans-unit id="9260a714aba6105dd14cba9d58f3d41f31de6503" translate="yes" xml:space="preserve">
          <source>An example of an empty type is &lt;code&gt;enum Empty { }&lt;/code&gt;. So, the following will work:</source>
          <target state="translated">Un ejemplo de un tipo vac&amp;iacute;o es &lt;code&gt;enum Empty { }&lt;/code&gt; . Entonces, lo siguiente funcionar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="ff969b10a01ab50464488192aa66638be2ebf171" translate="yes" xml:space="preserve">
          <source>An example of combining the above rules of &lt;code&gt;path&lt;/code&gt; attributes on inline modules and nested modules within (applies to both mod-rs and non-mod-rs files):</source>
          <target state="translated">Un ejemplo de combinaci&amp;oacute;n de las reglas anteriores de atributos de &lt;code&gt;path&lt;/code&gt; en m&amp;oacute;dulos en l&amp;iacute;nea y m&amp;oacute;dulos anidados dentro (se aplica a archivos mod-rs y no mod-rs):</target>
        </trans-unit>
        <trans-unit id="6e09c1385fee93fd5fa2b4010458a4fc489b7a97" translate="yes" xml:space="preserve">
          <source>An example of implementing the formatting traits would look like:</source>
          <target state="translated">Un ejemplo de la aplicación de los rasgos de formato sería:</target>
        </trans-unit>
        <trans-unit id="fa098562087edb062353d3aa89708207a19b395b" translate="yes" xml:space="preserve">
          <source>An example of matching non-exhaustively on the above enum is provided below:</source>
          <target state="translated">A continuación se ofrece un ejemplo de coincidencia no exhaustiva en la lista anterior:</target>
        </trans-unit>
        <trans-unit id="7ef19768d994b2224d1f41bd49faef1709c5e7ef" translate="yes" xml:space="preserve">
          <source>An example of panic:</source>
          <target state="translated">Un ejemplo de pánico:</target>
        </trans-unit>
        <trans-unit id="884b0dfdd5d082bb94960ecce28dc9f3e6d384f8" translate="yes" xml:space="preserve">
          <source>An example of re-exporting:</source>
          <target state="translated">Un ejemplo de reexportación:</target>
        </trans-unit>
        <trans-unit id="708c005211a8b1e93ec9aac2ad4a16e9c3bc2bc3" translate="yes" xml:space="preserve">
          <source>An example of this error:</source>
          <target state="translated">Un ejemplo de este error:</target>
        </trans-unit>
        <trans-unit id="1d989db348ecf6096ab3ac95d001072dec12efa1" translate="yes" xml:space="preserve">
          <source>An example of this is when generating a new struct and an impl for it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7f946fdd8d8a22da86833c61b5461d61a9c5be" translate="yes" xml:space="preserve">
          <source>An example of using tuple patterns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62347f606509b323a7de02a2bce976170f493c84" translate="yes" xml:space="preserve">
          <source>An example of what not to do and how this relates to &lt;code&gt;read_unaligned&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f16face177ebc3cd353bb963c0ea872b0ace950" translate="yes" xml:space="preserve">
          <source>An example of what not to do and how this relates to &lt;code&gt;write_unaligned&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64eb812bfe0819a20f7b7755d2742025cd360a65" translate="yes" xml:space="preserve">
          <source>An example of what will and will not work for &lt;code&gt;use&lt;/code&gt; items:</source>
          <target state="translated">Un ejemplo de lo que funcionar&amp;aacute; y lo que no funcionar&amp;aacute; para los elementos de &lt;code&gt;use&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8365f135946b3f7b044d8cfd3fa7997f776027f4" translate="yes" xml:space="preserve">
          <source>An example of when &lt;code&gt;Clone&lt;/code&gt; is required is when calling the &lt;code&gt;to_vec&lt;/code&gt; method on a slice. The slice doesn&amp;rsquo;t own the type instances it contains, but the vector returned from &lt;code&gt;to_vec&lt;/code&gt; will need to own its instances, so &lt;code&gt;to_vec&lt;/code&gt; calls &lt;code&gt;clone&lt;/code&gt; on each item. Thus, the type stored in the slice must implement &lt;code&gt;Clone&lt;/code&gt;.</source>
          <target state="translated">Un ejemplo de cu&amp;aacute;ndo se requiere &lt;code&gt;Clone&lt;/code&gt; es cuando se llama al m&amp;eacute;todo &lt;code&gt;to_vec&lt;/code&gt; en un segmento. El segmento no posee las instancias de tipo que contiene, pero el vector devuelto por &lt;code&gt;to_vec&lt;/code&gt; necesitar&amp;aacute; poseer sus instancias, por lo que &lt;code&gt;to_vec&lt;/code&gt; llama a &lt;code&gt;clone&lt;/code&gt; en cada elemento. Por lo tanto, el tipo almacenado en el segmento debe implementar &lt;code&gt;Clone&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aaf3c4aa1a7d59f2304836782308596d0ae75f64" translate="yes" xml:space="preserve">
          <source>An example of when &lt;code&gt;Eq&lt;/code&gt; is required is for keys in a &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; so the &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; can tell whether two keys are the same.</source>
          <target state="translated">Un ejemplo de cuando se requiere &lt;code&gt;Eq&lt;/code&gt; es para claves en un &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; para que &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; pueda decir si dos claves son iguales.</target>
        </trans-unit>
        <trans-unit id="e410ff694a089e824c24843049bae108ce880220" translate="yes" xml:space="preserve">
          <source>An example of when &lt;code&gt;Hash&lt;/code&gt; is required is in storing keys in a &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; to store data efficiently.</source>
          <target state="translated">Un ejemplo de cu&amp;aacute;ndo se requiere &lt;code&gt;Hash&lt;/code&gt; es almacenar claves en un &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt; para almacenar datos de manera eficiente.</target>
        </trans-unit>
        <trans-unit id="13874d9be8af151d397c4923d18c3e3bb505d451" translate="yes" xml:space="preserve">
          <source>An example of when &lt;code&gt;Ord&lt;/code&gt; is required is when storing values in a &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt;, a data structure that stores data based on the sort order of the values.</source>
          <target state="translated">Un ejemplo de cu&amp;aacute;ndo se requiere &lt;code&gt;Ord&lt;/code&gt; es cuando se almacenan valores en un &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; , una estructura de datos que almacena datos seg&amp;uacute;n el orden de clasificaci&amp;oacute;n de los valores.</target>
        </trans-unit>
        <trans-unit id="309f6d59bf7b6968dcfb2187e53fc8e9c9c42a01" translate="yes" xml:space="preserve">
          <source>An example of when you might want to use an array rather than a vector is in a program that needs to know the names of the months of the year. It&amp;rsquo;s very unlikely that such a program will need to add or remove months, so you can use an array because you know it will always contain 12 elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42b2c8e58eff03a7089947fa8ffae92137b9b5f" translate="yes" xml:space="preserve">
          <source>An example of when you might want to use an array rather than a vector is in a program that needs to know the names of the months of the year. It&amp;rsquo;s very unlikely that such a program will need to add or remove months, so you can use an array because you know it will always contain 12 items:</source>
          <target state="translated">Un ejemplo de cu&amp;aacute;ndo podr&amp;iacute;a querer usar una matriz en lugar de un vector es en un programa que necesita saber los nombres de los meses del a&amp;ntilde;o. Es muy poco probable que un programa de este tipo necesite agregar o eliminar meses, por lo que puede usar una matriz porque sabe que siempre contendr&amp;aacute; 12 elementos:</target>
        </trans-unit>
        <trans-unit id="bd0712d619a2d60e4c146e231ccdfbad8aba4743" translate="yes" xml:space="preserve">
          <source>An example of where you would want to only accept &lt;code&gt;fn&lt;/code&gt; and not closures is when interfacing with external code that doesn&amp;rsquo;t have closures: C functions can accept functions as arguments, but C doesn&amp;rsquo;t have closures.</source>
          <target state="translated">Un ejemplo de d&amp;oacute;nde querr&amp;iacute;a aceptar solo &lt;code&gt;fn&lt;/code&gt; y no cierres es cuando se interact&amp;uacute;a con c&amp;oacute;digo externo que no tiene cierres: las funciones de C pueden aceptar funciones como argumentos, pero C no tiene cierres.</target>
        </trans-unit>
        <trans-unit id="e73f9f6c8b4fbcf9f4fd470408b5fff3f081d3b9" translate="yes" xml:space="preserve">
          <source>An example using a closure:</source>
          <target state="translated">Un ejemplo usando un cierre:</target>
        </trans-unit>
        <trans-unit id="6d3969065ec2f88aef65174e1f6ffa620b0c83f2" translate="yes" xml:space="preserve">
          <source>An example where &lt;code&gt;Binop&lt;/code&gt; is defined as a function pointer type:</source>
          <target state="translated">Un ejemplo donde &lt;code&gt;Binop&lt;/code&gt; se define como un tipo de puntero de funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="translated">Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="9b338a4ae7f343a1618fa43d10bfc2df436ea62d" translate="yes" xml:space="preserve">
          <source>An exclusive bound.</source>
          <target state="translated">Una exclusiva.</target>
        </trans-unit>
        <trans-unit id="0a0f5c759335e3ef134a90149eb082ea59cf661b" translate="yes" xml:space="preserve">
          <source>An executing Rust program consists of a collection of native OS threads, each with their own stack and local state. Threads can be named, and provide some built-in support for low-level synchronization.</source>
          <target state="translated">Un programa de ejecución de Rust consiste en una colección de hilos nativos del sistema operativo,cada uno con su propia pila y estado local.Los hilos pueden ser nombrados,y proporcionan algún soporte incorporado para la sincronización de bajo nivel.</target>
        </trans-unit>
        <trans-unit id="12c993ee363617797c480ae0e7fa61fa88f7540e" translate="yes" xml:space="preserve">
          <source>An explicit conversion from a &lt;code&gt;&amp;amp;str&lt;/code&gt; to a String is done as follows:</source>
          <target state="translated">Una conversi&amp;oacute;n expl&amp;iacute;cita de a &lt;code&gt;&amp;amp;str&lt;/code&gt; a String se realiza de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="9863ad7a484538312614b219ee23d089bab88f2a" translate="yes" xml:space="preserve">
          <source>An expression enclosed in parentheses evaluates to the result of the enclosed expression. Parentheses can be used to explicitly specify evaluation order within an expression.</source>
          <target state="translated">Una expresión entre paréntesis evalúa el resultado de la expresión encerrada.Los paréntesis pueden utilizarse para especificar explícitamente el orden de evaluación dentro de una expresión.</target>
        </trans-unit>
        <trans-unit id="b0b2d07f6ff343f37bbb2da0dbd07ed7ea53cb5d" translate="yes" xml:space="preserve">
          <source>An expression is a combination of values, constants, variables, operators and functions that evaluate to a single value, with or without side-effects.</source>
          <target state="translated">Una expresión es una combinación de valores,constantes,variables,operadores y funciones que se evalúan a un solo valor,con o sin efectos secundarios.</target>
        </trans-unit>
        <trans-unit id="8a470e20ec20f9f17fbbac4266c615aa43cc21c3" translate="yes" xml:space="preserve">
          <source>An expression may have two roles: it always produces a &lt;em&gt;value&lt;/em&gt;, and it may have &lt;em&gt;effects&lt;/em&gt; (otherwise known as &quot;side effects&quot;). An expression &lt;em&gt;evaluates to&lt;/em&gt; a value, and has effects during &lt;em&gt;evaluation&lt;/em&gt;. Many expressions contain sub-expressions (operands). The meaning of each kind of expression dictates several things:</source>
          <target state="translated">Una expresi&amp;oacute;n puede tener dos roles: siempre produce un &lt;em&gt;valor&lt;/em&gt; y puede tener &lt;em&gt;efectos&lt;/em&gt; (tambi&amp;eacute;n conocidos como &quot;efectos secundarios&quot;). Una expresi&amp;oacute;n se &lt;em&gt;eval&amp;uacute;a como&lt;/em&gt; un valor y tiene efectos durante la &lt;em&gt;evaluaci&amp;oacute;n&lt;/em&gt; . Muchas expresiones contienen subexpresiones (operandos). El significado de cada tipo de expresi&amp;oacute;n dicta varias cosas:</target>
        </trans-unit>
        <trans-unit id="894873bc5f587b4733b17f7dfb18b0f3059d2176" translate="yes" xml:space="preserve">
          <source>An expression that consists of only a &lt;a href=&quot;expressions/block-expr&quot;&gt;block expression&lt;/a&gt; or control flow expression, if used in a context where a statement is permitted, can omit the trailing semicolon. This can cause an ambiguity between it being parsed as a standalone statement and as a part of another expression; in this case, it is parsed as a statement. The type of &lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;ExpressionWithBlock&lt;/em&gt;&lt;/a&gt; expressions when used as statements must be the unit type.</source>
          <target state="translated">Una expresi&amp;oacute;n que consta solo de una &lt;a href=&quot;expressions/block-expr&quot;&gt;expresi&amp;oacute;n de bloque&lt;/a&gt; o una expresi&amp;oacute;n de flujo de control, si se usa en un contexto donde se permite una declaraci&amp;oacute;n, puede omitir el punto y coma al final. Esto puede causar una ambig&amp;uuml;edad entre que se analiza como una declaraci&amp;oacute;n independiente y como parte de otra expresi&amp;oacute;n; en este caso, se analiza como una declaraci&amp;oacute;n. El tipo de &lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;expresiones ExpressionWithBlock&lt;/em&gt;&lt;/a&gt; cuando se usan como declaraciones debe ser el tipo de unidad.</target>
        </trans-unit>
        <trans-unit id="3db9b6e5300ec2a35e045cae789d7d65bc1644c2" translate="yes" xml:space="preserve">
          <source>An extension trait for concatenating slices</source>
          <target state="translated">Un rasgo de extensión para la concatenación de rebanadas</target>
        </trans-unit>
        <trans-unit id="12147a5a52fb5c2a1b9d7472abd1e716e6699134" translate="yes" xml:space="preserve">
          <source>An external crate dependency can be declared without binding its name in scope by using an underscore with the form &lt;code&gt;extern crate foo as _&lt;/code&gt;. This may be useful for crates that only need to be linked, but are never referenced, and will avoid being reported as unused.</source>
          <target state="translated">Se puede declarar una dependencia de caja externa sin vincular su nombre en el alcance utilizando un gui&amp;oacute;n bajo con la forma &lt;code&gt;extern crate foo as _&lt;/code&gt; . Esto puede ser &amp;uacute;til para cajas que solo necesitan estar vinculadas, pero nunca se hace referencia a ellas, y evitar&amp;aacute; que se notifiquen como no utilizadas.</target>
        </trans-unit>
        <trans-unit id="af0969299b70206aefe5265b359a29ba784a7b81" translate="yes" xml:space="preserve">
          <source>An feature unstable in &lt;code&gt;const&lt;/code&gt; contexts was used.</source>
          <target state="translated">Se utiliz&amp;oacute; una caracter&amp;iacute;stica inestable en contextos &lt;code&gt;const&lt;/code&gt; antes .</target>
        </trans-unit>
        <trans-unit id="67fba469014e18ca2e89e6de19c923fe7de4bee7" translate="yes" xml:space="preserve">
          <source>An identifier is any nonempty ASCII string of the following form:</source>
          <target state="translated">Un identificador es cualquier cadena ASCII no vacía de la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="c175628788a43110a89b193ae816462d4cf2d2a4" translate="yes" xml:space="preserve">
          <source>An identifier is bound more than once in a pattern.</source>
          <target state="translated">Un identificador está unido más de una vez en un patrón.</target>
        </trans-unit>
        <trans-unit id="b2a87fc4bed852d77bc4439f4f9b01dff5c6624b" translate="yes" xml:space="preserve">
          <source>An identifier that is neither defined nor a struct was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804d52ee70392ba486d9daf55c4a0571322cd6a0" translate="yes" xml:space="preserve">
          <source>An identifier was used like a function name or a value was expected and the identifier exists but it belongs to a different namespace.</source>
          <target state="translated">Se utilizó un identificador como el nombre de una función o se esperaba un valor y el identificador existe pero pertenece a un espacio de nombres diferente.</target>
        </trans-unit>
        <trans-unit id="21a7adea588a50a532e49278e2f1d4c02481c073" translate="yes" xml:space="preserve">
          <source>An identity function that &lt;em&gt;&lt;strong&gt;hints&lt;/strong&gt;&lt;/em&gt; to the compiler to be maximally pessimistic about what &lt;code&gt;black_box&lt;/code&gt; could do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9dd54d260c1e67a0aa0b597f6cdb8722318da30" translate="yes" xml:space="preserve">
          <source>An identity function.</source>
          <target state="translated">Una función de identidad.</target>
        </trans-unit>
        <trans-unit id="f4072cccbc13fd032256ab05516201c0d8df3e68" translate="yes" xml:space="preserve">
          <source>An if-let pattern attempts to match the pattern, and enters the body if the match was successful. If the match is irrefutable (when it cannot fail to match), use a regular &lt;code&gt;let&lt;/code&gt;-binding instead. For instance:</source>
          <target state="translated">Un patr&amp;oacute;n if-let intenta coincidir con el patr&amp;oacute;n y entra al cuerpo si la coincidencia fue exitosa. Si la coincidencia es irrefutable (cuando no puede fallar en la coincidencia), utilice en su lugar un enlace &lt;code&gt;let&lt;/code&gt; regular . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a0284d91e655684ff663495c42199a2c25a3b7b6" translate="yes" xml:space="preserve">
          <source>An immutable variable was reassigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba45e243c916e58a2890a2d541b968fddd22dd8" translate="yes" xml:space="preserve">
          <source>An implementation can take type and lifetime parameters, which can be used in the rest of the implementation. Type parameters declared for an implementation must be used at least once in either the trait or the implementing type of an implementation. Implementation parameters are written directly after the &lt;code&gt;impl&lt;/code&gt; keyword.</source>
          <target state="translated">Una implementaci&amp;oacute;n puede tomar par&amp;aacute;metros de tipo y duraci&amp;oacute;n, que se pueden usar en el resto de la implementaci&amp;oacute;n. Los par&amp;aacute;metros de tipo declarados para una implementaci&amp;oacute;n deben usarse al menos una vez en el rasgo o en el tipo de implementaci&amp;oacute;n de una implementaci&amp;oacute;n. Los par&amp;aacute;metros de implementaci&amp;oacute;n se escriben directamente despu&amp;eacute;s de la palabra clave &lt;code&gt;impl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7debed941ec31b919fee56e16fed7f3d43603fb5" translate="yes" xml:space="preserve">
          <source>An implementation cannot be chosen unambiguously because of lack of information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1c04198ba70d5ee214d020749cca1de7fc7d00" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;Alloc&lt;/code&gt; can allocate, reallocate, and deallocate arbitrary blocks of data described via &lt;code&gt;Layout&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;Alloc&lt;/code&gt; puede asignar, reasignar y desasignar bloques arbitrarios de datos descritos a trav&amp;eacute;s de &lt;code&gt;Layout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7ec04c76427d5dd969fd2e136866257e58eb1e" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;AllocRef&lt;/code&gt; can allocate, grow, shrink, and deallocate arbitrary blocks of data described via &lt;a href=&quot;struct.layout&quot;&gt;&lt;code&gt;Layout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99623634884bf4add6cdc497873712ce416c8fd4" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;BitAnd&lt;/code&gt; for a wrapper around &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;BitAnd&lt;/code&gt; para un envoltorio alrededor de &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e2ff6912f2ce30546aa9104a9c9d196708332bf" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;BitAnd&lt;/code&gt; for a wrapper around &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;BitAnd&lt;/code&gt; para un envoltorio alrededor de &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f6dfa411cba86305e5e9cd742f9f63d63776e67" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;BitAndAssign&lt;/code&gt; that lifts the &lt;code&gt;&amp;amp;=&lt;/code&gt; operator to a wrapper around &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;BitAndAssign&lt;/code&gt; que eleva el operador &lt;code&gt;&amp;amp;=&lt;/code&gt; a un envoltorio alrededor de &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3e86b6af5dd68737dcc690c4ff3a487a1934868" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;BitOr&lt;/code&gt; for a wrapper around &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;BitOr&lt;/code&gt; para un envoltorio alrededor de &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8149ba6d1631c707939091192745b37494deb7b" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;BitOr&lt;/code&gt; for a wrapper around &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;BitOr&lt;/code&gt; para un envoltorio alrededor de &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce43f6aba41bb7af32e0d6e55432c6b3ca8d7e1a" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;BitXor&lt;/code&gt; that lifts &lt;code&gt;^&lt;/code&gt; to a wrapper around &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;BitXor&lt;/code&gt; que eleva &lt;code&gt;^&lt;/code&gt; a un contenedor alrededor de &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65cb4db18d08218407844613de42d9029080f521" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;BitXor&lt;/code&gt; trait for a wrapper around &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n del rasgo &lt;code&gt;BitXor&lt;/code&gt; para un envoltorio alrededor de &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5b904d460aff616075d9ff33295d995d4012b99" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;Neg&lt;/code&gt; for &lt;code&gt;Sign&lt;/code&gt;, which allows the use of &lt;code&gt;-&lt;/code&gt; to negate its value.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;Neg&lt;/code&gt; for &lt;code&gt;Sign&lt;/code&gt; , que permite el uso de &lt;code&gt;-&lt;/code&gt; para negar su valor.</target>
        </trans-unit>
        <trans-unit id="873b42d4cd981f821fbfc718a707b146669b45da" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;Not&lt;/code&gt; for &lt;code&gt;Answer&lt;/code&gt;, which enables the use of &lt;code&gt;!&lt;/code&gt; to invert its value.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;Not&lt;/code&gt; for &lt;code&gt;Answer&lt;/code&gt; , que permite el uso de &lt;code&gt;!&lt;/code&gt; para invertir su valor.</target>
        </trans-unit>
        <trans-unit id="b6ef2365698efd5099fd68eb5d996513953b40b7" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;Shl&lt;/code&gt; that lifts the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; operation on integers to a wrapper around &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;Shl&lt;/code&gt; que eleva la operaci&amp;oacute;n &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; en enteros a un envoltorio alrededor de &lt;code&gt;usize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e679f132f9bdc673ab7525c566b308cef626454" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;Shl&lt;/code&gt; that spins a vector leftward by a given amount.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;Shl&lt;/code&gt; que hace girar un vector hacia la izquierda en una cantidad determinada.</target>
        </trans-unit>
        <trans-unit id="4b9ea2f9d110fb7b7d2e508e8eb895f2a6c76af4" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ShlAssign&lt;/code&gt; for a wrapper around &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;ShlAssign&lt;/code&gt; para una envoltura alrededor de &lt;code&gt;usize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdc99f650e402a714069613aef9bb0ab1a03fe00" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;Shr&lt;/code&gt; that lifts the &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operation on integers to a wrapper around &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;Shr&lt;/code&gt; que eleva la operaci&amp;oacute;n &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; en enteros a un envoltorio alrededor de &lt;code&gt;usize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00b6c1f0f935bcc3f078a1d4c1fb779815701d8c" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;Shr&lt;/code&gt; that spins a vector rightward by a given amount.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;Shr&lt;/code&gt; que hace girar un vector hacia la derecha en una cantidad determinada.</target>
        </trans-unit>
        <trans-unit id="fef3f9c26a074ccf18bb7e56e8695a2a73f26459" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ShrAssign&lt;/code&gt; for a wrapper around &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;ShrAssign&lt;/code&gt; para un contenedor alrededor de &lt;code&gt;usize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0109084bf6e2896150bb542f8a8637f2cff32f1" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;poll&lt;/code&gt; should strive to return quickly, and should not block. Returning quickly prevents unnecessarily clogging up threads or event loops. If it is known ahead of time that a call to &lt;code&gt;poll&lt;/code&gt; may end up taking awhile, the work should be offloaded to a thread pool (or something similar) to ensure that &lt;code&gt;poll&lt;/code&gt; can return quickly.</source>
          <target state="translated">Una implementaci&amp;oacute;n de &lt;code&gt;poll&lt;/code&gt; debe esforzarse por regresar r&amp;aacute;pidamente y no debe bloquearse. La devoluci&amp;oacute;n r&amp;aacute;pida evita la obstrucci&amp;oacute;n innecesaria de hilos o bucles de eventos. Si se sabe de antemano que una llamada a la &lt;code&gt;poll&lt;/code&gt; puede terminar tardando un tiempo, el trabajo debe descargarse a un grupo de subprocesos (o algo similar) para garantizar que la &lt;code&gt;poll&lt;/code&gt; pueda regresar r&amp;aacute;pidamente.</target>
        </trans-unit>
        <trans-unit id="350059cec8495b6fd084c91dd06a8c1a8c6277a2" translate="yes" xml:space="preserve">
          <source>An implementation of SipHash 2-4.</source>
          <target state="translated">Una implementación de SipHash 2-4.</target>
        </trans-unit>
        <trans-unit id="8a3dd636510b68fa6befc892111d7637911e62f8" translate="yes" xml:space="preserve">
          <source>An implementation of a trait doesn't match the type constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c410f2271131f6e26f4c1a6c01fb2def54994c" translate="yes" xml:space="preserve">
          <source>An import was unresolved.</source>
          <target state="translated">Una importación estaba sin resolver.</target>
        </trans-unit>
        <trans-unit id="29610251a6990ca267c18a3b17be65ef65d80c1f" translate="yes" xml:space="preserve">
          <source>An important part of the process of learning Rust is learning how to read the error messages the compiler displays: these will guide you toward working code. As such, we&amp;rsquo;ll provide many examples that don&amp;rsquo;t compile along with the error message the compiler will show you in each situation. Know that if you enter and run a random example, it may not compile! Make sure you read the surrounding text to see whether the example you&amp;rsquo;re trying to run is meant to error. Ferris will also help you distinguish code that isn&amp;rsquo;t meant to work:</source>
          <target state="translated">Una parte importante del proceso de aprendizaje de Rust es aprender a leer los mensajes de error que muestra el compilador: estos lo guiar&amp;aacute;n hacia el c&amp;oacute;digo de trabajo. Como tal, proporcionaremos muchos ejemplos que no se compilan junto con el mensaje de error que el compilador le mostrar&amp;aacute; en cada situaci&amp;oacute;n. Sepa que si ingresa y ejecuta un ejemplo aleatorio, &amp;iexcl;es posible que no se compile! Aseg&amp;uacute;rese de leer el texto que lo rodea para ver si el ejemplo que est&amp;aacute; intentando ejecutar es un error. Ferris tambi&amp;eacute;n lo ayudar&amp;aacute; a distinguir el c&amp;oacute;digo que no est&amp;aacute; destinado a funcionar:</target>
        </trans-unit>
        <trans-unit id="9068331ccd5e98287382db124205efdfb79f7cfb" translate="yes" xml:space="preserve">
          <source>An important thing to remember is that the type &lt;code&gt;fmt::Error&lt;/code&gt; should not be confused with &lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;std::io::Error&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;std::error::Error&lt;/code&gt;&lt;/a&gt;, which you may also have in scope.</source>
          <target state="translated">Una cosa importante para recordar es que el tipo &lt;code&gt;fmt::Error&lt;/code&gt; no debe confundirse con &lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;std::io::Error&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;std::error::Error&lt;/code&gt; &lt;/a&gt; , que tambi&amp;eacute;n puede tener en el alcance.</target>
        </trans-unit>
        <trans-unit id="8f9e81cf6c354fdfd3e66804e1f412009da97856" translate="yes" xml:space="preserve">
          <source>An inclusive bound.</source>
          <target state="translated">Un límite inclusivo.</target>
        </trans-unit>
        <trans-unit id="192433a73b5ee226652b56c2bf60e3939daf0558" translate="yes" xml:space="preserve">
          <source>An inclusive range needs an end in order to &lt;em&gt;include&lt;/em&gt; it. If you just need a start and no end, use a non-inclusive range (with &lt;code&gt;..&lt;/code&gt;):</source>
          <target state="translated">Una gama inclusiva necesita un final para poder &lt;em&gt;incluirla&lt;/em&gt; . Si solo necesita un comienzo y no un final, use un rango no inclusivo (con &lt;code&gt;..&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="50920c083a024a331ce9d74584285d9788301b90" translate="yes" xml:space="preserve">
          <source>An inclusive range was used with no end.</source>
          <target state="translated">Se utilizó un rango inclusivo sin fin.</target>
        </trans-unit>
        <trans-unit id="387b0473c559329b38860546da1e2cce85651e8f" translate="yes" xml:space="preserve">
          <source>An incompatible cast was attempted.</source>
          <target state="translated">Se intentó un reparto incompatible.</target>
        </trans-unit>
        <trans-unit id="890a9e60cf506bc22c185b6e6eaa04f58d616d41" translate="yes" xml:space="preserve">
          <source>An incorrect number of generic arguments were provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffd66f253621f41011842348ba63bd0896ca4ec" translate="yes" xml:space="preserve">
          <source>An incorrect visibility restriction was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9900f693c2e1b5744366ed3318b36a718fcf770" translate="yes" xml:space="preserve">
          <source>An infinite endpoint. Indicates that there is no bound in this direction.</source>
          <target state="translated">Un punto final infinito.Indica que no hay ningún límite en esta dirección.</target>
        </trans-unit>
        <trans-unit id="f2f7f4bb84396a832ec236ff6b02e7c811f6141c" translate="yes" xml:space="preserve">
          <source>An inherent implementation is defined as the sequence of the &lt;code&gt;impl&lt;/code&gt; keyword, generic type declarations, a path to a nominal type, a where clause, and a bracketed set of associable items.</source>
          <target state="translated">Una implementaci&amp;oacute;n inherente se define como la secuencia de la palabra clave &lt;code&gt;impl&lt;/code&gt; , declaraciones de tipo gen&amp;eacute;rico, una ruta a un tipo nominal, una cl&amp;aacute;usula where y un conjunto de elementos asociables entre corchetes.</target>
        </trans-unit>
        <trans-unit id="5e6c6207529ca7e8b2b41ce66b1a1399c7520ae8" translate="yes" xml:space="preserve">
          <source>An inherent implementation was defined for a type outside the current crate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506894b4a872753e6bf88eaab162c1ca6bc0d7d6" translate="yes" xml:space="preserve">
          <source>An inherent implementation was defined for something which isn't a struct, enum, union, or trait object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110853947b6a8113db0327e6e5f3081c7c63d981" translate="yes" xml:space="preserve">
          <source>An inherent implementation was marked unsafe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3f4eca6453d0b265cd70c611dfbbd1e320cc15" translate="yes" xml:space="preserve">
          <source>An inner doc comment was used in an invalid context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaca7587ab66134ebcc5c9d98dddc7a6d1b623fb" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;DirEntry&lt;/code&gt; represents an entry inside of a directory on the filesystem. Each entry can be inspected via methods to learn about the full path or possibly other metadata through per-platform extension traits.</source>
          <target state="translated">Una instancia de &lt;code&gt;DirEntry&lt;/code&gt; representa una entrada dentro de un directorio en el sistema de archivos. Cada entrada se puede inspeccionar a trav&amp;eacute;s de m&amp;eacute;todos para conocer la ruta completa o posiblemente otros metadatos a trav&amp;eacute;s de caracter&amp;iacute;sticas de extensi&amp;oacute;n por plataforma.</target>
        </trans-unit>
        <trans-unit id="1fbc585e6de8e6bcaf356cf9f8023d57041f924e" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Layout&lt;/code&gt; describes a particular layout of memory. You build a &lt;code&gt;Layout&lt;/code&gt; up as an input to give to an allocator.</source>
          <target state="translated">Una instancia de &lt;code&gt;Layout&lt;/code&gt; describe un dise&amp;ntilde;o particular de memoria. Usted crea un &lt;code&gt;Layout&lt;/code&gt; como entrada para d&amp;aacute;rselo a un asignador.</target>
        </trans-unit>
        <trans-unit id="b190fdcf2cbfcbc1313cacaba62570eb78c828a4" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;code&gt;File&lt;/code&gt; can be read and/or written depending on what options it was opened with. Files also implement &lt;a href=&quot;../io/trait.seek&quot;&gt;&lt;code&gt;Seek&lt;/code&gt;&lt;/a&gt; to alter the logical cursor that the file contains internally.</source>
          <target state="translated">Una instancia de un &lt;code&gt;File&lt;/code&gt; se puede leer y / o escribir dependiendo de las opciones con las que se abri&amp;oacute;. Los archivos tambi&amp;eacute;n implementan &lt;a href=&quot;../io/trait.seek&quot;&gt; &lt;code&gt;Seek&lt;/code&gt; &lt;/a&gt; para alterar el cursor l&amp;oacute;gico que contiene el archivo internamente.</target>
        </trans-unit>
        <trans-unit id="4022f91af4f41ee796badb832f4f942b0dd3666a" translate="yes" xml:space="preserve">
          <source>An integer (&lt;code&gt;i*&lt;/code&gt;/&lt;code&gt;u*&lt;/code&gt;), floating point value (&lt;code&gt;f*&lt;/code&gt;), or raw pointer obtained from &lt;a href=&quot;http://llvm.org/docs/LangRef.html#undefined-values&quot;&gt;uninitialized memory&lt;/a&gt;, or uninitialized memory in a &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4459da0411b29eac8078029351bbb76f00d3282" translate="yes" xml:space="preserve">
          <source>An integer &lt;code&gt;.N&lt;/code&gt;:</source>
          <target state="translated">Un entero &lt;code&gt;.N&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="908da2eafc06fe6ced0bd1b3ca560bd9a2e72aa4" translate="yes" xml:space="preserve">
          <source>An integer or name followed by dollar sign &lt;code&gt;.N$&lt;/code&gt;:</source>
          <target state="translated">Un n&amp;uacute;mero entero o un nombre seguido de un signo de d&amp;oacute;lar. &lt;code&gt;.N$&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d652b1aec455b9a1399356989d1b6e7890b6c2cf" translate="yes" xml:space="preserve">
          <source>An integer that is known not to equal zero.</source>
          <target state="translated">Un entero que se sabe que no es igual a cero.</target>
        </trans-unit>
        <trans-unit id="23e972eabcd349c601672f385dadf7a600ee560a" translate="yes" xml:space="preserve">
          <source>An integer type which can be safely shared between threads.</source>
          <target state="translated">Un tipo entero que puede ser compartido con seguridad entre hilos.</target>
        </trans-unit>
        <trans-unit id="7738cea88357f8684a294b13f985119f27bc796a" translate="yes" xml:space="preserve">
          <source>An intensity number from the user, which is specified when they request a workout to indicate whether they want a low-intensity workout or a high-intensity workout</source>
          <target state="translated">Un número de intensidad del usuario,que se especifica cuando solicita un entrenamiento para indicar si quiere un entrenamiento de baja intensidad o uno de alta intensidad</target>
        </trans-unit>
        <trans-unit id="ff8d693a0bfcced7e1e8e51c1bf01052178e048b" translate="yes" xml:space="preserve">
          <source>An interface for dealing with iterators.</source>
          <target state="translated">Una interfaz para tratar con los iteradores.</target>
        </trans-unit>
        <trans-unit id="22e5648e52f9b0472e117269511bde8fb3cbbf6f" translate="yes" xml:space="preserve">
          <source>An internet socket address, either IPv4 or IPv6.</source>
          <target state="translated">Una dirección de socorro de Internet,ya sea IPv4 o IPv6.</target>
        </trans-unit>
        <trans-unit id="854d43a414a4b60a4e76077619d9f002787508df" translate="yes" xml:space="preserve">
          <source>An intrinsic is a function available for use in a given programming language whose implementation is handled specially by the compiler. In order to fix this error, just declare a function.</source>
          <target state="translated">Una intrínseca es una función disponible para su uso en un determinado lenguaje de programación cuya implementación es manejada especialmente por el compilador.Para corregir este error,basta con declarar una función.</target>
        </trans-unit>
        <trans-unit id="0e442cff22b27f71ce2c2ce15532cf3a41eb6841" translate="yes" xml:space="preserve">
          <source>An intrinsic is a function available for use in a given programming language whose implementation is handled specially by the compiler. In order to fix this error, just declare a function. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ed3f185066b7aaf4eec2eeca59086039ee692c" translate="yes" xml:space="preserve">
          <source>An intrinsic was declared without being a function.</source>
          <target state="translated">Se declaró una intrínseca sin ser una función.</target>
        </trans-unit>
        <trans-unit id="4c83eebd7c224b0a142aede3c5ec04a66d472405" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;self&lt;/code&gt; import was made.</source>
          <target state="translated">Se realiz&amp;oacute; una &lt;code&gt;self&lt;/code&gt; no v&amp;aacute;lida .</target>
        </trans-unit>
        <trans-unit id="82555301e5ea450f3a2a3340087105706f32de3a" translate="yes" xml:space="preserve">
          <source>An invalid cast was attempted.</source>
          <target state="translated">Se intentó una escayola inválida.</target>
        </trans-unit>
        <trans-unit id="03180be565388e3e9bc81cc13b92d02f2dbb9f6d" translate="yes" xml:space="preserve">
          <source>An invalid input operand constraint was passed to the &lt;code&gt;llvm_asm&lt;/code&gt; macro (third line).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5bb35712d552d14538dee6299b1809a75931fc" translate="yes" xml:space="preserve">
          <source>An invalid left-hand side expression was used on an assignment operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8cc59d01bca4002162d9e4ee195fba0f67e5eb" translate="yes" xml:space="preserve">
          <source>An invalid lint attribute has been given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45ca9e360736d39967051ef73e9a974697dc538" translate="yes" xml:space="preserve">
          <source>An invalid lint attribute has been given. Erroneous code example:</source>
          <target state="translated">Se ha dado un atributo de pelusa inválido.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="7afc8f120588eda0a5e01c8b52b3b7d783b74baf" translate="yes" xml:space="preserve">
          <source>An invalid meta-item was used inside an attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c4fb826f13d2ae3a70efbf639e550ce3d899e" translate="yes" xml:space="preserve">
          <source>An invalid name was used for a lifetime parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca168fbcb5da1644a515cf8441248863a3fd9251" translate="yes" xml:space="preserve">
          <source>An invalid number of arguments was given when calling a closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d49fec3c8ae574bb2ce4cd00863f78f3ce2c2fa" translate="yes" xml:space="preserve">
          <source>An invalid number of arguments was passed when calling a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1272a4d79b74d35bfe264d5c84667b1b0428f6" translate="yes" xml:space="preserve">
          <source>An invalid number of type parameters was given to an intrinsic function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8a5020b458d81f8e941d19c95ab2d679341b81" translate="yes" xml:space="preserve">
          <source>An invalid syntax was passed to the second argument of an &lt;code&gt;llvm_asm&lt;/code&gt; macro line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a410192aae8c1c9efe2c778af8302870ee71f57b" translate="yes" xml:space="preserve">
          <source>An item usage is ambiguous.</source>
          <target state="translated">El uso de un artículo es ambiguo.</target>
        </trans-unit>
        <trans-unit id="b5e68274b8d847f0c6926331f1e39e6fca71b9fd" translate="yes" xml:space="preserve">
          <source>An item was added on a negative impl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cc9e350b081b1e617d64ca09e5f7073fb94361" translate="yes" xml:space="preserve">
          <source>An item which isn't a unit struct, a variant, nor a constant has been used as a match pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44509fac7828279e76e0b5a94ab5171cb157956" translate="yes" xml:space="preserve">
          <source>An iterator able to yield elements from both ends.</source>
          <target state="translated">Un iterador capaz de producir elementos de ambos extremos.</target>
        </trans-unit>
        <trans-unit id="a79f20c0e35d15b48bb2797970d35b63c3629a31" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to &lt;a href=&quot;#method.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; that holds internal state and produces a new iterator.</source>
          <target state="translated">Un adaptador de iterador similar a &lt;a href=&quot;#method.fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt; que mantiene el estado interno y produce un nuevo iterador.</target>
        </trans-unit>
        <trans-unit id="2e43d9b7345ad03f5ced2dcd31e711c42d237584" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to &lt;a href=&quot;../../../iter/trait.iterator#method.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; that holds internal state and produces a new iterator. &lt;a href=&quot;../../../iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773601e7cb6c7b2cb91410d40c83395d2f5a2aba" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to &lt;a href=&quot;../../iter/trait.iterator#method.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; that holds internal state and produces a new iterator. &lt;a href=&quot;../../iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c9fb31213d58aac0ffdd0c9178139dd13dff6e" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to &lt;a href=&quot;../iter/trait.iterator#method.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; that holds internal state and produces a new iterator. &lt;a href=&quot;../iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabf413b8f61a0afd7c5f9433f5804c39c0d2697" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to &lt;a href=&quot;iter/trait.iterator#method.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; that holds internal state and produces a new iterator. &lt;a href=&quot;iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2199c2efde5116c38701a8b589ced48670c6b8" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; that holds internal state and produces a new iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1597ff1cbb678de32b1737072c75c63f3cb34a01" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; that holds internal state and produces a new iterator. &lt;a href=&quot;trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7d60e521538ea62f876d5c70c545dc3addec69" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to [&lt;code&gt;fold&lt;/code&gt;] that holds internal state and produces a new iterator. &lt;a href=&quot;../../../iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un adaptador de iterador similar a [ &lt;code&gt;fold&lt;/code&gt; ] que mantiene el estado interno y produce un nuevo iterador. &lt;a href=&quot;../../../iter/trait.iterator#method.scan&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a650dc159a2fda49c7766be96685d0f790f13a0" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to [&lt;code&gt;fold&lt;/code&gt;] that holds internal state and produces a new iterator. &lt;a href=&quot;../../iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un adaptador de iterador similar a [ &lt;code&gt;fold&lt;/code&gt; ] que mantiene el estado interno y produce un nuevo iterador. &lt;a href=&quot;../../iter/trait.iterator#method.scan&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e898bdaf274bb7754df65ccfb97b6bd04568d2d" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to [&lt;code&gt;fold&lt;/code&gt;] that holds internal state and produces a new iterator. &lt;a href=&quot;../iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un adaptador de iterador similar a [ &lt;code&gt;fold&lt;/code&gt; ] que mantiene el estado interno y produce un nuevo iterador. &lt;a href=&quot;../iter/trait.iterator#method.scan&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2996431c0507a4a842fe331c88d08e4bb45dcce" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to [&lt;code&gt;fold&lt;/code&gt;] that holds internal state and produces a new iterator. &lt;a href=&quot;iter/trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un adaptador de iterador similar a [ &lt;code&gt;fold&lt;/code&gt; ] que mantiene el estado interno y produce un nuevo iterador. &lt;a href=&quot;iter/trait.iterator#method.scan&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae7a2ef58596a8f574790d9946d5c7b0d3e0427f" translate="yes" xml:space="preserve">
          <source>An iterator adaptor similar to [&lt;code&gt;fold&lt;/code&gt;] that holds internal state and produces a new iterator. &lt;a href=&quot;trait.iterator#method.scan&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un adaptador de iterador similar a [ &lt;code&gt;fold&lt;/code&gt; ] que mantiene el estado interno y produce un nuevo iterador. &lt;a href=&quot;trait.iterator#method.scan&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ad9db34c1f6ac7b97514886d275ac1277b33c65" translate="yes" xml:space="preserve">
          <source>An iterator for stepping iterators by a custom amount.</source>
          <target state="translated">Un iterador para el paso de los iteradores por una cantidad personalizada.</target>
        </trans-unit>
        <trans-unit id="25debeb61a2ecc2a431e58a161838a09b915993a" translate="yes" xml:space="preserve">
          <source>An iterator has a method, &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;, which when called, returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;Item&amp;gt;&lt;/code&gt;. &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; will return &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(Item)&lt;/code&gt;&lt;/a&gt; as long as there are elements, and once they've all been exhausted, will return &lt;code&gt;None&lt;/code&gt; to indicate that iteration is finished. Individual iterators may choose to resume iteration, and so calling &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; again may or may not eventually start returning &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(Item)&lt;/code&gt;&lt;/a&gt; again at some point (for example, see &lt;a href=&quot;../sync/mpsc/struct.tryiter&quot;&gt;&lt;code&gt;TryIter&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb45f260d1289d4ddcd0c03f93e3cf026ce37b59" translate="yes" xml:space="preserve">
          <source>An iterator has a method, &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;, which when called, returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;Item&amp;gt;&lt;/code&gt;. &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;Some(Item)&lt;/code&gt; as long as there are elements, and once they've all been exhausted, will return &lt;code&gt;None&lt;/code&gt; to indicate that iteration is finished. Individual iterators may choose to resume iteration, and so calling &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; again may or may not eventually start returning &lt;code&gt;Some(Item)&lt;/code&gt; again at some point.</source>
          <target state="translated">Un iterador tiene un m&amp;eacute;todo, &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; , que cuando se llama, devuelve una &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;Item&amp;gt;&lt;/code&gt; . &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; devolver&amp;aacute; &lt;code&gt;Some(Item)&lt;/code&gt; siempre que haya elementos, y una vez que se hayan agotado, devolver&amp;aacute; &lt;code&gt;None&lt;/code&gt; para indicar que la iteraci&amp;oacute;n ha finalizado. Los iteradores individuales pueden optar por reanudar la iteraci&amp;oacute;n, por lo que llamar a &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; nuevamente puede o no comenzar a devolver &lt;code&gt;Some(Item)&lt;/code&gt; nuevamente en alg&amp;uacute;n momento.</target>
        </trans-unit>
        <trans-unit id="e31522f53dadc02b86f505f8fd01b611f6643e8b" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error.</source>
          <target state="translated">Un método de iterador que aplica una función falible a cada elemento del iterador,deteniéndose en el primer error y devolviendo ese error.</target>
        </trans-unit>
        <trans-unit id="eacb362cba384eacfe624626c78db089eba4406f" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error. &lt;a href=&quot;../../../iter/trait.iterator#method.try_for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n falible a cada elemento en el iterador, deteni&amp;eacute;ndose en el primer error y devolviendo ese error. &lt;a href=&quot;../../../iter/trait.iterator#method.try_for_each&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca00c28d4b5a3134e86a3f660b2fa54093267401" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error. &lt;a href=&quot;../../iter/trait.iterator#method.try_for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n falible a cada elemento en el iterador, deteni&amp;eacute;ndose en el primer error y devolviendo ese error. &lt;a href=&quot;../../iter/trait.iterator#method.try_for_each&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1489bd41c8525121e45484ed737c4171e974de0" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error. &lt;a href=&quot;../iter/trait.iterator#method.try_for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n falible a cada elemento en el iterador, deteni&amp;eacute;ndose en el primer error y devolviendo ese error. &lt;a href=&quot;../iter/trait.iterator#method.try_for_each&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33c934134cacb66bd994968f86b620a631318b91" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error. &lt;a href=&quot;iter/trait.iterator#method.try_for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n falible a cada elemento en el iterador, deteni&amp;eacute;ndose en el primer error y devolviendo ese error. &lt;a href=&quot;iter/trait.iterator#method.try_for_each&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19bfdbf913f10e6bc3776600b92d9135c032b4bf" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error. &lt;a href=&quot;trait.iterator#method.try_for_each&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n falible a cada elemento en el iterador, deteni&amp;eacute;ndose en el primer error y devolviendo ese error. &lt;a href=&quot;trait.iterator#method.try_for_each&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b59c2e3f2042ddc5a53ef66ef4d7b79f1fb5301" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function as long as it returns successfully, producing a single, final value.</source>
          <target state="translated">Un método de iterador que aplica una función siempre y cuando regrese con éxito,produciendo un único valor final.</target>
        </trans-unit>
        <trans-unit id="117fd8070a23ba82f744d90c448b1e5813b4d282" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function as long as it returns successfully, producing a single, final value. &lt;a href=&quot;../../../iter/trait.iterator#method.try_fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n siempre que regrese correctamente, produciendo un &amp;uacute;nico valor final. &lt;a href=&quot;../../../iter/trait.iterator#method.try_fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ee1c8bd3a25e2ebef94ba8c0d6405c27ca7226b" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function as long as it returns successfully, producing a single, final value. &lt;a href=&quot;../../iter/trait.iterator#method.try_fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n siempre que regrese correctamente, produciendo un &amp;uacute;nico valor final. &lt;a href=&quot;../../iter/trait.iterator#method.try_fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c658b3e624db269551bf93242408ef5c42e5fea9" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function as long as it returns successfully, producing a single, final value. &lt;a href=&quot;../iter/trait.iterator#method.try_fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n siempre que regrese correctamente, produciendo un &amp;uacute;nico valor final. &lt;a href=&quot;../iter/trait.iterator#method.try_fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a5362af3855236bb52258529c3514119a249eab" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function as long as it returns successfully, producing a single, final value. &lt;a href=&quot;iter/trait.iterator#method.try_fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n siempre que regrese correctamente, produciendo un &amp;uacute;nico valor final. &lt;a href=&quot;iter/trait.iterator#method.try_fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22eb23eabd6f5888b0f6233654a7d6b3279d1ac7" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function as long as it returns successfully, producing a single, final value. &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n siempre que regrese correctamente, produciendo un &amp;uacute;nico valor final. &lt;a href=&quot;trait.iterator#method.try_fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d551693bdcaedeac0547d596669a3c5c5179447" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function, producing a single, final value.</source>
          <target state="translated">Un método iterativo que aplica una función,produciendo un único valor final.</target>
        </trans-unit>
        <trans-unit id="31400216ecaba12666aff645bec4ca26c5ba43ea" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function, producing a single, final value. &lt;a href=&quot;../../../iter/trait.iterator#method.fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n y produce un &amp;uacute;nico valor final. &lt;a href=&quot;../../../iter/trait.iterator#method.fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="958c160388552a918125f55bba9e086f54f71484" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function, producing a single, final value. &lt;a href=&quot;../../iter/trait.iterator#method.fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n y produce un &amp;uacute;nico valor final. &lt;a href=&quot;../../iter/trait.iterator#method.fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5eddc2fc826e92b735803187068d19d4e441542e" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function, producing a single, final value. &lt;a href=&quot;../iter/trait.iterator#method.fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n y produce un &amp;uacute;nico valor final. &lt;a href=&quot;../iter/trait.iterator#method.fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="062b8bbee99bc123d00bd6ddb37a2091ecaee57f" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function, producing a single, final value. &lt;a href=&quot;iter/trait.iterator#method.fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n y produce un &amp;uacute;nico valor final. &lt;a href=&quot;iter/trait.iterator#method.fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="760ff7a591ac95e16cd7be5b9667ba1c820bc96e" translate="yes" xml:space="preserve">
          <source>An iterator method that applies a function, producing a single, final value. &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que aplica una funci&amp;oacute;n y produce un &amp;uacute;nico valor final. &lt;a href=&quot;trait.iterator#method.fold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4cfaa2271cf9f33fe50ead23cff9cf9b29c2c97" translate="yes" xml:space="preserve">
          <source>An iterator method that reduces the iterator's elements to a single, final value, starting from the back.</source>
          <target state="translated">Un método de iterador que reduce los elementos del iterador a un único valor final,empezando por atrás.</target>
        </trans-unit>
        <trans-unit id="c9c712bf49f750f238c96785e7e704d976a72f0e" translate="yes" xml:space="preserve">
          <source>An iterator method that reduces the iterator's elements to a single, final value, starting from the back. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que reduce los elementos del iterador a un &amp;uacute;nico valor final, comenzando desde atr&amp;aacute;s. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b44201682fdbcad5c8da77522b47e4b7fc4a3dc1" translate="yes" xml:space="preserve">
          <source>An iterator method that reduces the iterator's elements to a single, final value, starting from the back. &lt;a href=&quot;../iter/trait.doubleendediterator#method.rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que reduce los elementos del iterador a un &amp;uacute;nico valor final, comenzando desde atr&amp;aacute;s. &lt;a href=&quot;../iter/trait.doubleendediterator#method.rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc53bae551d78289c9703ed2a397d1c3b35f285e" translate="yes" xml:space="preserve">
          <source>An iterator method that reduces the iterator's elements to a single, final value, starting from the back. &lt;a href=&quot;iter/trait.doubleendediterator#method.rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que reduce los elementos del iterador a un &amp;uacute;nico valor final, comenzando desde atr&amp;aacute;s. &lt;a href=&quot;iter/trait.doubleendediterator#method.rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="836f4f2e3fffc61e14c382d8890f27b7a367beeb" translate="yes" xml:space="preserve">
          <source>An iterator method that reduces the iterator's elements to a single, final value, starting from the back. &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Un m&amp;eacute;todo de iterador que reduce los elementos del iterador a un &amp;uacute;nico valor final, comenzando desde atr&amp;aacute;s. &lt;a href=&quot;trait.doubleendediterator#method.rfold&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2acafc012d5ccce6e7696757b55337a6d4029a3" translate="yes" xml:space="preserve">
          <source>An iterator of &lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt; over the string encoded as UTF-16.</source>
          <target state="translated">Un iterador de &lt;a href=&quot;../primitive.u16&quot;&gt; &lt;code&gt;u16&lt;/code&gt; &lt;/a&gt; sobre la cadena codificada como UTF-16.</target>
        </trans-unit>
        <trans-unit id="143fd7db785baccd8bb8346c04f451192a09006a" translate="yes" xml:space="preserve">
          <source>An iterator over &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and its ancestors.</source>
          <target state="translated">Un iterador sobre &lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; y sus ancestros.</target>
        </trans-unit>
        <trans-unit id="554dfaab9d83066a6b95354b7620556448cb3449" translate="yes" xml:space="preserve">
          <source>An iterator over &lt;a href=&quot;trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Un iterador sobre &lt;a href=&quot;trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aef63e9607a8ec1f5f596fca15621080fd76af72" translate="yes" xml:space="preserve">
          <source>An iterator over &lt;code&gt;u8&lt;/code&gt; values of a reader.</source>
          <target state="translated">Un iterador sobre los valores &lt;code&gt;u8&lt;/code&gt; de un lector.</target>
        </trans-unit>
        <trans-unit id="34e3362281b15b977d0a61ac8c5fcd00a6511c9c" translate="yes" xml:space="preserve">
          <source>An iterator over a mutable reference to the &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; variant of an &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre una referencia mutable a la variante &lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt; de una &lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c74c624cf35ae570735e4b7f11b57db582409878" translate="yes" xml:space="preserve">
          <source>An iterator over a mutable reference to the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; variant of a &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre una referencia mutable a la variante &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; de un &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4de84f3b1b68ec9fb8cadcc939ec573f412a94a" translate="yes" xml:space="preserve">
          <source>An iterator over a reference to the &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; variant of an &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre una referencia a la variante &lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt; de una &lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cd69f81931caab64a8dceae843c42a8b1faa3e1" translate="yes" xml:space="preserve">
          <source>An iterator over a reference to the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; variant of a &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre una referencia a la variante &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; de un &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3dc6f80802c085f551ddaf86ddf6e8acc1dc310c" translate="yes" xml:space="preserve">
          <source>An iterator over a slice in (non-overlapping) chunks (&lt;code&gt;N&lt;/code&gt; elements at a time), starting at the beginning of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2aa423fb037ba3e42490b4a4869e7a989a8b38" translate="yes" xml:space="preserve">
          <source>An iterator over a slice in (non-overlapping) chunks (&lt;code&gt;chunk_size&lt;/code&gt; elements at a time), starting at the beginning of the slice.</source>
          <target state="translated">Un iterador sobre un segmento en trozos (no superpuestos) ( elementos &lt;code&gt;chunk_size&lt;/code&gt; a la vez), comenzando al principio del segmento.</target>
        </trans-unit>
        <trans-unit id="51ba4c3e078709e91115e94720e3b32e5a3519a2" translate="yes" xml:space="preserve">
          <source>An iterator over a slice in (non-overlapping) chunks (&lt;code&gt;chunk_size&lt;/code&gt; elements at a time), starting at the end of the slice.</source>
          <target state="translated">Un iterador sobre un segmento en trozos (no superpuestos) ( elementos &lt;code&gt;chunk_size&lt;/code&gt; a la vez), comenzando al final del segmento.</target>
        </trans-unit>
        <trans-unit id="d8851ef0d971f6cf3a6b130edee19da50b2e6eeb" translate="yes" xml:space="preserve">
          <source>An iterator over a slice in (non-overlapping) mutable chunks (&lt;code&gt;N&lt;/code&gt; elements at a time), starting at the beginning of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b727a794715c05c6c1c0cd0cd6149d40bd7c3a04" translate="yes" xml:space="preserve">
          <source>An iterator over a slice in (non-overlapping) mutable chunks (&lt;code&gt;chunk_size&lt;/code&gt; elements at a time), starting at the beginning of the slice.</source>
          <target state="translated">Un iterador sobre un segmento en trozos mutables (no superpuestos) ( elementos &lt;code&gt;chunk_size&lt;/code&gt; a la vez), comenzando al principio del segmento.</target>
        </trans-unit>
        <trans-unit id="590e04be01e914183b27d18dc8eff4e3ae5668f0" translate="yes" xml:space="preserve">
          <source>An iterator over a slice in (non-overlapping) mutable chunks (&lt;code&gt;chunk_size&lt;/code&gt; elements at a time), starting at the end of the slice.</source>
          <target state="translated">Un iterador sobre un segmento en trozos mutables (no superpuestos) ( elementos &lt;code&gt;chunk_size&lt;/code&gt; a la vez), comenzando al final del segmento.</target>
        </trans-unit>
        <trans-unit id="68ad6606a48079fe489aab3faf8c6e3a26b992ca" translate="yes" xml:space="preserve">
          <source>An iterator over a snapshot of the environment variables of this process.</source>
          <target state="translated">Un iterador sobre una instantánea de las variables de entorno de este proceso.</target>
        </trans-unit>
        <trans-unit id="a94e3f24bb1eb1ba2fd58ebddc9b4d9dba8309a8" translate="yes" xml:space="preserve">
          <source>An iterator over a sub-range of entries in a &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre un &lt;code&gt;BTreeMap&lt;/code&gt; de entradas en un BTreeMap .</target>
        </trans-unit>
        <trans-unit id="d03569c5a9963027ad22996c9e0b70fb1554a87f" translate="yes" xml:space="preserve">
          <source>An iterator over a sub-range of items in a &lt;code&gt;BTreeSet&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre un &lt;code&gt;BTreeSet&lt;/code&gt; de elementos en un BTreeSet .</target>
        </trans-unit>
        <trans-unit id="ce0b01e77f645194e2b6b751858aec640161f669" translate="yes" xml:space="preserve">
          <source>An iterator over an &lt;a href=&quot;trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; and its sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19c5dd669fe6f36f81a65798f7219d0079a694d" translate="yes" xml:space="preserve">
          <source>An iterator over incoming connections to a &lt;a href=&quot;struct.unixlistener&quot;&gt;&lt;code&gt;UnixListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre conexiones entrantes a &lt;a href=&quot;struct.unixlistener&quot;&gt; &lt;code&gt;UnixListener&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d7488e2fccb6b43b42e67c9ea07cad9428b393b" translate="yes" xml:space="preserve">
          <source>An iterator over messages on a &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt;, created by &lt;a href=&quot;struct.receiver#method.iter&quot;&gt;&lt;code&gt;iter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre mensajes en un &lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt; , creado por &lt;a href=&quot;struct.receiver#method.iter&quot;&gt; &lt;code&gt;iter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="034a20701e995ae32aa63104e2d5dff0ab5db4e6" translate="yes" xml:space="preserve">
          <source>An iterator over overlapping subslices of length &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre sublices superpuestas de &lt;code&gt;size&lt;/code&gt; de longitud .</target>
        </trans-unit>
        <trans-unit id="ba3bd9fb0e96735ece0b2069d478b585f0d8e7fe" translate="yes" xml:space="preserve">
          <source>An iterator over subslices separated by elements that match a predicate function, limited to a given number of splits, starting from the end of the slice.</source>
          <target state="translated">Un iterador sobre subcortes separados por elementos que coinciden con una función predicada,limitado a un número determinado de divisiones,empezando por el final del corte.</target>
        </trans-unit>
        <trans-unit id="24b57b67d67808582aa0647134f85aea733abfd0" translate="yes" xml:space="preserve">
          <source>An iterator over subslices separated by elements that match a predicate function, limited to a given number of splits.</source>
          <target state="translated">Un iterador sobre subcortes separados por elementos que coinciden con una función predicada,limitado a un número determinado de divisiones.</target>
        </trans-unit>
        <trans-unit id="7f751853b227571562b0215c1381b97b30029d0a" translate="yes" xml:space="preserve">
          <source>An iterator over subslices separated by elements that match a predicate function, starting from the end of the slice.</source>
          <target state="translated">Un iterador sobre subcortes separados por elementos que coinciden con una función predicada,empezando por el final del corte.</target>
        </trans-unit>
        <trans-unit id="6a41aa74d34fd0ce2985da917544c4f35cf020f9" translate="yes" xml:space="preserve">
          <source>An iterator over subslices separated by elements that match a predicate function.</source>
          <target state="translated">Un iterador sobre subcortes separados por elementos que coinciden con una función predicada.</target>
        </trans-unit>
        <trans-unit id="e1f02e8fb3b3f7adf4ed8a711ed0b9c2ca4cda3e" translate="yes" xml:space="preserve">
          <source>An iterator over substrings of &lt;code&gt;self&lt;/code&gt;, separated by characters matched by a pattern and yielded in reverse order.</source>
          <target state="translated">Un iterador sobre subcadenas de &lt;code&gt;self&lt;/code&gt; , separadas por caracteres que coinciden con un patr&amp;oacute;n y se obtienen en orden inverso.</target>
        </trans-unit>
        <trans-unit id="61c715ce9520941f9108744caef70fb9d86c6529" translate="yes" xml:space="preserve">
          <source>An iterator over substrings of the given string slice, separated by a pattern, restricted to returning at most &lt;code&gt;n&lt;/code&gt; items.</source>
          <target state="translated">Un iterador sobre subcadenas del segmento de cadena dado, separado por un patr&amp;oacute;n, restringido a devolver como m&amp;aacute;ximo &lt;code&gt;n&lt;/code&gt; elementos.</target>
        </trans-unit>
        <trans-unit id="44ffc34ab178359db4b3169f249d963fd153689b" translate="yes" xml:space="preserve">
          <source>An iterator over substrings of the given string slice, separated by characters matched by a pattern and yielded in reverse order.</source>
          <target state="translated">Un iterador sobre subcadenas de la rebanada de la cadena dada,separadas por caracteres coincidentes con un patrón y cedidas en orden inverso.</target>
        </trans-unit>
        <trans-unit id="f65e61a07278abe6a5b629cd21c031c73243b0de" translate="yes" xml:space="preserve">
          <source>An iterator over substrings of the given string slice, separated by characters matched by a pattern.</source>
          <target state="translated">Un iterador sobre subcadenas de la rebanada de la cadena dada,separadas por caracteres coincidentes con un patrón.</target>
        </trans-unit>
        <trans-unit id="537813cfc78da0abdca4b435c9341ecf42939302" translate="yes" xml:space="preserve">
          <source>An iterator over substrings of this string slice, separated by a pattern, starting from the end of the string, restricted to returning at most &lt;code&gt;n&lt;/code&gt; items.</source>
          <target state="translated">Un iterador sobre subcadenas de este segmento de cadena, separado por un patr&amp;oacute;n, comenzando desde el final de la cadena, restringido a devolver como m&amp;aacute;ximo &lt;code&gt;n&lt;/code&gt; elementos.</target>
        </trans-unit>
        <trans-unit id="02d9a6b83a0665db88c523e6eaff227f1f6e5ae9" translate="yes" xml:space="preserve">
          <source>An iterator over substrings of this string slice, separated by characters matched by a pattern.</source>
          <target state="translated">Un iterador sobre las subcadenas de este trozo de cadena,separadas por caracteres coincidentes con un patrón.</target>
        </trans-unit>
        <trans-unit id="a2052e6e3b1c0165802cd6417a16b0838afc588a" translate="yes" xml:space="preserve">
          <source>An iterator over substrings of this string slice, separated by characters matched by a pattern. Differs from the iterator produced by &lt;code&gt;split&lt;/code&gt; in that &lt;code&gt;split_inclusive&lt;/code&gt; leaves the matched part as the terminator of the substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef8a4c9f98576b84451f0afffc7c456b9562b40" translate="yes" xml:space="preserve">
          <source>An iterator over the &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice, and their positions.</source>
          <target state="translated">Un iterador sobre el &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; es de un trozo de cuerda, y sus posiciones.</target>
        </trans-unit>
        <trans-unit id="6dbafa08f3b2b12e80351b71ca200a8528053590" translate="yes" xml:space="preserve">
          <source>An iterator over the &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice.</source>
          <target state="translated">Un iterador sobre el &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; es de un trozo de cuerda.</target>
        </trans-unit>
        <trans-unit id="94f1d147d9aa55e9343a89220481dd294b3c1ca7" translate="yes" xml:space="preserve">
          <source>An iterator over the &lt;a href=&quot;enum.component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;s of a &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;, as &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slices.</source>
          <target state="translated">Un iterador sobre los &lt;a href=&quot;enum.component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; &lt;/a&gt; de una &lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; , como cortes &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81b7c7eac770fb32d5f49a8fa6788046e188a635" translate="yes" xml:space="preserve">
          <source>An iterator over the &lt;a href=&quot;enum.component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;s of a &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre los &lt;a href=&quot;enum.component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; &lt;/a&gt; de una &lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0046da9ead2fd2c36a6a2fa82a2d2ece3e53ebf5" translate="yes" xml:space="preserve">
          <source>An iterator over the arguments of a process, yielding a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; value for each argument.</source>
          <target state="translated">Un iterador sobre los argumentos de un proceso, que produce un valor de &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; para cada argumento.</target>
        </trans-unit>
        <trans-unit id="ebb5d1c5d63504b0108ad325cad0bf7d2676c9ed" translate="yes" xml:space="preserve">
          <source>An iterator over the arguments of a process, yielding an &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; value for each argument.</source>
          <target state="translated">Un iterador sobre los argumentos de un proceso, que produce un valor &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; para cada argumento.</target>
        </trans-unit>
        <trans-unit id="db156c74a7f7733ec8d2fb32dcfb0fa41d392992" translate="yes" xml:space="preserve">
          <source>An iterator over the bytes of a string slice.</source>
          <target state="translated">Un iterador sobre los bytes de un trozo de cuerda.</target>
        </trans-unit>
        <trans-unit id="3d759394e80e7fa435aa3e0e0304961fda1ff609" translate="yes" xml:space="preserve">
          <source>An iterator over the command arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc24e95b2a3b7911eb4e4a74052e9fbce963a97d" translate="yes" xml:space="preserve">
          <source>An iterator over the command environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e870ff1a2a9d31100b2ac9cb6ffbae140349bbde" translate="yes" xml:space="preserve">
          <source>An iterator over the contents of an instance of &lt;code&gt;BufRead&lt;/code&gt; split on a particular byte.</source>
          <target state="translated">Un iterador sobre el contenido de una instancia de &lt;code&gt;BufRead&lt;/code&gt; dividido en un byte particular.</target>
        </trans-unit>
        <trans-unit id="df77d35e2c4e122e560661a4bc012ddb30bf89c7" translate="yes" xml:space="preserve">
          <source>An iterator over the disjoint matches of a pattern within &lt;code&gt;self&lt;/code&gt;, yielded in reverse order along with the index of the match.</source>
          <target state="translated">Un iterador sobre las coincidencias disjuntas de un patr&amp;oacute;n dentro de &lt;code&gt;self&lt;/code&gt; , arroj&amp;oacute; en orden inverso junto con el &amp;iacute;ndice de la coincidencia.</target>
        </trans-unit>
        <trans-unit id="f7d549ea470a7ac3f5b7f05549ca71296a3cf479" translate="yes" xml:space="preserve">
          <source>An iterator over the disjoint matches of a pattern within the given string slice.</source>
          <target state="translated">Un iterador sobre el desacoplamiento coincide con un patrón dentro del trozo de cuerda dado.</target>
        </trans-unit>
        <trans-unit id="4e8c4e320605a2ab4ab8ef1e11e40919b14ac665" translate="yes" xml:space="preserve">
          <source>An iterator over the disjoint matches of a pattern within this string slice as well as the index that the match starts at.</source>
          <target state="translated">Un iterador sobre las coincidencias de desarticulación de un patrón dentro de este corte de cuerda así como el índice en el que comienza la coincidencia.</target>
        </trans-unit>
        <trans-unit id="bf644211cc86eb9babefe771489adf416b34d943" translate="yes" xml:space="preserve">
          <source>An iterator over the disjoint matches of a pattern within this string slice, yielded in reverse order.</source>
          <target state="translated">Un iterador sobre la desarticulación coincide con un patrón dentro de esta rebanada de la cuerda,que se produce en orden inverso.</target>
        </trans-unit>
        <trans-unit id="a4b7288e219c65d73a3e6a54b4428c628926ca26" translate="yes" xml:space="preserve">
          <source>An iterator over the elements of a &lt;code&gt;BinaryHeap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre los elementos de un &lt;code&gt;BinaryHeap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60a4b99de7b2aa615fb862b4ef6662bf265a07b3" translate="yes" xml:space="preserve">
          <source>An iterator over the elements of a &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre los elementos de una &lt;code&gt;LinkedList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f97f18a1c5aa5746176c6f51c4eafd84be2fce3" translate="yes" xml:space="preserve">
          <source>An iterator over the elements of a &lt;code&gt;VecDeque&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre los elementos de un &lt;code&gt;VecDeque&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91db6e4ce90dbed18c33044e96c535db60789527" translate="yes" xml:space="preserve">
          <source>An iterator over the entries of a &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre las entradas de un &lt;code&gt;BTreeMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89075f098d105168914ad089684eab6ab82bd15c" translate="yes" xml:space="preserve">
          <source>An iterator over the entries of a &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre las entradas de un &lt;code&gt;HashMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6598ccbf021650c51246c68845640e9702eed23d" translate="yes" xml:space="preserve">
          <source>An iterator over the escaped version of a byte.</source>
          <target state="translated">Un iterador sobre la versión escapada de un byte.</target>
        </trans-unit>
        <trans-unit id="56eb86799cc14570dbdb72543cfaf21c05c1abe2" translate="yes" xml:space="preserve">
          <source>An iterator over the items of a &lt;code&gt;BTreeSet&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre los elementos de un &lt;code&gt;BTreeSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5fd2e8685f9eef9092473bf82703d995770cb96" translate="yes" xml:space="preserve">
          <source>An iterator over the items of a &lt;code&gt;HashSet&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre los elementos de un &lt;code&gt;HashSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8ce67dcd74b8165190d1c5586f09c2e5112934e" translate="yes" xml:space="preserve">
          <source>An iterator over the keys of a &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre las claves de un &lt;code&gt;BTreeMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ab13d3c24ccbf1b667994220cf1ff47151b518f" translate="yes" xml:space="preserve">
          <source>An iterator over the keys of a &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre las claves de un &lt;code&gt;HashMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdb3c68f21440272514f422ef05c2d524b30604a" translate="yes" xml:space="preserve">
          <source>An iterator over the lines of a string, as string slices.</source>
          <target state="translated">Un iterador sobre las líneas de una cuerda,como rebanadas de una cuerda.</target>
        </trans-unit>
        <trans-unit id="47a35066a39c1ed7b30ce9f4878b660c0a1e7474" translate="yes" xml:space="preserve">
          <source>An iterator over the lines of a string.</source>
          <target state="translated">Un iterador sobre las líneas de una cuerda.</target>
        </trans-unit>
        <trans-unit id="4cce7f5b74c3be64996357d548c448d7d2f4462a" translate="yes" xml:space="preserve">
          <source>An iterator over the lines of an instance of &lt;code&gt;BufRead&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre las l&amp;iacute;neas de una instancia de &lt;code&gt;BufRead&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc70893f07fa207bd53da767c3e857dc38ff1063" translate="yes" xml:space="preserve">
          <source>An iterator over the mutable subslices of the vector which are separated by elements that match &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ce41435c2e05d485713b80e3d67f84041531ab" translate="yes" xml:space="preserve">
          <source>An iterator over the non-ASCII-whitespace substrings of a string, separated by any amount of ASCII whitespace.</source>
          <target state="translated">Un iterador sobre las subcadenas del espacio blanco no-ASCII de una cadena,separadas por cualquier cantidad de espacio blanco ASCII.</target>
        </trans-unit>
        <trans-unit id="98639edcf075ef0bbd56694e6fd8f3ab5801fa3b" translate="yes" xml:space="preserve">
          <source>An iterator over the non-whitespace substrings of a string, separated by any amount of whitespace.</source>
          <target state="translated">Un iterador sobre las subcadenas no blancas de una cadena,separadas por cualquier cantidad de espacio blanco.</target>
        </trans-unit>
        <trans-unit id="f6d3a015ca8e0813b9d2a570221365ce0bb7b9f3" translate="yes" xml:space="preserve">
          <source>An iterator over the subslices of the vector which are separated by elements that match &lt;code&gt;pred&lt;/code&gt;, starting from the end of the slice.</source>
          <target state="translated">Un iterador sobre las sublicencias del vector que est&amp;aacute;n separadas por elementos que coinciden con &lt;code&gt;pred&lt;/code&gt; , comenzando desde el final del segmento.</target>
        </trans-unit>
        <trans-unit id="82456e1206b372bf7ea9d2f45cb440546d002943" translate="yes" xml:space="preserve">
          <source>An iterator over the subslices of the vector which are separated by elements that match &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre las sublicencias del vector que est&amp;aacute;n separadas por elementos que coinciden con &lt;code&gt;pred&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="551626c835c28af1e23d1b77fa736e5fca587fd5" translate="yes" xml:space="preserve">
          <source>An iterator over the value in &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; variant of an &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre el valor en &lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt; variante de una &lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ad0a62fd20b029d94f3ea06e170d6042fc65d39" translate="yes" xml:space="preserve">
          <source>An iterator over the value in a &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; variant of a &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador sobre el valor en una variante &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; de un &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06914df7e2feff75ffe46782ed50136c93cfaa1b" translate="yes" xml:space="preserve">
          <source>An iterator over the values of a &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre los valores de un &lt;code&gt;BTreeMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25879aa8de242e212254e6f312a25f5c0bfcd32b" translate="yes" xml:space="preserve">
          <source>An iterator over the values of a &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador sobre los valores de un &lt;code&gt;HashMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d5f58fc7c0c008712ec4e6eb8559eb52c39ce18" translate="yes" xml:space="preserve">
          <source>An iterator produced by &lt;code&gt;repeat_with()&lt;/code&gt; is not a &lt;a href=&quot;trait.doubleendediterator&quot;&gt;&lt;code&gt;DoubleEndedIterator&lt;/code&gt;&lt;/a&gt;. If you need &lt;code&gt;repeat_with()&lt;/code&gt; to return a &lt;a href=&quot;trait.doubleendediterator&quot;&gt;&lt;code&gt;DoubleEndedIterator&lt;/code&gt;&lt;/a&gt;, please open a GitHub issue explaining your use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ebf2a599d5ab4a921fbe241809a3d3600be3e5" translate="yes" xml:space="preserve">
          <source>An iterator produced by &lt;code&gt;repeat_with()&lt;/code&gt; is not a &lt;code&gt;DoubleEndedIterator&lt;/code&gt;. If you need &lt;code&gt;repeat_with()&lt;/code&gt; to return a &lt;code&gt;DoubleEndedIterator&lt;/code&gt;, please open a GitHub issue explaining your use case.</source>
          <target state="translated">Un iterador producido por &lt;code&gt;repeat_with()&lt;/code&gt; no es un &lt;code&gt;DoubleEndedIterator&lt;/code&gt; . Si necesita &lt;code&gt;repeat_with()&lt;/code&gt; para devolver un &lt;code&gt;DoubleEndedIterator&lt;/code&gt; , abra un problema de GitHub que explique su caso de uso.</target>
        </trans-unit>
        <trans-unit id="57a784df1f13cfa8da5679e054cc8033f6fabdb2" translate="yes" xml:space="preserve">
          <source>An iterator produced by calling &lt;code&gt;drain_filter&lt;/code&gt; on BTreeMap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8506c9bfb6eed5d29b225ea0333e263b7b9b1840" translate="yes" xml:space="preserve">
          <source>An iterator produced by calling &lt;code&gt;drain_filter&lt;/code&gt; on BTreeSet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51b3a9a86a32de916b3441f5cc928b34139d94d" translate="yes" xml:space="preserve">
          <source>An iterator produced by calling &lt;code&gt;drain_filter&lt;/code&gt; on LinkedList.</source>
          <target state="translated">Un iterador producido al llamar a &lt;code&gt;drain_filter&lt;/code&gt; en LinkedList.</target>
        </trans-unit>
        <trans-unit id="d90f64072c9b86fb5e160826e11d54a35519d306" translate="yes" xml:space="preserve">
          <source>An iterator produced by calling &lt;code&gt;drain_filter&lt;/code&gt; on Vec.</source>
          <target state="translated">Un iterador producido al llamar a &lt;code&gt;drain_filter&lt;/code&gt; en Vec.</target>
        </trans-unit>
        <trans-unit id="e2f38bdab7ee3f88662413a8d0762d07987cc9e4" translate="yes" xml:space="preserve">
          <source>An iterator that always continues to yield &lt;code&gt;None&lt;/code&gt; when exhausted.</source>
          <target state="translated">Un iterador que siempre sigue produciendo &lt;code&gt;None&lt;/code&gt; cuando se agota.</target>
        </trans-unit>
        <trans-unit id="d75b48632d15091a831b75304f768ce72229865c" translate="yes" xml:space="preserve">
          <source>An iterator that attempts to yield all pending values for a &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt;, created by &lt;a href=&quot;struct.receiver#method.try_iter&quot;&gt;&lt;code&gt;try_iter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador que intenta generar todos los valores pendientes para un &lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt; , creado por &lt;a href=&quot;struct.receiver#method.try_iter&quot;&gt; &lt;code&gt;try_iter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c0e45d489e23ad54f254e3c451b03c3ad3633b8" translate="yes" xml:space="preserve">
          <source>An iterator that calls a function with a reference to each element before yielding it.</source>
          <target state="translated">Un iterador que llama a una función con una referencia a cada elemento antes de cederla.</target>
        </trans-unit>
        <trans-unit id="51a9a929e3e766e1bc15473a2edf034711e9603a" translate="yes" xml:space="preserve">
          <source>An iterator that clones the elements of an underlying iterator.</source>
          <target state="translated">Un iterador que clona los elementos de un iterador subyacente.</target>
        </trans-unit>
        <trans-unit id="d2287777325ba0f8a82eefc9f82886c5e6c0375c" translate="yes" xml:space="preserve">
          <source>An iterator that copies the elements of an underlying iterator.</source>
          <target state="translated">Un iterador que copia los elementos de un iterador subyacente.</target>
        </trans-unit>
        <trans-unit id="11b5eb68a058f133076c97a53287f7350b19b4ed" translate="yes" xml:space="preserve">
          <source>An iterator that decodes UTF-16 encoded code points from an iterator of &lt;code&gt;u16&lt;/code&gt;s.</source>
          <target state="translated">Un iterador que decodifica puntos de c&amp;oacute;digo codificados en UTF-16 de un iterador de &lt;code&gt;u16&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="a7c2f22f759edefd0c02e7989a0830d2b9927824" translate="yes" xml:space="preserve">
          <source>An iterator that filters the elements of &lt;code&gt;iter&lt;/code&gt; with &lt;code&gt;predicate&lt;/code&gt;.</source>
          <target state="translated">Un iterador que filtra los elementos de &lt;code&gt;iter&lt;/code&gt; con &lt;code&gt;predicate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="538c0bdbb5f2579b6454154f638e3b2235b91db1" translate="yes" xml:space="preserve">
          <source>An iterator that flattens one level of nesting in an iterator of things that can be turned into iterators.</source>
          <target state="translated">Un iterador que aplana un nivel de anidación en un iterador de cosas que pueden convertirse en iteradores.</target>
        </trans-unit>
        <trans-unit id="9dbf52f6fb3a5236b83ac424b9036cbd60fd5a39" translate="yes" xml:space="preserve">
          <source>An iterator that infinitely &lt;a href=&quot;struct.tcplistener#method.accept&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;s connections on a &lt;a href=&quot;struct.tcplistener&quot;&gt;&lt;code&gt;TcpListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un iterador que &lt;a href=&quot;struct.tcplistener#method.accept&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; infinitamente s conexiones en un &lt;a href=&quot;struct.tcplistener&quot;&gt; &lt;code&gt;TcpListener&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81a5d4ccf76ade25979b7f90350112e1ade77257" translate="yes" xml:space="preserve">
          <source>An iterator that iterates two other iterators simultaneously.</source>
          <target state="translated">Un iterador que itera otros dos iteradores simultáneamente.</target>
        </trans-unit>
        <trans-unit id="ca3c41a43b14bf4c961d798c07db548fe5c4306e" translate="yes" xml:space="preserve">
          <source>An iterator that knows its exact length.</source>
          <target state="translated">Un iterador que conoce su longitud exacta.</target>
        </trans-unit>
        <trans-unit id="6bd3d7d181c5f76ada28bd405c55b98768c1a53e" translate="yes" xml:space="preserve">
          <source>An iterator that links two iterators together, in a chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd413348f096597213f95708520a2a2ee8e8c6ff" translate="yes" xml:space="preserve">
          <source>An iterator that maps each element to an iterator, and yields the elements of the produced iterators.</source>
          <target state="translated">Un iterador que mapea cada elemento a un iterador,y produce los elementos de los iteradores producidos.</target>
        </trans-unit>
        <trans-unit id="e00fb1707b378038f217f0122cb5c2c693a99ce9" translate="yes" xml:space="preserve">
          <source>An iterator that maps the values of &lt;code&gt;iter&lt;/code&gt; with &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">Un iterador que mapea los valores de &lt;code&gt;iter&lt;/code&gt; con &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c89c4d0277ad0dbe70fcef9f7526e1d26306d3c4" translate="yes" xml:space="preserve">
          <source>An iterator that moves out of a vector.</source>
          <target state="translated">Un iterador que se mueve fuera de un vector.</target>
        </trans-unit>
        <trans-unit id="18d1634bc6586ab56c39fac0a163c9d8e2300d06" translate="yes" xml:space="preserve">
          <source>An iterator that only accepts elements while &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;Some(_)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d780c4556be41e5ade58ccb90a4cb9745c8a4a0" translate="yes" xml:space="preserve">
          <source>An iterator that only accepts elements while &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Un iterador que solo acepta elementos mientras que el &lt;code&gt;predicate&lt;/code&gt; devuelve &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca756e17e11dd720fde75ad3acbb4dc61da5a0b9" translate="yes" xml:space="preserve">
          <source>An iterator that only iterates over the first &lt;code&gt;n&lt;/code&gt; iterations of &lt;code&gt;iter&lt;/code&gt;.</source>
          <target state="translated">Un iterador que solo itera sobre las primeras &lt;code&gt;n&lt;/code&gt; iteraciones de &lt;code&gt;iter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="473994edf3f2b12636ecfbae9c0cf95e9976442a" translate="yes" xml:space="preserve">
          <source>An iterator that rejects elements while &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Un iterador que rechaza elementos mientras que el &lt;code&gt;predicate&lt;/code&gt; devuelve &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0464de53ba73fee454800ae2dd5fef9380113b90" translate="yes" xml:space="preserve">
          <source>An iterator that repeats an element endlessly.</source>
          <target state="translated">Un iterador que repite un elemento sin fin.</target>
        </trans-unit>
        <trans-unit id="7f0331c06c1f3247687712e4a8fa91faa255da79" translate="yes" xml:space="preserve">
          <source>An iterator that repeats elements of type &lt;code&gt;A&lt;/code&gt; endlessly by applying the provided closure &lt;code&gt;F: FnMut() -&amp;gt; A&lt;/code&gt;.</source>
          <target state="translated">Un iterador que se repite elementos de tipo &lt;code&gt;A&lt;/code&gt; sin fin mediante la aplicaci&amp;oacute;n del cierre proporcionado &lt;code&gt;F: FnMut() -&amp;gt; A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f71391fe387efdecec312046c6dd55bbf198321" translate="yes" xml:space="preserve">
          <source>An iterator that repeats endlessly.</source>
          <target state="translated">Un iterador que se repite sin cesar.</target>
        </trans-unit>
        <trans-unit id="905426af2dba7f51c454090a12d4200524fdd44c" translate="yes" xml:space="preserve">
          <source>An iterator that reports an accurate length using size_hint.</source>
          <target state="translated">Un iterador que reporta una longitud exacta usando size_hint.</target>
        </trans-unit>
        <trans-unit id="6e8e68927103c8756bd8e724310ac62f637e383b" translate="yes" xml:space="preserve">
          <source>An iterator that skips over &lt;code&gt;n&lt;/code&gt; elements of &lt;code&gt;iter&lt;/code&gt;.</source>
          <target state="translated">Un iterador que omite &lt;code&gt;n&lt;/code&gt; elementos de &lt;code&gt;iter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc8fdbf15929bf39a9148cd3ad1f02b7e2f3e8e1" translate="yes" xml:space="preserve">
          <source>An iterator that splits an environment variable into paths according to platform-specific conventions.</source>
          <target state="translated">Un iterador que divide una variable de ambiente en caminos de acuerdo a convenciones específicas de la plataforma.</target>
        </trans-unit>
        <trans-unit id="57ccd12f7079988974d92028c7ca992c2e3dc8d6" translate="yes" xml:space="preserve">
          <source>An iterator that strings two iterators together.</source>
          <target state="translated">Un iterador que une dos iteradores.</target>
        </trans-unit>
        <trans-unit id="277e34f21de2c1bcf08658ea7180ea41a724c7da" translate="yes" xml:space="preserve">
          <source>An iterator that uses &lt;code&gt;f&lt;/code&gt; to both filter and map elements from &lt;code&gt;iter&lt;/code&gt;.</source>
          <target state="translated">Un iterador que usa &lt;code&gt;f&lt;/code&gt; para filtrar y mapear elementos de &lt;code&gt;iter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1c29ab729712117252122597b1f8dee40693e18" translate="yes" xml:space="preserve">
          <source>An iterator that when yielding an item will have taken at least one element from its underlying &lt;a href=&quot;trait.sourceiter&quot;&gt;&lt;code&gt;SourceIter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290a4df52520d8c2cd218b2c5a66207c17bd76b5" translate="yes" xml:space="preserve">
          <source>An iterator that yields &lt;code&gt;None&lt;/code&gt; forever after the underlying iterator yields &lt;code&gt;None&lt;/code&gt; once.</source>
          <target state="translated">Un iterador que genera &lt;code&gt;None&lt;/code&gt; para siempre despu&amp;eacute;s de que el iterador subyacente genera &lt;code&gt;None&lt;/code&gt; una vez.</target>
        </trans-unit>
        <trans-unit id="8077f46e4926a9ba2fe0c3a0111f99b3bfd0cee7" translate="yes" xml:space="preserve">
          <source>An iterator that yields a single element of type &lt;code&gt;A&lt;/code&gt; by applying the provided closure &lt;code&gt;F: FnOnce() -&amp;gt; A&lt;/code&gt;.</source>
          <target state="translated">Un iterador que produce un &amp;uacute;nico elemento de tipo &lt;code&gt;A&lt;/code&gt; mediante la aplicaci&amp;oacute;n del cierre proporcionado &lt;code&gt;F: FnOnce() -&amp;gt; A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f74ed23fee03be7f9726d86e04759a8cdc7c98f8" translate="yes" xml:space="preserve">
          <source>An iterator that yields an element exactly once.</source>
          <target state="translated">Un iterador que produce un elemento exactamente una vez.</target>
        </trans-unit>
        <trans-unit id="d839e72a6966bc49a09991c75f6ebb8c0f577f86" translate="yes" xml:space="preserve">
          <source>An iterator that yields nothing.</source>
          <target state="translated">Un iterador que no produce nada.</target>
        </trans-unit>
        <trans-unit id="5c4e0833b181576427135eb9c8df2d3b1200509f" translate="yes" xml:space="preserve">
          <source>An iterator that yields the current count and the element during iteration.</source>
          <target state="translated">Un iterador que produce la cuenta actual y el elemento durante la iteración.</target>
        </trans-unit>
        <trans-unit id="13cc9cc84ea0ac8db6860e2d362f3768df8c56c8" translate="yes" xml:space="preserve">
          <source>An iterator that yields the literal escape code of a &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">Un iterador que produce el c&amp;oacute;digo de escape literal de un &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f37b0b305dd49cedb47e6f8dfa5f3a2bdad3bf67" translate="yes" xml:space="preserve">
          <source>An iterator to maintain state while iterating another iterator.</source>
          <target state="translated">Un iterador para mantener el estado mientras se itera otro iterador.</target>
        </trans-unit>
        <trans-unit id="47ba4cac2215dd1a04b338eb0e4a94df69cf3c0f" translate="yes" xml:space="preserve">
          <source>An iterator visiting all elements in arbitrary order. The iterator element type is &lt;code&gt;&amp;amp;'a T&lt;/code&gt;.</source>
          <target state="translated">Un iterador que visita todos los elementos en orden arbitrario. El tipo de elemento iterador es &lt;code&gt;&amp;amp;'a T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7550894b7d1bb85e45b801eaeed48efa989854c0" translate="yes" xml:space="preserve">
          <source>An iterator visiting all key-value pairs in arbitrary order, with mutable references to the values. The iterator element type is &lt;code&gt;(&amp;amp;'a K, &amp;amp;'a mut V)&lt;/code&gt;.</source>
          <target state="translated">Un iterador que visita todos los pares clave-valor en orden arbitrario, con referencias mutables a los valores. El tipo de elemento iterador es &lt;code&gt;(&amp;amp;'a K, &amp;amp;'a mut V)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b08b2653f7dcb8dc940ed24069740a24ab5b76a" translate="yes" xml:space="preserve">
          <source>An iterator visiting all key-value pairs in arbitrary order. The iterator element type is &lt;code&gt;(&amp;amp;'a K, &amp;amp;'a V)&lt;/code&gt;.</source>
          <target state="translated">Un iterador que visita todos los pares clave-valor en orden arbitrario. El tipo de elemento del iterador es &lt;code&gt;(&amp;amp;'a K, &amp;amp;'a V)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a52b26a20f6e5a2edebe10f6f90cf9507490a85c" translate="yes" xml:space="preserve">
          <source>An iterator visiting all keys in arbitrary order. The iterator element type is &lt;code&gt;&amp;amp;'a K&lt;/code&gt;.</source>
          <target state="translated">Un iterador que visita todas las claves en orden arbitrario. El tipo de elemento iterador es &lt;code&gt;&amp;amp;'a K&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cee3468b8b5e0fdd5a440c2d5df35c4c2db2ae90" translate="yes" xml:space="preserve">
          <source>An iterator visiting all values in arbitrary order. The iterator element type is &lt;code&gt;&amp;amp;'a V&lt;/code&gt;.</source>
          <target state="translated">Un iterador que visita todos los valores en orden arbitrario. El tipo de elemento iterador es &lt;code&gt;&amp;amp;'a V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ae307f212519994d8b694a5d942377f4aec4823" translate="yes" xml:space="preserve">
          <source>An iterator visiting all values mutably in arbitrary order. The iterator element type is &lt;code&gt;&amp;amp;'a mut V&lt;/code&gt;.</source>
          <target state="translated">Un iterador que visita todos los valores de forma mutante en orden arbitrario. El tipo de elemento del iterador es &lt;code&gt;&amp;amp;'a mut V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="211d7c1adc8a12b57341be994e857003e54c6bbd" translate="yes" xml:space="preserve">
          <source>An iterator where each iteration calls the provided closure &lt;code&gt;F: FnMut() -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Un iterador donde cada iteraci&amp;oacute;n llama al cierre proporcionado &lt;code&gt;F: FnMut() -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33d8e5b7da8d4676782754a628f4083ffd272c18" translate="yes" xml:space="preserve">
          <source>An iterator which uses a closure to determine if an element should be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53ddbd1d3e296430ed20afa68efda72ca0ded32" translate="yes" xml:space="preserve">
          <source>An iterator with a &lt;code&gt;peek()&lt;/code&gt; that returns an optional reference to the next element.</source>
          <target state="translated">Un iterador con un &lt;code&gt;peek()&lt;/code&gt; que devuelve una referencia opcional al siguiente elemento.</target>
        </trans-unit>
        <trans-unit id="c9cd5154a20293338cfe2c0c0c884bc897a9a0cb" translate="yes" xml:space="preserve">
          <source>An new iterator where each successive item is computed based on the preceding one.</source>
          <target state="translated">Un nuevo iterador en el que cada elemento sucesivo se calcula en base al anterior.</target>
        </trans-unit>
        <trans-unit id="a64664459e6bcefaf4f866fe61f4c89bbbc6e913" translate="yes" xml:space="preserve">
          <source>An non-ascii identifier was used in an invalid context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767a832ec64e700730e273e825321e36a3ef86e1" translate="yes" xml:space="preserve">
          <source>An occupied entry.</source>
          <target state="translated">Una entrada ocupada.</target>
        </trans-unit>
        <trans-unit id="678664bfa424da9fc0ca21e4760f29b4b952648d" translate="yes" xml:space="preserve">
          <source>An optional item</source>
          <target state="translated">Un elemento opcional</target>
        </trans-unit>
        <trans-unit id="d7f5308e6f605cdab4dbb8b387f9c93de98d0922" translate="yes" xml:space="preserve">
          <source>An order is a total order if it is (for all &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;):</source>
          <target state="translated">Una orden es una orden total si es (para todos &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="e7c75396d6933448cc7456d6beaf9cf648ea0ef5" translate="yes" xml:space="preserve">
          <source>An ordering where a compared value is equal to another.</source>
          <target state="translated">Un ordenamiento en el que un valor comparado es igual a otro.</target>
        </trans-unit>
        <trans-unit id="09dba8210b3d0ce590a3a5f065b62a6a8ab493fb" translate="yes" xml:space="preserve">
          <source>An ordering where a compared value is greater than another.</source>
          <target state="translated">Un ordenamiento en el que un valor comparado es mayor que otro.</target>
        </trans-unit>
        <trans-unit id="a2c8ca4c96fc50eebfe4b351916be57d1bf56d8c" translate="yes" xml:space="preserve">
          <source>An ordering where a compared value is less than another.</source>
          <target state="translated">Un ordenamiento en el que un valor comparado es menor que otro.</target>
        </trans-unit>
        <trans-unit id="38792f39e0fa160ba176220b302fc6518c1e2555" translate="yes" xml:space="preserve">
          <source>An owned permission to join on a thread (block on its termination).</source>
          <target state="translated">Un permiso propio para unirse en un hilo (bloqueo en su terminación).</target>
        </trans-unit>
        <trans-unit id="8c3512dc7441f7c48feb0adfb2813ca8cbecd465" translate="yes" xml:space="preserve">
          <source>An owned, mutable path (akin to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Una ruta de propiedad mutable (similar a &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e84205a36cc39374bcb7d05c1b1547f37b9b5189" translate="yes" xml:space="preserve">
          <source>An owning iterator over messages on a &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt;, created by &lt;strong&gt;Receiver::into_iter&lt;/strong&gt;.</source>
          <target state="translated">Un iterador propietario sobre mensajes en un &lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt; , creado por &lt;strong&gt;Receiver :: into_iter&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="83bd664b01b4716a8aced24a8192a6358972a99f" translate="yes" xml:space="preserve">
          <source>An owning iterator over the elements of a &lt;code&gt;BinaryHeap&lt;/code&gt;.</source>
          <target state="translated">Un iterador propietario sobre los elementos de un &lt;code&gt;BinaryHeap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34718a674d09c2eb637513ac6f89289f300970ef" translate="yes" xml:space="preserve">
          <source>An owning iterator over the elements of a &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">Un iterador propietario sobre los elementos de un &lt;code&gt;LinkedList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6f353b2a400a09971f91285403f6b780ae991c4" translate="yes" xml:space="preserve">
          <source>An owning iterator over the elements of a &lt;code&gt;VecDeque&lt;/code&gt;.</source>
          <target state="translated">Un iterador propietario sobre los elementos de un &lt;code&gt;VecDeque&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77a86a6c2dd3031f17c5e8abfe6100f81887dd42" translate="yes" xml:space="preserve">
          <source>An owning iterator over the entries of a &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador propietario sobre las entradas de un &lt;code&gt;BTreeMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="209ab8cbe2152f0b0d82c7256751114f7cd068b9" translate="yes" xml:space="preserve">
          <source>An owning iterator over the entries of a &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="translated">Un iterador propietario sobre las entradas de un &lt;code&gt;HashMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef6f78f2a2dbde9b33ceeac921bd77fbb502b5bc" translate="yes" xml:space="preserve">
          <source>An owning iterator over the items of a &lt;code&gt;BTreeSet&lt;/code&gt;.</source>
          <target state="translated">Un iterador propietario sobre los elementos de un &lt;code&gt;BTreeSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="427fdeccedc75e2673269080f0ce6c0924e6c1bd" translate="yes" xml:space="preserve">
          <source>An owning iterator over the items of a &lt;code&gt;HashSet&lt;/code&gt;.</source>
          <target state="translated">Un iterador propietario sobre los elementos de un &lt;code&gt;HashSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f91fac0583c8f40d303b24662fb74f3439b187" translate="yes" xml:space="preserve">
          <source>An owning iterator over the keys of a &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2eac75b0f121647617969553f50d0b9466ca4f" translate="yes" xml:space="preserve">
          <source>An owning iterator over the keys of a &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c812167dc1a9620fc28974d42c5f815dace73059" translate="yes" xml:space="preserve">
          <source>An owning iterator over the values of a &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e996a80994408e932109330c3a7b8f4f5821448e" translate="yes" xml:space="preserve">
          <source>An owning iterator over the values of a &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b2d7fe27e12071feb7334cad3f7f83e9e84aa2" translate="yes" xml:space="preserve">
          <source>An unary operator was used on a type which doesn't implement it.</source>
          <target state="translated">Se utilizó un operador unario en un tipo que no lo implementa.</target>
        </trans-unit>
        <trans-unit id="dcb71e1bf306a3b27e4be98207d51ae66d320fdd" translate="yes" xml:space="preserve">
          <source>An unbounded range (&lt;code&gt;..&lt;/code&gt;).</source>
          <target state="translated">Un rango ilimitado ( &lt;code&gt;..&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="17e397882c6b5d98ce823af67a0207c6b4f0a351" translate="yes" xml:space="preserve">
          <source>An unboxed trait object was used as a return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77330b9c19314a31717caeb5c6b57d3f4259e03a" translate="yes" xml:space="preserve">
          <source>An unchecked assertion allows a program in an inconsistent state to keep running, which might have unexpected consequences but does not introduce unsafety as long as this only happens in safe code. The performance cost of assertions, however, is not measurable in general. Replacing &lt;a href=&quot;macro.assert&quot;&gt;&lt;code&gt;assert!&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;debug_assert!&lt;/code&gt; is thus only encouraged after thorough profiling, and more importantly, only in safe code!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3caad6b327abced5bae6f8ff205241ca33ed53ab" translate="yes" xml:space="preserve">
          <source>An unchecked assertion allows a program in an inconsistent state to keep running, which might have unexpected consequences but does not introduce unsafety as long as this only happens in safe code. The performance cost of assertions, is however, not measurable in general. Replacing &lt;a href=&quot;macro.assert&quot;&gt;&lt;code&gt;assert!&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;debug_assert!&lt;/code&gt; is thus only encouraged after thorough profiling, and more importantly, only in safe code!</source>
          <target state="translated">Una aserci&amp;oacute;n no verificada permite que un programa en un estado inconsistente contin&amp;uacute;e ejecut&amp;aacute;ndose, lo que puede tener consecuencias inesperadas pero no introduce inseguridad siempre que esto solo ocurra en c&amp;oacute;digo seguro. Sin embargo, el costo de desempe&amp;ntilde;o de las afirmaciones no es mensurable en general. Reemplazo de &lt;a href=&quot;macro.assert&quot;&gt; &lt;code&gt;assert!&lt;/code&gt; &lt;/a&gt;con &lt;code&gt;debug_assert!&lt;/code&gt; por lo tanto, solo se recomienda despu&amp;eacute;s de un perfil completo y, lo que es m&amp;aacute;s importante, &amp;iexcl;solo en c&amp;oacute;digo seguro!</target>
        </trans-unit>
        <trans-unit id="442287d37e019d0e550c26e6f3dfcfb70e25272a" translate="yes" xml:space="preserve">
          <source>An undeclared crate, module, or type was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490b1d248ac38d604233cacff667b31a463976df" translate="yes" xml:space="preserve">
          <source>An undeclared label was used.</source>
          <target state="translated">Se usó una etiqueta no declarada.</target>
        </trans-unit>
        <trans-unit id="5cc74f4a7dec23f15c6176f5d92410a97be0cd49" translate="yes" xml:space="preserve">
          <source>An undeclared lifetime was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0bdd57bc131e7f23a48af9227bf2c7b9e2b4dd" translate="yes" xml:space="preserve">
          <source>An undeclared type or module was used.</source>
          <target state="translated">Se utilizó un tipo o módulo no declarado.</target>
        </trans-unit>
        <trans-unit id="62b209ea92b4732aa055c2148d6eb87f3bf6ae79" translate="yes" xml:space="preserve">
          <source>An undefined atomic operation function was declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf946e9423b88dbc97c6f1ffa6e16764af6cd52" translate="yes" xml:space="preserve">
          <source>An underscore &lt;code&gt;_&lt;/code&gt; character has been used as the identifier for a lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c74d6c9b38a67d2a5eb623d75e946df289a3fbc" translate="yes" xml:space="preserve">
          <source>An unknown &quot;kind&quot; was specified for a link attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbef161c3305374da24ca6e3ae9cdc7bdefe6b4" translate="yes" xml:space="preserve">
          <source>An unknown &quot;kind&quot; was specified for a link attribute. Erroneous code example:</source>
          <target state="translated">Se especificó una &quot;clase&quot; desconocida para un atributo de enlace.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="a5956e957dc8b784f0e077b9955dd790db201d80" translate="yes" xml:space="preserve">
          <source>An unknown argument was given to the &lt;code&gt;inline&lt;/code&gt; attribute.</source>
          <target state="translated">Se dio un argumento desconocido a la &lt;code&gt;inline&lt;/code&gt; atributo en .</target>
        </trans-unit>
        <trans-unit id="7d952bcfdbb1c8f63e3755c7054750e6c464627c" translate="yes" xml:space="preserve">
          <source>An unknown argument was given to the &lt;code&gt;instruction_set&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c4e65153fb4fac3f59b06b3332f14a29b39777" translate="yes" xml:space="preserve">
          <source>An unknown external lang item was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a99f6d07dc4d8ba35aa89128cc34d06dd11ce0f" translate="yes" xml:space="preserve">
          <source>An unknown external lang item was used. Erroneous code example:</source>
          <target state="translated">Se usó un elemento de langosta externa desconocido.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="1356f6d3a3c2ce1216defe8b6863fd5e9393d5fa" translate="yes" xml:space="preserve">
          <source>An unknown field was specified into a structure.</source>
          <target state="translated">Se especificó un campo desconocido en una estructura.</target>
        </trans-unit>
        <trans-unit id="672bd73128faa09c7f440466e9f29739ad4de42d" translate="yes" xml:space="preserve">
          <source>An unknown field was specified into an enum's structure variant.</source>
          <target state="translated">Se especificó un campo desconocido en una variante de la estructura de un enum.</target>
        </trans-unit>
        <trans-unit id="bee5691463189269e4f427b52c0849d39e9df4f5" translate="yes" xml:space="preserve">
          <source>An unknown intrinsic function was declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a840a4e189fb8e18f90b5fe877d384d51d1d3c" translate="yes" xml:space="preserve">
          <source>An unknown lint was used on the command line.</source>
          <target state="translated">Se usó una pelusa desconocida en la línea de mando.</target>
        </trans-unit>
        <trans-unit id="d472ec49c42739263d3ec941f6cf5b5468a2d3b2" translate="yes" xml:space="preserve">
          <source>An unknown meta item was used.</source>
          <target state="translated">Se usó una meta desconocida.</target>
        </trans-unit>
        <trans-unit id="a940cccd136dc43c95bcfd2c10667fe77e672634" translate="yes" xml:space="preserve">
          <source>An unknown predicate was used inside the &lt;code&gt;cfg&lt;/code&gt; attribute.</source>
          <target state="translated">Se us&amp;oacute; un predicado desconocido dentro de &lt;code&gt;cfg&lt;/code&gt; atributo .</target>
        </trans-unit>
        <trans-unit id="99aaced696882b10f70ccb01859e75fc7704670e" translate="yes" xml:space="preserve">
          <source>An unknown tool name was found in a scoped lint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676d0b3b83f48e6af11d16fc5aee8adc4d048290" translate="yes" xml:space="preserve">
          <source>An unknown tuple struct/variant has been used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12ae2fbe23adbaee9a27dcd9a18b88d8f9167df" translate="yes" xml:space="preserve">
          <source>An unnamed address:</source>
          <target state="translated">Una dirección sin nombre:</target>
        </trans-unit>
        <trans-unit id="91f0af616d741e6aae624d3d1dd86d853eef5383" translate="yes" xml:space="preserve">
          <source>An unnecessary type or const parameter was given in a type alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f156b900d9fe99f8832687ac7404efd74f0ba00f" translate="yes" xml:space="preserve">
          <source>An unpoisoned &lt;a href=&quot;struct.once&quot;&gt;&lt;code&gt;Once&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3386e5166859dc07663dec10855432efda42e389" translate="yes" xml:space="preserve">
          <source>An unpoisoned &lt;code&gt;Once&lt;/code&gt;:</source>
          <target state="translated">Una &lt;code&gt;Once&lt;/code&gt; envenenar :</target>
        </trans-unit>
        <trans-unit id="940487cb36b1ca715dc9f782d9f8a844e917518b" translate="yes" xml:space="preserve">
          <source>An unreachable label was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a03f5a8f224f5f2ce3d5df647878dfe5aac207b" translate="yes" xml:space="preserve">
          <source>An unresolved name was used.</source>
          <target state="translated">Se utilizó un nombre sin resolver.</target>
        </trans-unit>
        <trans-unit id="261553d92051fa692c480d6d0e6fd303bf5038fd" translate="yes" xml:space="preserve">
          <source>An unsafe trait was implemented without an unsafe implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084105813293c7ee4385ace5ee9239e1a67b6d57" translate="yes" xml:space="preserve">
          <source>An unstable feature in &lt;code&gt;const&lt;/code&gt; contexts was used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c801b4c85f18e94f7cb6ce228ae449c345e89b49" translate="yes" xml:space="preserve">
          <source>An unstable feature was used.</source>
          <target state="translated">Se utilizó una característica inestable.</target>
        </trans-unit>
        <trans-unit id="ad604b2507c78bd47c93ad249e197a918e7208ca" translate="yes" xml:space="preserve">
          <source>An unsupported representation was attempted on a zero-variant enum.</source>
          <target state="translated">Se intentó una representación no apoyada en una lista de cero variantes.</target>
        </trans-unit>
        <trans-unit id="999140d65b2dddb09bc1533f2a2a2de632081b87" translate="yes" xml:space="preserve">
          <source>Anatomy of a Rust Program</source>
          <target state="translated">Anatomía de un programa de óxido</target>
        </trans-unit>
        <trans-unit id="f96afdd93db8b2e4f4aa8b97a7ac6e4f106649a9" translate="yes" xml:space="preserve">
          <source>Ancestors</source>
          <target state="translated">Ancestors</target>
        </trans-unit>
        <trans-unit id="a69185f73b3266ea2ea0196235a7920d98b23569" translate="yes" xml:space="preserve">
          <source>Ancestors::all</source>
          <target state="translated">Ancestors::all</target>
        </trans-unit>
        <trans-unit id="5d0f93422db0f668490adf089654ecece89c57a9" translate="yes" xml:space="preserve">
          <source>Ancestors::any</source>
          <target state="translated">Ancestors::any</target>
        </trans-unit>
        <trans-unit id="c4d070344a11e561f295e6e7e6205f761d5798b6" translate="yes" xml:space="preserve">
          <source>Ancestors::borrow</source>
          <target state="translated">Ancestors::borrow</target>
        </trans-unit>
        <trans-unit id="a84c8539090bc4c2974d99b05a787e636ebe0acb" translate="yes" xml:space="preserve">
          <source>Ancestors::borrow_mut</source>
          <target state="translated">Ancestors::borrow_mut</target>
        </trans-unit>
        <trans-unit id="334238f85474f459cc0ffaef3421caf90b07c6e6" translate="yes" xml:space="preserve">
          <source>Ancestors::by_ref</source>
          <target state="translated">Ancestors::by_ref</target>
        </trans-unit>
        <trans-unit id="6fdc4e3375706d83d8aecc92a22ee70bff5dfab4" translate="yes" xml:space="preserve">
          <source>Ancestors::chain</source>
          <target state="translated">Ancestors::chain</target>
        </trans-unit>
        <trans-unit id="dce0f9cae4b8d7222a0b11c873b249cd98da26b3" translate="yes" xml:space="preserve">
          <source>Ancestors::clone</source>
          <target state="translated">Ancestors::clone</target>
        </trans-unit>
        <trans-unit id="31848f144e07d27fc7390a8c92d56ab88474c213" translate="yes" xml:space="preserve">
          <source>Ancestors::clone_from</source>
          <target state="translated">Ancestors::clone_from</target>
        </trans-unit>
        <trans-unit id="35f7611233faafb5be9d7d385104097f21e72511" translate="yes" xml:space="preserve">
          <source>Ancestors::clone_into</source>
          <target state="translated">Ancestors::clone_into</target>
        </trans-unit>
        <trans-unit id="0d02f4a4459ad43a2bc9f83a20b48ce81eb5eefc" translate="yes" xml:space="preserve">
          <source>Ancestors::cloned</source>
          <target state="translated">Ancestors::cloned</target>
        </trans-unit>
        <trans-unit id="67ff55ec2d9537e58736a03fd50c337049b761f0" translate="yes" xml:space="preserve">
          <source>Ancestors::cmp</source>
          <target state="translated">Ancestors::cmp</target>
        </trans-unit>
        <trans-unit id="0d35d199d39196de0523350cd24a1241424fa231" translate="yes" xml:space="preserve">
          <source>Ancestors::collect</source>
          <target state="translated">Ancestors::collect</target>
        </trans-unit>
        <trans-unit id="4865b6ff2a1901685d10435c12cf071b254d3a62" translate="yes" xml:space="preserve">
          <source>Ancestors::copied</source>
          <target state="translated">Ancestors::copied</target>
        </trans-unit>
        <trans-unit id="f28d6b4a44e14f0d15c4f132d556116c210c1c84" translate="yes" xml:space="preserve">
          <source>Ancestors::count</source>
          <target state="translated">Ancestors::count</target>
        </trans-unit>
        <trans-unit id="a6a740680e9008614345c582b8e1985861829875" translate="yes" xml:space="preserve">
          <source>Ancestors::cycle</source>
          <target state="translated">Ancestors::cycle</target>
        </trans-unit>
        <trans-unit id="0810bcf20fe4de2312f283ad13e930eaa61b0c30" translate="yes" xml:space="preserve">
          <source>Ancestors::enumerate</source>
          <target state="translated">Ancestors::enumerate</target>
        </trans-unit>
        <trans-unit id="f443387bf4a86a6cc1330d9f2c4d3b913b1c1dd0" translate="yes" xml:space="preserve">
          <source>Ancestors::eq</source>
          <target state="translated">Ancestors::eq</target>
        </trans-unit>
        <trans-unit id="796eb87c3af9fac554be5d4ec57ca702d510701f" translate="yes" xml:space="preserve">
          <source>Ancestors::filter</source>
          <target state="translated">Ancestors::filter</target>
        </trans-unit>
        <trans-unit id="d1822e4ea409150f5e23e24201bc84ef25560137" translate="yes" xml:space="preserve">
          <source>Ancestors::filter_map</source>
          <target state="translated">Ancestors::filter_map</target>
        </trans-unit>
        <trans-unit id="1e6cc0ef677409077aa639becd452ada01ece8d8" translate="yes" xml:space="preserve">
          <source>Ancestors::find</source>
          <target state="translated">Ancestors::find</target>
        </trans-unit>
        <trans-unit id="657aafc8bbaf8304573fbc00e24419ba040782a9" translate="yes" xml:space="preserve">
          <source>Ancestors::find_map</source>
          <target state="translated">Ancestors::find_map</target>
        </trans-unit>
        <trans-unit id="beeb7e3fb0fbc04618a5300c980c6f59ed075dcd" translate="yes" xml:space="preserve">
          <source>Ancestors::flat_map</source>
          <target state="translated">Ancestors::flat_map</target>
        </trans-unit>
        <trans-unit id="47bd10eda5c1ca25f0cc303ef197cbc1220d1b53" translate="yes" xml:space="preserve">
          <source>Ancestors::flatten</source>
          <target state="translated">Ancestors::flatten</target>
        </trans-unit>
        <trans-unit id="a456cec1879b2b70a77233841a841755191a8a86" translate="yes" xml:space="preserve">
          <source>Ancestors::fmt</source>
          <target state="translated">Ancestors::fmt</target>
        </trans-unit>
        <trans-unit id="1f02f420430d3894ec9ecddf11dd94365e77ac19" translate="yes" xml:space="preserve">
          <source>Ancestors::fold</source>
          <target state="translated">Ancestors::fold</target>
        </trans-unit>
        <trans-unit id="3ca5818636166fd5b398f8e40a922c894b0abbb6" translate="yes" xml:space="preserve">
          <source>Ancestors::for_each</source>
          <target state="translated">Ancestors::for_each</target>
        </trans-unit>
        <trans-unit id="4264a030cb324bfbad2fa80a46e42c679803a0c3" translate="yes" xml:space="preserve">
          <source>Ancestors::from</source>
          <target state="translated">Ancestors::from</target>
        </trans-unit>
        <trans-unit id="32047f73315575a8e50a462155406bb910ceed17" translate="yes" xml:space="preserve">
          <source>Ancestors::fuse</source>
          <target state="translated">Ancestors::fuse</target>
        </trans-unit>
        <trans-unit id="41f1796019df27f1dc523c24819d1254f099c660" translate="yes" xml:space="preserve">
          <source>Ancestors::ge</source>
          <target state="translated">Ancestors::ge</target>
        </trans-unit>
        <trans-unit id="f1594f0c385b82f3427f45ed26a50d1dac4fa05e" translate="yes" xml:space="preserve">
          <source>Ancestors::gt</source>
          <target state="translated">Ancestors::gt</target>
        </trans-unit>
        <trans-unit id="dd54e2ff77b477361ff6376d5b04afaad6a7ef21" translate="yes" xml:space="preserve">
          <source>Ancestors::inspect</source>
          <target state="translated">Ancestors::inspect</target>
        </trans-unit>
        <trans-unit id="1bc8d1bb95f4aedebacf2a84051d097086c1cc75" translate="yes" xml:space="preserve">
          <source>Ancestors::into</source>
          <target state="translated">Ancestors::into</target>
        </trans-unit>
        <trans-unit id="6f7bdf57cf985a0498067e483576359d43c33000" translate="yes" xml:space="preserve">
          <source>Ancestors::into_iter</source>
          <target state="translated">Ancestors::into_iter</target>
        </trans-unit>
        <trans-unit id="e4f570f8f86838a0b2f0996de24967465582d845" translate="yes" xml:space="preserve">
          <source>Ancestors::is_sorted</source>
          <target state="translated">Ancestors::is_sorted</target>
        </trans-unit>
        <trans-unit id="8fa7773f21437bd02461103d0f128fe2f328180a" translate="yes" xml:space="preserve">
          <source>Ancestors::is_sorted_by</source>
          <target state="translated">Ancestors::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="da156b45c81720439526b87f492a4b80dde53f7a" translate="yes" xml:space="preserve">
          <source>Ancestors::is_sorted_by_key</source>
          <target state="translated">Ancestors::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="6bf6d1d6ec433eb2498f88c1821e2e8d204490c9" translate="yes" xml:space="preserve">
          <source>Ancestors::last</source>
          <target state="translated">Ancestors::last</target>
        </trans-unit>
        <trans-unit id="6182ceed3235394e0830f635f2568ba50e3e7bb2" translate="yes" xml:space="preserve">
          <source>Ancestors::le</source>
          <target state="translated">Ancestors::le</target>
        </trans-unit>
        <trans-unit id="ba00a013a0f8fd57e29b01f66afccf088e1d0023" translate="yes" xml:space="preserve">
          <source>Ancestors::lt</source>
          <target state="translated">Ancestors::lt</target>
        </trans-unit>
        <trans-unit id="b588193780984cc7ebdb2f28a2c09aad1660160a" translate="yes" xml:space="preserve">
          <source>Ancestors::map</source>
          <target state="translated">Ancestors::map</target>
        </trans-unit>
        <trans-unit id="aa73ed60029c8667bd3541a6cd43b17d298a34bc" translate="yes" xml:space="preserve">
          <source>Ancestors::max</source>
          <target state="translated">Ancestors::max</target>
        </trans-unit>
        <trans-unit id="ab6d430bbae01a6904e8639546e74aa743ec4546" translate="yes" xml:space="preserve">
          <source>Ancestors::max_by</source>
          <target state="translated">Ancestors::max_by</target>
        </trans-unit>
        <trans-unit id="3f9a117ba2cfb9ce3093457ddf5a2896b25c3699" translate="yes" xml:space="preserve">
          <source>Ancestors::max_by_key</source>
          <target state="translated">Ancestors::max_by_key</target>
        </trans-unit>
        <trans-unit id="d86ac9020bc2e94f4de10dd0521bc6648555300a" translate="yes" xml:space="preserve">
          <source>Ancestors::min</source>
          <target state="translated">Ancestors::min</target>
        </trans-unit>
        <trans-unit id="d1a3237b0f7d1400e70026876d1a9e1edfd954fb" translate="yes" xml:space="preserve">
          <source>Ancestors::min_by</source>
          <target state="translated">Ancestors::min_by</target>
        </trans-unit>
        <trans-unit id="4a76ef60a157a414e53965e7b20bdb80a42a93c5" translate="yes" xml:space="preserve">
          <source>Ancestors::min_by_key</source>
          <target state="translated">Ancestors::min_by_key</target>
        </trans-unit>
        <trans-unit id="5d2760f02e37aabc523ea5766e6897c5ccc56a0b" translate="yes" xml:space="preserve">
          <source>Ancestors::ne</source>
          <target state="translated">Ancestors::ne</target>
        </trans-unit>
        <trans-unit id="94b5fbd4a6186842bbae09888725d74af29ff76c" translate="yes" xml:space="preserve">
          <source>Ancestors::next</source>
          <target state="translated">Ancestors::next</target>
        </trans-unit>
        <trans-unit id="061044f738cb0378794d00307372b84bda535007" translate="yes" xml:space="preserve">
          <source>Ancestors::nth</source>
          <target state="translated">Ancestors::nth</target>
        </trans-unit>
        <trans-unit id="104a8aab4cf5a11201b887398168f2f5e1f87087" translate="yes" xml:space="preserve">
          <source>Ancestors::partial_cmp</source>
          <target state="translated">Ancestors::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bed7abfd1f96e21405eb173c4d15c03b456d92a5" translate="yes" xml:space="preserve">
          <source>Ancestors::partition</source>
          <target state="translated">Ancestors::partition</target>
        </trans-unit>
        <trans-unit id="84cd0d32c4daeda367ba0a2ae2e2b6a7ff4841da" translate="yes" xml:space="preserve">
          <source>Ancestors::peekable</source>
          <target state="translated">Ancestors::peekable</target>
        </trans-unit>
        <trans-unit id="b4ddc60ef630227f7ade5b8c560fef259500316e" translate="yes" xml:space="preserve">
          <source>Ancestors::position</source>
          <target state="translated">Ancestors::position</target>
        </trans-unit>
        <trans-unit id="7a31ee815f86cdd427869f86ea4e16e837ac74a5" translate="yes" xml:space="preserve">
          <source>Ancestors::product</source>
          <target state="translated">Ancestors::product</target>
        </trans-unit>
        <trans-unit id="b560f4cdd9c918e68c647f28819fc526f4443425" translate="yes" xml:space="preserve">
          <source>Ancestors::rev</source>
          <target state="translated">Ancestors::rev</target>
        </trans-unit>
        <trans-unit id="2d6150b963da3a5f8bb4fbcf3bede9ac1d149eac" translate="yes" xml:space="preserve">
          <source>Ancestors::rposition</source>
          <target state="translated">Ancestors::rposition</target>
        </trans-unit>
        <trans-unit id="33695d4fc7bd02cc81076a7f065f59ae331ce9d8" translate="yes" xml:space="preserve">
          <source>Ancestors::scan</source>
          <target state="translated">Ancestors::scan</target>
        </trans-unit>
        <trans-unit id="a71e116d1152775af982054ee8766888b8c17bf5" translate="yes" xml:space="preserve">
          <source>Ancestors::size_hint</source>
          <target state="translated">Ancestors::size_hint</target>
        </trans-unit>
        <trans-unit id="1492747daf21eb6d17932ae78e4e1bb6900ec817" translate="yes" xml:space="preserve">
          <source>Ancestors::skip</source>
          <target state="translated">Ancestors::skip</target>
        </trans-unit>
        <trans-unit id="7ccb1c50d003cbcf82f746c7c89b476d0db40ef9" translate="yes" xml:space="preserve">
          <source>Ancestors::skip_while</source>
          <target state="translated">Ancestors::skip_while</target>
        </trans-unit>
        <trans-unit id="2d680c75e7e0a20bba67113ba634c0b9819ec275" translate="yes" xml:space="preserve">
          <source>Ancestors::step_by</source>
          <target state="translated">Ancestors::step_by</target>
        </trans-unit>
        <trans-unit id="bb4081cc4c0735468e080f3f00abdd7bfc4c7b73" translate="yes" xml:space="preserve">
          <source>Ancestors::sum</source>
          <target state="translated">Ancestors::sum</target>
        </trans-unit>
        <trans-unit id="b184ac7bf98e724a647631566c8e7b44261ba11d" translate="yes" xml:space="preserve">
          <source>Ancestors::take</source>
          <target state="translated">Ancestors::take</target>
        </trans-unit>
        <trans-unit id="551d6d8baae9a0ead4f49097f5951591191f29fd" translate="yes" xml:space="preserve">
          <source>Ancestors::take_while</source>
          <target state="translated">Ancestors::take_while</target>
        </trans-unit>
        <trans-unit id="f38b2d2e57427d6c5d34e24a9e37978f181043c7" translate="yes" xml:space="preserve">
          <source>Ancestors::to_owned</source>
          <target state="translated">Ancestors::to_owned</target>
        </trans-unit>
        <trans-unit id="bd8e948ee34c84cdc8f1385bf9b2d83abdbf9fb4" translate="yes" xml:space="preserve">
          <source>Ancestors::try_fold</source>
          <target state="translated">Ancestors::try_fold</target>
        </trans-unit>
        <trans-unit id="46ad3f23b6a14805c5bb02a0abccbaa9ad1f0c58" translate="yes" xml:space="preserve">
          <source>Ancestors::try_for_each</source>
          <target state="translated">Ancestors::try_for_each</target>
        </trans-unit>
        <trans-unit id="f18ea48cefb527612333927e42f98b5493e80a96" translate="yes" xml:space="preserve">
          <source>Ancestors::try_from</source>
          <target state="translated">Ancestors::try_from</target>
        </trans-unit>
        <trans-unit id="f07951de2fcfeba585ae159316c166c38d8606b4" translate="yes" xml:space="preserve">
          <source>Ancestors::try_into</source>
          <target state="translated">Ancestors::try_into</target>
        </trans-unit>
        <trans-unit id="0008829b37e7881a29a429bd8ff5a7a5ef753374" translate="yes" xml:space="preserve">
          <source>Ancestors::type_id</source>
          <target state="translated">Ancestors::type_id</target>
        </trans-unit>
        <trans-unit id="04f137aff1969f866b7d2666a9252de9e0efa21b" translate="yes" xml:space="preserve">
          <source>Ancestors::unzip</source>
          <target state="translated">Ancestors::unzip</target>
        </trans-unit>
        <trans-unit id="55dbfc2c3d770eaac08b3c73d87bccce57c4f78d" translate="yes" xml:space="preserve">
          <source>Ancestors::zip</source>
          <target state="translated">Ancestors::zip</target>
        </trans-unit>
        <trans-unit id="a01e33f4dcdb6ba1ae9f34a97cf8f6deeedf1a8d" translate="yes" xml:space="preserve">
          <source>And</source>
          <target state="translated">And</target>
        </trans-unit>
        <trans-unit id="42b71964be13234f4cbc3e386af8045e5f37b66e" translate="yes" xml:space="preserve">
          <source>And &lt;em&gt;src/front_of_house.rs&lt;/em&gt; gets the definitions from the body of the &lt;code&gt;front_of_house&lt;/code&gt; module, as shown in Listing 7-22.</source>
          <target state="translated">Y &lt;em&gt;src / front_of_house.rs&lt;/em&gt; obtiene las definiciones del cuerpo del &lt;code&gt;front_of_house&lt;/code&gt; m&amp;oacute;dulo , como se muestra en el Listado 7-22.</target>
        </trans-unit>
        <trans-unit id="a66dda047400c5c52222e76fafe04295868d79a8" translate="yes" xml:space="preserve">
          <source>And a very common source of output is standard output:</source>
          <target state="translated">Y una fuente muy común de salida es la salida estándar:</target>
        </trans-unit>
        <trans-unit id="5cd52670a2b07449cbe1bd4abb403c682ccaf168" translate="yes" xml:space="preserve">
          <source>And finally, for the last example, only &lt;code&gt;Box&amp;lt;Self&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;amp;Self&lt;/code&gt;, &lt;code&gt;Self&lt;/code&gt;, or &lt;code&gt;&amp;amp;mut Self&lt;/code&gt; work as explicit self parameters. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91a984e8eba980f8ed5afc44476d8d32720a1d5" translate="yes" xml:space="preserve">
          <source>And finally, let&amp;rsquo;s make sure that we don&amp;rsquo;t get any lines when we search for a word that isn&amp;rsquo;t anywhere in the poem, such as &amp;ldquo;monomorphization&amp;rdquo;:</source>
          <target state="translated">Y finalmente, asegur&amp;eacute;monos de no obtener ninguna l&amp;iacute;nea cuando buscamos una palabra que no est&amp;aacute; en ninguna parte del poema, como &quot;monomorfizaci&amp;oacute;n&quot;:</target>
        </trans-unit>
        <trans-unit id="8ddbbced7930dcaf198948383ed803d74e9323cf" translate="yes" xml:space="preserve">
          <source>And finally, the standard library exports a number of standard macros, and &lt;a href=&quot;#macros&quot;&gt;lists them on this page&lt;/a&gt; (technically, not all of the standard macros are defined by the standard library - some are defined by the compiler - but they are documented here the same). Like the prelude, the standard macros are imported by default into all crates.</source>
          <target state="translated">Y finalmente, la biblioteca est&amp;aacute;ndar exporta una serie de macros est&amp;aacute;ndar y las &lt;a href=&quot;#macros&quot;&gt;enumera en esta p&amp;aacute;gina&lt;/a&gt; (t&amp;eacute;cnicamente, no todas las macros est&amp;aacute;ndar est&amp;aacute;n definidas por la biblioteca est&amp;aacute;ndar, algunas las define el compilador, pero est&amp;aacute;n documentadas aqu&amp;iacute; de la misma manera) . Al igual que en el preludio, las macros est&amp;aacute;ndar se importan de forma predeterminada en todas las cajas.</target>
        </trans-unit>
        <trans-unit id="01c604c6cbed200d9271efd93c6961cdbaa99ebc" translate="yes" xml:space="preserve">
          <source>And now let's give working examples:</source>
          <target state="translated">Y ahora vamos a dar ejemplos de trabajo:</target>
        </trans-unit>
        <trans-unit id="076add01b447af4a01e4ff6b95c8cd6d23f8bbbe" translate="yes" xml:space="preserve">
          <source>And now some working examples:</source>
          <target state="translated">Y ahora algunos ejemplos de trabajo:</target>
        </trans-unit>
        <trans-unit id="3e0adb51e88db164baaa3fd268ad64b534eb5476" translate="yes" xml:space="preserve">
          <source>And so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965c5135f65b1edbef655afbf975cd109690bf20" translate="yes" xml:space="preserve">
          <source>And so, our final result, &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">Y as&amp;iacute;, nuestro resultado final, &lt;code&gt;6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8576d009cd19a7310431c770ccd6d0477a9a38f5" translate="yes" xml:space="preserve">
          <source>And the expected output would look like the following, because both dimensions of &lt;code&gt;rect2&lt;/code&gt; are smaller than the dimensions of &lt;code&gt;rect1&lt;/code&gt; but &lt;code&gt;rect3&lt;/code&gt; is wider than &lt;code&gt;rect1&lt;/code&gt;:</source>
          <target state="translated">Y la salida esperada se ver&amp;iacute;a as&amp;iacute;, porque ambas dimensiones de &lt;code&gt;rect2&lt;/code&gt; son m&amp;aacute;s peque&amp;ntilde;as que las dimensiones de &lt;code&gt;rect1&lt;/code&gt; pero &lt;code&gt;rect3&lt;/code&gt; es m&amp;aacute;s ancho que &lt;code&gt;rect1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="304a9abb7c8dbb46b1cac5f34e7d81eb70527d19" translate="yes" xml:space="preserve">
          <source>And the following is the same example, except using &lt;a href=&quot;generics#where-clauses&quot;&gt;where clauses&lt;/a&gt;.</source>
          <target state="translated">Y el siguiente es el mismo ejemplo, excepto el uso de &lt;a href=&quot;generics#where-clauses&quot;&gt;cl&amp;aacute;usulas where&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="913d407459e0226b150e7a70e74b4001bb096c87" translate="yes" xml:space="preserve">
          <source>And then usage on the derive macro on a struct:</source>
          <target state="translated">Y luego el uso de la macro derivada en una estructura:</target>
        </trans-unit>
        <trans-unit id="16869e8d4badcf1212b889f654db64e52cba8e49" translate="yes" xml:space="preserve">
          <source>And then using said derive macro:</source>
          <target state="translated">Y luego usando dicha macro derivada:</target>
        </trans-unit>
        <trans-unit id="fde456d658fb04a2082b8789148df9b0dd8dabdb" translate="yes" xml:space="preserve">
          <source>And then we use it a binary crate to print &quot;42&quot; to standard output.</source>
          <target state="translated">Y luego lo usamos una caja binaria para imprimir &quot;42&quot; a la salida estándar.</target>
        </trans-unit>
        <trans-unit id="57be02e986031e930e9bf37db6620140ea92c664" translate="yes" xml:space="preserve">
          <source>And then we use it in a binary crate to print &quot;42&quot; to standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843c5d94071a4fae0f20d3e75ea70e29673c03d4" translate="yes" xml:space="preserve">
          <source>And we can call this function with either variant:</source>
          <target state="translated">Y podemos llamar a esta función con cualquier variante:</target>
        </trans-unit>
        <trans-unit id="406aea8920a159db743c7e055df50170c501f68e" translate="yes" xml:space="preserve">
          <source>And we&amp;rsquo;re done&amp;mdash;all of Listing 17-11 now works! We&amp;rsquo;ve implemented the state pattern with the rules of the blog post workflow. The logic related to the rules lives in the state objects rather than being scattered throughout &lt;code&gt;Post&lt;/code&gt;.</source>
          <target state="translated">Y hemos terminado, &amp;iexcl;todo el Listado 17-11 ahora funciona! Hemos implementado el patr&amp;oacute;n de estado con las reglas del flujo de trabajo de la publicaci&amp;oacute;n de blog. La l&amp;oacute;gica relacionada con las reglas vive en los objetos de estado en lugar de estar esparcida por &lt;code&gt;Post&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d71a2256704824ddf84d5c0504e7d9d40555e056" translate="yes" xml:space="preserve">
          <source>And you make a hard link of the program:</source>
          <target state="translated">Y tú haces un vínculo difícil del programa:</target>
        </trans-unit>
        <trans-unit id="1a652f499d8171d97dc8db68df0dbf0a99d7c3f2" translate="yes" xml:space="preserve">
          <source>AndAnd</source>
          <target state="translated">AndAnd</target>
        </trans-unit>
        <trans-unit id="bcffbb2710fb4ff9f2236988e5b2ed04ecff3723" translate="yes" xml:space="preserve">
          <source>AndEq</source>
          <target state="translated">AndEq</target>
        </trans-unit>
        <trans-unit id="c4af9f801ba386b4d95b5962fd0aee793823a0c6" translate="yes" xml:space="preserve">
          <source>Anonymous type parameters</source>
          <target state="translated">Parámetros de tipo anónimo</target>
        </trans-unit>
        <trans-unit id="f739dc0ff02bf7ebdbbaf543c53bc8d5f32aa9b9" translate="yes" xml:space="preserve">
          <source>Another aspect commonly associated with OOP is the idea of &lt;em&gt;encapsulation&lt;/em&gt;, which means that the implementation details of an object aren&amp;rsquo;t accessible to code using that object. Therefore, the only way to interact with an object is through its public API; code using the object shouldn&amp;rsquo;t be able to reach into the object&amp;rsquo;s internals and change data or behavior directly. This enables the programmer to change and refactor an object&amp;rsquo;s internals without needing to change the code that uses the object.</source>
          <target state="translated">Otro aspecto com&amp;uacute;nmente asociado con OOP es la idea de &lt;em&gt;encapsulaci&amp;oacute;n&lt;/em&gt; , lo que significa que los detalles de implementaci&amp;oacute;n de un objeto no son accesibles al c&amp;oacute;digo que usa ese objeto. Por lo tanto, la &amp;uacute;nica forma de interactuar con un objeto es a trav&amp;eacute;s de su API p&amp;uacute;blica; el c&amp;oacute;digo que usa el objeto no deber&amp;iacute;a poder llegar a las partes internas del objeto y cambiar los datos o el comportamiento directamente. Esto permite al programador cambiar y refactorizar las partes internas de un objeto sin necesidad de cambiar el c&amp;oacute;digo que usa el objeto.</target>
        </trans-unit>
        <trans-unit id="3244c196f26eb3ebda5753ab0aa6df5308b053cc" translate="yes" xml:space="preserve">
          <source>Another case that causes this error is when a type is imported into a parent module. To fix this, you can follow the suggestion and use File directly or &lt;code&gt;use super::File;&lt;/code&gt; which will import the types from the parent namespace. An example that causes this error is below:</source>
          <target state="translated">Otro caso que causa este error es cuando se importa un tipo a un m&amp;oacute;dulo principal. Para solucionar este problema, puede seguir la sugerencia y utilizar Archivo directamente o &lt;code&gt;use super::File;&lt;/code&gt; que importar&amp;aacute; los tipos del espacio de nombres principal. A continuaci&amp;oacute;n, se muestra un ejemplo que causa este error:</target>
        </trans-unit>
        <trans-unit id="f5177285c1540f1a230a9212d6ad08c740059bb0" translate="yes" xml:space="preserve">
          <source>Another case where this error is emitted is when a value is expected, but something else is found:</source>
          <target state="translated">Otro caso en el que se emite este error es cuando se espera un valor,pero se encuentra algo más:</target>
        </trans-unit>
        <trans-unit id="583bae5ce904e4cf097b6105871c304a4243a347" translate="yes" xml:space="preserve">
          <source>Another common use case for hash maps is to look up a key&amp;rsquo;s value and then update it based on the old value. For instance, Listing 8-26 shows code that counts how many times each word appears in some text. We use a hash map with the words as keys and increment the value to keep track of how many times we&amp;rsquo;ve seen that word. If it&amp;rsquo;s the first time we&amp;rsquo;ve seen a word, we&amp;rsquo;ll first insert the value 0.</source>
          <target state="translated">Otro caso de uso com&amp;uacute;n para los mapas hash es buscar el valor de una clave y luego actualizarlo en funci&amp;oacute;n del valor anterior. Por ejemplo, el Listado 8-26 muestra un c&amp;oacute;digo que cuenta cu&amp;aacute;ntas veces aparece cada palabra en alg&amp;uacute;n texto. Usamos un mapa hash con las palabras como claves e incrementamos el valor para realizar un seguimiento de cu&amp;aacute;ntas veces hemos visto esa palabra. Si es la primera vez que vemos una palabra, primero insertaremos el valor 0.</target>
        </trans-unit>
        <trans-unit id="6faac33ab3de2071db8e2f1ae3893ca39a492717" translate="yes" xml:space="preserve">
          <source>Another common way to evaluate an iterator is to use the &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;&lt;code&gt;collect&lt;/code&gt;&lt;/a&gt; method to produce a new collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4154c9de58b2e0fcab49a95a24b663a485fc7b" translate="yes" xml:space="preserve">
          <source>Another crate that depends on this library would need &lt;code&gt;use&lt;/code&gt; statements that bring the items from &lt;code&gt;art&lt;/code&gt; into scope, specifying the module structure that&amp;rsquo;s currently defined. Listing 14-4 shows an example of a crate that uses the &lt;code&gt;PrimaryColor&lt;/code&gt; and &lt;code&gt;mix&lt;/code&gt; items from the &lt;code&gt;art&lt;/code&gt; crate:</source>
          <target state="translated">Otra caja que depende de esta biblioteca necesitar&amp;iacute;a declaraciones de &lt;code&gt;use&lt;/code&gt; que traigan los elementos del &lt;code&gt;art&lt;/code&gt; e al alcance, especificando la estructura del m&amp;oacute;dulo que est&amp;aacute; definida actualmente. El Listado 14-4 muestra un ejemplo de una caja que usa &lt;code&gt;PrimaryColor&lt;/code&gt; y &lt;code&gt;mix&lt;/code&gt; elementos de la caja de &lt;code&gt;art&lt;/code&gt; e :</target>
        </trans-unit>
        <trans-unit id="36e9fb79f8131b77a6b5deaea1a5127794ef21b6" translate="yes" xml:space="preserve">
          <source>Another data type that does not have ownership is the &lt;em&gt;slice&lt;/em&gt;. Slices let you reference a contiguous sequence of elements in a collection rather than the whole collection.</source>
          <target state="translated">Otro tipo de datos que no tiene propiedad es el &lt;em&gt;segmento&lt;/em&gt; . Los sectores le permiten hacer referencia a una secuencia contigua de elementos en una colecci&amp;oacute;n en lugar de a toda la colecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2188fdee49af653aee0e28e4ac63dee8849194f0" translate="yes" xml:space="preserve">
          <source>Another detail to note is that Rust can&amp;rsquo;t protect you from all kinds of logic errors when you use &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;. Recall in Chapter 15 that using &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; came with the risk of creating reference cycles, where two &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; values refer to each other, causing memory leaks. Similarly, &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; comes with the risk of creating &lt;em&gt;deadlocks&lt;/em&gt;. These occur when an operation needs to lock two resources and two threads have each acquired one of the locks, causing them to wait for each other forever. If you&amp;rsquo;re interested in deadlocks, try creating a Rust program that has a deadlock; then research deadlock mitigation strategies for mutexes in any language and have a go at implementing them in Rust. The standard library API documentation for &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;MutexGuard&lt;/code&gt; offers useful information.</source>
          <target state="translated">Otro detalle a tener en cuenta es que Rust no puede protegerte de todo tipo de errores l&amp;oacute;gicos cuando usas &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; . Recuerde en el Cap&amp;iacute;tulo 15 que el uso de &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; conlleva el riesgo de crear ciclos de referencia, donde dos valores &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; se refieren entre s&amp;iacute;, lo que provoca p&amp;eacute;rdidas de memoria. Del mismo modo, &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; conlleva el riesgo de crear &lt;em&gt;interbloqueos&lt;/em&gt;. Esto ocurre cuando una operaci&amp;oacute;n necesita bloquear dos recursos y dos subprocesos han adquirido cada uno de los bloqueos, lo que hace que se esperen el uno al otro para siempre. Si est&amp;aacute; interesado en los puntos muertos, intente crear un programa de Rust que tenga un punto muerto; luego, investigue estrategias de mitigaci&amp;oacute;n de puntos muertos para mutex en cualquier idioma y pruebe a implementarlas en Rust. La documentaci&amp;oacute;n API de la biblioteca est&amp;aacute;ndar para ofrece informaci&amp;oacute;n &amp;uacute;til. &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; y &lt;code&gt;MutexGuard&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a89f510396bf7e7d6ce47105d5094f9ffdc43c0a" translate="yes" xml:space="preserve">
          <source>Another difference between constants and static variables is that static variables can be mutable. Accessing and modifying mutable static variables is &lt;em&gt;unsafe&lt;/em&gt;. Listing 19-10 shows how to declare, access, and modify a mutable static variable named &lt;code&gt;COUNTER&lt;/code&gt;.</source>
          <target state="translated">Otra diferencia entre constantes y variables est&amp;aacute;ticas es que las variables est&amp;aacute;ticas pueden ser mutables. Acceder y modificar variables est&amp;aacute;ticas mutables &lt;em&gt;no&lt;/em&gt; es &lt;em&gt;seguro&lt;/em&gt; . El listado 19-10 muestra c&amp;oacute;mo declarar, acceder y modificar una variable est&amp;aacute;tica mutable llamada &lt;code&gt;COUNTER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e6b390982d432e5d51ecddfefa741ac598bed4a" translate="yes" xml:space="preserve">
          <source>Another downside is that we&amp;rsquo;ve duplicated some logic. To eliminate some of the duplication, we might try to make default implementations for the &lt;code&gt;request_review&lt;/code&gt; and &lt;code&gt;approve&lt;/code&gt; methods on the &lt;code&gt;State&lt;/code&gt; trait that return &lt;code&gt;self&lt;/code&gt;; however, this would violate object safety, because the trait doesn&amp;rsquo;t know what the concrete &lt;code&gt;self&lt;/code&gt; will be exactly. We want to be able to use &lt;code&gt;State&lt;/code&gt; as a trait object, so we need its methods to be object safe.</source>
          <target state="translated">Otro inconveniente es que hemos duplicado cierta l&amp;oacute;gica. Para eliminar parte de la duplicaci&amp;oacute;n, podr&amp;iacute;amos intentar realizar implementaciones predeterminadas para &lt;code&gt;request_review&lt;/code&gt; y &lt;code&gt;approve&lt;/code&gt; m&amp;eacute;todos en el rasgo de &lt;code&gt;State&lt;/code&gt; que devuelven &lt;code&gt;self&lt;/code&gt; ; sin embargo, esto violar&amp;iacute;a la seguridad del objeto, porque el rasgo no sabe qu&amp;eacute; ser&amp;aacute; exactamente el &lt;code&gt;self&lt;/code&gt; concreto . Queremos poder utilizar &lt;code&gt;State&lt;/code&gt; como un objeto de rasgo, por lo que necesitamos que sus m&amp;eacute;todos sean seguros para los objetos.</target>
        </trans-unit>
        <trans-unit id="0b90ca84780d33c44fc3e74f14be69eb7fd048f1" translate="yes" xml:space="preserve">
          <source>Another erroneous code example:</source>
          <target state="translated">Otro ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="b9c6fc1e93014c21a06c17d750322f830024d1b0" translate="yes" xml:space="preserve">
          <source>Another example of a complex NT is &lt;code&gt;$(hi $e:expr ;)+&lt;/code&gt;, which matches any fragment of the form &lt;code&gt;hi &amp;lt;expr&amp;gt;; hi &amp;lt;expr&amp;gt;; ...&lt;/code&gt; where &lt;code&gt;hi &amp;lt;expr&amp;gt;;&lt;/code&gt; occurs at least once. Note that this complex NT does not have a dedicated separator token.</source>
          <target state="translated">Otro ejemplo de una NT compleja es &lt;code&gt;$(hi $e:expr ;)+&lt;/code&gt; , que coincide con cualquier fragmento de la forma &lt;code&gt;hi &amp;lt;expr&amp;gt;; hi &amp;lt;expr&amp;gt;; ...&lt;/code&gt; donde &lt;code&gt;hi &amp;lt;expr&amp;gt;;&lt;/code&gt; ocurre al menos una vez. Tenga en cuenta que este NT complejo no tiene un s&amp;iacute;mbolo separador dedicado.</target>
        </trans-unit>
        <trans-unit id="7ec0f590b55aa6269d2b833239d2434dfe2c8db0" translate="yes" xml:space="preserve">
          <source>Another example of a non-&lt;code&gt;Sync&lt;/code&gt; type is the reference-counting pointer &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;. Given any reference &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;&amp;amp;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, you can clone a new &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, modifying the reference counts in a non-atomic way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c5ab10f51e34387707bf7df6173ca28d162973" translate="yes" xml:space="preserve">
          <source>Another example of a non-&lt;code&gt;Sync&lt;/code&gt; type is the reference-counting pointer &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;rc::Rc&lt;/code&gt;&lt;/a&gt;. Given any reference &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;&amp;amp;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, you can clone a new &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, modifying the reference counts in a non-atomic way.</source>
          <target state="translated">Otro ejemplo de un tipo no &lt;code&gt;Sync&lt;/code&gt; es el puntero de conteo de referencias &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;rc::Rc&lt;/code&gt; &lt;/a&gt; . Dada cualquier referencia &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;&amp;amp;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; , puede clonar un nuevo &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; , modificando los recuentos de referencia de una manera no at&amp;oacute;mica.</target>
        </trans-unit>
        <trans-unit id="5d9b32be0b7923daf9aadae8867f04bd738917c6" translate="yes" xml:space="preserve">
          <source>Another example showing how to keep &lt;code&gt;Cow&lt;/code&gt; in a struct:</source>
          <target state="translated">Otro ejemplo que muestra c&amp;oacute;mo mantener &lt;code&gt;Cow&lt;/code&gt; en una estructura:</target>
        </trans-unit>
        <trans-unit id="dedf5ccdeb6bf446ef7cfb01d8db4c4b042b2078" translate="yes" xml:space="preserve">
          <source>Another example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73dbef5057ac390e03a6e177bceb38dfa0e2cca7" translate="yes" xml:space="preserve">
          <source>Another implication of the 4-byte fixed size of a &lt;code&gt;char&lt;/code&gt; is that per-&lt;code&gt;char&lt;/code&gt; processing can end up using a lot more memory:</source>
          <target state="translated">Otra implicaci&amp;oacute;n del tama&amp;ntilde;o fijo de 4 bytes de un &lt;code&gt;char&lt;/code&gt; es que per- &lt;code&gt;char&lt;/code&gt; de procesamiento puede terminar usando una memoria mucho m&amp;aacute;s:</target>
        </trans-unit>
        <trans-unit id="8ab43d76c6773436cfee7acbc8b6406943d7ca07" translate="yes" xml:space="preserve">
          <source>Another important difference between macros and functions is that you must define macros or bring them into scope &lt;em&gt;before&lt;/em&gt; you call them in a file, as opposed to functions you can define anywhere and call anywhere.</source>
          <target state="translated">Otra diferencia importante entre macros y funciones es que debe definir macros o traerlas al alcance &lt;em&gt;antes de&lt;/em&gt; llamarlas en un archivo, a diferencia de las funciones que puede definir en cualquier lugar y llamar en cualquier lugar.</target>
        </trans-unit>
        <trans-unit id="6f8bbe73702fb41924bac262bfb8595f3c660f2c" translate="yes" xml:space="preserve">
          <source>Another indicator that shows there&amp;rsquo;s room for improvement is the &lt;code&gt;config&lt;/code&gt; part of &lt;code&gt;parse_config&lt;/code&gt;, which implies that the two values we return are related and are both part of one configuration value. We&amp;rsquo;re not currently conveying this meaning in the structure of the data other than by grouping the two values into a tuple; we could put the two values into one struct and give each of the struct fields a meaningful name. Doing so will make it easier for future maintainers of this code to understand how the different values relate to each other and what their purpose is.</source>
          <target state="translated">Otro indicador que muestra que hay margen de mejora es la parte de &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n de &lt;code&gt;parse_config&lt;/code&gt; , lo que implica que los dos valores que devolvemos est&amp;aacute;n relacionados y ambos forman parte de un valor de configuraci&amp;oacute;n. Actualmente no estamos transmitiendo este significado en la estructura de los datos m&amp;aacute;s que agrupando los dos valores en una tupla; podr&amp;iacute;amos poner los dos valores en una estructura y darle a cada uno de los campos de la estructura un nombre significativo. Si lo hace, ser&amp;aacute; m&amp;aacute;s f&amp;aacute;cil para los futuros mantenedores de este c&amp;oacute;digo comprender c&amp;oacute;mo se relacionan los diferentes valores entre s&amp;iacute; y cu&amp;aacute;l es su prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="00e0685682ab1fea96a488f384eaf2fdca89f82c" translate="yes" xml:space="preserve">
          <source>Another kind of generic that we&amp;rsquo;ve already been using is called &lt;em&gt;lifetimes&lt;/em&gt;. Rather than ensuring that a type has the behavior we want, lifetimes ensure that references are valid as long as we need them to be. Let&amp;rsquo;s look at how lifetimes do that.</source>
          <target state="translated">Otro tipo de gen&amp;eacute;rico que ya hemos estado usando se llama &lt;em&gt;vidas&lt;/em&gt; . En lugar de garantizar que un tipo tenga el comportamiento que deseamos, las vidas &amp;uacute;tiles garantizan que las referencias sean v&amp;aacute;lidas siempre que las necesitemos. Veamos c&amp;oacute;mo las vidas hacen eso.</target>
        </trans-unit>
        <trans-unit id="310cbb5c9fbbbdff4450ff99ffebe8e97470ef1e" translate="yes" xml:space="preserve">
          <source>Another method, &lt;code&gt;expect&lt;/code&gt;, which is similar to &lt;code&gt;unwrap&lt;/code&gt;, lets us also choose the &lt;code&gt;panic!&lt;/code&gt; error message. Using &lt;code&gt;expect&lt;/code&gt; instead of &lt;code&gt;unwrap&lt;/code&gt; and providing good error messages can convey your intent and make tracking down the source of a panic easier. The syntax of &lt;code&gt;expect&lt;/code&gt; looks like this:</source>
          <target state="translated">Otro m&amp;eacute;todo, &lt;code&gt;expect&lt;/code&gt; , que es similar a &lt;code&gt;unwrap&lt;/code&gt; , &amp;iexcl;nos permite tambi&amp;eacute;n elegir el &lt;code&gt;panic!&lt;/code&gt; mensaje de error. Usar &lt;code&gt;expect&lt;/code&gt; lugar de &lt;code&gt;unwrap&lt;/code&gt; y proporcionar buenos mensajes de error puede transmitir su intenci&amp;oacute;n y facilitar el rastreo de la fuente del p&amp;aacute;nico. La sintaxis de &lt;code&gt;expect&lt;/code&gt; ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f5499cba2c47a56c76648e5bfb00e8274cd4700a" translate="yes" xml:space="preserve">
          <source>Another point about UTF-8 is that there are actually three relevant ways to look at strings from Rust&amp;rsquo;s perspective: as bytes, scalar values, and grapheme clusters (the closest thing to what we would call &lt;em&gt;letters&lt;/em&gt;).</source>
          <target state="translated">Otro punto sobre UTF-8 es que en realidad hay tres formas relevantes de ver las cadenas desde la perspectiva de Rust: como bytes, valores escalares y grupos de grafemas (lo m&amp;aacute;s parecido a lo que llamar&amp;iacute;amos &lt;em&gt;letras&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="81bb35319cfe55cae7a1b6f8b640c268f984543f" translate="yes" xml:space="preserve">
          <source>Another problem you might be facing is this: suppose you've overloaded the &lt;code&gt;+&lt;/code&gt; operator for some type &lt;code&gt;Foo&lt;/code&gt; by implementing the &lt;code&gt;std::ops::Add&lt;/code&gt; trait for &lt;code&gt;Foo&lt;/code&gt;, but you find that using &lt;code&gt;+=&lt;/code&gt; does not work, as in this example:</source>
          <target state="translated">Otro problema al que podr&amp;iacute;a estar enfrentando es el siguiente: suponga que ha sobrecargado el operador &lt;code&gt;+&lt;/code&gt; para alg&amp;uacute;n tipo &lt;code&gt;Foo&lt;/code&gt; al implementar &lt;code&gt;std::ops::Add&lt;/code&gt; trait para &lt;code&gt;Foo&lt;/code&gt; , pero encuentra que usar &lt;code&gt;+=&lt;/code&gt; no funciona, como en este ejemplo :</target>
        </trans-unit>
        <trans-unit id="aac5c18dffed07c8f0aa7695dfba8d6c18e4b19b" translate="yes" xml:space="preserve">
          <source>Another reason Rust has an unsafe alter ego is that the underlying computer hardware is inherently unsafe. If Rust didn&amp;rsquo;t let you do unsafe operations, you couldn&amp;rsquo;t do certain tasks. Rust needs to allow you to do low-level systems programming, such as directly interacting with the operating system or even writing your own operating system. Working with low-level systems programming is one of the goals of the language. Let&amp;rsquo;s explore what we can do with unsafe Rust and how to do it.</source>
          <target state="translated">Otra raz&amp;oacute;n por la que Rust tiene un alter ego inseguro es que el hardware inform&amp;aacute;tico subyacente es intr&amp;iacute;nsecamente inseguro. Si Rust no le permiti&amp;oacute; realizar operaciones inseguras, no podr&amp;iacute;a realizar ciertas tareas. Rust necesita permitirle realizar programaci&amp;oacute;n de sistemas de bajo nivel, como interactuar directamente con el sistema operativo o incluso escribir su propio sistema operativo. Trabajar con programaci&amp;oacute;n de sistemas de bajo nivel es uno de los objetivos del lenguaje. Exploremos qu&amp;eacute; podemos hacer con el inseguro Rust y c&amp;oacute;mo hacerlo.</target>
        </trans-unit>
        <trans-unit id="ea0e4d862c74d436d68a36a2f5a91a9f7ba71ea8" translate="yes" xml:space="preserve">
          <source>Another shortcut for struct instantiation is available, used when you need to make a new struct that has the same values as most of a previous struct of the same type, called struct update syntax:</source>
          <target state="translated">Existe otro atajo para la instanciación de estructuras,que se utiliza cuando se necesita hacer una nueva estructura que tenga los mismos valores que la mayoría de una estructura anterior del mismo tipo,llamada sintaxis de actualización de estructuras:</target>
        </trans-unit>
        <trans-unit id="f3ef4925d92f67dd0f9c6ef4b106d217ff19945f" translate="yes" xml:space="preserve">
          <source>Another situation where this might be encountered is when spawning threads:</source>
          <target state="translated">Otra situación en la que esto podría encontrarse es cuando se desovan los hilos:</target>
        </trans-unit>
        <trans-unit id="34208ffcc5dda542066ff03ecbdd472bf7d5f1c2" translate="yes" xml:space="preserve">
          <source>Another solution for avoiding reference cycles is reorganizing your data structures so that some references express ownership and some references don&amp;rsquo;t. As a result, you can have cycles made up of some ownership relationships and some non-ownership relationships, and only the ownership relationships affect whether or not a value can be dropped. In Listing 15-25, we always want &lt;code&gt;Cons&lt;/code&gt; variants to own their list, so reorganizing the data structure isn&amp;rsquo;t possible. Let&amp;rsquo;s look at an example using graphs made up of parent nodes and child nodes to see when non-ownership relationships are an appropriate way to prevent reference cycles.</source>
          <target state="translated">Otra soluci&amp;oacute;n para evitar los ciclos de referencia es reorganizar sus estructuras de datos para que algunas referencias expresen propiedad y otras no. Como resultado, puede tener ciclos compuestos por algunas relaciones de propiedad y algunas relaciones de no propiedad, y solo las relaciones de propiedad afectan si un valor se puede eliminar o no. En el Listado 15-25, siempre queremos que las variantes de &lt;code&gt;Cons&lt;/code&gt; sean due&amp;ntilde;as de su lista, por lo que no es posible reorganizar la estructura de datos. Veamos un ejemplo que utiliza gr&amp;aacute;ficos formados por nodos principales y nodos secundarios para ver cu&amp;aacute;ndo las relaciones de no propiedad son una forma adecuada de evitar ciclos de referencia.</target>
        </trans-unit>
        <trans-unit id="561d97b6164c78f724fabd7e84d16f2ca6a5f05e" translate="yes" xml:space="preserve">
          <source>Another style of doc comment, &lt;code&gt;//!&lt;/code&gt;, adds documentation to the item that contains the comments rather than adding documentation to the items following the comments. We typically use these doc comments inside the crate root file (&lt;em&gt;src/lib.rs&lt;/em&gt; by convention) or inside a module to document the crate or the module as a whole.</source>
          <target state="translated">Otro estilo de comentario de documento, &lt;code&gt;//!&lt;/code&gt; , agrega documentaci&amp;oacute;n al elemento que contiene los comentarios en lugar de agregar documentaci&amp;oacute;n a los elementos que siguen a los comentarios. Normalmente usamos estos comentarios de documentos dentro del archivo ra&amp;iacute;z de la caja ( &lt;em&gt;src / lib.rs&lt;/em&gt; por convenci&amp;oacute;n) o dentro de un m&amp;oacute;dulo para documentar la caja o el m&amp;oacute;dulo como un todo.</target>
        </trans-unit>
        <trans-unit id="bfe5186a552091b0c590be070139e735a13d8759" translate="yes" xml:space="preserve">
          <source>Another use of the newtype pattern is in abstracting away some implementation details of a type: the new type can expose a public API that is different from the API of the private inner type if we used the new type directly to restrict the available functionality, for example.</source>
          <target state="translated">Otro uso de la pauta del nuevo tipo consiste en abstraer algunos detalles de implementación de un tipo:el nuevo tipo puede exponer una API pública que sea diferente de la API del tipo interno privado si utilizamos el nuevo tipo directamente para restringir la funcionalidad disponible,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="5796386c80b53dfd4fee86ac2eb96a8dcc028b10" translate="yes" xml:space="preserve">
          <source>Another useful feature of &lt;code&gt;impl&lt;/code&gt; blocks is that we&amp;rsquo;re allowed to define functions within &lt;code&gt;impl&lt;/code&gt; blocks that &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; take &lt;code&gt;self&lt;/code&gt; as a parameter. These are called &lt;em&gt;associated functions&lt;/em&gt; because they&amp;rsquo;re associated with the struct. They&amp;rsquo;re still functions, not methods, because they don&amp;rsquo;t have an instance of the struct to work with. You&amp;rsquo;ve already used the &lt;code&gt;String::from&lt;/code&gt; associated function.</source>
          <target state="translated">Otra caracter&amp;iacute;stica &amp;uacute;til de los bloques &lt;code&gt;impl&lt;/code&gt; es que se nos permite definir funciones dentro de bloques &lt;code&gt;impl&lt;/code&gt; que &lt;em&gt;no&lt;/em&gt; toman &lt;code&gt;self&lt;/code&gt; como par&amp;aacute;metro. Estas se denominan &lt;em&gt;funciones asociadas&lt;/em&gt; porque est&amp;aacute;n asociadas con la estructura. Siguen siendo funciones, no m&amp;eacute;todos, porque no tienen una instancia de la estructura con la que trabajar. Ya us&amp;oacute; la funci&amp;oacute;n asociada &lt;code&gt;String::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30235cc37ef7579d4a5373609eca2f1e91e01f9f" translate="yes" xml:space="preserve">
          <source>Another useful feature of match arms is that they can bind to the parts of the values that match the pattern. This is how we can extract values out of enum variants.</source>
          <target state="translated">Otra característica útil de los brazos de fósforo es que pueden unirse a las partes de los valores que coinciden con el patrón.Así es como podemos extraer valores de las variantes de enumeración.</target>
        </trans-unit>
        <trans-unit id="03644769062de97f25c38104b0372355c4a77983" translate="yes" xml:space="preserve">
          <source>Another way is to do away with the associated type in &lt;code&gt;Maker&lt;/code&gt; and use an input type parameter instead:</source>
          <target state="translated">Otra forma es eliminar el tipo asociado en &lt;code&gt;Maker&lt;/code&gt; y usar un par&amp;aacute;metro de tipo de entrada en su lugar:</target>
        </trans-unit>
        <trans-unit id="6f7bb901bc2f8efc6ca57a7f109d4ad53f1c9e20" translate="yes" xml:space="preserve">
          <source>Another way of constructing a hash map is by using iterators and the &lt;code&gt;collect&lt;/code&gt; method on a vector of tuples, where each tuple consists of a key and its value. We&amp;rsquo;ll be going into more detail about iterators and their associated methods in the &lt;a href=&quot;ch13-02-iterators&quot;&gt;&amp;rdquo;Processing a Series of Items with Iterators&amp;rdquo; section of Chapter 13&lt;/a&gt;. The &lt;code&gt;collect&lt;/code&gt; method gathers data into a number of collection types, including &lt;code&gt;HashMap&lt;/code&gt;. For example, if we had the team names and initial scores in two separate vectors, we could use the &lt;code&gt;zip&lt;/code&gt; method to create a vector of tuples where &amp;ldquo;Blue&amp;rdquo; is paired with 10, and so forth. Then we could use the &lt;code&gt;collect&lt;/code&gt; method to turn that vector of tuples into a hash map, as shown in Listing 8-21.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc69aa411fffd31870708506663671f3a6766b5" translate="yes" xml:space="preserve">
          <source>Another way of constructing a hash map is by using the &lt;code&gt;collect&lt;/code&gt; method on a vector of tuples, where each tuple consists of a key and its value. The &lt;code&gt;collect&lt;/code&gt; method gathers data into a number of collection types, including &lt;code&gt;HashMap&lt;/code&gt;. For example, if we had the team names and initial scores in two separate vectors, we could use the &lt;code&gt;zip&lt;/code&gt; method to create a vector of tuples where &amp;ldquo;Blue&amp;rdquo; is paired with 10, and so forth. Then we could use the &lt;code&gt;collect&lt;/code&gt; method to turn that vector of tuples into a hash map, as shown in Listing 8-21.</source>
          <target state="translated">Otra forma de construir un mapa hash es utilizando el m&amp;eacute;todo de &lt;code&gt;collect&lt;/code&gt; en un vector de tuplas, donde cada tupla consta de una clave y su valor. El m&amp;eacute;todo de &lt;code&gt;collect&lt;/code&gt; recopila datos en varios tipos de recopilaci&amp;oacute;n, incluido &lt;code&gt;HashMap&lt;/code&gt; . Por ejemplo, si tuvi&amp;eacute;ramos los nombres de los equipos y las puntuaciones iniciales en dos vectores separados, podr&amp;iacute;amos usar el m&amp;eacute;todo &lt;code&gt;zip&lt;/code&gt; para crear un vector de tuplas donde &amp;ldquo;Azul&amp;rdquo; se empareja con 10, y as&amp;iacute; sucesivamente. Luego, podr&amp;iacute;amos usar el m&amp;eacute;todo de &lt;code&gt;collect&lt;/code&gt; para convertir ese vector de tuplas en un mapa hash, como se muestra en el Listado 8-21.</target>
        </trans-unit>
        <trans-unit id="56bc825abe2ef1255ee87da2e4f261c23258e491" translate="yes" xml:space="preserve">
          <source>Another way of thinking about &lt;code&gt;flat_map()&lt;/code&gt;: &lt;a href=&quot;#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;'s closure returns one item for each element, and &lt;code&gt;flat_map()&lt;/code&gt;'s closure returns an iterator for each element.</source>
          <target state="translated">Otra forma de pensar sobre &lt;code&gt;flat_map()&lt;/code&gt; : el cierre del &lt;a href=&quot;#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; a&lt;/a&gt; devuelve un elemento para cada elemento, y el &lt;code&gt;flat_map()&lt;/code&gt; devuelve un iterador para cada elemento.</target>
        </trans-unit>
        <trans-unit id="d1f28d9b77a5082f5c9d67a87d7ff9fdc9ab88db" translate="yes" xml:space="preserve">
          <source>Another way of thinking about &lt;code&gt;flat_map()&lt;/code&gt;: &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;'s closure returns one item for each element, and &lt;code&gt;flat_map()&lt;/code&gt;'s closure returns an iterator for each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590fe2daae703b4f29d9d514cb7fe9863489ba23" translate="yes" xml:space="preserve">
          <source>Another way to access union fields is to use pattern matching. Pattern matching on union fields uses the same syntax as struct patterns, except that the pattern must specify exactly one field. Since pattern matching is like reading the union with a particular field, it has to be placed in &lt;code&gt;unsafe&lt;/code&gt; blocks as well.</source>
          <target state="translated">Otra forma de acceder a los campos de uni&amp;oacute;n es utilizar la coincidencia de patrones. La coincidencia de patrones en los campos de uni&amp;oacute;n usa la misma sintaxis que los patrones de estructura, excepto que el patr&amp;oacute;n debe especificar exactamente un campo. Dado que la coincidencia de patrones es como leer la uni&amp;oacute;n con un campo en particular, tambi&amp;eacute;n debe colocarse en bloques &lt;code&gt;unsafe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b9e5f7972ceab35649387701cac506db165c92f" translate="yes" xml:space="preserve">
          <source>Another way to have a collection of multiple values is with an &lt;em&gt;array&lt;/em&gt;. Unlike a tuple, every element of an array must have the same type. Arrays in Rust are different from arrays in some other languages because arrays in Rust have a fixed length, like tuples.</source>
          <target state="translated">Otra forma de tener una colecci&amp;oacute;n de valores m&amp;uacute;ltiples es con una &lt;em&gt;matriz&lt;/em&gt; . A diferencia de una tupla, todos los elementos de una matriz deben tener el mismo tipo. Las matrices en Rust son diferentes de las matrices en algunos otros lenguajes porque las matrices en Rust tienen una longitud fija, como las tuplas.</target>
        </trans-unit>
        <trans-unit id="6b16dbbf7d35ba29c07c44408e5ca0fc777803bb" translate="yes" xml:space="preserve">
          <source>Another way to provide the compiler with enough information, is to specify the generic type parameter:</source>
          <target state="translated">Otra forma de proporcionar al compilador suficiente información,es especificar el parámetro de tipo genérico:</target>
        </trans-unit>
        <trans-unit id="9b14c4635b7e156ee560ca02ddafb5c338efe01a" translate="yes" xml:space="preserve">
          <source>Another way we could implement &lt;code&gt;largest&lt;/code&gt; is for the function to return a reference to a &lt;code&gt;T&lt;/code&gt; value in the slice. If we change the return type to &lt;code&gt;&amp;amp;T&lt;/code&gt; instead of &lt;code&gt;T&lt;/code&gt;, thereby changing the body of the function to return a reference, we wouldn&amp;rsquo;t need the &lt;code&gt;Clone&lt;/code&gt; or &lt;code&gt;Copy&lt;/code&gt; trait bounds and we could avoid heap allocations. Try implementing these alternate solutions on your own!</source>
          <target state="translated">Otra forma en que podr&amp;iacute;amos implementar &lt;code&gt;largest&lt;/code&gt; es que la funci&amp;oacute;n devuelva una referencia a un valor &lt;code&gt;T&lt;/code&gt; en el segmento. Si cambiamos el tipo de retorno a &lt;code&gt;&amp;amp;T&lt;/code&gt; lugar de &lt;code&gt;T&lt;/code&gt; , cambiando as&amp;iacute; el cuerpo de la funci&amp;oacute;n para devolver una referencia, no necesitar&amp;iacute;amos los l&amp;iacute;mites del rasgo &lt;code&gt;Clone&lt;/code&gt; o &lt;code&gt;Copy&lt;/code&gt; y podr&amp;iacute;amos evitar asignaciones de mont&amp;oacute;n. &amp;iexcl;Intente implementar estas soluciones alternativas por su cuenta!</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="28a9dd9802c2f2d457b2df1a706228a0fe1e9650" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;BuildHasherDefault&lt;/code&gt; is &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;zero-sized&lt;/a&gt;. It can be created with &lt;a href=&quot;#method.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;. When using &lt;code&gt;BuildHasherDefault&lt;/code&gt; with &lt;a href=&quot;../collections/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../collections/struct.hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;, this doesn't need to be done, since they implement appropriate &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; instances themselves.</source>
          <target state="translated">Cualquier &lt;code&gt;BuildHasherDefault&lt;/code&gt; tiene &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;tama&amp;ntilde;o cero&lt;/a&gt; . Se puede crear por &lt;a href=&quot;#method.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; . Cuando se usa &lt;code&gt;BuildHasherDefault&lt;/code&gt; con &lt;a href=&quot;../collections/struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../collections/struct.hashset&quot;&gt; &lt;code&gt;HashSet&lt;/code&gt; &lt;/a&gt; , no es necesario hacerlo, ya que ellos mismos implementan las instancias &lt;a href=&quot;../default/trait.default&quot;&gt; &lt;code&gt;Default&lt;/code&gt; &lt;/a&gt; apropiadas .</target>
        </trans-unit>
        <trans-unit id="39acf470f03d64f751336d22936382dc10cf66e8" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;BuildHasherDefault&lt;/code&gt; is &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;zero-sized&lt;/a&gt;. It can be created with &lt;a href=&quot;struct.buildhasherdefault#method.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;. When using &lt;code&gt;BuildHasherDefault&lt;/code&gt; with &lt;a href=&quot;../collections/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../collections/struct.hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;, this doesn't need to be done, since they implement appropriate &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt; instances themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c0cc711bc6806236220ae14adf5485763a3373" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;enum&lt;/code&gt; value consumes as much memory as the largest variant for its corresponding &lt;code&gt;enum&lt;/code&gt; type, as well as the size needed to store a discriminant.</source>
          <target state="translated">Cualquier valor de &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n consume tanta memoria como la variante m&amp;aacute;s grande para su tipo de &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n correspondiente , as&amp;iacute; como el tama&amp;ntilde;o necesario para almacenar un discriminante.</target>
        </trans-unit>
        <trans-unit id="6ab54097a9523b84f57f773009ba255a131e3917" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;with_capacity&lt;/code&gt; constructor will instruct the collection to allocate enough space for the specified number of elements. Ideally this will be for exactly that many elements, but some implementation details may prevent this. See collection-specific documentation for details. In general, use &lt;code&gt;with_capacity&lt;/code&gt; when you know exactly how many elements will be inserted, or at least have a reasonable upper-bound on that number.</source>
          <target state="translated">Cualquier constructor &lt;code&gt;with_capacity&lt;/code&gt; indicar&amp;aacute; a la colecci&amp;oacute;n que asigne espacio suficiente para el n&amp;uacute;mero especificado de elementos. Idealmente, esto ser&amp;aacute; exactamente para esa cantidad de elementos, pero algunos detalles de implementaci&amp;oacute;n pueden evitarlo. Consulte la documentaci&amp;oacute;n espec&amp;iacute;fica de la colecci&amp;oacute;n para obtener m&amp;aacute;s detalles. En general, use &lt;code&gt;with_capacity&lt;/code&gt; cuando sepa exactamente cu&amp;aacute;ntos elementos se insertar&amp;aacute;n, o al menos tenga un l&amp;iacute;mite superior razonable en ese n&amp;uacute;mero.</target>
        </trans-unit>
        <trans-unit id="0b673eb46a7f5984769da2ecfe123198574739d4" translate="yes" xml:space="preserve">
          <source>Any I/O error not part of this list.</source>
          <target state="translated">Cualquier error de E/S que no sea parte de esta lista.</target>
        </trans-unit>
        <trans-unit id="49edcccea744a8f077751ea25c38d4fc4cfa0fe8" translate="yes" xml:space="preserve">
          <source>Any IP address can be either a version four or a version six address, but not both at the same time. That property of IP addresses makes the enum data structure appropriate, because enum values can only be one of its variants. Both version four and version six addresses are still fundamentally IP addresses, so they should be treated as the same type when the code is handling situations that apply to any kind of IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6867ac894a456ea99c7c6870f309c422acaaf4df" translate="yes" xml:space="preserve">
          <source>Any IP address can be either a version four or a version six address, but not both at the same time. That property of IP addresses makes the enum data structure appropriate, because enum values can only be one of the variants. Both version four and version six addresses are still fundamentally IP addresses, so they should be treated as the same type when the code is handling situations that apply to any kind of IP address.</source>
          <target state="translated">Cualquier dirección IP puede ser una dirección de la versión cuatro o de la versión seis,pero no ambas al mismo tiempo.Esa propiedad de las direcciones IP hace que la estructura de los datos enum sea apropiada,porque los valores enum sólo pueden ser una de las variantes.Tanto las direcciones de la versión cuatro como las de la versión seis siguen siendo fundamentalmente direcciones IP,por lo que deben ser tratadas como el mismo tipo cuando el código está manejando situaciones que se aplican a cualquier tipo de dirección IP.</target>
        </trans-unit>
        <trans-unit id="771cc11d8125e00769bce8eb3a9472fcb3c21cb2" translate="yes" xml:space="preserve">
          <source>Any character in the 'printable ASCII' range &lt;code&gt;0x20&lt;/code&gt; .. &lt;code&gt;0x7e&lt;/code&gt; inclusive is not escaped.</source>
          <target state="translated">Cualquier car&amp;aacute;cter en el rango de 'ASCII imprimible' &lt;code&gt;0x20&lt;/code&gt; .. &lt;code&gt;0x7e&lt;/code&gt; inclusive no tiene escape.</target>
        </trans-unit>
        <trans-unit id="3e6eb82cfd1ccce10703d68820085fb1a0e36401" translate="yes" xml:space="preserve">
          <source>Any characters, except this sequence</source>
          <target state="translated">Cualquier personaje,excepto esta secuencia</target>
        </trans-unit>
        <trans-unit id="4cd23fb2001ef303a1bdb9cc4bb51ec0898b0bb8" translate="yes" xml:space="preserve">
          <source>Any characters, except those listed</source>
          <target state="translated">Cualquier personaje,excepto los que figuran en la lista</target>
        </trans-unit>
        <trans-unit id="cf63f064edae30139fdd89fa67002f6be993edd6" translate="yes" xml:space="preserve">
          <source>Any conversions allowed by coercion can also be explicitly performed by the &lt;a href=&quot;expressions/operator-expr#type-cast-expressions&quot;&gt;type cast operator&lt;/a&gt;, &lt;code&gt;as&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de99d379f5705cbf09c5d5e30200a62d7427ee91" translate="yes" xml:space="preserve">
          <source>Any excess capacity is removed:</source>
          <target state="translated">Se elimina cualquier exceso de capacidad:</target>
        </trans-unit>
        <trans-unit id="cfff92a36bb4f2aba0bfefa3df53467014699fa5" translate="yes" xml:space="preserve">
          <source>Any implementation where a type appears &lt;a href=&quot;#uncovered-type&quot;&gt;uncovered&lt;/a&gt;. &lt;code&gt;impl&amp;lt;T&amp;gt; Foo for T&lt;/code&gt;, &lt;code&gt;impl&amp;lt;T&amp;gt; Bar&amp;lt;T&amp;gt; for T&lt;/code&gt;, &lt;code&gt;impl&amp;lt;T&amp;gt; Bar&amp;lt;Vec&amp;lt;T&amp;gt;&amp;gt; for T&lt;/code&gt;, and &lt;code&gt;impl&amp;lt;T&amp;gt; Bar&amp;lt;T&amp;gt; for Vec&amp;lt;T&amp;gt;&lt;/code&gt; are considered blanket impls. However, &lt;code&gt;impl&amp;lt;T&amp;gt; Bar&amp;lt;Vec&amp;lt;T&amp;gt;&amp;gt; for Vec&amp;lt;T&amp;gt;&lt;/code&gt; is not a blanket impl, as all instances of &lt;code&gt;T&lt;/code&gt; which appear in this &lt;code&gt;impl&lt;/code&gt; are covered by &lt;code&gt;Vec&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eba9dcc5c9c9c3a4fc6d9f7d5233af8a7847a24" translate="yes" xml:space="preserve">
          <source>Any kind of aggregate constructor (array, &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, tuple, ...)</source>
          <target state="translated">Cualquier tipo de constructor agregado (matriz, &lt;code&gt;struct&lt;/code&gt; , &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n , tupla, ...)</target>
        </trans-unit>
        <trans-unit id="a2d418110b6f755d1311536fe4acdfee5af1facd" translate="yes" xml:space="preserve">
          <source>Any kind of literal (string, integer, etc) with any suffix is valid as a token, and can be passed to a macro without producing an error.</source>
          <target state="translated">Cualquier tipo de literal (cadena,entero,etc.)con cualquier sufijo es válido como ficha,y puede ser pasado a una macro sin producir un error.</target>
        </trans-unit>
        <trans-unit id="6f537d5097da9afc6f346b4806da2a5f2a4e11dd" translate="yes" xml:space="preserve">
          <source>Any kind of literal (string, integer, etc) with any suffix is valid as a token, and can be passed to a macro without producing an error. The macro itself will decide how to interpret such a token and whether to produce an error or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbac428240bad16fb03767cc5cca3e5e71622e2" translate="yes" xml:space="preserve">
          <source>Any non-Unicode sequences are replaced with &lt;a href=&quot;../char/constant.replacement_character&quot;&gt;&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cualquier secuencia que no sea Unicode se reemplaza con &lt;a href=&quot;../char/constant.replacement_character&quot;&gt; &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3df46fe98310c858bb458ed2bc6017d791596b12" translate="yes" xml:space="preserve">
          <source>Any of the characters in the range</source>
          <target state="translated">Cualquiera de los personajes en el rango</target>
        </trans-unit>
        <trans-unit id="df4bb3c1fbc6102d5b31f44ab7298372090f0684" translate="yes" xml:space="preserve">
          <source>Any of the characters listed</source>
          <target state="translated">Cualquiera de los personajes de la lista</target>
        </trans-unit>
        <trans-unit id="e1fe17e124adf671f41a6bcdb30bc09a9767a019" translate="yes" xml:space="preserve">
          <source>Any of the methods provided by a &lt;a href=&quot;../visibility-and-privacy&quot;&gt;visible&lt;/a&gt; trait implemented by &lt;code&gt;T&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; is a type parameter, methods provided by trait bounds on &lt;code&gt;T&lt;/code&gt; are looked up first. Then all remaining methods in scope are looked up.</source>
          <target state="translated">Cualquiera de los m&amp;eacute;todos proporcionados por una &lt;a href=&quot;../visibility-and-privacy&quot;&gt;visible&lt;/a&gt; rasgo implementado por &lt;code&gt;T&lt;/code&gt; . Si &lt;code&gt;T&lt;/code&gt; es un par&amp;aacute;metro de tipo, los m&amp;eacute;todos proporcionados por los l&amp;iacute;mites del rasgo en &lt;code&gt;T&lt;/code&gt; se buscan primero. Luego, se buscan todos los m&amp;eacute;todos restantes dentro del alcance.</target>
        </trans-unit>
        <trans-unit id="5c8d97ac8cad3dfb222e1fcec0cd986d681f1547" translate="yes" xml:space="preserve">
          <source>Any other &lt;code&gt;Arc&lt;/code&gt; or &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to the same allocation must not be dereferenced for the duration of the returned borrow. This is trivially the case if no such pointers exist, for example immediately after &lt;code&gt;Arc::new&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c05e8f1c6956f4765a713498f6a6547d98317e6" translate="yes" xml:space="preserve">
          <source>Any other &lt;code&gt;Rc&lt;/code&gt; or &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to the same allocation must not be dereferenced for the duration of the returned borrow. This is trivially the case if no such pointers exist, for example immediately after &lt;code&gt;Rc::new&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19f15fb75a4bf5f47bda7e931808400dd6bf097" translate="yes" xml:space="preserve">
          <source>Any other changes attempted on a post should have no effect. For example, if we try to approve a draft blog post before we&amp;rsquo;ve requested a review, the post should remain an unpublished draft.</source>
          <target state="translated">Cualquier otro cambio que se intente en una publicaci&amp;oacute;n no deber&amp;iacute;a tener ning&amp;uacute;n efecto. Por ejemplo, si intentamos aprobar un borrador de una publicaci&amp;oacute;n de blog antes de solicitar una revisi&amp;oacute;n, la publicaci&amp;oacute;n debe seguir siendo un borrador no publicado.</target>
        </trans-unit>
        <trans-unit id="d6894150447e47d12e66ba741e1dc8f000de5b10" translate="yes" xml:space="preserve">
          <source>Any other chars are given hex escapes of the form '\xNN'.</source>
          <target state="translated">A cualquier otro personaje se le dan escapes hexagonales de la forma '\xNN'.</target>
        </trans-unit>
        <trans-unit id="c7e7ce7ad0344363614031d689f8048423505a67" translate="yes" xml:space="preserve">
          <source>Any resources the value manages, such as heap memory or a file handle, will linger forever in an unreachable state. However, it does not guarantee that pointers to this memory will remain valid.</source>
          <target state="translated">Cualquier recurso que el valor administre,como la memoria de pila o el manejo de un archivo,permanecerá para siempre en un estado inalcanzable.Sin embargo,no garantiza que los indicadores de esta memoria sigan siendo válidos.</target>
        </trans-unit>
        <trans-unit id="4582f1278b61140a4c03b6946eaab9c9e43377c3" translate="yes" xml:space="preserve">
          <source>Any suffixes are rejected on non-numeric literal tokens, and numeric literal tokens are accepted only with suffixes from the list below.</source>
          <target state="translated">Los sufijos se rechazan en las fichas literales no numéricas,y las fichas literales numéricas se aceptan sólo con los sufijos de la lista que figura a continuación.</target>
        </trans-unit>
        <trans-unit id="31bced9874925b40b1709b82b080279f57f95fc4" translate="yes" xml:space="preserve">
          <source>Any time a type &lt;code&gt;T&lt;/code&gt; is considered &lt;a href=&quot;#local-type&quot;&gt;local&lt;/a&gt;, &lt;code&gt;&amp;amp;T&lt;/code&gt;, &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, and &lt;code&gt;Pin&amp;lt;T&amp;gt;&lt;/code&gt; are also considered local. Fundamental type constructors cannot &lt;a href=&quot;#uncovered-type&quot;&gt;cover&lt;/a&gt; other types. Any time the term &quot;covered type&quot; is used, the &lt;code&gt;T&lt;/code&gt; in &lt;code&gt;&amp;amp;T&lt;/code&gt;, &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, and &lt;code&gt;Pin&amp;lt;T&amp;gt;&lt;/code&gt; is not considered covered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972a6afc1089fd19efd410e0369cd9e91a4ef0f3" translate="yes" xml:space="preserve">
          <source>Any time a type or function is provided by the standard library and you&amp;rsquo;re not sure what it does or how to use it, use the application programming interface (API) documentation to find out!</source>
          <target state="translated">Siempre que la biblioteca est&amp;aacute;ndar proporcione un tipo o funci&amp;oacute;n y no est&amp;eacute; seguro de qu&amp;eacute; hace o c&amp;oacute;mo usarlo, utilice la documentaci&amp;oacute;n de la interfaz de programaci&amp;oacute;n de aplicaciones (API) para averiguarlo.</target>
        </trans-unit>
        <trans-unit id="76deb7250dd43b06f05ef65522ed5c978849b0e5" translate="yes" xml:space="preserve">
          <source>Any type composed entirely of &lt;code&gt;Send&lt;/code&gt; types is automatically marked as &lt;code&gt;Send&lt;/code&gt; as well. Almost all primitive types are &lt;code&gt;Send&lt;/code&gt;, aside from raw pointers, which we&amp;rsquo;ll discuss in Chapter 19.</source>
          <target state="translated">Cualquier tipo compuesto completamente por tipos de &lt;code&gt;Send&lt;/code&gt; se marca autom&amp;aacute;ticamente como &lt;code&gt;Send&lt;/code&gt; . Casi todos los tipos primitivos son &lt;code&gt;Send&lt;/code&gt; , aparte de los punteros en bruto, que discutiremos en el Cap&amp;iacute;tulo 19.</target>
        </trans-unit>
        <trans-unit id="af69a2cb47235b6ee090b2e8285120ce18b240b2" translate="yes" xml:space="preserve">
          <source>Any type parameter or lifetime parameter of an &lt;code&gt;impl&lt;/code&gt; must meet at least one of the following criteria:</source>
          <target state="translated">Cualquier par&amp;aacute;metro de tipo o par&amp;aacute;metro de duraci&amp;oacute;n de un &lt;code&gt;impl&lt;/code&gt; debe cumplir al menos uno de los siguientes criterios:</target>
        </trans-unit>
        <trans-unit id="4b06ed0f2a9b9712d1ad4ec6082f1ea5cba3b543" translate="yes" xml:space="preserve">
          <source>Any type parameter parameter of an &lt;code&gt;impl&lt;/code&gt; must meet at least one of the following criteria:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788cf861093b3924fc04a0b5f4dac3cbdc3bb2d9" translate="yes" xml:space="preserve">
          <source>Any type that derives &lt;code&gt;Eq&lt;/code&gt; automatically implements this trait, &lt;em&gt;regardless&lt;/em&gt; of whether its type-parameters implement &lt;code&gt;Eq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfadd00c3ae966bd61c993066771bfd5d6d8d45d" translate="yes" xml:space="preserve">
          <source>Any type that derives &lt;code&gt;PartialEq&lt;/code&gt; automatically implements this trait, &lt;em&gt;regardless&lt;/em&gt; of whether its type-parameters implement &lt;code&gt;Eq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07027ef0df88ca520ae158040613bfcdb04fbd90" translate="yes" xml:space="preserve">
          <source>Any types with interior mutability must also use the &lt;a href=&quot;../cell/struct.unsafecell&quot;&gt;&lt;code&gt;cell::UnsafeCell&lt;/code&gt;&lt;/a&gt; wrapper around the value(s) which can be mutated through a shared reference. Failing to doing this is &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt;. For example, &lt;a href=&quot;../mem/fn.transmute&quot;&gt;&lt;code&gt;transmute&lt;/code&gt;&lt;/a&gt;-ing from &lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;&amp;amp;mut T&lt;/code&gt; is invalid.</source>
          <target state="translated">Cualquier tipo con mutabilidad interior tambi&amp;eacute;n debe usar la envoltura &lt;a href=&quot;../cell/struct.unsafecell&quot;&gt; &lt;code&gt;cell::UnsafeCell&lt;/code&gt; &lt;/a&gt; alrededor de los valores que se pueden mutar a trav&amp;eacute;s de una referencia compartida. No hacer esto es &lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;un comportamiento indefinido&lt;/a&gt; . Por ejemplo, &lt;a href=&quot;../mem/fn.transmute&quot;&gt; &lt;code&gt;transmute&lt;/code&gt; &lt;/a&gt; -ing de &lt;code&gt;&amp;amp;T&lt;/code&gt; a &lt;code&gt;&amp;amp;mut T&lt;/code&gt; no es v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="4098bab2016a26a2da921c6a4c090c6509eb5934" translate="yes" xml:space="preserve">
          <source>Any use other than with &lt;code&gt;if&lt;/code&gt; statements will probably not have an effect.</source>
          <target state="translated">Cualquier uso que no sea con declaraciones &lt;code&gt;if&lt;/code&gt; probablemente no tendr&amp;aacute; ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="910dd93279c47bcced2d261d2b21071bc5cf465a" translate="yes" xml:space="preserve">
          <source>Any::downcast_mut</source>
          <target state="translated">Any::downcast_mut</target>
        </trans-unit>
        <trans-unit id="3142933cd2ff31b31d3f631fe20ea508e96ad05b" translate="yes" xml:space="preserve">
          <source>Any::downcast_ref</source>
          <target state="translated">Any::downcast_ref</target>
        </trans-unit>
        <trans-unit id="47853f41e226da1c34d9eedcdb8b975ed79ec7bc" translate="yes" xml:space="preserve">
          <source>Any::fmt</source>
          <target state="translated">Any::fmt</target>
        </trans-unit>
        <trans-unit id="63f0fc770b243d87075e5d22567fc12df96b560f" translate="yes" xml:space="preserve">
          <source>Any::is</source>
          <target state="translated">Any::is</target>
        </trans-unit>
        <trans-unit id="153b1345e60af7ce7872d3438b64b0f7f8addb2c" translate="yes" xml:space="preserve">
          <source>Any::type_id</source>
          <target state="translated">Any::type_id</target>
        </trans-unit>
        <trans-unit id="4cde3fadbf976f0b359d3c2a1968c555ccde759f" translate="yes" xml:space="preserve">
          <source>Anyone can write RFCs to improve Rust, and the proposals are reviewed and discussed by the Rust team, which is comprised of many topic subteams. There&amp;rsquo;s a full list of the teams &lt;a href=&quot;https://www.rust-lang.org/governance&quot;&gt;on Rust&amp;rsquo;s website&lt;/a&gt;, which includes teams for each area of the project: language design, compiler implementation, infrastructure, documentation, and more. The appropriate team reads the proposal and the comments, writes some comments of their own, and eventually, there&amp;rsquo;s consensus to accept or reject the feature.</source>
          <target state="translated">Cualquiera puede escribir RFC para mejorar Rust, y las propuestas son revisadas y discutidas por el equipo de Rust, que est&amp;aacute; compuesto por muchos subequipos de temas. Hay una lista completa de los equipos &lt;a href=&quot;https://www.rust-lang.org/governance&quot;&gt;en el sitio web de Rust&lt;/a&gt; , que incluye equipos para cada &amp;aacute;rea del proyecto: dise&amp;ntilde;o del lenguaje, implementaci&amp;oacute;n del compilador, infraestructura, documentaci&amp;oacute;n y m&amp;aacute;s. El equipo apropiado lee la propuesta y los comentarios, escribe algunos comentarios propios y, finalmente, hay consenso para aceptar o rechazar la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="53fc70bfdc4b06ea1c2fe17e53fbb9c43726838e" translate="yes" xml:space="preserve">
          <source>Apart from a method or function with a generic type parameter, this error can occur when a type parameter of a struct or trait cannot be inferred. In that case it is not always possible to use a type annotation, because all candidates have the same return type. For instance:</source>
          <target state="translated">Aparte de un método o función con un parámetro de tipo genérico,este error puede producirse cuando no se puede inferir un parámetro de tipo de una estructura o rasgo.En ese caso no siempre es posible utilizar una anotación de tipo,porque todos los candidatos tienen el mismo tipo de retorno.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b813c448dbc23e1f367ecbf1266f8f07cadc0bab" translate="yes" xml:space="preserve">
          <source>Apart from lifetime extension, the temporary scope of an expression is the smallest scope that contains the expression and is for one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73973cfd168d40bb8277e2f6044ecdb605409c4e" translate="yes" xml:space="preserve">
          <source>Appendices</source>
          <target state="translated">Appendices</target>
        </trans-unit>
        <trans-unit id="56e2c591df0fef929570597dca64284006730141" translate="yes" xml:space="preserve">
          <source>Appending to a String with &lt;code id=&quot;appending-to-a-string-with-push_str-and-push&quot;&gt;push_str&lt;/code&gt; and &lt;code&gt;push&lt;/code&gt;</source>
          <target state="translated">Agregar a una cadena con &lt;code id=&quot;appending-to-a-string-with-push_str-and-push&quot;&gt;push_str&lt;/code&gt; y &lt;code&gt;push&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3f60044b06335eb6c4230e3c39f5e0218445878" translate="yes" xml:space="preserve">
          <source>Appendix</source>
          <target state="translated">Appendix</target>
        </trans-unit>
        <trans-unit id="4c40c194c9cdc4d680691d4aa8fa1913dc98b2c3" translate="yes" xml:space="preserve">
          <source>Appendix A, &amp;ldquo;Keywords,&amp;rdquo; also explains the new raw identifiers feature that enables code written in the 2015 Edition and the 2018 Edition to interoperate.</source>
          <target state="translated">El Ap&amp;eacute;ndice A, &quot;Palabras clave&quot;, tambi&amp;eacute;n explica la nueva funci&amp;oacute;n de identificadores sin procesar que permite que el c&amp;oacute;digo escrito en la edici&amp;oacute;n 2015 y la edici&amp;oacute;n 2018 interoperen.</target>
        </trans-unit>
        <trans-unit id="8415247b515164394b09f1335fc5dabc83b9e17a" translate="yes" xml:space="preserve">
          <source>Appendix A: Keywords</source>
          <target state="translated">Apéndice A:Palabras clave</target>
        </trans-unit>
        <trans-unit id="540243de89d6ff78feccd1151f1eeb23d45eae75" translate="yes" xml:space="preserve">
          <source>Appendix B: Operators and Symbols</source>
          <target state="translated">Apéndice B:Operadores y símbolos</target>
        </trans-unit>
        <trans-unit id="e440a4e5c41dd9d1d57a9a1afc26c19786ef345a" translate="yes" xml:space="preserve">
          <source>Appendix C: Derivable Traits</source>
          <target state="translated">Apéndice C:Características derivadas</target>
        </trans-unit>
        <trans-unit id="41116b5529dd9b48afe443e282c8edc6aed9a707" translate="yes" xml:space="preserve">
          <source>Appendix D - Useful Development Tools</source>
          <target state="translated">Apéndice D-Herramientas útiles para el desarrollo</target>
        </trans-unit>
        <trans-unit id="707523bd94a1c061f370a00dc35452edc4f5ca2b" translate="yes" xml:space="preserve">
          <source>Appendix D is now titled &amp;ldquo;Useful Development Tools&amp;rdquo; and covers recently released tools that help you write Rust code.</source>
          <target state="translated">El Ap&amp;eacute;ndice D ahora se titula &quot;Herramientas de desarrollo &amp;uacute;tiles&quot; y cubre las herramientas lanzadas recientemente que lo ayudan a escribir c&amp;oacute;digo Rust.</target>
        </trans-unit>
        <trans-unit id="e50a67316708bcdc8cd3a1c83a15ee617b6e1717" translate="yes" xml:space="preserve">
          <source>Appendix E - Editions</source>
          <target state="translated">Apéndice E-Ediciones</target>
        </trans-unit>
        <trans-unit id="db95e2a46f6e17f889e1ec8cb84b232b2ac6a554" translate="yes" xml:space="preserve">
          <source>Appendix F: Translations of the Book</source>
          <target state="translated">Apéndice F:Traducciones del libro</target>
        </trans-unit>
        <trans-unit id="cd9cd2e1d4c917e818f77ba2a0d93ffcdf7874d2" translate="yes" xml:space="preserve">
          <source>Appendix G - How Rust is Made and &amp;ldquo;Nightly Rust&amp;rdquo;</source>
          <target state="translated">Ap&amp;eacute;ndice G - C&amp;oacute;mo se produce el &amp;oacute;xido y &quot;&amp;oacute;xido nocturno&quot;</target>
        </trans-unit>
        <trans-unit id="7ea8d3526ea6b8af40ac97da94b0ad40d6cea127" translate="yes" xml:space="preserve">
          <source>Appendix chapters providing rationale and references to languages that influenced the design.</source>
          <target state="translated">Los capítulos del apéndice proporcionan la justificación y las referencias a los idiomas que influyeron en el diseño.</target>
        </trans-unit>
        <trans-unit id="0d6a0bfa8816321ae3291d75b6bf84f8077fe48b" translate="yes" xml:space="preserve">
          <source>Appendix: Macro Follow-Set Ambiguity Formal Specification</source>
          <target state="translated">Apéndice:Especificación formal de la ambigüedad del conjunto de seguimiento de macros</target>
        </trans-unit>
        <trans-unit id="54e814d184dccc0b7473b24d35812b283adff9c0" translate="yes" xml:space="preserve">
          <source>Appends a given string slice onto the end of this &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Agrega un segmento de cadena determinado al final de esta &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd5ef47a12f2696c33dc462f202e22f6e229647a" translate="yes" xml:space="preserve">
          <source>Appends an element to the back of a collection.</source>
          <target state="translated">Añade un elemento al fondo de una colección.</target>
        </trans-unit>
        <trans-unit id="ddf4cf8edbc5fa033e85502f0a84bfe8b2914aec" translate="yes" xml:space="preserve">
          <source>Appends an element to the back of a list.</source>
          <target state="translated">Añade un elemento al final de la lista.</target>
        </trans-unit>
        <trans-unit id="9427717eceb820f7ae4720310e1343f09df153f2" translate="yes" xml:space="preserve">
          <source>Appends an element to the back of the &lt;code&gt;VecDeque&lt;/code&gt;.</source>
          <target state="translated">Agrega un elemento a la parte posterior de &lt;code&gt;VecDeque&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="373311f9bb46882cd119d03cfc2b6fa19fdf5ba3" translate="yes" xml:space="preserve">
          <source>Appends the given &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; to the end of this &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Agrega el &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; dado al final de esta &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f88d43733a3d3b030bf7286e9ed4c303cc3a7d2b" translate="yes" xml:space="preserve">
          <source>Application Binary Interface (ABI)</source>
          <target state="translated">Interfaz binaria de aplicación (ABI)</target>
        </trans-unit>
        <trans-unit id="9a4440ced79c9610e5a61ec32030ae30f58d9a8c" translate="yes" xml:space="preserve">
          <source>Applies a function to the contained value (if &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;), or returns the provided default (if &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed8e79e380caf3902110314a704f53a22b3ecbe" translate="yes" xml:space="preserve">
          <source>Applies a function to the contained value (if any), or computes a default (if not).</source>
          <target state="translated">Aplica una función al valor contenido (si lo hay),o calcula un valor por defecto (si no lo hay).</target>
        </trans-unit>
        <trans-unit id="ef8795473614177b83e201e3db900beeef41c1e2" translate="yes" xml:space="preserve">
          <source>Applies a function to the contained value (if any), or returns the provided default (if not).</source>
          <target state="translated">Aplica una función al valor contenido (si lo hay),o devuelve el valor predeterminado proporcionado (si no lo hay).</target>
        </trans-unit>
        <trans-unit id="a6be2123eb22e6f1506885d0c1439a3655475eac" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first non-none result.</source>
          <target state="translated">Aplica la función a los elementos del iterador y devuelve el primer resultado no nulo.</target>
        </trans-unit>
        <trans-unit id="2f579750efee0b6f5e959f71ab15df216a9fb1b9" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first non-none result. &lt;a href=&quot;../../../iter/trait.iterator#method.find_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Aplica la funci&amp;oacute;n a los elementos del iterador y devuelve el primer resultado que no es ninguno. &lt;a href=&quot;../../../iter/trait.iterator#method.find_map&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7da1899028718ec8a07b6c08455d63f4e3489b90" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first non-none result. &lt;a href=&quot;../../iter/trait.iterator#method.find_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Aplica la funci&amp;oacute;n a los elementos del iterador y devuelve el primer resultado que no es ninguno. &lt;a href=&quot;../../iter/trait.iterator#method.find_map&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f3002a1274a5209b380bd8bf18387ed22cf040f" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first non-none result. &lt;a href=&quot;../iter/trait.iterator#method.find_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Aplica la funci&amp;oacute;n a los elementos del iterador y devuelve el primer resultado que no es ninguno. &lt;a href=&quot;../iter/trait.iterator#method.find_map&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67cbbc3631a3803076e70ec9a10a8358879f6e02" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first non-none result. &lt;a href=&quot;iter/trait.iterator#method.find_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Aplica la funci&amp;oacute;n a los elementos del iterador y devuelve el primer resultado que no es ninguno. &lt;a href=&quot;iter/trait.iterator#method.find_map&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8819d96feaef2f02cd8965c68d9eb2580ebfc977" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first non-none result. &lt;a href=&quot;trait.iterator#method.find_map&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Aplica la funci&amp;oacute;n a los elementos del iterador y devuelve el primer resultado que no es ninguno. &lt;a href=&quot;trait.iterator#method.find_map&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c71f5fd4b8bc9dae7fc6bb52c696f533ce8ed924" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first true result or the first error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd078bc0e6ebca661ba36b845bc2f34f79671219" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first true result or the first error. &lt;a href=&quot;../../../iter/trait.iterator#method.try_find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f3965e6fc53b243d5a7c2dc2282a44cca3805a" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first true result or the first error. &lt;a href=&quot;../../iter/trait.iterator#method.try_find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb07d601f2efbf0db36543c96f74916e4858345" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first true result or the first error. &lt;a href=&quot;../iter/trait.iterator#method.try_find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe6a04d1d11293ba9f6db79767b686fae8501d1" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first true result or the first error. &lt;a href=&quot;iter/trait.iterator#method.try_find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813b671e50d44d7d39a003bdb093dc2cdbf235f8" translate="yes" xml:space="preserve">
          <source>Applies function to the elements of iterator and returns the first true result or the first error. &lt;a href=&quot;trait.iterator#method.try_find&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff8e99aa0f8295d1776562bee993cb0a364606b" translate="yes" xml:space="preserve">
          <source>Applies the &quot;?&quot; operator. A return of &lt;code&gt;Ok(t)&lt;/code&gt; means that the execution should continue normally, and the result of &lt;code&gt;?&lt;/code&gt; is the value &lt;code&gt;t&lt;/code&gt;. A return of &lt;code&gt;Err(e)&lt;/code&gt; means that execution should branch to the innermost enclosing &lt;code&gt;catch&lt;/code&gt;, or return from the function.</source>
          <target state="translated">Aplica el &quot;?&quot; operador. Un retorno de &lt;code&gt;Ok(t)&lt;/code&gt; significa que la ejecuci&amp;oacute;n deber&amp;iacute;a continuar normalmente, y el resultado de &lt;code&gt;?&lt;/code&gt; es el valor &lt;code&gt;t&lt;/code&gt; . Un retorno de &lt;code&gt;Err(e)&lt;/code&gt; significa que la ejecuci&amp;oacute;n debe bifurcarse al &lt;code&gt;catch&lt;/code&gt; que lo encierra m&amp;aacute;s interno , o regresar de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d771dbfeb7c050dea75fe4d6749833e3ae20e4ae" translate="yes" xml:space="preserve">
          <source>Applies the &quot;?&quot; operator. A return of &lt;code&gt;Ok(t)&lt;/code&gt; means that the execution should continue normally, and the result of &lt;code&gt;?&lt;/code&gt; is the value &lt;code&gt;t&lt;/code&gt;. A return of &lt;code&gt;Err(e)&lt;/code&gt; means that execution should branch to the innermost enclosing &lt;code&gt;catch&lt;/code&gt;, or return from the function. &lt;a href=&quot;../ops/trait.try#tymethod.into_result&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Aplica el &quot;?&quot; operador. Un retorno de &lt;code&gt;Ok(t)&lt;/code&gt; significa que la ejecuci&amp;oacute;n deber&amp;iacute;a continuar normalmente, y el resultado de &lt;code&gt;?&lt;/code&gt; es el valor &lt;code&gt;t&lt;/code&gt; . Un retorno de &lt;code&gt;Err(e)&lt;/code&gt; significa que la ejecuci&amp;oacute;n debe bifurcarse al &lt;code&gt;catch&lt;/code&gt; que lo encierra m&amp;aacute;s interno , o regresar de la funci&amp;oacute;n. &lt;a href=&quot;../ops/trait.try#tymethod.into_result&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84c127ccde0ff66daa4ff755926ef467d8ab1d62" translate="yes" xml:space="preserve">
          <source>Applies the &quot;?&quot; operator. A return of &lt;code&gt;Ok(t)&lt;/code&gt; means that the execution should continue normally, and the result of &lt;code&gt;?&lt;/code&gt; is the value &lt;code&gt;t&lt;/code&gt;. A return of &lt;code&gt;Err(e)&lt;/code&gt; means that execution should branch to the innermost enclosing &lt;code&gt;catch&lt;/code&gt;, or return from the function. &lt;a href=&quot;trait.try#tymethod.into_result&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6233fb9390747dc2f23a28899738d6cc6a72590f" translate="yes" xml:space="preserve">
          <source>Applying the attribute to a function &lt;code&gt;f&lt;/code&gt; allows code within &lt;code&gt;f&lt;/code&gt; to get a hint of the &lt;a href=&quot;https://doc.rust-lang.org/core/panic/struct.Location.html&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; of the &quot;topmost&quot; tracked call that led to &lt;code&gt;f&lt;/code&gt;'s invocation. At the point of observation, an implementation behaves as if it walks up the stack from &lt;code&gt;f&lt;/code&gt;'s frame to find the nearest frame of an &lt;em&gt;unattributed&lt;/em&gt; function &lt;code&gt;outer&lt;/code&gt;, and it returns the &lt;a href=&quot;https://doc.rust-lang.org/core/panic/struct.Location.html&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; of the tracked call in &lt;code&gt;outer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8404e9317204d7715d2f49a56717841155af3a5d" translate="yes" xml:space="preserve">
          <source>Approximate desugaring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e15c6fd69af4acca9c9f459c798f3ae0c37890f" translate="yes" xml:space="preserve">
          <source>Approximate number of significant digits in base 10.</source>
          <target state="translated">Número aproximado de dígitos significativos en la base 10.</target>
        </trans-unit>
        <trans-unit id="741aa1a23115e831e460da0298845488131bda9a" translate="yes" xml:space="preserve">
          <source>Approximate number of significant digits in base 10. Use &lt;a href=&quot;../primitive.f32#associatedconstant.DIGITS&quot;&gt;&lt;code&gt;f32::DIGITS&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8912ed7e59aeef6ce8c4355dd3b80515ddbd4f1" translate="yes" xml:space="preserve">
          <source>Approximate number of significant digits in base 10. Use &lt;a href=&quot;../primitive.f64#associatedconstant.DIGITS&quot;&gt;&lt;code&gt;f64::DIGITS&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853a983f6b8abdb9ecba43da2ceda1641c9d519f" translate="yes" xml:space="preserve">
          <source>Arc</source>
          <target state="translated">Arc</target>
        </trans-unit>
        <trans-unit id="59cfa485c658b8f9969a88c2eb92540fdf722cfd" translate="yes" xml:space="preserve">
          <source>Arc::as_ref</source>
          <target state="translated">Arc::as_ref</target>
        </trans-unit>
        <trans-unit id="2f1c5ec3613e810179b1dde9e1ff629a07f45de3" translate="yes" xml:space="preserve">
          <source>Arc::borrow</source>
          <target state="translated">Arc::borrow</target>
        </trans-unit>
        <trans-unit id="e6381920a9fbe9f6076603c436d6eef9b74e1f24" translate="yes" xml:space="preserve">
          <source>Arc::borrow_mut</source>
          <target state="translated">Arc::borrow_mut</target>
        </trans-unit>
        <trans-unit id="de0c16869f1a3fad5d726dc3e3fba2293f156861" translate="yes" xml:space="preserve">
          <source>Arc::clamp</source>
          <target state="translated">Arc::clamp</target>
        </trans-unit>
        <trans-unit id="9fa492e8fa6e20e1b52a4de7403dbe55ec1b79bf" translate="yes" xml:space="preserve">
          <source>Arc::clone</source>
          <target state="translated">Arc::clone</target>
        </trans-unit>
        <trans-unit id="39cf0d205cd739521ce28938f9a2250155c1bac4" translate="yes" xml:space="preserve">
          <source>Arc::clone_from</source>
          <target state="translated">Arc::clone_from</target>
        </trans-unit>
        <trans-unit id="773d06cfd159d4606ff3014fee5f9931067cf220" translate="yes" xml:space="preserve">
          <source>Arc::clone_into</source>
          <target state="translated">Arc::clone_into</target>
        </trans-unit>
        <trans-unit id="7561059135cbd0c5fbb5238091fd429a9e1b09c1" translate="yes" xml:space="preserve">
          <source>Arc::cmp</source>
          <target state="translated">Arc::cmp</target>
        </trans-unit>
        <trans-unit id="b73ea8e602ed4ab4007a418f3f6cee6a05a73996" translate="yes" xml:space="preserve">
          <source>Arc::default</source>
          <target state="translated">Arc::default</target>
        </trans-unit>
        <trans-unit id="cdd18aaa5e1ccdcb1656e6b3c539ea6dd22d2613" translate="yes" xml:space="preserve">
          <source>Arc::deref</source>
          <target state="translated">Arc::deref</target>
        </trans-unit>
        <trans-unit id="3d5ef1d21d6636272bbb1c82a7af354e776cadde" translate="yes" xml:space="preserve">
          <source>Arc::downcast</source>
          <target state="translated">Arc::downcast</target>
        </trans-unit>
        <trans-unit id="8f4a9849100a7720ad47a02d98c3cc428143986f" translate="yes" xml:space="preserve">
          <source>Arc::downgrade</source>
          <target state="translated">Arc::downgrade</target>
        </trans-unit>
        <trans-unit id="4d05d06001426353e874710f4e01911168266628" translate="yes" xml:space="preserve">
          <source>Arc::drop</source>
          <target state="translated">Arc::drop</target>
        </trans-unit>
        <trans-unit id="d616628ce7e2e600feb8196c85f5e01fa37ae824" translate="yes" xml:space="preserve">
          <source>Arc::eq</source>
          <target state="translated">Arc::eq</target>
        </trans-unit>
        <trans-unit id="541daae394114016fc018c7425373988b033cde5" translate="yes" xml:space="preserve">
          <source>Arc::fmt</source>
          <target state="translated">Arc::fmt</target>
        </trans-unit>
        <trans-unit id="c5939b1aa685e46bfb67eeb83668be8ab9a5dab1" translate="yes" xml:space="preserve">
          <source>Arc::from</source>
          <target state="translated">Arc::from</target>
        </trans-unit>
        <trans-unit id="dea799f19377ba936fa669465a1dea313ae3aa7a" translate="yes" xml:space="preserve">
          <source>Arc::from_raw</source>
          <target state="translated">Arc::from_raw</target>
        </trans-unit>
        <trans-unit id="6910e0ecb20317c068e1ba9e8ebf007d417f95a2" translate="yes" xml:space="preserve">
          <source>Arc::ge</source>
          <target state="translated">Arc::ge</target>
        </trans-unit>
        <trans-unit id="7e24d2d9f75e2ea02439ac0bd0d3b07ceaa736e4" translate="yes" xml:space="preserve">
          <source>Arc::get_mut</source>
          <target state="translated">Arc::get_mut</target>
        </trans-unit>
        <trans-unit id="e94b486a276abc7bcb5888a4d6fc97a6fa8eebaa" translate="yes" xml:space="preserve">
          <source>Arc::gt</source>
          <target state="translated">Arc::gt</target>
        </trans-unit>
        <trans-unit id="f233cce03a62c687a1d4be5e670e3be37d179359" translate="yes" xml:space="preserve">
          <source>Arc::hash</source>
          <target state="translated">Arc::hash</target>
        </trans-unit>
        <trans-unit id="963937d635066d272a6f67596279f6b16956abdb" translate="yes" xml:space="preserve">
          <source>Arc::hash_slice</source>
          <target state="translated">Arc::hash_slice</target>
        </trans-unit>
        <trans-unit id="2b8954f29938fa3429d664d59b2922996301d34a" translate="yes" xml:space="preserve">
          <source>Arc::into</source>
          <target state="translated">Arc::into</target>
        </trans-unit>
        <trans-unit id="24e83cc9b0b264818fc7b3695d912fc8e4d9e845" translate="yes" xml:space="preserve">
          <source>Arc::into_raw</source>
          <target state="translated">Arc::into_raw</target>
        </trans-unit>
        <trans-unit id="921d5aa53e181c2612da9bf23381db35c63bd321" translate="yes" xml:space="preserve">
          <source>Arc::into_raw_non_null</source>
          <target state="translated">Arc::into_raw_non_null</target>
        </trans-unit>
        <trans-unit id="f3473006930ab6b55f7aef32c93c0af0f87e7790" translate="yes" xml:space="preserve">
          <source>Arc::le</source>
          <target state="translated">Arc::le</target>
        </trans-unit>
        <trans-unit id="34b95793d03cc8c6cef222cea98c6e99dc74e9e2" translate="yes" xml:space="preserve">
          <source>Arc::lt</source>
          <target state="translated">Arc::lt</target>
        </trans-unit>
        <trans-unit id="eab1ca96353cac811bc765a502fbbe1723278950" translate="yes" xml:space="preserve">
          <source>Arc::make_mut</source>
          <target state="translated">Arc::make_mut</target>
        </trans-unit>
        <trans-unit id="0a9a2e87881627fae4b58af4ea1e4cdaa0c36395" translate="yes" xml:space="preserve">
          <source>Arc::max</source>
          <target state="translated">Arc::max</target>
        </trans-unit>
        <trans-unit id="431ba8a8a73b16f867d8367c027605d9a9f25a4e" translate="yes" xml:space="preserve">
          <source>Arc::min</source>
          <target state="translated">Arc::min</target>
        </trans-unit>
        <trans-unit id="a700586ffae96fc24dca7f29fd88b64a47bae03d" translate="yes" xml:space="preserve">
          <source>Arc::ne</source>
          <target state="translated">Arc::ne</target>
        </trans-unit>
        <trans-unit id="1311cfe952a5208cf9ab108dab2eb693395bbca1" translate="yes" xml:space="preserve">
          <source>Arc::new</source>
          <target state="translated">Arc::new</target>
        </trans-unit>
        <trans-unit id="2c2d4efc7b27aae2edec462666037bcaf500cae7" translate="yes" xml:space="preserve">
          <source>Arc::partial_cmp</source>
          <target state="translated">Arc::partial_cmp</target>
        </trans-unit>
        <trans-unit id="41a523a445899356c297537c4b72fff018176305" translate="yes" xml:space="preserve">
          <source>Arc::pin</source>
          <target state="translated">Arc::pin</target>
        </trans-unit>
        <trans-unit id="1d09dbe8f647daf2ca429c9d36141d61d7d2799f" translate="yes" xml:space="preserve">
          <source>Arc::ptr_eq</source>
          <target state="translated">Arc::ptr_eq</target>
        </trans-unit>
        <trans-unit id="ec8427607c6875d57c1cbb7ae116c8a1b2bc9f8b" translate="yes" xml:space="preserve">
          <source>Arc::strong_count</source>
          <target state="translated">Arc::strong_count</target>
        </trans-unit>
        <trans-unit id="12f7dc5817d10cbbabc6ff3c697a1ca67ff339d5" translate="yes" xml:space="preserve">
          <source>Arc::to_owned</source>
          <target state="translated">Arc::to_owned</target>
        </trans-unit>
        <trans-unit id="dd1da4e8925e8953dfb4aef0354dd388c867af08" translate="yes" xml:space="preserve">
          <source>Arc::to_string</source>
          <target state="translated">Arc::to_string</target>
        </trans-unit>
        <trans-unit id="b36b4607ae74c4708612a87739b787ab550df768" translate="yes" xml:space="preserve">
          <source>Arc::try_from</source>
          <target state="translated">Arc::try_from</target>
        </trans-unit>
        <trans-unit id="450b59e4892b86614294b44b39674630d4067a1f" translate="yes" xml:space="preserve">
          <source>Arc::try_into</source>
          <target state="translated">Arc::try_into</target>
        </trans-unit>
        <trans-unit id="8cc0a8e7a4fa3ddf0be44f0e2f8210b7538bff4d" translate="yes" xml:space="preserve">
          <source>Arc::try_unwrap</source>
          <target state="translated">Arc::try_unwrap</target>
        </trans-unit>
        <trans-unit id="e60b417105d1b796fbb9108c579b5a5a3f60ab78" translate="yes" xml:space="preserve">
          <source>Arc::type_id</source>
          <target state="translated">Arc::type_id</target>
        </trans-unit>
        <trans-unit id="6623270e41b383306513b26dd0972d02a62dabdc" translate="yes" xml:space="preserve">
          <source>Arc::weak_count</source>
          <target state="translated">Arc::weak_count</target>
        </trans-unit>
        <trans-unit id="bcef6163f2366764b97712c1e02d4e8de8728060" translate="yes" xml:space="preserve">
          <source>Archimedes' constant (&amp;pi;)</source>
          <target state="translated">Constante de Arqu&amp;iacute;medes (&amp;pi;)</target>
        </trans-unit>
        <trans-unit id="02d36a6ada7ba4a678771b24dc19a1d26e06d584" translate="yes" xml:space="preserve">
          <source>Are allowed to be null</source>
          <target state="translated">Se les permite ser nulos</target>
        </trans-unit>
        <trans-unit id="7bcd778277bf4c00f69bda3256c3718425635b4a" translate="yes" xml:space="preserve">
          <source>Are allowed to ignore the borrowing rules by having both immutable and mutable pointers or multiple mutable pointers to the same location</source>
          <target state="translated">Se les permite ignorar las reglas de préstamo al tener tanto punteros inmutables como mutables o múltiples punteros mutables a la misma ubicación</target>
        </trans-unit>
        <trans-unit id="79232b3ded8b7d0b1c86ea5d989ec5b302602c26" translate="yes" xml:space="preserve">
          <source>Aren&amp;rsquo;t guaranteed to point to valid memory</source>
          <target state="translated">No se garantiza que apunten a una memoria v&amp;aacute;lida</target>
        </trans-unit>
        <trans-unit id="4bf0024c4bc943f998126635e2b2826496ec8582" translate="yes" xml:space="preserve">
          <source>Args</source>
          <target state="translated">Args</target>
        </trans-unit>
        <trans-unit id="11997e344b54f51ca26eed6c34abb35c17719846" translate="yes" xml:space="preserve">
          <source>Args::all</source>
          <target state="translated">Args::all</target>
        </trans-unit>
        <trans-unit id="834e48f2681bde9c6de2a1d6fe4ea459480940da" translate="yes" xml:space="preserve">
          <source>Args::any</source>
          <target state="translated">Args::any</target>
        </trans-unit>
        <trans-unit id="852de3f0c6270398ac654986a4377df5f50c393c" translate="yes" xml:space="preserve">
          <source>Args::borrow</source>
          <target state="translated">Args::borrow</target>
        </trans-unit>
        <trans-unit id="8aa2c84655d80e6196471b5bce3e6eb8f9d79f61" translate="yes" xml:space="preserve">
          <source>Args::borrow_mut</source>
          <target state="translated">Args::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6235293cd6910b3c74977e8687ec90afadb03077" translate="yes" xml:space="preserve">
          <source>Args::by_ref</source>
          <target state="translated">Args::by_ref</target>
        </trans-unit>
        <trans-unit id="4438640d50dfd08974f7aac6bf0d2aecb461c3f5" translate="yes" xml:space="preserve">
          <source>Args::chain</source>
          <target state="translated">Args::chain</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
