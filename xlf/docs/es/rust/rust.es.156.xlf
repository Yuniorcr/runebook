<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="aec19e71f7245e5468afe6ba28062c55126000f9" translate="yes" xml:space="preserve">
          <source>Which kind of future are we turning this into?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e64a82a5b16af1f23a177677675bfbfea39f34c" translate="yes" xml:space="preserve">
          <source>Which kind of iterator are we turning this into?</source>
          <target state="translated">¿En qué clase de iterador estamos convirtiendo esto?</target>
        </trans-unit>
        <trans-unit id="0807125208cee959762c24f1a5a66bea0dc3bb1c" translate="yes" xml:space="preserve">
          <source>Which method works best depends on what kind of situation you're in.</source>
          <target state="translated">El método que mejor funciona depende de la situación en la que te encuentres.</target>
        </trans-unit>
        <trans-unit id="f77bbb1b800fe27a58f9b1a9edd741074b14ca16" translate="yes" xml:space="preserve">
          <source>Which of our two &lt;code&gt;HasDrop&lt;/code&gt; drops first, though? For structs, it's the same order that they're declared: first &lt;code&gt;one&lt;/code&gt;, then &lt;code&gt;two&lt;/code&gt;. If you'd like to try this yourself, you can modify &lt;code&gt;HasDrop&lt;/code&gt; above to contain some data, like an integer, and then use it in the &lt;code&gt;println!&lt;/code&gt; inside of &lt;code&gt;Drop&lt;/code&gt;. This behavior is guaranteed by the language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381bdae639e5c41f0066a4ced8cdfc3fa580e603" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, !&amp;gt;&lt;/code&gt;&lt;/a&gt; is very useful for removing errors, &lt;code&gt;!&lt;/code&gt; can also be used to remove successes as well. If we think of &lt;a href=&quot;result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, !&amp;gt;&lt;/code&gt;&lt;/a&gt; as &quot;if this function returns, it has not errored,&quot; we get a very intuitive idea of &lt;a href=&quot;result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;!, E&amp;gt;&lt;/code&gt;&lt;/a&gt; as well: if the function returns, it &lt;em&gt;has&lt;/em&gt; errored.</source>
          <target state="translated">Mientras que &lt;a href=&quot;result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, !&amp;gt;&lt;/code&gt; &lt;/a&gt; Es muy &amp;uacute;til para eliminar errores &lt;code&gt;!&lt;/code&gt; tambi&amp;eacute;n se puede utilizar para eliminar &amp;eacute;xitos. Si pensamos en &lt;a href=&quot;result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, !&amp;gt;&lt;/code&gt; &lt;/a&gt; Como &quot;si esta funci&amp;oacute;n regresa, no tiene errores&quot;, obtenemos una idea muy intuitiva de &lt;a href=&quot;result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;!, E&amp;gt;&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n: si la funci&amp;oacute;n regresa, &lt;em&gt;tiene&lt;/em&gt; errores.</target>
        </trans-unit>
        <trans-unit id="040144073c8f0dfdb2720a3a96450c0f97978b7d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;MaybeUninit&lt;/code&gt; is &lt;code&gt;#[repr(transparent)]&lt;/code&gt; (indicating it guarantees the same size, alignment, and ABI as &lt;code&gt;T&lt;/code&gt;), this does &lt;em&gt;not&lt;/em&gt; change any of the previous caveats. &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Option&amp;lt;MaybeUninit&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; may still have different sizes, and types containing a field of type &lt;code&gt;T&lt;/code&gt; may be laid out (and sized) differently than if that field were &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;. &lt;code&gt;MaybeUninit&lt;/code&gt; is a union type, and &lt;code&gt;#[repr(transparent)]&lt;/code&gt; on unions is unstable (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/60405&quot;&gt;the tracking issue&lt;/a&gt;). Over time, the exact guarantees of &lt;code&gt;#[repr(transparent)]&lt;/code&gt; on unions may evolve, and &lt;code&gt;MaybeUninit&lt;/code&gt; may or may not remain &lt;code&gt;#[repr(transparent)]&lt;/code&gt;. That said, &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; will &lt;em&gt;always&lt;/em&gt; guarantee that it has the same size, alignment, and ABI as &lt;code&gt;T&lt;/code&gt;; it's just that the way &lt;code&gt;MaybeUninit&lt;/code&gt; implements that guarantee may evolve.</source>
          <target state="translated">Si bien &lt;code&gt;MaybeUninit&lt;/code&gt; es &lt;code&gt;#[repr(transparent)]&lt;/code&gt; (lo que indica que garantiza el mismo tama&amp;ntilde;o, alineaci&amp;oacute;n y ABI que &lt;code&gt;T&lt;/code&gt; ), esto &lt;em&gt;no&lt;/em&gt; cambia ninguna de las advertencias anteriores. &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; y &lt;code&gt;Option&amp;lt;MaybeUninit&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; a&amp;uacute;n pueden tener diferentes tama&amp;ntilde;os, y los tipos que contienen un campo de tipo &lt;code&gt;T&lt;/code&gt; pueden tener un &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; (y tama&amp;ntilde;o) diferente que si ese campo fuera MaybeUninit &amp;lt;T&amp;gt; . &lt;code&gt;MaybeUninit&lt;/code&gt; es un tipo de uni&amp;oacute;n y &lt;code&gt;#[repr(transparent)]&lt;/code&gt; en las uniones es inestable (consulte &lt;a href=&quot;https://github.com/rust-lang/rust/issues/60405&quot;&gt;el problema de seguimiento&lt;/a&gt; ). Con el tiempo, las garant&amp;iacute;as exactas de &lt;code&gt;#[repr(transparent)]&lt;/code&gt; sobre los sindicatos pueden evolucionar, y &lt;code&gt;MaybeUninit&lt;/code&gt; puede o no permanecer &lt;code&gt;#[repr(transparent)]&lt;/code&gt; . Dicho esto, &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; ser&amp;aacute; &lt;em&gt;siempre&lt;/em&gt; garantizar que tiene el mismo tama&amp;ntilde;o, alineaci&amp;oacute;n y ABI como &lt;code&gt;T&lt;/code&gt; ; es solo que la forma en que &lt;code&gt;MaybeUninit&lt;/code&gt; implementa esa garant&amp;iacute;a puede evolucionar.</target>
        </trans-unit>
        <trans-unit id="b5f05e101ccc42742a41d22d19ff794b2f1ec6bc" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;TypeId&lt;/code&gt; implements &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;PartialOrd&lt;/code&gt;, and &lt;code&gt;Ord&lt;/code&gt;, it is worth noting that the hashes and ordering will vary between Rust releases. Beware of relying on them inside of your code!</source>
          <target state="translated">Si bien &lt;code&gt;TypeId&lt;/code&gt; implementa &lt;code&gt;Hash&lt;/code&gt; , &lt;code&gt;PartialOrd&lt;/code&gt; y &lt;code&gt;Ord&lt;/code&gt; , vale la pena se&amp;ntilde;alar que los hash y el orden variar&amp;aacute;n entre las versiones de Rust. &amp;iexcl;Tenga cuidado de confiar en ellos dentro de su c&amp;oacute;digo!</target>
        </trans-unit>
        <trans-unit id="6d4c0b858b921a1aa9b09d6f6ffff138728f277d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;mem::forget&lt;/code&gt; can also be used to transfer &lt;em&gt;memory&lt;/em&gt; ownership, doing so is error-prone. &lt;a href=&quot;struct.manuallydrop&quot;&gt;&lt;code&gt;ManuallyDrop&lt;/code&gt;&lt;/a&gt; should be used instead. Consider, for example, this code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef43e2f499fb4e7ebf44c6c96560fe3863b368a0" translate="yes" xml:space="preserve">
          <source>While Rust strings may contain nul bytes in the middle, C strings can't, as that byte would effectively truncate the string.</source>
          <target state="translated">Mientras que las cuerdas de óxido pueden contener nulos bytes en el medio,las cuerdas de Do no pueden,ya que ese byte truncaría efectivamente la cuerda.</target>
        </trans-unit>
        <trans-unit id="9b96c7bdcb6a7fde4fa090bcc724c51dcf154ff7" translate="yes" xml:space="preserve">
          <source>While it is not always possible to convert such a string losslessly into a valid UTF-16 string (or even UTF-8), it is often desirable to be able to round-trip such a string from and to Windows APIs losslessly. For example, some Rust code may be &quot;bridging&quot; some Windows APIs together, just passing &lt;code&gt;WCHAR&lt;/code&gt; strings among those APIs without ever really looking into the strings.</source>
          <target state="translated">Si bien no siempre es posible convertir una cadena de este tipo sin p&amp;eacute;rdidas en una cadena UTF-16 v&amp;aacute;lida (o incluso UTF-8), a menudo es deseable poder realizar un viaje de ida y vuelta desde y hacia las API de Windows sin p&amp;eacute;rdidas. Por ejemplo, algunos c&amp;oacute;digos de Rust pueden estar &quot;uniendo&quot; algunas API de Windows, simplemente pasando cadenas &lt;code&gt;WCHAR&lt;/code&gt; entre esas API sin siquiera mirar realmente las cadenas.</target>
        </trans-unit>
        <trans-unit id="94ebb9d6a417c21d0e98155c75c39327ba03733c" translate="yes" xml:space="preserve">
          <source>While it might seem strange to have a function that just returns back the input, there are some interesting uses.</source>
          <target state="translated">Aunque pueda parecer extraño tener una función que sólo devuelva la entrada,hay algunos usos interesantes.</target>
        </trans-unit>
        <trans-unit id="97e4502df2c17c97ddd6625eabaef88cae532a3d" translate="yes" xml:space="preserve">
          <source>While iterating, the returned iterator will panic if any key or value in the environment is not valid unicode. If this is not desired, consider using &lt;a href=&quot;fn.vars_os&quot;&gt;&lt;code&gt;env::vars_os()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2427b468d47a7420d460c3c9434666519bb67a" translate="yes" xml:space="preserve">
          <source>While iterating, the returned iterator will panic if any key or value in the environment is not valid unicode. If this is not desired, consider using the &lt;a href=&quot;fn.vars_os&quot;&gt;&lt;code&gt;env::vars_os&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Mientras se itera, el iterador devuelto entrar&amp;aacute; en p&amp;aacute;nico si alguna clave o valor en el entorno no es unicode v&amp;aacute;lido. Si no lo desea, considere usar la funci&amp;oacute;n &lt;a href=&quot;fn.vars_os&quot;&gt; &lt;code&gt;env::vars_os&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e624679e0915295fd807640fbca70aec9a91af5e" translate="yes" xml:space="preserve">
          <source>While many collections offer &lt;code&gt;iter()&lt;/code&gt;, not all offer &lt;code&gt;iter_mut()&lt;/code&gt;. For example, mutating the keys of a &lt;a href=&quot;../collections/struct.hashset&quot;&gt;&lt;code&gt;HashSet&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../collections/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt;&lt;/a&gt; could put the collection into an inconsistent state if the key hashes change, so these collections only offer &lt;code&gt;iter()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88abee318504f329611b88069221a80488cf9999" translate="yes" xml:space="preserve">
          <source>While performing error handling it is often useful to implement &lt;code&gt;From&lt;/code&gt; for your own error type. By converting underlying error types to our own custom error type that encapsulates the underlying error type, we can return a single error type without losing information on the underlying cause. The '?' operator automatically converts the underlying error type to our custom error type by calling &lt;code&gt;Into&amp;lt;CliError&amp;gt;::into&lt;/code&gt; which is automatically provided when implementing &lt;code&gt;From&lt;/code&gt;. The compiler then infers which implementation of &lt;code&gt;Into&lt;/code&gt; should be used.</source>
          <target state="translated">Al realizar el manejo de errores, a menudo es &amp;uacute;til implementar &lt;code&gt;From&lt;/code&gt; para su propio tipo de error. Al convertir los tipos de error subyacentes a nuestro propio tipo de error personalizado que encapsula el tipo de error subyacente, podemos devolver un solo tipo de error sin perder informaci&amp;oacute;n sobre la causa subyacente. Los '?' El operador convierte autom&amp;aacute;ticamente el tipo de error subyacente en nuestro tipo de error personalizado llamando a &lt;code&gt;Into&amp;lt;CliError&amp;gt;::into&lt;/code&gt; que se proporciona autom&amp;aacute;ticamente al implementar &lt;code&gt;From&lt;/code&gt; . A continuaci&amp;oacute;n, el compilador infiere qu&amp;eacute; implementaci&amp;oacute;n de &lt;code&gt;Into&lt;/code&gt; debe utilizarse.</target>
        </trans-unit>
        <trans-unit id="21a3472b42943360038c378154c72aeef876d83b" translate="yes" xml:space="preserve">
          <source>While primitives are implemented by the compiler, the standard library implements methods directly on the primitive types (and it is the only library that does so), which are &lt;a href=&quot;#primitives&quot;&gt;documented in the section on primitives&lt;/a&gt;.</source>
          <target state="translated">Mientras que el compilador implementa las primitivas, la biblioteca est&amp;aacute;ndar implementa m&amp;eacute;todos directamente en los tipos primitivos (y es la &amp;uacute;nica biblioteca que lo hace), que est&amp;aacute;n &lt;a href=&quot;#primitives&quot;&gt;documentados en la secci&amp;oacute;n sobre primitivas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2a8167e66f949c278500fe8a0d882045622dfbf" translate="yes" xml:space="preserve">
          <source>While the following example is sound, there is a memory leak since the inner vectors were not freed prior to the &lt;code&gt;set_len&lt;/code&gt; call:</source>
          <target state="translated">Si bien el siguiente ejemplo es correcto, hay una p&amp;eacute;rdida de memoria ya que los vectores internos no se liberaron antes de la llamada &lt;code&gt;set_len&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c01f6f794efd0c185cdbd0acdeb3770eddfc8772" translate="yes" xml:space="preserve">
          <source>While there could be a more fine-grained scheme in the future that allows mutable references if they are not &quot;leaked&quot; to the final value, a more conservative approach was chosen for now. &lt;code&gt;const fn&lt;/code&gt; do not have this problem, as the borrow checker will prevent the &lt;code&gt;const fn&lt;/code&gt; from returning new mutable references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce58c9d13deabade9d0031e57b5c561b8bbc9a7" translate="yes" xml:space="preserve">
          <source>While these:</source>
          <target state="translated">Mientras que estos:</target>
        </trans-unit>
        <trans-unit id="5d891980461c7894b78072e4c40fd8f0ee9d4fc4" translate="yes" xml:space="preserve">
          <source>While this means the &lt;code&gt;String&lt;/code&gt; will have a length of zero, it does not touch its capacity.</source>
          <target state="translated">Si bien esto significa que la &lt;code&gt;String&lt;/code&gt; tendr&amp;aacute; una longitud de cero, no toca su capacidad.</target>
        </trans-unit>
        <trans-unit id="1461d256887a81f77bef33d763313b5547fde61d" translate="yes" xml:space="preserve">
          <source>While this method and its mutable counterpart are useful for null-safety, it is important to note that this is still an unsafe operation because the returned value could be pointing to invalid memory.</source>
          <target state="translated">Si bien este método y su contraparte mutable son útiles para la seguridad nula,es importante señalar que sigue siendo una operación insegura porque el valor devuelto podría estar apuntando a una memoria inválida.</target>
        </trans-unit>
        <trans-unit id="ee1ba6c8d8e736d86285c52e19961693ec306982" translate="yes" xml:space="preserve">
          <source>While this trait is unstable, the methods are stable. &lt;code&gt;SliceConcatExt&lt;/code&gt; is included in the &lt;a href=&quot;../prelude/index&quot;&gt;standard library prelude&lt;/a&gt;, so you can use &lt;a href=&quot;#tymethod.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tymethod.concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt; as if they existed on &lt;code&gt;[T]&lt;/code&gt; itself.</source>
          <target state="translated">Si bien este rasgo es inestable, los m&amp;eacute;todos son estables. &lt;code&gt;SliceConcatExt&lt;/code&gt; se incluye en el &lt;a href=&quot;../prelude/index&quot;&gt;preludio de la biblioteca est&amp;aacute;ndar&lt;/a&gt; , por lo que puede usar &lt;a href=&quot;#tymethod.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#tymethod.concat&quot;&gt; &lt;code&gt;concat()&lt;/code&gt; &lt;/a&gt; como si existieran en &lt;code&gt;[T]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b5f26a246fb02c7cc6b4b29c460a0d1e8dc7640" translate="yes" xml:space="preserve">
          <source>While usual Rust style is to import types directly, aliases of &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; often are not, to make it easier to distinguish between them. &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; is generally assumed to be &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;std::result::Result&lt;/code&gt;&lt;/a&gt;, and so users of this alias will generally use &lt;code&gt;io::Result&lt;/code&gt; instead of shadowing the &lt;a href=&quot;../prelude/index&quot;&gt;prelude&lt;/a&gt;'s import of &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;std::result::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f3f0c0f2ca43b389646c40f7923cc632b8f8da" translate="yes" xml:space="preserve">
          <source>While usual Rust style is to import types directly, aliases of &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; often are not, to make it easier to distinguish between them. &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; is generally assumed to be &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;std::result::Result&lt;/code&gt;&lt;/a&gt;, and so users of this alias will generally use &lt;code&gt;io::Result&lt;/code&gt; instead of shadowing the prelude's import of &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;std::result::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si bien el estilo habitual de Rust es importar tipos directamente, los alias de &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; a&lt;/a&gt; menudo no lo son, para que sea m&amp;aacute;s f&amp;aacute;cil distinguirlos. &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; se asume generalmente para ser &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;std::result::Result&lt;/code&gt; &lt;/a&gt; , y para que los usuarios de este alias utilizar&amp;aacute;n generalmente &lt;code&gt;io::Result&lt;/code&gt; lugar de sombra de importaci&amp;oacute;n de la antesala de &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;std::result::Result&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ba71bc00b481e82beeb9921c07aacd0590f6bd1" translate="yes" xml:space="preserve">
          <source>While you are looking at that &lt;code&gt;[-]&lt;/code&gt; button also notice the &lt;code&gt;[src]&lt;/code&gt; button. Rust's API documentation comes with the source code and you are encouraged to read it. The standard library source is generally high quality and a peek behind the curtains is often enlightening.</source>
          <target state="translated">Mientras mira ese bot&amp;oacute;n &lt;code&gt;[-]&lt;/code&gt; , observe tambi&amp;eacute;n el bot&amp;oacute;n &lt;code&gt;[src]&lt;/code&gt; . La documentaci&amp;oacute;n de la API de Rust viene con el c&amp;oacute;digo fuente y le recomendamos que la lea. La fuente de biblioteca est&amp;aacute;ndar es generalmente de alta calidad y un vistazo detr&amp;aacute;s de las cortinas suele ser esclarecedor.</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="5bd6985bffedbe45212e5ed4b8d7b10e4e8bfe85" translate="yes" xml:space="preserve">
          <source>Whitespace is any non-empty string containing only characters that have the &lt;a href=&quot;https://www.unicode.org/reports/tr31/&quot;&gt;&lt;code&gt;Pattern_White_Space&lt;/code&gt;&lt;/a&gt; Unicode property, namely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff785990fe44822be8ffd4354e290cef0c34c873" translate="yes" xml:space="preserve">
          <source>Whitespace is any non-empty string containing only characters that have the &lt;code&gt;Pattern_White_Space&lt;/code&gt; Unicode property, namely:</source>
          <target state="translated">El espacio en blanco es cualquier cadena no vac&amp;iacute;a que contiene solo caracteres que tienen la propiedad Unicode &lt;code&gt;Pattern_White_Space&lt;/code&gt; , a saber:</target>
        </trans-unit>
        <trans-unit id="9831741f3701cd2501051eea04df81e500fcac28" translate="yes" xml:space="preserve">
          <source>Who Rust Is For</source>
          <target state="translated">Para quién es el óxido</target>
        </trans-unit>
        <trans-unit id="73012c2e29394e650b32f0b4934e8028ea0802a0" translate="yes" xml:space="preserve">
          <source>Who This Book Is For</source>
          <target state="translated">¿Para quién es este libro?</target>
        </trans-unit>
        <trans-unit id="43d9a912852b85357d25bd06b5c4e243076f38d3" translate="yes" xml:space="preserve">
          <source>Who implements &lt;code&gt;UnwindSafe&lt;/code&gt;?</source>
          <target state="translated">&amp;iquest;Qui&amp;eacute;n implementa &lt;code&gt;UnwindSafe&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="e36799f202c4d0ce55f224011110c6d687f10837" translate="yes" xml:space="preserve">
          <source>Why &lt;code&gt;filter_map&lt;/code&gt; and not just &lt;a href=&quot;#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;? The key is in this part:</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; &lt;code&gt;filter_map&lt;/code&gt; y no solo &lt;a href=&quot;#method.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; ear&lt;/a&gt; ? La clave est&amp;aacute; en esta parte:</target>
        </trans-unit>
        <trans-unit id="f5b054d5badd7795d72a342651abfb7fc1f4dad9" translate="yes" xml:space="preserve">
          <source>Why do I get this message with code that doesn't involve borrowing?</source>
          <target state="translated">¿Por qué recibo este mensaje con un código que no implica un préstamo?</target>
        </trans-unit>
        <trans-unit id="996dd8b0e5f1405cbf0cea853468ae25180b7c3c" translate="yes" xml:space="preserve">
          <source>Why would you not want an executable? Often, &lt;code&gt;cargo check&lt;/code&gt; is much faster than &lt;code&gt;cargo build&lt;/code&gt;, because it skips the step of producing an executable. If you&amp;rsquo;re continually checking your work while writing the code, using &lt;code&gt;cargo check&lt;/code&gt; will speed up the process! As such, many Rustaceans run &lt;code&gt;cargo check&lt;/code&gt; periodically as they write their program to make sure it compiles. Then they run &lt;code&gt;cargo build&lt;/code&gt; when they&amp;rsquo;re ready to use the executable.</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; no querr&amp;iacute;as un ejecutable? A menudo, &lt;code&gt;cargo check&lt;/code&gt; es mucho m&amp;aacute;s r&amp;aacute;pida que &lt;code&gt;cargo build&lt;/code&gt; , porque omite el paso de producir un ejecutable. Si &lt;code&gt;cargo check&lt;/code&gt; continuamente su trabajo mientras escribe el c&amp;oacute;digo, &amp;iexcl;usar la verificaci&amp;oacute;n de carga acelerar&amp;aacute; el proceso! Como tal, muchos rust&amp;aacute;ceos ejecutan &lt;code&gt;cargo check&lt;/code&gt; peri&amp;oacute;dicamente mientras escriben su programa para asegurarse de que se compile. Luego ejecutan &lt;code&gt;cargo build&lt;/code&gt; cuando est&amp;aacute;n listos para usar el ejecutable.</target>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="translated">Width</target>
        </trans-unit>
        <trans-unit id="a81276e6dfb0c035da01e2595ee9fa04fdc86e1e" translate="yes" xml:space="preserve">
          <source>Wildcard pattern</source>
          <target state="translated">Patrón de comodín</target>
        </trans-unit>
        <trans-unit id="f4138f22664d37f96c263052adeb723fdfd7248c" translate="yes" xml:space="preserve">
          <source>Wildcards</source>
          <target state="translated">Wildcards</target>
        </trans-unit>
        <trans-unit id="dd04e2ae06e0c22d6b8a5c4141451a441cf23045" translate="yes" xml:space="preserve">
          <source>Will always return the same &lt;a href=&quot;../../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0843bf815a9dab90b0636f270db8d304e5915a96" translate="yes" xml:space="preserve">
          <source>Will always return the same &lt;code&gt;&amp;amp;str&lt;/code&gt;</source>
          <target state="translated">Siempre devolver&amp;aacute; el mismo &lt;code&gt;&amp;amp;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74ce1cb06587f571c24b39c88c3261da8e964077" translate="yes" xml:space="preserve">
          <source>Will handle the pattern &lt;code&gt;&quot;&quot;&lt;/code&gt; as returning empty matches at each character boundary.</source>
          <target state="translated">Manejar&amp;aacute; el patr&amp;oacute;n &lt;code&gt;&quot;&quot;&lt;/code&gt; como si devolviera coincidencias vac&amp;iacute;as en cada l&amp;iacute;mite de car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="f2a58ab6d8aaaf56805d5dcc5d08104ca8722e51" translate="yes" xml:space="preserve">
          <source>Will return &lt;a href=&quot;../str/trait.fromstr#associatedtype.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if it's not possible to parse this string slice into the desired type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cfca1876affe8c210a04c4805938a5cb452282" translate="yes" xml:space="preserve">
          <source>Will return &lt;a href=&quot;str/trait.fromstr#associatedtype.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if it's not possible to parse this string slice into the desired type.</source>
          <target state="translated">Devolver&amp;aacute; &lt;a href=&quot;str/trait.fromstr#associatedtype.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; si no es posible analizar este segmento de cadena en el tipo deseado.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="17aebcc3873693512f66ff2029c56928afebc898" translate="yes" xml:space="preserve">
          <source>Windows path prefixes, e.g., &lt;code&gt;C:&lt;/code&gt; or &lt;code&gt;\\server\share&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf1c1efc2e097b96e98657a8262127bc226f8f4" translate="yes" xml:space="preserve">
          <source>Windows path prefixes, e.g., &lt;code&gt;C:&lt;/code&gt; or &lt;code&gt;\server\share&lt;/code&gt;.</source>
          <target state="translated">Prefijos de ruta de Windows, por ejemplo, &lt;code&gt;C:&lt;/code&gt; o &lt;code&gt;\server\share&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b25b9078d1c6b5cf7d0c03d87923967058f5d7a" translate="yes" xml:space="preserve">
          <source>Windows uses a variety of path prefix styles, including references to drive volumes (like &lt;code&gt;C:&lt;/code&gt;), network shared folders (like &lt;code&gt;\\server\share&lt;/code&gt;), and others. In addition, some path prefixes are &quot;verbatim&quot; (i.e., prefixed with &lt;code&gt;\\?\&lt;/code&gt;), in which case &lt;code&gt;/&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; treated as a separator and essentially no normalization is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f64162f505580122671f38419aea6835f8c68d" translate="yes" xml:space="preserve">
          <source>Windows uses a variety of path prefix styles, including references to drive volumes (like &lt;code&gt;C:&lt;/code&gt;), network shared folders (like &lt;code&gt;\server\share&lt;/code&gt;), and others. In addition, some path prefixes are &quot;verbatim&quot; (i.e., prefixed with &lt;code&gt;\?\&lt;/code&gt;), in which case &lt;code&gt;/&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; treated as a separator and essentially no normalization is performed.</source>
          <target state="translated">Windows usa una variedad de estilos de prefijo de ruta, incluidas referencias a vol&amp;uacute;menes de unidad (como &lt;code&gt;C:&lt;/code&gt; :), carpetas compartidas de red (como &lt;code&gt;\server\share&lt;/code&gt; ) y otros. Adem&amp;aacute;s, algunos prefijos de ruta son &quot;Verbatim&quot; (es decir, con el prefijo &lt;code&gt;\?\&lt;/code&gt; ), En cuyo caso &lt;code&gt;/&lt;/code&gt; es &lt;em&gt;no&lt;/em&gt; tratado como un separador y esencialmente no se realiza ninguna normalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7b773809bbe5f3adf18d472bfb1e18eaa3a7d486" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions for the primitives in the &lt;code&gt;std::fs&lt;/code&gt; module.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para las primitivas en el m&amp;oacute;dulo &lt;code&gt;std::fs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="965b862fd7707ea01407f5bde9d76c4b33887700" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para &lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="315ae7857105e3f47dabe009d9742ce6b255f1de" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e64c5541c43eacfdb85ccf07942595f788d2cb90" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../fs/struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para &lt;a href=&quot;../../../fs/struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a739bab05e923c90296481bb09cc25239dd40e0" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../fs/struct.file&quot;&gt;&lt;code&gt;fs::File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00024f75ddf677c52ec0b6d2810b742570a31c11" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../fs/struct.filetype&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para &lt;a href=&quot;../../../fs/struct.filetype&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c379abe31315129f29960307cac5c5a9ebe73ce4" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../fs/struct.filetype&quot;&gt;&lt;code&gt;fs::FileType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ae56a0a615ce91192a5ee5e6f95bfb7ba258a6" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../fs/struct.metadata&quot;&gt;&lt;code&gt;fs::Metadata&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para &lt;a href=&quot;../../../fs/struct.metadata&quot;&gt; &lt;code&gt;fs::Metadata&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45de75b6c03804d7df1abb9816158b688e268757" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt;&lt;code&gt;fs::OpenOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt; &lt;code&gt;fs::OpenOptions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94d3d733eec0453c12d54d6f46b9364d74ffa234" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to &lt;a href=&quot;../../../process/struct.exitstatus&quot;&gt;&lt;code&gt;process::ExitStatus&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para &lt;a href=&quot;../../../process/struct.exitstatus&quot;&gt; &lt;code&gt;process::ExitStatus&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6631cb576a83d66476aa6a96c888a47fea46888b" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to general I/O primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd50699b2495e189ba2c74247886850721ca3204" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to the &lt;a href=&quot;../../../process/struct.command&quot;&gt;&lt;code&gt;process::Command&lt;/code&gt;&lt;/a&gt; builder.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para el &lt;a href=&quot;../../../process/struct.command&quot;&gt; &lt;code&gt;process::Command&lt;/code&gt; &lt;/a&gt; Generador de comandos .</target>
        </trans-unit>
        <trans-unit id="72c2a1cf40aca0e7999edbbce4beb69846664076" translate="yes" xml:space="preserve">
          <source>Windows-specific extensions to the primitives in the &lt;code&gt;std::ffi&lt;/code&gt; module.</source>
          <target state="translated">Extensiones espec&amp;iacute;ficas de Windows para las primitivas en el m&amp;oacute;dulo &lt;code&gt;std::ffi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a36d28de36794d012a45ca83704dfdf241f6fac" translate="yes" xml:space="preserve">
          <source>Windows-specific primitives</source>
          <target state="translated">Primitivas específicas de Windows</target>
        </trans-unit>
        <trans-unit id="a29244317dd706a76b2545e981c947b9fe3e3b2c" translate="yes" xml:space="preserve">
          <source>Windows-specific primitives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faf80579510e395a13fd315a37c59f2f038321b" translate="yes" xml:space="preserve">
          <source>Windows::all</source>
          <target state="translated">Windows::all</target>
        </trans-unit>
        <trans-unit id="6716af8ef731d4cbf5689fbdfb93409bf05643fa" translate="yes" xml:space="preserve">
          <source>Windows::any</source>
          <target state="translated">Windows::any</target>
        </trans-unit>
        <trans-unit id="700457e5baeb9db95e547cef9c74633bc4d41f0d" translate="yes" xml:space="preserve">
          <source>Windows::borrow</source>
          <target state="translated">Windows::borrow</target>
        </trans-unit>
        <trans-unit id="17164b9bb020d976e93adc4baa902877434e8dcf" translate="yes" xml:space="preserve">
          <source>Windows::borrow_mut</source>
          <target state="translated">Windows::borrow_mut</target>
        </trans-unit>
        <trans-unit id="31908ffdddda768740e732a89602628774aabf19" translate="yes" xml:space="preserve">
          <source>Windows::by_ref</source>
          <target state="translated">Windows::by_ref</target>
        </trans-unit>
        <trans-unit id="f3d0e279ef4b7617f62329eac02e5ee30b537a4a" translate="yes" xml:space="preserve">
          <source>Windows::chain</source>
          <target state="translated">Windows::chain</target>
        </trans-unit>
        <trans-unit id="dc2580c31dfca64d3e4362d3193516de3088323f" translate="yes" xml:space="preserve">
          <source>Windows::clone</source>
          <target state="translated">Windows::clone</target>
        </trans-unit>
        <trans-unit id="a98bb41ccc08f765218084e917668531933467aa" translate="yes" xml:space="preserve">
          <source>Windows::clone_from</source>
          <target state="translated">Windows::clone_from</target>
        </trans-unit>
        <trans-unit id="561b1708f321b704fa9eba574176baec35025d94" translate="yes" xml:space="preserve">
          <source>Windows::clone_into</source>
          <target state="translated">Windows::clone_into</target>
        </trans-unit>
        <trans-unit id="9c9f0c0979265913d55cdfc2ebb0045f5a724bb0" translate="yes" xml:space="preserve">
          <source>Windows::cloned</source>
          <target state="translated">Windows::cloned</target>
        </trans-unit>
        <trans-unit id="a5b46f7f7dbd448b7a57c4223d0c87d1f200d2c6" translate="yes" xml:space="preserve">
          <source>Windows::cmp</source>
          <target state="translated">Windows::cmp</target>
        </trans-unit>
        <trans-unit id="fbb6b9c622af98d5a66bbf1cfbc26795253b7489" translate="yes" xml:space="preserve">
          <source>Windows::collect</source>
          <target state="translated">Windows::collect</target>
        </trans-unit>
        <trans-unit id="b4ad49bdadeff7d300af28e5eb3fa8051a92ccee" translate="yes" xml:space="preserve">
          <source>Windows::copied</source>
          <target state="translated">Windows::copied</target>
        </trans-unit>
        <trans-unit id="bd6d8af2e6984890043a2ffcecf64303ee4d2b67" translate="yes" xml:space="preserve">
          <source>Windows::count</source>
          <target state="translated">Windows::count</target>
        </trans-unit>
        <trans-unit id="a46aabac6f5fb33e90e0fa67da1b1c957391a4ba" translate="yes" xml:space="preserve">
          <source>Windows::cycle</source>
          <target state="translated">Windows::cycle</target>
        </trans-unit>
        <trans-unit id="54d929ec5d55c2868b2694194d22d67c995476cd" translate="yes" xml:space="preserve">
          <source>Windows::enumerate</source>
          <target state="translated">Windows::enumerate</target>
        </trans-unit>
        <trans-unit id="974003d8cd6730c68f798fb5852a1b8f66b8fc07" translate="yes" xml:space="preserve">
          <source>Windows::eq</source>
          <target state="translated">Windows::eq</target>
        </trans-unit>
        <trans-unit id="fcdcd8564c22f0d208d5887dca20b15981ed7eda" translate="yes" xml:space="preserve">
          <source>Windows::filter</source>
          <target state="translated">Windows::filter</target>
        </trans-unit>
        <trans-unit id="072316ad208e9676ec686940b97aee272075037a" translate="yes" xml:space="preserve">
          <source>Windows::filter_map</source>
          <target state="translated">Windows::filter_map</target>
        </trans-unit>
        <trans-unit id="c74c15ca962f2f3a44811fa2285bb43e26958f3d" translate="yes" xml:space="preserve">
          <source>Windows::find</source>
          <target state="translated">Windows::find</target>
        </trans-unit>
        <trans-unit id="786d8bedc7c35f14926b40554c0038bfc1b31ca1" translate="yes" xml:space="preserve">
          <source>Windows::find_map</source>
          <target state="translated">Windows::find_map</target>
        </trans-unit>
        <trans-unit id="643130ad01d792200f3136ea8c6e080f0365707e" translate="yes" xml:space="preserve">
          <source>Windows::flat_map</source>
          <target state="translated">Windows::flat_map</target>
        </trans-unit>
        <trans-unit id="f4d8fa17f7d4e22990b8c1303515ad7b41c0e51e" translate="yes" xml:space="preserve">
          <source>Windows::flatten</source>
          <target state="translated">Windows::flatten</target>
        </trans-unit>
        <trans-unit id="d2eb04619a69bf18cec3a67a06b479df0576a42c" translate="yes" xml:space="preserve">
          <source>Windows::fmt</source>
          <target state="translated">Windows::fmt</target>
        </trans-unit>
        <trans-unit id="d8a195c51acf16c6aadba984188c415f5441b6c3" translate="yes" xml:space="preserve">
          <source>Windows::fold</source>
          <target state="translated">Windows::fold</target>
        </trans-unit>
        <trans-unit id="01cdc502497ab9b03d2f83fa2d0871f8abb0994a" translate="yes" xml:space="preserve">
          <source>Windows::for_each</source>
          <target state="translated">Windows::for_each</target>
        </trans-unit>
        <trans-unit id="6108a137a74f4bd608fc702807fd0e17b7abd278" translate="yes" xml:space="preserve">
          <source>Windows::from</source>
          <target state="translated">Windows::from</target>
        </trans-unit>
        <trans-unit id="8f30f87a1c9a02e1fb27ac6fe719069f8e122330" translate="yes" xml:space="preserve">
          <source>Windows::fuse</source>
          <target state="translated">Windows::fuse</target>
        </trans-unit>
        <trans-unit id="67db02e23e968fbc8c51336185b95b9b96aec0fb" translate="yes" xml:space="preserve">
          <source>Windows::ge</source>
          <target state="translated">Windows::ge</target>
        </trans-unit>
        <trans-unit id="1b08a3c2211d2e64ecaa8d094412c20af26d6951" translate="yes" xml:space="preserve">
          <source>Windows::gt</source>
          <target state="translated">Windows::gt</target>
        </trans-unit>
        <trans-unit id="6a49da6e96f3901cd2e3f2a458b5df67e32fc1ac" translate="yes" xml:space="preserve">
          <source>Windows::inspect</source>
          <target state="translated">Windows::inspect</target>
        </trans-unit>
        <trans-unit id="dc89660cc21103f886ff9b7d6b842aa6ebb6eea2" translate="yes" xml:space="preserve">
          <source>Windows::into</source>
          <target state="translated">Windows::into</target>
        </trans-unit>
        <trans-unit id="7dc827a9516a85386bc0443ac7acf8dbdc207267" translate="yes" xml:space="preserve">
          <source>Windows::into_iter</source>
          <target state="translated">Windows::into_iter</target>
        </trans-unit>
        <trans-unit id="3bf9a277de1f84adeaec35fb62966d1d7c35ff91" translate="yes" xml:space="preserve">
          <source>Windows::is_empty</source>
          <target state="translated">Windows::is_empty</target>
        </trans-unit>
        <trans-unit id="0f4e75134f8d11b4a570702cb97bdd5515869f82" translate="yes" xml:space="preserve">
          <source>Windows::is_sorted</source>
          <target state="translated">Windows::is_sorted</target>
        </trans-unit>
        <trans-unit id="e74da52cc5b534ed59329d25635be3609f0336ec" translate="yes" xml:space="preserve">
          <source>Windows::is_sorted_by</source>
          <target state="translated">Windows::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="396da8bc74081a0a8716a03e2ec0b64081b2263f" translate="yes" xml:space="preserve">
          <source>Windows::is_sorted_by_key</source>
          <target state="translated">Windows::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="8bbf67cd900972eb007b6f354b425cc5682d90e0" translate="yes" xml:space="preserve">
          <source>Windows::last</source>
          <target state="translated">Windows::last</target>
        </trans-unit>
        <trans-unit id="edfebb32722bfb5c8d9922b27c21e2ad57bf0c3b" translate="yes" xml:space="preserve">
          <source>Windows::le</source>
          <target state="translated">Windows::le</target>
        </trans-unit>
        <trans-unit id="5b0f7e7a7b44222bd3e3f54b200e29b7293b2aa2" translate="yes" xml:space="preserve">
          <source>Windows::len</source>
          <target state="translated">Windows::len</target>
        </trans-unit>
        <trans-unit id="f84b680a03923cb8668b70cb3d48a10366b725cb" translate="yes" xml:space="preserve">
          <source>Windows::lt</source>
          <target state="translated">Windows::lt</target>
        </trans-unit>
        <trans-unit id="211653c7638da6256828c029f6bdbbd39290d614" translate="yes" xml:space="preserve">
          <source>Windows::map</source>
          <target state="translated">Windows::map</target>
        </trans-unit>
        <trans-unit id="da3645101a0d749919ba6caacb64cbf6bb5ab932" translate="yes" xml:space="preserve">
          <source>Windows::max</source>
          <target state="translated">Windows::max</target>
        </trans-unit>
        <trans-unit id="6faf7c5f10fa19e5856c7c741e0f6e00ec43ac89" translate="yes" xml:space="preserve">
          <source>Windows::max_by</source>
          <target state="translated">Windows::max_by</target>
        </trans-unit>
        <trans-unit id="a97eb7a3a210c7918ea8d0750c43c0be36a4f490" translate="yes" xml:space="preserve">
          <source>Windows::max_by_key</source>
          <target state="translated">Windows::max_by_key</target>
        </trans-unit>
        <trans-unit id="85afd294e1c8b3ac152c12583d70b807752d21c5" translate="yes" xml:space="preserve">
          <source>Windows::min</source>
          <target state="translated">Windows::min</target>
        </trans-unit>
        <trans-unit id="9851ad95c0803c7379f60e880e611d24b73dd771" translate="yes" xml:space="preserve">
          <source>Windows::min_by</source>
          <target state="translated">Windows::min_by</target>
        </trans-unit>
        <trans-unit id="d2ffacc1b47b99ed28eab58435af4f27856f1432" translate="yes" xml:space="preserve">
          <source>Windows::min_by_key</source>
          <target state="translated">Windows::min_by_key</target>
        </trans-unit>
        <trans-unit id="bd27f7b2dd977463e705864279f5215a8693dcf1" translate="yes" xml:space="preserve">
          <source>Windows::ne</source>
          <target state="translated">Windows::ne</target>
        </trans-unit>
        <trans-unit id="07ea4a2a4bc2affb3d5f44891b5f320bb57788cf" translate="yes" xml:space="preserve">
          <source>Windows::next</source>
          <target state="translated">Windows::next</target>
        </trans-unit>
        <trans-unit id="5df573867c1237a7c0cadeeaaef6362ce41599cb" translate="yes" xml:space="preserve">
          <source>Windows::next_back</source>
          <target state="translated">Windows::next_back</target>
        </trans-unit>
        <trans-unit id="884d14d5f8a19f0db064d5b33b9b17b75a3d8a57" translate="yes" xml:space="preserve">
          <source>Windows::nth</source>
          <target state="translated">Windows::nth</target>
        </trans-unit>
        <trans-unit id="d9ece61aa05f950e8c21d253603cec8c4927666f" translate="yes" xml:space="preserve">
          <source>Windows::nth_back</source>
          <target state="translated">Windows::nth_back</target>
        </trans-unit>
        <trans-unit id="e2337e7096b09ea74ce36d188b9ca860a5770051" translate="yes" xml:space="preserve">
          <source>Windows::partial_cmp</source>
          <target state="translated">Windows::partial_cmp</target>
        </trans-unit>
        <trans-unit id="b234418f227a17c704174f2bef5739ac92992b03" translate="yes" xml:space="preserve">
          <source>Windows::partition</source>
          <target state="translated">Windows::partition</target>
        </trans-unit>
        <trans-unit id="9be20298e80cbaffa477f416ccc86f737f3f8d78" translate="yes" xml:space="preserve">
          <source>Windows::peekable</source>
          <target state="translated">Windows::peekable</target>
        </trans-unit>
        <trans-unit id="45529696a341be706214708f3fbab21c7d0b23fd" translate="yes" xml:space="preserve">
          <source>Windows::position</source>
          <target state="translated">Windows::position</target>
        </trans-unit>
        <trans-unit id="59fc20664973429ad195ba2d8aed0ddf546bb2a2" translate="yes" xml:space="preserve">
          <source>Windows::product</source>
          <target state="translated">Windows::product</target>
        </trans-unit>
        <trans-unit id="50734bb415bc20fe6568bfd1dd1f63f6b93fe949" translate="yes" xml:space="preserve">
          <source>Windows::rev</source>
          <target state="translated">Windows::rev</target>
        </trans-unit>
        <trans-unit id="530fe46767d842dcb4f66462626de45b73ad15f2" translate="yes" xml:space="preserve">
          <source>Windows::rfind</source>
          <target state="translated">Windows::rfind</target>
        </trans-unit>
        <trans-unit id="a36a85b42116649c6a0ad782c4af43ce9da0a6d2" translate="yes" xml:space="preserve">
          <source>Windows::rfold</source>
          <target state="translated">Windows::rfold</target>
        </trans-unit>
        <trans-unit id="6b46a39965804836e499e246c032f1e49efe2b08" translate="yes" xml:space="preserve">
          <source>Windows::rposition</source>
          <target state="translated">Windows::rposition</target>
        </trans-unit>
        <trans-unit id="3085a5deaa7e492e694960ff9a8bb11a44fea77b" translate="yes" xml:space="preserve">
          <source>Windows::scan</source>
          <target state="translated">Windows::scan</target>
        </trans-unit>
        <trans-unit id="600168ee422d0b4058643289d6f5f44a0cc41069" translate="yes" xml:space="preserve">
          <source>Windows::size_hint</source>
          <target state="translated">Windows::size_hint</target>
        </trans-unit>
        <trans-unit id="60a31deba53a9144f8f111c1a535404922718781" translate="yes" xml:space="preserve">
          <source>Windows::skip</source>
          <target state="translated">Windows::skip</target>
        </trans-unit>
        <trans-unit id="f0c88d1e74fd2619b821ca5f9314adc478f85906" translate="yes" xml:space="preserve">
          <source>Windows::skip_while</source>
          <target state="translated">Windows::skip_while</target>
        </trans-unit>
        <trans-unit id="43319d488bcd123c09eddf08cef6849d9980eba7" translate="yes" xml:space="preserve">
          <source>Windows::step_by</source>
          <target state="translated">Windows::step_by</target>
        </trans-unit>
        <trans-unit id="9672bcfc100f3ac44dec88d4d85716df442fe940" translate="yes" xml:space="preserve">
          <source>Windows::sum</source>
          <target state="translated">Windows::sum</target>
        </trans-unit>
        <trans-unit id="7df17ff1135505a96dab1d9f8ef57748282788e2" translate="yes" xml:space="preserve">
          <source>Windows::take</source>
          <target state="translated">Windows::take</target>
        </trans-unit>
        <trans-unit id="1e57647d418ad6082e9d4ee5291c1745f789d2e8" translate="yes" xml:space="preserve">
          <source>Windows::take_while</source>
          <target state="translated">Windows::take_while</target>
        </trans-unit>
        <trans-unit id="8f55f6ef559f032eb73be76c2b09a5737e416d5c" translate="yes" xml:space="preserve">
          <source>Windows::to_owned</source>
          <target state="translated">Windows::to_owned</target>
        </trans-unit>
        <trans-unit id="81cbe418ab3685420d683bda86fea704938b8a31" translate="yes" xml:space="preserve">
          <source>Windows::try_fold</source>
          <target state="translated">Windows::try_fold</target>
        </trans-unit>
        <trans-unit id="b4c27872e29ca09f92a33f4478a1eff0aea539bb" translate="yes" xml:space="preserve">
          <source>Windows::try_for_each</source>
          <target state="translated">Windows::try_for_each</target>
        </trans-unit>
        <trans-unit id="171fea351be781be4e02e711fd24294e453b5b91" translate="yes" xml:space="preserve">
          <source>Windows::try_from</source>
          <target state="translated">Windows::try_from</target>
        </trans-unit>
        <trans-unit id="9220c38d1fb3ec5be1fd9df5b83c243f1caa3ba1" translate="yes" xml:space="preserve">
          <source>Windows::try_into</source>
          <target state="translated">Windows::try_into</target>
        </trans-unit>
        <trans-unit id="92ba387998e4a086247665261fda5122f9f9029e" translate="yes" xml:space="preserve">
          <source>Windows::try_rfold</source>
          <target state="translated">Windows::try_rfold</target>
        </trans-unit>
        <trans-unit id="ff8171358582a1c7e6fe713b6c5031c85fcf7da9" translate="yes" xml:space="preserve">
          <source>Windows::type_id</source>
          <target state="translated">Windows::type_id</target>
        </trans-unit>
        <trans-unit id="ef934a80a8453f69945f5830a3ed61e3b0c17061" translate="yes" xml:space="preserve">
          <source>Windows::unzip</source>
          <target state="translated">Windows::unzip</target>
        </trans-unit>
        <trans-unit id="fc3d2052b8855f4dd5b69c5898112a4724165849" translate="yes" xml:space="preserve">
          <source>Windows::zip</source>
          <target state="translated">Windows::zip</target>
        </trans-unit>
        <trans-unit id="38dc69622ed00aee21cdcf0fd074e253d0cf7005" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;macro.column&quot;&gt;&lt;code&gt;column!&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;macro.file&quot;&gt;&lt;code&gt;file!&lt;/code&gt;&lt;/a&gt;, these macros provide debugging information for developers about the location within the source.</source>
          <target state="translated">&amp;iexcl;Con &lt;a href=&quot;macro.column&quot;&gt; &lt;code&gt;column!&lt;/code&gt; &lt;/a&gt;y &lt;a href=&quot;macro.file&quot;&gt; &lt;code&gt;file!&lt;/code&gt; &lt;/a&gt;, estas macros proporcionan informaci&amp;oacute;n de depuraci&amp;oacute;n a los desarrolladores sobre la ubicaci&amp;oacute;n dentro de la fuente.</target>
        </trans-unit>
        <trans-unit id="0ec53663cefb4388138a07773bc9d9c40923307a" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;macro.line&quot;&gt;&lt;code&gt;line!&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;macro.column&quot;&gt;&lt;code&gt;column!&lt;/code&gt;&lt;/a&gt;, these macros provide debugging information for developers about the location within the source.</source>
          <target state="translated">&amp;iexcl;Con &lt;a href=&quot;macro.line&quot;&gt; &lt;code&gt;line!&lt;/code&gt; &lt;/a&gt;y &lt;a href=&quot;macro.column&quot;&gt; &lt;code&gt;column!&lt;/code&gt; &lt;/a&gt;, estas macros proporcionan informaci&amp;oacute;n de depuraci&amp;oacute;n a los desarrolladores sobre la ubicaci&amp;oacute;n dentro de la fuente.</target>
        </trans-unit>
        <trans-unit id="815b1bf6287da2f53b57957c1e78d170fa30a354" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;macro.line&quot;&gt;&lt;code&gt;line!&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;macro.file&quot;&gt;&lt;code&gt;file!&lt;/code&gt;&lt;/a&gt;, these macros provide debugging information for developers about the location within the source.</source>
          <target state="translated">&amp;iexcl;Con &lt;a href=&quot;macro.line&quot;&gt; &lt;code&gt;line!&lt;/code&gt; &lt;/a&gt;y &lt;a href=&quot;macro.file&quot;&gt; &lt;code&gt;file!&lt;/code&gt; &lt;/a&gt;, estas macros proporcionan informaci&amp;oacute;n de depuraci&amp;oacute;n a los desarrolladores sobre la ubicaci&amp;oacute;n dentro de la fuente.</target>
        </trans-unit>
        <trans-unit id="04eb7504cabe503a97d0c1acdec5be3b9053e741" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Infallible&lt;/code&gt; being an enum, this code is valid. However when &lt;code&gt;Infallible&lt;/code&gt; becomes an alias for the never type, the two &lt;code&gt;impl&lt;/code&gt;s will start to overlap and therefore will be disallowed by the language&amp;rsquo;s trait coherence rules.</source>
          <target state="translated">Con &lt;code&gt;Infallible&lt;/code&gt; siendo una enumeraci&amp;oacute;n, este c&amp;oacute;digo es v&amp;aacute;lido. Sin embargo, cuando &lt;code&gt;Infallible&lt;/code&gt; convierte en un alias para el tipo never, las dos &lt;code&gt;impl&lt;/code&gt; icaciones comenzar&amp;aacute;n a superponerse y, por lo tanto, ser&amp;aacute;n rechazadas por las reglas de coherencia de rasgos del lenguaje.</target>
        </trans-unit>
        <trans-unit id="0eafffeebea0c3842266dddbb6f397a2037dca13" translate="yes" xml:space="preserve">
          <source>With CMD on Windows, you would enter the following:</source>
          <target state="translated">Con CMD en Windows,se introduciría lo siguiente:</target>
        </trans-unit>
        <trans-unit id="c67b427f4a43407481fdbe0434a6fd74d6c08115" translate="yes" xml:space="preserve">
          <source>With Rust&amp;rsquo;s &lt;code&gt;..&lt;/code&gt; range syntax, if you want to start at the first index (zero), you can drop the value before the two periods. In other words, these are equal:</source>
          <target state="translated">Con la sintaxis de rango &lt;code&gt;..&lt;/code&gt; de Rust , si desea comenzar en el primer &amp;iacute;ndice (cero), puede eliminar el valor antes de los dos puntos. En otras palabras, estos son iguales:</target>
        </trans-unit>
        <trans-unit id="e6848246eb0a467aba8b63d5b96e2ddd94bde183" translate="yes" xml:space="preserve">
          <source>With a basic understanding of threads and the thread API, let&amp;rsquo;s look at what we can &lt;em&gt;do&lt;/em&gt; with threads.</source>
          <target state="translated">Con una comprensi&amp;oacute;n b&amp;aacute;sica de los subprocesos y la API de subprocesos, veamos qu&amp;eacute; podemos &lt;em&gt;hacer&lt;/em&gt; con los subprocesos.</target>
        </trans-unit>
        <trans-unit id="b24837e9bbb4a3f319a132114baf06eda4b2e88c" translate="yes" xml:space="preserve">
          <source>With a method call:</source>
          <target state="translated">Con una llamada de método:</target>
        </trans-unit>
        <trans-unit id="5ec0502a02d896b78bc96b2798e0767135b5c8c9" translate="yes" xml:space="preserve">
          <source>With a pathname:</source>
          <target state="translated">Con un nombre:</target>
        </trans-unit>
        <trans-unit id="f37d3365310acb52cb4a4d469a50deacc72ef16e" translate="yes" xml:space="preserve">
          <source>With a unique name, the version, the author details that &lt;code&gt;cargo new&lt;/code&gt; added when you created the crate, your description, and a license added, the &lt;em&gt;Cargo.toml&lt;/em&gt; file for a project that is ready to publish might look like this:</source>
          <target state="translated">Con un nombre &amp;uacute;nico, la versi&amp;oacute;n, el autor, los detalles de la &lt;code&gt;cargo new&lt;/code&gt; que agreg&amp;oacute; cuando cre&amp;oacute; la caja, su descripci&amp;oacute;n y una licencia agregada, el archivo &lt;em&gt;Cargo.toml&lt;/em&gt; de un proyecto que est&amp;aacute; listo para publicar podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="33d3ef8879647cae82afb7b344de4fdc8e49a8b3" translate="yes" xml:space="preserve">
          <source>With all of these dangers, why would you ever use raw pointers? One major use case is when interfacing with C code, as you&amp;rsquo;ll see in the next section, &lt;a href=&quot;#calling-an-unsafe-function-or-method&quot;&gt;&amp;ldquo;Calling an Unsafe Function or Method.&amp;rdquo;&lt;/a&gt; Another case is when building up safe abstractions that the borrow checker doesn&amp;rsquo;t understand. We&amp;rsquo;ll introduce unsafe functions and then look at an example of a safe abstraction that uses unsafe code.</source>
          <target state="translated">Con todos estos peligros, &amp;iquest;por qu&amp;eacute; usar&amp;iacute;as punteros en bruto? Un caso de uso importante es cuando se interact&amp;uacute;a con c&amp;oacute;digo C, como ver&amp;aacute; en la siguiente secci&amp;oacute;n, &lt;a href=&quot;#calling-an-unsafe-function-or-method&quot;&gt;&quot;Llamar a una funci&amp;oacute;n o m&amp;eacute;todo no&lt;/a&gt; seguro &quot;. Otro caso es cuando se crean abstracciones seguras que el verificador de pr&amp;eacute;stamos no comprende. Introduciremos funciones inseguras y luego veremos un ejemplo de una abstracci&amp;oacute;n segura que usa c&amp;oacute;digo inseguro.</target>
        </trans-unit>
        <trans-unit id="a402171e60da25e2d20aa541a5e736d082a2894a" translate="yes" xml:space="preserve">
          <source>With all the changes we&amp;rsquo;ve made, our code compiles without any warnings. But the bad news is this code doesn&amp;rsquo;t function the way we want it to yet. The key is the logic in the closures run by the threads of the &lt;code&gt;Worker&lt;/code&gt; instances: at the moment, we call &lt;code&gt;join&lt;/code&gt;, but that won&amp;rsquo;t shut down the threads because they &lt;code&gt;loop&lt;/code&gt; forever looking for jobs. If we try to drop our &lt;code&gt;ThreadPool&lt;/code&gt; with our current implementation of &lt;code&gt;drop&lt;/code&gt;, the main thread will block forever waiting for the first thread to finish.</source>
          <target state="translated">Con todos los cambios que hemos realizado, nuestro c&amp;oacute;digo se compila sin advertencias. Pero la mala noticia es que este c&amp;oacute;digo a&amp;uacute;n no funciona de la manera que queremos. La clave es la l&amp;oacute;gica en los cierres ejecutados por los subprocesos de las instancias de &lt;code&gt;Worker&lt;/code&gt; : en este momento, llamamos &lt;code&gt;join&lt;/code&gt; , pero eso no cerrar&amp;aacute; los subprocesos porque se &lt;code&gt;loop&lt;/code&gt; para siempre en busca de trabajos. Si intentamos eliminar nuestro &lt;code&gt;ThreadPool&lt;/code&gt; con nuestra implementaci&amp;oacute;n actual de &lt;code&gt;drop&lt;/code&gt; , el hilo principal se bloquear&amp;aacute; para siempre esperando que termine el primer hilo.</target>
        </trans-unit>
        <trans-unit id="3e478a9c9aaa53e1f24932c1bf11ee27b2b756f9" translate="yes" xml:space="preserve">
          <source>With all these different kinds of outputs, if crate A depends on crate B, then the compiler could find B in various different forms throughout the system. The only forms looked for by the compiler, however, are the &lt;code&gt;rlib&lt;/code&gt; format and the dynamic library format. With these two options for a dependent library, the compiler must at some point make a choice between these two formats. With this in mind, the compiler follows these rules when determining what format of dependencies will be used:</source>
          <target state="translated">Con todos estos tipos diferentes de salidas, si la caja A depende de la caja B, entonces el compilador podr&amp;iacute;a encontrar B en varias formas diferentes en todo el sistema. Sin embargo, las &amp;uacute;nicas formas que busca el compilador son el formato &lt;code&gt;rlib&lt;/code&gt; y el formato de biblioteca din&amp;aacute;mica. Con estas dos opciones para una biblioteca dependiente, el compilador debe en alg&amp;uacute;n momento elegir entre estos dos formatos. Con esto en mente, el compilador sigue estas reglas al determinar qu&amp;eacute; formato de dependencias se utilizar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="1b779befcd3540151b782d4543ae930ae53755ec" translate="yes" xml:space="preserve">
          <source>With all this information in mind, let&amp;rsquo;s rewrite &lt;code&gt;first_word&lt;/code&gt; to return a slice. The type that signifies &amp;ldquo;string slice&amp;rdquo; is written as &lt;code&gt;&amp;amp;str&lt;/code&gt;:</source>
          <target state="translated">Con toda esta informaci&amp;oacute;n en mente, reescribamos &lt;code&gt;first_word&lt;/code&gt; para devolver un segmento. El tipo que significa &quot;segmento de cadena&quot; se escribe como &lt;code&gt;&amp;amp;str&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cb10c6677d4a9c4ac3a69e9072ac5b7bbbfc8ab3" translate="yes" xml:space="preserve">
          <source>With an associated type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e91fb00c7adb5b470a7e84f143a4420eb3479d" translate="yes" xml:space="preserve">
          <source>With associated types, we don&amp;rsquo;t need to annotate types because we can&amp;rsquo;t implement a trait on a type multiple times. In Listing 19-12 with the definition that uses associated types, we can only choose what the type of &lt;code&gt;Item&lt;/code&gt; will be once, because there can only be one &lt;code&gt;impl Iterator for Counter&lt;/code&gt;. We don&amp;rsquo;t have to specify that we want an iterator of &lt;code&gt;u32&lt;/code&gt; values everywhere that we call &lt;code&gt;next&lt;/code&gt; on &lt;code&gt;Counter&lt;/code&gt;.</source>
          <target state="translated">Con los tipos asociados, no necesitamos anotar tipos porque no podemos implementar un rasgo en un tipo varias veces. En el Listado 19-12 con la definici&amp;oacute;n que usa tipos asociados, solo podemos elegir cu&amp;aacute;l ser&amp;aacute; el tipo de &lt;code&gt;Item&lt;/code&gt; una vez, porque solo puede haber un &lt;code&gt;impl Iterator for Counter&lt;/code&gt; . No tenemos que especificar que queremos un iterador de valores &lt;code&gt;u32&lt;/code&gt; en todas partes que llamemos a &lt;code&gt;next&lt;/code&gt; en &lt;code&gt;Counter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a53dfae04bc081765c66dac442860f331c44aeb" translate="yes" xml:space="preserve">
          <source>With mutable data that is globally accessible, it&amp;rsquo;s difficult to ensure there are no data races, which is why Rust considers mutable static variables to be unsafe. Where possible, it&amp;rsquo;s preferable to use the concurrency techniques and thread-safe smart pointers we discussed in Chapter 16 so the compiler checks that data accessed from different threads is done safely.</source>
          <target state="translated">Con datos mutables a los que se puede acceder globalmente, es dif&amp;iacute;cil garantizar que no haya carreras de datos, raz&amp;oacute;n por la cual Rust considera que las variables est&amp;aacute;ticas mutables no son seguras. Siempre que sea posible, es preferible utilizar las t&amp;eacute;cnicas de concurrencia y los punteros inteligentes seguros para subprocesos que discutimos en el Cap&amp;iacute;tulo 16 para que el compilador verifique que los datos a los que se accede desde diferentes subprocesos se realicen de manera segura.</target>
        </trans-unit>
        <trans-unit id="ef733904e440fafdfd6f6cff1f3753a02bb10342" translate="yes" xml:space="preserve">
          <source>With our new knowledge about iterators, we can change the &lt;code&gt;new&lt;/code&gt; function to take ownership of an iterator as its argument instead of borrowing a slice. We&amp;rsquo;ll use the iterator functionality instead of the code that checks the length of the slice and indexes into specific locations. This will clarify what the &lt;code&gt;Config::new&lt;/code&gt; function is doing because the iterator will access the values.</source>
          <target state="translated">Con nuestro nuevo conocimiento sobre iteradores, podemos cambiar la &lt;code&gt;new&lt;/code&gt; funci&amp;oacute;n para tomar posesi&amp;oacute;n de un iterador como argumento en lugar de tomar prestado un segmento. Usaremos la funcionalidad del iterador en lugar del c&amp;oacute;digo que verifica la longitud del segmento e indexa en ubicaciones espec&amp;iacute;ficas. Esto aclarar&amp;aacute; lo que est&amp;aacute; haciendo la funci&amp;oacute;n &lt;code&gt;Config::new&lt;/code&gt; porque el iterador acceder&amp;aacute; a los valores.</target>
        </trans-unit>
        <trans-unit id="813d416dedfb40190d58c273de8f8eb75ea3340b" translate="yes" xml:space="preserve">
          <source>With real world traits these numbers can grow drastically.</source>
          <target state="translated">Con los rasgos del mundo real estos números pueden crecer drásticamente.</target>
        </trans-unit>
        <trans-unit id="b72f5cb005021c9be16f1dc058fb74107683aac5" translate="yes" xml:space="preserve">
          <source>With references and &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, the borrowing rules&amp;rsquo; invariants are enforced at compile time. With &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, these invariants are enforced &lt;em&gt;at runtime&lt;/em&gt;. With references, if you break these rules, you&amp;rsquo;ll get a compiler error. With &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, if you break these rules, your program will panic and exit.</source>
          <target state="translated">Con referencias y &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; , los invariantes de las reglas de pr&amp;eacute;stamo se aplican en tiempo de compilaci&amp;oacute;n. Con &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; , estos invariantes se aplican &lt;em&gt;en tiempo de ejecuci&amp;oacute;n&lt;/em&gt; . Con referencias, si rompe estas reglas, obtendr&amp;aacute; un error de compilaci&amp;oacute;n. Con &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; , si rompe estas reglas, su programa entrar&amp;aacute; en p&amp;aacute;nico y se cerrar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="9baf0229e3e9e6c893294479bb6fe3668b3a0c0e" translate="yes" xml:space="preserve">
          <source>With simple projects, Cargo doesn&amp;rsquo;t provide a lot of value over just using &lt;code&gt;rustc&lt;/code&gt;, but it will prove its worth as your programs become more intricate. With complex projects composed of multiple crates, it&amp;rsquo;s much easier to let Cargo coordinate the build.</source>
          <target state="translated">Con proyectos simples, Cargo no proporciona mucho valor sobre solo usar &lt;code&gt;rustc&lt;/code&gt; , pero demostrar&amp;aacute; su valor a medida que sus programas se vuelvan m&amp;aacute;s complejos. Con proyectos complejos compuestos por m&amp;uacute;ltiples cajas, es mucho m&amp;aacute;s f&amp;aacute;cil dejar que Cargo coordine la construcci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="498cc75c7709fdab78e1cc82cb0379d4fbbfc2cc" translate="yes" xml:space="preserve">
          <source>With stdin:</source>
          <target state="translated">Con ETS:</target>
        </trans-unit>
        <trans-unit id="06224dc60392a0fce212359437fb5cee57ac9f42" translate="yes" xml:space="preserve">
          <source>With stdout:</source>
          <target state="translated">Con stdout:</target>
        </trans-unit>
        <trans-unit id="93ea5ac4258ad8d0735b4be8347a757702850e37" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;String&lt;/code&gt; type, in order to support a mutable, growable piece of text, we need to allocate an amount of memory on the heap, unknown at compile time, to hold the contents. This means:</source>
          <target state="translated">Con el tipo &lt;code&gt;String&lt;/code&gt; , para admitir un fragmento de texto mutable y ampliable, necesitamos asignar una cantidad de memoria en el mont&amp;oacute;n, desconocida en el momento de la compilaci&amp;oacute;n, para contener el contenido. Esto significa:</target>
        </trans-unit>
        <trans-unit id="e41ed52cf940fa02215dfc776f98dffa8f13fd94" translate="yes" xml:space="preserve">
          <source>With the above specification in hand, we can present arguments for why particular matchers are legal and others are not.</source>
          <target state="translated">Con la especificación anterior en la mano,podemos presentar argumentos de por qué determinadas parejas son legales y otras no.</target>
        </trans-unit>
        <trans-unit id="9c5fab965ba18f74e15ee6e594f51c165aae934a" translate="yes" xml:space="preserve">
          <source>With the closure defined, we can change the code in the &lt;code&gt;if&lt;/code&gt; blocks to call the closure to execute the code and get the resulting value. We call a closure like we do a function: we specify the variable name that holds the closure definition and follow it with parentheses containing the argument values we want to use, as shown in Listing 13-6.</source>
          <target state="translated">Con el cierre definido, podemos cambiar el c&amp;oacute;digo en los bloques &lt;code&gt;if&lt;/code&gt; para llamar al cierre para ejecutar el c&amp;oacute;digo y obtener el valor resultante. Llamamos a un cierre como hacemos una funci&amp;oacute;n: especificamos el nombre de la variable que contiene la definici&amp;oacute;n del cierre y lo seguimos con par&amp;eacute;ntesis que contienen los valores de los argumentos que queremos usar, como se muestra en el Listado 13-6.</target>
        </trans-unit>
        <trans-unit id="01c46a1d067cb86c80a793fada3c4bf6ccb8375e" translate="yes" xml:space="preserve">
          <source>With the implementation of this trick, our thread pool is in a working state! Give it a &lt;code&gt;cargo run&lt;/code&gt; and make some requests:</source>
          <target state="translated">Con la implementaci&amp;oacute;n de este truco, &amp;iexcl;nuestro grupo de subprocesos est&amp;aacute; funcionando! Dale un &lt;code&gt;cargo run&lt;/code&gt; y haz algunas solicitudes:</target>
        </trans-unit>
        <trans-unit id="24a7fa0675f3c1ff0574c22a8d3081db443c0de4" translate="yes" xml:space="preserve">
          <source>With the notion of an item being either public or private, Rust allows item accesses in two cases:</source>
          <target state="translated">Con la noción de que un artículo es público o privado,Rust permite el acceso al artículo en dos casos:</target>
        </trans-unit>
        <trans-unit id="bc6738ca71c4d0da46b8887fed6bda41f9aa0556" translate="yes" xml:space="preserve">
          <source>With the remaining program logic separated into the &lt;code&gt;run&lt;/code&gt; function, we can improve the error handling, as we did with &lt;code&gt;Config::new&lt;/code&gt; in Listing 12-9. Instead of allowing the program to panic by calling &lt;code&gt;expect&lt;/code&gt;, the &lt;code&gt;run&lt;/code&gt; function will return a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; when something goes wrong. This will let us further consolidate into &lt;code&gt;main&lt;/code&gt; the logic around handling errors in a user-friendly way. Listing 12-12 shows the changes we need to make to the signature and body of &lt;code&gt;run&lt;/code&gt;.</source>
          <target state="translated">Con la l&amp;oacute;gica del programa restante separada en la funci&amp;oacute;n de &lt;code&gt;run&lt;/code&gt; , podemos mejorar el manejo de errores, como hicimos con &lt;code&gt;Config::new&lt;/code&gt; en el Listado 12-9. En lugar de permitir que el programa entre en p&amp;aacute;nico llamando a &lt;code&gt;expect&lt;/code&gt; , la funci&amp;oacute;n de &lt;code&gt;run&lt;/code&gt; devolver&amp;aacute; un &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; cuando algo salga mal. Esto nos permitir&amp;aacute; consolidar a&amp;uacute;n m&amp;aacute;s en la l&amp;oacute;gica &lt;code&gt;main&lt;/code&gt; en torno al manejo de errores de una manera f&amp;aacute;cil de usar. El Listado 12-12 muestra los cambios que debemos realizar en la firma y el cuerpo de la &lt;code&gt;run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34d45efbbc694df1116b7475884bd1d2fd47f1c6" translate="yes" xml:space="preserve">
          <source>With the state pattern, the &lt;code&gt;Post&lt;/code&gt; methods and the places we use &lt;code&gt;Post&lt;/code&gt; don&amp;rsquo;t need &lt;code&gt;match&lt;/code&gt; expressions, and to add a new state, we would only need to add a new struct and implement the trait methods on that one struct.</source>
          <target state="translated">Con el patr&amp;oacute;n de estado, los m&amp;eacute;todos de &lt;code&gt;Post&lt;/code&gt; y los lugares que usamos &lt;code&gt;Post&lt;/code&gt; no necesitan expresiones de &lt;code&gt;match&lt;/code&gt; , y para agregar un nuevo estado, solo necesitar&amp;iacute;amos agregar una nueva estructura e implementar los m&amp;eacute;todos de rasgos en esa estructura.</target>
        </trans-unit>
        <trans-unit id="83ff23e8afd931a2cd544c6885efa1601bab61bb" translate="yes" xml:space="preserve">
          <source>With the text in place, edit &lt;em&gt;src/main.rs&lt;/em&gt; and add code to read the file, as shown in Listing 12-4.</source>
          <target state="translated">Con el texto en su lugar, editar &lt;em&gt; src / main.rs&lt;/em&gt; y agregue c&amp;oacute;digo para leer el archivo, como se muestra en el Listado 12-4.</target>
        </trans-unit>
        <trans-unit id="e0b0d0d55bb8949af2866594443ea68c01592e9d" translate="yes" xml:space="preserve">
          <source>With the two trait bounds specified, the body of &lt;code&gt;notify&lt;/code&gt; can call &lt;code&gt;summarize&lt;/code&gt; and use &lt;code&gt;{}&lt;/code&gt; to format &lt;code&gt;item&lt;/code&gt;.</source>
          <target state="translated">Con los dos l&amp;iacute;mites de rasgos especificados, el cuerpo de la &lt;code&gt;notify&lt;/code&gt; puede llamar a &lt;code&gt;summarize&lt;/code&gt; y usar &lt;code&gt;{}&lt;/code&gt; para dar formato al &lt;code&gt;item&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7deae3df9bc9dd91ed2ed3e73a23c867198988dd" translate="yes" xml:space="preserve">
          <source>With these changes, let&amp;rsquo;s run our code and make a request. We&amp;rsquo;re no longer printing any data to the terminal, so we won&amp;rsquo;t see any output other than the output from Cargo. When you load &lt;em&gt;127.0.0.1:7878&lt;/em&gt; in a web browser, you should get a blank page instead of an error. You&amp;rsquo;ve just hand-coded an HTTP request and response!</source>
          <target state="translated">Con estos cambios, ejecutemos nuestro c&amp;oacute;digo y hagamos una solicitud. Ya no imprimimos ning&amp;uacute;n dato en la terminal, por lo que no veremos ninguna salida que no sea la de Cargo. Cuando cargas&lt;em&gt; 127.0.0.1:7878&lt;/em&gt; en un navegador web, deber&amp;iacute;a obtener una p&amp;aacute;gina en blanco en lugar de un error. &amp;iexcl;Acaba de codificar manualmente una solicitud y respuesta HTTP!</target>
        </trans-unit>
        <trans-unit id="2b8a9662a9a062dbd858ec248c6bcfe6e17a1e8d" translate="yes" xml:space="preserve">
          <source>With these changes, run your server again. Requesting &lt;em&gt;127.0.0.1:7878&lt;/em&gt; should return the contents of &lt;em&gt;hello.html&lt;/em&gt;, and any other request, like &lt;em&gt;127.0.0.1:7878/foo&lt;/em&gt;, should return the error HTML from &lt;em&gt;404.html&lt;/em&gt;.</source>
          <target state="translated">Con estos cambios, vuelva a ejecutar su servidor. Solicitar &lt;em&gt;127.0.0.1:7878&lt;/em&gt; deber&amp;iacute;a devolver el contenido de &lt;em&gt;hello.html&lt;/em&gt; , y cualquier otra solicitud, como &lt;em&gt;127.0.0.1:7878/foo&lt;/em&gt; , deber&amp;iacute;a devolver el HTML de error de&lt;em&gt; 404.html&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a7ea5830e4d89ce20b87325d5feaac7885edd633" translate="yes" xml:space="preserve">
          <source>With these changes, the code compiles! We&amp;rsquo;re getting there!</source>
          <target state="translated">&amp;iexcl;Con estos cambios, el c&amp;oacute;digo se compila! &amp;iexcl;Estamos llegando!</target>
        </trans-unit>
        <trans-unit id="64e9859cf60a37b6fd6185bea427eb35dd3442b4" translate="yes" xml:space="preserve">
          <source>With these changes, the code will compile and continue to function in the same way as it did after Listing 20-20. But we&amp;rsquo;ll get a warning because we aren&amp;rsquo;t creating any messages of the &lt;code&gt;Terminate&lt;/code&gt; variety. Let&amp;rsquo;s fix this warning by changing our &lt;code&gt;Drop&lt;/code&gt; implementation to look like Listing 20-24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fa98175f3edbe33adc271e61ac4777981eaf67" translate="yes" xml:space="preserve">
          <source>With these changes, the code will compile and continue to function in the same way as it did after Listing 20-21. But we&amp;rsquo;ll get a warning because we aren&amp;rsquo;t creating any messages of the &lt;code&gt;Terminate&lt;/code&gt; variety. Let&amp;rsquo;s fix this warning by changing our &lt;code&gt;Drop&lt;/code&gt; implementation to look like Listing 20-25.</source>
          <target state="translated">Con estos cambios, el c&amp;oacute;digo se compilar&amp;aacute; y seguir&amp;aacute; funcionando de la misma manera que lo hizo despu&amp;eacute;s del Listado 20-21. Pero recibiremos una advertencia porque no estamos creando ning&amp;uacute;n mensaje de la variedad &lt;code&gt;Terminate&lt;/code&gt; . Arreglemos esta advertencia cambiando nuestro &lt;code&gt;Drop&lt;/code&gt; implementaci&amp;oacute;n de Drop para que se parezca al Listado 20-25.</target>
        </trans-unit>
        <trans-unit id="86aa3b5dba5f873b63c48b4c86a229ed1fbfd4e1" translate="yes" xml:space="preserve">
          <source>With these extra few lines of code in &lt;code&gt;new&lt;/code&gt;, let&amp;rsquo;s run the program without any arguments again to see what the error looks like now:</source>
          <target state="translated">Con estas pocas l&amp;iacute;neas adicionales de c&amp;oacute;digo en &lt;code&gt;new&lt;/code&gt; , ejecutemos el programa sin argumentos nuevamente para ver c&amp;oacute;mo se ve el error ahora:</target>
        </trans-unit>
        <trans-unit id="96fe782e8597a2f8b432d3a608914c807144f829" translate="yes" xml:space="preserve">
          <source>With this added &lt;code&gt;content&lt;/code&gt; method, everything in Listing 17-11 up to line 7 works as intended.</source>
          <target state="translated">Con este &lt;code&gt;content&lt;/code&gt; agregado m&amp;eacute;todo de , todo en el Listado 17-11 hasta la l&amp;iacute;nea 7 funciona seg&amp;uacute;n lo previsto.</target>
        </trans-unit>
        <trans-unit id="6a69a998d97d76e52647bdd19719b61356e441e9" translate="yes" xml:space="preserve">
          <source>With this approach, x and y share ownership of the data via the &lt;code&gt;Rc&lt;/code&gt; (reference count type). &lt;code&gt;RefCell&lt;/code&gt; essentially performs runtime borrow checking: ensuring that at most one writer or multiple readers can access the data at any one time.</source>
          <target state="translated">Con este enfoque, xey comparten la propiedad de los datos a trav&amp;eacute;s del &lt;code&gt;Rc&lt;/code&gt; (tipo de recuento de referencia). &lt;code&gt;RefCell&lt;/code&gt; esencialmente realiza la verificaci&amp;oacute;n de pr&amp;eacute;stamos en tiempo de ejecuci&amp;oacute;n: asegurando que como m&amp;aacute;ximo un escritor o varios lectores puedan acceder a los datos en cualquier momento.</target>
        </trans-unit>
        <trans-unit id="e0294acc426b53e8eefb85526ce41c8bfef32085" translate="yes" xml:space="preserve">
          <source>With this new knowledge about iterators, we can improve the I/O project in Chapter 12 by using iterators to make places in the code clearer and more concise. Let&amp;rsquo;s look at how iterators can improve our implementation of the &lt;code&gt;Config::new&lt;/code&gt; function and the &lt;code&gt;search&lt;/code&gt; function.</source>
          <target state="translated">Con este nuevo conocimiento sobre iteradores, podemos mejorar el proyecto de E / S en el Cap&amp;iacute;tulo 12 usando iteradores para hacer lugares en el c&amp;oacute;digo m&amp;aacute;s claros y concisos. Veamos c&amp;oacute;mo los iteradores pueden mejorar nuestra implementaci&amp;oacute;n de la funci&amp;oacute;n &lt;code&gt;Config::new&lt;/code&gt; y la funci&amp;oacute;n de &lt;code&gt;search&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2fb8bb90dda22d23945c9584750688009a769c8" translate="yes" xml:space="preserve">
          <source>With this:</source>
          <target state="translated">Con esto:</target>
        </trans-unit>
        <trans-unit id="f92b2fe5b7dcaebe110b80babf1c63cd9fdd43ef" translate="yes" xml:space="preserve">
          <source>With type annotations added, the syntax of closures looks more similar to the syntax of functions. The following is a vertical comparison of the syntax for the definition of a function that adds 1 to its parameter and a closure that has the same behavior. We&amp;rsquo;ve added some spaces to line up the relevant parts. This illustrates how closure syntax is similar to function syntax except for the use of pipes and the amount of syntax that is optional:</source>
          <target state="translated">Con las anotaciones de tipo agregadas, la sintaxis de los cierres se parece m&amp;aacute;s a la sintaxis de las funciones. La siguiente es una comparaci&amp;oacute;n vertical de la sintaxis para la definici&amp;oacute;n de una funci&amp;oacute;n que agrega 1 a su par&amp;aacute;metro y un cierre que tiene el mismo comportamiento. Agregamos algunos espacios para alinear las partes relevantes. Esto ilustra c&amp;oacute;mo la sintaxis de cierre es similar a la sintaxis de funci&amp;oacute;n, excepto por el uso de canalizaciones y la cantidad de sintaxis que es opcional:</target>
        </trans-unit>
        <trans-unit id="e12bdc1ee24b9c9117113f7fd06a681041f0f8ca" translate="yes" xml:space="preserve">
          <source>With values that have many parts, we can use the &lt;code&gt;..&lt;/code&gt; syntax to use only a few parts and ignore the rest, avoiding the need to list underscores for each ignored value. The &lt;code&gt;..&lt;/code&gt; pattern ignores any parts of a value that we haven&amp;rsquo;t explicitly matched in the rest of the pattern. In Listing 18-23, we have a &lt;code&gt;Point&lt;/code&gt; struct that holds a coordinate in three-dimensional space. In the &lt;code&gt;match&lt;/code&gt; expression, we want to operate only on the &lt;code&gt;x&lt;/code&gt; coordinate and ignore the values in the &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; fields.</source>
          <target state="translated">Con valores que tienen muchas partes, podemos usar la sintaxis &lt;code&gt;..&lt;/code&gt; para usar solo unas pocas partes e ignorar el resto, evitando la necesidad de enumerar guiones bajos para cada valor ignorado. El patr&amp;oacute;n &lt;code&gt;..&lt;/code&gt; ignora las partes de un valor que no hemos hecho coincidir expl&amp;iacute;citamente en el resto del patr&amp;oacute;n. En el listado 18-23, tenemos una estructura &lt;code&gt;Point&lt;/code&gt; que contiene una coordenada en un espacio tridimensional. En la expresi&amp;oacute;n de &lt;code&gt;match&lt;/code&gt; , queremos operar solo en la coordenada &lt;code&gt;x&lt;/code&gt; e ignorar los valores en los campos &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3392b1d08169948bc18f560cc78f42601ac7de77" translate="yes" xml:space="preserve">
          <source>Within a type definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bf9a3332dbb1aae191337d7acb72ccf285dc36" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; block, we list the names and signatures of external functions from another language we want to call. The &lt;code&gt;&quot;C&quot;&lt;/code&gt; part defines which &lt;em&gt;application binary interface (ABI)&lt;/em&gt; the external function uses: the ABI defines how to call the function at the assembly level. The &lt;code&gt;&quot;C&quot;&lt;/code&gt; ABI is the most common and follows the C programming language&amp;rsquo;s ABI.</source>
          <target state="translated">Dentro del bloque &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; , enumeramos los nombres y firmas de funciones externas de otro idioma al que queramos llamar. La parte &lt;code&gt;&quot;C&quot;&lt;/code&gt; define qu&amp;eacute; &lt;em&gt;interfaz binaria de aplicaci&amp;oacute;n (ABI)&lt;/em&gt; utiliza la funci&amp;oacute;n externa: la ABI define c&amp;oacute;mo llamar a la funci&amp;oacute;n en el nivel de ensamblaje. La ABI &lt;code&gt;&quot;C&quot;&lt;/code&gt; es la m&amp;aacute;s com&amp;uacute;n y sigue la ABI del lenguaje de programaci&amp;oacute;n C.</target>
        </trans-unit>
        <trans-unit id="a3840b923c5773a4355bfcefff4121f0878713eb" translate="yes" xml:space="preserve">
          <source>Within the body of an item that has type parameter declarations, the names of its type parameters are types:</source>
          <target state="translated">Dentro del cuerpo de un artículo que tiene declaraciones de parámetros de tipo,los nombres de sus parámetros de tipo son tipos:</target>
        </trans-unit>
        <trans-unit id="3507a3f4edcb8828e19d61809f6ad4863c52a9ce" translate="yes" xml:space="preserve">
          <source>Within the defining crate, &lt;code&gt;non_exhaustive&lt;/code&gt; has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cad0f75b24acc004189d1ad1ae2454225184aa" translate="yes" xml:space="preserve">
          <source>Within this documentation's grammar, &quot;simple&quot; tokens are given in &lt;a href=&quot;notation#string-table-productions&quot;&gt;string table production&lt;/a&gt; form, and appear in &lt;code&gt;monospace&lt;/code&gt; font.</source>
          <target state="translated">Dentro de la gram&amp;aacute;tica de esta documentaci&amp;oacute;n, los tokens &quot;simples&quot; se dan en forma de &lt;a href=&quot;notation#string-table-productions&quot;&gt;producci&amp;oacute;n de tabla de cadenas&lt;/a&gt; y aparecen en fuente &lt;code&gt;monospace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f884881293efc9c1f179ad8b3973e698991d41" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;compiler_fence&lt;/code&gt;, the &lt;code&gt;assert_eq!&lt;/code&gt; in following code is &lt;em&gt;not&lt;/em&gt; guaranteed to succeed, despite everything happening in a single thread. To see why, remember that the compiler is free to swap the stores to &lt;code&gt;IMPORTANT_VARIABLE&lt;/code&gt; and &lt;code&gt;IS_READ&lt;/code&gt; since they are both &lt;code&gt;Ordering::Relaxed&lt;/code&gt;. If it does, and the signal handler is invoked right after &lt;code&gt;IS_READY&lt;/code&gt; is updated, then the signal handler will see &lt;code&gt;IS_READY=1&lt;/code&gt;, but &lt;code&gt;IMPORTANT_VARIABLE=0&lt;/code&gt;. Using a &lt;code&gt;compiler_fence&lt;/code&gt; remedies this situation.</source>
          <target state="translated">Sin &lt;code&gt;compiler_fence&lt;/code&gt; , el valor de &lt;code&gt;assert_eq!&lt;/code&gt; en el siguiente c&amp;oacute;digo &lt;em&gt;no se&lt;/em&gt; garantiza que tenga &amp;eacute;xito, a pesar de que todo sucede en un solo hilo. Para ver por qu&amp;eacute;, recuerde que el compilador es libre de intercambiar las tiendas a &lt;code&gt;IMPORTANT_VARIABLE&lt;/code&gt; e &lt;code&gt;IS_READ&lt;/code&gt; ya que ambos son &lt;code&gt;Ordering::Relaxed&lt;/code&gt; . Si lo hace, y el manejador de se&amp;ntilde;ales se invoca justo despu&amp;eacute;s de que se actualice &lt;code&gt;IS_READY&lt;/code&gt; , entonces el manejador de se&amp;ntilde;ales ver&amp;aacute; &lt;code&gt;IS_READY=1&lt;/code&gt; , pero &lt;code&gt;IMPORTANT_VARIABLE=0&lt;/code&gt; . El uso de &lt;code&gt;compiler_fence&lt;/code&gt; soluciona esta situaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6823be3ffd83b17bd9d63c393e81d5a41ffc52cc" translate="yes" xml:space="preserve">
          <source>Without a loop to break out of or continue in, no sensible action can be taken. Please verify that you are using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; only in loops. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2efdc6add8e970dc1865be96d1f867d6e1b60c" translate="yes" xml:space="preserve">
          <source>Without a pathname:</source>
          <target state="translated">Sin un nombre:</target>
        </trans-unit>
        <trans-unit id="90c928ad5c0a871061baee534c7a9a3eec8a4645" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;Deref&lt;/code&gt; trait, the compiler can only dereference &lt;code&gt;&amp;amp;&lt;/code&gt; references. The &lt;code&gt;deref&lt;/code&gt; method gives the compiler the ability to take a value of any type that implements &lt;code&gt;Deref&lt;/code&gt; and call the &lt;code&gt;deref&lt;/code&gt; method to get a &lt;code&gt;&amp;amp;&lt;/code&gt; reference that it knows how to dereference.</source>
          <target state="translated">Sin el rasgo &lt;code&gt;Deref&lt;/code&gt; , el compilador solo puede desreferenciar &lt;code&gt;&amp;amp;&lt;/code&gt; referencias. El m&amp;eacute;todo &lt;code&gt;deref&lt;/code&gt; le da al compilador la capacidad de tomar un valor de cualquier tipo que implemente &lt;code&gt;Deref&lt;/code&gt; y llamar al m&amp;eacute;todo &lt;code&gt;deref&lt;/code&gt; para obtener una referencia &lt;code&gt;&amp;amp;&lt;/code&gt; que sabe c&amp;oacute;mo desreferenciar.</target>
        </trans-unit>
        <trans-unit id="87160e17882870214c0775aca97bd35e735c34ab" translate="yes" xml:space="preserve">
          <source>Working with Environment Variables</source>
          <target state="translated">Trabajando con Variables del Medio Ambiente</target>
        </trans-unit>
        <trans-unit id="90e474d6c66232279cbf06723c1f38f471687b09" translate="yes" xml:space="preserve">
          <source>Working with raw pointers in Rust is uncommon, typically limited to a few patterns.</source>
          <target state="translated">Trabajar con punteros crudos en el óxido es poco común,típicamente limitado a unos pocos patrones.</target>
        </trans-unit>
        <trans-unit id="9a40e384f7f263637185bd19da70cd3d69e259e7" translate="yes" xml:space="preserve">
          <source>Working with raw pointers in Rust is uncommon, typically limited to a few patterns. Raw pointers can be unaligned or &lt;a href=&quot;ptr/fn.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. However, when a raw pointer is dereferenced (using the &lt;code&gt;*&lt;/code&gt; operator), it must be non-null and aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727515b132b28daa88eb87eebc62a62072364288" translate="yes" xml:space="preserve">
          <source>Wow, that error message is very wordy! Here are some important parts to focus on: the first inline error says &lt;code&gt;`std::rc::Rc&amp;lt;std::sync::Mutex&amp;lt;i32&amp;gt;&amp;gt;` cannot be sent between threads safely&lt;/code&gt;. The reason for this is in the next important part to focus on, the error message. The distilled error message says &lt;code&gt;the trait bound `Send` is not satisfied&lt;/code&gt;. We&amp;rsquo;ll talk about &lt;code&gt;Send&lt;/code&gt; in the next section: it&amp;rsquo;s one of the traits that ensures the types we use with threads are meant for use in concurrent situations.</source>
          <target state="translated">&amp;iexcl;Vaya, ese mensaje de error es muy extenso! Aqu&amp;iacute; hay algunas partes importantes en las que centrarse: el primer error en l&amp;iacute;nea dice que &lt;code&gt;`std::rc::Rc&amp;lt;std::sync::Mutex&amp;lt;i32&amp;gt;&amp;gt;` cannot be sent between threads safely&lt;/code&gt; . La raz&amp;oacute;n de esto est&amp;aacute; en la siguiente parte importante en la que centrarse, el mensaje de error. El mensaje de error destilado dice que &lt;code&gt;the trait bound `Send` is not satisfied&lt;/code&gt; . Hablaremos de &lt;code&gt;Send&lt;/code&gt; en la siguiente secci&amp;oacute;n: es una de las caracter&amp;iacute;sticas que asegura que los tipos que usamos con subprocesos est&amp;aacute;n dise&amp;ntilde;ados para usarse en situaciones concurrentes.</target>
        </trans-unit>
        <trans-unit id="71aebd97d81f1f2a97e5f18bfd8c471204fa376d" translate="yes" xml:space="preserve">
          <source>Wow, that error message is very wordy! Here&amp;rsquo;s the important part to focus on: &lt;code&gt;`Rc&amp;lt;Mutex&amp;lt;i32&amp;gt;&amp;gt;` cannot be sent between threads safely&lt;/code&gt;. The compiler is also telling us the reason why: &lt;code&gt;the trait `Send` is not implemented for `Rc&amp;lt;Mutex&amp;lt;i32&amp;gt;&amp;gt;` &lt;/code&gt;. We&amp;rsquo;ll talk about &lt;code&gt;Send&lt;/code&gt; in the next section: it&amp;rsquo;s one of the traits that ensures the types we use with threads are meant for use in concurrent situations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130acb06cdbaff87c403e521823abb94f422c9e0" translate="yes" xml:space="preserve">
          <source>Wrap a value to be manually dropped.</source>
          <target state="translated">Envuelve un valor para ser lanzado manualmente.</target>
        </trans-unit>
        <trans-unit id="744e431b88ea1a0035f05b8fb26571f5315f1927" translate="yes" xml:space="preserve">
          <source>Wrap an OK value to construct the composite result. For example, &lt;code&gt;Result::Ok(x)&lt;/code&gt; and &lt;code&gt;Result::from_ok(x)&lt;/code&gt; are equivalent.</source>
          <target state="translated">Envuelva un valor OK para construir el resultado compuesto. Por ejemplo, &lt;code&gt;Result::Ok(x)&lt;/code&gt; y &lt;code&gt;Result::from_ok(x)&lt;/code&gt; son equivalentes.</target>
        </trans-unit>
        <trans-unit id="a120e7e89eaa3b758fd2407bf284e593ba7d4ab0" translate="yes" xml:space="preserve">
          <source>Wrap an OK value to construct the composite result. For example, &lt;code&gt;Result::Ok(x)&lt;/code&gt; and &lt;code&gt;Result::from_ok(x)&lt;/code&gt; are equivalent. &lt;a href=&quot;../ops/trait.try#tymethod.from_ok&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Envuelva un valor OK para construir el resultado compuesto. Por ejemplo, &lt;code&gt;Result::Ok(x)&lt;/code&gt; y &lt;code&gt;Result::from_ok(x)&lt;/code&gt; son equivalentes. &lt;a href=&quot;../ops/trait.try#tymethod.from_ok&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ba39a168910f0f4c9c0f953e5989879aa499399" translate="yes" xml:space="preserve">
          <source>Wrap an OK value to construct the composite result. For example, &lt;code&gt;Result::Ok(x)&lt;/code&gt; and &lt;code&gt;Result::from_ok(x)&lt;/code&gt; are equivalent. &lt;a href=&quot;trait.try#tymethod.from_ok&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8c3f0758b57991ee8d44e4f6a9dc360915c844" translate="yes" xml:space="preserve">
          <source>Wrap an error value to construct the composite result. For example, &lt;code&gt;Result::Err(x)&lt;/code&gt; and &lt;code&gt;Result::from_error(x)&lt;/code&gt; are equivalent.</source>
          <target state="translated">Envuelva un valor de error para construir el resultado compuesto. Por ejemplo, &lt;code&gt;Result::Err(x)&lt;/code&gt; y &lt;code&gt;Result::from_error(x)&lt;/code&gt; son equivalentes.</target>
        </trans-unit>
        <trans-unit id="b038d6e7a645f366cbf4e437083304bafb6bb808" translate="yes" xml:space="preserve">
          <source>Wrap an error value to construct the composite result. For example, &lt;code&gt;Result::Err(x)&lt;/code&gt; and &lt;code&gt;Result::from_error(x)&lt;/code&gt; are equivalent. &lt;a href=&quot;../ops/trait.try#tymethod.from_error&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Envuelva un valor de error para construir el resultado compuesto. Por ejemplo, &lt;code&gt;Result::Err(x)&lt;/code&gt; y &lt;code&gt;Result::from_error(x)&lt;/code&gt; son equivalentes. &lt;a href=&quot;../ops/trait.try#tymethod.from_error&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="350a348893132c0e8f86200072eaac4fe18f553d" translate="yes" xml:space="preserve">
          <source>Wrap an error value to construct the composite result. For example, &lt;code&gt;Result::Err(x)&lt;/code&gt; and &lt;code&gt;Result::from_error(x)&lt;/code&gt; are equivalent. &lt;a href=&quot;trait.try#tymethod.from_error&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6051f4a5bce51fdfc51f618f46a1af4c6e6233e" translate="yes" xml:space="preserve">
          <source>Wrap in all modes with the &lt;code&gt;wrapping_*&lt;/code&gt; methods, such as &lt;code&gt;wrapping_add&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef840afcddbb0c72a9932bf338567231c320f6c4" translate="yes" xml:space="preserve">
          <source>Wrapping</source>
          <target state="translated">Wrapping</target>
        </trans-unit>
        <trans-unit id="743cdade02c9bf9e30517f2de055980f9f8a86fb" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) absolute value. Computes &lt;code&gt;self.abs()&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Valor absoluto envolvente (modular). Calcula &lt;code&gt;self.abs()&lt;/code&gt; , rodeando el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="f4efecec7c636af1ead7e0409272bc8b700c5382" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Adici&amp;oacute;n de envoltura (modular). Calcula &lt;code&gt;self + rhs&lt;/code&gt; , envolviendo en el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="8112829180296558677473f537db1e33a076f93c" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) division. Computes &lt;code&gt;self / rhs&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Divisi&amp;oacute;n de envoltura (modular). Calcula &lt;code&gt;self / rhs&lt;/code&gt; , envolviendo en el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="3f6391833e153cf10bdb32314ca04ce9ce43dbdd" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) division. Computes &lt;code&gt;self / rhs&lt;/code&gt;. Wrapped division on unsigned types is just normal division. There's no way wrapping could ever happen. This function exists, so that all operations are accounted for in the wrapping operations.</source>
          <target state="translated">Divisi&amp;oacute;n de envoltura (modular). Calcula &lt;code&gt;self / rhs&lt;/code&gt; . La divisi&amp;oacute;n envuelta en tipos sin firmar es simplemente una divisi&amp;oacute;n normal. No hay forma de que se pueda envolver. Esta funci&amp;oacute;n existe, por lo que todas las operaciones se contabilizan en las operaciones de envoltura.</target>
        </trans-unit>
        <trans-unit id="d6bb89dd7e6026b10f235fa3863c6339f2fb774c" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) exponentiation. Computes &lt;code&gt;self.pow(exp)&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Exponenciaci&amp;oacute;n envolvente (modular). Calcula &lt;code&gt;self.pow(exp)&lt;/code&gt; , envolviendo el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="e6b77bd3d8c54b47f23891885173c42858312a14" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Envoltura de multiplicaci&amp;oacute;n (modular). Calcula &lt;code&gt;self * rhs&lt;/code&gt; , envolviendo en el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="2ad719d382b4d16912e1a91a3a59d2c050db5a30" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) negation. Computes &lt;code&gt;-self&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Envoltura de negaci&amp;oacute;n (modular). Calcula &lt;code&gt;-self&lt;/code&gt; , envolviendo el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="88feadfab016809fcd2984cfd9226aba00462cae" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) remainder. Computes &lt;code&gt;self % rhs&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Envoltura (modular) resto. Calcula los &lt;code&gt;self % rhs&lt;/code&gt; , envolviendo en el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="bab7a7fcc721ce6448649830e7166d7008062fd3" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) remainder. Computes &lt;code&gt;self % rhs&lt;/code&gt;. Wrapped remainder calculation on unsigned types is just the regular remainder calculation. There's no way wrapping could ever happen. This function exists, so that all operations are accounted for in the wrapping operations.</source>
          <target state="translated">Envoltura (modular) resto. Calcula los &lt;code&gt;self % rhs&lt;/code&gt; . El c&amp;aacute;lculo del resto envuelto en tipos sin firmar es solo el c&amp;aacute;lculo del resto normal. No hay forma de que se pueda envolver. Esta funci&amp;oacute;n existe, por lo que todas las operaciones se contabilizan en las operaciones de envoltura.</target>
        </trans-unit>
        <trans-unit id="0547792119ca778e4ded115060f8e8198122f4ee" translate="yes" xml:space="preserve">
          <source>Wrapping (modular) subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Resta envolvente (modular). Calcula &lt;code&gt;self - rhs&lt;/code&gt; , envolviendo en el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="9c70c48db93cbf30305f6f367392a85a748eb0d9" translate="yes" xml:space="preserve">
          <source>Wrapping Euclidean division. Computes &lt;code&gt;self.div_euclid(rhs)&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Envolviendo la divisi&amp;oacute;n euclidiana. Calcula &lt;code&gt;self.div_euclid(rhs)&lt;/code&gt; , envolviendo en el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="0c397d89ed28af23471d1300df82f2628a5cc9eb" translate="yes" xml:space="preserve">
          <source>Wrapping Euclidean division. Computes &lt;code&gt;self.div_euclid(rhs)&lt;/code&gt;. Wrapped division on unsigned types is just normal division. There's no way wrapping could ever happen. This function exists, so that all operations are accounted for in the wrapping operations. Since, for the positive integers, all common definitions of division are equal, this is exactly equal to &lt;code&gt;self.wrapping_div(rhs)&lt;/code&gt;.</source>
          <target state="translated">Envolviendo la divisi&amp;oacute;n euclidiana. Calcula &lt;code&gt;self.div_euclid(rhs)&lt;/code&gt; . La divisi&amp;oacute;n envuelta en tipos sin firmar es simplemente una divisi&amp;oacute;n normal. No hay forma de que se pueda envolver. Esta funci&amp;oacute;n existe, por lo que todas las operaciones se contabilizan en las operaciones de envoltura. Dado que, para los enteros positivos, todas las definiciones comunes de divisi&amp;oacute;n son iguales, esto es exactamente igual a &lt;code&gt;self.wrapping_div(rhs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1a6d61ea92522854260430b74b8667bece5c095" translate="yes" xml:space="preserve">
          <source>Wrapping Euclidean modulo. Computes &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt;. Wrapped modulo calculation on unsigned types is just the regular remainder calculation. There's no way wrapping could ever happen. This function exists, so that all operations are accounted for in the wrapping operations. Since, for the positive integers, all common definitions of division are equal, this is exactly equal to &lt;code&gt;self.wrapping_rem(rhs)&lt;/code&gt;.</source>
          <target state="translated">Envolviendo el m&amp;oacute;dulo euclidiano. Calcula &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt; . El c&amp;aacute;lculo de m&amp;oacute;dulo envuelto en tipos sin firmar es solo el c&amp;aacute;lculo de resto normal. No hay forma de que se pueda envolver. Esta funci&amp;oacute;n existe, por lo que todas las operaciones se contabilizan en las operaciones de envoltura. Dado que, para los enteros positivos, todas las definiciones comunes de divisi&amp;oacute;n son iguales, esto es exactamente igual a &lt;code&gt;self.wrapping_rem(rhs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72c3f54557cafd34a10c40361aa84b7aedc96050" translate="yes" xml:space="preserve">
          <source>Wrapping Euclidean remainder. Computes &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt;, wrapping around at the boundary of the type.</source>
          <target state="translated">Envolviendo el resto euclidiano. Calcula &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt; , envolviendo el l&amp;iacute;mite del tipo.</target>
        </trans-unit>
        <trans-unit id="c113027998f084fc650feeb5a7a7db8e8206e9c9" translate="yes" xml:space="preserve">
          <source>Wrapping arithmetic can be achieved either through methods like &lt;code&gt;wrapping_add&lt;/code&gt;, or through the &lt;code&gt;Wrapping&amp;lt;T&amp;gt;&lt;/code&gt; type, which says that all standard arithmetic operations on the underlying value are intended to have wrapping semantics.</source>
          <target state="translated">La aritm&amp;eacute;tica de envoltura se puede lograr a trav&amp;eacute;s de m&amp;eacute;todos como &lt;code&gt;wrapping_add&lt;/code&gt; , o mediante el tipo &lt;code&gt;Wrapping&amp;lt;T&amp;gt;&lt;/code&gt; , que dice que todas las operaciones aritm&amp;eacute;ticas est&amp;aacute;ndar en el valor subyacente deben tener sem&amp;aacute;ntica de envoltura.</target>
        </trans-unit>
        <trans-unit id="67accd5f5a259bdba5036a1931f5ae6a264b08ff" translate="yes" xml:space="preserve">
          <source>Wrapping the entire closure amounts to a blanket assertion that all captured variables are unwind safe. This has the downside that if new captures are added in the future, they will also be considered unwind safe. Therefore, you may prefer to just wrap individual captures, as shown below. This is more annotation, but it ensures that if a new capture is added which is not unwind safe, you will get a compilation error at that time, which will allow you to consider whether that new capture in fact represent a bug or not.</source>
          <target state="translated">Envolver todo el cierre equivale a una afirmación general de que todas las variables capturadas están a salvo.Esto tiene la desventaja de que si se añaden nuevas capturas en el futuro,también se considerarán seguras.Por lo tanto,puede que prefiera envolver sólo las capturas individuales,como se muestra a continuación.Esto es más una anotación,pero asegura que si se agrega una nueva captura que no es segura de desenrollar,obtendrá un error de compilación en ese momento,lo que le permitirá considerar si esa nueva captura representa de hecho un error o no.</target>
        </trans-unit>
        <trans-unit id="3012f027dfde83895278c2a37775ef7453b5a48e" translate="yes" xml:space="preserve">
          <source>Wrapping will only occur in &lt;code&gt;MIN % -1&lt;/code&gt; on a signed type (where &lt;code&gt;MIN&lt;/code&gt; is the negative minimal value for the type). In this case, this method returns 0.</source>
          <target state="translated">El ajuste solo ocurrir&amp;aacute; en &lt;code&gt;MIN % -1&lt;/code&gt; en un tipo con signo (donde &lt;code&gt;MIN&lt;/code&gt; es el valor m&amp;iacute;nimo negativo para el tipo). En este caso, este m&amp;eacute;todo devuelve 0.</target>
        </trans-unit>
        <trans-unit id="5d2a82c1ae568c2138fb6d4aab53c9ab79d15385" translate="yes" xml:space="preserve">
          <source>Wrapping will only occur in &lt;code&gt;MIN / -1&lt;/code&gt; on a signed type (where &lt;code&gt;MIN&lt;/code&gt; is the negative minimal value for the type). This is equivalent to &lt;code&gt;-MIN&lt;/code&gt;, a positive value that is too large to represent in the type. In this case, this method returns &lt;code&gt;MIN&lt;/code&gt; itself.</source>
          <target state="translated">El ajuste solo ocurrir&amp;aacute; en &lt;code&gt;MIN / -1&lt;/code&gt; en un tipo con signo (donde &lt;code&gt;MIN&lt;/code&gt; es el valor m&amp;iacute;nimo negativo para el tipo). Esto es equivalente a &lt;code&gt;-MIN&lt;/code&gt; , un valor positivo que es demasiado grande para representarlo en el tipo. En este caso, este m&amp;eacute;todo devuelve &lt;code&gt;MIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44bf3ad335738a5732c68d1f5196155da8fafc7b" translate="yes" xml:space="preserve">
          <source>Wrapping::abs</source>
          <target state="translated">Wrapping::abs</target>
        </trans-unit>
        <trans-unit id="fc3cfb30e84b8ebe6925ae0fbbf5f0d863e96948" translate="yes" xml:space="preserve">
          <source>Wrapping::add</source>
          <target state="translated">Wrapping::add</target>
        </trans-unit>
        <trans-unit id="e4708fa03c855319c8e70d77b4d353eb63d863a1" translate="yes" xml:space="preserve">
          <source>Wrapping::add_assign</source>
          <target state="translated">Wrapping::add_assign</target>
        </trans-unit>
        <trans-unit id="6227b7b51ca5d41b66a8bd3e6ec7e706422dcd02" translate="yes" xml:space="preserve">
          <source>Wrapping::bitand</source>
          <target state="translated">Wrapping::bitand</target>
        </trans-unit>
        <trans-unit id="50986c3cc68dd80bb41b112f5357a4b5cb0ac2fc" translate="yes" xml:space="preserve">
          <source>Wrapping::bitand_assign</source>
          <target state="translated">Wrapping::bitand_assign</target>
        </trans-unit>
        <trans-unit id="b7da20cfd17d521397a2d0c4d7318400486ff1e3" translate="yes" xml:space="preserve">
          <source>Wrapping::bitor</source>
          <target state="translated">Wrapping::bitor</target>
        </trans-unit>
        <trans-unit id="b1f50a490018b194e6eb7c8804a9e9492ca0ae9b" translate="yes" xml:space="preserve">
          <source>Wrapping::bitor_assign</source>
          <target state="translated">Wrapping::bitor_assign</target>
        </trans-unit>
        <trans-unit id="fd32619eaf11a02453eca2921b2682dcb9909981" translate="yes" xml:space="preserve">
          <source>Wrapping::bitxor</source>
          <target state="translated">Wrapping::bitxor</target>
        </trans-unit>
        <trans-unit id="4ee45c7807828640fae4c2e2cbbd932b27eab127" translate="yes" xml:space="preserve">
          <source>Wrapping::bitxor_assign</source>
          <target state="translated">Wrapping::bitxor_assign</target>
        </trans-unit>
        <trans-unit id="453a622aaaf4b4b2bd85589c0f8774be95ac4938" translate="yes" xml:space="preserve">
          <source>Wrapping::borrow</source>
          <target state="translated">Wrapping::borrow</target>
        </trans-unit>
        <trans-unit id="7842f835a5fa6d18893907fa71602942c78be04d" translate="yes" xml:space="preserve">
          <source>Wrapping::borrow_mut</source>
          <target state="translated">Wrapping::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4251a19204a74bbc8ead142e79f328751693afa6" translate="yes" xml:space="preserve">
          <source>Wrapping::clamp</source>
          <target state="translated">Wrapping::clamp</target>
        </trans-unit>
        <trans-unit id="cf1afade198e332fd9d6aa7668a3bb32f2401d0b" translate="yes" xml:space="preserve">
          <source>Wrapping::clone</source>
          <target state="translated">Wrapping::clone</target>
        </trans-unit>
        <trans-unit id="54ff9aff38c7f4f514610503b3e487387eb07e58" translate="yes" xml:space="preserve">
          <source>Wrapping::clone_from</source>
          <target state="translated">Wrapping::clone_from</target>
        </trans-unit>
        <trans-unit id="f68c352e73999ff6e48da1e988a3a084b81becdc" translate="yes" xml:space="preserve">
          <source>Wrapping::clone_into</source>
          <target state="translated">Wrapping::clone_into</target>
        </trans-unit>
        <trans-unit id="32813d8440ead76b1def56d4e5d7fd137f1714b5" translate="yes" xml:space="preserve">
          <source>Wrapping::cmp</source>
          <target state="translated">Wrapping::cmp</target>
        </trans-unit>
        <trans-unit id="4fecc3db0f0b1e9deb5da5a1f039d7c88813a6bc" translate="yes" xml:space="preserve">
          <source>Wrapping::count_ones</source>
          <target state="translated">Wrapping::count_ones</target>
        </trans-unit>
        <trans-unit id="0707d6a5c3931efbf437f387bfdbb1a8025b4865" translate="yes" xml:space="preserve">
          <source>Wrapping::count_zeros</source>
          <target state="translated">Wrapping::count_zeros</target>
        </trans-unit>
        <trans-unit id="a236a50222c3eb097eb11ec3a8bd688ac72247f5" translate="yes" xml:space="preserve">
          <source>Wrapping::default</source>
          <target state="translated">Wrapping::default</target>
        </trans-unit>
        <trans-unit id="7606cc1196464916bcf7fa22b931dbc498ed2d35" translate="yes" xml:space="preserve">
          <source>Wrapping::div</source>
          <target state="translated">Wrapping::div</target>
        </trans-unit>
        <trans-unit id="b2ae04a0a7ac3514cff2c427720f641e1e13a105" translate="yes" xml:space="preserve">
          <source>Wrapping::div_assign</source>
          <target state="translated">Wrapping::div_assign</target>
        </trans-unit>
        <trans-unit id="818aac7baf3ade93847ccd4565c9412270bfd765" translate="yes" xml:space="preserve">
          <source>Wrapping::eq</source>
          <target state="translated">Wrapping::eq</target>
        </trans-unit>
        <trans-unit id="edf1a00ab01443e1c22b37d5320b28146f8fae8f" translate="yes" xml:space="preserve">
          <source>Wrapping::fmt</source>
          <target state="translated">Wrapping::fmt</target>
        </trans-unit>
        <trans-unit id="da29af44683c629d1953591b5af876af1284f165" translate="yes" xml:space="preserve">
          <source>Wrapping::from</source>
          <target state="translated">Wrapping::from</target>
        </trans-unit>
        <trans-unit id="bb4414a5497b8f006614444c61fdfbf7e351c1e1" translate="yes" xml:space="preserve">
          <source>Wrapping::from_be</source>
          <target state="translated">Wrapping::from_be</target>
        </trans-unit>
        <trans-unit id="8327aab74dc84b766db6b768bb5f0b4fbae51d60" translate="yes" xml:space="preserve">
          <source>Wrapping::from_le</source>
          <target state="translated">Wrapping::from_le</target>
        </trans-unit>
        <trans-unit id="2e5b33409882b1e267e6cfbfc31a1f3c8c97affd" translate="yes" xml:space="preserve">
          <source>Wrapping::ge</source>
          <target state="translated">Wrapping::ge</target>
        </trans-unit>
        <trans-unit id="763baba99ef1af7752d4c399fd9e4f56ca95cae4" translate="yes" xml:space="preserve">
          <source>Wrapping::gt</source>
          <target state="translated">Wrapping::gt</target>
        </trans-unit>
        <trans-unit id="7f52b5e60bdf5a8b75a6f1bee019e4223125b7ea" translate="yes" xml:space="preserve">
          <source>Wrapping::hash</source>
          <target state="translated">Wrapping::hash</target>
        </trans-unit>
        <trans-unit id="439b5d8bd3660d315ca5a58573799ca1f8b650bd" translate="yes" xml:space="preserve">
          <source>Wrapping::hash_slice</source>
          <target state="translated">Wrapping::hash_slice</target>
        </trans-unit>
        <trans-unit id="e6b9c5af34e5d2c6b6aa7479d3ac5762be077d3b" translate="yes" xml:space="preserve">
          <source>Wrapping::into</source>
          <target state="translated">Wrapping::into</target>
        </trans-unit>
        <trans-unit id="8f7f5f2dd4156c437b4278d979eb99568352829c" translate="yes" xml:space="preserve">
          <source>Wrapping::is_negative</source>
          <target state="translated">Wrapping::is_negative</target>
        </trans-unit>
        <trans-unit id="981b618861d8b57a9acf7fd2996a6466724aea1b" translate="yes" xml:space="preserve">
          <source>Wrapping::is_positive</source>
          <target state="translated">Wrapping::is_positive</target>
        </trans-unit>
        <trans-unit id="3e0d9c814180240ed5988fdbca65c34038e05ba2" translate="yes" xml:space="preserve">
          <source>Wrapping::is_power_of_two</source>
          <target state="translated">Wrapping::is_power_of_two</target>
        </trans-unit>
        <trans-unit id="7eee9ab399dbfec97ad14d12d84dd02ef4c06ce3" translate="yes" xml:space="preserve">
          <source>Wrapping::le</source>
          <target state="translated">Wrapping::le</target>
        </trans-unit>
        <trans-unit id="e5ed947e23bd18f2e1dec6dc53205a1c2b9565b1" translate="yes" xml:space="preserve">
          <source>Wrapping::leading_zeros</source>
          <target state="translated">Wrapping::leading_zeros</target>
        </trans-unit>
        <trans-unit id="863ef48643c8bc709efcb07670e6f74b1ce8d7db" translate="yes" xml:space="preserve">
          <source>Wrapping::lt</source>
          <target state="translated">Wrapping::lt</target>
        </trans-unit>
        <trans-unit id="f8c4ed77b17c6dd866e77c6844acb16e3570ccb0" translate="yes" xml:space="preserve">
          <source>Wrapping::max</source>
          <target state="translated">Wrapping::max</target>
        </trans-unit>
        <trans-unit id="b8977c5e6f634623ea3525b2d454af899f6eb091" translate="yes" xml:space="preserve">
          <source>Wrapping::max_value</source>
          <target state="translated">Wrapping::max_value</target>
        </trans-unit>
        <trans-unit id="0450be54fef79761132d1aef7686c837c2fb7d59" translate="yes" xml:space="preserve">
          <source>Wrapping::min</source>
          <target state="translated">Wrapping::min</target>
        </trans-unit>
        <trans-unit id="8e1254c79d384f9bb2963a56f9a7834418921b24" translate="yes" xml:space="preserve">
          <source>Wrapping::min_value</source>
          <target state="translated">Wrapping::min_value</target>
        </trans-unit>
        <trans-unit id="3dbf2ab4711da3ee943c8515466f305c3d067dd6" translate="yes" xml:space="preserve">
          <source>Wrapping::mul</source>
          <target state="translated">Wrapping::mul</target>
        </trans-unit>
        <trans-unit id="193429091dcbc7d316a04f0dc154b88272a65f08" translate="yes" xml:space="preserve">
          <source>Wrapping::mul_assign</source>
          <target state="translated">Wrapping::mul_assign</target>
        </trans-unit>
        <trans-unit id="0210502668266ded14b09843d193035a2b624a28" translate="yes" xml:space="preserve">
          <source>Wrapping::ne</source>
          <target state="translated">Wrapping::ne</target>
        </trans-unit>
        <trans-unit id="d08218c355fb4c595823228061d8f6285a384c7e" translate="yes" xml:space="preserve">
          <source>Wrapping::neg</source>
          <target state="translated">Wrapping::neg</target>
        </trans-unit>
        <trans-unit id="b68d44f8dc9b7bccaa5f89c2580778d3f5c481ca" translate="yes" xml:space="preserve">
          <source>Wrapping::next_power_of_two</source>
          <target state="translated">Wrapping::next_power_of_two</target>
        </trans-unit>
        <trans-unit id="dc08d2689104cf14575e073facb8aec83dc9a31a" translate="yes" xml:space="preserve">
          <source>Wrapping::not</source>
          <target state="translated">Wrapping::not</target>
        </trans-unit>
        <trans-unit id="e5d2695179201fbe97915617ae577e6a74b5df38" translate="yes" xml:space="preserve">
          <source>Wrapping::partial_cmp</source>
          <target state="translated">Wrapping::partial_cmp</target>
        </trans-unit>
        <trans-unit id="7fdaf45498033a636d7d91789f724fabd68edb8d" translate="yes" xml:space="preserve">
          <source>Wrapping::pow</source>
          <target state="translated">Wrapping::pow</target>
        </trans-unit>
        <trans-unit id="df24d6f31eef97d8356983a2855db9da91e53388" translate="yes" xml:space="preserve">
          <source>Wrapping::product</source>
          <target state="translated">Wrapping::product</target>
        </trans-unit>
        <trans-unit id="a8d7bbb8b06894e60316bfa8896f3a9ac47a6d64" translate="yes" xml:space="preserve">
          <source>Wrapping::rem</source>
          <target state="translated">Wrapping::rem</target>
        </trans-unit>
        <trans-unit id="da3a26e48c553a9ebd7ad42e38d4c13f4cbb4bde" translate="yes" xml:space="preserve">
          <source>Wrapping::rem_assign</source>
          <target state="translated">Wrapping::rem_assign</target>
        </trans-unit>
        <trans-unit id="307c0e40471bf0ca34f880f97766b03909622b22" translate="yes" xml:space="preserve">
          <source>Wrapping::reverse_bits</source>
          <target state="translated">Wrapping::reverse_bits</target>
        </trans-unit>
        <trans-unit id="133f98b61cd2fc743ea3ab9ab7d24b004d38769b" translate="yes" xml:space="preserve">
          <source>Wrapping::rotate_left</source>
          <target state="translated">Wrapping::rotate_left</target>
        </trans-unit>
        <trans-unit id="3ce34aaff81a8cb1b00504a6d7ba0307a0954a44" translate="yes" xml:space="preserve">
          <source>Wrapping::rotate_right</source>
          <target state="translated">Wrapping::rotate_right</target>
        </trans-unit>
        <trans-unit id="6fea873396e78fa80dc5b81a4b24f5731984d1b4" translate="yes" xml:space="preserve">
          <source>Wrapping::shl</source>
          <target state="translated">Wrapping::shl</target>
        </trans-unit>
        <trans-unit id="9edfd053f58c6dc953850af5f23fe9791136e673" translate="yes" xml:space="preserve">
          <source>Wrapping::shl_assign</source>
          <target state="translated">Wrapping::shl_assign</target>
        </trans-unit>
        <trans-unit id="727c36c7aba1df8a46aafc2245377be316466083" translate="yes" xml:space="preserve">
          <source>Wrapping::shr</source>
          <target state="translated">Wrapping::shr</target>
        </trans-unit>
        <trans-unit id="a459ea5ad750d76affd0bb2928733c2196d44926" translate="yes" xml:space="preserve">
          <source>Wrapping::shr_assign</source>
          <target state="translated">Wrapping::shr_assign</target>
        </trans-unit>
        <trans-unit id="f5b4f5594c248eaa052551544a5613e890f44805" translate="yes" xml:space="preserve">
          <source>Wrapping::signum</source>
          <target state="translated">Wrapping::signum</target>
        </trans-unit>
        <trans-unit id="5421f7a3c097f4803cab58bff1cb7ebfbe6a61cd" translate="yes" xml:space="preserve">
          <source>Wrapping::sub</source>
          <target state="translated">Wrapping::sub</target>
        </trans-unit>
        <trans-unit id="fe50fe98bf767916368abf1c925e7ac3e037c08c" translate="yes" xml:space="preserve">
          <source>Wrapping::sub_assign</source>
          <target state="translated">Wrapping::sub_assign</target>
        </trans-unit>
        <trans-unit id="f72d77e1d30187c514a849ed36c97ad216978037" translate="yes" xml:space="preserve">
          <source>Wrapping::sum</source>
          <target state="translated">Wrapping::sum</target>
        </trans-unit>
        <trans-unit id="3886fc89ccb5cf7ab1ce69c7013954aa90ca533e" translate="yes" xml:space="preserve">
          <source>Wrapping::swap_bytes</source>
          <target state="translated">Wrapping::swap_bytes</target>
        </trans-unit>
        <trans-unit id="bd4ae9e508fe128f587726b34b639594de73a5f6" translate="yes" xml:space="preserve">
          <source>Wrapping::to_be</source>
          <target state="translated">Wrapping::to_be</target>
        </trans-unit>
        <trans-unit id="7885b2e75fcb436776b4e307af4f9e623074994c" translate="yes" xml:space="preserve">
          <source>Wrapping::to_le</source>
          <target state="translated">Wrapping::to_le</target>
        </trans-unit>
        <trans-unit id="28db626412c7da571e95eec9a8ad5fa799e67614" translate="yes" xml:space="preserve">
          <source>Wrapping::to_owned</source>
          <target state="translated">Wrapping::to_owned</target>
        </trans-unit>
        <trans-unit id="73aa20bad1867d0ff4c2d24f0721a5a8eef6a4d8" translate="yes" xml:space="preserve">
          <source>Wrapping::to_string</source>
          <target state="translated">Wrapping::to_string</target>
        </trans-unit>
        <trans-unit id="04d5020a03ae412567480d9d468c0ac47bbeb27e" translate="yes" xml:space="preserve">
          <source>Wrapping::trailing_zeros</source>
          <target state="translated">Wrapping::trailing_zeros</target>
        </trans-unit>
        <trans-unit id="346c87924a2dddfb76d03753bd7557d01a46d89f" translate="yes" xml:space="preserve">
          <source>Wrapping::try_from</source>
          <target state="translated">Wrapping::try_from</target>
        </trans-unit>
        <trans-unit id="d6a7a2b803d2c4bf9add1e2055e52b0b8af45d11" translate="yes" xml:space="preserve">
          <source>Wrapping::try_into</source>
          <target state="translated">Wrapping::try_into</target>
        </trans-unit>
        <trans-unit id="527e0a06e98efe05731d34b8495de7a9c0796355" translate="yes" xml:space="preserve">
          <source>Wrapping::type_id</source>
          <target state="translated">Wrapping::type_id</target>
        </trans-unit>
        <trans-unit id="d8fe6dbee08984aea95f13fc56e0174b6cc4af39" translate="yes" xml:space="preserve">
          <source>Wraps a borrowed reference to a value in a &lt;code&gt;RefCell&lt;/code&gt; box. A wrapper type for an immutably borrowed value from a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Envuelve una referencia prestada a un valor en un cuadro &lt;code&gt;RefCell&lt;/code&gt; . Un tipo de contenedor para un valor prestado inmutablemente de un &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14edef43e7df9f66193cba2f15582361d72b01a1" translate="yes" xml:space="preserve">
          <source>Wraps a raw C string with a safe C string wrapper.</source>
          <target state="translated">Envuelve una cuerda C cruda con una envoltura de cuerda C segura.</target>
        </trans-unit>
        <trans-unit id="cc416cf90ebff133d69706f1e45c9ea10f251fd4" translate="yes" xml:space="preserve">
          <source>Wraps a writer and buffers its output.</source>
          <target state="translated">Envuelve a un escritor y amortigua su producción.</target>
        </trans-unit>
        <trans-unit id="8835b45a5ce8372fc5b7a9379d43ba01d8c84d89" translate="yes" xml:space="preserve">
          <source>Wraps a writer and buffers output to it, flushing whenever a newline (&lt;code&gt;0x0a&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;) is detected.</source>
          <target state="translated">Envuelve un escritor y almacena en b&amp;uacute;fer la salida, enjuagando cada vez que se detecta una nueva l&amp;iacute;nea ( &lt;code&gt;0x0a&lt;/code&gt; , &lt;code&gt;'\n'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a48932789d199bbed709777e2d743ca2bafdc6c" translate="yes" xml:space="preserve">
          <source>Write</source>
          <target state="translated">Write</target>
        </trans-unit>
        <trans-unit id="422b221e3621326874b9013f07f6893cefb36793" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written.</source>
          <target state="translated">Escriba una memoria intermedia en este escritor,devolviendo cuántos bytes fueron escritos.</target>
        </trans-unit>
        <trans-unit id="ae542cbc15e88f2bf807f8d29fc312d51c4f9344" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;../../../io/trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escriba un b&amp;uacute;fer en este escritor y devuelva cu&amp;aacute;ntos bytes se escribieron. &lt;a href=&quot;../../../io/trait.write#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e588991feee7d28024ae797d8cc74c94c42f1fc" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escriba un b&amp;uacute;fer en este escritor y devuelva cu&amp;aacute;ntos bytes se escribieron. &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad7b7826de9694bab5fc487da2a9381a00705795" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;io/trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escriba un b&amp;uacute;fer en este escritor y devuelva cu&amp;aacute;ntos bytes se escribieron. &lt;a href=&quot;io/trait.write#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42d55a3c5a475b3858d14de608fc86cc1e27fad6" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escriba un b&amp;uacute;fer en este escritor y devuelva cu&amp;aacute;ntos bytes se escribieron. &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52f289e0fc842fa4a0a0c757a23aec01849b63cc" translate="yes" xml:space="preserve">
          <source>Write a slice as the entire contents of a file.</source>
          <target state="translated">Escribir un trozo como todo el contenido de un archivo.</target>
        </trans-unit>
        <trans-unit id="fd14b03d8c7f6b0eec5d8071e36c0b064da74395" translate="yes" xml:space="preserve">
          <source>Write a test that fails and run it to make sure it fails for the reason you expect.</source>
          <target state="translated">Escriba una prueba que falle y ejecútela para asegurarse de que falle por la razón que usted espera.</target>
        </trans-unit>
        <trans-unit id="4792f2eef0440e6afee1219df6ba659746474535" translate="yes" xml:space="preserve">
          <source>Write an Ipv6Addr, conforming to the canonical style described by &lt;a href=&quot;https://tools.ietf.org/html/rfc5952&quot;&gt;RFC 5952&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbf60c6c756d06c22970e5f8f55fad03ee1e678" translate="yes" xml:space="preserve">
          <source>Write an usize value to a byte buffer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a183b868e8fdfdd4779773f0a41b1402c75eb8" translate="yes" xml:space="preserve">
          <source>Write and run a &amp;ldquo;Hello, world!&amp;rdquo; program using &lt;code&gt;rustc&lt;/code&gt; directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bcd0015d2edce502b72162bafb8ff8f006ae23" translate="yes" xml:space="preserve">
          <source>Write and run a Hello, world! program using &lt;code&gt;rustc&lt;/code&gt; directly</source>
          <target state="translated">Escribe y ejecuta un &amp;iexcl;Hola, mundo! programa usando &lt;code&gt;rustc&lt;/code&gt; directamente</target>
        </trans-unit>
        <trans-unit id="ffab6af2de782f874c56ecf608ce2d84de7c2b88" translate="yes" xml:space="preserve">
          <source>Write formatted data into a buffer, with a newline appended.</source>
          <target state="translated">Escriba los datos formateados en un buffer,con una nueva línea añadida.</target>
        </trans-unit>
        <trans-unit id="fcbfbac0d9c49bc3cad2d435296a9ffe56032aaa" translate="yes" xml:space="preserve">
          <source>Write is implemented for &lt;code&gt;&amp;amp;mut [u8]&lt;/code&gt; by copying into the slice, overwriting its data.</source>
          <target state="translated">La escritura se implementa para &lt;code&gt;&amp;amp;mut [u8]&lt;/code&gt; copiando en el segmento, sobrescribiendo sus datos.</target>
        </trans-unit>
        <trans-unit id="565edb809a298ba756dfab19911a1af435d39eef" translate="yes" xml:space="preserve">
          <source>Write is implemented for &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; by appending to the vector. The vector will grow as needed.</source>
          <target state="translated">La escritura se implementa para &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; agregando al vector. El vector crecer&amp;aacute; seg&amp;uacute;n sea necesario.</target>
        </trans-unit>
        <trans-unit id="ba9c763eec2480149fd9cd47639418928770f449" translate="yes" xml:space="preserve">
          <source>Write or modify just enough code to make the new test pass.</source>
          <target state="translated">Escriba o modifique el código suficiente para que la nueva prueba pase.</target>
        </trans-unit>
        <trans-unit id="25725f1f38f240f2a77af039a57e73d792f138b4" translate="yes" xml:space="preserve">
          <source>Write::by_ref</source>
          <target state="translated">Write::by_ref</target>
        </trans-unit>
        <trans-unit id="b18d29c2778fcf294a1af5583a58fde2428d05bc" translate="yes" xml:space="preserve">
          <source>Write::flush</source>
          <target state="translated">Write::flush</target>
        </trans-unit>
        <trans-unit id="2ad8047081c1571209c8de21b5d8ef496c875bcb" translate="yes" xml:space="preserve">
          <source>Write::write</source>
          <target state="translated">Write::write</target>
        </trans-unit>
        <trans-unit id="7f21bb462deedb47e98867332781d5a55ac1f33c" translate="yes" xml:space="preserve">
          <source>Write::write_all</source>
          <target state="translated">Write::write_all</target>
        </trans-unit>
        <trans-unit id="59885a3e77b05a624ab69e3e736291d1ac54574b" translate="yes" xml:space="preserve">
          <source>Write::write_char</source>
          <target state="translated">Write::write_char</target>
        </trans-unit>
        <trans-unit id="869124fb10adcbc1f8e39c2d520b04d4a2bb69e1" translate="yes" xml:space="preserve">
          <source>Write::write_fmt</source>
          <target state="translated">Write::write_fmt</target>
        </trans-unit>
        <trans-unit id="3bed1d79d195792e3683c2bc152331ab7dd62609" translate="yes" xml:space="preserve">
          <source>Write::write_str</source>
          <target state="translated">Write::write_str</target>
        </trans-unit>
        <trans-unit id="141b04d7eaaf0c8ba6b520a1addb5de1176dd5e6" translate="yes" xml:space="preserve">
          <source>Write::write_vectored</source>
          <target state="translated">Write::write_vectored</target>
        </trans-unit>
        <trans-unit id="791cf1c7de23e0f236576b53f40de7030db55060" translate="yes" xml:space="preserve">
          <source>Writers are defined by two required methods, &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tymethod.flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Los escritores se definen mediante dos m&amp;eacute;todos obligatorios, &lt;a href=&quot;#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#tymethod.flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="066642e038ad8d099b61091156c44bbd264c7655" translate="yes" xml:space="preserve">
          <source>Writers are defined by two required methods, &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.write#tymethod.flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d019e37d31448a1c36b68f61dbbcb935ed4575" translate="yes" xml:space="preserve">
          <source>Writers are intended to be composable with one another. Many implementors throughout &lt;a href=&quot;index&quot;&gt;&lt;code&gt;std::io&lt;/code&gt;&lt;/a&gt; take and provide types which implement the &lt;code&gt;Write&lt;/code&gt; trait.</source>
          <target state="translated">Los escritores est&amp;aacute;n destinados a ser componibles entre s&amp;iacute;. Muchos implementadores de &lt;a href=&quot;index&quot;&gt; &lt;code&gt;std::io&lt;/code&gt; &lt;/a&gt; toman y proporcionan tipos que implementan el rasgo &lt;code&gt;Write&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a718c79c131f76156d3a6b0d5a5556c990d2570b" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded.</source>
          <target state="translated">Escribe un &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; en este escritor y devuelve si la escritura se realiz&amp;oacute; correctamente.</target>
        </trans-unit>
        <trans-unit id="dcbe05c646a15714bf69547e05d3cd91b7425533" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645bfe779599abf2ba4f8f6c08447416d5474b43" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4305f6b237e9832ff95454c9f34aa579f1dc813" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9272508b2e41aaf20afc1194eb5b0b6d2dfdc6c9" translate="yes" xml:space="preserve">
          <source>Writes a [&lt;code&gt;char&lt;/code&gt;] into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe un [ &lt;code&gt;char&lt;/code&gt; ] en este escritor y devuelve si la escritura se realiz&amp;oacute; correctamente. &lt;a href=&quot;../fmt/trait.write#method.write_char&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="344bd2db5bc9ba178016d1881285c5afaddc4598" translate="yes" xml:space="preserve">
          <source>Writes a [&lt;code&gt;char&lt;/code&gt;] into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe un [ &lt;code&gt;char&lt;/code&gt; ] en este escritor y devuelve si la escritura se realiz&amp;oacute; correctamente. &lt;a href=&quot;fmt/trait.write#method.write_char&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d63a032a19b4234e192d3e267b268acd649fd1b" translate="yes" xml:space="preserve">
          <source>Writes a [&lt;code&gt;char&lt;/code&gt;] into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe un [ &lt;code&gt;char&lt;/code&gt; ] en este escritor y devuelve si la escritura se realiz&amp;oacute; correctamente. &lt;a href=&quot;trait.write#method.write_char&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95220c41379acdd46bdc780a7a0f1e80e449feff" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered.</source>
          <target state="translated">Escribe una cadena formateada en este escritor,devolviendo cualquier error encontrado.</target>
        </trans-unit>
        <trans-unit id="ecd98e7e5a4ec62ace4f960c01001be172e4925a" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;../../../io/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe una cadena formateada en este escritor y devuelve cualquier error encontrado. &lt;a href=&quot;../../../io/trait.write#method.write_fmt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5543389626d86c8e31553df92af2bde941d2a65" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;../io/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe una cadena formateada en este escritor y devuelve cualquier error encontrado. &lt;a href=&quot;../io/trait.write#method.write_fmt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de5e6f1aafa20fef122dbeed5a71a42b9aa2cae7" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;io/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe una cadena formateada en este escritor y devuelve cualquier error encontrado. &lt;a href=&quot;io/trait.write#method.write_fmt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c76861292606f0bb18321f85e96258836dd2770e" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe una cadena formateada en este escritor y devuelve cualquier error encontrado. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ba303c199b9fe4bf1985b876faca69be2aaf9cf" translate="yes" xml:space="preserve">
          <source>Writes a number of bytes starting from a given offset.</source>
          <target state="translated">Escribe un número de bytes a partir de un determinado desplazamiento.</target>
        </trans-unit>
        <trans-unit id="934343889f7324a6e5af2ff1400d9536dbb167e4" translate="yes" xml:space="preserve">
          <source>Writes a number of bytes starting from a given offset. &lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.write_at&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe una cantidad de bytes a partir de un desplazamiento determinado. &lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.write_at&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45af1e55309b26785973c6185f7a9e763b1c820c" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i128&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;i128&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="6bdae3ffbfb54cc26470f2ec7abd8a54cb058931" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i16&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;i16&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="1e459398c36e231b3d36e4260518d1366491f1f6" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i32&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;i32&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="e6d8da557fcf2c2f0d524d8144d83e2c8862ca13" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i64&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;i64&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="53db12ba27efb40f7499916f3539839440705b87" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i8&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;i8&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="330e06c59d6bdbee17d36d76f63e12553c4d97da" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;isize&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;isize&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="45e49a31d6e7c2d2a651050c305491ca7804f21e" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u128&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;u128&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="aa85ed84476923b1cc5d6b7dfba41874a5d706a0" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u16&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un &amp;uacute;nico &lt;code&gt;u16&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="d68ef120a557f4627660db1da5fdfbcac01eb533" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u32&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;u32&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="a14997eaf51c4e7602b5505b9d66837490a2a9fe" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u64&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un &amp;uacute;nico &lt;code&gt;u64&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="40743e36f9b775608cfba8e00eb78b804913d33f" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u8&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;u8&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="d83f8161e61d59972914ffd1989afe5538474dbc" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;usize&lt;/code&gt; into this hasher.</source>
          <target state="translated">Escribe un solo &lt;code&gt;usize&lt;/code&gt; en este hash.</target>
        </trans-unit>
        <trans-unit id="75c98aad5800d7465070b778412dd48f81ecbabf" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded.</source>
          <target state="translated">Escribe una rebanada de bytes en este escritor,devolviendo si la escritura tuvo éxito.</target>
        </trans-unit>
        <trans-unit id="589037d6e27cf4636e5142d1239dc9ad31b05dda" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe un segmento de bytes en este escritor y devuelve si la escritura se realiz&amp;oacute; correctamente. &lt;a href=&quot;../fmt/trait.write#tymethod.write_str&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6fddaf179154fa846c54d2edd52d74504db1eece" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe un segmento de bytes en este escritor y devuelve si la escritura se realiz&amp;oacute; correctamente. &lt;a href=&quot;fmt/trait.write#tymethod.write_str&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8235073da555c5bd3bf719f2ab4a2cc258a3445a" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe un segmento de bytes en este escritor y devuelve si la escritura se realiz&amp;oacute; correctamente. &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="660e25a3eb306b3311d28442f6e6208ae58a5791" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b1b14666b506662fd683fe6bca2d5d9e8bcd1f" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a15db8ef2c352ca0cb66f490148cb6670e5f327" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe30ae81a283cdbac3d9b2f4e474cbc6a9a2dcd" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e50e6072cf8d9643cbbf27cb278e15b00644e8" translate="yes" xml:space="preserve">
          <source>Writes formatted data into a buffer.</source>
          <target state="translated">Escribe los datos formateados en un buffer.</target>
        </trans-unit>
        <trans-unit id="b133e539f22c56a49e3bc9bfe584753136fdfcd5" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;.</source>
          <target state="translated">Escribe algunos datos en este &lt;code&gt;Hasher&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d56d2da40c1790d440e6f30eedb76e01abcaec37" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;../../hash/trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe algunos datos en este &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;../../hash/trait.hasher#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="664b4eecc8d27414cb11c8ab606f3786a94fd297" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;../hash/trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe algunos datos en este &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;../hash/trait.hasher#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ca27f9b6840a29f38a33b35b6a75dbc6f57703f" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;hash/trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe algunos datos en este &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;hash/trait.hasher#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b8a4f8c89b109d74c610b85abf9468d80196ad2" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Escribe algunos datos en este &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a2b61198cabc344eec293cea3eb21151c358cad" translate="yes" xml:space="preserve">
          <source>Writes some data to the underlying buffer contained within this formatter.</source>
          <target state="translated">Escribe algunos datos en la memoria intermedia subyacente contenida en este formateador.</target>
        </trans-unit>
        <trans-unit id="b05105a6d198b6efd15010fe5b3a83555f844ec8" translate="yes" xml:space="preserve">
          <source>Writes some formatted information into this instance.</source>
          <target state="translated">Escribe alguna información formateada en este caso.</target>
        </trans-unit>
        <trans-unit id="2a97fcb1e34ada189c59cf3337437861dac7acf9" translate="yes" xml:space="preserve">
          <source>Writes to &lt;a href=&quot;../../std/marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../std/mem/struct.manuallydrop&quot;&gt;&lt;code&gt;ManuallyDrop&lt;/code&gt;&lt;/a&gt; union fields do not require reads for running destructors, so these writes don't have to be placed in &lt;code&gt;unsafe&lt;/code&gt; blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e796ac178d17656628057ad4de2c3715ecb31f" translate="yes" xml:space="preserve">
          <source>Writes to &lt;code&gt;Copy&lt;/code&gt; union fields do not require reads for running destructors, so these writes don't have to be placed in &lt;code&gt;unsafe&lt;/code&gt; blocks</source>
          <target state="translated">Los campos de uni&amp;oacute;n de escrituras para &lt;code&gt;Copy&lt;/code&gt; no requieren lecturas para ejecutar destructores, por lo que estas escrituras no tienen que colocarse en bloques &lt;code&gt;unsafe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a04ade11270a59b7a8d9a38b3f59d450099f209" translate="yes" xml:space="preserve">
          <source>Writing Automated Tests</source>
          <target state="translated">Escritura de pruebas automatizadas</target>
        </trans-unit>
        <trans-unit id="8d9de7655ad92afdb381750f5cb6b0b9d4630db5" translate="yes" xml:space="preserve">
          <source>Writing Code to Pass the Test</source>
          <target state="translated">Escribir el código para pasar la prueba</target>
        </trans-unit>
        <trans-unit id="c7ec99d9ff26178393f163143686d9bc7fb6a3d1" translate="yes" xml:space="preserve">
          <source>Writing Error Messages to Standard Error Instead of Standard Output</source>
          <target state="translated">Escribir mensajes de error en el error estándar en lugar de la salida estándar</target>
        </trans-unit>
        <trans-unit id="b4a721e4aa8c7261bfa68a1535b4fe4e84e2f28e" translate="yes" xml:space="preserve">
          <source>Writing a Failing Test</source>
          <target state="translated">Escribir una prueba fallida</target>
        </trans-unit>
        <trans-unit id="83ca9b1b9c2e5fb239421cfb23f5c54c22d603eb" translate="yes" xml:space="preserve">
          <source>Writing a Failing Test for the Case-Insensitive &lt;code id=&quot;writing-a-failing-test-for-the-case-insensitive-search-function&quot;&gt;search&lt;/code&gt; Function</source>
          <target state="translated">Escribir una prueba fallida para la funci&amp;oacute;n de &lt;code id=&quot;writing-a-failing-test-for-the-case-insensitive-search-function&quot;&gt;search&lt;/code&gt; distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas</target>
        </trans-unit>
        <trans-unit id="993bd3ebaf1e78a4791f69f6f8988c0b5b0d3ae3" translate="yes" xml:space="preserve">
          <source>Writing a Response</source>
          <target state="translated">Escribir una respuesta</target>
        </trans-unit>
        <trans-unit id="97d3ede6e5b435ad6b9a77ec03a83113afdfb3a5" translate="yes" xml:space="preserve">
          <source>Writing a program that prints &lt;code&gt;Hello, world!&lt;/code&gt;</source>
          <target state="translated">Escribir un programa que imprima &lt;code&gt;Hello, world!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="785a0c70580d26564b61ec7b2da0b61477b68b43" translate="yes" xml:space="preserve">
          <source>Writing an array&amp;rsquo;s type this way looks similar to an alternative syntax for initializing an array: if you want to create an array that contains the same value for each element, you can specify the initial value, followed by a semicolon, and then the length of the array in square brackets, as shown here:</source>
          <target state="translated">Escribir el tipo de una matriz de esta manera se parece a una sintaxis alternativa para inicializar una matriz: si desea crear una matriz que contenga el mismo valor para cada elemento, puede especificar el valor inicial, seguido de un punto y coma y luego la longitud de la matriz entre corchetes, como se muestra aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f560bd46db71699beed1dbcf4f543ef55a25efce" translate="yes" xml:space="preserve">
          <source>Writing and Running a Rust Program</source>
          <target state="translated">Escribir y ejecutar un programa de oxidación</target>
        </trans-unit>
        <trans-unit id="6c156da0c5e2570a035c5e8bd4f021c50ffb20da" translate="yes" xml:space="preserve">
          <source>Writing both kinds of tests is important to ensure that the pieces of your library are doing what you expect them to, separately and together.</source>
          <target state="translated">Escribir ambos tipos de pruebas es importante para asegurarse de que las piezas de su biblioteca están haciendo lo que usted espera que hagan,por separado y juntas.</target>
        </trans-unit>
        <trans-unit id="796c30002159ff15a3a7e4eeec8cf17afe766c5f" translate="yes" xml:space="preserve">
          <source>Writing tests (&lt;a href=&quot;ch11-00-testing&quot;&gt;Chapter 11&lt;/a&gt;)</source>
          <target state="translated">Pruebas de escritura ( &lt;a href=&quot;ch11-00-testing&quot;&gt;Cap&amp;iacute;tulo 11&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="450f15de86c3b61b38fb7579e1f10bd319432ea8" translate="yes" xml:space="preserve">
          <source>Writing tests so they return a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; enables you to use the question mark operator in the body of tests, which can be a convenient way to write tests that should fail if any operation within them returns an &lt;code&gt;Err&lt;/code&gt; variant.</source>
          <target state="translated">Escribir pruebas para que devuelvan un &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; permite usar el operador de signo de interrogaci&amp;oacute;n en el cuerpo de las pruebas, lo que puede ser una forma conveniente de escribir pruebas que deber&amp;iacute;an fallar si alguna operaci&amp;oacute;n dentro de ellas devuelve una variante &lt;code&gt;Err&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07bc23942d416a7fef04bbcf5fc194f37c766951" translate="yes" xml:space="preserve">
          <source>Writing this lengthy type in function signatures and as type annotations all over the code can be tiresome and error prone. Imagine having a project full of code like that in Listing 19-24.</source>
          <target state="translated">Escribir este largo tipo en firmas de funciones y como tipo de anotaciones en todo el código puede ser fastidioso y propenso a errores.Imagina tener un proyecto lleno de código como ese en la lista 19-24.</target>
        </trans-unit>
        <trans-unit id="07e47a0416a28679b7085ffdf5344062b5fcdd36" translate="yes" xml:space="preserve">
          <source>Yanking a version prevents new projects from starting to depend on that version while allowing all existing projects that depend on it to continue to download and depend on that version. Essentially, a yank means that all projects with a &lt;em&gt;Cargo.lock&lt;/em&gt; will not break, and any future &lt;em&gt;Cargo.lock&lt;/em&gt; files generated will not use the yanked version.</source>
          <target state="translated">Yankear una versi&amp;oacute;n evita que los nuevos proyectos comiencen a depender de esa versi&amp;oacute;n mientras permite que todos los proyectos existentes que dependen de ella contin&amp;uacute;en descarg&amp;aacute;ndose y dependan de esa versi&amp;oacute;n. B&amp;aacute;sicamente, un tir&amp;oacute;n significa que todos los proyectos con &lt;em&gt;Cargo.lock&lt;/em&gt; no se romper&amp;aacute;n, y los archivos &lt;em&gt;Cargo.lock&lt;/em&gt; que se generen en el futuro no utilizar&amp;aacute;n la versi&amp;oacute;n eliminada.</target>
        </trans-unit>
        <trans-unit id="f8e5799899abe435ee29b5e571cca4a4951b4912" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;CStr&lt;/code&gt; contains valid UTF-8.</source>
          <target state="translated">Produce un segmento &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; si el &lt;code&gt;CStr&lt;/code&gt; contiene UTF-8 v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="3c7c3595b258ab56decf488e64eb0d24960bf485" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;OsStr&lt;/code&gt; is valid Unicode.</source>
          <target state="translated">Produce un segmento &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; si &lt;code&gt;OsStr&lt;/code&gt; es Unicode v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="195279f44b198c67c27101e6d1db95ba38fd584e" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;Path&lt;/code&gt; is valid unicode.</source>
          <target state="translated">Produce un segmento &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; si la &lt;code&gt;Path&lt;/code&gt; es unicode v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="758c4d0f690a6c543ad0cd5b04420b3087ad8f1b" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;CStr&lt;/code&gt; contains valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86217a19209be5bc5617ae5f4db30f4c9578c5e5" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;OsStr&lt;/code&gt; is valid Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c0b7dbdf4f40a5f0fc3157e3dd92701d432da4" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;Path&lt;/code&gt; is valid unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413679a903a004b3c5c40da67ab627b0db5926d2" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;Result&amp;lt;bool, ParseBoolError&amp;gt;&lt;/code&gt;, because &lt;code&gt;s&lt;/code&gt; may or may not actually be parseable.</source>
          <target state="translated">Produce un &lt;code&gt;Result&amp;lt;bool, ParseBoolError&amp;gt;&lt;/code&gt; , porque &lt;code&gt;s&lt;/code&gt; pueden ser analizables o no.</target>
        </trans-unit>
        <trans-unit id="e9230c9fc9c21a74b44c14778be86dfe99887de8" translate="yes" xml:space="preserve">
          <source>Yields the underlying &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">Produce el segmento &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; subyacente .</target>
        </trans-unit>
        <trans-unit id="0c744c88f234909706712417b746da8f001876e3" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Produce el vector de bytes subyacente de este &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45e614c97fadbe28622649b26e90d5c12092a4a5" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.into_vec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827f632b1eb13c813d90204287d7a305ab25fbc3" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this [&lt;code&gt;OsString&lt;/code&gt;]. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.into_vec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Produce el vector de bytes subyacente de este [ &lt;code&gt;OsString&lt;/code&gt; ]. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.into_vec&quot;&gt;Lee mas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65ae03a65393d6ce8a756fcd3bce6d5e0e587d92" translate="yes" xml:space="preserve">
          <source>You also don&amp;rsquo;t have to worry about problems resulting from accidentally cleaning up values still in use: the ownership system that makes sure references are always valid also ensures that &lt;code&gt;drop&lt;/code&gt; gets called only once when the value is no longer being used.</source>
          <target state="translated">Tampoco tiene que preocuparse por los problemas resultantes de la limpieza accidental de valores que todav&amp;iacute;a est&amp;aacute;n en uso: el sistema de propiedad que se asegura de que las referencias sean siempre v&amp;aacute;lidas tambi&amp;eacute;n garantiza que se llame a &lt;code&gt;drop&lt;/code&gt; solo una vez cuando el valor ya no se use.</target>
        </trans-unit>
        <trans-unit id="ec9b139e5d307ab87a8084c13822b6acd8da7805" translate="yes" xml:space="preserve">
          <source>You are &lt;em&gt;absolutely&lt;/em&gt; certain you &lt;em&gt;really&lt;/em&gt;, &lt;em&gt;truly&lt;/em&gt;, want a doubly linked list.</source>
          <target state="translated">Est&amp;aacute;s &lt;em&gt;absolutamente&lt;/em&gt; seguro de que &lt;em&gt;realmente&lt;/em&gt; , &lt;em&gt;realmente&lt;/em&gt; , quiere una lista doblemente enlazada.</target>
        </trans-unit>
        <trans-unit id="7df51c21931f3ba8153011ff31ac3df483e2b6f2" translate="yes" xml:space="preserve">
          <source>You are trying to use an identifier that is either undefined or not a struct. Erroneous code example:</source>
          <target state="translated">Estás tratando de usar un identificador que no está definido o no es una estructura.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="72a4cd7a33eb16fdb9f37ef196e2dcb7606d5372" translate="yes" xml:space="preserve">
          <source>You attempted to use multiple types as bounds for a closure or trait object. Rust does not currently support this. A simple example that causes this error:</source>
          <target state="translated">Intentaste usar múltiples tipos como límites para un objeto de cierre o rasgo.El óxido no soporta actualmente esto.Un ejemplo simple que causa este error:</target>
        </trans-unit>
        <trans-unit id="1f01714756be32bd3190176ff6c1f442b832a1d6" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; values onto the end of a vector (which will grow the vector as needed):</source>
          <target state="translated">Puede &lt;a href=&quot;struct.vec#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; valores al final de un vector (que har&amp;aacute; crecer el vector seg&amp;uacute;n sea necesario):</target>
        </trans-unit>
        <trans-unit id="0d2a0e1493249f355c1cfdfc3bac39d75c54ff72" translate="yes" xml:space="preserve">
          <source>You can also add a custom message to be printed with the failure message as optional arguments to the &lt;code&gt;assert!&lt;/code&gt;, &lt;code&gt;assert_eq!&lt;/code&gt;, and &lt;code&gt;assert_ne!&lt;/code&gt; macros. Any arguments specified after the one required argument to &lt;code&gt;assert!&lt;/code&gt; or the two required arguments to &lt;code&gt;assert_eq!&lt;/code&gt; and &lt;code&gt;assert_ne!&lt;/code&gt; are passed along to the &lt;code&gt;format!&lt;/code&gt; macro (discussed in Chapter 8 in the &lt;a href=&quot;ch08-02-strings#concatenation-with-the--operator-or-the-format-macro&quot;&gt;&amp;ldquo;Concatenation with the &lt;code&gt;+&lt;/code&gt; Operator or the &lt;code&gt;format!&lt;/code&gt; Macro&amp;rdquo;&lt;/a&gt; section), so you can pass a format string that contains &lt;code&gt;{}&lt;/code&gt; placeholders and values to go in those placeholders. Custom messages are useful to document what an assertion means; when a test fails, you&amp;rsquo;ll have a better idea of what the problem is with the code.</source>
          <target state="translated">&amp;iexcl;Tambi&amp;eacute;n puede agregar un mensaje personalizado para que se imprima con el mensaje de falla como argumentos opcionales para la &lt;code&gt;assert!&lt;/code&gt; , &lt;code&gt;assert_eq!&lt;/code&gt; y &lt;code&gt;assert_ne!&lt;/code&gt; macros. Cualquier argumento especificado despu&amp;eacute;s del &amp;uacute;nico argumento requerido para &lt;code&gt;assert!&lt;/code&gt; o los dos argumentos necesarios para &lt;code&gt;assert_eq!&lt;/code&gt; y &lt;code&gt;assert_ne!&lt;/code&gt; se transmiten al &lt;code&gt;format!&lt;/code&gt; macro (discutido en el Cap&amp;iacute;tulo 8 en la secci&amp;oacute;n &lt;a href=&quot;ch08-02-strings#concatenation-with-the--operator-or-the-format-macro&quot;&gt;&quot;Concatenaci&amp;oacute;n con el operador &lt;code&gt;+&lt;/code&gt; o el &lt;code&gt;format!&lt;/code&gt; Macro&quot;&lt;/a&gt; ), para que pueda pasar una cadena de formato que contenga &lt;code&gt;{}&lt;/code&gt; marcadores de posici&amp;oacute;n y valores para ir en esos marcadores de posici&amp;oacute;n. Los mensajes personalizados son &amp;uacute;tiles para documentar lo que significa una afirmaci&amp;oacute;n; cuando falla una prueba, tendr&amp;aacute; una mejor idea de cu&amp;aacute;l es el problema con el c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="59d30fe12340d329f73be7515fd4175c752f146f" translate="yes" xml:space="preserve">
          <source>You can also bring an item into scope with &lt;code&gt;use&lt;/code&gt; and a relative path. Listing 7-12 shows how to specify a relative path to get the same behavior as in Listing 7-11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6933a535082bef416b84d186746e29a92d0ca26" translate="yes" xml:space="preserve">
          <source>You can also combine these implementations to let the &lt;code&gt;==&lt;/code&gt; operator work with two different types:</source>
          <target state="translated">Tambi&amp;eacute;n puede combinar estas implementaciones para permitir que el operador &lt;code&gt;==&lt;/code&gt; trabaje con dos tipos diferentes:</target>
        </trans-unit>
        <trans-unit id="99c9da3c8943fcee498c0ed8b484f227e63545a2" translate="yes" xml:space="preserve">
          <source>You can also define structs that don&amp;rsquo;t have any fields! These are called &lt;em&gt;unit-like structs&lt;/em&gt; because they behave similarly to &lt;code&gt;()&lt;/code&gt;, the unit type. Unit-like structs can be useful in situations in which you need to implement a trait on some type but don&amp;rsquo;t have any data that you want to store in the type itself. We&amp;rsquo;ll discuss traits in Chapter 10.</source>
          <target state="translated">&amp;iexcl;Tambi&amp;eacute;n puede definir estructuras que no tengan campos! Se denominan &lt;em&gt;estructuras tipo unidad&lt;/em&gt; porque se comportan de forma similar a &lt;code&gt;()&lt;/code&gt; , el tipo de unidad. Las estructuras en forma de unidad pueden ser &amp;uacute;tiles en situaciones en las que necesita implementar un rasgo en alg&amp;uacute;n tipo pero no tiene ning&amp;uacute;n dato que desee almacenar en el tipo en s&amp;iacute;. Discutiremos los rasgos en el Cap&amp;iacute;tulo 10.</target>
        </trans-unit>
        <trans-unit id="85102a822bf46f84c9e28f5552de9b8522a4dbde" translate="yes" xml:space="preserve">
          <source>You can also define structs that look similar to tuples, called &lt;em&gt;tuple structs&lt;/em&gt;. Tuple structs have the added meaning the struct name provides but don&amp;rsquo;t have names associated with their fields; rather, they just have the types of the fields. Tuple structs are useful when you want to give the whole tuple a name and make the tuple be a different type from other tuples, and naming each field as in a regular struct would be verbose or redundant.</source>
          <target state="translated">Tambi&amp;eacute;n puede definir estructuras que se parecen a las tuplas, llamadas &lt;em&gt;estructuras de tuplas&lt;/em&gt; . Las estructuras de tupla tienen el significado agregado que proporciona el nombre de la estructura, pero no tienen nombres asociados con sus campos; m&amp;aacute;s bien, solo tienen los tipos de campos. Las estructuras de tupla son &amp;uacute;tiles cuando desea darle un nombre a toda la tupla y hacer que la tupla sea de un tipo diferente de otras tuplas, y nombrar cada campo como en una estructura regular ser&amp;iacute;a detallado o redundante.</target>
        </trans-unit>
        <trans-unit id="478834b4ebadfb970a4e8408c36d21f8f75d5297" translate="yes" xml:space="preserve">
          <source>You can also define your own wrapper around &lt;code&gt;System&lt;/code&gt; if you'd like, such as keeping track of the number of all bytes allocated:</source>
          <target state="translated">Tambi&amp;eacute;n puede definir su propio contenedor alrededor del &lt;code&gt;System&lt;/code&gt; si lo desea, como realizar un seguimiento del n&amp;uacute;mero de todos los bytes asignados:</target>
        </trans-unit>
        <trans-unit id="f2ec90a0a184fc0a34f0ffbecbdb3577a9642216" translate="yes" xml:space="preserve">
          <source>You can also drop both values to take a slice of the entire string. So these are equal:</source>
          <target state="translated">También puedes bajar ambos valores para tomar un trozo de la cadena completa.Así que estos son iguales:</target>
        </trans-unit>
        <trans-unit id="07fd7e0ceaeb6effa3bef1f17d2c79141e988f86" translate="yes" xml:space="preserve">
          <source>You can also have this error while using a cell type:</source>
          <target state="translated">También puedes tener este error al usar un tipo de célula:</target>
        </trans-unit>
        <trans-unit id="2abcc436137e02d2d460f9bb29cc2de726a9488d" translate="yes" xml:space="preserve">
          <source>You can also implement &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Clone&lt;/code&gt; manually:</source>
          <target state="translated">Tambi&amp;eacute;n puede implementar &lt;code&gt;Copy&lt;/code&gt; y &lt;code&gt;Clone&lt;/code&gt; manualmente:</target>
        </trans-unit>
        <trans-unit id="77d0a855671805dfc5fdffb0de5601ad968fb03d" translate="yes" xml:space="preserve">
          <source>You can also omit the parameter name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0eb8e7e0853f72a4740501ba25eded7eda4cc9" translate="yes" xml:space="preserve">
          <source>You can also rewrite this in terms of &lt;a href=&quot;#method.flat_map&quot;&gt;&lt;code&gt;flat_map()&lt;/code&gt;&lt;/a&gt;, which is preferable in this case since it conveys intent more clearly:</source>
          <target state="translated">Tambi&amp;eacute;n puede reescribir esto en t&amp;eacute;rminos de &lt;a href=&quot;#method.flat_map&quot;&gt; &lt;code&gt;flat_map()&lt;/code&gt; &lt;/a&gt; , que es preferible en este caso ya que transmite la intenci&amp;oacute;n con mayor claridad:</target>
        </trans-unit>
        <trans-unit id="31c83cc061e340443a0779b3d7127df9d6c7ce68" translate="yes" xml:space="preserve">
          <source>You can also rewrite this in terms of &lt;a href=&quot;trait.iterator#method.flat_map&quot;&gt;&lt;code&gt;flat_map()&lt;/code&gt;&lt;/a&gt;, which is preferable in this case since it conveys intent more clearly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15da995ef7945b8770639a97784385a172b200d0" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;dbg!()&lt;/code&gt; without a value to just print the file and line whenever it's reached.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;dbg!()&lt;/code&gt; Sin un valor para imprimir el archivo y la l&amp;iacute;nea siempre que se alcance.</target>
        </trans-unit>
        <trans-unit id="9efcd998a1aef5d563a086721600c461fc2c254c" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;cargo fix&lt;/code&gt; command to transition your code between different Rust editions. Editions are covered in Appendix E.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar el comando &lt;code&gt;cargo fix&lt;/code&gt; para realizar la transici&amp;oacute;n de su c&amp;oacute;digo entre diferentes ediciones de Rust. Las ediciones se tratan en el Ap&amp;eacute;ndice E.</target>
        </trans-unit>
        <trans-unit id="9e76ec17ba63844ca8928afd80bf3131846fedf2" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;em&gt;or&lt;/em&gt; operator &lt;code&gt;|&lt;/code&gt; in a match guard to specify multiple patterns; the match guard condition will apply to all the patterns. Listing 18-28 shows the precedence of combining a match guard with a pattern that uses &lt;code&gt;|&lt;/code&gt;. The important part of this example is that the &lt;code&gt;if y&lt;/code&gt; match guard applies to &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;em&gt;and&lt;/em&gt;&lt;code&gt;6&lt;/code&gt;, even though it might look like &lt;code&gt;if y&lt;/code&gt; only applies to &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar el operador &lt;em&gt;o &lt;/em&gt; &lt;code&gt;|&lt;/code&gt; en un protector de f&amp;oacute;sforos para especificar m&amp;uacute;ltiples patrones; la condici&amp;oacute;n de guarda del partido se aplicar&amp;aacute; a todos los patrones. El listado 18-28 muestra la precedencia de combinar un protector de partido con un patr&amp;oacute;n que usa &lt;code&gt;|&lt;/code&gt; . La parte importante de este ejemplo es que el &lt;code&gt;if y&lt;/code&gt; guardia de f&amp;oacute;sforo se aplica a los &lt;code&gt;4&lt;/code&gt; , &lt;code&gt;5&lt;/code&gt; , &lt;em&gt;y &lt;/em&gt; &lt;code&gt;6&lt;/code&gt; , a pesar de que podr&amp;iacute;a ser como &lt;code&gt;if y&lt;/code&gt; s&amp;oacute;lo se aplica a &lt;code&gt;6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="109e7f6c3d07299c54983d31980eeb18d57c214f" translate="yes" xml:space="preserve">
          <source>You can also use the array reference's &lt;a href=&quot;iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt; implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ecf9c07343c46c1d60f065ded4b4f2eb0ea645" translate="yes" xml:space="preserve">
          <source>You can also work with partially initialized arrays, which could be found in low-level datastructures.</source>
          <target state="translated">También se puede trabajar con matrices parcialmente inicializadas,que se pueden encontrar en estructuras de datos de bajo nivel.</target>
        </trans-unit>
        <trans-unit id="b6c603fa73cf57e512f35e947ee6f15111e430a7" translate="yes" xml:space="preserve">
          <source>You can append a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;String&lt;/code&gt; with the &lt;a href=&quot;#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method, and append a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Puede agregar un &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; a un &lt;code&gt;String&lt;/code&gt; con el m&amp;eacute;todo &lt;a href=&quot;#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; y agregar un &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; con el m&amp;eacute;todo &lt;a href=&quot;#method.push_str&quot;&gt; &lt;code&gt;push_str&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="59ee6d5b203d9d5c9909fd86ebe91daa1ede20d7" translate="yes" xml:space="preserve">
          <source>You can append a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;String&lt;/code&gt; with the &lt;a href=&quot;struct.string#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method, and append a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;struct.string#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d11f2c97c83c2645f12b9ebc6ac85c5458f4e32" translate="yes" xml:space="preserve">
          <source>You can build a free-standing crate by adding &lt;code&gt;#![no_std]&lt;/code&gt; to the crate attributes:</source>
          <target state="translated">Puede construir una caja independiente agregando &lt;code&gt;#![no_std]&lt;/code&gt; a los atributos de la caja:</target>
        </trans-unit>
        <trans-unit id="b809a385993bf02c8d1206070cc3301b18c3b78c" translate="yes" xml:space="preserve">
          <source>You can contribute to this book by opening an issue or sending a pull request to &lt;a href=&quot;https://github.com/rust-lang-nursery/reference/&quot;&gt;the Rust Reference repository&lt;/a&gt;. If this book does not answer your question, and you think its answer is in scope of it, please do not hesitate to file an issue or ask about it in the &lt;code&gt;#docs&lt;/code&gt; channels on &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt;. Knowing what people use this book for the most helps direct our attention to making those sections the best that they can be.</source>
          <target state="translated">Puede contribuir a este libro abriendo un problema o enviando una solicitud de extracci&amp;oacute;n al &lt;a href=&quot;https://github.com/rust-lang-nursery/reference/&quot;&gt;repositorio de referencia de Rust&lt;/a&gt; . Si este libro no responde a su pregunta y cree que su respuesta est&amp;aacute; dentro del alcance de la misma, no dude en presentar un problema o preguntar al respecto en los canales &lt;code&gt;#docs&lt;/code&gt; de &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt; . Saber para qu&amp;eacute; usan m&amp;aacute;s las personas este libro ayuda a dirigir nuestra atenci&amp;oacute;n a hacer que esas secciones sean lo mejor posible.</target>
        </trans-unit>
        <trans-unit id="87f6d194912af77b8a5702923ad0d4120944fb6b" translate="yes" xml:space="preserve">
          <source>You can contribute to this book by opening an issue or sending a pull request to &lt;a href=&quot;https://github.com/rust-lang/reference/&quot;&gt;the Rust Reference repository&lt;/a&gt;. If this book does not answer your question, and you think its answer is in scope of it, please do not hesitate to &lt;a href=&quot;https://github.com/rust-lang/reference/issues&quot;&gt;file an issue&lt;/a&gt; or ask about it in the &lt;code&gt;t-lang/doc&lt;/code&gt; stream on &lt;a href=&quot;https://rust-lang.zulipchat.com/#narrow/stream/237824-t-lang.2Fdoc&quot;&gt;Zulip&lt;/a&gt;. Knowing what people use this book for the most helps direct our attention to making those sections the best that they can be. We also want the reference to be as normative as possible, so if you see anything that is wrong or is non-normative but not specifically called out, please also &lt;a href=&quot;https://github.com/rust-lang/reference/issues&quot;&gt;file an issue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47151976fa0c19d6bbd8b86018adedad5599a36" translate="yes" xml:space="preserve">
          <source>You can contribute to this book by opening an issue or sending a pull request to &lt;a href=&quot;https://github.com/rust-lang/reference/&quot;&gt;the Rust Reference repository&lt;/a&gt;. If this book does not answer your question, and you think its answer is in scope of it, please do not hesitate to file an issue or ask about it in the &lt;code&gt;#docs&lt;/code&gt; channels on &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt;. Knowing what people use this book for the most helps direct our attention to making those sections the best that they can be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45652675628aa0520caadf107ccf92529cef48c4" translate="yes" xml:space="preserve">
          <source>You can create &lt;code&gt;Path&lt;/code&gt;s from &lt;code&gt;String&lt;/code&gt;s, or even other &lt;code&gt;Path&lt;/code&gt;s:</source>
          <target state="translated">Puede crear &lt;code&gt;Path&lt;/code&gt; a partir de &lt;code&gt;String&lt;/code&gt; , o incluso otras &lt;code&gt;Path&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d7926aaf53927823e4081b71fa3d55e1e7d5547f" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;String&lt;/code&gt; from &lt;a href=&quot;../primitive.str&quot;&gt;a literal string&lt;/a&gt; with &lt;a href=&quot;../convert/trait.from#tymethod.from&quot;&gt;&lt;code&gt;String::from&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab7261ff093b68aeb80217fb17838c264ba793f" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;String&lt;/code&gt; from a literal string with &lt;a href=&quot;#method.from&quot;&gt;&lt;code&gt;String::from&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Puede crear una &lt;code&gt;String&lt;/code&gt; partir de una cadena literal con &lt;a href=&quot;#method.from&quot;&gt; &lt;code&gt;String::from&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9e907952e713a332ea657810a208121675e84c04" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; from an existing one by concatenating with &lt;code&gt;+&lt;/code&gt;:</source>
          <target state="translated">Puede crear una nueva &lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; partir de una existente concatenando con &lt;code&gt;+&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2cc5912ade8e0031b95579911c3cbaa63e5424d5" translate="yes" xml:space="preserve">
          <source>You can create an empty hash map with &lt;code&gt;new&lt;/code&gt; and add elements with &lt;code&gt;insert&lt;/code&gt;. In Listing 8-20, we&amp;rsquo;re keeping track of the scores of two teams whose names are Blue and Yellow. The Blue team starts with 10 points, and the Yellow team starts with 50.</source>
          <target state="translated">Puede crear un mapa hash vac&amp;iacute;o con elementos &lt;code&gt;new&lt;/code&gt; y agregar elementos con &lt;code&gt;insert&lt;/code&gt; ar . En el Listado 8-20, hacemos un seguimiento de las puntuaciones de dos equipos cuyos nombres son Azul y Amarillo. El equipo azul comienza con 10 puntos y el equipo amarillo comienza con 50.</target>
        </trans-unit>
        <trans-unit id="0d3270ed21cd27a14044769666f4247cb1a76136" translate="yes" xml:space="preserve">
          <source>You can customize the error message by passing a string as the second parameter:</source>
          <target state="translated">Puede personalizar el mensaje de error pasando una cadena como segundo parámetro:</target>
        </trans-unit>
        <trans-unit id="f50b50da715d70f8535907a48cb0e96ef9c58565" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Copy&lt;/code&gt; on any type whose parts all implement &lt;code&gt;Copy&lt;/code&gt;. You can only apply the &lt;code&gt;Copy&lt;/code&gt; trait to types that also implement &lt;code&gt;Clone&lt;/code&gt;, because a type that implements &lt;code&gt;Copy&lt;/code&gt; has a trivial implementation of &lt;code&gt;Clone&lt;/code&gt; that performs the same task as &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="translated">Puede derivar &lt;code&gt;Copy&lt;/code&gt; en cualquier tipo cuyas partes implementen &lt;code&gt;Copy&lt;/code&gt; . Solo puede aplicar el rasgo &lt;code&gt;Copy&lt;/code&gt; a tipos que tambi&amp;eacute;n implementan &lt;code&gt;Clone&lt;/code&gt; , porque un tipo que implementa &lt;code&gt;Copy&lt;/code&gt; tiene una implementaci&amp;oacute;n trivial de &lt;code&gt;Clone&lt;/code&gt; que realiza la misma tarea que &lt;code&gt;Copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83e158e3d2e5e26c76384dd26a124614ad844a55" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Hash&lt;/code&gt; with &lt;code&gt;#[derive(Hash)]&lt;/code&gt; if all fields implement &lt;code&gt;Hash&lt;/code&gt;. The resulting hash will be the combination of the values from calling &lt;a href=&quot;#tymethod.hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; on each field.</source>
          <target state="translated">Puede derivar &lt;code&gt;Hash&lt;/code&gt; con &lt;code&gt;#[derive(Hash)]&lt;/code&gt; si todos los campos implementan &lt;code&gt;Hash&lt;/code&gt; . El hash resultante ser&amp;aacute; la combinaci&amp;oacute;n de los valores de llamar al &lt;a href=&quot;#tymethod.hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; en cada campo.</target>
        </trans-unit>
        <trans-unit id="35be33ced6f0cfe471c698377e1d225ec13de67d" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Hash&lt;/code&gt; with &lt;code&gt;#[derive(Hash)]&lt;/code&gt; if all fields implement &lt;code&gt;Hash&lt;/code&gt;. The resulting hash will be the combination of the values from calling &lt;a href=&quot;trait.hash#tymethod.hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; on each field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f5ee2dba48ae74f01f68800a38cc65446beed5" translate="yes" xml:space="preserve">
          <source>You can disambiguate a single-element tuple from a value in parentheses with a comma:</source>
          <target state="translated">Puedes desambiguar una tupla de un solo elemento de un valor entre paréntesis con una coma:</target>
        </trans-unit>
        <trans-unit id="858139efb135decf30543ab94bffe38f904b8030" translate="yes" xml:space="preserve">
          <source>You can even implement the &lt;code&gt;trait&lt;/code&gt; on the returned &lt;code&gt;enum&lt;/code&gt; so the callers &lt;em&gt;don't&lt;/em&gt; have to match on the returned value to invoke the associated items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ac5995b1f731428fb2c278267c23aa6ba7d51" translate="yes" xml:space="preserve">
          <source>You can explicitly create a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;struct.vec#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Puede crear expl&amp;iacute;citamente un &lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; con &lt;a href=&quot;struct.vec#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="460f3695c8c0bbab00464940a8f28d49f754cce3" translate="yes" xml:space="preserve">
          <source>You can explicitly create a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;struct.vec#method.new&quot;&gt;&lt;code&gt;Vec::new&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513e665187e52659901e2d139a691e98738bef9a" translate="yes" xml:space="preserve">
          <source>You can find more information about &lt;code&gt;derive&lt;/code&gt; in the &lt;a href=&quot;book/appendix-03-derivable-traits&quot;&gt;Rust Book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b12bc4089e8eb8b5751f247a7b9589c2fe1f2" translate="yes" xml:space="preserve">
          <source>You can find more information about borrowing in the rust-book: http://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html</source>
          <target state="translated">Puede encontrar más información sobre el préstamo en el libro de oxidación:http://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html</target>
        </trans-unit>
        <trans-unit id="beb47d198b944a0ce4280dc360af7ef8ab346311" translate="yes" xml:space="preserve">
          <source>You can find more information about it in the &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/ffi-pure.html&quot;&gt;unstable Rust Book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2e5c62e0b55ad5028e27c25a79c338ab8a55a6" translate="yes" xml:space="preserve">
          <source>You can fix this error by finishing using the borrow before the next use of the value:</source>
          <target state="translated">Puedes corregir este error terminando de usar el préstamo antes del próximo uso del valor:</target>
        </trans-unit>
        <trans-unit id="d8dd34acfc3bee0c9d744f723edecbf71221b97f" translate="yes" xml:space="preserve">
          <source>You can get more information about it in the &lt;a href=&quot;https://doc.rust-lang.org/nightly/unstable-book/language-features/ffi-const.html&quot;&gt;unstable Rust Book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aedd4a29ecef931e15839bd3008e9ac572d334a" translate="yes" xml:space="preserve">
          <source>You can have multiple conditions by combining &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; expression. For example:</source>
          <target state="translated">Puede tener varias condiciones combinando &lt;code&gt;if&lt;/code&gt; y &lt;code&gt;else&lt;/code&gt; en una expresi&amp;oacute;n &lt;code&gt;else if&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b3c9603849c73d33443ee6a87ea7d3f7ea9f8eb7" translate="yes" xml:space="preserve">
          <source>You can implement &lt;code&gt;derive&lt;/code&gt; for your own traits through &lt;a href=&quot;../procedural-macros#derive-macros&quot;&gt;procedural macros&lt;/a&gt;.</source>
          <target state="translated">Puede implementar &lt;code&gt;derive&lt;/code&gt; para sus propios rasgos a trav&amp;eacute;s de &lt;a href=&quot;../procedural-macros#derive-macros&quot;&gt;macros de procedimiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87090e61475fabac741ebc244ff59fd41b674b51" translate="yes" xml:space="preserve">
          <source>You can instead use a single name for the argument:</source>
          <target state="translated">Puedes usar un solo nombre para el argumento:</target>
        </trans-unit>
        <trans-unit id="b4e59a25eef48510bd25baeb9f2b6823ad86530a" translate="yes" xml:space="preserve">
          <source>You can look at these with the &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">Puede &lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt; con los m&amp;eacute;todos as_ptr , &lt;a href=&quot;#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="93493631ee602e503ac1e5a81f1088e2a4d7a4c8" translate="yes" xml:space="preserve">
          <source>You can look at these with the &lt;a href=&quot;../primitive.str#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.string#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;struct.string#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae6e1835d66f2c10d701af8aff316c93ab9ceb1" translate="yes" xml:space="preserve">
          <source>You can move elements out of an array with a &lt;a href=&quot;../reference/patterns#slice-patterns&quot;&gt;slice pattern&lt;/a&gt;. If you want one element, see &lt;a href=&quot;mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f474815df87597604ccec4f0ca97d0a759dc6f35" translate="yes" xml:space="preserve">
          <source>You can move elements out of an array with a slice pattern. If you want one element, see &lt;a href=&quot;mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Puede sacar elementos de una matriz con un patr&amp;oacute;n de corte. Si desea un elemento, consulte &lt;a href=&quot;mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5486362126d64ce78e34e75e353c7473a5182e9a" translate="yes" xml:space="preserve">
          <source>You can only define an inherent implementation for a type in the same crate where the type was defined. For example, an &lt;code&gt;impl&lt;/code&gt; block as above is not allowed since &lt;code&gt;Vec&lt;/code&gt; is defined in the standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c186f63e5510473d9dc9b0dc2a5406c5f9eb96" translate="yes" xml:space="preserve">
          <source>You can only define an inherent implementation for a type in the same crate where the type was defined. For example, an &lt;code&gt;impl&lt;/code&gt; block as below is not allowed since &lt;code&gt;Vec&lt;/code&gt; is defined in the standard library:</source>
          <target state="translated">Solo puede definir una implementaci&amp;oacute;n inherente para un tipo en la misma caja donde se defini&amp;oacute; el tipo. Por ejemplo, un bloque &lt;code&gt;impl&lt;/code&gt; &amp;iacute;cito como se muestra a continuaci&amp;oacute;n no est&amp;aacute; permitido ya que &lt;code&gt;Vec&lt;/code&gt; est&amp;aacute; definido en la biblioteca est&amp;aacute;ndar:</target>
        </trans-unit>
        <trans-unit id="b467f8c108bab6da931f53e1d1208fd735b37f94" translate="yes" xml:space="preserve">
          <source>You can only implement &lt;code&gt;Copy&lt;/code&gt; for a struct or an enum. Both of the previous examples will fail, because neither &lt;code&gt;[u8; 256]&lt;/code&gt; nor &lt;code&gt;&amp;amp;'static mut Bar&lt;/code&gt; (mutable reference to &lt;code&gt;Bar&lt;/code&gt;) is a struct or enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c813be92d22e2d7b242da8356e7fcb13fc363191" translate="yes" xml:space="preserve">
          <source>You can only implement &lt;code&gt;Copy&lt;/code&gt; for a struct or enum. Both of the following examples will fail, because neither &lt;code&gt;[u8; 256]&lt;/code&gt; nor &lt;code&gt;&amp;amp;'static mut Bar&lt;/code&gt; (mutable reference to &lt;code&gt;Bar&lt;/code&gt;) is a struct or enum:</source>
          <target state="translated">Solo puede implementar &lt;code&gt;Copy&lt;/code&gt; para una estructura o enumeraci&amp;oacute;n. Los dos ejemplos siguientes fallar&amp;aacute;n, porque ni &lt;code&gt;[u8; 256]&lt;/code&gt; ni &lt;code&gt;&amp;amp;'static mut Bar&lt;/code&gt; (referencia mutable a &lt;code&gt;Bar&lt;/code&gt; ) es una estructura o enumeraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="21f8b607f72c57127cd998f4d58d658ea39f8468" translate="yes" xml:space="preserve">
          <source>You can only make &lt;em&gt;object-safe&lt;/em&gt; traits into trait objects. Some complex rules govern all the properties that make a trait object safe, but in practice, only two rules are relevant. A trait is object safe if all the methods defined in the trait have the following properties:</source>
          <target state="translated">Solo puede convertir rasgos &lt;em&gt;seguros&lt;/em&gt; para objetos en objetos de rasgos. Algunas reglas complejas gobiernan todas las propiedades que hacen que un objeto de rasgo sea seguro, pero en la pr&amp;aacute;ctica, solo dos reglas son relevantes. Un rasgo es seguro para objetos si todos los m&amp;eacute;todos definidos en el rasgo tienen las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="d710b72f224f5678a735cd21bec78fffa991073c" translate="yes" xml:space="preserve">
          <source>You can override any default setting by adding a different value for it in &lt;em&gt;Cargo.toml&lt;/em&gt;. For example, if we want to use optimization level 1 in the development profile, we can add these two lines to our project&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file:</source>
          <target state="translated">Puede anular cualquier configuraci&amp;oacute;n predeterminada agregando un valor diferente en &lt;em&gt;Cargo.toml&lt;/em&gt; . Por ejemplo, si queremos usar el nivel de optimizaci&amp;oacute;n 1 en el perfil de desarrollo, podemos agregar estas dos l&amp;iacute;neas al archivo &lt;em&gt;Cargo.toml de&lt;/em&gt; nuestro proyecto :</target>
        </trans-unit>
        <trans-unit id="1a0d0b5c07f4a3701b975bfae52379a7cc4a0a95" translate="yes" xml:space="preserve">
          <source>You can read more about cell types in the API documentation:</source>
          <target state="translated">Puedes leer más sobre los tipos de células en la documentación de la API:</target>
        </trans-unit>
        <trans-unit id="49f14d85beebdc2ce97fddebb0687041307b1cc2" translate="yes" xml:space="preserve">
          <source>You can read more about trait objects in the &lt;a href=&quot;reference/types#trait-objects&quot;&gt;Trait Objects&lt;/a&gt; section of the Reference.</source>
          <target state="translated">Puede leer m&amp;aacute;s sobre los objetos de rasgo en la secci&amp;oacute;n &lt;a href=&quot;reference/types#trait-objects&quot;&gt;Objetos de rasgo&lt;/a&gt; de la Referencia.</target>
        </trans-unit>
        <trans-unit id="9712625e55ae109f55059c67a65fb7d3fbaccdbb" translate="yes" xml:space="preserve">
          <source>You can read more in the API documentation for &lt;a href=&quot;std/cell/index&quot;&gt;Cell&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d319729d74877014e187c2ba127457ae956cdc" translate="yes" xml:space="preserve">
          <source>You can run the example one of two ways:</source>
          <target state="translated">Puedes ejecutar el ejemplo de dos maneras:</target>
        </trans-unit>
        <trans-unit id="63366b6e44f5163c78736c2914a78fd15427bd3a" translate="yes" xml:space="preserve">
          <source>You can see all of the &lt;em&gt;toolchains&lt;/em&gt; (releases of Rust and associated components) you have installed with &lt;code&gt;rustup&lt;/code&gt; as well. Here&amp;rsquo;s an example on one of your authors&amp;rsquo; Windows computer:</source>
          <target state="translated">Tambi&amp;eacute;n puede ver todas las &lt;em&gt;cadenas&lt;/em&gt; de &lt;em&gt;herramientas&lt;/em&gt; (versiones de Rust y componentes asociados) que ha instalado con &lt;code&gt;rustup&lt;/code&gt; . A continuaci&amp;oacute;n, se muestra un ejemplo en la computadora Windows de uno de sus autores:</target>
        </trans-unit>
        <trans-unit id="9ad8bdb0d1d5a61388700f692f73fc4d634ea4d8" translate="yes" xml:space="preserve">
          <source>You can see how primitive our server is: real libraries would handle the recognition of multiple requests in a much less verbose way!</source>
          <target state="translated">Puedes ver lo primitivo que es nuestro servidor:¡las bibliotecas reales manejarían el reconocimiento de múltiples peticiones de una manera mucho menos verbosa!</target>
        </trans-unit>
        <trans-unit id="ef181677ddc6f3265ea6a87f49632fa9f1210138" translate="yes" xml:space="preserve">
          <source>You can see that &lt;code&gt;if let&lt;/code&gt; can also introduce shadowed variables in the same way that &lt;code&gt;match&lt;/code&gt; arms can: the line &lt;code&gt;if let Ok(age) = age&lt;/code&gt; introduces a new shadowed &lt;code&gt;age&lt;/code&gt; variable that contains the value inside the &lt;code&gt;Ok&lt;/code&gt; variant. This means we need to place the &lt;code&gt;if age &amp;gt; 30&lt;/code&gt; condition within that block: we can&amp;rsquo;t combine these two conditions into &lt;code&gt;if let Ok(age) = age &amp;amp;&amp;amp; age &amp;gt; 30&lt;/code&gt;. The shadowed &lt;code&gt;age&lt;/code&gt; we want to compare to 30 isn&amp;rsquo;t valid until the new scope starts with the curly bracket.</source>
          <target state="translated">Puede ver que &lt;code&gt;if let&lt;/code&gt; tambi&amp;eacute;n puede introducir variables sombreadas de la misma manera que los brazos &lt;code&gt;match&lt;/code&gt; : la l&amp;iacute;nea &lt;code&gt;if let Ok(age) = age&lt;/code&gt; introduce una nueva variable de &lt;code&gt;age&lt;/code&gt; sombreada que contiene el valor dentro de la variante &lt;code&gt;Ok&lt;/code&gt; . Esto significa que debemos colocar la condici&amp;oacute;n &lt;code&gt;if age &amp;gt; 30&lt;/code&gt; dentro de ese bloque: no podemos combinar estas dos condiciones en &lt;code&gt;if let Ok(age) = age &amp;amp;&amp;amp; age &amp;gt; 30&lt;/code&gt; . La &lt;code&gt;age&lt;/code&gt; sombreada que queremos comparar con 30 no es v&amp;aacute;lida hasta que el nuevo alcance comienza con el corchete.</target>
        </trans-unit>
        <trans-unit id="6dac8a60a46917dc69183323e9ca6b9442311d9e" translate="yes" xml:space="preserve">
          <source>You can see that the second rule doesn&amp;rsquo;t apply because there is more than one input lifetime. The third rule doesn&amp;rsquo;t apply either, because &lt;code&gt;longest&lt;/code&gt; is a function rather than a method, so none of the parameters are &lt;code&gt;self&lt;/code&gt;. After working through all three rules, we still haven&amp;rsquo;t figured out what the return type&amp;rsquo;s lifetime is. This is why we got an error trying to compile the code in Listing 10-21: the compiler worked through the lifetime elision rules but still couldn&amp;rsquo;t figure out all the lifetimes of the references in the signature.</source>
          <target state="translated">Puede ver que la segunda regla no se aplica porque hay m&amp;aacute;s de una vida &amp;uacute;til de entrada. La tercera regla tampoco se aplica, porque &lt;code&gt;longest&lt;/code&gt; es una funci&amp;oacute;n en lugar de un m&amp;eacute;todo, por lo que ninguno de los par&amp;aacute;metros es &lt;code&gt;self&lt;/code&gt; . Despu&amp;eacute;s de trabajar con las tres reglas, todav&amp;iacute;a no hemos descubierto cu&amp;aacute;l es la vida &amp;uacute;til del tipo de devoluci&amp;oacute;n. Esta es la raz&amp;oacute;n por la que obtuvimos un error al intentar compilar el c&amp;oacute;digo en el Listado 10-21: el compilador trabaj&amp;oacute; con las reglas de elisi&amp;oacute;n de por vida pero a&amp;uacute;n no pudo calcular todas las vidas de las referencias en la firma.</target>
        </trans-unit>
        <trans-unit id="0e4d508ac715cc3acbfdf122afbf7b9a03cd0107" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; as being a bit like &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; but without any of the run-time tracking and without any of the safety checks.</source>
          <target state="translated">Puede pensar en &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; como algo parecido a &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; pero sin el seguimiento del tiempo de ejecuci&amp;oacute;n y sin ninguna de las comprobaciones de seguridad.</target>
        </trans-unit>
        <trans-unit id="1f606e05dadc0999f11ab48116c48743386a6126" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;flat_map(f)&lt;/code&gt; as the semantic equivalent of &lt;a href=&quot;#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;ping, and then &lt;a href=&quot;#method.flatten&quot;&gt;&lt;code&gt;flatten&lt;/code&gt;&lt;/a&gt;ing as in &lt;code&gt;map(f).flatten()&lt;/code&gt;.</source>
          <target state="translated">Puede pensar en &lt;code&gt;flat_map(f)&lt;/code&gt; como el equivalente sem&amp;aacute;ntico de &lt;a href=&quot;#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; ping, y luego &lt;a href=&quot;#method.flatten&quot;&gt; &lt;code&gt;flatten&lt;/code&gt; &lt;/a&gt; como en &lt;code&gt;map(f).flatten()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a9642a3aa6b0d4f644c74448c6eb12a20876d4a" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;flat_map(f)&lt;/code&gt; as the semantic equivalent of &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;ping, and then &lt;a href=&quot;trait.iterator#method.flatten&quot;&gt;&lt;code&gt;flatten&lt;/code&gt;&lt;/a&gt;ing as in &lt;code&gt;map(f).flatten()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b8c98aafd60cb333f24479704313af8e17f2d7" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;struct.pathbuf#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to build up a &lt;code&gt;PathBuf&lt;/code&gt; from components:</source>
          <target state="translated">Puede usar &lt;a href=&quot;struct.pathbuf#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; para construir un &lt;code&gt;PathBuf&lt;/code&gt; a partir de componentes:</target>
        </trans-unit>
        <trans-unit id="79c504057bc14c1c72ecffa07908c9acfa0c3808" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; to implement &quot;out-pointers&quot;: instead of returning data from a function, pass it a pointer to some (uninitialized) memory to put the result into. This can be useful when it is important for the caller to control how the memory the result is stored in gets allocated, and you want to avoid unnecessary moves.</source>
          <target state="translated">Puede usar &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; para implementar &quot;punteros externos &quot;: en lugar de devolver datos de una funci&amp;oacute;n, p&amp;aacute;selo un puntero a alguna memoria (no inicializada) para colocar el resultado. Esto puede ser &amp;uacute;til cuando es importante que la persona que llama controle c&amp;oacute;mo se asigna la memoria en la que se almacena el resultado, y desea evitar movimientos innecesarios.</target>
        </trans-unit>
        <trans-unit id="f06b12f9f33805451b03aa1619046a91b1f0fea9" translate="yes" xml:space="preserve">
          <source>You can use a &lt;a href=&quot;../reference/patterns#slice-patterns&quot;&gt;slice pattern&lt;/a&gt; to move elements out of an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ef701adf9c3ff21ed219e1e0f0ea149a4acfce" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;repr&lt;/code&gt; attribute to tell the compiler how you want a struct or enum to be laid out in memory.</source>
          <target state="translated">Puede usar un atributo &lt;code&gt;repr&lt;/code&gt; para decirle al compilador c&amp;oacute;mo desea que se establezca una estructura o enumeraci&amp;oacute;n en la memoria.</target>
        </trans-unit>
        <trans-unit id="1b34b5e340a342b7c6e66a1c66e9ad2f86e01083" translate="yes" xml:space="preserve">
          <source>You can use a slice pattern to move elements out of an array:</source>
          <target state="translated">Puedes usar un patrón de rebanadas para mover elementos de una matriz:</target>
        </trans-unit>
        <trans-unit id="8525d6891c1f3e5f989dbf3ba87c59b3e77658c4" translate="yes" xml:space="preserve">
          <source>You can use aliases in order to fix this error. Example:</source>
          <target state="translated">Puedes usar alias para arreglar este error.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="fc67eb4f6c079f25d4b841983f28617d8c247116" translate="yes" xml:space="preserve">
          <source>You can use code specified in a &lt;code&gt;Drop&lt;/code&gt; trait implementation in many ways to make cleanup convenient and safe: for instance, you could use it to create your own memory allocator! With the &lt;code&gt;Drop&lt;/code&gt; trait and Rust&amp;rsquo;s ownership system, you don&amp;rsquo;t have to remember to clean up because Rust does it automatically.</source>
          <target state="translated">Puede usar el c&amp;oacute;digo especificado en una implementaci&amp;oacute;n de rasgo &lt;code&gt;Drop&lt;/code&gt; de muchas maneras para que la limpieza sea conveniente y segura: por ejemplo, &amp;iexcl;podr&amp;iacute;a usarlo para crear su propio asignador de memoria! Con el rasgo &lt;code&gt;Drop&lt;/code&gt; y el sistema de propiedad de Rust, no tienes que acordarte de limpiar porque Rust lo hace autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="4f312fe97d3268cd00fae0b76a4dae32c526dd97" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#method.as_os_str&quot;&gt;&lt;code&gt;as_os_str&lt;/code&gt;&lt;/a&gt; method to get an &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; from an &lt;code&gt;OsString&lt;/code&gt;; this is effectively a borrowed reference to the whole string.</source>
          <target state="translated">Puede utilizar el m&amp;eacute;todo &lt;a href=&quot;#method.as_os_str&quot;&gt; &lt;code&gt;as_os_str&lt;/code&gt; &lt;/a&gt; para obtener un &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; de un &lt;code&gt;OsString&lt;/code&gt; ; esta es efectivamente una referencia prestada a toda la cadena.</target>
        </trans-unit>
        <trans-unit id="1323a49e0cb97eec61d0dde3434ccf676cf86d24" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;fmt/struct.arguments&quot;&gt;&lt;code&gt;fmt::Arguments&lt;/code&gt;&lt;/a&gt; value that &lt;code&gt;format_args!&lt;/code&gt; returns in &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; contexts as seen below. The example also shows that &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; format to the same thing: the interpolated format string in &lt;code&gt;format_args!&lt;/code&gt;.</source>
          <target state="translated">Puede usar el valor &lt;a href=&quot;fmt/struct.arguments&quot;&gt; &lt;code&gt;fmt::Arguments&lt;/code&gt; &lt;/a&gt; que &lt;code&gt;format_args!&lt;/code&gt; devuelve en contextos de &lt;code&gt;Debug&lt;/code&gt; y &lt;code&gt;Display&lt;/code&gt; como se ve a continuaci&amp;oacute;n. El ejemplo tambi&amp;eacute;n muestra que los formatos &lt;code&gt;Debug&lt;/code&gt; y &lt;code&gt;Display&lt;/code&gt; son lo mismo: &amp;iexcl;la cadena de formato interpolada en &lt;code&gt;format_args!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa54acb48af4602e2f37053a7c14e129065a9bd7" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;struct.osstring#method.as_os_str&quot;&gt;&lt;code&gt;OsString::as_os_str&lt;/code&gt;&lt;/a&gt; method to get an &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; from an &lt;code&gt;OsString&lt;/code&gt;; this is effectively a borrowed reference to the whole string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f9328d191cf1a4e8041c2b20ff6e3d44a4dd7e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;Arguments&amp;lt;'a&amp;gt;&lt;/code&gt; that &lt;a href=&quot;../macro.format_args&quot;&gt;&lt;code&gt;format_args!&lt;/code&gt;&lt;/a&gt; returns in &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; contexts as seen below. The example also shows that &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; format to the same thing: the interpolated format string in &lt;code&gt;format_args!&lt;/code&gt;.</source>
          <target state="translated">Puede usar los &lt;code&gt;Arguments&amp;lt;'a&amp;gt;&lt;/code&gt; que &lt;a href=&quot;../macro.format_args&quot;&gt; &lt;code&gt;format_args!&lt;/code&gt; &lt;/a&gt;devuelve en contextos de &lt;code&gt;Debug&lt;/code&gt; y &lt;code&gt;Display&lt;/code&gt; como se ve a continuaci&amp;oacute;n. El ejemplo tambi&amp;eacute;n muestra que los formatos &lt;code&gt;Debug&lt;/code&gt; y &lt;code&gt;Display&lt;/code&gt; son lo mismo: &amp;iexcl;la cadena de formato interpolada en &lt;code&gt;format_args!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0d2c3ab842592962de40df3105ee889292b2624" translate="yes" xml:space="preserve">
          <source>You can write integer literals in any of the forms shown in Table 3-2. Note that all number literals except the byte literal allow a type suffix, such as &lt;code&gt;57u8&lt;/code&gt;, and &lt;code&gt;_&lt;/code&gt; as a visual separator, such as &lt;code&gt;1_000&lt;/code&gt;.</source>
          <target state="translated">Puede escribir literales enteros en cualquiera de las formas que se muestran en la Tabla 3-2. Tenga en cuenta que todos los literales num&amp;eacute;ricos excepto el literal de bytes permiten un sufijo de tipo, como &lt;code&gt;57u8&lt;/code&gt; , y &lt;code&gt;_&lt;/code&gt; como separador visual, como &lt;code&gt;1_000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e3a6a5d5ad9495618c32d7df9601c8b0c36186e" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use the &lt;code&gt;#[should_panic]&lt;/code&gt; annotation on tests that use &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;. Instead, you should return an &lt;code&gt;Err&lt;/code&gt; value directly when the test should fail.</source>
          <target state="translated">No puede usar la anotaci&amp;oacute;n &lt;code&gt;#[should_panic]&lt;/code&gt; en pruebas que usan &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; . En su lugar, debe devolver un valor &lt;code&gt;Err&lt;/code&gt; directamente cuando la prueba falle.</target>
        </trans-unit>
        <trans-unit id="68b6d283a51fc88197c307fe06aa87e325990277" translate="yes" xml:space="preserve">
          <source>You can't import a type or module when the name of the item being imported is the same as another type or submodule defined in the module.</source>
          <target state="translated">No se puede importar un tipo o módulo cuando el nombre del artículo que se está importando es el mismo que el de otro tipo o submódulo definido en el módulo.</target>
        </trans-unit>
        <trans-unit id="f50f1788e3104b1887e0fe5929d8e14061698fab" translate="yes" xml:space="preserve">
          <source>You can't import a value whose name is the same as another value defined in the module.</source>
          <target state="translated">No se puede importar un valor cuyo nombre sea igual a otro valor definido en el módulo.</target>
        </trans-unit>
        <trans-unit id="9a643c6311bbc95c59da6d6b04e51680a574a830" translate="yes" xml:space="preserve">
          <source>You can't use type or const parameters on foreign items. Example of erroneous code:</source>
          <target state="translated">No se pueden utilizar parámetros de tipo o constancia en los artículos extranjeros.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="eeb5e1b278da97fda2cc8bf3325f0cdbbec2f73d" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;Drop::drop&lt;/code&gt; yourself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe58ca7fd87be4f97f1122198ed215b1d16ba8fe" translate="yes" xml:space="preserve">
          <source>You cannot define a struct (or enum) &lt;code&gt;Foo&lt;/code&gt; that requires an instance of &lt;code&gt;Foo&lt;/code&gt; in order to make a new &lt;code&gt;Foo&lt;/code&gt; value. This is because there would be no way a first instance of &lt;code&gt;Foo&lt;/code&gt; could be made to initialize another instance!</source>
          <target state="translated">No puede definir una estructura (o enumeraci&amp;oacute;n) &lt;code&gt;Foo&lt;/code&gt; que requiera una instancia de &lt;code&gt;Foo&lt;/code&gt; para crear un nuevo valor de &lt;code&gt;Foo&lt;/code&gt; . &amp;iexcl;Esto se debe a que no habr&amp;iacute;a forma de que se pudiera hacer una primera instancia de &lt;code&gt;Foo&lt;/code&gt; para inicializar otra instancia!</target>
        </trans-unit>
        <trans-unit id="1777ac4e29f5cc4458b21aa65a1d164c32783aad" translate="yes" xml:space="preserve">
          <source>You cannot implement both &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Drop&lt;/code&gt; on the same type. Types that are &lt;code&gt;Copy&lt;/code&gt; get implicitly duplicated by the compiler, making it very hard to predict when, and how often destructors will be executed. As such, these types cannot have destructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d56e44b75bd82612a5c898ab88640b149ae542f" translate="yes" xml:space="preserve">
          <source>You cannot import the current module into itself, please remove this import or verify you didn't misspell it.</source>
          <target state="translated">No puede importar el módulo actual en sí mismo,por favor,elimine esta importación o verifique que no lo haya escrito mal.</target>
        </trans-unit>
        <trans-unit id="9637aa7070b2e9b906188f375ead424b0ed1d4bf" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;.assume_init_mut()&lt;/code&gt; to initialize a value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4886cf84f3f70749a96d8b14082b6bb665ea1eb" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;packed&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt; hints on a same type. If you want to pack a type to a given size, you should provide a size to packed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e29ffbaea7cbfa903117ea4f8c302e21bcc69bf" translate="yes" xml:space="preserve">
          <source>You cannot use conflicting &lt;code&gt;packed&lt;/code&gt; hints on a same type. If you want to pack a type to a given size, you should provide a size to packed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e46b0f9b1886a75845894deaafd475e2954540" translate="yes" xml:space="preserve">
          <source>You cannot use type or const parameters on foreign items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8026aeec168d950d49b1d853d7fb5eccbde596" translate="yes" xml:space="preserve">
          <source>You choose inheritance for two main reasons. One is for reuse of code: you can implement particular behavior for one type, and inheritance enables you to reuse that implementation for a different type. You can share Rust code using default trait method implementations instead, which you saw in Listing 10-14 when we added a default implementation of the &lt;code&gt;summarize&lt;/code&gt; method on the &lt;code&gt;Summary&lt;/code&gt; trait. Any type implementing the &lt;code&gt;Summary&lt;/code&gt; trait would have the &lt;code&gt;summarize&lt;/code&gt; method available on it without any further code. This is similar to a parent class having an implementation of a method and an inheriting child class also having the implementation of the method. We can also override the default implementation of the &lt;code&gt;summarize&lt;/code&gt; method when we implement the &lt;code&gt;Summary&lt;/code&gt; trait, which is similar to a child class overriding the implementation of a method inherited from a parent class.</source>
          <target state="translated">Eliges la herencia por dos razones principales. Uno es para la reutilizaci&amp;oacute;n de c&amp;oacute;digo: puede implementar un comportamiento particular para un tipo y la herencia le permite reutilizar esa implementaci&amp;oacute;n para un tipo diferente. En su lugar, puede compartir el c&amp;oacute;digo de Rust utilizando implementaciones de m&amp;eacute;todos de rasgos predeterminados, que vio en el Listado 10-14 cuando agregamos una implementaci&amp;oacute;n predeterminada del m&amp;eacute;todo de &lt;code&gt;summarize&lt;/code&gt; en el rasgo &lt;code&gt;Summary&lt;/code&gt; . Cualquier tipo que implemente el rasgo &lt;code&gt;Summary&lt;/code&gt; tendr&amp;iacute;a disponible el m&amp;eacute;todo de &lt;code&gt;summarize&lt;/code&gt; sin ning&amp;uacute;n c&amp;oacute;digo adicional. Esto es similar a una clase principal que tiene una implementaci&amp;oacute;n de un m&amp;eacute;todo y una clase secundaria heredada que tambi&amp;eacute;n tiene la implementaci&amp;oacute;n del m&amp;eacute;todo. Tambi&amp;eacute;n podemos anular la implementaci&amp;oacute;n predeterminada del &lt;code&gt;summarize&lt;/code&gt; cuando implementamos el rasgo de &lt;code&gt;Summary&lt;/code&gt; , que es similar a una clase secundaria que anula la implementaci&amp;oacute;n de un m&amp;eacute;todo heredado de una clase principal.</target>
        </trans-unit>
        <trans-unit id="6eab2426d653eb63791cf922c9fd68c2cf3cc300" translate="yes" xml:space="preserve">
          <source>You could use the &lt;code&gt;while&lt;/code&gt; construct to loop over the elements of a collection, such as an array. For example, let&amp;rsquo;s look at Listing 3-4.</source>
          <target state="translated">Se podr&amp;iacute;a utilizar el &lt;code&gt;while&lt;/code&gt; constructo de bucle a trav&amp;eacute;s de los elementos de una colecci&amp;oacute;n, como una matriz. Por ejemplo, veamos el Listado 3-4.</target>
        </trans-unit>
        <trans-unit id="86305ea7dfbd655b97c9fe7b48a6cfa736ccdc12" translate="yes" xml:space="preserve">
          <source>You declare constants using the &lt;code&gt;const&lt;/code&gt; keyword instead of the &lt;code&gt;let&lt;/code&gt; keyword, and the type of the value &lt;em&gt;must&lt;/em&gt; be annotated. We&amp;rsquo;re about to cover types and type annotations in the next section, &lt;a href=&quot;ch03-02-data-types#data-types&quot;&gt;&amp;ldquo;Data Types,&amp;rdquo;&lt;/a&gt; so don&amp;rsquo;t worry about the details right now. Just know that you must always annotate the type.</source>
          <target state="translated">Declaras constantes usando la palabra clave &lt;code&gt;const&lt;/code&gt; en lugar de la palabra clave &lt;code&gt;let&lt;/code&gt; , y el tipo de valor &lt;em&gt;debe&lt;/em&gt; anotarse. Estamos a punto de cubrir los tipos y las anotaciones de tipo en la siguiente secci&amp;oacute;n, &lt;a href=&quot;ch03-02-data-types#data-types&quot;&gt;&quot;Tipos de datos&quot;,&lt;/a&gt; as&amp;iacute; que no se preocupe por los detalles en este momento. Solo sepa que siempre debe anotar el tipo.</target>
        </trans-unit>
        <trans-unit id="d26c982256875ef965abb7ff2a9ae7d6d8262fa1" translate="yes" xml:space="preserve">
          <source>You declared a pattern as an argument in a foreign function declaration. Erroneous code example:</source>
          <target state="translated">Usted declaró un patrón como argumento en una declaración de función extranjera.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="3042e33d1a35dfe59f3b5a52b534fe5ccd3ab130" translate="yes" xml:space="preserve">
          <source>You declared an unknown intrinsic function. Erroneous code example:</source>
          <target state="translated">Declaró una función intrínseca desconocida.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="209c4b82ebb79e610fb7da013287d442d9de7ccc" translate="yes" xml:space="preserve">
          <source>You declared two fields of a struct with the same name. Erroneous code example:</source>
          <target state="translated">Declaraste dos campos de una estructura con el mismo nombre.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="5681291083d07044a63476be05813904d873a94e" translate="yes" xml:space="preserve">
          <source>You gave an invalid number of type parameters to an intrinsic function. Erroneous code example:</source>
          <target state="translated">Le diste un número inválido de parámetros de tipo a una función intrínseca.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="73e529ed83de9dd32d08048f27abd6e18e54d03b" translate="yes" xml:space="preserve">
          <source>You gave an unnecessary type or const parameter in a type alias. Erroneous code example:</source>
          <target state="translated">Le diste un parámetro innecesario de tipo o constante en un alias de tipo.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="ef290be095bc0ac42be01bd488ced06e1f432faa" translate="yes" xml:space="preserve">
          <source>You gave too few lifetime arguments. Example:</source>
          <target state="translated">Diste muy pocos argumentos de por vida.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="3a992fb3e33f43f550919aa8e7cbe12bdd71799a" translate="yes" xml:space="preserve">
          <source>You gave too many lifetime arguments. Erroneous code example:</source>
          <target state="translated">Diste demasiadas discusiones de por vida.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="803a897636a53ddcd87076d162300ffab0d90307" translate="yes" xml:space="preserve">
          <source>You have to provide the same number of arguments as expected by the &lt;code&gt;Fn&lt;/code&gt;-based type. So to fix the previous example, we need to remove the &lt;code&gt;y&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8cdc3f699d29b35f63008d1337b75507d28ea4" translate="yes" xml:space="preserve">
          <source>You have two solutions:</source>
          <target state="translated">Tienes dos soluciones:</target>
        </trans-unit>
        <trans-unit id="9dce30760c2f61bac673b91333250ea52ecff835" translate="yes" xml:space="preserve">
          <source>You implemented a trait, overriding one or more of its associated types but did not reimplement its default methods.</source>
          <target state="translated">Usted implementó un rasgo,anulando uno o más de sus tipos asociados pero no reimplementó sus métodos por defecto.</target>
        </trans-unit>
        <trans-unit id="ca3b4cf5422aeae2f92f99806820d8c1b575cccd" translate="yes" xml:space="preserve">
          <source>You just want a set.</source>
          <target state="translated">Sólo quieres un juego.</target>
        </trans-unit>
        <trans-unit id="693a8bb9813bf36c49860217c46ff78a91bebee4" translate="yes" xml:space="preserve">
          <source>You just want to remember which keys you've seen.</source>
          <target state="translated">Sólo quieres recordar qué llaves has visto.</target>
        </trans-unit>
        <trans-unit id="6267968ef88afc721ff532c17b0b60cff2c548da" translate="yes" xml:space="preserve">
          <source>You made it! That was a sizable chapter: you learned about variables, scalar and compound data types, functions, comments, &lt;code&gt;if&lt;/code&gt; expressions, and loops! If you want to practice with the concepts discussed in this chapter, try building programs to do the following:</source>
          <target state="translated">&amp;iexcl;Lo hiciste! Ese fue un cap&amp;iacute;tulo considerable: aprendi&amp;oacute; sobre variables, tipos de datos escalares y compuestos, funciones, comentarios, expresiones &lt;code&gt;if&lt;/code&gt; y bucles. Si desea practicar con los conceptos discutidos en este cap&amp;iacute;tulo, intente crear programas para hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="a810a482c6e2364071a3fb83cc7555c0141460f5" translate="yes" xml:space="preserve">
          <source>You may also &lt;code&gt;impl Unpin for Struct&lt;/code&gt;&lt;em&gt;even if&lt;/em&gt; the type of &lt;code&gt;field&lt;/code&gt; is not &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt;. What that type thinks about pinning is not relevant when no &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut Field&amp;gt;&lt;/code&gt; is ever created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0326a4d7280cc9445cf9fc933301360c8002c40d" translate="yes" xml:space="preserve">
          <source>You may also &lt;code&gt;impl Unpin for Struct&lt;/code&gt;&lt;em&gt;even if&lt;/em&gt; the type of &lt;code&gt;field&lt;/code&gt; is not &lt;code&gt;Unpin&lt;/code&gt;. What that type thinks about pinning is not relevant when no &lt;code&gt;Pin&amp;lt;&amp;amp;mut Field&amp;gt;&lt;/code&gt; is ever created.</source>
          <target state="translated">Tambi&amp;eacute;n puede &lt;code&gt;impl Unpin for Struct&lt;/code&gt; &lt;em&gt;incluso si&lt;/em&gt; el tipo de &lt;code&gt;field&lt;/code&gt; no es &lt;code&gt;Unpin&lt;/code&gt; . Lo que ese tipo piensa sobre la fijaci&amp;oacute;n no es relevante cuando no se crea ning&amp;uacute;n &lt;code&gt;Pin&amp;lt;&amp;amp;mut Field&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82783799f040a1f0f2e1bb96aee818324cd7928d" translate="yes" xml:space="preserve">
          <source>You may also find it useful to use &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;&lt;code&gt;partial_cmp&lt;/code&gt;&lt;/a&gt; on your type's fields. Here is an example of &lt;code&gt;Person&lt;/code&gt; types who have a floating-point &lt;code&gt;height&lt;/code&gt; field that is the only field to be used for sorting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d25bc5acf2f68b706c37dcc13c39607795d6a9f" translate="yes" xml:space="preserve">
          <source>You may also find it useful to use &lt;code&gt;partial_cmp()&lt;/code&gt; on your type's fields. Here is an example of &lt;code&gt;Person&lt;/code&gt; types who have a floating-point &lt;code&gt;height&lt;/code&gt; field that is the only field to be used for sorting:</source>
          <target state="translated">Tambi&amp;eacute;n puede resultarle &amp;uacute;til utilizar &lt;code&gt;partial_cmp()&lt;/code&gt; en los campos de su tipo. A continuaci&amp;oacute;n, se muestra un ejemplo de tipos de &lt;code&gt;Person&lt;/code&gt; que tienen un campo de &lt;code&gt;height&lt;/code&gt; punto flotante que es el &amp;uacute;nico campo que se utiliza para ordenar:</target>
        </trans-unit>
        <trans-unit id="cb2b627de2d8f77ac852c488f122afb35b75e986" translate="yes" xml:space="preserve">
          <source>You may see different version numbers (but they will all be compatible with the code, thanks to SemVer!), and the lines may be in a different order.</source>
          <target state="translated">Puede que veas diferentes números de versión (pero todos serán compatibles con el código,¡gracias a SemVer!),y las líneas pueden estar en un orden diferente.</target>
        </trans-unit>
        <trans-unit id="47e1847886b9455bc7d7587982097dfaef75fc27" translate="yes" xml:space="preserve">
          <source>You may see different version numbers (but they will all be compatible with the code, thanks to SemVer!), different lines (depending on the operating system), and the lines may be in a different order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aea23757c2d4ea05f9bc0b624b6a983479b8d23" translate="yes" xml:space="preserve">
          <source>You may want to use &lt;a href=&quot;struct.builder#method.spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;fn.spawn&quot;&gt;&lt;code&gt;thread::spawn&lt;/code&gt;&lt;/a&gt;, when you want to recover from a failure to launch a thread, indeed the free function will panic where the &lt;code&gt;Builder&lt;/code&gt; method will return a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Es posible que desee utilizar &lt;a href=&quot;struct.builder#method.spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; en&lt;/a&gt; lugar de &lt;a href=&quot;fn.spawn&quot;&gt; &lt;code&gt;thread::spawn&lt;/code&gt; &lt;/a&gt; , cuando desee recuperarse de una falla al iniciar un hilo, de hecho, la funci&amp;oacute;n gratuita entrar&amp;aacute; en p&amp;aacute;nico cuando el m&amp;eacute;todo &lt;code&gt;Builder&lt;/code&gt; devolver&amp;aacute; un &lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e857d3e6ddaa2784fb36ba6a569dbc89bbcf9c2c" translate="yes" xml:space="preserve">
          <source>You might also simply assert success:</source>
          <target state="translated">También podrías simplemente afirmar el éxito:</target>
        </trans-unit>
        <trans-unit id="8a5b03ac5680c5c24b01fe4d462d228134c39012" translate="yes" xml:space="preserve">
          <source>You might be interested in visiting the &lt;a href=&quot;https://rust-lang.github.io/async-book/07_workarounds/06_async_in_traits.html&quot;&gt;async book&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411fd9c69aaa84add9fa6a1d184d14bbf20a0535" translate="yes" xml:space="preserve">
          <source>You might be wondering whether there is a runtime cost when you&amp;rsquo;re using generic type parameters. The good news is that Rust implements generics in such a way that your code doesn&amp;rsquo;t run any slower using generic types than it would with concrete types.</source>
          <target state="translated">Es posible que se pregunte si hay un costo de tiempo de ejecuci&amp;oacute;n cuando usa par&amp;aacute;metros de tipo gen&amp;eacute;rico. La buena noticia es que Rust implementa gen&amp;eacute;ricos de tal manera que su c&amp;oacute;digo no se ejecuta m&amp;aacute;s lento usando tipos gen&amp;eacute;ricos de lo que lo har&amp;iacute;a con tipos concretos.</target>
        </trans-unit>
        <trans-unit id="3ebcb4010913957f86a0d23be72d6863ae7ba24e" translate="yes" xml:space="preserve">
          <source>You might change it to:</source>
          <target state="translated">Podrías cambiarlo a:</target>
        </trans-unit>
        <trans-unit id="196ac9c5351705e1e9d296402ef15022404587af" translate="yes" xml:space="preserve">
          <source>You might have noticed that &lt;code&gt;counter&lt;/code&gt; is immutable but we could get a mutable reference to the value inside it; this means &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; provides interior mutability, as the &lt;code&gt;Cell&lt;/code&gt; family does. In the same way we used &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; in Chapter 15 to allow us to mutate contents inside an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, we use &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; to mutate contents inside an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Es posible que haya notado que el &lt;code&gt;counter&lt;/code&gt; es inmutable, pero podr&amp;iacute;amos obtener una referencia mutable al valor dentro de &amp;eacute;l; esto significa que &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; proporciona mutabilidad interior, como lo hace la familia &lt;code&gt;Cell&lt;/code&gt; . De la misma manera que usamos &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; en el Cap&amp;iacute;tulo 15 para permitirnos mutar contenidos dentro de un &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; , usamos &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; para mutar contenidos dentro de un &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81ed339c6506ce76f125fbadee32187bafce0758" translate="yes" xml:space="preserve">
          <source>You might have noticed that we&amp;rsquo;re calling &lt;code&gt;unwrap&lt;/code&gt; to cause the &lt;code&gt;hello_macro_derive&lt;/code&gt; function to panic if the call to the &lt;code&gt;syn::parse&lt;/code&gt; function fails here. It&amp;rsquo;s necessary for our procedural macro to panic on errors because &lt;code&gt;proc_macro_derive&lt;/code&gt; functions must return &lt;code&gt;TokenStream&lt;/code&gt; rather than &lt;code&gt;Result&lt;/code&gt; to conform to the procedural macro API. We&amp;rsquo;ve simplified this example by using &lt;code&gt;unwrap&lt;/code&gt;; in production code, you should provide more specific error messages about what went wrong by using &lt;code&gt;panic!&lt;/code&gt; or &lt;code&gt;expect&lt;/code&gt;.</source>
          <target state="translated">Es posible que haya notado que estamos llamando a &lt;code&gt;unwrap&lt;/code&gt; para hacer que la funci&amp;oacute;n &lt;code&gt;hello_macro_derive&lt;/code&gt; entre en p&amp;aacute;nico si la llamada a la funci&amp;oacute;n &lt;code&gt;syn::parse&lt;/code&gt; falla aqu&amp;iacute;. Es necesario que nuestra macro de procedimiento entre en p&amp;aacute;nico ante los errores porque &lt;code&gt;proc_macro_derive&lt;/code&gt; funciones proc_macro_derive deben devolver &lt;code&gt;TokenStream&lt;/code&gt; en lugar de &lt;code&gt;Result&lt;/code&gt; para ajustarse a la API de macro de procedimiento. Hemos simplificado este ejemplo usando &lt;code&gt;unwrap&lt;/code&gt; ; en el c&amp;oacute;digo de producci&amp;oacute;n, debe proporcionar mensajes de error m&amp;aacute;s espec&amp;iacute;ficos sobre lo que sali&amp;oacute; mal al usar &lt;code&gt;panic!&lt;/code&gt; o &lt;code&gt;expect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4c72451ecb185d797de897da475849b8f847ffa" translate="yes" xml:space="preserve">
          <source>You might instead, if you don't want to handle the error, simply assert success with &lt;a href=&quot;enum.result#method.expect&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt;. This will panic if the write fails, providing a marginally useful message indicating why:</source>
          <target state="translated">En cambio, si no desea manejar el error, podr&amp;iacute;a simplemente afirmar el &amp;eacute;xito con la &lt;a href=&quot;enum.result#method.expect&quot;&gt; &lt;code&gt;expect&lt;/code&gt; ativa&lt;/a&gt; . Esto entrar&amp;aacute; en p&amp;aacute;nico si la escritura falla, proporcionando un mensaje marginalmente &amp;uacute;til que indica por qu&amp;eacute;:</target>
        </trans-unit>
        <trans-unit id="6589cc6edb23f47a96ff9516937ce21a834273d2" translate="yes" xml:space="preserve">
          <source>You might see a different ordering of workers and messages printed. We can see how this code works from the messages: workers 0 and 3 got the first two requests, and then on the third request, the server stopped accepting connections. When the &lt;code&gt;ThreadPool&lt;/code&gt; goes out of scope at the end of &lt;code&gt;main&lt;/code&gt;, its &lt;code&gt;Drop&lt;/code&gt; implementation kicks in, and the pool tells all workers to terminate. The workers each print a message when they see the terminate message, and then the thread pool calls &lt;code&gt;join&lt;/code&gt; to shut down each worker thread.</source>
          <target state="translated">Es posible que vea un orden diferente de trabajadores y mensajes impresos. Podemos ver c&amp;oacute;mo funciona este c&amp;oacute;digo a partir de los mensajes: los trabajadores 0 y 3 recibieron las dos primeras solicitudes, y luego, en la tercera solicitud, el servidor dej&amp;oacute; de aceptar conexiones. Cuando &lt;code&gt;ThreadPool&lt;/code&gt; sale del alcance al final de &lt;code&gt;main&lt;/code&gt; , su implementaci&amp;oacute;n &lt;code&gt;Drop&lt;/code&gt; se activa y el grupo les dice a todos los trabajadores que terminen. Cada uno de los trabajadores imprime un mensaje cuando ven el mensaje de terminaci&amp;oacute;n, y luego las llamadas del grupo de subprocesos se &lt;code&gt;join&lt;/code&gt; para cerrar cada subproceso de trabajo.</target>
        </trans-unit>
        <trans-unit id="c72b034ac7dca22dec808c9cf485588e7fbd8ad5" translate="yes" xml:space="preserve">
          <source>You might see suggestions to use the &lt;code&gt;'static&lt;/code&gt; lifetime in error messages. But before specifying &lt;code&gt;'static&lt;/code&gt; as the lifetime for a reference, think about whether the reference you have actually lives the entire lifetime of your program or not. You might consider whether you want it to live that long, even if it could. Most of the time, the problem results from attempting to create a dangling reference or a mismatch of the available lifetimes. In such cases, the solution is fixing those problems, not specifying the &lt;code&gt;'static&lt;/code&gt; lifetime.</source>
          <target state="translated">Es posible que vea sugerencias para usar la &lt;code&gt;'static&lt;/code&gt; vida &amp;uacute;til est&amp;aacute;tica en los mensajes de error. Pero antes de especificar &lt;code&gt;'static&lt;/code&gt; como la vida &amp;uacute;til de una referencia, piense si la referencia que tiene realmente dura toda la vida &amp;uacute;til de su programa o no. Podr&amp;iacute;a considerar si quiere que viva tanto tiempo, incluso si pudiera. La mayor&amp;iacute;a de las veces, el problema surge al intentar crear una referencia pendiente o una falta de coincidencia de las vidas disponibles. En tales casos, la soluci&amp;oacute;n es solucionar esos problemas, no especificar la &lt;code&gt;'static&lt;/code&gt; vida &amp;uacute;til est&amp;aacute;tica' .</target>
        </trans-unit>
        <trans-unit id="63505ed6c9546f58e904a69b503f70f3b2975d65" translate="yes" xml:space="preserve">
          <source>You might see the values in another order; it depends on your system. This is what makes concurrency interesting as well as difficult. If you experiment with &lt;code&gt;thread::sleep&lt;/code&gt;, giving it various values in the different threads, each run will be more nondeterministic and create different output each time.</source>
          <target state="translated">Es posible que vea los valores en otro orden; depende de su sistema. Esto es lo que hace que la concurrencia sea interesante y dif&amp;iacute;cil. Si experimentas con &lt;code&gt;thread::sleep&lt;/code&gt; , d&amp;aacute;ndole varios valores en los diferentes hilos, cada ejecuci&amp;oacute;n ser&amp;aacute; m&amp;aacute;s no determinista y crear&amp;aacute; una salida diferente cada vez.</target>
        </trans-unit>
        <trans-unit id="6a1d43c5cc821b3a1e73ff53937e14c370178589" translate="yes" xml:space="preserve">
          <source>You might then wonder why all primitive types aren&amp;rsquo;t atomic and why standard library types aren&amp;rsquo;t implemented to use &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; by default. The reason is that thread safety comes with a performance penalty that you only want to pay when you really need to. If you&amp;rsquo;re just performing operations on values within a single thread, your code can run faster if it doesn&amp;rsquo;t have to enforce the guarantees atomics provide.</source>
          <target state="translated">Entonces podr&amp;iacute;a preguntarse por qu&amp;eacute; todos los tipos primitivos no son at&amp;oacute;micos y por qu&amp;eacute; los tipos de bibliotecas est&amp;aacute;ndar no se implementan para usar &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; de forma predeterminada. La raz&amp;oacute;n es que la seguridad de los subprocesos viene con una penalizaci&amp;oacute;n en el rendimiento que solo desea pagar cuando realmente lo necesita. Si solo est&amp;aacute; realizando operaciones en valores dentro de un solo hilo, su c&amp;oacute;digo puede ejecutarse m&amp;aacute;s r&amp;aacute;pido si no tiene que hacer cumplir las garant&amp;iacute;as que brindan los atomics.</target>
        </trans-unit>
        <trans-unit id="cd9251bb8badf33b5b3088f99faa91186c094eff" translate="yes" xml:space="preserve">
          <source>You must attempt to acquire the lock before using the data.</source>
          <target state="translated">Debe intentar adquirir la cerradura antes de usar los datos.</target>
        </trans-unit>
        <trans-unit id="9536b11b39bc18d7e4dff7bde20e1ea4be153f1d" translate="yes" xml:space="preserve">
          <source>You must enforce Rust's aliasing rules, since the returned lifetime &lt;code&gt;'a&lt;/code&gt; is arbitrarily chosen and does not necessarily reflect the actual lifetime of the data. In particular, for the duration of this lifetime, the memory the pointer points to must not get accessed (read or written) through any other pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb4a5765e077612811d9e34d1cfae28164c42a6" translate="yes" xml:space="preserve">
          <source>You must enforce Rust's aliasing rules, since the returned lifetime &lt;code&gt;'a&lt;/code&gt; is arbitrarily chosen and does not necessarily reflect the actual lifetime of the data. In particular, for the duration of this lifetime, the memory the pointer points to must not get mutated (except inside &lt;code&gt;UnsafeCell&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777aaa3e727415bd3f558d75eed0071d689a2e50" translate="yes" xml:space="preserve">
          <source>You must make sure that you uphold the &lt;a href=&quot;#drop-guarantee&quot;&gt;&lt;code&gt;Drop&lt;/code&gt; guarantee&lt;/a&gt;: once your struct is pinned, the memory that contains the content is not overwritten or deallocated without calling the content's destructors. This can be tricky, as witnessed by &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;: the destructor of &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; can fail to call &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; on all elements if one of the destructors panics. This violates the &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; guarantee, because it can lead to elements being deallocated without their destructor being called. (&lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has no pinning projections, so this does not cause unsoundness.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512b5098c179561bd4c62ac9351616ebcf00f290" translate="yes" xml:space="preserve">
          <source>You must make sure that you uphold the &lt;a href=&quot;#drop-guarantee&quot;&gt;&lt;code&gt;Drop&lt;/code&gt; guarantee&lt;/a&gt;: once your struct is pinned, the memory that contains the content is not overwritten or deallocated without calling the content's destructors. This can be tricky, as witnessed by &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;: the destructor of &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; can fail to call &lt;code&gt;drop&lt;/code&gt; on all elements if one of the destructors panics. This violates the &lt;code&gt;Drop&lt;/code&gt; guarantee, because it can lead to elements being deallocated without their destructor being called. (&lt;code&gt;VecDeque&lt;/code&gt; has no pinning projections, so this does not cause unsoundness.)</source>
          <target state="translated">Debe asegurarse de mantener la &lt;a href=&quot;#drop-guarantee&quot;&gt;garant&amp;iacute;a de &lt;/a&gt; &lt;code&gt;Drop&lt;/code&gt; : una vez que se fija su estructura, la memoria que contiene el contenido no se sobrescribe ni se desasigna sin llamar a los destructores del contenido. Esto puede ser complicado, como lo atestigua &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; : el destructor de &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; puede fallar al llamar a &lt;code&gt;drop&lt;/code&gt; en todos los elementos si uno de los destructores entra en p&amp;aacute;nico. Esto viola la garant&amp;iacute;a &lt;code&gt;Drop&lt;/code&gt; , porque puede llevar a que se desasignen elementos sin que se llame a su destructor. ( &lt;code&gt;VecDeque&lt;/code&gt; no tiene proyecciones de fijaci&amp;oacute;n, por lo que esto no causa fallas).</target>
        </trans-unit>
        <trans-unit id="2f7ce1f0dba3e2341308e56325b73cd3bb2dd447" translate="yes" xml:space="preserve">
          <source>You must not offer any other operations that could lead to data being moved out of the structural fields when your type is pinned. For example, if the struct contains an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and there is a &lt;code&gt;take&lt;/code&gt;-like operation with type &lt;code&gt;fn(Pin&amp;lt;&amp;amp;mut Struct&amp;lt;T&amp;gt;&amp;gt;) -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt;, that operation can be used to move a &lt;code&gt;T&lt;/code&gt; out of a pinned &lt;code&gt;Struct&amp;lt;T&amp;gt;&lt;/code&gt; -- which means pinning cannot be structural for the field holding this data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b9021b2601965141c3fb4dd09ebe81c52813f0" translate="yes" xml:space="preserve">
          <source>You must not offer any other operations that could lead to data being moved out of the structural fields when your type is pinned. For example, if the struct contains an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; and there is a &lt;code&gt;take&lt;/code&gt;-like operation with type &lt;code&gt;fn(Pin&amp;lt;&amp;amp;mut Struct&amp;lt;T&amp;gt;&amp;gt;) -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt;, that operation can be used to move a &lt;code&gt;T&lt;/code&gt; out of a pinned &lt;code&gt;Struct&amp;lt;T&amp;gt;&lt;/code&gt; -- which means pinning cannot be structural for the field holding this data.</source>
          <target state="translated">No debe ofrecer ninguna otra operaci&amp;oacute;n que pueda llevar a que los datos se muevan fuera de los campos estructurales cuando se fija su tipo. Por ejemplo, si la estructura contiene una &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; y hay una operaci&amp;oacute;n similar a &lt;code&gt;take&lt;/code&gt; con el tipo &lt;code&gt;fn(Pin&amp;lt;&amp;amp;mut Struct&amp;lt;T&amp;gt;&amp;gt;) -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt; , esa operaci&amp;oacute;n se puede usar para mover una &lt;code&gt;T&lt;/code&gt; hacia afuera de un &lt;code&gt;Struct&amp;lt;T&amp;gt;&lt;/code&gt; , lo que significa que el anclaje no puede ser estructural para el campo que contiene estos datos.</target>
        </trans-unit>
        <trans-unit id="6dadab06cf1444a4d999bc3a5b975465ba195e33" translate="yes" xml:space="preserve">
          <source>You need to end your multi-line comment with &lt;code&gt;*/&lt;/code&gt; in order to fix this error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9816c05280b47604bf0f356ee6ab631c5316635" translate="yes" xml:space="preserve">
          <source>You need to have a place expression to be able to assign it something. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ca2833ca5cb486a7ab87759a170f3e035adbd8" translate="yes" xml:space="preserve">
          <source>You need to link your code to the relevant crate in order to be able to use it (through Cargo or the &lt;code&gt;-L&lt;/code&gt; option of rustc example). Plugins are crates as well, and you link to them the same way.</source>
          <target state="translated">Debe vincular su c&amp;oacute;digo a la caja correspondiente para poder usarlo (a trav&amp;eacute;s de Cargo o la opci&amp;oacute;n &lt;code&gt;-L&lt;/code&gt; del ejemplo rustc). Los complementos tambi&amp;eacute;n son cajas, y los vincula de la misma manera.</target>
        </trans-unit>
        <trans-unit id="32770b9133b89cb0277fb3b811c7f33131f07d54" translate="yes" xml:space="preserve">
          <source>You should get different random numbers, and they should all be numbers between 1 and 100. Great job!</source>
          <target state="translated">Deberías obtener diferentes números al azar,y todos deberían ser números entre el 1 y el 100.¡Gran trabajo!</target>
        </trans-unit>
        <trans-unit id="d37e014e5424795905e10b35dcbbfc90645d1a41" translate="yes" xml:space="preserve">
          <source>You should see the version number, commit hash, and commit date for the latest stable version that has been released in the following format:</source>
          <target state="translated">Debería ver el número de versión,el hash de confirmación y la fecha de confirmación de la última versión estable que se ha publicado en el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="b4bb15c4affeb1fb21e02b095c6505cc399a1de5" translate="yes" xml:space="preserve">
          <source>You should use ranges to create string slices with caution, because doing so can crash your program.</source>
          <target state="translated">Deberías usar rangos para crear rebanadas de cadena con precaución,porque al hacerlo se puede bloquear el programa.</target>
        </trans-unit>
        <trans-unit id="b5609a431bf66e21ded639dc22d4df284c0c4dab" translate="yes" xml:space="preserve">
          <source>You tried to declare an undefined atomic operation function. Erroneous code example:</source>
          <target state="translated">Intentaste declarar una función de operación atómica no definida.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="a1a863fa4182157ddb7efdff7bcd79894dd1b976" translate="yes" xml:space="preserve">
          <source>You tried to implement methods for a primitive type. Erroneous code example:</source>
          <target state="translated">Intentaste implementar métodos para un tipo primitivo.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="0ca57adb3473c7fcda2a5e14cb2150affeb0b7a3" translate="yes" xml:space="preserve">
          <source>You tried to move out of a value which was borrowed. Erroneous code example:</source>
          <target state="translated">Intentaste salir de un valor que era prestado.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="34c451e33c02fd03cc102eae1553830118a784d7" translate="yes" xml:space="preserve">
          <source>You tried to provide a generic argument to a type which doesn't need it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545469411a7c667814f3bf5bfe5fb3b2d297e5f6" translate="yes" xml:space="preserve">
          <source>You tried to provide a generic argument to a type which doesn't need it. Erroneous code example:</source>
          <target state="translated">Intentaste dar un argumento genérico a un tipo que no lo necesita.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="be2b15dc95b36de3c1d45fb8ddd11ee16b58649b" translate="yes" xml:space="preserve">
          <source>You tried to provide a lifetime to a type which doesn't need it. See &lt;code&gt;E0109&lt;/code&gt; for more details.</source>
          <target state="translated">Intentaste proporcionar una vida &amp;uacute;til a un tipo que no la necesita. Consulte &lt;code&gt;E0109&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f4db46c9e8574444f4cfb7fb9e13a0963a31d1d6" translate="yes" xml:space="preserve">
          <source>You tried to supply a type which doesn't implement some trait in a location which expected that trait. This error typically occurs when working with &lt;code&gt;Fn&lt;/code&gt;-based types. Erroneous code example:</source>
          <target state="translated">Intent&amp;oacute; proporcionar un tipo que no implementa alg&amp;uacute;n rasgo en una ubicaci&amp;oacute;n que esperaba ese rasgo. Este error suele ocurrir cuando se trabaja con tipos basados ​​en &lt;code&gt;Fn&lt;/code&gt; . Ejemplo de c&amp;oacute;digo err&amp;oacute;neo:</target>
        </trans-unit>
        <trans-unit id="167ff7eae934b858061a1902e9bb0a5c62d24c8b" translate="yes" xml:space="preserve">
          <source>You tried to supply an &lt;code&gt;Fn&lt;/code&gt;-based type with an incorrect number of arguments than what was expected.</source>
          <target state="translated">Intent&amp;oacute; proporcionar un tipo basado en &lt;code&gt;Fn&lt;/code&gt; con un n&amp;uacute;mero incorrecto de argumentos de lo esperado.</target>
        </trans-unit>
        <trans-unit id="577351d3cfda8d5b8fdd302806929cd6488e01b9" translate="yes" xml:space="preserve">
          <source>You tried to use a type which doesn't implement some trait in a place which expected that trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2c504f4812cc79039153f6b534ac2268b376e6" translate="yes" xml:space="preserve">
          <source>You tried to use a type which doesn't implement some trait in a place which expected that trait. Erroneous code example:</source>
          <target state="translated">Intentaste usar un tipo que no implementa algún rasgo en un lugar que esperaba ese rasgo.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="3f043de1a04d3f47b2f2141898a6c05a985c90bb" translate="yes" xml:space="preserve">
          <source>You tried to use something which is not a trait in a trait position, such as a bound or &lt;code&gt;impl&lt;/code&gt;.</source>
          <target state="translated">Intentaste usar algo que no es un rasgo en una posici&amp;oacute;n de rasgo, como un l&amp;iacute;mite o un &lt;code&gt;impl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d85882a605a6091380f8447ea32da5124e667bea" translate="yes" xml:space="preserve">
          <source>You tried to use structure-literal syntax to create an item that is not a structure or enum variant.</source>
          <target state="translated">Intentaste usar la sintaxis literal de la estructura para crear un elemento que no es una variante de la estructura o del enum.</target>
        </trans-unit>
        <trans-unit id="d89d5d887992fa0196687f3b68c2169705af8e87" translate="yes" xml:space="preserve">
          <source>You used a function or type which doesn't fit the requirements for where it was used. Erroneous code examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e502b3f73ed8c4a8f16c59c5846cc713beaa9053" translate="yes" xml:space="preserve">
          <source>You used an associated type which isn't defined in the trait. Erroneous code example:</source>
          <target state="translated">Usaste un tipo asociado que no está definido en el rasgo.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="cc4a84a36c41c857e979b18f2b8cf40f18b606c2" translate="yes" xml:space="preserve">
          <source>You want a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt; of unknown size, and can't tolerate amortization.</source>
          <target state="translated">Quiere un &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&lt;/code&gt; &lt;/a&gt; de tama&amp;ntilde;o desconocido y no puede tolerar la amortizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="429529cc1a810b0eca46cf5ff23873f2a58721a5" translate="yes" xml:space="preserve">
          <source>You want a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; that supports efficient insertion at both ends of the sequence.</source>
          <target state="translated">Quiere un &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; que admita una inserci&amp;oacute;n eficiente en ambos extremos de la secuencia.</target>
        </trans-unit>
        <trans-unit id="0559695de775dc2d4a42d0b0be239e947bd98040" translate="yes" xml:space="preserve">
          <source>You want a cache.</source>
          <target state="translated">Quieres un alijo.</target>
        </trans-unit>
        <trans-unit id="4a04ed0c490076b3c6bc236a8e45412e01a832c7" translate="yes" xml:space="preserve">
          <source>You want a double-ended queue (deque).</source>
          <target state="translated">Quieres una cola doble (deque).</target>
        </trans-unit>
        <trans-unit id="6c125f0662558b8441e0f2b2e1f000892e47cfb2" translate="yes" xml:space="preserve">
          <source>You want a heap-allocated array.</source>
          <target state="translated">Quieres una matriz asignada a un montón.</target>
        </trans-unit>
        <trans-unit id="5e482e7b2ba17ce10eaf983926bd2df92a665b96" translate="yes" xml:space="preserve">
          <source>You want a map sorted by its keys.</source>
          <target state="translated">Quieres un mapa ordenado por sus claves.</target>
        </trans-unit>
        <trans-unit id="a6811d3f626f38310b872083f59839dc40adf45e" translate="yes" xml:space="preserve">
          <source>You want a map, with no extra functionality.</source>
          <target state="translated">Quieres un mapa,sin ninguna funcionalidad extra.</target>
        </trans-unit>
        <trans-unit id="47ec6c6f37e5a611470a4fe3872921e071b9d35e" translate="yes" xml:space="preserve">
          <source>You want a priority queue.</source>
          <target state="translated">Quieres una cola prioritaria.</target>
        </trans-unit>
        <trans-unit id="45ec6881dc09115683e907ee13147bb4ef94268c" translate="yes" xml:space="preserve">
          <source>You want a queue.</source>
          <target state="translated">Quieres una cola.</target>
        </trans-unit>
        <trans-unit id="a4274817a1179fcc4e8d32e916255f4d9bea0fcd" translate="yes" xml:space="preserve">
          <source>You want a resizable array.</source>
          <target state="translated">Quieres un arreglo redimensionable.</target>
        </trans-unit>
        <trans-unit id="dc1b84dd373c41e460b6526462c5a95d9b63833c" translate="yes" xml:space="preserve">
          <source>You want a sequence of elements in a particular order, and will only be appending to (or near) the end.</source>
          <target state="translated">Quieres una secuencia de elementos en un orden particular,y sólo se añadirá a (o cerca de)el final.</target>
        </trans-unit>
        <trans-unit id="bfb46b766e59892d73fe8fb98696f88c0161713a" translate="yes" xml:space="preserve">
          <source>You want a stack.</source>
          <target state="translated">Quieres una pila.</target>
        </trans-unit>
        <trans-unit id="4604e0073570a83f9a282ed8ddc03f579ab9add5" translate="yes" xml:space="preserve">
          <source>You want to associate arbitrary keys with an arbitrary value.</source>
          <target state="translated">Quieres asociar claves arbitrarias con un valor arbitrario.</target>
        </trans-unit>
        <trans-unit id="a717b25180554fee11a8c7238a98a1d986eedfd5" translate="yes" xml:space="preserve">
          <source>You want to be able to get a range of entries on-demand.</source>
          <target state="translated">Quieres ser capaz de obtener un rango de entradas a pedido.</target>
        </trans-unit>
        <trans-unit id="82a8ad51acfbf7b362c324e437f11dc082c1b2c8" translate="yes" xml:space="preserve">
          <source>You want to collect items up to be processed or sent elsewhere later, and don't care about any properties of the actual values being stored.</source>
          <target state="translated">Quieres recoger artículos para procesarlos o enviarlos a otro lugar más tarde,y no te importa ninguna propiedad de los valores reales que se almacenan.</target>
        </trans-unit>
        <trans-unit id="e005bf2f6d086fd7281c06db750033422726610a" translate="yes" xml:space="preserve">
          <source>You want to efficiently split and append lists.</source>
          <target state="translated">Quieres dividir y añadir listas de manera eficiente.</target>
        </trans-unit>
        <trans-unit id="c933cf0de25d7f17fc06ec50b65243cd4df88876" translate="yes" xml:space="preserve">
          <source>You want to find the largest or smallest key that is smaller or larger than something.</source>
          <target state="translated">Quieres encontrar la llave más grande o más pequeña que es más pequeña o más grande que algo.</target>
        </trans-unit>
        <trans-unit id="9ab9d7dd47bb44bfa96e786004ea1b3d0d4c594f" translate="yes" xml:space="preserve">
          <source>You want to store a bunch of elements, but only ever want to process the &quot;biggest&quot; or &quot;most important&quot; one at any given time.</source>
          <target state="translated">Quieres almacenar un montón de elementos,pero sólo quieres procesar el &quot;más grande&quot; o &quot;más importante&quot; en un momento dado.</target>
        </trans-unit>
        <trans-unit id="dff73ddb22e432742f1a3b9903d65c3639aaaa40" translate="yes" xml:space="preserve">
          <source>You would match it using:</source>
          <target state="translated">Lo emparejarías usando:</target>
        </trans-unit>
        <trans-unit id="365595fe25d7676cd843b0c763d0879641943db0" translate="yes" xml:space="preserve">
          <source>You would write an array&amp;rsquo;s type by using square brackets, and within the brackets include the type of each element, a semicolon, and then the number of elements in the array, like so:</source>
          <target state="translated">Escribir&amp;iacute;a el tipo de una matriz usando corchetes, y dentro de los corchetes incluya el tipo de cada elemento, un punto y coma y luego el n&amp;uacute;mero de elementos en la matriz, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="8d66487c6c772cf6ed866bab62bec74334fe25fc" translate="yes" xml:space="preserve">
          <source>You wouldn&amp;rsquo;t want a real-world web server to shut down after serving only two requests. This code just demonstrates that the graceful shutdown and cleanup is in working order.</source>
          <target state="translated">No querr&amp;aacute; que un servidor web del mundo real se apague despu&amp;eacute;s de atender solo dos solicitudes. Este c&amp;oacute;digo simplemente demuestra que el cierre y la limpieza elegantes funcionan correctamente.</target>
        </trans-unit>
        <trans-unit id="2a9e5344e2be4f99cb398b95cb15f43df043c859" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll find two kinds of chapters in this book: concept chapters and project chapters. In concept chapters, you&amp;rsquo;ll learn about an aspect of Rust. In project chapters, we&amp;rsquo;ll build small programs together, applying what you&amp;rsquo;ve learned so far. Chapters 2, 12, and 20 are project chapters; the rest are concept chapters.</source>
          <target state="translated">Encontrar&amp;aacute; dos tipos de cap&amp;iacute;tulos en este libro: cap&amp;iacute;tulos de conceptos y cap&amp;iacute;tulos de proyectos. En los cap&amp;iacute;tulos de conceptos, aprender&amp;aacute; sobre un aspecto de Rust. En los cap&amp;iacute;tulos del proyecto, crearemos peque&amp;ntilde;os programas juntos, aplicando lo que ha aprendido hasta ahora. Los cap&amp;iacute;tulos 2, 12 y 20 son cap&amp;iacute;tulos de proyectos; el resto son cap&amp;iacute;tulos de conceptos.</target>
        </trans-unit>
        <trans-unit id="85a254ac5bdd3810bbd358a2de0033d8c5d546e1" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll get an error like this because Rust prevents you from using the invalidated reference:</source>
          <target state="translated">Obtendr&amp;aacute; un error como este porque Rust le impide usar la referencia invalidada:</target>
        </trans-unit>
        <trans-unit id="6d86880ac82c1881e7a9405d7bd16d7b1f80d76e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see different type annotations for other data types.</source>
          <target state="translated">Ver&amp;aacute; diferentes tipos de anotaciones para otros tipos de datos.</target>
        </trans-unit>
        <trans-unit id="584a58976748836676009747cbbda6f121e6c815" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll start by making a directory to store your Rust code. It doesn&amp;rsquo;t matter to Rust where your code lives, but for the exercises and projects in this book, we suggest making a &lt;em&gt;projects&lt;/em&gt; directory in your home directory and keeping all your projects there.</source>
          <target state="translated">Comenzar&amp;aacute; creando un directorio para almacenar su c&amp;oacute;digo de Rust. No le importa a Rust d&amp;oacute;nde viva su c&amp;oacute;digo, pero para los ejercicios y proyectos de este libro, le sugerimos que cree un directorio de &lt;em&gt;proyectos&lt;/em&gt; en su directorio personal y mantenga todos sus proyectos all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="6d4e9cdb26a23e07482cc51bd995fb62c80c08b3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll use default type parameters in two main ways:</source>
          <target state="translated">Utilizar&amp;aacute; los par&amp;aacute;metros de tipo predeterminados de dos formas principales:</target>
        </trans-unit>
        <trans-unit id="76e7b1024235c93bba49e72df5b2007bd3c01f30" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re already off to a great start on your Rust journey! In this chapter, you&amp;rsquo;ve learned how to:</source>
          <target state="translated">&amp;iexcl;Ya has tenido un gran comienzo en tu viaje por Rust! En este cap&amp;iacute;tulo, ha aprendido a:</target>
        </trans-unit>
        <trans-unit id="465d6c615ec587094237e6d1868d10e3e6d6c845" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve just run a newly created program, so let&amp;rsquo;s examine each step in the process.</source>
          <target state="translated">Acaba de ejecutar un programa reci&amp;eacute;n creado, as&amp;iacute; que examinemos cada paso del proceso.</target>
        </trans-unit>
        <trans-unit id="2c5f73edb8ee5f2e28f1893521e8701a830fccb7" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve learned that every reference has a lifetime and that you need to specify lifetime parameters for functions or structs that use references. However, in Chapter 4 we had a function in Listing 4-9, which is shown again in Listing 10-26, that compiled without lifetime annotations.</source>
          <target state="translated">Ha aprendido que cada referencia tiene una vida &amp;uacute;til y que necesita especificar par&amp;aacute;metros de vida &amp;uacute;til para funciones o estructuras que usan referencias. Sin embargo, en el Cap&amp;iacute;tulo 4 ten&amp;iacute;amos una funci&amp;oacute;n en el Listado 4-9, que se muestra nuevamente en el Listado 10-26, que se compila sin anotaciones de por vida.</target>
        </trans-unit>
        <trans-unit id="44ba14f7fab35608e1f076ddf40f88f87fe95906" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve seen that it&amp;rsquo;s sometimes useful to ignore values in a pattern, such as in the last arm of a &lt;code&gt;match&lt;/code&gt;, to get a catchall that doesn&amp;rsquo;t actually do anything but does account for all remaining possible values. There are a few ways to ignore entire values or parts of values in a pattern: using the &lt;code&gt;_&lt;/code&gt; pattern (which you&amp;rsquo;ve seen), using the &lt;code&gt;_&lt;/code&gt; pattern within another pattern, using a name that starts with an underscore, or using &lt;code&gt;..&lt;/code&gt; to ignore remaining parts of a value. Let&amp;rsquo;s explore how and why to use each of these patterns.</source>
          <target state="translated">Ha visto que a veces es &amp;uacute;til ignorar los valores en un patr&amp;oacute;n, como en el &amp;uacute;ltimo brazo de una &lt;code&gt;match&lt;/code&gt; , para obtener una captura general que en realidad no hace nada pero que tiene en cuenta todos los valores posibles restantes. Hay algunas formas de ignorar valores completos o partes de valores en un patr&amp;oacute;n: usando el patr&amp;oacute;n &lt;code&gt;_&lt;/code&gt; (que ha visto), usando el patr&amp;oacute;n &lt;code&gt;_&lt;/code&gt; dentro de otro patr&amp;oacute;n, usando un nombre que comience con un gui&amp;oacute;n bajo, o usando &lt;code&gt;..&lt;/code&gt; para ignorar las partes restantes de un valor. Exploremos c&amp;oacute;mo y por qu&amp;eacute; usar cada uno de estos patrones.</target>
        </trans-unit>
        <trans-unit id="b667051ae799a2fd628bbf6b2a672ad08ac88e85" translate="yes" xml:space="preserve">
          <source>You're interested in what the smallest or largest key-value pair is.</source>
          <target state="translated">Te interesa saber cuál es el par llave-valor más pequeño o más grande.</target>
        </trans-unit>
        <trans-unit id="9d546e29fcb9280e6885e53aaa2d82bf73b29bc9" translate="yes" xml:space="preserve">
          <source>You're trying to write an inherent implementation for something which isn't a struct nor an enum. Erroneous code example:</source>
          <target state="translated">Estás tratando de escribir una implementación inherente para algo que no es una estructura ni una lista.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="da3aed35105ef32e1e695100a00108ae53f9a846" translate="yes" xml:space="preserve">
          <source>Your &lt;em&gt;add&lt;/em&gt; directory should now have these directories and files:</source>
          <target state="translated">Su directorio de &lt;em&gt;adici&amp;oacute;n&lt;/em&gt; ahora deber&amp;iacute;a tener estos directorios y archivos:</target>
        </trans-unit>
        <trans-unit id="e58e4525e175f4af13b0845bead6769f97587a2e" translate="yes" xml:space="preserve">
          <source>Your Rust programs can now express concepts in your domain using structs and enums. Creating custom types to use in your API ensures type safety: the compiler will make certain your functions get only values of the type each function expects.</source>
          <target state="translated">Sus programas de oxidación pueden ahora expresar conceptos en su dominio usando estructuras y enums.La creación de tipos personalizados para usar en tu API garantiza la seguridad de los tipos:el compilador se asegurará de que tus funciones obtengan sólo los valores del tipo que cada función espera.</target>
        </trans-unit>
        <trans-unit id="735c2494d942625911bc7d8957e7d9ab2a88f33c" translate="yes" xml:space="preserve">
          <source>Your code after this point needs to rely on not being in this bad state.</source>
          <target state="translated">Su código después de este punto necesita confiar en no estar en este mal estado.</target>
        </trans-unit>
        <trans-unit id="1db1a9fd383f11b588c51cc526365c428c751169" translate="yes" xml:space="preserve">
          <source>Your crate will need a unique name. While you&amp;rsquo;re working on a crate locally, you can name a crate whatever you&amp;rsquo;d like. However, crate names on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; are allocated on a first-come, first-served basis. Once a crate name is taken, no one else can publish a crate with that name. Before attempting to publish a crate, search for the name you want to use on the site. If the name has been used by another crate, you will need to find another name and edit the &lt;code&gt;name&lt;/code&gt; field in the &lt;em&gt;Cargo.toml&lt;/em&gt; file under the &lt;code&gt;[package]&lt;/code&gt; section to use the new name for publishing, like so:</source>
          <target state="translated">Tu caja necesitar&amp;aacute; un nombre &amp;uacute;nico. Mientras trabaja en una caja localmente, puede nombrar una caja como desee. Sin embargo, los nombres de las cajas en &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; se asignan por orden de llegada. Una vez que se toma el nombre de una caja, nadie m&amp;aacute;s puede publicar una caja con ese nombre. Antes de intentar publicar una caja, busque el nombre que desea usar en el sitio. Si el nombre ha sido utilizado por otra caja, deber&amp;aacute; buscar otro nombre y editar el campo de &lt;code&gt;name&lt;/code&gt; en el archivo &lt;em&gt;Cargo.toml&lt;/em&gt; en la secci&amp;oacute;n &lt;code&gt;[package]&lt;/code&gt; para usar el nuevo nombre para la publicaci&amp;oacute;n, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a348b9c3e6214e498622aa794c35adc160939e25" translate="yes" xml:space="preserve">
          <source>Your method's lifetime parameters do not match the trait declaration. Erroneous code example:</source>
          <target state="translated">Los parámetros de vida útil de su método no coinciden con la declaración de los rasgos.Ejemplo de código erróneo:</target>
        </trans-unit>
        <trans-unit id="44335ff3d78e212a8ef5be5ae6db1f0effecb38b" translate="yes" xml:space="preserve">
          <source>Your type will be passed as &lt;code&gt;self&lt;/code&gt; by-reference, and then the function should emit output into the &lt;code&gt;f.buf&lt;/code&gt; stream. It is up to each format trait implementation to correctly adhere to the requested formatting parameters. The values of these parameters will be listed in the fields of the &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; struct. In order to help with this, the &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; struct also provides some helper methods.</source>
          <target state="translated">Su tipo ser&amp;aacute; pasado como &lt;code&gt;self&lt;/code&gt; por referencia, a continuaci&amp;oacute;n, la funci&amp;oacute;n debe emitir de salida en la &lt;code&gt;f.buf&lt;/code&gt; corriente. Depende de cada implementaci&amp;oacute;n de rasgo de formato adherirse correctamente a los par&amp;aacute;metros de formato solicitados. Los valores de estos par&amp;aacute;metros se enumerar&amp;aacute;n en los campos de la estructura &lt;a href=&quot;struct.formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; . Para ayudar con esto, la estructura &lt;a href=&quot;struct.formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n proporciona algunos m&amp;eacute;todos auxiliares.</target>
        </trans-unit>
        <trans-unit id="3071115273bb14d2e07d6d6e35d490b903df989f" translate="yes" xml:space="preserve">
          <source>Yup, our error message is being printed to standard output. It&amp;rsquo;s much more useful for error messages like this to be printed to standard error so only data from a successful run ends up in the file. We&amp;rsquo;ll change that.</source>
          <target state="translated">S&amp;iacute;, nuestro mensaje de error se est&amp;aacute; imprimiendo en la salida est&amp;aacute;ndar. Es mucho m&amp;aacute;s &amp;uacute;til que los mensajes de error como este se impriman en un error est&amp;aacute;ndar, de modo que solo los datos de una ejecuci&amp;oacute;n exitosa terminen en el archivo. Cambiaremos eso.</target>
        </trans-unit>
        <trans-unit id="97c00e76abaf44294d943d621bee4b664ccb6c50" translate="yes" xml:space="preserve">
          <source>Zero, one, or more attributes may be listed. Multiple attributes will each be expanded into separate attributes. For example:</source>
          <target state="translated">Se pueden enumerar cero,uno o más atributos.Los atributos múltiples se expandirán cada uno en atributos separados.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a3af9795f2295c7a8a6215bac54db107af616db4" translate="yes" xml:space="preserve">
          <source>Zero-sized type used to mark things that &quot;act like&quot; they own a &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Cero de tama&amp;ntilde;o tipo usado para cosas de marca que &quot;act&amp;uacute;an como&quot; son due&amp;ntilde;os de una &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f59177702b9970bd3419e3823969cd151c4053d7" translate="yes" xml:space="preserve">
          <source>Zero-variant Enums</source>
          <target state="translated">Enumeraciones con cero variantes</target>
        </trans-unit>
        <trans-unit id="85e772a6ec0561731f1829c317238141d891d53c" translate="yes" xml:space="preserve">
          <source>Zero-variant enums are equivalent to the &lt;a href=&quot;../types/never&quot;&gt;never type&lt;/a&gt;, but they cannot be coerced into other types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec742c8cd57ac5fee0ad76b17e91c6d76608cb3" translate="yes" xml:space="preserve">
          <source>Zip</source>
          <target state="translated">Zip</target>
        </trans-unit>
        <trans-unit id="7a310c844b5c3ca26bc69255cc0d75ae441b6843" translate="yes" xml:space="preserve">
          <source>Zip::all</source>
          <target state="translated">Zip::all</target>
        </trans-unit>
        <trans-unit id="03d4fc61138a969d2621250df6e71fdffd360059" translate="yes" xml:space="preserve">
          <source>Zip::any</source>
          <target state="translated">Zip::any</target>
        </trans-unit>
        <trans-unit id="6233ce444c406651f5225b3064ff848bae50a22e" translate="yes" xml:space="preserve">
          <source>Zip::borrow</source>
          <target state="translated">Zip::borrow</target>
        </trans-unit>
        <trans-unit id="5267cb651cf3e20907a2a97739f253d7e23ee43f" translate="yes" xml:space="preserve">
          <source>Zip::borrow_mut</source>
          <target state="translated">Zip::borrow_mut</target>
        </trans-unit>
        <trans-unit id="3c43a8142c7d99659a3badd9ef24a3361bab0578" translate="yes" xml:space="preserve">
          <source>Zip::by_ref</source>
          <target state="translated">Zip::by_ref</target>
        </trans-unit>
        <trans-unit id="3e003a22202c186d42da477c6b942e753530005e" translate="yes" xml:space="preserve">
          <source>Zip::chain</source>
          <target state="translated">Zip::chain</target>
        </trans-unit>
        <trans-unit id="7ff754927e7888b256d3739ffbc3dd0fc118871e" translate="yes" xml:space="preserve">
          <source>Zip::clone</source>
          <target state="translated">Zip::clone</target>
        </trans-unit>
        <trans-unit id="a1aeada24d11405b1e77185059074c3497d6513b" translate="yes" xml:space="preserve">
          <source>Zip::clone_from</source>
          <target state="translated">Zip::clone_from</target>
        </trans-unit>
        <trans-unit id="d21c41cfb41d5708171f6488c6d62db3fd4c16c2" translate="yes" xml:space="preserve">
          <source>Zip::clone_into</source>
          <target state="translated">Zip::clone_into</target>
        </trans-unit>
        <trans-unit id="032ee6c7a243fd8cbf95c96efa43d8b132bf2194" translate="yes" xml:space="preserve">
          <source>Zip::cloned</source>
          <target state="translated">Zip::cloned</target>
        </trans-unit>
        <trans-unit id="ffb5124a6ef89ad1b1c0482746735596f403d24a" translate="yes" xml:space="preserve">
          <source>Zip::cmp</source>
          <target state="translated">Zip::cmp</target>
        </trans-unit>
        <trans-unit id="46447ea53c47753f71cf66ca58114d53d2fdb01f" translate="yes" xml:space="preserve">
          <source>Zip::collect</source>
          <target state="translated">Zip::collect</target>
        </trans-unit>
        <trans-unit id="17533b8852fe9b8d306d8f769bc30fd306712eba" translate="yes" xml:space="preserve">
          <source>Zip::copied</source>
          <target state="translated">Zip::copied</target>
        </trans-unit>
        <trans-unit id="9af214749e1a55301d4c2f9e7260245ed45aa562" translate="yes" xml:space="preserve">
          <source>Zip::count</source>
          <target state="translated">Zip::count</target>
        </trans-unit>
        <trans-unit id="6fd7c8047a87acfb4e3792b0030e43359014cc60" translate="yes" xml:space="preserve">
          <source>Zip::cycle</source>
          <target state="translated">Zip::cycle</target>
        </trans-unit>
        <trans-unit id="d1258c7ea1aad373afa11621588a6578490222c2" translate="yes" xml:space="preserve">
          <source>Zip::enumerate</source>
          <target state="translated">Zip::enumerate</target>
        </trans-unit>
        <trans-unit id="c6d190bd6761869fb18c6ddbbd7de7af24d5db4e" translate="yes" xml:space="preserve">
          <source>Zip::eq</source>
          <target state="translated">Zip::eq</target>
        </trans-unit>
        <trans-unit id="327368bacc7d7e5a427321524fbdbc8daabf7148" translate="yes" xml:space="preserve">
          <source>Zip::filter</source>
          <target state="translated">Zip::filter</target>
        </trans-unit>
        <trans-unit id="729ebbffc443285ea1b3b9a987f5475fb2587a55" translate="yes" xml:space="preserve">
          <source>Zip::filter_map</source>
          <target state="translated">Zip::filter_map</target>
        </trans-unit>
        <trans-unit id="8f60540f721598c427a30a82645c6643aad047a3" translate="yes" xml:space="preserve">
          <source>Zip::find</source>
          <target state="translated">Zip::find</target>
        </trans-unit>
        <trans-unit id="71776cd66360ee041f56a382c9e4e7842ab8b31a" translate="yes" xml:space="preserve">
          <source>Zip::find_map</source>
          <target state="translated">Zip::find_map</target>
        </trans-unit>
        <trans-unit id="2c4b877f5f8ec6c5bf5ef8f3e39422d40a6c73be" translate="yes" xml:space="preserve">
          <source>Zip::flat_map</source>
          <target state="translated">Zip::flat_map</target>
        </trans-unit>
        <trans-unit id="724aa05ed30929683e2a861e9cf764114e9f32a4" translate="yes" xml:space="preserve">
          <source>Zip::flatten</source>
          <target state="translated">Zip::flatten</target>
        </trans-unit>
        <trans-unit id="ddcbc7de04e3187c6c1a68b0261f6bd417687b7b" translate="yes" xml:space="preserve">
          <source>Zip::fmt</source>
          <target state="translated">Zip::fmt</target>
        </trans-unit>
        <trans-unit id="f3cb6b923a3ea63c1e7ec36ab7aefa0b495552be" translate="yes" xml:space="preserve">
          <source>Zip::fold</source>
          <target state="translated">Zip::fold</target>
        </trans-unit>
        <trans-unit id="06d865697c853a97aca4285f4298e09c0a84f49e" translate="yes" xml:space="preserve">
          <source>Zip::for_each</source>
          <target state="translated">Zip::for_each</target>
        </trans-unit>
        <trans-unit id="e2cc1438498d2e497108bff98246c9ce2c4d822c" translate="yes" xml:space="preserve">
          <source>Zip::from</source>
          <target state="translated">Zip::from</target>
        </trans-unit>
        <trans-unit id="a70010555f26c82b35f35251e2fb688f0c632b5b" translate="yes" xml:space="preserve">
          <source>Zip::fuse</source>
          <target state="translated">Zip::fuse</target>
        </trans-unit>
        <trans-unit id="28bf12281d77c358a66d465298c5224b33de3343" translate="yes" xml:space="preserve">
          <source>Zip::ge</source>
          <target state="translated">Zip::ge</target>
        </trans-unit>
        <trans-unit id="630a9c9f133302648e103bbf4a010b6519ffa142" translate="yes" xml:space="preserve">
          <source>Zip::gt</source>
          <target state="translated">Zip::gt</target>
        </trans-unit>
        <trans-unit id="520400921d5297bb5c3bf46815fbc204b53894ee" translate="yes" xml:space="preserve">
          <source>Zip::inspect</source>
          <target state="translated">Zip::inspect</target>
        </trans-unit>
        <trans-unit id="82ac77946061ee097722e74f6c3974cc505dbf60" translate="yes" xml:space="preserve">
          <source>Zip::into</source>
          <target state="translated">Zip::into</target>
        </trans-unit>
        <trans-unit id="e57ecec344c31227348ec93c5f315cb21b47782f" translate="yes" xml:space="preserve">
          <source>Zip::into_iter</source>
          <target state="translated">Zip::into_iter</target>
        </trans-unit>
        <trans-unit id="8a782dd7d441daa7e415a484864b33d6fd835b39" translate="yes" xml:space="preserve">
          <source>Zip::is_empty</source>
          <target state="translated">Zip::is_empty</target>
        </trans-unit>
        <trans-unit id="971ae32344047fd5cad30c43a400ff992b97688e" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted</source>
          <target state="translated">Zip::is_sorted</target>
        </trans-unit>
        <trans-unit id="36c92e0d3e7db271544d5bc8318ab5a162555e05" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted_by</source>
          <target state="translated">Zip::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="7cfbc2ce82c6ed8875581847fe7898e98419dc7e" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted_by_key</source>
          <target state="translated">Zip::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="bd67b991b006257a47be5522d9eeeebbcbdaf6fb" translate="yes" xml:space="preserve">
          <source>Zip::last</source>
          <target state="translated">Zip::last</target>
        </trans-unit>
        <trans-unit id="0eb7a74dbf60cabe9d6121b317b82dc0e49f47a4" translate="yes" xml:space="preserve">
          <source>Zip::le</source>
          <target state="translated">Zip::le</target>
        </trans-unit>
        <trans-unit id="1bd5ebc9431f770ea4ec4adea5ac3691a2e738cb" translate="yes" xml:space="preserve">
          <source>Zip::len</source>
          <target state="translated">Zip::len</target>
        </trans-unit>
        <trans-unit id="ee4d8494dc795467ef171b4b15538e42d02acd0c" translate="yes" xml:space="preserve">
          <source>Zip::lt</source>
          <target state="translated">Zip::lt</target>
        </trans-unit>
        <trans-unit id="935aa09d6e9b55b2d4ff210d39fc4c92e0932f51" translate="yes" xml:space="preserve">
          <source>Zip::map</source>
          <target state="translated">Zip::map</target>
        </trans-unit>
        <trans-unit id="4fc75a4fa0f693d3acebf430d51b902d6c128ef2" translate="yes" xml:space="preserve">
          <source>Zip::max</source>
          <target state="translated">Zip::max</target>
        </trans-unit>
        <trans-unit id="c631714d0ce7c489952dc9fc8d8e740a111bb9c7" translate="yes" xml:space="preserve">
          <source>Zip::max_by</source>
          <target state="translated">Zip::max_by</target>
        </trans-unit>
        <trans-unit id="0cb8b3df5c45388af7860a4f5cf26948a0bebd9f" translate="yes" xml:space="preserve">
          <source>Zip::max_by_key</source>
          <target state="translated">Zip::max_by_key</target>
        </trans-unit>
        <trans-unit id="7d6c6bc0b21a01d03786ff5a1a731f10ea0689e8" translate="yes" xml:space="preserve">
          <source>Zip::min</source>
          <target state="translated">Zip::min</target>
        </trans-unit>
        <trans-unit id="6f989cc13b0d72dfdada2cddafd23e122ba5419d" translate="yes" xml:space="preserve">
          <source>Zip::min_by</source>
          <target state="translated">Zip::min_by</target>
        </trans-unit>
        <trans-unit id="b3663dbe8a0662d62121115fa16311b00c4a9bbd" translate="yes" xml:space="preserve">
          <source>Zip::min_by_key</source>
          <target state="translated">Zip::min_by_key</target>
        </trans-unit>
        <trans-unit id="fff0a9e69cf0bdfe7fe10bbf6b363a95680a776f" translate="yes" xml:space="preserve">
          <source>Zip::ne</source>
          <target state="translated">Zip::ne</target>
        </trans-unit>
        <trans-unit id="b269708a2aafc91b31410e2aba4dcd563aff8abc" translate="yes" xml:space="preserve">
          <source>Zip::next</source>
          <target state="translated">Zip::next</target>
        </trans-unit>
        <trans-unit id="2dde4011d8eef118f9217a1cd646ccde3938c623" translate="yes" xml:space="preserve">
          <source>Zip::next_back</source>
          <target state="translated">Zip::next_back</target>
        </trans-unit>
        <trans-unit id="24442987a3f5df43d0461b66d983f1d4539d6a35" translate="yes" xml:space="preserve">
          <source>Zip::nth</source>
          <target state="translated">Zip::nth</target>
        </trans-unit>
        <trans-unit id="73aed9553dc8bb9cb23116c6657df0c66b562c98" translate="yes" xml:space="preserve">
          <source>Zip::nth_back</source>
          <target state="translated">Zip::nth_back</target>
        </trans-unit>
        <trans-unit id="f36245983fcc56a347a3bcb16591f090a529d80a" translate="yes" xml:space="preserve">
          <source>Zip::partial_cmp</source>
          <target state="translated">Zip::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3ff556bb92ce21bb4f3ecff1a108f511a6035e0c" translate="yes" xml:space="preserve">
          <source>Zip::partition</source>
          <target state="translated">Zip::partition</target>
        </trans-unit>
        <trans-unit id="5bbd1ffcf3f52be9f20e67acf83cbec105fd89ca" translate="yes" xml:space="preserve">
          <source>Zip::peekable</source>
          <target state="translated">Zip::peekable</target>
        </trans-unit>
        <trans-unit id="95e2078fc3b9c4d957e34a824dc71785f132581f" translate="yes" xml:space="preserve">
          <source>Zip::position</source>
          <target state="translated">Zip::position</target>
        </trans-unit>
        <trans-unit id="7776d865a2b5dbee0629b9862610ea76ee78c525" translate="yes" xml:space="preserve">
          <source>Zip::product</source>
          <target state="translated">Zip::product</target>
        </trans-unit>
        <trans-unit id="b84a8972a030071381e753b4cae6807b09c22f7b" translate="yes" xml:space="preserve">
          <source>Zip::rev</source>
          <target state="translated">Zip::rev</target>
        </trans-unit>
        <trans-unit id="12e4a21f426826504c4afdcc98e55129f4acb97f" translate="yes" xml:space="preserve">
          <source>Zip::rfind</source>
          <target state="translated">Zip::rfind</target>
        </trans-unit>
        <trans-unit id="ae3ab773aa757f6d9052c0f919096672dc662d6a" translate="yes" xml:space="preserve">
          <source>Zip::rfold</source>
          <target state="translated">Zip::rfold</target>
        </trans-unit>
        <trans-unit id="229c97b569e06e032067298b2b9af3f4a8af914e" translate="yes" xml:space="preserve">
          <source>Zip::rposition</source>
          <target state="translated">Zip::rposition</target>
        </trans-unit>
        <trans-unit id="2c8c80468455642a4cf50cec4547978f0374e91f" translate="yes" xml:space="preserve">
          <source>Zip::scan</source>
          <target state="translated">Zip::scan</target>
        </trans-unit>
        <trans-unit id="c4e5e28de27f6ab610c979c784555d09f21a03c7" translate="yes" xml:space="preserve">
          <source>Zip::size_hint</source>
          <target state="translated">Zip::size_hint</target>
        </trans-unit>
        <trans-unit id="b61a7224e1a66ba0310da7f69834dada51d74c5e" translate="yes" xml:space="preserve">
          <source>Zip::skip</source>
          <target state="translated">Zip::skip</target>
        </trans-unit>
        <trans-unit id="6d7cee3ee52479d0c8dc612398197cc356613e14" translate="yes" xml:space="preserve">
          <source>Zip::skip_while</source>
          <target state="translated">Zip::skip_while</target>
        </trans-unit>
        <trans-unit id="6adc47e61c3b41dbda18b7af6dc9221c156688c0" translate="yes" xml:space="preserve">
          <source>Zip::step_by</source>
          <target state="translated">Zip::step_by</target>
        </trans-unit>
        <trans-unit id="f3f124cf4df9c292e48c357bc0791e9ce898c9da" translate="yes" xml:space="preserve">
          <source>Zip::sum</source>
          <target state="translated">Zip::sum</target>
        </trans-unit>
        <trans-unit id="f175b1e810f4d1819f5c88a2accd0396d41bc264" translate="yes" xml:space="preserve">
          <source>Zip::take</source>
          <target state="translated">Zip::take</target>
        </trans-unit>
        <trans-unit id="6bec4ffb892feee169a8e6273f7a6996d7e89238" translate="yes" xml:space="preserve">
          <source>Zip::take_while</source>
          <target state="translated">Zip::take_while</target>
        </trans-unit>
        <trans-unit id="4ea52f182d1900dfbf8091ff783deb8f667d41df" translate="yes" xml:space="preserve">
          <source>Zip::to_owned</source>
          <target state="translated">Zip::to_owned</target>
        </trans-unit>
        <trans-unit id="9933331d7f68de7c2c03f29dae0bf094cb9138d5" translate="yes" xml:space="preserve">
          <source>Zip::try_fold</source>
          <target state="translated">Zip::try_fold</target>
        </trans-unit>
        <trans-unit id="f235a4d9ec8e42f4d51bd96af592c13850f64dc6" translate="yes" xml:space="preserve">
          <source>Zip::try_for_each</source>
          <target state="translated">Zip::try_for_each</target>
        </trans-unit>
        <trans-unit id="7decbd26334531bcda455c16074134e8d73a6700" translate="yes" xml:space="preserve">
          <source>Zip::try_from</source>
          <target state="translated">Zip::try_from</target>
        </trans-unit>
        <trans-unit id="c5141248eb9fe16e09f783e1f020e222a79b8e48" translate="yes" xml:space="preserve">
          <source>Zip::try_into</source>
          <target state="translated">Zip::try_into</target>
        </trans-unit>
        <trans-unit id="d18612b55ec96bf2dfc75a2645b54d52c771d532" translate="yes" xml:space="preserve">
          <source>Zip::try_rfold</source>
          <target state="translated">Zip::try_rfold</target>
        </trans-unit>
        <trans-unit id="11955da5a60532770e3df7376518b35df5e367e1" translate="yes" xml:space="preserve">
          <source>Zip::type_id</source>
          <target state="translated">Zip::type_id</target>
        </trans-unit>
        <trans-unit id="aaa9d97a6e46bd8d81c87c6151407deae1158605" translate="yes" xml:space="preserve">
          <source>Zip::unzip</source>
          <target state="translated">Zip::unzip</target>
        </trans-unit>
        <trans-unit id="53d5d49f7575f97ebc48e3c3987fe4691c11c51e" translate="yes" xml:space="preserve">
          <source>Zip::zip</source>
          <target state="translated">Zip::zip</target>
        </trans-unit>
        <trans-unit id="41f114846a1d6821e24b35f0e7f37d2dafcff78e" translate="yes" xml:space="preserve">
          <source>Zips &lt;code&gt;self&lt;/code&gt; and another &lt;code&gt;Option&lt;/code&gt; with function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790e3bef364ceba27adfb8f85bf2916869aecba0" translate="yes" xml:space="preserve">
          <source>Zips &lt;code&gt;self&lt;/code&gt; with another &lt;code&gt;Option&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dadfbfb45cf2eb517d02044647fd90c3b66fdbb" translate="yes" xml:space="preserve">
          <source>[ - ]</source>
          <target state="translated">[-]</target>
        </trans-unit>
        <trans-unit id="cdcd5c9a3a475f2298b5ee3f4258f8207ba10879" translate="yes" xml:space="preserve">
          <source>[ ]</source>
          <target state="translated">[]</target>
        </trans-unit>
        <trans-unit id="321ed645be3a2ec568d21329accfe40f79d438c4" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Box&amp;lt;U&amp;gt;&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;Box&amp;lt;U&amp;gt;&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="6c087345d1421bb3092531be87dbc44e9f72787d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Eq&lt;/code&gt;] and [&lt;code&gt;PartialEq&lt;/code&gt;] are traits that allow you to define total and partial equality between values, respectively. Implementing them overloads the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators.</source>
          <target state="translated">[ &lt;code&gt;Eq&lt;/code&gt; ] y [ &lt;code&gt;PartialEq&lt;/code&gt; ] son ​​rasgos que le permiten definir la igualdad total y parcial entre valores, respectivamente. Implementarlos sobrecarga los operadores &lt;code&gt;==&lt;/code&gt; y &lt;code&gt;!=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87dc01ea83dc45f7312a127b799a93104629d350" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;] are traits that allow you to define total and partial orderings between values, respectively. Implementing them overloads the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators.</source>
          <target state="translated">[ &lt;code&gt;Ord&lt;/code&gt; ] y [ &lt;code&gt;PartialOrd&lt;/code&gt; ] son ​​rasgos que le permiten definir ordenamientos totales y parciales entre valores, respectivamente. Implementarlos sobrecarga los operadores &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c6d34ccc21d3aed85e642e6bb9ec09027bb697" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Ordering&lt;/code&gt;][cmp::Ordering] is an enum returned by the main functions of [&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;], and describes an ordering.</source>
          <target state="translated">[ &lt;code&gt;Ordering&lt;/code&gt; ] [cmp :: Ordering] es una enumeraci&amp;oacute;n devuelta por las funciones principales de [ &lt;code&gt;Ord&lt;/code&gt; ] y [ &lt;code&gt;PartialOrd&lt;/code&gt; ], y describe una ordenaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c0258c5c3ce0feb2e34b84e23d6638fcefb6dd15" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Reverse&lt;/code&gt;][cmp::Reverse] is a struct that allows you to easily reverse an ordering.</source>
          <target state="translated">[ &lt;code&gt;Reverse&lt;/code&gt; ] [cmp :: Reverse] es una estructura que le permite invertir f&amp;aacute;cilmente un orden.</target>
        </trans-unit>
        <trans-unit id="7d42a174cd00b8f538a7dbad8cfaf776a3047cf8" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Some(t)&lt;/code&gt;] if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; (where &lt;code&gt;t&lt;/code&gt; is the wrapped value), and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840612b717277518665b3fd424e0a5f393324bd8" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;] [&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;&lt;code&gt;_&lt;/code&gt;]&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">[ &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;z&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; - &lt;code&gt;Z&lt;/code&gt; ] [ &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;z&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; - &lt;code&gt;Z&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; &lt;code&gt;_&lt;/code&gt; ] &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5316fd26c1e27555ff577c62757ff0bc7be48b78" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="5797cdf0352e4f4b04a71322ef5c8a9f3ec2ee7d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;b&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;b&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="667d358a8d4f23753abd06a643d1602bc2a2b481" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;max&lt;/code&gt;][cmp::max] and [&lt;code&gt;min&lt;/code&gt;][cmp::min] are functions that build off of [&lt;code&gt;Ord&lt;/code&gt;] and allow you to find the maximum or minimum of two values.</source>
          <target state="translated">[ &lt;code&gt;max&lt;/code&gt; ] [cmp :: max] y [ &lt;code&gt;min&lt;/code&gt; ] [cmp :: min] son ​​funciones que se basan en [ &lt;code&gt;Ord&lt;/code&gt; ] y le permiten encontrar el m&amp;aacute;ximo o m&amp;iacute;nimo de dos valores.</target>
        </trans-unit>
        <trans-unit id="c08f412c9f61e3104ccc4738ee41836696068078" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;num::NonZero*&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;num::NonZero*&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="5e38cd838cc931a5a9cc66b239d581fe5231ada8" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;ptr::NonNull&amp;lt;U&amp;gt;&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;ptr::NonNull&amp;lt;U&amp;gt;&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="798cde61360d58687a5da27eadb8538f4cc5b282" translate="yes" xml:space="preserve">
          <source>\n, \r, \t, \0</source>
          <target state="translated">\ n, \ r, \ t, \ 0</target>
        </trans-unit>
        <trans-unit id="fc9847dcc99e708ce77a85aa95896c79139e7dfe" translate="yes" xml:space="preserve">
          <source>\x</source>
          <target state="translated">\x</target>
        </trans-unit>
        <trans-unit id="6d36ccdf08a0dfb8964c565282439249549908d2" translate="yes" xml:space="preserve">
          <source>__wasi_clock_time_get (Monotonic Clock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0554d748d7c0e25a52e162e2e3e659f8bcc815fd" translate="yes" xml:space="preserve">
          <source>__wasi_clock_time_get (Realtime Clock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf0173b29d9268ef222576f6f78fb410d2d405c" translate="yes" xml:space="preserve">
          <source>`.</source>
          <target state="translated">`.</target>
        </trans-unit>
        <trans-unit id="a1cee21d6e0f739834cc58a3e28c4fd3ad87bed5" translate="yes" xml:space="preserve">
          <source>a - The index of the first element</source>
          <target state="translated">a-El índice del primer elemento</target>
        </trans-unit>
        <trans-unit id="f721fe0e1dc77b6066276b8d9ab1a0fcac2c10a0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;, then the vtable part of the pointer must point to a valid vtable acquired by an unsizing coercion, and the size of the &lt;em&gt;entire value&lt;/em&gt; (dynamic tail length + statically sized prefix) must fit in &lt;code&gt;isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2b91bd2db922c99eb8ba7424056a1695b01196" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;, then the vtable part of the pointer must point to a valid vtable for the type &lt;code&gt;T&lt;/code&gt; acquired by an unsizing coersion, and the size of the &lt;em&gt;entire value&lt;/em&gt; (dynamic tail length + statically sized prefix) must fit in &lt;code&gt;isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545f1ea61bac240149a6afac9d520ec519f428c7" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../primitive.slice&quot;&gt;slice&lt;/a&gt;, then the length of the slice tail must be an initialized integer, and the size of the &lt;em&gt;entire value&lt;/em&gt; (dynamic tail length + statically sized prefix) must fit in &lt;code&gt;isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de66432c2f46eefe18428079e7f995efd458cbb" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../primitive.slice&quot;&gt;slice&lt;/a&gt;, then the length of the slice tail must be an intialized integer, and the size of the &lt;em&gt;entire value&lt;/em&gt; (dynamic tail length + statically sized prefix) must fit in &lt;code&gt;isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a916bcb4b51c724a0692ff713eb19178505c66" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;repr(C)&lt;/code&gt; union of &lt;code&gt;repr(C)&lt;/code&gt; structs for the fields of each variant that had them (&quot;the payload&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e6d7fbea58b50d777fdaf953fb79ab65523bac" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;repr(C)&lt;/code&gt; version of the enum with all fields removed (&quot;the tag&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c3306f39af3d4126ae8189f90519307be8919" translate="yes" xml:space="preserve">
          <source>a &lt;em&gt;virtual method table&lt;/em&gt;, often just called a &lt;em&gt;vtable&lt;/em&gt;, which contains, for each method of &lt;code&gt;SomeTrait&lt;/code&gt; and its &lt;a href=&quot;../items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt; that &lt;code&gt;T&lt;/code&gt; implements, a pointer to &lt;code&gt;T&lt;/code&gt;'s implementation (i.e. a function pointer).</source>
          <target state="translated">una &lt;em&gt;tabla de m&amp;eacute;todos virtuales&lt;/em&gt; , a menudo simplemente llamada &lt;em&gt;vtable&lt;/em&gt; , que contiene, para cada m&amp;eacute;todo de &lt;code&gt;SomeTrait&lt;/code&gt; y sus &lt;a href=&quot;../items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt; que implementa &lt;code&gt;T&lt;/code&gt; , un puntero a la implementaci&amp;oacute;n de &lt;code&gt;T&lt;/code&gt; (es decir, un puntero de funci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="ed9cf402e42cb4b61cf6aa833c64fa3ed260a2d6" translate="yes" xml:space="preserve">
          <source>a lower-bound on &lt;code&gt;use_max&lt;/code&gt; can be safely approximated by a call to &lt;code&gt;usable_size&lt;/code&gt;.</source>
          <target state="translated">un l&amp;iacute;mite inferior en &lt;code&gt;use_max&lt;/code&gt; puede aproximarse de forma segura mediante una llamada a &lt;code&gt;usable_size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf56d6a6edc4dd79be4c7f8bddf8f05c5e95f2d7" translate="yes" xml:space="preserve">
          <source>a pointer to an instance of a type &lt;code&gt;T&lt;/code&gt; that implements &lt;code&gt;SomeTrait&lt;/code&gt;</source>
          <target state="translated">un puntero a una instancia de un tipo &lt;code&gt;T&lt;/code&gt; que implementa &lt;code&gt;SomeTrait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4f6406e4862ad4999a818508e77e80d03f4f0c6" translate="yes" xml:space="preserve">
          <source>a single field with non-zero size, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f331cb1a95831c42b2c4faeff2983aef85e26a" translate="yes" xml:space="preserve">
          <source>a to b repetitions of x</source>
          <target state="translated">a a b repeticiones de x</target>
        </trans-unit>
        <trans-unit id="1c51b05b70b3433dc55847cb345257c6b1f51a6b" translate="yes" xml:space="preserve">
          <source>a.b.c.d becomes ::a.b.c.d</source>
          <target state="translated">a.b.c.d se convierte en ::a.b.c.d</target>
        </trans-unit>
        <trans-unit id="47b2782b7a9f65de5ea3233ec8694e06dc0fda08" translate="yes" xml:space="preserve">
          <source>a.b.c.d becomes ::ffff:a.b.c.d</source>
          <target state="translated">a.b.c.d se convierte en ::ffff:a.b.c.d</target>
        </trans-unit>
        <trans-unit id="07523927973c128520eb9b8598bda2ce98a37579" translate="yes" xml:space="preserve">
          <source>aarch64</source>
          <target state="translated">aarch64</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="782fd1504901e4fed3c082d147dd6f71e84d5e1a" translate="yes" xml:space="preserve">
          <source>abs_sub</source>
          <target state="translated">abs_sub</target>
        </trans-unit>
        <trans-unit id="5e942a2261672f81ad3519b878a9265eb44fdeba" translate="yes" xml:space="preserve">
          <source>acc</source>
          <target state="translated">acc</target>
        </trans-unit>
        <trans-unit id="9c8b74630568535e88482861294374d8249be802" translate="yes" xml:space="preserve">
          <source>add_assign</source>
          <target state="translated">add_assign</target>
        </trans-unit>
        <trans-unit id="16f4abebb856c512808647f8e82243a474a2f91d" translate="yes" xml:space="preserve">
          <source>add_one</source>
          <target state="translated">add_one</target>
        </trans-unit>
        <trans-unit id="755764ecd42eaa6a0fc8ddfe961aafb684f488d9" translate="yes" xml:space="preserve">
          <source>add_usize</source>
          <target state="translated">add_usize</target>
        </trans-unit>
        <trans-unit id="8d385b76f77849563dbd2cda6d05681c26b5b43d" translate="yes" xml:space="preserve">
          <source>add_with_overflow</source>
          <target state="translated">add_with_overflow</target>
        </trans-unit>
        <trans-unit id="5a463572d1b981e2a77872b15e955c3eb7d1b4c7" translate="yes" xml:space="preserve">
          <source>addresses reserved for future protocols (see &lt;a href=&quot;#method.is_ietf_protocol_assignment&quot;&gt;&lt;code&gt;is_ietf_protocol_assignment()&lt;/code&gt;&lt;/a&gt;, except &lt;code&gt;192.0.0.9/32&lt;/code&gt; and &lt;code&gt;192.0.0.10/32&lt;/code&gt; which are globally routable</source>
          <target state="translated">direcciones reservadas para protocolos futuros (ver &lt;a href=&quot;#method.is_ietf_protocol_assignment&quot;&gt; &lt;code&gt;is_ietf_protocol_assignment()&lt;/code&gt; &lt;/a&gt; , excepto &lt;code&gt;192.0.0.9/32&lt;/code&gt; y &lt;code&gt;192.0.0.10/32&lt;/code&gt; que son globalmente enrutables</target>
        </trans-unit>
        <trans-unit id="409b3d4e0a5f478be98fd2f3069d6de0e16b6390" translate="yes" xml:space="preserve">
          <source>addresses reserved for future protocols (see &lt;a href=&quot;struct.ipv4addr#method.is_ietf_protocol_assignment&quot;&gt;&lt;code&gt;Ipv4Addr::is_ietf_protocol_assignment()&lt;/code&gt;&lt;/a&gt;, except &lt;code&gt;192.0.0.9/32&lt;/code&gt; and &lt;code&gt;192.0.0.10/32&lt;/code&gt; which are globally routable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9660633f2412a0146298b33abcc1cf1dcd28b534" translate="yes" xml:space="preserve">
          <source>addresses reserved for future use (see &lt;a href=&quot;#method.is_reserved&quot;&gt;&lt;code&gt;is_reserved()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">direcciones reservadas para uso futuro (ver &lt;a href=&quot;#method.is_reserved&quot;&gt; &lt;code&gt;is_reserved()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47085a143113716590769d77131a16fd3f81c539" translate="yes" xml:space="preserve">
          <source>addresses reserved for future use (see &lt;a href=&quot;struct.ipv4addr#method.is_reserved&quot;&gt;&lt;code&gt;Ipv4Addr::is_reserved()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953671a24573e569fdbbac82548a708002db4d25" translate="yes" xml:space="preserve">
          <source>addresses reserved for networking devices benchmarking (see &lt;a href=&quot;#method.is_benchmarking&quot;&gt;&lt;code&gt;is_benchmarking&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">direcciones reservadas para la evaluaci&amp;oacute;n comparativa de dispositivos de red (consulte &lt;a href=&quot;#method.is_benchmarking&quot;&gt; &lt;code&gt;is_benchmarking&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="8bcc220fff20ccae78f173639be374ce3ac69f9b" translate="yes" xml:space="preserve">
          <source>addresses reserved for networking devices benchmarking (see &lt;a href=&quot;struct.ipv4addr#method.is_benchmarking&quot;&gt;&lt;code&gt;Ipv4Addr::is_benchmarking()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5693c5e18a441f4318ebbf81dedded945498666" translate="yes" xml:space="preserve">
          <source>addresses used for documentation (see &lt;a href=&quot;#method.is_documentation&quot;&gt;&lt;code&gt;is_documentation()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">direcciones utilizadas para la documentaci&amp;oacute;n (consulte &lt;a href=&quot;#method.is_documentation&quot;&gt; &lt;code&gt;is_documentation()&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7e41ad4d3c2911070f3b9fd97f5c1769961b1bb0" translate="yes" xml:space="preserve">
          <source>addresses used for documentation (see &lt;a href=&quot;struct.ipv4addr#method.is_documentation&quot;&gt;&lt;code&gt;Ipv4Addr::is_documentation()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcb342000bb87b3fc28a7b5282adcb207b55ae6" translate="yes" xml:space="preserve">
          <source>align_of</source>
          <target state="translated">align_of</target>
        </trans-unit>
        <trans-unit id="4a91d73389d47986a22fee1f008325c2fa351989" translate="yes" xml:space="preserve">
          <source>align_of_val</source>
          <target state="translated">align_of_val</target>
        </trans-unit>
        <trans-unit id="48a6f93cb24e6643f518cc5dcd2342af8ddb6f65" translate="yes" xml:space="preserve">
          <source>align_offset</source>
          <target state="translated">align_offset</target>
        </trans-unit>
        <trans-unit id="8fd9650b13d1ce9bee4a58170bb608a95b2071dc" translate="yes" xml:space="preserve">
          <source>align_to</source>
          <target state="translated">align_to</target>
        </trans-unit>
        <trans-unit id="fe9b130c16dddfa6ab27f685be9693f1dc39c95e" translate="yes" xml:space="preserve">
          <source>align_to_mut</source>
          <target state="translated">align_to_mut</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="8188b14a369cc678029ffe3cd259baf48dbf1fcf" translate="yes" xml:space="preserve">
          <source>all of the parameters being passed to the trait (if there are any) are also foreign.</source>
          <target state="translated">todos los parámetros que se pasan al rasgo (si los hay)son también extraños.</target>
        </trans-unit>
        <trans-unit id="acaab3b723a4d70b19f7b4e34895a97f703f7ab8" translate="yes" xml:space="preserve">
          <source>alloc</source>
          <target state="translated">alloc</target>
        </trans-unit>
        <trans-unit id="3713d3e4247c1756e011831d31e7fb3ce237ec16" translate="yes" xml:space="preserve">
          <source>alloc::Alloc</source>
          <target state="translated">alloc::Alloc</target>
        </trans-unit>
        <trans-unit id="8d87eec0a803461d44fe8f6cc6db8702bbaa76c6" translate="yes" xml:space="preserve">
          <source>alloc::AllocErr</source>
          <target state="translated">alloc::AllocErr</target>
        </trans-unit>
        <trans-unit id="e3d958132185dea4c5a058934b74c1c13c3ec5a1" translate="yes" xml:space="preserve">
          <source>alloc::AllocError</source>
          <target state="translated">alloc::AllocError</target>
        </trans-unit>
        <trans-unit id="b96a879e87b2e14dd50130bfd1606262665851df" translate="yes" xml:space="preserve">
          <source>alloc::AllocRef</source>
          <target state="translated">alloc::AllocRef</target>
        </trans-unit>
        <trans-unit id="4d092e108d747941ad2434a4c1b3f0fa6a412904" translate="yes" xml:space="preserve">
          <source>alloc::Allocator</source>
          <target state="translated">alloc::Allocator</target>
        </trans-unit>
        <trans-unit id="4cce4392d71abbffbbdc08a7792b3cceda750be6" translate="yes" xml:space="preserve">
          <source>alloc::CannotReallocInPlace</source>
          <target state="translated">alloc::CannotReallocInPlace</target>
        </trans-unit>
        <trans-unit id="04ee81a211afeff3b00e1961369036f4df16f1fa" translate="yes" xml:space="preserve">
          <source>alloc::Excess</source>
          <target state="translated">alloc::Excess</target>
        </trans-unit>
        <trans-unit id="72e441992369146b5c630c320b71ae7644725fb6" translate="yes" xml:space="preserve">
          <source>alloc::Global</source>
          <target state="translated">alloc::Global</target>
        </trans-unit>
        <trans-unit id="2da52f8d041f4b6b6d7a5b78c2fe8b0b115d9adf" translate="yes" xml:space="preserve">
          <source>alloc::GlobalAlloc</source>
          <target state="translated">alloc::GlobalAlloc</target>
        </trans-unit>
        <trans-unit id="81ea5ce016a204638e49fe774145862d34f7f7b3" translate="yes" xml:space="preserve">
          <source>alloc::Layout</source>
          <target state="translated">alloc::Layout</target>
        </trans-unit>
        <trans-unit id="f9d53658fdbb711766951d7de7bb887d5a628901" translate="yes" xml:space="preserve">
          <source>alloc::LayoutErr</source>
          <target state="translated">alloc::LayoutErr</target>
        </trans-unit>
        <trans-unit id="8f612ed786b8d63c39104297556c4ad1f71b1081" translate="yes" xml:space="preserve">
          <source>alloc::LayoutError</source>
          <target state="translated">alloc::LayoutError</target>
        </trans-unit>
        <trans-unit id="9691e5f9c2fc33f4bf70bb1a4b99f5d5ba5256be" translate="yes" xml:space="preserve">
          <source>alloc::System</source>
          <target state="translated">alloc::System</target>
        </trans-unit>
        <trans-unit id="ebacf0d42a5ef2f044e83d33a2012a0e9e3eb6fa" translate="yes" xml:space="preserve">
          <source>alloc::alloc</source>
          <target state="translated">alloc::alloc</target>
        </trans-unit>
        <trans-unit id="fe17f70a9e00f141a863343a38d8f3374fea879b" translate="yes" xml:space="preserve">
          <source>alloc::alloc_zeroed</source>
          <target state="translated">alloc::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="5ee897a217667f07dd12b0fd9f87ec180eb24201" translate="yes" xml:space="preserve">
          <source>alloc::dealloc</source>
          <target state="translated">alloc::dealloc</target>
        </trans-unit>
        <trans-unit id="53acb68d436478455357d483a3c6669e6275729b" translate="yes" xml:space="preserve">
          <source>alloc::handle_alloc_error</source>
          <target state="translated">alloc::handle_alloc_error</target>
        </trans-unit>
        <trans-unit id="52dccb1813c0a4bca67362ff318dae25873cbe68" translate="yes" xml:space="preserve">
          <source>alloc::realloc</source>
          <target state="translated">alloc::realloc</target>
        </trans-unit>
        <trans-unit id="09693d6a818612835d2dd30b1e3aacf597b5a024" translate="yes" xml:space="preserve">
          <source>alloc::set_alloc_error_hook</source>
          <target state="translated">alloc::set_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="6238019fc16e586c11cd68e7caef6f0063729da5" translate="yes" xml:space="preserve">
          <source>alloc::take_alloc_error_hook</source>
          <target state="translated">alloc::take_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="83c53ed88121cf9d87a33fa7d50a508abfd10904" translate="yes" xml:space="preserve">
          <source>alloc_zeroed</source>
          <target state="translated">alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="b658a301faffb2efb3c34e2f634c0bf1b63948bd" translate="yes" xml:space="preserve">
          <source>an (unstable) &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/extern-types.html&quot;&gt;extern type&lt;/a&gt;, then this function is always safe to call, but may panic or otherwise return the wrong value, as the extern type's layout is not known. This is the same behavior as &lt;a href=&quot;fn.align_of_val&quot;&gt;&lt;code&gt;align_of_val&lt;/code&gt;&lt;/a&gt; on a reference to a type with an extern type tail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b5588973abda453179a185a51d7277a87ce83f" translate="yes" xml:space="preserve">
          <source>an (unstable) &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/extern-types.html&quot;&gt;extern type&lt;/a&gt;, then this function is always safe to call, but may panic or otherwise return the wrong value, as the extern type's layout is not known. This is the same behavior as &lt;a href=&quot;fn.size_of_val&quot;&gt;&lt;code&gt;size_of_val&lt;/code&gt;&lt;/a&gt; on a reference to a type with an extern type tail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee4a4c259250300b0576308807a828c510a1edc" translate="yes" xml:space="preserve">
          <source>an (unstable) &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/extern-types.html&quot;&gt;extern type&lt;/a&gt;, then this function is always safe to call, but may panic or otherwise return the wrong value, as the extern type's layout is not known. This is the same behavior as &lt;a href=&quot;struct.layout#method.for_value&quot;&gt;&lt;code&gt;Layout::for_value&lt;/code&gt;&lt;/a&gt; on a reference to an extern type tail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981163b46efc6d8075aa470b37bda62ed3a3fefc" translate="yes" xml:space="preserve">
          <source>and could then be used to compare a &lt;code&gt;&amp;amp;'a T&lt;/code&gt; with any lifetime to an &lt;code&gt;i32&lt;/code&gt;.</source>
          <target state="translated">y luego podr&amp;iacute;a usarse para comparar un &lt;code&gt;&amp;amp;'a T&lt;/code&gt; con cualquier vida &amp;uacute;til con un &lt;code&gt;i32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="750052fe8a8bd846ac8928c5e6db02c6adcc76b1" translate="yes" xml:space="preserve">
          <source>and now when you call &lt;code&gt;.is_null()&lt;/code&gt; on a raw pointer to &lt;code&gt;Foo&lt;/code&gt;, there's ambiguity.</source>
          <target state="translated">y ahora, cuando llamas a &lt;code&gt;.is_null()&lt;/code&gt; en un puntero sin formato a &lt;code&gt;Foo&lt;/code&gt; , hay ambig&amp;uuml;edad.</target>
        </trans-unit>
        <trans-unit id="83e43f9b49b3ffcd306011c0c115dce47d2c5f24" translate="yes" xml:space="preserve">
          <source>and on numeric bindings without an identified concrete type:</source>
          <target state="translated">y en uniones numéricas sin un tipo concreto identificado:</target>
        </trans-unit>
        <trans-unit id="5c508147b589249a6b3b7c430ecd3d94b45db749" translate="yes" xml:space="preserve">
          <source>and where &lt;code&gt;T&lt;/code&gt; can obtained from &lt;code&gt;U&lt;/code&gt; by &lt;a href=&quot;type-coercions#unsized-coercions&quot;&gt;unsized coercion&lt;/a&gt;.</source>
          <target state="translated">y donde &lt;code&gt;T&lt;/code&gt; puede obtenerse de &lt;code&gt;U&lt;/code&gt; por &lt;a href=&quot;type-coercions#unsized-coercions&quot;&gt;coerci&amp;oacute;n sin tama&amp;ntilde;o&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a162b6af865ce3b6a44b6c4f3fb8314a951a0dba" translate="yes" xml:space="preserve">
          <source>and where &lt;code&gt;U&lt;/code&gt; can be obtained from &lt;code&gt;T&lt;/code&gt; by &lt;a href=&quot;#unsized-coercions&quot;&gt;unsized coercion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bbe5b7a4c1eb55652965aee885dd59bd2ee7f4" translate="yes" xml:space="preserve">
          <source>android</source>
          <target state="translated">android</target>
        </trans-unit>
        <trans-unit id="862f53b167b146a23f5518e5145f6a6245bb02b6" translate="yes" xml:space="preserve">
          <source>antisymmetry: if &lt;code&gt;a &amp;lt; b&lt;/code&gt; then &lt;code&gt;!(a &amp;gt; b)&lt;/code&gt;, as well as &lt;code&gt;a &amp;gt; b&lt;/code&gt; implying &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt;; and</source>
          <target state="translated">antisimetr&amp;iacute;a: si &lt;code&gt;a &amp;lt; b&lt;/code&gt; entonces &lt;code&gt;!(a &amp;gt; b)&lt;/code&gt; , as&amp;iacute; como &lt;code&gt;a &amp;gt; b&lt;/code&gt; implica &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt; ; y</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="763d77ccdd4209ee4abc2cd736a3e6b4f2ff3956" translate="yes" xml:space="preserve">
          <source>any char in slice is contained in string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b697abfd844a82eac6e96011ff819ea9961398de" translate="yes" xml:space="preserve">
          <source>any number of fields with size 0 and alignment 1 (e.g. &lt;a href=&quot;special-types-and-traits#phantomdatat&quot;&gt;&lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a68ff1d4a3b1087b68e1c4fac11ac568cf6a567" translate="yes" xml:space="preserve">
          <source>any pointer to a memory block which is &lt;a href=&quot;#currently-allocated-memory&quot;&gt;&lt;em&gt;currently allocated&lt;/em&gt;&lt;/a&gt; may be passed to any other method of the allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaadfb6866dc10bfd8f8a29b0f4461b0ed50edb" translate="yes" xml:space="preserve">
          <source>any::Any</source>
          <target state="translated">any::Any</target>
        </trans-unit>
        <trans-unit id="e62666f13dea1258f065ef147656435c17f6f877" translate="yes" xml:space="preserve">
          <source>any::TypeId</source>
          <target state="translated">any::TypeId</target>
        </trans-unit>
        <trans-unit id="9efefba80a8eb62a66c83d6be942a59714f9d5fe" translate="yes" xml:space="preserve">
          <source>any::type_name</source>
          <target state="translated">any::type_name</target>
        </trans-unit>
        <trans-unit id="a937ef30499a0cf5ebf0a8cbfebfb286f975aebb" translate="yes" xml:space="preserve">
          <source>any::type_name_of_val</source>
          <target state="translated">any::type_name_of_val</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="5a36f117812e69f1a5ab7e32a43b6e3db24618b2" translate="yes" xml:space="preserve">
          <source>arch</source>
          <target state="translated">arch</target>
        </trans-unit>
        <trans-unit id="6869438e303080030907368fe4c6f5f0725e38c3" translate="yes" xml:space="preserve">
          <source>are currently twice the size of the size of &lt;code&gt;usize&lt;/code&gt; and have the same alignment.</source>
          <target state="translated">son actualmente el doble del tama&amp;ntilde;o de &lt;code&gt;usize&lt;/code&gt; y tienen la misma alineaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="34b7b49d8b2d0d7a2ec6f158126a2d20e7c98feb" translate="yes" xml:space="preserve">
          <source>are sized but have twice the size of pointers to sized types</source>
          <target state="translated">son de tamaño pero tienen el doble de tamaño de punteros que los tipos de tamaño</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="48778bb6c00326b7e6a0d1662f8a94bbc37c9546" translate="yes" xml:space="preserve">
          <source>args_os</source>
          <target state="translated">args_os</target>
        </trans-unit>
        <trans-unit id="045d233d93fbbdefab87c28c0ad65f24ce0f1c7d" translate="yes" xml:space="preserve">
          <source>arith_offset</source>
          <target state="translated">arith_offset</target>
        </trans-unit>
        <trans-unit id="ed945d6b996ff45657c9dc7772143a932c322b66" translate="yes" xml:space="preserve">
          <source>arm</source>
          <target state="translated">arm</target>
        </trans-unit>
        <trans-unit id="cb90d598760a74967982b66a4ee8011962b92865" translate="yes" xml:space="preserve">
          <source>arm::a32</source>
          <target state="translated">arm::a32</target>
        </trans-unit>
        <trans-unit id="1b11e5878c6b1c79acd37087ac63f075800a10bc" translate="yes" xml:space="preserve">
          <source>arm::t32</source>
          <target state="translated">arm::t32</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="e5ce86c664fd0b87557de3c6117a6d06a224c624" translate="yes" xml:space="preserve">
          <source>array::FixedSizeArray</source>
          <target state="translated">array::FixedSizeArray</target>
        </trans-unit>
        <trans-unit id="bdbfcd958a14c005afa6977c6a738cfad21fc9c2" translate="yes" xml:space="preserve">
          <source>array::IntoIter</source>
          <target state="translated">array::IntoIter</target>
        </trans-unit>
        <trans-unit id="1f643f3f224ce56cf13979ca408c876ab93bb124" translate="yes" xml:space="preserve">
          <source>array::TryFromSliceError</source>
          <target state="translated">array::TryFromSliceError</target>
        </trans-unit>
        <trans-unit id="337e4dae5b9141253751d91127b4ec5b92f43785" translate="yes" xml:space="preserve">
          <source>array::from_mut</source>
          <target state="translated">array::from_mut</target>
        </trans-unit>
        <trans-unit id="fb341a0a5656281f758a3c46a45419f5d2cdad54" translate="yes" xml:space="preserve">
          <source>array::from_ref</source>
          <target state="translated">array::from_ref</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="badc4a91c98d928559c19cee96643cd42e973bcf" translate="yes" xml:space="preserve">
          <source>as the last field, this makes the struct itself a</source>
          <target state="translated">como el último campo,esto hace que la estructura misma sea una</target>
        </trans-unit>
        <trans-unit id="c798375d2a33b0ae1748ea9e4ac742d81db73080" translate="yes" xml:space="preserve">
          <source>as_bytes</source>
          <target state="translated">as_bytes</target>
        </trans-unit>
        <trans-unit id="1f533defd46c67e831964c1e616953a28424b7f5" translate="yes" xml:space="preserve">
          <source>as_bytes_mut</source>
          <target state="translated">as_bytes_mut</target>
        </trans-unit>
        <trans-unit id="52da7662237f69daa7d7a65b736976bff9628709" translate="yes" xml:space="preserve">
          <source>as_mut</source>
          <target state="translated">as_mut</target>
        </trans-unit>
        <trans-unit id="d10eacb9b05c486f78af4f450aa7999a755d7f47" translate="yes" xml:space="preserve">
          <source>as_mut_ptr</source>
          <target state="translated">as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="1424c5f52b2a89c2260a4530461f91fd04cf8846" translate="yes" xml:space="preserve">
          <source>as_ptr</source>
          <target state="translated">as_ptr</target>
        </trans-unit>
        <trans-unit id="7dc5622cc05f24a7d3db4a0f7d0923ecf2e16317" translate="yes" xml:space="preserve">
          <source>as_ref</source>
          <target state="translated">as_ref</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="8ff1681a25b20c801bab8d73419337ee027db723" translate="yes" xml:space="preserve">
          <source>ascii::AsciiExt</source>
          <target state="translated">ascii::AsciiExt</target>
        </trans-unit>
        <trans-unit id="631e6859a5283c4e1135cc6f0054124d31b03481" translate="yes" xml:space="preserve">
          <source>ascii::EscapeDefault</source>
          <target state="translated">ascii::EscapeDefault</target>
        </trans-unit>
        <trans-unit id="e39cf84b9e88706e01aef55a1ee0fd10c8c53f5c" translate="yes" xml:space="preserve">
          <source>ascii::escape_default</source>
          <target state="translated">ascii::escape_default</target>
        </trans-unit>
        <trans-unit id="2445be8241aabd34b47e21a9f3208c3878495b50" translate="yes" xml:space="preserve">
          <source>asm</source>
          <target state="translated">asm</target>
        </trans-unit>
        <trans-unit id="64b5daad5073849378993ba34e058d7008293097" translate="yes" xml:space="preserve">
          <source>assert</source>
          <target state="translated">assert</target>
        </trans-unit>
        <trans-unit id="3840580c19afa4bd03926d19f4f003660cb2b1b8" translate="yes" xml:space="preserve">
          <source>assert_eq</source>
          <target state="translated">assert_eq</target>
        </trans-unit>
        <trans-unit id="a328184c40212d1416d200e858e5d60641623ea2" translate="yes" xml:space="preserve">
          <source>assert_ne</source>
          <target state="translated">assert_ne</target>
        </trans-unit>
        <trans-unit id="95886eb5950d0e3e0f1cf8b99cae0bcda0b8b6bd" translate="yes" xml:space="preserve">
          <source>assignment expressions</source>
          <target state="translated">expresiones de asignación</target>
        </trans-unit>
        <trans-unit id="241954bcee907f91569ccd514a342043fd26e596" translate="yes" xml:space="preserve">
          <source>assignment operator expressions</source>
          <target state="translated">expresiones del operador de asignación</target>
        </trans-unit>
        <trans-unit id="dc4d2630d28bd6a59b5c16b34c34459847319470" translate="yes" xml:space="preserve">
          <source>associated const</source>
          <target state="translated">Const asociada</target>
        </trans-unit>
        <trans-unit id="0cbaf578cca42685324c8949ca6d772281db3705" translate="yes" xml:space="preserve">
          <source>associated constants</source>
          <target state="translated">constantes asociadas</target>
        </trans-unit>
        <trans-unit id="661e458eab49bd0ad82cd227b289bfba18305cab" translate="yes" xml:space="preserve">
          <source>assume</source>
          <target state="translated">assume</target>
        </trans-unit>
        <trans-unit id="fa1755b94391fc7198ecefba153d000ea7c83808" translate="yes" xml:space="preserve">
          <source>asymmetry: if &lt;code&gt;a &amp;lt; b&lt;/code&gt; then &lt;code&gt;!(a &amp;gt; b)&lt;/code&gt;, as well as &lt;code&gt;a &amp;gt; b&lt;/code&gt; implying &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt;; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e04b33fdd186ab6bd2deace04ea6b551b9bd4a" translate="yes" xml:space="preserve">
          <source>async</source>
          <target state="translated">async</target>
        </trans-unit>
        <trans-unit id="4e91475d3fae49d1a8a60862b1dbc2d921e7d999" translate="yes" xml:space="preserve">
          <source>atomic</source>
          <target state="translated">atomic</target>
        </trans-unit>
        <trans-unit id="1034a8bcf2ad5bdd2850f2610b72cc5d8b5cacd0" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_BOOL_INIT</source>
          <target state="translated">atomic::ATOMIC_BOOL_INIT</target>
        </trans-unit>
        <trans-unit id="cb36c03949d5460f110653c4b99850e82c82d39e" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I16_INIT</source>
          <target state="translated">atomic::ATOMIC_I16_INIT</target>
        </trans-unit>
        <trans-unit id="24de024fd396c57aa3f8d28976612731bf63ab57" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I32_INIT</source>
          <target state="translated">atomic::ATOMIC_I32_INIT</target>
        </trans-unit>
        <trans-unit id="353641497ac3b792f0bd7c4ad7ae5317898a5f70" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I64_INIT</source>
          <target state="translated">atomic::ATOMIC_I64_INIT</target>
        </trans-unit>
        <trans-unit id="5a761269fad3a89dc33d8f755274af9d09eff49e" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I8_INIT</source>
          <target state="translated">atomic::ATOMIC_I8_INIT</target>
        </trans-unit>
        <trans-unit id="d03ea86ea8623584b9728ef4029482119760f5c6" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_ISIZE_INIT</source>
          <target state="translated">atomic::ATOMIC_ISIZE_INIT</target>
        </trans-unit>
        <trans-unit id="92332432ba0fbc47a06b86969d84ba4db7cafb48" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U16_INIT</source>
          <target state="translated">atomic::ATOMIC_U16_INIT</target>
        </trans-unit>
        <trans-unit id="6c1385da3b8d9212f7c6f7026e370b634ed8ef6b" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U32_INIT</source>
          <target state="translated">atomic::ATOMIC_U32_INIT</target>
        </trans-unit>
        <trans-unit id="8e01c88191c644638f1a52cdbfb0143307818d5c" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U64_INIT</source>
          <target state="translated">atomic::ATOMIC_U64_INIT</target>
        </trans-unit>
        <trans-unit id="05a5c9ec17d69ac5645d8480a8ba56a3b9f60c10" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U8_INIT</source>
          <target state="translated">atomic::ATOMIC_U8_INIT</target>
        </trans-unit>
        <trans-unit id="ba762c5512ab8a24b14de314147f8bffe57c970f" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_USIZE_INIT</source>
          <target state="translated">atomic::ATOMIC_USIZE_INIT</target>
        </trans-unit>
        <trans-unit id="05de1793602602f47c254dc6cdb8167dc5edc7a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool</source>
          <target state="translated">atomic::AtomicBool</target>
        </trans-unit>
        <trans-unit id="9e447c2ab00cf39b9b1d6620d6a9fed3ea808a70" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::borrow</source>
          <target state="translated">atomic::AtomicBool::borrow</target>
        </trans-unit>
        <trans-unit id="c68ee51e8f6beb9fa67b654fcfe7ef87f8d61549" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::borrow_mut</source>
          <target state="translated">atomic::AtomicBool::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bc7ece4795eca86a32c44d9b7a6d1ee964ec8b04" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_and_swap</source>
          <target state="translated">atomic::AtomicBool::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="01227e5752be472ddee52522cd84b709c04bba82" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_exchange</source>
          <target state="translated">atomic::AtomicBool::compare_exchange</target>
        </trans-unit>
        <trans-unit id="c51061da01ac56bfc7ef042518593dd67a5c3034" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicBool::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="9576bb081dd4bbf07787542167ea0ab69723c39b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::default</source>
          <target state="translated">atomic::AtomicBool::default</target>
        </trans-unit>
        <trans-unit id="e224b6c248d56b984f9726a5beb37a693cd1c26f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_and</source>
          <target state="translated">atomic::AtomicBool::fetch_and</target>
        </trans-unit>
        <trans-unit id="e2669df7c8a6850212a769803528a130a2b8a7c5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_nand</source>
          <target state="translated">atomic::AtomicBool::fetch_nand</target>
        </trans-unit>
        <trans-unit id="fa0c8f48069ecf23ccd8592d95597742aa301c67" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_or</source>
          <target state="translated">atomic::AtomicBool::fetch_or</target>
        </trans-unit>
        <trans-unit id="cb1fc72f7695672c3590d6f3ac06d9ed3870d6d9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_xor</source>
          <target state="translated">atomic::AtomicBool::fetch_xor</target>
        </trans-unit>
        <trans-unit id="8aac84ec1b2dc679800d4128137ddefa4df78ba7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fmt</source>
          <target state="translated">atomic::AtomicBool::fmt</target>
        </trans-unit>
        <trans-unit id="8c34405c7774e5da67ee635b1e41c55c72ca251f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::from</source>
          <target state="translated">atomic::AtomicBool::from</target>
        </trans-unit>
        <trans-unit id="4f92b1b994bacbe7ba2c5bea8ef9d22028a4db02" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::get_mut</source>
          <target state="translated">atomic::AtomicBool::get_mut</target>
        </trans-unit>
        <trans-unit id="8e53a1ed715929c5c080f09402205e9d95990bd7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::into</source>
          <target state="translated">atomic::AtomicBool::into</target>
        </trans-unit>
        <trans-unit id="2749989a620ef7214d755b45f3251ac035fb4a9c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::into_inner</source>
          <target state="translated">atomic::AtomicBool::into_inner</target>
        </trans-unit>
        <trans-unit id="2efae13f5b2a0971201d319863a78cda80b7a900" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::load</source>
          <target state="translated">atomic::AtomicBool::load</target>
        </trans-unit>
        <trans-unit id="f68fd070f0f1344260dab31e9b4695338a5ba485" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::new</source>
          <target state="translated">atomic::AtomicBool::new</target>
        </trans-unit>
        <trans-unit id="1f86f68a036b612d378be870c0d9606e953e7c48" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::store</source>
          <target state="translated">atomic::AtomicBool::store</target>
        </trans-unit>
        <trans-unit id="979bcef2cc797d278750e287864a6718aa6ce759" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::swap</source>
          <target state="translated">atomic::AtomicBool::swap</target>
        </trans-unit>
        <trans-unit id="de75d37b23563f424dafec4869f7fecf9fb72e77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::try_from</source>
          <target state="translated">atomic::AtomicBool::try_from</target>
        </trans-unit>
        <trans-unit id="8a7b63ebd2971777046807fd53d5b5991226d2b1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::try_into</source>
          <target state="translated">atomic::AtomicBool::try_into</target>
        </trans-unit>
        <trans-unit id="35b06bd23a929d5665b1b36f5dad39ad3c49d572" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::type_id</source>
          <target state="translated">atomic::AtomicBool::type_id</target>
        </trans-unit>
        <trans-unit id="4763c7b929cba0a74bfe999658220d6a7af2729a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16</source>
          <target state="translated">atomic::AtomicI16</target>
        </trans-unit>
        <trans-unit id="4a3407a0c208408f64fffcd651dc9e68f2678628" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::borrow</source>
          <target state="translated">atomic::AtomicI16::borrow</target>
        </trans-unit>
        <trans-unit id="7037eb7a323ec4161bf529efcb7b357a6c93f480" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::borrow_mut</source>
          <target state="translated">atomic::AtomicI16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="48609070164ed4bbb83c2b159b883c68021a672f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_and_swap</source>
          <target state="translated">atomic::AtomicI16::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="1fe2f96c308ef6f3b40a75646de550a13724a1f5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_exchange</source>
          <target state="translated">atomic::AtomicI16::compare_exchange</target>
        </trans-unit>
        <trans-unit id="2aa21457fb1c32f17e7367b91c794fde64f446df" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI16::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="799632b0a2380281a16a7e6c7ba965cbe7a8dedc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::default</source>
          <target state="translated">atomic::AtomicI16::default</target>
        </trans-unit>
        <trans-unit id="608c3938543496558fee6ae098033e7192fee777" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_add</source>
          <target state="translated">atomic::AtomicI16::fetch_add</target>
        </trans-unit>
        <trans-unit id="1accec5a63bb7e8931ef4aee6c4b1939e9e5c033" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_and</source>
          <target state="translated">atomic::AtomicI16::fetch_and</target>
        </trans-unit>
        <trans-unit id="68f7561959c96363577e1f69cf706e170b15b971" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_max</source>
          <target state="translated">atomic::AtomicI16::fetch_max</target>
        </trans-unit>
        <trans-unit id="7f6c831b7b705a65008f977164d29ea3da8c4f16" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_min</source>
          <target state="translated">atomic::AtomicI16::fetch_min</target>
        </trans-unit>
        <trans-unit id="1e319a1551d9113cfd4c8d2e7c520bd5aab85b42" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_nand</source>
          <target state="translated">atomic::AtomicI16::fetch_nand</target>
        </trans-unit>
        <trans-unit id="ac0486175db2c33d1793a4f2e5dfe7178abf81f1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_or</source>
          <target state="translated">atomic::AtomicI16::fetch_or</target>
        </trans-unit>
        <trans-unit id="065e2dcf4f6a4454eb6580ea06fa21e93009d938" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_sub</source>
          <target state="translated">atomic::AtomicI16::fetch_sub</target>
        </trans-unit>
        <trans-unit id="22fc903a12f2b17023b59c6aa62820d840711234" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_update</source>
          <target state="translated">atomic::AtomicI16::fetch_update</target>
        </trans-unit>
        <trans-unit id="36b880de08802099718d328a53bc9c940c762ff2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_xor</source>
          <target state="translated">atomic::AtomicI16::fetch_xor</target>
        </trans-unit>
        <trans-unit id="b0461e75adc05e5b3f478464649401bf20bd0785" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fmt</source>
          <target state="translated">atomic::AtomicI16::fmt</target>
        </trans-unit>
        <trans-unit id="5c68ce5e4f3872b3f6a8db280ce1f397536427b4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::from</source>
          <target state="translated">atomic::AtomicI16::from</target>
        </trans-unit>
        <trans-unit id="85d5f213c65716baa177acfed9bba6e56bc8c092" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::get_mut</source>
          <target state="translated">atomic::AtomicI16::get_mut</target>
        </trans-unit>
        <trans-unit id="5af35cdcca6e2d7eeeb0268da8d15d3ca383798a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::into</source>
          <target state="translated">atomic::AtomicI16::into</target>
        </trans-unit>
        <trans-unit id="fd0c45f1d5385723f287e79d69083b5d78513417" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::into_inner</source>
          <target state="translated">atomic::AtomicI16::into_inner</target>
        </trans-unit>
        <trans-unit id="2a86d1845f08b1f6f9de8dab854ffd5944f281db" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::load</source>
          <target state="translated">atomic::AtomicI16::load</target>
        </trans-unit>
        <trans-unit id="a355bbe62c010a6b5ecb8cb2c7a093277b18bc4e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::new</source>
          <target state="translated">atomic::AtomicI16::new</target>
        </trans-unit>
        <trans-unit id="d00cb68b66360ce9a43e35aafe48e8ff0c2f663f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::store</source>
          <target state="translated">atomic::AtomicI16::store</target>
        </trans-unit>
        <trans-unit id="7c19cdcb8dc8c74fcc8fd3f29b46dd2c72892dda" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::swap</source>
          <target state="translated">atomic::AtomicI16::swap</target>
        </trans-unit>
        <trans-unit id="d846a4119052ce671cc1eec70756733f3c9a0b8b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::try_from</source>
          <target state="translated">atomic::AtomicI16::try_from</target>
        </trans-unit>
        <trans-unit id="f92121d1f6656512ce1c0dc89ca64a6879c2fe79" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::try_into</source>
          <target state="translated">atomic::AtomicI16::try_into</target>
        </trans-unit>
        <trans-unit id="678752fc5452c5dcb3a958ac911922fc70f1cfa1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::type_id</source>
          <target state="translated">atomic::AtomicI16::type_id</target>
        </trans-unit>
        <trans-unit id="25c12562a118afb89821c1149f447cbcfef85c8f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32</source>
          <target state="translated">atomic::AtomicI32</target>
        </trans-unit>
        <trans-unit id="5899c06a26c90c55944ef5323b41290afa412ede" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::borrow</source>
          <target state="translated">atomic::AtomicI32::borrow</target>
        </trans-unit>
        <trans-unit id="0966d39a9c446ced0fe44115476f4ff4766599c3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::borrow_mut</source>
          <target state="translated">atomic::AtomicI32::borrow_mut</target>
        </trans-unit>
        <trans-unit id="13a18501ad3adf521679e888018a5454713003ce" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_and_swap</source>
          <target state="translated">atomic::AtomicI32::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="ec2581f11e6f837c0e960b7825f4b082143ca0d5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_exchange</source>
          <target state="translated">atomic::AtomicI32::compare_exchange</target>
        </trans-unit>
        <trans-unit id="b36699c484284aff49f6b79fce15c99a8712bc67" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI32::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="0cb8e46219c011f6ac55b79b5e3a3fa078b60d86" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::default</source>
          <target state="translated">atomic::AtomicI32::default</target>
        </trans-unit>
        <trans-unit id="afd4d186e6b557c1730e240a41b7f1268291a4aa" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_add</source>
          <target state="translated">atomic::AtomicI32::fetch_add</target>
        </trans-unit>
        <trans-unit id="fa601edbd25fd48775781f20f100f8f784b0802e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_and</source>
          <target state="translated">atomic::AtomicI32::fetch_and</target>
        </trans-unit>
        <trans-unit id="bc614c60229af7ecebfb79759565bf3422894c8e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_max</source>
          <target state="translated">atomic::AtomicI32::fetch_max</target>
        </trans-unit>
        <trans-unit id="64024a3f252b44a17ccb8e7c483dd5892e2dd7ec" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_min</source>
          <target state="translated">atomic::AtomicI32::fetch_min</target>
        </trans-unit>
        <trans-unit id="fa15286576c1b5b72e3632d0d8bd8be0df4a41ab" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_nand</source>
          <target state="translated">atomic::AtomicI32::fetch_nand</target>
        </trans-unit>
        <trans-unit id="c3f4e128406fee001d99a1a8910a8ae89882d264" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_or</source>
          <target state="translated">atomic::AtomicI32::fetch_or</target>
        </trans-unit>
        <trans-unit id="c25081618fbe7a3e8d18e0af84198d64a6823d90" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_sub</source>
          <target state="translated">atomic::AtomicI32::fetch_sub</target>
        </trans-unit>
        <trans-unit id="89e3a35480f5f86d305834c916dd65fb914f7794" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_update</source>
          <target state="translated">atomic::AtomicI32::fetch_update</target>
        </trans-unit>
        <trans-unit id="bddbf7266f3bf5687069b3417d75588451464303" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_xor</source>
          <target state="translated">atomic::AtomicI32::fetch_xor</target>
        </trans-unit>
        <trans-unit id="9e02c9847065cfd83e89e0ef1cc2655351ab9653" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fmt</source>
          <target state="translated">atomic::AtomicI32::fmt</target>
        </trans-unit>
        <trans-unit id="df6c50a25963dfc88ceefcd2fce2828c8f503a9d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::from</source>
          <target state="translated">atomic::AtomicI32::from</target>
        </trans-unit>
        <trans-unit id="e446b6cb394d3ef682fdf149c58edb16e1c74405" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::get_mut</source>
          <target state="translated">atomic::AtomicI32::get_mut</target>
        </trans-unit>
        <trans-unit id="5342af1fe3a9cffc7fd36eff6c10bda4ed49cc55" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::into</source>
          <target state="translated">atomic::AtomicI32::into</target>
        </trans-unit>
        <trans-unit id="53bc6a9c61b4afc9fac8c47be255368bc8b7b921" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::into_inner</source>
          <target state="translated">atomic::AtomicI32::into_inner</target>
        </trans-unit>
        <trans-unit id="9e6443bc2098fc93d0dde78516f3baf7576d6779" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::load</source>
          <target state="translated">atomic::AtomicI32::load</target>
        </trans-unit>
        <trans-unit id="460308e80acd1311b8d3ce763be27e96352d5ff8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::new</source>
          <target state="translated">atomic::AtomicI32::new</target>
        </trans-unit>
        <trans-unit id="9173dbe5bc01be1b350ff1c2d67b6fe79ce8e2ed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::store</source>
          <target state="translated">atomic::AtomicI32::store</target>
        </trans-unit>
        <trans-unit id="7baf7fa91d75cf1673c09d46956094386b38d4b9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::swap</source>
          <target state="translated">atomic::AtomicI32::swap</target>
        </trans-unit>
        <trans-unit id="72886f817c275edd2b618836089bf7b2281241ea" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::try_from</source>
          <target state="translated">atomic::AtomicI32::try_from</target>
        </trans-unit>
        <trans-unit id="bd81c103b837f318ad018fbd088f2d0800c992cf" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::try_into</source>
          <target state="translated">atomic::AtomicI32::try_into</target>
        </trans-unit>
        <trans-unit id="1bfb15ee005dfd6a4aaf4b6239de0de2eb94f618" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::type_id</source>
          <target state="translated">atomic::AtomicI32::type_id</target>
        </trans-unit>
        <trans-unit id="4658c9137c64df71237409c2c82f3f80f256ea9f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64</source>
          <target state="translated">atomic::AtomicI64</target>
        </trans-unit>
        <trans-unit id="53cb25ac594629dd0b57f658fcb961f354882ede" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::borrow</source>
          <target state="translated">atomic::AtomicI64::borrow</target>
        </trans-unit>
        <trans-unit id="f3191a16fe03e553dfaa29b6cd62f203acacf84a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::borrow_mut</source>
          <target state="translated">atomic::AtomicI64::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fb3a72e8b9c3dc5229590d7187bbcfaf6e279570" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_and_swap</source>
          <target state="translated">atomic::AtomicI64::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="f64bbb7220344e1488b1372d516e0658dd8b9d80" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_exchange</source>
          <target state="translated">atomic::AtomicI64::compare_exchange</target>
        </trans-unit>
        <trans-unit id="70a6fd8fa523244e0ddacae1678954fd98414732" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI64::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="1626a76df410c0434b1acf1260ff369fdeb27dd6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::default</source>
          <target state="translated">atomic::AtomicI64::default</target>
        </trans-unit>
        <trans-unit id="bf317f1c5437db6d11d6b2f8091487f98921632b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_add</source>
          <target state="translated">atomic::AtomicI64::fetch_add</target>
        </trans-unit>
        <trans-unit id="bb415709063b27abb49ee436a390a7fd20ee569c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_and</source>
          <target state="translated">atomic::AtomicI64::fetch_and</target>
        </trans-unit>
        <trans-unit id="a32efec4906cc6a9b404650721d58939a1d7dc7b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_max</source>
          <target state="translated">atomic::AtomicI64::fetch_max</target>
        </trans-unit>
        <trans-unit id="a3ecc0c203a0c7ed8230ab4686b7d22b35a773f3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_min</source>
          <target state="translated">atomic::AtomicI64::fetch_min</target>
        </trans-unit>
        <trans-unit id="021d477c83bd95c07a03e3d9686a861d8f2f6fc3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_nand</source>
          <target state="translated">atomic::AtomicI64::fetch_nand</target>
        </trans-unit>
        <trans-unit id="2a9d4a8d3bd274c31d21399a4f7b4a37ff8e6e8f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_or</source>
          <target state="translated">atomic::AtomicI64::fetch_or</target>
        </trans-unit>
        <trans-unit id="2922d5f38306e02c9ab39174e14d0e1ed3706be2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_sub</source>
          <target state="translated">atomic::AtomicI64::fetch_sub</target>
        </trans-unit>
        <trans-unit id="e2b594a7064368f7bc7037c4eb89741a6503a8a6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_update</source>
          <target state="translated">atomic::AtomicI64::fetch_update</target>
        </trans-unit>
        <trans-unit id="09f908d0dcb109a257c650a0f1639a4d211cb86d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_xor</source>
          <target state="translated">atomic::AtomicI64::fetch_xor</target>
        </trans-unit>
        <trans-unit id="8d70028e6173a491bd38b0cbd066bfd416a9c6c8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fmt</source>
          <target state="translated">atomic::AtomicI64::fmt</target>
        </trans-unit>
        <trans-unit id="d2a525c38f4b819c856c4da1c85863d9df5ce17d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::from</source>
          <target state="translated">atomic::AtomicI64::from</target>
        </trans-unit>
        <trans-unit id="c5ab7a5455d77b324da2665a43c9c5dfcae8b693" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::get_mut</source>
          <target state="translated">atomic::AtomicI64::get_mut</target>
        </trans-unit>
        <trans-unit id="7b23e4478a8b0229d75220946ffe26ec3f5305a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::into</source>
          <target state="translated">atomic::AtomicI64::into</target>
        </trans-unit>
        <trans-unit id="9a7d511910e7c6da7cf99af9154e139ed48d61bd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::into_inner</source>
          <target state="translated">atomic::AtomicI64::into_inner</target>
        </trans-unit>
        <trans-unit id="380b0517f9fbd72aea00634fc1c0aa148e65e79b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::load</source>
          <target state="translated">atomic::AtomicI64::load</target>
        </trans-unit>
        <trans-unit id="c5edd208d19895bd88b8a21af51e2091af80969f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::new</source>
          <target state="translated">atomic::AtomicI64::new</target>
        </trans-unit>
        <trans-unit id="7667bf835c6c6d4d84faf5cfd9aa1fc4321d4a75" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::store</source>
          <target state="translated">atomic::AtomicI64::store</target>
        </trans-unit>
        <trans-unit id="fece5af0fd8c79b5c66f9d33c1cad15909803b49" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::swap</source>
          <target state="translated">atomic::AtomicI64::swap</target>
        </trans-unit>
        <trans-unit id="592113f7e67fdb170ac5350d72c565a5df32f97b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::try_from</source>
          <target state="translated">atomic::AtomicI64::try_from</target>
        </trans-unit>
        <trans-unit id="f1f67adfce7ebc9bdfffea192a83bac9b0da8836" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::try_into</source>
          <target state="translated">atomic::AtomicI64::try_into</target>
        </trans-unit>
        <trans-unit id="d02fefa9b5dddcae5a446add46900a74cc9cfa0c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::type_id</source>
          <target state="translated">atomic::AtomicI64::type_id</target>
        </trans-unit>
        <trans-unit id="17577aff5189c847532030470e98a297e268a8a4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8</source>
          <target state="translated">atomic::AtomicI8</target>
        </trans-unit>
        <trans-unit id="291a36b862275d6a3fcb7aa1c2a03435567ce5e4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::borrow</source>
          <target state="translated">atomic::AtomicI8::borrow</target>
        </trans-unit>
        <trans-unit id="fa3d4b8caeaa1c5d4645e4134862b1de3cd5d8e1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::borrow_mut</source>
          <target state="translated">atomic::AtomicI8::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4a73c1b80e2d66316009eccbc375c82eb94c15d3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_and_swap</source>
          <target state="translated">atomic::AtomicI8::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="f27ce33aaadced0c74f23e43576981e9bb80f428" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_exchange</source>
          <target state="translated">atomic::AtomicI8::compare_exchange</target>
        </trans-unit>
        <trans-unit id="a1111a9ad31be46a4ec2448191dba1cd8e8302b8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI8::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="385fd670ccda01368b84be32c5edd5fa14fe0aed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::default</source>
          <target state="translated">atomic::AtomicI8::default</target>
        </trans-unit>
        <trans-unit id="a56503da5fb407ffdbaacb272679ea4f711284d2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_add</source>
          <target state="translated">atomic::AtomicI8::fetch_add</target>
        </trans-unit>
        <trans-unit id="54e0d7d5df084eff47d270846b00a3544a0c3d1b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_and</source>
          <target state="translated">atomic::AtomicI8::fetch_and</target>
        </trans-unit>
        <trans-unit id="1a9ee3da7b6e91f402617c0e1411aa623933681e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_max</source>
          <target state="translated">atomic::AtomicI8::fetch_max</target>
        </trans-unit>
        <trans-unit id="240eb67aaab8795e70f159b3ba007840ab9acd7b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_min</source>
          <target state="translated">atomic::AtomicI8::fetch_min</target>
        </trans-unit>
        <trans-unit id="b6340fda6d30f88a99da5616b0ce6c80d8efa1bd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_nand</source>
          <target state="translated">atomic::AtomicI8::fetch_nand</target>
        </trans-unit>
        <trans-unit id="673f0afe2eb4df2cefeb17918fef4f8c3543ed66" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_or</source>
          <target state="translated">atomic::AtomicI8::fetch_or</target>
        </trans-unit>
        <trans-unit id="a3d50c60f36eea518c58fb980d20f30650813fc6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_sub</source>
          <target state="translated">atomic::AtomicI8::fetch_sub</target>
        </trans-unit>
        <trans-unit id="c4403b7778fc7040eb2075081873b3e997227837" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_update</source>
          <target state="translated">atomic::AtomicI8::fetch_update</target>
        </trans-unit>
        <trans-unit id="ddc8a90b9080f5825064e468f5a5623d389a3080" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_xor</source>
          <target state="translated">atomic::AtomicI8::fetch_xor</target>
        </trans-unit>
        <trans-unit id="f197bb76fcb1371ee491f486df2a69df3a984bd0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fmt</source>
          <target state="translated">atomic::AtomicI8::fmt</target>
        </trans-unit>
        <trans-unit id="5b5689ffc805240b6b054886dfa88a6a2f1b2e44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::from</source>
          <target state="translated">atomic::AtomicI8::from</target>
        </trans-unit>
        <trans-unit id="637212c767e002698b6d1077e332796190019f83" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::get_mut</source>
          <target state="translated">atomic::AtomicI8::get_mut</target>
        </trans-unit>
        <trans-unit id="1f49ff8f6d891a2817d52c406e0a63f6457bf9da" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::into</source>
          <target state="translated">atomic::AtomicI8::into</target>
        </trans-unit>
        <trans-unit id="de9fe5c75d045664ef2b70d646c3622d2abd3dd9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::into_inner</source>
          <target state="translated">atomic::AtomicI8::into_inner</target>
        </trans-unit>
        <trans-unit id="85a8f16b9c13d90146705e863b95304c7b396b44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::load</source>
          <target state="translated">atomic::AtomicI8::load</target>
        </trans-unit>
        <trans-unit id="c61caab41602c693ef1233c9dfb3e4264da9bcbd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::new</source>
          <target state="translated">atomic::AtomicI8::new</target>
        </trans-unit>
        <trans-unit id="69fb793bdcdf5d4a113b5eb2f377cd95a5425f47" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::store</source>
          <target state="translated">atomic::AtomicI8::store</target>
        </trans-unit>
        <trans-unit id="e718bcc3cf78b6180303cdba1952f40aa73a78e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::swap</source>
          <target state="translated">atomic::AtomicI8::swap</target>
        </trans-unit>
        <trans-unit id="861585dbeb7587c43d91f923e5ea5f81d9b01bb5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::try_from</source>
          <target state="translated">atomic::AtomicI8::try_from</target>
        </trans-unit>
        <trans-unit id="ec6b2c1f0e497b05fd1dda3c94b64badbfedff38" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::try_into</source>
          <target state="translated">atomic::AtomicI8::try_into</target>
        </trans-unit>
        <trans-unit id="4ccea09c54fa7e235de836c6adc902cdbaa72a62" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::type_id</source>
          <target state="translated">atomic::AtomicI8::type_id</target>
        </trans-unit>
        <trans-unit id="bef11aed7b966a22dd0007945fff322aa0bfaeee" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize</source>
          <target state="translated">atomic::AtomicIsize</target>
        </trans-unit>
        <trans-unit id="54362f382261d7c1ccbcff1042ffd4c2ab47b3f0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::borrow</source>
          <target state="translated">atomic::AtomicIsize::borrow</target>
        </trans-unit>
        <trans-unit id="b8eeee1a6a0b27c83006c5323afccf4f5cc4296b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::borrow_mut</source>
          <target state="translated">atomic::AtomicIsize::borrow_mut</target>
        </trans-unit>
        <trans-unit id="860a8fa7987b24c124e817e5e9c5bc53cd4f1b51" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_and_swap</source>
          <target state="translated">atomic::AtomicIsize::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="d8ddd0bb097ba68565eaa521c4435e06c5836b77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_exchange</source>
          <target state="translated">atomic::AtomicIsize::compare_exchange</target>
        </trans-unit>
        <trans-unit id="11462e1063e8ec917bcaf625a2a685eb6867e936" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicIsize::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="fb4dcb6189679a882dcb5af37d698632c09ee34d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::default</source>
          <target state="translated">atomic::AtomicIsize::default</target>
        </trans-unit>
        <trans-unit id="36acbea7608269e507f89904aee4eab857a73815" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_add</source>
          <target state="translated">atomic::AtomicIsize::fetch_add</target>
        </trans-unit>
        <trans-unit id="53cea8a84e891cdd8fac3b13b8f267a1a3267068" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_and</source>
          <target state="translated">atomic::AtomicIsize::fetch_and</target>
        </trans-unit>
        <trans-unit id="f40ee191fc8f9035709e33e4c8994d19801e6c03" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_max</source>
          <target state="translated">atomic::AtomicIsize::fetch_max</target>
        </trans-unit>
        <trans-unit id="ec28eac891bbe9b9cb1a93426cf981dba1d2b7a4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_min</source>
          <target state="translated">atomic::AtomicIsize::fetch_min</target>
        </trans-unit>
        <trans-unit id="d2c06deae406cf8d6788b3298755b5bf58942d61" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_nand</source>
          <target state="translated">atomic::AtomicIsize::fetch_nand</target>
        </trans-unit>
        <trans-unit id="be4282326da0d3952ba53d457a077ca56259827b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_or</source>
          <target state="translated">atomic::AtomicIsize::fetch_or</target>
        </trans-unit>
        <trans-unit id="d10d494157b1500633d33fe7cd7a8876ebf3850e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_sub</source>
          <target state="translated">atomic::AtomicIsize::fetch_sub</target>
        </trans-unit>
        <trans-unit id="dd30ef098d0b3aeaa27d2c469327853fe0a8b495" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_update</source>
          <target state="translated">atomic::AtomicIsize::fetch_update</target>
        </trans-unit>
        <trans-unit id="365d55c3894156f5b3bb1f5c68fd1b8c1dd71d30" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_xor</source>
          <target state="translated">atomic::AtomicIsize::fetch_xor</target>
        </trans-unit>
        <trans-unit id="90785850751942b1854862cf61f3fabd9b8f95ad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fmt</source>
          <target state="translated">atomic::AtomicIsize::fmt</target>
        </trans-unit>
        <trans-unit id="0c195e3dc08f6b0f48e0edd97391ccec6c4ae345" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::from</source>
          <target state="translated">atomic::AtomicIsize::from</target>
        </trans-unit>
        <trans-unit id="cef7ec90446c5e27dda6c36747015381178e62a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::get_mut</source>
          <target state="translated">atomic::AtomicIsize::get_mut</target>
        </trans-unit>
        <trans-unit id="d1a77ddb303e9ecaf6f571ddcacff3327098c635" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::into</source>
          <target state="translated">atomic::AtomicIsize::into</target>
        </trans-unit>
        <trans-unit id="2f4209d22c7c9b9e685629b4d20af77def91d7a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::into_inner</source>
          <target state="translated">atomic::AtomicIsize::into_inner</target>
        </trans-unit>
        <trans-unit id="929808027e2a00345f1fae855cc387bbbca41e16" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::load</source>
          <target state="translated">atomic::AtomicIsize::load</target>
        </trans-unit>
        <trans-unit id="d2463de923e167b9c3bd299a749c9810ab0c506d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::new</source>
          <target state="translated">atomic::AtomicIsize::new</target>
        </trans-unit>
        <trans-unit id="887e06213848ca8fefff82251c27d6968b165677" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::store</source>
          <target state="translated">atomic::AtomicIsize::store</target>
        </trans-unit>
        <trans-unit id="a6b84e8aafa304d221a92f9d3fad7481b107d7ad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::swap</source>
          <target state="translated">atomic::AtomicIsize::swap</target>
        </trans-unit>
        <trans-unit id="051ce1bbf8c84e3508bf6cf26fc776345949d682" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::try_from</source>
          <target state="translated">atomic::AtomicIsize::try_from</target>
        </trans-unit>
        <trans-unit id="8137192e5ce3dfcca13f075de55facc367d6ebe8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::try_into</source>
          <target state="translated">atomic::AtomicIsize::try_into</target>
        </trans-unit>
        <trans-unit id="e3005290bf2064df8df962c46d0a13a88fe8774f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::type_id</source>
          <target state="translated">atomic::AtomicIsize::type_id</target>
        </trans-unit>
        <trans-unit id="2a9a75a6153941215c450acaf58a09f098116cd8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr</source>
          <target state="translated">atomic::AtomicPtr</target>
        </trans-unit>
        <trans-unit id="5aa3aa81e10ce2d842b3fa40a197f9d21688a64a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::borrow</source>
          <target state="translated">atomic::AtomicPtr::borrow</target>
        </trans-unit>
        <trans-unit id="a83d827fd54d17d30ac9a3174fd74cba0738394e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::borrow_mut</source>
          <target state="translated">atomic::AtomicPtr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="80da036e02670f34e9680bdd25c9c54785c8b061" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_and_swap</source>
          <target state="translated">atomic::AtomicPtr::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="62e835425c0b87e707dd159c4c10562023310e25" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_exchange</source>
          <target state="translated">atomic::AtomicPtr::compare_exchange</target>
        </trans-unit>
        <trans-unit id="b7be432813963fe0b473fee8c9339859bdbe2842" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicPtr::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="0fa71e5038cd370853c4f8119bdf482da650b042" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::default</source>
          <target state="translated">atomic::AtomicPtr::default</target>
        </trans-unit>
        <trans-unit id="ffc228bfb08868cad1a08f47c5a9b0237dbb31c6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::fmt</source>
          <target state="translated">atomic::AtomicPtr::fmt</target>
        </trans-unit>
        <trans-unit id="d7e9d7fe6a8bb3b9c070bdbabff51fd2781444f4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::from</source>
          <target state="translated">atomic::AtomicPtr::from</target>
        </trans-unit>
        <trans-unit id="dad7516541121490eb576091d4eea8ac81d68f07" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::get_mut</source>
          <target state="translated">atomic::AtomicPtr::get_mut</target>
        </trans-unit>
        <trans-unit id="ab6f341aa5b1f4767a60644a4bca4c81139656a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::into</source>
          <target state="translated">atomic::AtomicPtr::into</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
